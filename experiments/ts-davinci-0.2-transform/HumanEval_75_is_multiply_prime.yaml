name: HumanEval_75_is_multiply_prime
language: ts
prompt: "//Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n// and false otherwise.\n// Knowing that (a) is less then\
  \ 100. \n// Example:\n// >>> is_multiply_prime(30)\n// true\n// 30 = 2 * 3 * 5\n\
  function is_multiply_prime(a: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_multiply_prime;\n  assert.deepEqual(candidate(5),false);\n\
  \  assert.deepEqual(candidate(30),true);\n  assert.deepEqual(candidate(8),true);\n\
  \  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(125),true);\n\
  \  assert.deepEqual(candidate(105),true);\n  assert.deepEqual(candidate(126),false);\n\
  \  assert.deepEqual(candidate(729),false);\n  assert.deepEqual(candidate(891),false);\n\
  \  assert.deepEqual(candidate(1001),true);\n}\n\ntest();"
completions: ["    let result: boolean = false;\n    for (let i: number = 2; i < a;\
    \ i++) {\n        if (a % i == 0) {\n            for (let j: number = 2; j < a;\
    \ j++) {\n                if (a % j == 0) {\n                    for (let k: number\
    \ = 2; k < a; k++) {\n                        if (a % k == 0) {\n            \
    \                if (a == i * j * k) {\n                                result\
    \ = true;\n                            }\n                        }\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime: boolean\
    \ = true;\n    for (let i: number = 2; i < a; i++) {\n        if (a % i === 0)\
    \ {\n            isPrime = false;\n        }\n    }\n    return isPrime;\n}\n",
  "    let prime_numbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_length:\
    \ number = prime_numbers.length;\n    let is_multiply_prime: boolean = false;\n\
    \    for (let i: number = 0; i < prime_numbers_length; i++) {\n        for (let\
    \ j: number = 0; j < prime_numbers_length; j++) {\n            for (let k: number\
    \ = 0; k < prime_numbers_length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] === a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let primes: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (is_prime(i)) {\n            primes.push(i);\n        }\n    }\n  \
    \  for (let i: number = 0; i < primes.length; i++) {\n        for (let j: number\
    \ = 0; j < primes.length; j++) {\n            for (let k: number = 0; k < primes.length;\
    \ k++) {\n                if (primes[i] * primes[j] * primes[k] === a) {\n   \
    \                 result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ result: boolean = false;\n    let prime_numbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            prime_numbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime_numbers.length; i++)\
    \ {\n        for (let j: number = 0; j < prime_numbers.length; j++) {\n      \
    \      for (let k: number = 0; k < prime_numbers.length; k++) {\n            \
    \    if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] === a) {\n   \
    \                 result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime:\
    \ boolean = true;\n    let isMultiplyPrime: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        for (let\
    \ j: number = 2; j < i; j++) {\n            if (i % j === 0) {\n             \
    \   isPrime = false;\n                break;\n            }\n        }\n     \
    \   if (isPrime) {\n            primeNumbers.push(i);\n        }\n        isPrime\
    \ = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        isMultiplyPrime = true;\n                }\n            }\n        }\n\
    \    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let primeNumbersCount:\
    \ number = 0;\n    let result: boolean = false;\n    for (let i: number = 0; i\
    \ < primeNumbers.length; i++) {\n        if (a % primeNumbers[i] === 0) {\n  \
    \          primeNumbersCount++;\n        }\n    }\n    if (primeNumbersCount ===\
    \ 3) {\n        result = true;\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n\
    console.log(is_multiply_prime(31));\n", "    let result: boolean = false;\n  \
    \  let primeNumbers: number[] = [];\n    let counter: number = 0;\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        counter++;\n                }\n            }\n        }\n    }\n    if\
    \ (counter > 0) {\n        result = true;\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let result: boolean = false;\n\
    \    for (let i: number = 0; i < prime.length; i++) {\n        for (let j: number\
    \ = 0; j < prime.length; j++) {\n            for (let k: number = 0; k < prime.length;\
    \ k++) {\n                if (prime[i] * prime[j] * prime[k] == a) {\n       \
    \             result = true;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ prime = true;\n    for (let i = 2; i < a; i++) {\n        if (a % i === 0) {\n\
    \            prime = false;\n        }\n    }\n    return prime;\n}\n", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    let primeNumbersLength: number = primeNumbers.length;\n    let primeNumbersIndex:\
    \ number = 0;\n    let primeNumbersIndex2: number = 0;\n    let primeNumbersIndex3:\
    \ number = 0;\n    let primeNumbersIndex4: number = 0;\n    let primeNumbersIndex5:\
    \ number = 0;\n    let primeNumbersIndex6: number = 0;\n    let primeNumbersIndex7:\
    \ number = 0;\n    let primeNumbersIndex8: number = 0;\n    let primeNumbersIndex9:\
    \ number = 0;\n    let primeNumbersIndex10: number = 0;\n    let primeNumbersIndex11:\
    \ number = 0;\n    let primeNumbersIndex12: number = 0;\n    let primeNumbersIndex13:\
    \ number = 0;\n    let primeNumbersIndex14: number = 0;\n    let primeNumbersIndex15:\
    \ number = 0;\n    let primeNumbersIndex16: number = 0;\n    let primeNumbersIndex17:\
    \ number = 0;\n    let primeNumbersIndex18: number = 0;\n    let primeNumbersIndex19:\
    \ number = 0;\n    let primeNumbersIndex20: number = 0;\n    let primeNumbersIndex21:\
    \ number = 0;\n    let primeNumbersIndex22: number = 0;\n    let primeNumbersIndex23:\
    \ number = 0;\n    let primeNumbersIndex24: number = 0;\n    let primeNumbersIndex25:\
    \ number = 0;\n    let primeNumbersIndex26: number = 0;\n    let primeNumbersIndex27:\
    \ number = 0;\n    let primeNumbersIndex28: number = 0;\n    let primeNumbersIndex29:\
    \ number = 0;\n    let primeNumbersIndex30: number = 0;\n    let primeNumbersIndex31:\
    \ number = 0;\n    let primeNumbersIndex32: number = 0;\n    let primeNumbersIndex33:\
    \ number = 0;\n    let primeNumbersIndex34: number = 0;\n    let primeNumbersIndex35:\
    \ number = 0;\n    let primeNumbersIndex36: number =", "    let prime_numbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            prime_numbers.push(i);\n        }\n    }\n    let result: boolean\
    \ = false;\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n   \
    \     for (let j: number = 0; j < prime_numbers.length; j++) {\n            for\
    \ (let k: number = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] === a) {\n                    result =\
    \ true;\n                }\n            }\n        }\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let prime_numbers: number[] =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    let result: boolean = false;\n    for (let i: number\
    \ = 0; i < prime_numbers.length; i++) {\n        for (let j: number = 0; j < prime_numbers.length;\
    \ j++) {\n            for (let k: number = 0; k < prime_numbers.length; k++) {\n\
    \                if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] ==\
    \ a) {\n                    result = true;\n                }\n            }\n\
    \        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    let isPrime: boolean = true;\n    let isMultiplyPrime:\
    \ boolean = false;\n    let counter: number = 0;\n    let primeNumbers: number[]\
    \ = [];\n    for (let i: number = 2; i < a; i++) {\n        for (let j: number\
    \ = 2; j < i; j++) {\n            if (i % j === 0) {\n                isPrime\
    \ = false;\n            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 counter++;\n                }\n            }\n        }\n  \
    \  }\n    if (counter > 0) {\n        isMultiplyPrime = true;\n    }\n    return\
    \ isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers:\
    \ number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let primeNumbersOfA: number[] = [];\n\
    \    for (let i: number = 0; i < primeNumbers.length; i++) {\n        if (a %\
    \ primeNumbers[i] === 0) {\n            primeNumbersOfA.push(primeNumbers[i]);\n\
    \        }\n    }\n    if (primeNumbersOfA.length === 3) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let isPrime: boolean = true;\n    let isMultiply:\
    \ boolean = false;\n    let count: number = 0;\n    for (let i: number = 2; i\
    \ < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n            if (i\
    \ % j == 0) {\n                isPrime = false;\n                break;\n    \
    \        }\n        }\n        if (isPrime) {\n            if (a % i == 0) {\n\
    \                count++;\n            }\n        }\n        isPrime = true;\n\
    \    }\n    if (count == 3) {\n        isMultiply = true;\n    }\n    return isMultiply;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let is_prime: boolean = true;\n\
    \    let is_multiply_prime: boolean = false;\n    let count: number = 0;\n   \
    \ for (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i;\
    \ j++) {\n            if (i % j == 0) {\n                is_prime = false;\n \
    \               break;\n            }\n        }\n        if (is_prime && a %\
    \ i == 0) {\n            count++;\n        }\n        is_prime = true;\n    }\n\
    \    if (count == 3) {\n        is_multiply_prime = true;\n    }\n    return is_multiply_prime;\n\
    }\n", "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (a % i === 0) {\n            isPrime = false;\n        }\n   \
    \ }\n    return isPrime;\n}\n", "    let isPrime: boolean = true;\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (a % i === 0) {\n            isPrime\
    \ = false;\n        }\n    }\n    return isPrime;\n}\n", "    let result: boolean\
    \ = false;\n    for (let i: number = 2; i < a; i++) {\n        if (a % i == 0)\
    \ {\n            for (let j: number = 2; j < a; j++) {\n                if (a\
    \ % j == 0) {\n                    for (let k: number = 2; k < a; k++) {\n   \
    \                     if (a % k == 0) {\n                            if (a ==\
    \ i * j * k) {\n                                result = true;\n             \
    \               }\n                        }\n                    }\n        \
    \        }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = true;\n    let is_multiply_prime: boolean = false;\n\
    \    let prime_numbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j == 0)\
    \ {\n                is_prime = false;\n            }\n        }\n        if (is_prime)\
    \ {\n            prime_numbers.push(i);\n        }\n        is_prime = true;\n\
    \    }\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n       \
    \ for (let j: number = 0; j < prime_numbers.length; j++) {\n            for (let\
    \ k: number = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\n",
  "    let isPrime: boolean = true;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j === 0) {\n                isPrime = false;\n      \
    \          break;\n            }\n        }\n        if (isPrime) {\n        \
    \    primeNumbers.push(i);\n        }\n        isPrime = true;\n    }\n    let\
    \ isMultiplyPrime: boolean = false;\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 isMultiplyPrime = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let counter: number = 0;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i == 0) {\n            counter++;\n\
    \        }\n    }\n    if (counter == 2) {\n        result = true;\n    }\n  \
    \  return result;\n}\n", "    let is_prime: boolean = true;\n    let is_multiply_prime:\
    \ boolean = false;\n    let counter: number = 0;\n    let i: number = 2;\n   \
    \ let j: number = 2;\n    let k: number = 2;\n    while (i < a) {\n        while\
    \ (j < a) {\n            while (k < a) {\n                if (i * j * k == a)\
    \ {\n                    is_multiply_prime = true;\n                    counter++;\n\
    \                }\n                k++;\n            }\n            j++;\n  \
    \      }\n        i++;\n    }\n    if (counter == 1) {\n        return is_multiply_prime;\n\
    \    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let prime_numbers: number[] = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    let result: boolean = false;\n    for (let i: number = 0; i < prime_numbers.length;\
    \ i++) {\n        for (let j: number = 0; j < prime_numbers.length; j++) {\n \
    \           for (let k: number = 0; k < prime_numbers.length; k++) {\n       \
    \         if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a) {\n\
    \                    result = true;\n                }\n            }\n      \
    \  }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", " \
    \   let is_prime = true;\n    for (let i = 2; i < a; i++) {\n        if (a % i\
    \ == 0) {\n            is_prime = false;\n            break;\n        }\n    }\n\
    \    return is_prime;\n}\n", "  let result: boolean = false;\n  let primeNumbers:\
    \ number[] = [];\n  for (let i: number = 2; i < a; i++) {\n    if (is_prime(i))\
    \ {\n      primeNumbers.push(i);\n    }\n  }\n  for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n    for (let j: number = 0; j < primeNumbers.length; j++) {\n      for\
    \ (let k: number = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n          result = true;\n   \
    \     }\n      }\n    }\n  }\n  return result;\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "  let primeNumbers: number[] = [];\n  for (let i: number = 2; i < a; i++) {\n \
    \   if (is_prime(i)) {\n      primeNumbers.push(i);\n    }\n  }\n  let isMultiplyPrime:\
    \ boolean = false;\n  for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \    for (let j: number = 0; j < primeNumbers.length; j++) {\n      for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n          isMultiplyPrime = true;\n        }\n \
    \     }\n    }\n  }\n  return isMultiplyPrime;\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let counter: number = 0;\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (a % i == 0) {\n            counter++;\n        }\n\
    \    }\n    if (counter == 2) {\n        result = true;\n    }\n    return result;\n\
    }\n", "    let is_prime: boolean = true;\n    let is_multiply_prime: boolean =\
    \ false;\n    let counter: number = 0;\n    for (let i: number = 2; i < a; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j == 0)\
    \ {\n                is_prime = false;\n                break;\n            }\n\
    \        }\n        if (is_prime) {\n            if (a % i == 0) {\n         \
    \       counter++;\n            }\n        }\n        is_prime = true;\n    }\n\
    \    if (counter == 3) {\n        is_multiply_prime = true;\n    }\n    return\
    \ is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n", "  let isPrime:\
    \ boolean = true;\n  for (let i: number = 2; i < a; i++) {\n    if (a % i ===\
    \ 0) {\n      isPrime = false;\n    }\n  }\n  return isPrime;\n}\n", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "  let result:\
    \ boolean = false;\n  let primeNumbers: number[] = [];\n  for (let i: number =\
    \ 2; i < a; i++) {\n    if (is_prime(i)) {\n      primeNumbers.push(i);\n    }\n\
    \  }\n  for (let i: number = 0; i < primeNumbers.length; i++) {\n    for (let\
    \ j: number = 0; j < primeNumbers.length; j++) {\n      for (let k: number = 0;\
    \ k < primeNumbers.length; k++) {\n        if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n          result = true;\n        }\n      }\n \
    \   }\n  }\n  return result;\n}\n\nconsole.log(is_multiply_prime(30));\n", " \
    \   let isPrime: boolean = true;\n    let isMultiplyPrime: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j ===\
    \ 0) {\n                isPrime = false;\n                break;\n           \
    \ }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n  \
    \      }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 isMultiplyPrime = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime:\
    \ boolean = true;\n    for (let i: number = 2; i < a; i++) {\n        if (a %\
    \ i === 0) {\n            isPrime = false;\n        }\n    }\n    return isPrime;\n\
    }\n", "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (a % i === 0) {\n            isPrime = false;\n        }\n   \
    \ }\n    return isPrime;\n}\n", "    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    let primeNumbersLength: number = primeNumbers.length;\n\
    \    let isMultiplyPrime: boolean = false;\n    for (let i: number = 0; i < primeNumbersLength;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbersLength; j++) {\n   \
    \         for (let k: number = 0; k < primeNumbersLength; k++) {\n           \
    \     if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n     \
    \               isMultiplyPrime = true;\n                }\n            }\n  \
    \      }\n    }\n    return isMultiplyPrime;\n}\n", "    let isPrime: boolean\
    \ = true;\n    for (let i: number = 2; i < a; i++) {\n        if (a % i === 0)\
    \ {\n            isPrime = false;\n        }\n    }\n    return isPrime;\n}\n",
  "    let isPrime: boolean = true;\n    let counter: number = 0;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i == 0) {\n            isPrime =\
    \ false;\n            break;\n        }\n    }\n    if (isPrime) {\n        counter++;\n\
    \    }\n    return isPrime;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n      \
    \  if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n    return\
    \ isPrime;\n}\n", "    let isPrime: boolean = true;\n    for (let i: number =\
    \ 2; i < a; i++) {\n        if (a % i === 0) {\n            isPrime = false;\n\
    \        }\n    }\n    return isPrime;\n}\n", "    let primeNumbers: number[]\
    \ = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n\
    \            primeNumbers.push(i);\n        }\n    }\n    for (let i: number =\
    \ 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\n", "    let primeNumbers: number[] = [];\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n     \
    \       primeNumbers.push(i);\n        }\n    }\n    for (let i: number = 0; i\
    \ < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n", " \
    \   let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\n", "    let result: boolean = false;\n  \
    \  let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n  \
    \  }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\n",
  "    let primeNumbers: number[] = [];\n    let isPrime: boolean = true;\n    for\
    \ (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j === 0) {\n                isPrime = false;\n      \
    \          break;\n            }\n        }\n        if (isPrime) {\n        \
    \    primeNumbers.push(i);\n        }\n        isPrime = true;\n    }\n    let\
    \ result: boolean = false;\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\n", "    let result: boolean = false;\n    let primeNumbers:\
    \ number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let primeNumbersLength: number = primeNumbers.length;\n\
    \    let primeNumbersLength2: number = primeNumbersLength;\n    let primeNumbersLength3:\
    \ number = primeNumbersLength;\n    let primeNumbersLength4: number = primeNumbersLength;\n\
    \    for (let i: number = 0; i < primeNumbersLength; i++) {\n        for (let\
    \ j: number = 0; j < primeNumbersLength2; j++) {\n            for (let k: number\
    \ = 0; k < primeNumbersLength3; k++) {\n                for (let l: number = 0;\
    \ l < primeNumbersLength4; l++) {\n                    if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] * primeNumbers[l] === a) {\n                        result\
    \ = true;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "  let\
    \ isPrime: boolean = true;\n  let isMultiplyPrime: boolean = false;\n  let primeNumbers:\
    \ number[] = [];\n  for (let i: number = 2; i < a; i++) {\n    for (let j: number\
    \ = 2; j < i; j++) {\n      if (i % j === 0) {\n        isPrime = false;\n   \
    \   }\n    }\n    if (isPrime) {\n      primeNumbers.push(i);\n    }\n    isPrime\
    \ = true;\n  }\n  for (let i: number = 0; i < primeNumbers.length; i++) {\n  \
    \  for (let j: number = 0; j < primeNumbers.length; j++) {\n      for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n          isMultiplyPrime = true;\n        }\n \
    \     }\n    }\n  }\n  return isMultiplyPrime;\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = true;\n    let is_multiply_prime: boolean = false;\n\
    \    let prime_numbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j == 0)\
    \ {\n                is_prime = false;\n            }\n        }\n        if (is_prime)\
    \ {\n            prime_numbers.push(i);\n        }\n        is_prime = true;\n\
    \    }\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n       \
    \ for (let j: number = 0; j < prime_numbers.length; j++) {\n            for (let\
    \ k: number = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let isPrime: boolean = true;\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (a % i === 0) {\n     \
    \       isPrime = false;\n        }\n    }\n    return isPrime;\n}\n", "    let\
    \ isPrime: boolean = true;\n    let primeNumbers: number[] = [];\n    let primeNumbersMultiply:\
    \ number = 1;\n    for (let i: number = 2; i < a; i++) {\n        for (let j:\
    \ number = 2; j < i; j++) {\n            if (i % j === 0) {\n                isPrime\
    \ = false;\n            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = i + 1; j < primeNumbers.length; j++) {\n\
    \            for (let k: number = j + 1; k < primeNumbers.length; k++) {\n   \
    \             primeNumbersMultiply = primeNumbers[i] * primeNumbers[j] * primeNumbers[k];\n\
    \                if (primeNumbersMultiply === a) {\n                    return\
    \ true;\n                }\n            }\n        }\n    }\n    return false;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let isPrime: boolean = true;\n\
    \    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j ===\
    \ 0) {\n                isPrime = false;\n                break;\n           \
    \ }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n  \
    \      }\n        isPrime = true;\n    }\n    let isMultiplyPrime: boolean = false;\n\
    \    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let\
    \ j: number = 0; j < primeNumbers.length; j++) {\n            for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i] *\
    \ primeNumbers[j] * primeNumbers[k] === a) {\n                    isMultiplyPrime\
    \ = true;\n                }\n            }\n        }\n    }\n    return isMultiplyPrime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "  let primeNumbers: number[] = [];\n\
    \  for (let i = 2; i < a; i++) {\n    if (is_prime(i)) {\n      primeNumbers.push(i);\n\
    \    }\n  }\n  let result: boolean = false;\n  for (let i = 0; i < primeNumbers.length;\
    \ i++) {\n    for (let j = 0; j < primeNumbers.length; j++) {\n      for (let\
    \ k = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n          result = true;\n        }\n      }\n \
    \   }\n  }\n  return result;\n}\n\nconsole.log(is_multiply_prime(30));\n", " \
    \   let result: boolean = false;\n    let primes: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primes.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primes.length; i++) {\n   \
    \     for (let j: number = 0; j < primes.length; j++) {\n            for (let\
    \ k: number = 0; k < primes.length; k++) {\n                if (primes[i] * primes[j]\
    \ * primes[k] === a) {\n                    result = true;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let primeNumbers: number[] = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    let primeNumbersCount: number = 0;\n    for (let i: number = 0; i\
    \ < primeNumbers.length; i++) {\n        if (a % primeNumbers[i] === 0) {\n  \
    \          primeNumbersCount++;\n        }\n    }\n    if (primeNumbersCount ===\
    \ 3) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    console.log(is_multiply_prime(30));\n", "    let primeNumbers: number[] = [];\n\
    \    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n\
    \        for (let j: number = 2; j < i; j++) {\n            if (i % j === 0) {\n\
    \                isPrime = false;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n        isPrime = true;\n \
    \   }\n    let counter: number = 0;\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        if (a % primeNumbers[i] === 0) {\n            counter++;\n \
    \       }\n    }\n    if (counter === 3) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n", "  \
    \  let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let counter: number = 0;\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (a % i == 0) {\n            counter++;\n        }\n\
    \    }\n    if (counter == 2) {\n        result = true;\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime = true;\n    for (let i = 2; i < a; i++) {\n        if (a % i ===\
    \ 0) {\n            isPrime = false;\n        }\n    }\n    return isPrime;\n}",
  "    let isPrime: boolean = true;\n    let isMultiply: boolean = false;\n    let\
    \ counter: number = 0;\n    let primeNumbers: number[] = [];\n    for (let i:\
    \ number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n \
    \           if (i % j === 0) {\n                isPrime = false;\n           \
    \ }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n  \
    \      }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 isMultiply = true;\n                }\n            }\n     \
    \   }\n    }\n    return isMultiply;\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n  \
    \  }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\n",
  "    let is_prime: boolean = true;\n    let i: number = 2;\n    while (i < a) {\n\
    \        if (a % i == 0) {\n            is_prime = false;\n            break;\n\
    \        }\n        i++;\n    }\n    return is_prime;\n}\n", "    let result:\
    \ boolean = false;\n    let counter: number = 0;\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (a % i == 0) {\n            counter++;\n        }\n\
    \    }\n    if (counter == 2) {\n        result = true;\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let is_prime: boolean = true;\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n      \
    \      is_prime = false;\n        }\n    }\n    return is_prime;\n}\n", "    let\
    \ isPrime: boolean = true;\n    let i: number = 2;\n    while (i < a) {\n    \
    \    if (a % i == 0) {\n            isPrime = false;\n            break;\n   \
    \     }\n        i++;\n    }\n    return isPrime;\n}", "    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\n", "    let isPrime: boolean = true;\n  \
    \  let counter: number = 0;\n    for (let i: number = 2; i < a; i++) {\n     \
    \   if (a % i == 0) {\n            isPrime = true;\n            for (let j: number\
    \ = 2; j < i; j++) {\n                if (i % j == 0) {\n                    isPrime\
    \ = false;\n                }\n            }\n            if (isPrime) {\n   \
    \             counter++;\n            }\n        }\n    }\n    if (counter ==\
    \ 3) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    console.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n  \
    \  let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n  \
    \  }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let counter: number = 2;\n    while (counter\
    \ < a) {\n        if (a % counter === 0) {\n            isPrime = false;\n   \
    \     }\n        counter++;\n    }\n    return isPrime;\n}\n", "    let primeNumbers:\
    \ number[] = [];\n    let isPrime: boolean = true;\n    for (let i: number = 2;\
    \ i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n            if\
    \ (i % j === 0) {\n                isPrime = false;\n                break;\n\
    \            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\n", "    let isPrime = true;\n    for (let i = 2;\
    \ i < a; i++) {\n        if (a % i === 0) {\n            isPrime = false;\n  \
    \      }\n    }\n    return isPrime;\n}\n", "    let is_prime: boolean = true;\n\
    \    let i: number = 2;\n    while (i < a) {\n        if (a % i == 0) {\n    \
    \        is_prime = false;\n            break;\n        }\n        i++;\n    }\n\
    \    return is_prime;\n}\n", "    let prime_numbers: number[] = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    let prime_numbers_count: number = 0;\n    let prime_numbers_sum: number\
    \ = 0;\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n       \
    \ if (a % prime_numbers[i] == 0) {\n            prime_numbers_count++;\n     \
    \       prime_numbers_sum += prime_numbers[i];\n        }\n    }\n    if (prime_numbers_count\
    \ == 3 && prime_numbers_sum == a) {\n        return true;\n    } else {\n    \
    \    return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n", "  let isPrime:\
    \ boolean = true;\n  for (let i: number = 2; i < a; i++) {\n    if (a % i ===\
    \ 0) {\n      isPrime = false;\n    }\n  }\n  return isPrime;\n}\n", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    let result: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let isMultiply: boolean = false;\n    let\
    \ primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n  \
    \      for (let j: number = 2; j < i; j++) {\n            if (i % j === 0) {\n\
    \                isPrime = false;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n        isPrime = true;\n \
    \   }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    isMultiply\
    \ = true;\n                }\n            }\n        }\n    }\n    return isMultiply;\n\
    }\n\nconsole.log(is_multiply_prime(30));\n", "  let i: number = 2;\n  let j: number\
    \ = 2;\n  let k: number = 2;\n  let isPrime: boolean = true;\n  let isMultiply:\
    \ boolean = false;\n  while (i < a) {\n    while (j < a) {\n      while (k < a)\
    \ {\n        if (i * j * k === a) {\n          isMultiply = true;\n        }\n\
    \        k++;\n      }\n      j++;\n    }\n    i++;\n  }\n  return isMultiply;\n\
    }\n", "    let is_prime: boolean = true;\n    let is_multiply_prime: boolean =\
    \ false;\n    let counter: number = 0;\n    let prime_numbers: number[] = [];\n\
    \    for (let i: number = 2; i < a; i++) {\n        is_prime = true;\n       \
    \ for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n     \
    \           is_prime = false;\n            }\n        }\n        if (is_prime)\
    \ {\n            prime_numbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < prime_numbers.length; i++) {\n        for (let j: number = 0; j < prime_numbers.length;\
    \ j++) {\n            for (let k: number = 0; k < prime_numbers.length; k++) {\n\
    \                if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] ==\
    \ a) {\n                    is_multiply_prime = true;\n                }\n   \
    \         }\n        }\n    }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isMultiplyPrime: boolean = false;\n    let isPrime: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    let primeNumbersMultiplied: number\
    \ = 1;\n    for (let i: number = 2; i < a; i++) {\n        isPrime = true;\n \
    \       for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n\
    \                isPrime = false;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = i + 1; j\
    \ < primeNumbers.length; j++) {\n            for (let k: number = j + 1; k < primeNumbers.length;\
    \ k++) {\n                primeNumbersMultiplied = primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k];\n                if (primeNumbersMultiplied == a) {\n   \
    \                 isMultiplyPrime = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i == 0) {\n            for (let j: number = 2; j < a; j++) {\n\
    \                if (a % j == 0) {\n                    for (let k: number = 2;\
    \ k < a; k++) {\n                        if (a % k == 0) {\n                 \
    \           if (i * j * k == a) {\n                                result = true;\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let isPrime: boolean = true;\n\
    \    let isMultiply: boolean = false;\n    let primeNumbers: number[] = [];\n\
    \    for (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j\
    \ < i; j++) {\n            if (i % j === 0) {\n                isPrime = false;\n\
    \            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 isMultiply = true;\n                }\n            }\n     \
    \   }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let count: number = 0;\n    for (let i: number = 2; i\
    \ < a; i++) {\n        if (a % i == 0) {\n            count++;\n        }\n  \
    \  }\n    if (count == 2) {\n        result = true;\n    }\n    return result;\n\
    }\n", "    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a;\
    \ i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n    \
    \    }\n    }\n    let isMultiplyPrime: boolean = false;\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    isMultiplyPrime = true;\n                }\n        \
    \    }\n        }\n    }\n    return isMultiplyPrime;\n}\n", "    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < 100; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    let primeNumbersLength:\
    \ number = primeNumbers.length;\n    for (let i: number = 0; i < primeNumbersLength;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbersLength; j++) {\n   \
    \         for (let k: number = 0; k < primeNumbersLength; k++) {\n           \
    \     if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n     \
    \               return true;\n                }\n            }\n        }\n  \
    \  }\n    return false;\n}\n", "  let isPrime: boolean = true;\n  let isMultiplyPrime:\
    \ boolean = false;\n  let primeNumbers: number[] = [];\n  for (let i: number =\
    \ 2; i < a; i++) {\n    for (let j: number = 2; j < i; j++) {\n      if (i % j\
    \ === 0) {\n        isPrime = false;\n      }\n    }\n    if (isPrime) {\n   \
    \   primeNumbers.push(i);\n    }\n    isPrime = true;\n  }\n  for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n    for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n      for (let k: number = 0; k < primeNumbers.length; k++) {\n    \
    \    if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n      \
    \    isMultiplyPrime = true;\n        }\n      }\n    }\n  }\n  return isMultiplyPrime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    let prime_numbers: number[] = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    let prime_numbers_length: number = prime_numbers.length;\n    let\
    \ i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    for (i =\
    \ 0; i < prime_numbers_length; i++) {\n        for (j = 0; j < prime_numbers_length;\
    \ j++) {\n            for (k = 0; k < prime_numbers_length; k++) {\n         \
    \       if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] === a) {\n\
    \                    return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        let isPrime: boolean = true;\n       \
    \ for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n     \
    \           isPrime = false;\n                break;\n            }\n        }\n\
    \        if (isPrime) {\n            primeNumbers.push(i);\n        }\n    }\n\
    \    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let\
    \ j: number = 0; j < primeNumbers.length; j++) {\n            for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i] *\
    \ primeNumbers[j] * primeNumbers[k] == a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        let isPrime: boolean = true;\n  \
    \      for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n\
    \                isPrime = false;\n                break;\n            }\n   \
    \     }\n        if (isPrime) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] == a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        let isPrime: boolean = true;\n        for (let j:\
    \ number = 2; j < i; j++) {\n            if (i % j == 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let j: number = 0; j < primeNumbers.length; j++) {\n        for\
    \ (let k: number = 0; k < primeNumbers.length; k++) {\n            for (let l:\
    \ number = 0; l < primeNumbers.length; l++) {\n                if (primeNumbers[j]\
    \ * primeNumbers[k] * primeNumbers[l] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "  let result: boolean = false;\n  let primeNumbers: number[] = [];\n  let primeNumbersMultiply:\
    \ number[] = [];\n  let primeNumbersMultiplyResult: number = 1;\n  let primeNumbersMultiplyResult2:\
    \ number = 1;\n  let primeNumbersMultiplyResult3: number = 1;\n  for (let i: number\
    \ = 2; i < a; i++) {\n    if (is_prime(i)) {\n      primeNumbers.push(i);\n  \
    \  }\n  }\n  for (let i: number = 0; i < primeNumbers.length; i++) {\n    for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n      for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n        primeNumbersMultiplyResult = primeNumbers[i]\
    \ * primeNumbers[j];\n        primeNumbersMultiplyResult2 = primeNumbersMultiplyResult\
    \ * primeNumbers[k];\n        primeNumbersMultiplyResult3 = primeNumbersMultiplyResult2\
    \ * primeNumbers[k];\n        if (primeNumbersMultiplyResult2 === a || primeNumbersMultiplyResult3\
    \ === a) {\n          result = true;\n        }\n      }\n    }\n  }\n  return\
    \ result;\n}\n\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(31));\n\
    console.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\nconsole.log(is_multiply_prime(34));\n\
    console.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\nconsole.log(is_multiply_prime(37));\n\
    console.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\nconsole.log(is_multiply_prime(40));\n\
    console.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\nconsole.log(is_multiply_prime(43));\n\
    console.", "    let isPrime: boolean = true;\n    let counter: number = 0;\n \
    \   for (let i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n       \
    \     isPrime = true;\n            for (let j: number = 2; j < i; j++) {\n   \
    \             if (i % j == 0) {\n                    isPrime = false;\n      \
    \          }\n            }\n            if (isPrime) {\n                counter++;\n\
    \            }\n        }\n    }\n    if (counter == 3) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = true;\n    let is_multiply_prime: boolean = false;\n\
    \    let prime_numbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j == 0)\
    \ {\n                is_prime = false;\n            }\n        }\n        if (is_prime)\
    \ {\n            prime_numbers.push(i);\n        }\n        is_prime = true;\n\
    \    }\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n       \
    \ for (let j: number = 0; j < prime_numbers.length; j++) {\n            for (let\
    \ k: number = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let is_prime: boolean = true;\n\
    \    let is_multiply_prime: boolean = false;\n    let counter: number = 0;\n \
    \   for (let i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n       \
    \     is_prime = true;\n            for (let j: number = 2; j < i; j++) {\n  \
    \              if (i % j == 0) {\n                    is_prime = false;\n    \
    \            }\n            }\n            if (is_prime) {\n                counter++;\n\
    \            }\n        }\n    }\n    if (counter == 3) {\n        is_multiply_prime\
    \ = true;\n    }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ counter: number = 0;\n    for (let i: number = 2; i < a; i++) {\n        if\
    \ (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n    }\n    for\
    \ (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let j: number\
    \ = 0; j < primeNumbers.length; j++) {\n            for (let k: number = 0; k\
    \ < primeNumbers.length; k++) {\n                if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n                    counter++;\n               \
    \ }\n            }\n        }\n    }\n    if (counter > 0) {\n        result =\
    \ true;\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let result: boolean = false;\n    let i: number\
    \ = 2;\n    let j: number = 2;\n    let k: number = 2;\n    for (i; i < 100; i++)\
    \ {\n        for (j; j < 100; j++) {\n            for (k; k < 100; k++) {\n  \
    \              if (i * j * k === a) {\n                    result = true;\n  \
    \              }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let isMultiply: boolean = false;\n    let\
    \ primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n  \
    \      for (let j: number = 2; j < i; j++) {\n            if (i % j === 0) {\n\
    \                isPrime = false;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n        isPrime = true;\n \
    \   }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    isMultiply\
    \ = true;\n                }\n            }\n        }\n    }\n    return isMultiply;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let is_prime: boolean = true;\n\
    \    let counter: number = 0;\n    for (let i: number = 2; i < a; i++) {\n   \
    \     if (a % i == 0) {\n            is_prime = true;\n            for (let j:\
    \ number = 2; j < i; j++) {\n                if (i % j == 0) {\n             \
    \       is_prime = false;\n                }\n            }\n            if (is_prime)\
    \ {\n                counter++;\n            }\n        }\n    }\n    if (counter\
    \ == 3) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        let isPrime: boolean = true;\n        for (let j:\
    \ number = 2; j < i; j++) {\n            if (i % j == 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let counter: number = 0;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i == 0) {\n            counter++;\n\
    \        }\n    }\n    if (counter == 2) {\n        result = true;\n    }\n  \
    \  return result;\n}\n", "    let result: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    let counter: number = 0;\n    for (let i: number = 2; i\
    \ < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        counter++;\n                }\n            }\n        }\n    }\n    if\
    \ (counter > 0) {\n        result = true;\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let result: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = true;\n    let is_multiply_prime: boolean = false;\n\
    \    let prime_numbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j == 0)\
    \ {\n                is_prime = false;\n            }\n        }\n        if (is_prime)\
    \ {\n            prime_numbers.push(i);\n        }\n        is_prime = true;\n\
    \    }\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n       \
    \ for (let j: number = 0; j < prime_numbers.length; j++) {\n            for (let\
    \ k: number = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "  let is_prime: boolean = true;\n\
    \  let is_multiply_prime: boolean = false;\n  let prime_numbers: number[] = [];\n\
    \  for (let i: number = 2; i < a; i++) {\n    for (let j: number = 2; j < i; j++)\
    \ {\n      if (i % j === 0) {\n        is_prime = false;\n      }\n    }\n   \
    \ if (is_prime) {\n      prime_numbers.push(i);\n    }\n    is_prime = true;\n\
    \  }\n  for (let i: number = 0; i < prime_numbers.length; i++) {\n    for (let\
    \ j: number = 0; j < prime_numbers.length; j++) {\n      for (let k: number =\
    \ 0; k < prime_numbers.length; k++) {\n        if (prime_numbers[i] * prime_numbers[j]\
    \ * prime_numbers[k] === a) {\n          is_multiply_prime = true;\n        }\n\
    \      }\n    }\n  }\n  return is_multiply_prime;\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = true;\n    let prime_numbers: number[] = [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    let prime_numbers_count: number = 0;\n    for (let i: number =\
    \ 0; i < prime_numbers.length; i++) {\n        if (a % prime_numbers[i] === 0)\
    \ {\n            prime_numbers_count++;\n        }\n    }\n    if (prime_numbers_count\
    \ === 3) {\n        is_prime = true;\n    } else {\n        is_prime = false;\n\
    \    }\n    return is_prime;\n}\nconsole.log(is_multiply_prime(30));\n", "   \
    \ let isPrime: boolean = true;\n    let counter: number = 0;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        for (let\
    \ j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n              \
    \  isPrime = false;\n                break;\n            }\n        }\n      \
    \  if (isPrime) {\n            primeNumbers.push(i);\n            counter++;\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = i + 1; j < primeNumbers.length; j++) {\n\
    \            for (let k: number = j + 1; k < primeNumbers.length; k++) {\n   \
    \             if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a) {\n\
    \                    return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ isPrime: boolean = true;\n    let isMultiply: boolean = false;\n    let counter:\
    \ number = 0;\n    let primeNumbers: number[] = [];\n    for (let i: number =\
    \ 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n          \
    \  if (i % j === 0) {\n                isPrime = false;\n            }\n     \
    \   }\n        if (isPrime) {\n            primeNumbers.push(i);\n        }\n\
    \        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 isMultiply = true;\n                }\n            }\n     \
    \   }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(is_multiply_prime(30));\n", "  let result:\
    \ boolean = false;\n  let primeNumbers: number[] = [];\n  for (let i: number =\
    \ 2; i < a; i++) {\n    if (is_prime(i)) {\n      primeNumbers.push(i);\n    }\n\
    \  }\n  for (let i: number = 0; i < primeNumbers.length; i++) {\n    for (let\
    \ j: number = 0; j < primeNumbers.length; j++) {\n      for (let k: number = 0;\
    \ k < primeNumbers.length; k++) {\n        if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n          result = true;\n        }\n      }\n \
    \   }\n  }\n  return result;\n}\n\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(31));\n\
    console.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\nconsole.log(is_multiply_prime(34));\n\
    console.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\nconsole.log(is_multiply_prime(37));\n\
    console.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\nconsole.log(is_multiply_prime(40));\n\
    console.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\nconsole.log(is_multiply_prime(43));\n\
    console.log(is_multiply_prime(44));\nconsole.log(is_multiply_prime(45));\nconsole.log(is_multiply_prime(46));\n\
    console.log(is_multiply_prime(47));\nconsole.log(is_multiply_prime(48));\nconsole.log(is_multiply_prime(49));\n\
    console.log(is_multiply_prime(50));\nconsole.log(is_multiply_prime(51));\nconsole.log(",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        let isPrime: boolean = true;\n  \
    \      for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n\
    \                isPrime = false;\n                break;\n            }\n   \
    \     }\n        if (isPrime) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] == a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = false;\n    let prime_numbers: number[] = [];\n   \
    \ for (let i: number = 2; i < a; i++) {\n        if (is_prime_number(i)) {\n \
    \           prime_numbers.push(i);\n        }\n    }\n    for (let i: number =\
    \ 0; i < prime_numbers.length; i++) {\n        for (let j: number = 0; j < prime_numbers.length;\
    \ j++) {\n            for (let k: number = 0; k < prime_numbers.length; k++) {\n\
    \                if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] ===\
    \ a) {\n                    is_prime = true;\n                }\n            }\n\
    \        }\n    }\n    return is_prime;\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let counter: number = 0;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i == 0) {\n            isPrime =\
    \ true;\n            for (let j: number = 2; j < i; j++) {\n                if\
    \ (i % j == 0) {\n                    isPrime = false;\n                }\n  \
    \          }\n            if (isPrime) {\n                counter++;\n       \
    \     }\n        }\n    }\n    if (counter == 3) {\n        return true;\n   \
    \ } else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n  \
    \  }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let b: number = 0;\n    let c: number = 0;\n    let d: number = 0;\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n            b\
    \ = i;\n            break;\n        }\n    }\n    for (let i: number = 2; i <\
    \ a; i++) {\n        if (a % i == 0 && i != b) {\n            c = i;\n       \
    \     break;\n        }\n    }\n    for (let i: number = 2; i < a; i++) {\n  \
    \      if (a % i == 0 && i != b && i != c) {\n            d = i;\n           \
    \ break;\n        }\n    }\n    if (b * c * d == a) {\n        return true;\n\
    \    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n", "  let result: boolean = false;\n  let primeNumbers:\
    \ number[] = [];\n  for (let i: number = 2; i < a; i++) {\n    if (is_prime(i))\
    \ {\n      primeNumbers.push(i);\n    }\n  }\n  for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n    for (let j: number = 0; j < primeNumbers.length; j++) {\n      for\
    \ (let k: number = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n          result = true;\n   \
    \     }\n      }\n    }\n  }\n  return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j === 0) {\n                isPrime = false;\n      \
    \          break;\n            }\n        }\n        if (isPrime) {\n        \
    \    primeNumbers.push(i);\n        }\n        isPrime = true;\n    }\n    for\
    \ (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let j: number\
    \ = 0; j < primeNumbers.length; j++) {\n            for (let k: number = 0; k\
    \ < primeNumbers.length; k++) {\n                if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n                    return true;\n             \
    \   }\n            }\n        }\n    }\n    return false;\n}\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    let primeNumbersMultiplied:\
    \ number = 1;\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        if (primeNumbersMultiplied * primeNumbers[i]\
    \ <= a) {\n            primeNumbersMultiplied *= primeNumbers[i];\n        }\n\
    \    }\n    if (primeNumbersMultiplied === a) {\n        result = true;\n    }\n\
    \    return result;\n}\n", "    let primeNumbers: number[] = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    let result: boolean = false;\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ isPrime: boolean = true;\n    let counter: number = 0;\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (a % i == 0) {\n            isPrime = true;\n\
    \            for (let j: number = 2; j < i; j++) {\n                if (i % j\
    \ == 0) {\n                    isPrime = false;\n                }\n         \
    \   }\n            if (isPrime) {\n                counter++;\n            }\n\
    \        }\n    }\n    if (counter == 3) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n", "  \
    \  let is_prime = true;\n    let i = 2;\n    while (i < a) {\n        if (a %\
    \ i == 0) {\n            is_prime = false;\n            break;\n        }\n  \
    \      i++;\n    }\n    return is_prime;\n}\n", "    let prime_numbers: number[]\
    \ = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n\
    \            prime_numbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < prime_numbers.length; i++) {\n        for (let j: number = 0; j < prime_numbers.length;\
    \ j++) {\n            for (let k: number = 0; k < prime_numbers.length; k++) {\n\
    \                if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] ===\
    \ a) {\n                    return true;\n                }\n            }\n \
    \       }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let result: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        for (let\
    \ j: number = 2; j < i; j++) {\n            if (i % j === 0) {\n             \
    \   isPrime = false;\n                break;\n            }\n        }\n     \
    \   if (isPrime) {\n            primeNumbers.push(i);\n        }\n        isPrime\
    \ = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        return true;\n                }\n            }\n        }\n    }\n  \
    \  return false;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime\
    \ = true;\n    for (let i = 2; i < a; i++) {\n        if (a % i === 0) {\n   \
    \         isPrime = false;\n        }\n    }\n    return isPrime;\n}", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime:\
    \ boolean = true;\n    let isMultiplyPrime: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    let counter: number = 0;\n    for (let i: number = 2; i\
    \ < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n            if (i\
    \ % j === 0) {\n                isPrime = false;\n            }\n        }\n \
    \       if (isPrime) {\n            primeNumbers.push(i);\n        }\n       \
    \ isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 counter++;\n                }\n            }\n        }\n  \
    \  }\n    if (counter > 0) {\n        isMultiplyPrime = true;\n    }\n    return\
    \ isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime:\
    \ boolean = true;\n    for (let i: number = 2; i < a; i++) {\n        if (a %\
    \ i === 0) {\n            isPrime = false;\n        }\n    }\n    return isPrime;\n\
    }\n", "    let is_prime: boolean = true;\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (a % i == 0) {\n            is_prime = false;\n        }\n   \
    \ }\n    return is_prime;\n}\n", "    let result: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    let primeNumbersMultiplication: number = 1;\n    for (let\
    \ i: number = 2; i < a; i++) {\n        let isPrime: boolean = true;\n       \
    \ for (let j: number = 2; j < i; j++) {\n            if (i % j === 0) {\n    \
    \            isPrime = false;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = i + 1; j\
    \ < primeNumbers.length; j++) {\n            for (let k: number = j + 1; k < primeNumbers.length;\
    \ k++) {\n                primeNumbersMultiplication = primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k];\n                if (primeNumbersMultiplication === a) {\n\
    \                    result = true;\n                }\n            }\n      \
    \  }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", " \
    \   let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ primeNumbersCount: number = 0;\n    let i: number = 0;\n    let j: number =\
    \ 0;\n    let k: number = 0;\n    let l: number = 0;\n    let m: number = 0;\n\
    \    let n: number = 0;\n    let o: number = 0;\n    let p: number = 0;\n    let\
    \ q: number = 0;\n    let r: number = 0;\n    let s: number = 0;\n    let t: number\
    \ = 0;\n    let u: number = 0;\n    let v: number = 0;\n    let w: number = 0;\n\
    \    let x: number = 0;\n    let y: number = 0;\n    let z: number = 0;\n    let\
    \ aa: number = 0;\n    let ab: number = 0;\n    let ac: number = 0;\n    let ad:\
    \ number = 0;\n    let ae: number = 0;\n    let af: number = 0;\n    let ag: number\
    \ = 0;\n    let ah: number = 0;\n    let ai: number = 0;\n    let aj: number =\
    \ 0;\n    let ak: number = 0;\n    let al: number = 0;\n    let am: number = 0;\n\
    \    let an: number = 0;\n    let ao: number = 0;\n    let ap: number = 0;\n \
    \   let aq: number = 0;\n    let ar: number = 0;\n    let as: number = 0;\n  \
    \  let at: number = 0;\n    let au: number = 0;\n    let av: number = 0;\n   \
    \ let aw: number = 0;\n    let ax: number = 0;\n    let ay: number = 0;\n    let\
    \ az: number = 0;\n    let ba: number = 0;\n    let bb: number = 0;\n    let bc:\
    \ number = 0;\n    let bd: number = 0;\n    let be: number = 0;\n    let bf: number\
    \ = 0;\n    let bg: number = 0;\n    let bh: number = 0;\n    let", "    let result:\
    \ boolean = false;\n    for (let i: number = 2; i < a; i++) {\n        if (a %\
    \ i == 0) {\n            for (let j: number = 2; j < i; j++) {\n             \
    \   if (i % j == 0) {\n                    for (let k: number = 2; k < j; k++)\
    \ {\n                        if (j % k == 0) {\n                            if\
    \ (a == i * j * k) {\n                                result = true;\n       \
    \                     }\n                        }\n                    }\n  \
    \              }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let isMultiplyPrime: boolean = false;\n \
    \   let counter: number = 0;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n\
    \            if (i % j === 0) {\n                isPrime = false;\n          \
    \  }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n \
    \       }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = i + 1; j < primeNumbers.length; j++) {\n\
    \            for (let k: number = j + 1; k < primeNumbers.length; k++) {\n   \
    \             if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n\
    \                    isMultiplyPrime = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime:\
    \ boolean = true;\n    for (let i: number = 2; i < a; i++) {\n        if (a %\
    \ i === 0) {\n            isPrime = false;\n        }\n    }\n    return isPrime;\n\
    }\n", "    let isPrime: boolean = true;\n    let counter: number = 2;\n    while\
    \ (counter < a) {\n        if (a % counter === 0) {\n            isPrime = false;\n\
    \        }\n        counter++;\n    }\n    return isPrime;\n}\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\n", "    let isPrime: boolean = true;\n  \
    \  for (let i: number = 2; i < a; i++) {\n        if (a % i === 0) {\n       \
    \     isPrime = false;\n        }\n    }\n    return isPrime;\n}\n", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        let isPrime: boolean = true;\n       \
    \ for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n     \
    \           isPrime = false;\n                break;\n            }\n        }\n\
    \        if (isPrime) {\n            primeNumbers.push(i);\n        }\n    }\n\
    \    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let\
    \ j: number = 0; j < primeNumbers.length; j++) {\n            for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i] *\
    \ primeNumbers[j] * primeNumbers[k] == a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let isMultiplyPrime: boolean = false;\n \
    \   let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j ===\
    \ 0) {\n                isPrime = false;\n                break;\n           \
    \ }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n  \
    \      }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 isMultiplyPrime = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let primeNumbers: number[] = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    let result: boolean = false;\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n  \
    \      if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n    }\n\
    \    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let\
    \ j: number = 0; j < primeNumbers.length; j++) {\n            for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i] *\
    \ primeNumbers[j] * primeNumbers[k] === a) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let is_multiply_prime:\
    \ boolean = false;\n    let prime_numbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            prime_numbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime_numbers.length; i++)\
    \ {\n        for (let j: number = 0; j < prime_numbers.length; j++) {\n      \
    \      for (let k: number = 0; k < prime_numbers.length; k++) {\n            \
    \    if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] === a) {\n   \
    \                 is_multiply_prime = true;\n                }\n            }\n\
    \        }\n    }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let prime_numbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            prime_numbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime_numbers.length; i++)\
    \ {\n        for (let j: number = i + 1; j < prime_numbers.length; j++) {\n  \
    \          for (let k: number = j + 1; k < prime_numbers.length; k++) {\n    \
    \            if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\n", "    let is_prime: boolean = false;\n\
    \    let is_multiply: boolean = false;\n    let counter: number = 0;\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n            is_prime\
    \ = true;\n            for (let j: number = 2; j < i; j++) {\n               \
    \ if (i % j == 0) {\n                    is_prime = false;\n                }\n\
    \            }\n            if (is_prime) {\n                counter++;\n    \
    \        }\n        }\n    }\n    if (counter == 3) {\n        is_multiply = true;\n\
    \    }\n    return is_multiply;\n}\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(50));\n\
    console.log(is_multiply_prime(60));\nconsole.log(is_multiply_prime(70));\nconsole.log(is_multiply_prime(80));\n\
    console.log(is_multiply_prime(90));\nconsole.log(is_multiply_prime(100));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ primeNumbersMultiplication: number = 1;\n    for (let i: number = 2; i < a;\
    \ i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n    \
    \    }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n \
    \       if (a % primeNumbers[i] === 0) {\n            primeNumbersMultiplication\
    \ *= primeNumbers[i];\n        }\n    }\n    if (primeNumbersMultiplication ===\
    \ a) {\n        result = true;\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers: number[] = [];\n    let isPrime: boolean = true;\n    for\
    \ (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j === 0) {\n                isPrime = false;\n      \
    \      }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    let isMultiplyPrime: boolean =\
    \ false;\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n      \
    \  for (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let\
    \ k: number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    isMultiplyPrime\
    \ = true;\n                }\n            }\n        }\n    }\n    return isMultiplyPrime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n\
    console.log(is_multiply_prime(31));\nconsole.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\n\
    console.log(is_multiply_prime(34));\nconsole.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\n\
    console.log(is_multiply_prime(37));\nconsole.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\n\
    console.log(is_multiply_prime(40));\nconsole.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\n\
    console.log(is_multiply_prime(43));\nconsole.log(is_multiply_prime(44));\nconsole.log(is_multiply_prime(45));\n\
    console.log(is_multiply_prime(46));\nconsole.log(is_multiply_prime(47));\nconsole.log(is_multiply_prime(48));\n\
    console.log(is_multiply_prime(49));\nconsole.log(is_multiply_prime(50));\nconsole.log(is_multiply_prime(51));",
  "    let result: boolean = false;\n    let count: number = 0;\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (a % i == 0) {\n            for (let j: number\
    \ = 2; j < i; j++) {\n                if (i % j == 0) {\n                    break;\n\
    \                }\n                else {\n                    count++;\n   \
    \             }\n            }\n        }\n    }\n    if (count == 3) {\n    \
    \    result = true;\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let isMultiply: boolean = false;\n    let\
    \ counter: number = 0;\n    for (let i: number = 2; i < a; i++) {\n        for\
    \ (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n         \
    \       isPrime = false;\n            }\n        }\n        if (isPrime) {\n \
    \           if (a % i == 0) {\n                counter++;\n            }\n   \
    \     }\n        isPrime = true;\n    }\n    if (counter == 3) {\n        isMultiply\
    \ = true;\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n  \
    \  }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n",
  "  let result: boolean = false;\n  let primeNumbers: number[] = [];\n  for (let\
    \ i: number = 2; i < a; i++) {\n    if (is_prime(i)) {\n      primeNumbers.push(i);\n\
    \    }\n  }\n  for (let i: number = 0; i < primeNumbers.length; i++) {\n    for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n      for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n          result = true;\n        }\n      }\n \
    \   }\n  }\n  return result;\n}\n", "    let result: boolean = false;\n    let\
    \ primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n  \
    \      if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n    }\n\
    \    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let\
    \ j: number = 0; j < primeNumbers.length; j++) {\n            for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i] *\
    \ primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ counter: number = 0;\n    for (let i: number = 2; i < a; i++) {\n        if\
    \ (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n    }\n    for\
    \ (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let j: number\
    \ = 0; j < primeNumbers.length; j++) {\n            for (let k: number = 0; k\
    \ < primeNumbers.length; k++) {\n                if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n                    counter++;\n               \
    \ }\n            }\n        }\n    }\n    if (counter > 0) {\n        result =\
    \ true;\n    }\n    return result;\n}\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (a % i == 0) {\n            is_prime = false;\n        }\n    }\n\
    \    return is_prime;\n}\n", "    let isPrime: boolean = true;\n    let isMultiplyPrime:\
    \ boolean = false;\n    let counter: number = 0;\n    let primeNumbers: number[]\
    \ = [];\n    for (let i: number = 2; i < a; i++) {\n        for (let j: number\
    \ = 2; j < i; j++) {\n            if (i % j === 0) {\n                isPrime\
    \ = false;\n            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 counter++;\n                }\n            }\n        }\n  \
    \  }\n    if (counter > 0) {\n        isMultiplyPrime = true;\n    }\n    return\
    \ isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n", "    let is_prime:\
    \ boolean = true;\n    let i: number = 2;\n    while (i < a) {\n        if (a\
    \ % i == 0) {\n            is_prime = false;\n            break;\n        }\n\
    \        i++;\n    }\n    return is_prime;\n}\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    let counter: number = 0;\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        counter++;\n                }\n            }\n        }\n    }\n    if\
    \ (counter > 0) {\n        result = true;\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let primeNumbersMultiply:\
    \ number[] = [];\n    let primeNumbersMultiplyString: string = \"\";\n    let\
    \ primeNumbersMultiplyString2: string = \"\";\n    let primeNumbersMultiplyString3:\
    \ string = \"\";\n    let primeNumbersMultiplyString4: string = \"\";\n    let\
    \ primeNumbersMultiplyString5: string = \"\";\n    let primeNumbersMultiplyString6:\
    \ string = \"\";\n    let primeNumbersMultiplyString7: string = \"\";\n    let\
    \ primeNumbersMultiplyString8: string = \"\";\n    let primeNumbersMultiplyString9:\
    \ string = \"\";\n    let primeNumbersMultiplyString10: string = \"\";\n    let\
    \ primeNumbersMultiplyString11: string = \"\";\n    let primeNumbersMultiplyString12:\
    \ string = \"\";\n    let primeNumbersMultiplyString13: string = \"\";\n    let\
    \ primeNumbersMultiplyString14: string = \"\";\n    let primeNumbersMultiplyString15:\
    \ string = \"\";\n    let primeNumbersMultiplyString16: string = \"\";\n    let\
    \ primeNumbersMultiplyString17: string = \"\";\n    let primeNumbersMultiplyString18:\
    \ string = \"\";\n    let primeNumbersMultiplyString19: string = \"\";\n    let\
    \ primeNumbersMultiplyString20: string = \"\";\n    let primeNumbersMultiplyString21:\
    \ string = \"\";\n    let primeNumbersMultiplyString22: string = \"\";\n    let\
    \ primeNumbersMultiplyString23: string = \"\";\n    let primeNumbersMultiplyString24:\
    \ string = \"\";\n    let primeNumbersMultiplyString25: string = \"\";\n    let\
    \ primeNumbersMultiplyString26: string = \"\";\n    let primeNumbersMultiplyString27:\
    \ string = \"\";\n    let primeNumbersMultiplyString28: string = \"\";\n    let\
    \ primeNumbersMultiplyString29: string = \"\";\n    let primeNumbers", "    let\
    \ is_prime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n     \
    \   if (a % i == 0) {\n            is_prime = false;\n        }\n    }\n    return\
    \ is_prime;\n}\n", "    let primeNumbers: number[] = [];\n    let isPrime: boolean\
    \ = true;\n    for (let i: number = 2; i < a; i++) {\n        for (let j: number\
    \ = 2; j < i; j++) {\n            if (i % j === 0) {\n                isPrime\
    \ = false;\n            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = i + 1; j < primeNumbers.length; j++) {\n\
    \            for (let k: number = j + 1; k < primeNumbers.length; k++) {\n   \
    \             if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n\
    \                    return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ isPrime: boolean = true;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n\
    \            if (i % j === 0) {\n                isPrime = false;\n          \
    \      break;\n            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = i + 1; j < primeNumbers.length; j++) {\n\
    \            for (let k: number = j + 1; k < primeNumbers.length; k++) {\n   \
    \             if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n\
    \                    return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\n\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ result: boolean = false;\n    let prime: number[] = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   for (let i: number = 0; i < prime.length; i++) {\n        for (let j: number\
    \ = 0; j < prime.length; j++) {\n            for (let k: number = 0; k < prime.length;\
    \ k++) {\n                if (prime[i] * prime[j] * prime[k] === a) {\n      \
    \              result = true;\n                }\n            }\n        }\n \
    \   }\n    return result;\n}\n", "    let is_prime: boolean = true;\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n            is_prime\
    \ = false;\n        }\n    }\n    return is_prime;\n}\n", "    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n", " \
    \   let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n\
    \    return isPrime;\n}\n", "    let isPrime: boolean = true;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i === 0) {\n            isPrime =\
    \ false;\n        }\n    }\n    return isPrime;\n}\n", "  let primeNumbers: number[]\
    \ = [];\n  for (let i: number = 2; i < a; i++) {\n    if (is_prime(i)) {\n   \
    \   primeNumbers.push(i);\n    }\n  }\n  for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n    for (let j: number = 0; j < primeNumbers.length; j++) {\n      for\
    \ (let k: number = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n          return true;\n     \
    \   }\n      }\n    }\n  }\n  return false;\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let primeNumbers: number[] = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    let result: boolean = false;\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

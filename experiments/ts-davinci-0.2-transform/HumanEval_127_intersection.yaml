name: HumanEval_127_intersection
language: ts
prompt: "//You are given two intervals,\n// where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n// The given intervals are closed\
  \ which means that the interval (start, end)\n// includes both start and end.\n\
  // For each given interval, it is assumed that its start is less or equal its end.\n\
  // Your task is to determine whether the length of intersection of these two \n\
  // intervals is a prime number.\n// Example, the intersection of the intervals (1,\
  \ 3), (2, 4) is (2, 3)\n// which its length is 1, which not a prime number.\n//\
  \ If the length of the intersection is a prime number, return \"YES\",\n// otherwise,\
  \ return \"NO\".\n// If the two intervals don't intersect, return \"NO\".\n// [input/output]\
  \ samples:\n// >>> intersection([1, 2], [2, 3])\n// \"NO\"\n// >>> intersection([-1,\
  \ 1], [0, 4])\n// \"NO\"\n// >>> intersection([-3, -1], [-5, 5])\n// \"YES\"\nfunction\
  \ intersection(interval1: [number, number], interval2: [number, number]): string\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = intersection;\n  assert.deepEqual(candidate([1, 2],\
  \ [2, 3]),\"NO\");\n  assert.deepEqual(candidate([-1, 1], [0, 4]),\"NO\");\n  assert.deepEqual(candidate([-3,\
  \ -1], [-5, 5]),\"YES\");\n  assert.deepEqual(candidate([-2, 2], [-4, 0]),\"YES\"\
  );\n  assert.deepEqual(candidate([-11, 2], [-1, -1]),\"NO\");\n  assert.deepEqual(candidate([1,\
  \ 2], [3, 5]),\"NO\");\n  assert.deepEqual(candidate([1, 2], [1, 2]),\"NO\");\n\
  \  assert.deepEqual(candidate([-2, -2], [-3, -2]),\"NO\");\n}\n\ntest();"
completions: ["    let start = Math.max(interval1[0], interval2[0]);\n    let end\
    \ = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    let length = end - start + 1;\n    if (length === 1) {\n\
    \        return \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n     \
    \   if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n  \
    \  return \"YES\";\n}\n", "    const start = Math.max(interval1[0], interval2[0]);\n\
    \    const end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    const length = end - start + 1;\n    if (length\
    \ === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n", "    const [start1, end1] = interval1;\n  \
    \  const [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n\
    \    const end = Math.min(end1, end2);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    const length = end - start + 1;\n    if (length < 2) {\n\
    \        return \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n     \
    \   if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n  \
    \  return \"YES\";\n}\n", "    let [start1, end1] = interval1;\n    let [start2,\
    \ end2] = interval2;\n    let start = Math.max(start1, start2);\n    let end =\
    \ Math.min(end1, end2);\n    let length = end - start;\n    if (length < 0) return\
    \ \"NO\";\n    if (length === 0) return \"YES\";\n    if (length === 1) return\
    \ \"NO\";\n    for (let i = 2; i < length; i++) {\n        if (length % i ===\
    \ 0) return \"NO\";\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    let\
    \ length = end - start;\n    if (length < 0) {\n        return \"NO\";\n    }\n\
    \    if (length === 0) {\n        return \"YES\";\n    }\n    if (length === 1)\
    \ {\n        return \"NO\";\n    }\n    if (length === 2) {\n        return \"\
    YES\";\n    }\n    if (length % 2 === 0) {\n        return \"NO\";\n    }\n  \
    \  for (let i = 3; i <= Math.sqrt(length); i += 2) {\n        if (length % i ===\
    \ 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n",
  "    const start = Math.max(interval1[0], interval2[0]);\n    const end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    const\
    \ length = end - start + 1;\n    if (length < 2) {\n        return \"NO\";\n \
    \   }\n    if (length === 2) {\n        return \"YES\";\n    }\n    for (let i\
    \ = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "  const [start1, end1]\
    \ = interval1;\n  const [start2, end2] = interval2;\n  const start = Math.max(start1,\
    \ start2);\n  const end = Math.min(end1, end2);\n  const length = end - start;\n\
    \  if (length < 0) {\n    return \"NO\";\n  }\n  for (let i = 2; i < length; i++)\
    \ {\n    if (length % i === 0) {\n      return \"NO\";\n    }\n  }\n  return \"\
    YES\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n    let\
    \ end = Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n\
    \    if (length < 0) {\n        return \"NO\";\n    }\n    if (length === 0) {\n\
    \        return \"YES\";\n    }\n    if (length === 1) {\n        return \"NO\"\
    ;\n    }\n    if (length === 2) {\n        return \"YES\";\n    }\n    if (length\
    \ % 2 === 0) {\n        return \"NO\";\n    }\n    for (let i = 3; i <= Math.sqrt(length);\
    \ i += 2) {\n        if (length % i === 0) {\n            return \"NO\";\n   \
    \     }\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) {\n        return \"NO\";\n    }\n    let length = end - start\
    \ + 1;\n    if (length < 2) {\n        return \"NO\";\n    }\n    for (let i =\
    \ 2; i < length; i++) {\n        if (length % i === 0) {\n            return \"\
    NO\";\n        }\n    }\n    return \"YES\";\n}\n", "    const [start1, end1]\
    \ = interval1;\n    const [start2, end2] = interval2;\n    const start = Math.max(start1,\
    \ start2);\n    const end = Math.min(end1, end2);\n    if (start > end) {\n  \
    \      return \"NO\";\n    }\n    const length = end - start + 1;\n    if (length\
    \ < 2) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length\
    \ === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n", "    const [start1, end1] = interval1;\n  \
    \  const [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n\
    \    const end = Math.min(end1, end2);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    const length = end - start + 1;\n    if (length < 2) {\n\
    \        return \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n     \
    \   if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n  \
    \  return \"YES\";\n}\n", "    const start = Math.max(interval1[0], interval2[0]);\n\
    \    const end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    const length = end - start + 1;\n    if (length\
    \ === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    let length = end - start + 1;\n    if (length === 1) return \"\
    NO\";\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0) return\
    \ \"NO\";\n    }\n    return \"YES\";\n}\n", "    const start = Math.max(interval1[0],\
    \ interval2[0]);\n    const end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) {\n        return \"NO\";\n    }\n    const length = end - start\
    \ + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    let start =\
    \ Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    if (length === 1) {\n        return \"NO\";\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n",
  "    const start = Math.max(interval1[0], interval2[0]);\n    const end = Math.min(interval1[1],\
    \ interval2[1]);\n    const length = end - start;\n    if (length < 0) return\
    \ \"NO\";\n    if (length === 0) return \"YES\";\n    if (length === 1) return\
    \ \"NO\";\n    if (length === 2) return \"YES\";\n    if (length % 2 === 0) return\
    \ \"NO\";\n    for (let i = 3; i <= Math.sqrt(length); i += 2) {\n        if (length\
    \ % i === 0) return \"NO\";\n    }\n    return \"YES\";\n}\n", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ len = end - start + 1;\n    if (len === 1) {\n        return \"NO\";\n    }\n\
    \    for (let i = 2; i < len; i++) {\n        if (len % i === 0) {\n         \
    \   return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) return \"NO\";\n    let length = end -\
    \ start + 1;\n    if (length === 1) return \"NO\";\n    for (let i = 2; i < length;\
    \ i++) {\n        if (length % i === 0) return \"NO\";\n    }\n    return \"YES\"\
    ;\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n    let end =\
    \ Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    let length = end - start + 1;\n    if (length < 2) {\n \
    \       return \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n      \
    \  if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n   \
    \ return \"YES\";\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

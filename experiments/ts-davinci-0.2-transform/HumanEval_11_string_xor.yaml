name: HumanEval_11_string_xor
language: ts
prompt: "//Input are two strings a and b consisting only of 1s and 0s.\n// Perform\
  \ binary XOR on these inputs and return result also as a string.\n// >>> string_xor(\"\
  010\", \"110\")\n// \"100\"\nfunction string_xor(a: string, b: string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = string_xor;\n  assert.deepEqual(candidate(\"111000\"\
  , \"101010\"),\"010010\");\n  assert.deepEqual(candidate(\"1\", \"1\"),\"0\");\n\
  \  assert.deepEqual(candidate(\"0101\", \"0000\"),\"0101\");\n}\n\ntest();"
completions: ["  let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if\
    \ (a[i] === b[i]) {\n      result += \"0\";\n    } else {\n      result += \"\
    1\";\n    }\n  }\n  return result;\n}\n", "    let result = \"\";\n    for (let\
    \ i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result\
    \ += \"0\";\n        } else {\n            result += \"1\";\n        }\n    }\n\
    \    return result;\n}\n", "    let result = '';\n    for (let i = 0; i < a.length;\
    \ i++) {\n        if (a[i] === b[i]) {\n            result += '0';\n        }\
    \ else {\n            result += '1';\n        }\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i])\
    \ ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n\
    \    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n    \
    \        result += \"0\";\n        } else {\n            result += \"1\";\n  \
    \      }\n    }\n    return result;\n}\n", "    const aBin = a.split('').map(x\
    \ => parseInt(x, 10));\n    const bBin = b.split('').map(x => parseInt(x, 10));\n\
    \    const result = [];\n    for (let i = 0; i < aBin.length; i++) {\n       \
    \ result.push(aBin[i] ^ bBin[i]);\n    }\n    return result.join('');\n}\n", " \
    \   let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i])\
    \ ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "  if (a.length !== b.length)\
    \ {\n    throw new Error(\"Strings must be of equal length\");\n  }\n  let result\
    \ = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n\
    \      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n  return\
    \ result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++)\
    \ {\n        result += (a[i] == b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    if (a[i] === b[i]) {\n            result += \"0\";\n        } else {\n  \
    \          result += \"1\";\n        }\n    }\n    return result;\n}\n", "   \
    \ let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        result += a[i] === b[i] ?\
    \ \"0\" : \"1\";\n    }\n    return result;\n}\n", "  let result = \"\";\n  for\
    \ (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result +=\
    \ \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n  return result;\n\
    }\n", "    if (a.length !== b.length) {\n        throw new Error(\"Strings must\
    \ be of equal length\");\n    }\n    let result = \"\";\n    for (let i = 0; i\
    \ < a.length; i++) {\n        if (a[i] === b[i]) {\n            result += \"0\"\
    ;\n        } else {\n            result += \"1\";\n        }\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++)\
    \ {\n        if (a[i] === b[i]) {\n            result += \"0\";\n        } else\
    \ {\n            result += \"1\";\n        }\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i])\
    \ ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n\
    \    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n    \
    \        result += \"0\";\n        } else {\n            result += \"1\";\n  \
    \      }\n    }\n    return result;\n}\n", "    let result = \"\";\n    for (let\
    \ i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result\
    \ += \"0\";\n        } else {\n            result += \"1\";\n        }\n    }\n\
    \    return result;\n}\n", "  return a.split('').map((char, index) => {\n    return\
    \ char === b[index] ? '0' : '1';\n  }).join('');\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        result += a[i] === b[i] ?\
    \ \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n \
    \   for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i]) ?\
    \ \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let result = '';\n   \
    \ for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n       \
    \     result += '0';\n        } else {\n            result += '1';\n        }\n\
    \    }\n    return result;\n}\n", "    let result = '';\n    for (let i = 0; i\
    \ < a.length; i++) {\n        result += a[i] === b[i] ? '0' : '1';\n    }\n  \
    \  return result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        if (a[i] === b[i]) {\n            result += \"0\";\n       \
    \ } else {\n            result += \"1\";\n        }\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    if (a[i] === b[i]) {\n            result += \"0\";\n        } else {\n  \
    \          result += \"1\";\n        }\n    }\n    return result;\n}\n", "   \
    \ let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n  \
    \          result += \"0\";\n        } else {\n            result += \"1\";\n\
    \        }\n    }\n    return result;\n}\n", "  let result = \"\";\n  for (let\
    \ i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result += \"0\"\
    ;\n    } else {\n      result += \"1\";\n    }\n  }\n  return result;\n}\n", " \
    \   if (a.length !== b.length) {\n        throw new Error(\"Strings must be of\
    \ equal length\");\n    }\n    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        if (a[i] === b[i]) {\n            result += \"0\";\n       \
    \ } else {\n            result += \"1\";\n        }\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    if (a[i] === b[i]) {\n            result += \"0\";\n        } else {\n  \
    \          result += \"1\";\n        }\n    }\n    return result;\n}\n", "   \
    \ return a\n        .split(\"\")\n        .map((x, i) => (x === b[i] ? \"0\" :\
    \ \"1\"))\n        .join(\"\");\n}\n", "  let result = \"\";\n  for (let i = 0;\
    \ i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result += \"0\";\n   \
    \ } else {\n      result += \"1\";\n    }\n  }\n  return result;\n}\n", "  let\
    \ result = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i])\
    \ {\n      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n\
    \  return result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        if (a[i] === b[i]) {\n            result += \"0\";\n       \
    \ } else {\n            result += \"1\";\n        }\n    }\n    return result;\n\
    }\n", "  let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i]\
    \ === b[i]) {\n      result += \"0\";\n    } else {\n      result += \"1\";\n\
    \    }\n  }\n  return result;\n}\n", "    let result = '';\n    for (let i = 0;\
    \ i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result += '0';\n\
    \        } else {\n            result += '1';\n        }\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    if (a[i] === b[i]) {\n            result += \"0\";\n        } else {\n  \
    \          result += \"1\";\n        }\n    }\n    return result;\n}\n", "   \
    \ let res = \"\";\n    for (let i = 0; i < a.length; i++) {\n        res += (a[i]\
    \ === b[i]) ? \"0\" : \"1\";\n    }\n    return res;\n}\n", "    let result =\
    \ \"\";\n    for (let i = 0; i < a.length; i++) {\n        result += (a[i] ===\
    \ b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    const aBin = a.split('');\n\
    \    const bBin = b.split('');\n    const result = [];\n\n    for (let i = 0;\
    \ i < aBin.length; i++) {\n        if (aBin[i] === bBin[i]) {\n            result.push('0');\n\
    \        } else {\n            result.push('1');\n        }\n    }\n\n    return\
    \ result.join('');\n}\n", "  let result = \"\";\n  for (let i = 0; i < a.length;\
    \ i++) {\n    if (a[i] === b[i]) {\n      result += \"0\";\n    } else {\n   \
    \   result += \"1\";\n    }\n  }\n  return result;\n}\n", "  let result = \"\"\
    ;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result\
    \ += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n  return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    if (a[i] === b[i]) {\n            result += \"0\";\n        } else {\n  \
    \          result += \"1\";\n        }\n    }\n    return result;\n}\n", "  let\
    \ result = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i])\
    \ {\n      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n\
    \  return result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        result += a[i] === b[i] ? \"0\" : \"1\";\n    }\n    return\
    \ result;\n}\n", "    const aBin = a.split('').map(x => parseInt(x, 10));\n  \
    \  const bBin = b.split('').map(x => parseInt(x, 10));\n    const result = [];\n\
    \    for (let i = 0; i < aBin.length; i++) {\n        result.push(aBin[i] ^ bBin[i]);\n\
    \    }\n    return result.join('');\n}\n", "  let result = \"\";\n  for (let i\
    \ = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result += \"0\";\n\
    \    } else {\n      result += \"1\";\n    }\n  }\n  return result;\n}\n", " \
    \   if (a.length !== b.length) {\n        throw new Error(\"Strings must be of\
    \ equal length\");\n    }\n    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        if (a[i] === b[i]) {\n            result += \"0\";\n       \
    \ } else {\n            result += \"1\";\n        }\n    }\n    return result;\n\
    }\n", "    const aBin = a.split('').map(x => parseInt(x, 10));\n    const bBin\
    \ = b.split('').map(x => parseInt(x, 10));\n    const result = [];\n    for (let\
    \ i = 0; i < aBin.length; i++) {\n        result.push(aBin[i] ^ bBin[i]);\n  \
    \  }\n    return result.join('');\n}\n", "    let result = \"\";\n    for (let\
    \ i = 0; i < a.length; i++) {\n        result += (a[i] === b[i]) ? \"0\" : \"\
    1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n    for (let i\
    \ = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result\
    \ += \"0\";\n        } else {\n            result += \"1\";\n        }\n    }\n\
    \    return result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        if (a[i] === b[i]) {\n            result += \"0\";\n       \
    \ } else {\n            result += \"1\";\n        }\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    result += a[i] == b[i] ? \"0\" : \"1\";\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        result += a[i] === b[i] ?\
    \ \"0\" : \"1\";\n    }\n    return result;\n}\n", "    const aBin = a.split('').map(x\
    \ => parseInt(x, 10));\n    const bBin = b.split('').map(x => parseInt(x, 10));\n\
    \    const result = [];\n    for (let i = 0; i < aBin.length; i++) {\n       \
    \ result.push(aBin[i] ^ bBin[i]);\n    }\n    return result.join('');\n}\n", " \
    \   let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n  \
    \          result += \"0\";\n        } else {\n            result += \"1\";\n\
    \        }\n    }\n    return result;\n}\n", "    if (a.length !== b.length) {\n\
    \        throw new Error(\"Strings must be of equal length\");\n    }\n    let\
    \ result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] ===\
    \ b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    const a_bytes =\
    \ a.split('').map(x => parseInt(x, 10));\n    const b_bytes = b.split('').map(x\
    \ => parseInt(x, 10));\n    const c_bytes = a_bytes.map((x, i) => x ^ b_bytes[i]);\n\
    \    return c_bytes.map(x => x.toString()).join('');\n}\n", "    if (a.length\
    \ !== b.length) {\n        throw new Error(\"Strings must be of equal length\"\
    );\n    }\n    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n\
    \        result += a[i] === b[i] ? \"0\" : \"1\";\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    result += (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result\
    \ += (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let\
    \ result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] ===\
    \ b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i])\
    \ ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n\
    \    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n    \
    \        result += \"0\";\n        } else {\n            result += \"1\";\n  \
    \      }\n    }\n    return result;\n}\n", "    let result = \"\";\n    for (let\
    \ i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result\
    \ += \"0\";\n        } else {\n            result += \"1\";\n        }\n    }\n\
    \    return result;\n}\n", "  if (a.length !== b.length) {\n    throw new Error(\"\
    Strings must be of equal length\");\n  }\n  let result = \"\";\n  for (let i =\
    \ 0; i < a.length; i++) {\n    result += a[i] === b[i] ? \"0\" : \"1\";\n  }\n\
    \  return result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        if (a[i] === b[i]) {\n            result += \"0\";\n       \
    \ } else {\n            result += \"1\";\n        }\n    }\n    return result;\n\
    }\n", "  let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i]\
    \ === b[i]) {\n      result += \"0\";\n    } else {\n      result += \"1\";\n\
    \    }\n  }\n  return result;\n}\n", "    let result = '';\n    for (let i = 0;\
    \ i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result += '0';\n\
    \        } else {\n            result += '1';\n        }\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    if (a[i] === b[i]) {\n            result += \"0\";\n        } else {\n  \
    \          result += \"1\";\n        }\n    }\n    return result;\n}\n", "   \
    \ let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result\
    \ += (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let\
    \ result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] ===\
    \ b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n  \
    \          result += \"0\";\n        } else {\n            result += \"1\";\n\
    \        }\n    }\n    return result;\n}\n", "    let res = \"\";\n    for (let\
    \ i = 0; i < a.length; i++) {\n        res += (a[i] === b[i]) ? \"0\" : \"1\"\
    ;\n    }\n    return res;\n}\n", "  let result = \"\";\n  for (let i = 0; i <\
    \ a.length; i++) {\n    if (a[i] === b[i]) {\n      result += \"0\";\n    } else\
    \ {\n      result += \"1\";\n    }\n  }\n  return result;\n}\n", "    let result\
    \ = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i])\
    \ {\n            result += \"0\";\n        } else {\n            result += \"\
    1\";\n        }\n    }\n    return result;\n}\n", "    return a.split('').map((v,\
    \ i) => v === b[i] ? '0' : '1').join('');\n}\n", "    let result = \"\";\n   \
    \ for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i]) ? \"\
    0\" : \"1\";\n    }\n    return result;\n}\n", "    const aBin = a.split('');\n\
    \    const bBin = b.split('');\n    const result = [];\n\n    for (let i = 0;\
    \ i < aBin.length; i++) {\n        if (aBin[i] === bBin[i]) {\n            result.push('0');\n\
    \        } else {\n            result.push('1');\n        }\n    }\n\n    return\
    \ result.join('');\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        result += a[i] === b[i] ? \"0\" : \"1\";\n    }\n    return\
    \ result;\n}\n", "    let result = '';\n    for (let i = 0; i < a.length; i++)\
    \ {\n        if (a[i] === b[i]) {\n            result += '0';\n        } else\
    \ {\n            result += '1';\n        }\n    }\n    return result;\n}\n", " \
    \   let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result\
    \ += a[i] === b[i] ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "  let result\
    \ = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n\
    \      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n  return\
    \ result;\n}\n", "  let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n\
    \    if (a[i] === b[i]) {\n      result += \"0\";\n    } else {\n      result\
    \ += \"1\";\n    }\n  }\n  return result;\n}\n", "    let result = \"\";\n   \
    \ for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n       \
    \     result += \"0\";\n        } else {\n            result += \"1\";\n     \
    \   }\n    }\n    return result;\n}\n", "    let result = \"\";\n    for (let\
    \ i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result\
    \ += \"0\";\n        } else {\n            result += \"1\";\n        }\n    }\n\
    \    return result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        if (a[i] === b[i]) {\n            result += \"0\";\n       \
    \ } else {\n            result += \"1\";\n        }\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    if (a[i] === b[i]) {\n            result += \"0\";\n        } else {\n  \
    \          result += \"1\";\n        }\n    }\n    return result;\n}\n", "   \
    \ let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n  \
    \          result += \"0\";\n        } else {\n            result += \"1\";\n\
    \        }\n    }\n    return result;\n}\n", "    if (a.length !== b.length) {\n\
    \        throw new Error(\"Strings must be of equal length\");\n    }\n    let\
    \ result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result +=\
    \ (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let\
    \ result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] ===\
    \ b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n  \
    \          result += \"0\";\n        } else {\n            result += \"1\";\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    for\
    \ (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i]) ? \"0\"\
    \ : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n    for\
    \ (let i = 0; i < a.length; i++) {\n        result += a[i] === b[i] ? \"0\" :\
    \ \"1\";\n    }\n    return result;\n}\n", "    if (a.length !== b.length) {\n\
    \        throw new Error(\"Strings must be of equal length\");\n    }\n    let\
    \ result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result +=\
    \ a[i] === b[i] ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "  const aBin\
    \ = a.split('').map(x => parseInt(x, 10));\n  const bBin = b.split('').map(x =>\
    \ parseInt(x, 10));\n  const result = [];\n  for (let i = 0; i < aBin.length;\
    \ i++) {\n    result.push(aBin[i] ^ bBin[i]);\n  }\n  return result.join('');\n\
    }\n", "    return a.split('').map((x, i) => x == b[i] ? '0' : '1').join('');\n\
    }\n", "  let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n    result\
    \ += a[i] === b[i] ? \"0\" : \"1\";\n  }\n  return result;\n}\n", "  let result\
    \ = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n\
    \      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n  return\
    \ result;\n}\n", "  let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n\
    \    result += a[i] === b[i] ? \"0\" : \"1\";\n  }\n  return result;\n}\n", " \
    \   if (a.length !== b.length) {\n        throw new Error(\"Strings must be of\
    \ equal length\");\n    }\n    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        result += (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++)\
    \ {\n        if (a[i] === b[i]) {\n            result += \"0\";\n        } else\
    \ {\n            result += \"1\";\n        }\n    }\n    return result;\n}\n",
  "    if (a.length !== b.length) {\n        throw new Error(\"Strings must be of\
    \ equal length\");\n    }\n    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        result += a[i] === b[i] ? \"0\" : \"1\";\n    }\n    return\
    \ result;\n}\n", "  let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n\
    \    if (a[i] === b[i]) {\n      result += \"0\";\n    } else {\n      result\
    \ += \"1\";\n    }\n  }\n  return result;\n}\n", "    let result = \"\";\n   \
    \ for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i]) ? \"\
    0\" : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n    for\
    \ (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n           \
    \ result += \"0\";\n        } else {\n            result += \"1\";\n        }\n\
    \    }\n    return result;\n}\n", "    let res = \"\";\n    for (let i = 0; i\
    \ < a.length; i++) {\n        if (a[i] === b[i]) {\n            res += \"0\";\n\
    \        } else {\n            res += \"1\";\n        }\n    }\n    return res;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    if (a[i] === b[i]) {\n            result += \"0\";\n        } else {\n  \
    \          result += \"1\";\n        }\n    }\n    return result;\n}\n", "   \
    \ let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        result += a[i] === b[i] ?\
    \ \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n \
    \   for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i]) ?\
    \ \"0\" : \"1\";\n    }\n    return result;\n}\n", "  let result = \"\";\n  for\
    \ (let i = 0; i < a.length; i++) {\n    result += a[i] === b[i] ? \"0\" : \"1\"\
    ;\n  }\n  return result;\n}\n", "    let result = \"\";\n    for (let i = 0; i\
    \ < a.length; i++) {\n        if (a[i] === b[i]) {\n            result += \"0\"\
    ;\n        } else {\n            result += \"1\";\n        }\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++)\
    \ {\n        if (a[i] === b[i]) {\n            result += \"0\";\n        } else\
    \ {\n            result += \"1\";\n        }\n    }\n    return result;\n}\n",
  "  let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] ===\
    \ b[i]) {\n      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n\
    \  }\n  return result;\n}\n", "    let result = \"\";\n    for (let i = 0; i <\
    \ a.length; i++) {\n        result += (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n\
    \    return result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length;\
    \ i++) {\n        if (a[i] === b[i]) {\n            result += \"0\";\n       \
    \ } else {\n            result += \"1\";\n        }\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    if (a[i] === b[i]) {\n            result += \"0\";\n        } else {\n  \
    \          result += \"1\";\n        }\n    }\n    return result;\n}\n", "   \
    \ let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "  const aBin = a.split('').map(x\
    \ => parseInt(x, 10));\n  const bBin = b.split('').map(x => parseInt(x, 10));\n\
    \  const result = [];\n  for (let i = 0; i < aBin.length; i++) {\n    result.push(aBin[i]\
    \ ^ bBin[i]);\n  }\n  return result.join('');\n}\n", "  let result = \"\";\n \
    \ for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result\
    \ += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n  return result;\n\
    }\n", "  let result = \"\";\n  let maxLength = Math.max(a.length, b.length);\n\
    \  for (let i = 0; i < maxLength; i++) {\n    let aBit = a[a.length - i - 1] ||\
    \ \"0\";\n    let bBit = b[b.length - i - 1] || \"0\";\n    result = (aBit ===\
    \ bBit ? \"0\" : \"1\") + result;\n  }\n  return result;\n}\n", "    let result\
    \ = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i])\
    \ {\n            result += \"0\";\n        } else {\n            result += \"\
    1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\";\n  \
    \  for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i]) ? \"\
    0\" : \"1\";\n    }\n    return result;\n}\n", "  let result = \"\";\n  for (let\
    \ i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result += \"0\"\
    ;\n    } else {\n      result += \"1\";\n    }\n  }\n  return result;\n}\n", " \
    \ let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] ===\
    \ b[i]) {\n      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n\
    \  }\n  return result;\n}\n", "    let result = \"\";\n    for (let i = 0; i <\
    \ a.length; i++) {\n        if (a[i] === b[i]) {\n            result += \"0\"\
    ;\n        } else {\n            result += \"1\";\n        }\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++)\
    \ {\n        if (a[i] === b[i]) {\n            result += \"0\";\n        } else\
    \ {\n            result += \"1\";\n        }\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i])\
    \ ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "  let result = \"\";\n \
    \ for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result\
    \ += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n  return result;\n\
    }\n", "    if (a.length !== b.length) {\n        throw new Error(\"Strings must\
    \ be of equal length\");\n    }\n    let result = \"\";\n    for (let i = 0; i\
    \ < a.length; i++) {\n        result += a[i] === b[i] ? \"0\" : \"1\";\n    }\n\
    \    return result;\n}\n", "  let result = \"\";\n  for (let i = 0; i < a.length;\
    \ i++) {\n    if (a[i] === b[i]) {\n      result += \"0\";\n    } else {\n   \
    \   result += \"1\";\n    }\n  }\n  return result;\n}\n", "    let result = \"\
    \";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n\
    \            result += \"0\";\n        } else {\n            result += \"1\";\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    for\
    \ (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n           \
    \ result += \"0\";\n        } else {\n            result += \"1\";\n        }\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    for (let i = 0;\
    \ i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result += \"\
    0\";\n        } else {\n            result += \"1\";\n        }\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++)\
    \ {\n        if (a[i] === b[i]) {\n            result += \"0\";\n        } else\
    \ {\n            result += \"1\";\n        }\n    }\n    return result;\n}\n",
  "    let result = '';\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += '0';\n        } else {\n            result\
    \ += '1';\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n  \
    \          result += \"0\";\n        } else {\n            result += \"1\";\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    for\
    \ (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n           \
    \ result += \"0\";\n        } else {\n            result += \"1\";\n        }\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    for (let i = 0;\
    \ i < a.length; i++) {\n        result += (a[i] === b[i]) ? \"0\" : \"1\";\n \
    \   }\n    return result;\n}\n", "  let result = \"\";\n  for (let i = 0; i <\
    \ a.length; i++) {\n    result += (a[i] === b[i]) ? \"0\" : \"1\";\n  }\n  return\
    \ result;\n}\n", "    const aBin = a.split('').map(x => parseInt(x, 10));\n  \
    \  const bBin = b.split('').map(x => parseInt(x, 10));\n    const result = [];\n\
    \    for (let i = 0; i < aBin.length; i++) {\n        result.push(aBin[i] ^ bBin[i]);\n\
    \    }\n    return result.join('');\n}\n", "    let result = '';\n    for (let\
    \ i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result\
    \ += '0';\n        } else {\n            result += '1';\n        }\n    }\n  \
    \  return result;\n}\n", "  if (a.length !== b.length) {\n    throw new Error(\"\
    Strings must be of equal length\");\n  }\n  let result = \"\";\n  for (let i =\
    \ 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result += \"0\";\n\
    \    } else {\n      result += \"1\";\n    }\n  }\n  return result;\n}\n", " \
    \ let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] ===\
    \ b[i]) {\n      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n\
    \  }\n  return result;\n}\n", "  let result = \"\";\n  for (let i = 0; i < a.length;\
    \ i++) {\n    if (a[i] === b[i]) {\n      result += \"0\";\n    } else {\n   \
    \   result += \"1\";\n    }\n  }\n  return result;\n}\n", "    let result = \"\
    \";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n\
    \            result += \"0\";\n        } else {\n            result += \"1\";\n\
    \        }\n    }\n    return result;\n}\n", "  let result = \"\";\n  for (let\
    \ i = 0; i < a.length; i++) {\n    result += a[i] === b[i] ? \"0\" : \"1\";\n\
    \  }\n  return result;\n}\n", "    let result = \"\";\n    for (let i = 0; i <\
    \ a.length; i++) {\n        if (a[i] === b[i]) {\n            result += \"0\"\
    ;\n        } else {\n            result += \"1\";\n        }\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++)\
    \ {\n        if (a[i] === b[i]) {\n            result += \"0\";\n        } else\
    \ {\n            result += \"1\";\n        }\n    }\n    return result;\n}\n",
  "  let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] ===\
    \ b[i]) {\n      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n\
    \  }\n  return result;\n}\n", "  let result = \"\";\n  for (let i = 0; i < a.length;\
    \ i++) {\n    if (a[i] === b[i]) {\n      result += \"0\";\n    } else {\n   \
    \   result += \"1\";\n    }\n  }\n  return result;\n}\n", "    let result = \"\
    \";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n\
    \            result += \"0\";\n        } else {\n            result += \"1\";\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    for\
    \ (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i]) ? \"0\"\
    \ : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n    for\
    \ (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n           \
    \ result += \"0\";\n        } else {\n            result += \"1\";\n        }\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    for (let i = 0;\
    \ i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result += \"\
    0\";\n        } else {\n            result += \"1\";\n        }\n    }\n    return\
    \ result;\n}\n", "  let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n\
    \    if (a[i] === b[i]) {\n      result += \"0\";\n    } else {\n      result\
    \ += \"1\";\n    }\n  }\n  return result;\n}\n", "    let result = \"\";\n   \
    \ for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n       \
    \     result += \"0\";\n        } else {\n            result += \"1\";\n     \
    \   }\n    }\n    return result;\n}\n", "    return a.split('').map((c, i) =>\
    \ c == b[i] ? '0' : '1').join('');\n}\n", "    if (a.length !== b.length) {\n\
    \        throw new Error(\"Strings must be of equal length\");\n    }\n    let\
    \ result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] ===\
    \ b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n  \
    \          result += \"0\";\n        } else {\n            result += \"1\";\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    for\
    \ (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n           \
    \ result += \"0\";\n        } else {\n            result += \"1\";\n        }\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    for (let i = 0;\
    \ i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result += \"\
    0\";\n        } else {\n            result += \"1\";\n        }\n    }\n    return\
    \ result;\n}\n", "    return a.split('').map((char, index) => {\n        return\
    \ char === b[index] ? '0' : '1';\n    }).join('');\n}\n", "    let result = \"\
    \";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n\
    \            result += \"0\";\n        } else {\n            result += \"1\";\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    for\
    \ (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i]) ? \"0\"\
    \ : \"1\";\n    }\n    return result;\n}\n", "  let result = \"\";\n  for (let\
    \ i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result += \"0\"\
    ;\n    } else {\n      result += \"1\";\n    }\n  }\n  return result;\n}\n", " \
    \   let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n  \
    \          result += \"0\";\n        } else {\n            result += \"1\";\n\
    \        }\n    }\n    return result;\n}\n", "  let result = \"\";\n  for (let\
    \ i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result += \"0\"\
    ;\n    } else {\n      result += \"1\";\n    }\n  }\n  return result;\n}\n", " \
    \   let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n  \
    \          result += \"0\";\n        } else {\n            result += \"1\";\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    for\
    \ (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n           \
    \ result += \"0\";\n        } else {\n            result += \"1\";\n        }\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    for (let i = 0;\
    \ i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result += \"\
    0\";\n        } else {\n            result += \"1\";\n        }\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++)\
    \ {\n        if (a[i] === b[i]) {\n            result += \"0\";\n        } else\
    \ {\n            result += \"1\";\n        }\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        result\
    \ += a[i] === b[i] ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "  let result\
    \ = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n\
    \      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n  return\
    \ result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++)\
    \ {\n        if (a[i] === b[i]) {\n            result += \"0\";\n        } else\
    \ {\n            result += \"1\";\n        }\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "  let result = \"\"\
    ;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result\
    \ += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n  return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    if (a[i] === b[i]) {\n            result += \"0\";\n        } else {\n  \
    \          result += \"1\";\n        }\n    }\n    return result;\n}\n", "   \
    \ let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "    let result = \"\"\
    ;\n    for (let i = 0; i < a.length; i++) {\n        result += (a[i] === b[i])\
    \ ? \"0\" : \"1\";\n    }\n    return result;\n}\n", "    let result = \"\";\n\
    \    for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n    \
    \        result += \"0\";\n        } else {\n            result += \"1\";\n  \
    \      }\n    }\n    return result;\n}\n", "    let result = \"\";\n    for (let\
    \ i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n            result\
    \ += \"0\";\n        } else {\n            result += \"1\";\n        }\n    }\n\
    \    return result;\n}\n", "    let result = '';\n    for (let i = 0; i < a.length;\
    \ i++) {\n        result += (a[i] === b[i]) ? '0' : '1';\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n    \
    \    result += (a[i] === b[i]) ? \"0\" : \"1\";\n    }\n    return result;\n}\n",
  "  return a.split('').map((v, i) => v === b[i] ? '0' : '1').join('');\n}\n", " \
    \   let result = \"\";\n    for (let i = 0; i < a.length; i++) {\n        if (a[i]\
    \ === b[i]) {\n            result += \"0\";\n        } else {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;\n}\n", "  let result = \"\"\
    ;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result\
    \ += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n  return result;\n\
    }\n", "  let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i]\
    \ === b[i]) {\n      result += \"0\";\n    } else {\n      result += \"1\";\n\
    \    }\n  }\n  return result;\n}\n", "  let result = \"\";\n  for (let i = 0;\
    \ i < a.length; i++) {\n    result += a[i] === b[i] ? \"0\" : \"1\";\n  }\n  return\
    \ result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < a.length; i++)\
    \ {\n        result += a[i] === b[i] ? \"0\" : \"1\";\n    }\n    return result;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

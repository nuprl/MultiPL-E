name: HumanEval_57_monotonic
language: ts
prompt: "//Return True is list elements are monotonically increasing or decreasing.\n\
  // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n// false\n\
  // >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l: number[]): boolean\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4,\
  \ 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
  \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n  assert.deepEqual(candidate([4,\
  \ 1, 1, 0]),true);\n  assert.deepEqual(candidate([1, 2, 3, 2, 5, 60]),false);\n\
  \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n  assert.deepEqual(candidate([9,\
  \ 9, 9, 9]),true);\n}\n\ntest();"
completions: ["    let isIncreasing = true;\n    let isDecreasing = true;\n    for\
    \ (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n     \
    \       isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n   \
    \         isDecreasing = false;\n        }\n    }\n    return isIncreasing ||\
    \ isDecreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length <= 1) {\n        return true;\n    }\n    let isIncreasing = l[0]\
    \ < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (isIncreasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!isIncreasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    let increasing = true;\n    let decreasing = true;\n    for\
    \ (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n     \
    \       increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n     \
    \       decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  let\
    \ inc = true;\n  let dec = true;\n  for (let i = 0; i < l.length - 1; i++) {\n\
    \    if (l[i] > l[i + 1]) {\n      inc = false;\n    }\n    if (l[i] < l[i + 1])\
    \ {\n      dec = false;\n    }\n  }\n  return inc || dec;\n}\n", "  if (l.length\
    \ < 2) {\n    return true;\n  }\n  let increasing = l[0] < l[1];\n  for (let i\
    \ = 1; i < l.length - 1; i++) {\n    if (increasing && l[i] > l[i + 1]) {\n  \
    \    return false;\n    }\n    if (!increasing && l[i] < l[i + 1]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "    let increasing = true;\n    let\
    \ decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;\n}\n", "    let increasing = true;\n    let\
    \ decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;\n}\n", "    let increasing = true;\n    let\
    \ decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;\n}\n", "    let inc = true;\n    let dec =\
    \ true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            dec = false;\n        }\n    }\n    return inc || dec;\n}\n", " \
    \   let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i\
    \ < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  return l.every((v, i, a) => i === 0 || a[i - 1] <= v) || l.every((v, i, a)\
    \ => i === 0 || a[i - 1] >= v);\n}\n", "    let inc = true;\n    let dec = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n       \
    \     dec = false;\n        }\n    }\n    return inc || dec;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "  let isIncreasing =\
    \ true;\n  let isDecreasing = true;\n  for (let i = 0; i < l.length - 1; i++)\
    \ {\n    if (l[i] > l[i + 1]) {\n      isIncreasing = false;\n    }\n    if (l[i]\
    \ < l[i + 1]) {\n      isDecreasing = false;\n    }\n  }\n  return isIncreasing\
    \ || isDecreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let isIncreasing = true;\n    let isDecreasing = true;\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n          \
    \  isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n        \
    \    isDecreasing = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length < 2) {\n        return true;\n    }\n\n    let increasing = l[0]\
    \ < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (increasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        } else if (!increasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n\n    return\
    \ true;\n}\n", "    let increasing = true;\n    let decreasing = true;\n    for\
    \ (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n     \
    \       increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n     \
    \       decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    if (l.length < 2) {\n        return true;\n    }\n    let increasing\
    \ = l[0] < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (increasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!increasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    if (l.length <= 1) {\n        return true;\n    }\n    let\
    \ increasing = l[0] < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n  \
    \      if (increasing && l[i] > l[i + 1]) {\n            return false;\n     \
    \   }\n        if (!increasing && l[i] < l[i + 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    let increasing = true;\n    let\
    \ decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;\n}\n", "    let increasing = true;\n    let\
    \ decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;\n}\n", "    if (l.length < 2) {\n        return\
    \ true;\n    }\n    let increasing = l[0] < l[1];\n    for (let i = 1; i < l.length\
    \ - 1; i++) {\n        if (increasing && l[i] > l[i + 1]) {\n            return\
    \ false;\n        }\n        if (!increasing && l[i] < l[i + 1]) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let inc = true;\n\
    \    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] <\
    \ l[i + 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "    let isIncreasing = true;\n    let isDecreasing = true;\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n          \
    \  isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n        \
    \    isDecreasing = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  let\
    \ isIncreasing = true;\n  let isDecreasing = true;\n  for (let i = 0; i < l.length\
    \ - 1; i++) {\n    if (l[i] > l[i + 1]) {\n      isIncreasing = false;\n    }\n\
    \    if (l[i] < l[i + 1]) {\n      isDecreasing = false;\n    }\n  }\n  return\
    \ isIncreasing || isDecreasing;\n}\n", "    if (l.length <= 1) {\n        return\
    \ true;\n    }\n    let increasing = l[0] < l[1];\n    for (let i = 1; i < l.length\
    \ - 1; i++) {\n        if (increasing && l[i] > l[i + 1]) {\n            return\
    \ false;\n        }\n        if (!increasing && l[i] < l[i + 1]) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let inc = true;\n\
    \    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] <\
    \ l[i + 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "  let increasing = true;\n  let decreasing = true;\n  for (let i = 0; i\
    \ < l.length - 1; i++) {\n    if (l[i] < l[i + 1]) {\n      decreasing = false;\n\
    \    }\n    if (l[i] > l[i + 1]) {\n      increasing = false;\n    }\n  }\n  return\
    \ increasing || decreasing;\n}\n", "  let increasing = true;\n  let decreasing\
    \ = true;\n  for (let i = 0; i < l.length - 1; i++) {\n    if (l[i] > l[i + 1])\
    \ {\n      increasing = false;\n    }\n    if (l[i] < l[i + 1]) {\n      decreasing\
    \ = false;\n    }\n  }\n  return increasing || decreasing;\n}\n", "  let increasing\
    \ = true;\n  let decreasing = true;\n  for (let i = 0; i < l.length - 1; i++)\
    \ {\n    if (l[i] > l[i + 1]) {\n      increasing = false;\n    }\n    if (l[i]\
    \ < l[i + 1]) {\n      decreasing = false;\n    }\n  }\n  return increasing ||\
    \ decreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "  if (l.length < 2) {\n    return true;\n  }\n  let inc = l[1] > l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    if (inc && l[i] < l[i - 1]) {\n \
    \     return false;\n    }\n    if (!inc && l[i] > l[i - 1]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "    let increasing = true;\n    let decreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  let\
    \ isIncreasing = true;\n  let isDecreasing = true;\n  for (let i = 0; i < l.length\
    \ - 1; i++) {\n    if (l[i] > l[i + 1]) {\n      isIncreasing = false;\n    }\n\
    \    if (l[i] < l[i + 1]) {\n      isDecreasing = false;\n    }\n  }\n  return\
    \ isIncreasing || isDecreasing;\n}\n", "    let increasing = true;\n    let decreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let isIncreasing = true;\n    let isDecreasing = true;\n    for (let i = 0;\
    \ i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing\
    \ = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n}\n",
  "    let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let increasing = true;\n    let decreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length\
    \ - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n    \
    \    }\n        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n\
    \    }\n    return inc || dec;\n}\n", "  let increasing = true;\n  let decreasing\
    \ = true;\n  for (let i = 0; i < l.length - 1; i++) {\n    if (l[i] > l[i + 1])\
    \ {\n      increasing = false;\n    }\n    if (l[i] < l[i + 1]) {\n      decreasing\
    \ = false;\n    }\n  }\n  return increasing || decreasing;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let inc = true;\n\
    \    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] <\
    \ l[i + 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "    const len = l.length;\n    if (len < 2) {\n        return true;\n \
    \   }\n    let increasing = l[0] < l[1];\n    for (let i = 1; i < len - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let isIncreasing = true;\n    let isDecreasing = true;\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n          \
    \  isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n        \
    \    isDecreasing = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    if (l.length <= 1) {\n        return true;\n\
    \    }\n    let direction = l[1] - l[0];\n    for (let i = 2; i < l.length; i++)\
    \ {\n        if (direction * (l[i] - l[i - 1]) < 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "  let increasing = true;\n  let decreasing\
    \ = true;\n  for (let i = 0; i < l.length - 1; i++) {\n    if (l[i] > l[i + 1])\
    \ {\n      increasing = false;\n    }\n    if (l[i] < l[i + 1]) {\n      decreasing\
    \ = false;\n    }\n  }\n  return increasing || decreasing;\n}\n", "    if (l.length\
    \ < 2) {\n        return true;\n    }\n    let increasing = l[0] < l[1];\n   \
    \ for (let i = 1; i < l.length - 1; i++) {\n        if (increasing) {\n      \
    \      if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;\n}\n", "    if (l.length\
    \ <= 1) {\n        return true;\n    }\n    let isIncreasing = l[0] < l[1];\n\
    \    for (let i = 1; i < l.length - 1; i++) {\n        if (isIncreasing && l[i]\
    \ > l[i + 1]) {\n            return false;\n        }\n        if (!isIncreasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    let increasing = true;\n    let decreasing = true;\n    for\
    \ (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n     \
    \       increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n     \
    \       decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "  let increasing = true;\n  let decreasing = true;\n  for (let i = 0; i\
    \ < l.length - 1; i++) {\n    if (l[i] > l[i + 1]) {\n      increasing = false;\n\
    \    }\n    if (l[i] < l[i + 1]) {\n      decreasing = false;\n    }\n  }\n  return\
    \ increasing || decreasing;\n}\n", "    let isIncreasing = true;\n    let isDecreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            isIncreasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            isDecreasing = false;\n        }\n    }\n    return isIncreasing\
    \ || isDecreasing;\n}\n", "  let increasing = true;\n  let decreasing = true;\n\
    \  for (let i = 0; i < l.length - 1; i++) {\n    if (l[i] > l[i + 1]) {\n    \
    \  increasing = false;\n    }\n    if (l[i] < l[i + 1]) {\n      decreasing =\
    \ false;\n    }\n  }\n  return increasing || decreasing;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    return l.every((v,\
    \ i, a) => i === 0 || (a[i - 1] <= v && a[i + 1] <= v)) ||\n        l.every((v,\
    \ i, a) => i === 0 || (a[i - 1] >= v && a[i + 1] >= v));\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    if (l.length ===\
    \ 0) {\n        return true;\n    }\n    let prev = l[0];\n    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 1; i < l.length; i++)\
    \ {\n        if (l[i] > prev) {\n            decreasing = false;\n        } else\
    \ if (l[i] < prev) {\n            increasing = false;\n        }\n        prev\
    \ = l[i];\n    }\n    return increasing || decreasing;\n}\n", "    if (l.length\
    \ < 2) {\n        return true;\n    }\n    let increasing = l[0] < l[1];\n   \
    \ for (let i = 1; i < l.length - 1; i++) {\n        if (increasing && l[i] > l[i\
    \ + 1]) {\n            return false;\n        }\n        if (!increasing && l[i]\
    \ < l[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    if (l.length < 2) {\n        return true;\n    }\n    let isIncreasing\
    \ = l[0] < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (isIncreasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;\n}\n", " \
    \   let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i\
    \ < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let isMonotonic = true;\n    let isIncreasing = true;\n    let isDecreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            isIncreasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            isDecreasing = false;\n        }\n    }\n    if (!isIncreasing\
    \ && !isDecreasing) {\n        isMonotonic = false;\n    }\n    return isMonotonic;\n\
    }\n", "    let isIncreasing = true;\n    let isDecreasing = true;\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n          \
    \  isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n        \
    \    isDecreasing = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n\
    }\n", "    let isIncreasing = true;\n    let isDecreasing = true;\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n          \
    \  isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n        \
    \    isDecreasing = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n\
    }\n", "    if (l.length < 2) {\n        return true;\n    }\n    let inc = l[0]\
    \ < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (inc && l[i]\
    \ > l[i + 1]) {\n            return false;\n        }\n        if (!inc && l[i]\
    \ < l[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length < 2) {\n        return true;\n    }\n    let increasing = l[0]\
    \ < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;\n}\n", " \
    \   if (l.length <= 1) {\n        return true;\n    }\n    let i = 0;\n    let\
    \ j = 1;\n    let inc = l[i] < l[j];\n    while (j < l.length) {\n        if (inc)\
    \ {\n            if (l[i] > l[j]) {\n                return false;\n         \
    \   }\n        } else {\n            if (l[i] < l[j]) {\n                return\
    \ false;\n            }\n        }\n        i++;\n        j++;\n    }\n    return\
    \ true;\n}\n", "    if (l.length <= 1) {\n        return true;\n    }\n    let\
    \ increasing = l[0] < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n  \
    \      if (increasing && l[i] > l[i + 1]) {\n            return false;\n     \
    \   }\n        if (!increasing && l[i] < l[i + 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    if (l.length <= 1) {\n       \
    \ return true;\n    }\n    let increasing = l[0] < l[1];\n    for (let i = 1;\
    \ i < l.length - 1; i++) {\n        if (increasing && l[i] > l[i + 1]) {\n   \
    \         return false;\n        }\n        if (!increasing && l[i] < l[i + 1])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n", "  \
    \  let isIncreasing = true;\n    let isDecreasing = true;\n    for (let i = 0;\
    \ i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing\
    \ = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n}\n",
  "    let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let increasing = true;\n    let decreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let isIncreasing = true;\n    let isDecreasing = true;\n    for (let i = 0;\
    \ i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing\
    \ = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n}\n",
  "    let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let increasing = true;\n    let decreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n", "    if (l.length < 2) {\n        return true;\n    }\n\
    \    let increasing = l[0] < l[1];\n    for (let i = 1; i < l.length - 1; i++)\
    \ {\n        if (increasing && l[i] > l[i + 1]) {\n            return false;\n\
    \        }\n        if (!increasing && l[i] < l[i + 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    let increasing = true;\n\
    \    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n  \
    \      if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n  \
    \      if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n  \
    \  }\n    return increasing || decreasing;\n}\n", "    let increasing = true;\n\
    \    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n  \
    \      if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n  \
    \      if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n  \
    \  }\n    return increasing || decreasing;\n}\n", "    if (l.length < 2) {\n \
    \       return true;\n    }\n    let direction = l[1] - l[0];\n    for (let i\
    \ = 2; i < l.length; i++) {\n        if (direction * (l[i] - l[i - 1]) < 0) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "    if\
    \ (l.length === 0) {\n        return true;\n    }\n    let direction = l[1] -\
    \ l[0];\n    for (let i = 2; i < l.length; i++) {\n        if (direction * (l[i]\
    \ - l[i - 1]) < 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    let increasing = true;\n    let decreasing = true;\n    for\
    \ (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n     \
    \       increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n     \
    \       decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length === 0) {\n        return true;\n    }\n    let increasing = l[0]\
    \ < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (increasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!increasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    let increasing = true;\n    let decreasing = true;\n    for\
    \ (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n     \
    \       increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n     \
    \       decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let isIncreasing = true;\n    let isDecreasing = true;\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n          \
    \  isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n        \
    \    isDecreasing = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n\
    }\n", "    let isIncreasing = true;\n    let isDecreasing = true;\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n          \
    \  isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n        \
    \    isDecreasing = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  if\
    \ (l.length < 2) {\n    return true;\n  }\n  let increasing = l[0] < l[1];\n \
    \ for (let i = 1; i < l.length - 1; i++) {\n    if (increasing && l[i] > l[i +\
    \ 1]) {\n      return false;\n    }\n    if (!increasing && l[i] < l[i + 1]) {\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let inc = true;\n\
    \    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] <\
    \ l[i + 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "  let increasing = true;\n  let decreasing = true;\n\
    \  for (let i = 0; i < l.length - 1; i++) {\n    if (l[i] > l[i + 1]) {\n    \
    \  increasing = false;\n    }\n    if (l[i] < l[i + 1]) {\n      decreasing =\
    \ false;\n    }\n  }\n  return increasing || decreasing;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    if (l.length <= 1)\
    \ {\n        return true;\n    }\n    let increasing = l[0] < l[1];\n    for (let\
    \ i = 1; i < l.length - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;\n}\n", "    if (l.length < 2) {\n\
    \        return true;\n    }\n    let increasing = l[0] < l[1];\n    for (let\
    \ i = 1; i < l.length - 1; i++) {\n        if (increasing && l[i] > l[i + 1])\
    \ {\n            return false;\n        }\n        if (!increasing && l[i] < l[i\
    \ + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    if (l.length < 2) {\n        return true;\n\
    \    }\n    let isIncreasing = l[0] < l[1];\n    for (let i = 0; i < l.length\
    \ - 1; i++) {\n        if (isIncreasing && l[i] > l[i + 1]) {\n            return\
    \ false;\n        }\n        if (!isIncreasing && l[i] < l[i + 1]) {\n       \
    \     return false;\n        }\n    }\n    return true;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let inc = true;\n\
    \    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] <\
    \ l[i + 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length <= 1) {\n        return true;\n    }\n    let increasing = true;\n\
    \    let decreasing = true;\n    for (let i = 1; i < l.length; i++) {\n      \
    \  if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n      \
    \  if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;\n}\n", "    let isIncreasing = true;\n \
    \   let isDecreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n \
    \       if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n        }\n\
    \    }\n    return isIncreasing || isDecreasing;\n}\n", "    let inc = true;\n\
    \    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] <\
    \ l[i + 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let isIncreasing = true;\n    let isDecreasing = true;\n    for (let i = 0;\
    \ i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing\
    \ = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n}\n",
  "    let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  if (l.length < 2) {\n        return true;\n    }\n    let isIncreasing = l[0]\
    \ < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n        if (isIncreasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!isIncreasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    if (l.length < 2) {\n        return true;\n    }\n    let\
    \ increasing = l[0] < l[1];\n    for (let i = 1; i < l.length - 1; i++) {\n  \
    \      if (increasing && l[i] > l[i + 1]) {\n            return false;\n     \
    \   }\n        if (!increasing && l[i] < l[i + 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    let increasing = true;\n    let\
    \ decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;\n}\n", "    let increasing = true;\n    let\
    \ decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;\n}\n", "    if (l.length <= 1) {\n        return\
    \ true;\n    }\n    let inc = l[0] < l[1];\n    for (let i = 1; i < l.length -\
    \ 1; i++) {\n        if (inc && l[i] > l[i + 1]) {\n            return false;\n\
    \        }\n        if (!inc && l[i] < l[i + 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    let increasing = true;\n    let\
    \ decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n        if\
    \ (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;\n}\n", "    if (l.length <= 1) {\n        return\
    \ true;\n    }\n    let increasing = l[0] < l[1];\n    for (let i = 1; i < l.length\
    \ - 1; i++) {\n        if (increasing && l[i] > l[i + 1]) {\n            return\
    \ false;\n        }\n        if (!increasing && l[i] < l[i + 1]) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    return\
    \ l.every((e, i) => i === 0 || l[i - 1] <= e) || l.every((e, i) => i === 0 ||\
    \ l[i - 1] >= e);\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "    let increasing = true;\n    let decreasing = true;\n    for (let i\
    \ = 0; i < l.length - 1; i++) {\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let increasing = true;\n    let decreasing = true;\n    for (let i = 0; i <\
    \ l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i + 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n", "    let increasing = true;\n    let decreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            increasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n", "    let increasing = true;\n    let decreasing = true;\n\
    \    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n\
    \            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n", "  let increasing = true;\n  let decreasing = true;\n  for (let i = 0; i\
    \ < l.length - 1; i++) {\n    if (l[i] > l[i + 1]) {\n      increasing = false;\n\
    \    }\n    if (l[i] < l[i + 1]) {\n      decreasing = false;\n    }\n  }\n  return\
    \ increasing || decreasing;\n}\n", "    let isIncreasing = true;\n    let isDecreasing\
    \ = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            isIncreasing = false;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            isDecreasing = false;\n        }\n    }\n    return isIncreasing\
    \ || isDecreasing;\n}\n", "    let inc = true;\n    let dec = true;\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n          \
    \  inc = false;\n        }\n        if (l[i] < l[i + 1]) {\n            dec =\
    \ false;\n        }\n    }\n    return inc || dec;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "  if (l.length < 2) {\n\
    \    return true;\n  }\n  let inc = l[1] > l[0];\n  for (let i = 2; i < l.length;\
    \ i++) {\n    if (inc && l[i] < l[i - 1]) {\n      return false;\n    }\n    if\
    \ (!inc && l[i] > l[i - 1]) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "    let isIncreasing = true;\n    let isDecreasing = true;\n    for (let\
    \ i = 0; i < l.length - 1; i++) {\n        if (l[i] > l[i + 1]) {\n          \
    \  isIncreasing = false;\n        }\n        if (l[i] < l[i + 1]) {\n        \
    \    isDecreasing = false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n\
    }\n", "    let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length\
    \ - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n    \
    \    }\n        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n\
    \    }\n    return inc || dec;\n}\n", "    if (l.length < 2) {\n        return\
    \ true;\n    }\n    let increasing = l[0] < l[1];\n    for (let i = 1; i < l.length\
    \ - 1; i++) {\n        if (increasing && l[i] > l[i + 1]) {\n            return\
    \ false;\n        }\n        if (!increasing && l[i] < l[i + 1]) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let increasing =\
    \ true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let isIncreasing\
    \ = true;\n    let isDecreasing = true;\n    for (let i = 0; i < l.length - 1;\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            isIncreasing = false;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            isDecreasing = false;\n\
    \        }\n    }\n    return isIncreasing || isDecreasing;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "  return l.every((v,\
    \ i) => i === 0 || (l[i - 1] <= v && l[i + 1] <= v)) || l.every((v, i) => i ===\
    \ 0 || (l[i - 1] >= v && l[i + 1] >= v));\n}\n", "    let increasing = true;\n\
    \    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n  \
    \      if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n  \
    \      if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n  \
    \  }\n    return increasing || decreasing;\n}\n", "    let increasing = true;\n\
    \    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++) {\n  \
    \      if (l[i] > l[i + 1]) {\n            increasing = false;\n        }\n  \
    \      if (l[i] < l[i + 1]) {\n            decreasing = false;\n        }\n  \
    \  }\n    return increasing || decreasing;\n}\n", "    if (l.length <= 1) {\n\
    \        return true;\n    }\n    let isIncreasing = l[0] < l[1];\n    for (let\
    \ i = 1; i < l.length - 1; i++) {\n        if (isIncreasing) {\n            if\
    \ (l[i] > l[i + 1]) {\n                return false;\n            }\n        }\
    \ else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;\n}\n", "    let increasing\
    \ = true;\n    let decreasing = true;\n    for (let i = 0; i < l.length - 1; i++)\
    \ {\n        if (l[i] > l[i + 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] < l[i + 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;\n}\n", "    let inc = true;\n\
    \    let dec = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if\
    \ (l[i] > l[i + 1]) {\n            inc = false;\n        }\n        if (l[i] <\
    \ l[i + 1]) {\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n", "    let inc = true;\n    let dec = true;\n    for (let i = 0; i < l.length\
    \ - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            inc = false;\n    \
    \    }\n        if (l[i] < l[i + 1]) {\n            dec = false;\n        }\n\
    \    }\n    return inc || dec;\n}\n", "    return l.every((x, i) => i === 0 ||\
    \ (x >= l[i - 1] && l.every((y, j) => j === 0 || y >= l[j - 1])) || (x <= l[i\
    \ - 1] && l.every((y, j) => j === 0 || y <= l[j - 1])));\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

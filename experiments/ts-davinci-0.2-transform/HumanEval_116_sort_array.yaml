name: HumanEval_116_sort_array
language: ts
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\n// >>> sort_array([1, 5, 2, 3, 4])\n// [1, 2, 3, 4, 5]\n// >>> sort_array([-2,\
  \ -3, -4, -5, -6])\n// [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4])\n\
  // [0, 1, 2, 3, 4]\nfunction sort_array(arr: number[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([1, 5, 2,\
  \ 3, 4]),[1, 2, 4, 3, 5]);\n  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4,\
  \ -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1, 0, 2, 3, 4]),[0, 1, 2, 4,\
  \ 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('1').length - 1;\n        let\
    \ bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes) {\n      \
    \      return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n",
  "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).match(/1/g) || [];\n\
    \    const bOnes = b.toString(2).match(/1/g) || [];\n    if (aOnes.length ===\
    \ bOnes.length) {\n      return a - b;\n    }\n    return aOnes.length - bOnes.length;\n\
    \  });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        let bOnes = bBin.split('').filter(x => x === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        }\n        return aOnes\
    \ - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        const aBinary\
    \ = a.toString(2);\n        const bBinary = b.toString(2);\n        const aOnes\
    \ = aBinary.split('').filter(x => x === '1').length;\n        const bOnes = bBinary.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"\").filter(x => x === \"1\").length;\n    const\
    \ bOnes = bBin.split(\"\").filter(x => x === \"1\").length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n",
  "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n    const bOnes = b.toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n \
    \   }\n    return aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 5, 2,\
    \ 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ > bOnes) {\n            return 1;\n        } else if (aOnes < bOnes) {\n   \
    \         return -1;\n        } else {\n            return a - b;\n        }\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bBinary = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aBinary === bBinary) {\n            return\
    \ a - b;\n        }\n        return aBinary - bBinary;\n    });\n}\n", "  return\
    \ arr.sort((a, b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"\").filter(x => x === \"1\").length;\n    const\
    \ bOnes = bBin.split(\"\").filter(x => x === \"1\").length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n",
  "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n     \
    \   const bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBinary.split('').filter(x => x\
    \ === '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}\n", "  return arr.sort((a, b) => {\n    const aBin\
    \ = a.toString(2);\n    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"\
    \").filter(x => x === \"1\").length;\n    const bOnes = bBin.split(\"\").filter(x\
    \ => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n \
    \   }\n    return aOnes - bOnes;\n  });\n}\n", "  return arr.sort((a, b) => {\n\
    \    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        return a1 === b1 ? a - b : a1 - b1;\n    });\n}\n",
  "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n    const bBin\
    \ = b.toString(2);\n    const aOnes = aBin.split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = bBin.split(\"\").filter(x => x === \"1\").length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "  return arr.sort((a, b) => {\n    const aBinary = a.toString(2);\n\
    \    const bBinary = b.toString(2);\n    const aOnes = aBinary.split(\"\").filter(char\
    \ => char === \"1\").length;\n    const bOnes = bBinary.split(\"\").filter(char\
    \ => char === \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n\
    \    }\n    return aOnes - bOnes;\n  });\n}\n", "  return arr.sort((a, b) => {\n\
    \    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n    const aOnes\
    \ = aBin.split(\"\").filter(x => x === \"1\").length;\n    const bOnes = bBin.split(\"\
    \").filter(x => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return\
    \ a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      const a1 = a.toString(2).split('').filter(x => x === '1').length;\n   \
    \     const b1 = b.toString(2).split('').filter(x => x === '1').length;\n    \
    \    return a1 === b1 ? a - b : a1 - b1;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = a.toString(2).split(\"\").filter(x => x === \"\
    1\").length;\n        const bOnes = b.toString(2).split(\"\").filter(x => x ===\
    \ \"1\").length;\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n        const\
    \ aBin = a.toString(2).split('').filter(x => x === '1').length;\n        const\
    \ bBin = b.toString(2).split('').filter(x => x === '1').length;\n        if (aBin\
    \ === bBin) {\n            return a - b;\n        }\n        return aBin - bBin;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n        const\
    \ aBin = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n\
    \    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"\").filter(x\
    \ => x === \"1\").length;\n    const bOnes = bBin.split(\"\").filter(x => x ===\
    \ \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n   \
    \ return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n     \
    \   const onesA = a.toString(2).split('').filter(e => e === '1').length;\n   \
    \     const onesB = b.toString(2).split('').filter(e => e === '1').length;\n \
    \       if (onesA === onesB) {\n            return a - b;\n        }\n       \
    \ return onesA - onesB;\n    });\n}\n", "    return arr.sort((a, b) => {\n   \
    \     let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"\").filter(x => x === \"1\").length;\n    const\
    \ bOnes = bBin.split(\"\").filter(x => x === \"1\").length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n",
  "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"1\").length - 1;\n    const bOnes = bBin.split(\"\
    1\").length - 1;\n    return aOnes === bOnes ? a - b : aOnes - bOnes;\n  });\n\
    }\n", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bOnes\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n\
    \    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"1\").length -\
    \ 1;\n    const bOnes = bBin.split(\"1\").length - 1;\n    if (aOnes === bOnes)\
    \ {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "   \
    \ return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"\").filter(x => x === \"1\").length;\n    const\
    \ bOnes = bBin.split(\"\").filter(x => x === \"1\").length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n",
  "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = (a >>> 0).toString(2).split('').filter(x => x\
    \ === '1').length;\n        const bOnes = (b >>> 0).toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bBin = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const bBin\
    \ = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        const bOnes = bBin.split('').filter(x => x === '1').length;\n       \
    \ if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        const\
    \ aBinary = a.toString(2);\n        const bBinary = b.toString(2);\n        const\
    \ aOnes = aBinary.split('').filter(x => x === '1').length;\n        const bOnes\
    \ = bBinary.split('').filter(x => x === '1').length;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        }\n        return aOnes - bOnes;\n   \
    \ });\n}\n", "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n\
    \    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"\").filter(x\
    \ => x === \"1\").length;\n    const bOnes = bBin.split(\"\").filter(x => x ===\
    \ \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n   \
    \ return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n     \
    \   const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n   \
    \     const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aOnes === bOnes) {\n            return a - b;\n        }\n       \
    \ return aOnes - bOnes;\n    });\n}\n", "    const sorted = arr.sort((a, b) =>\
    \ {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n    return sorted;\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\n\
    console.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0,\
    \ 2, 3, 4]));", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n  \
    \      let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n  \
    \      if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        const\
    \ aBin = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes\
    \ = aBin.split('').filter(c => c === '1').length;\n        const bOnes = bBin.split('').filter(c\
    \ => c === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = a.toString(2).split(\"\").filter(x => x === \"\
    1\").length;\n        const bOnes = b.toString(2).split(\"\").filter(x => x ===\
    \ \"1\").length;\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n", "  const arrBin = arr.map(e\
    \ => e.toString(2));\n  const arrBinSort = arrBin.sort((a, b) => {\n    const\
    \ aOnes = a.split('').filter(e => e === '1').length;\n    const bOnes = b.split('').filter(e\
    \ => e === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ }\n    return aOnes - bOnes;\n  });\n  return arrBinSort.map(e => parseInt(e,\
    \ 2));\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const bBin\
    \ = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        const bOnes = bBin.split('').filter(x => x === '1').length;\n       \
    \ if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n    const aOnes\
    \ = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n    const bOnes\
    \ = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n\
    }\n", "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n    const\
    \ bBin = b.toString(2);\n    const aOnes = aBin.split(\"\").filter(x => x ===\
    \ \"1\").length;\n    const bOnes = bBin.split(\"\").filter(x => x === \"1\").length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bBin = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aBin === bBin) {\n            return a -\
    \ b;\n        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "  let result: number[] = [];\n  let oneCount: number[] = [];\n\
    \  let zeroCount: number[] = [];\n  let zeroCountIndex: number[] = [];\n  let\
    \ oneCountIndex: number[] = [];\n  let zeroCountIndexSorted: number[] = [];\n\
    \  let oneCountIndexSorted: number[] = [];\n  let sorted: number[] = [];\n  let\
    \ sortedIndex: number[] = [];\n  let sortedIndexSorted: number[] = [];\n  let\
    \ sortedSorted: number[] = [];\n  let sortedSortedIndex: number[] = [];\n  let\
    \ sortedSortedIndexSorted: number[] = [];\n  let sortedSortedSorted: number[]\
    \ = [];\n  let sortedSortedSortedIndex: number[] = [];\n  let sortedSortedSortedIndexSorted:\
    \ number[] = [];\n  let sortedSortedSortedSorted: number[] = [];\n  let sortedSortedSortedSortedIndex:\
    \ number[] = [];\n  let sortedSortedSortedSortedIndexSorted: number[] = [];\n\
    \  let sortedSortedSortedSortedSorted: number[] = [];\n  let sortedSortedSortedSortedSortedIndex:\
    \ number[] = [];\n  let sortedSortedSortedSortedSortedIndexSorted: number[] =\
    \ [];\n  let sortedSortedSortedSortedSortedSorted: number[] = [];\n  let sortedSortedSortedSortedSortedSortedIndex:\
    \ number[] = [];\n  let sortedSortedSortedSortedSortedSortedIndexSorted: number[]\
    \ = [];\n  let sortedSortedSortedSortedSortedSortedSorted: number[] = [];\n  let\
    \ sortedSortedSortedSortedSortedSortedSortedIndex: number[] = [];\n  let sortedSortedSortedSortedSortedSortedSortedIndexSorted:\
    \ number[] = [];\n  let sortedSortedSortedSortedSortedSortedSortedSorted: number[]\
    \ = [];\n  let sortedSortedSortedSortedSortedSortedSortedSortedIndex: number[]\
    \ = [];\n  let sortedSortedSortedSortedSortedSortedSortedSortedIndexSorted: number[]\
    \ = [];\n  let sortedSortedSortedSortedSortedSortedSortedSortedS", "    return\
    \ arr.sort((a, b) => {\n        const aOnes = countOnes(a);\n        const bOnes\
    \ = countOnes(b);\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const bBin\
    \ = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        const bOnes = bBin.split('').filter(x => x === '1').length;\n       \
    \ if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const bBin\
    \ = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        const bOnes = bBin.split('').filter(x => x === '1').length;\n       \
    \ if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        const\
    \ aBin = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n\
    \    const bBin = b.toString(2);\n    const aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length\
    \ : 0;\n    const bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n  \
    \  if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    const bOnes = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n\
    \    return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n  \
    \      let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n  \
    \      if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        const\
    \ aBin = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"\").filter(x => x === \"1\").length;\n    const\
    \ bOnes = bBin.split(\"\").filter(x => x === \"1\").length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n",
  "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n    const bOnes = b.toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n \
    \   }\n    return aOnes - bOnes;\n  });\n}\n", "  return arr.sort((a, b) => {\n\
    \    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    const bOnes = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n\
    \    return aOnes - bOnes;\n  });\n}\n\nexport function sortArray() {\n  console.log(sort_array([1,\
    \ 5, 2, 3, 4]));\n  console.log(sort_array([-2, -3, -4, -5, -6]));\n  console.log(sort_array([1,\
    \ 0, 2, 3, 4]));\n}", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('1').length\
    \ - 1;\n        const bOnes = bBin.split('1').length - 1;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        return a1 - b1 || a - b;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBinary = a.toString(2);\n    const bBinary = b.toString(2);\n\
    \    const aOnes = aBinary.split(\"1\").length - 1;\n    const bOnes = bBinary.split(\"\
    1\").length - 1;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n   \
    \ return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n     \
    \   const aBin = a.toString(2).split('').filter(x => x === '1').length;\n    \
    \    const bBin = b.toString(2).split('').filter(x => x === '1').length;\n   \
    \     if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "  return arr.sort((a, b) => {\n    const aBin\
    \ = a.toString(2);\n    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"\
    \").filter(x => x === \"1\").length;\n    const bOnes = bBin.split(\"\").filter(x\
    \ => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n \
    \   }\n    return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        const aBinary = a.toString(2);\n        const bBinary = b.toString(2);\n\
    \        const aOnes = aBinary.split('').filter(x => x === '1').length;\n    \
    \    const bOnes = bBinary.split('').filter(x => x === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        }\n        return aOnes\
    \ - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const bBin\
    \ = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        const bOnes = bBin.split('').filter(x => x === '1').length;\n       \
    \ if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        const\
    \ aBinary = a.toString(2);\n        const bBinary = b.toString(2);\n        const\
    \ aOnes = aBinary.split('').filter(x => x === '1').length;\n        const bOnes\
    \ = bBinary.split('').filter(x => x === '1').length;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        }\n        return aOnes - bOnes;\n   \
    \ });\n}\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('1').length - 1;\n        const bOnes = bBin.split('1').length\
    \ - 1;\n        return aOnes === bOnes ? a - b : aOnes - bOnes;\n    });\n}\n",
  "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n    const bBin\
    \ = b.toString(2);\n    const aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length\
    \ : 0;\n    const bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n  \
    \  if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n\
    \    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"\").filter(x\
    \ => x === \"1\").length;\n    const bOnes = bBin.split(\"\").filter(x => x ===\
    \ \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n   \
    \ return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n     \
    \   const aBin = a.toString(2);\n        const bBin = b.toString(2);\n       \
    \ const aOnes = aBin.split('').filter(x => x === '1').length;\n        const bOnes\
    \ = bBin.split('').filter(x => x === '1').length;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        }\n        return aOnes - bOnes;\n   \
    \ });\n}\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = (a >>> 0).toString(2).split(\"\").filter(x => x ===\
    \ \"1\").length;\n    const bOnes = (b >>> 0).toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n \
    \   }\n    return aOnes - bOnes;\n  });\n}\n", "  return arr.sort((a, b) => {\n\
    \    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n    const aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n    const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ }\n    return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n\
    \        const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\n\
    console.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0,\
    \ 2, 3, 4]));", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = a.toString(2).match(/1/g).length;\n        const\
    \ bOnes = b.toString(2).match(/1/g).length;\n        return aOnes - bOnes || a\
    \ - b;\n    });\n}\n", "  const sorted = arr.sort((a, b) => {\n    const aOnes\
    \ = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n    const bOnes\
    \ = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n\
    \  return sorted;\n}\n", "    const sorted = arr.sort((a, b) => {\n        const\
    \ aBin = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n    return sorted;\n\
    }\n", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const a1 = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \    const b1 = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n \
    \   return a1 === b1 ? a - b : a1 - b1;\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\n\
    console.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0,\
    \ 2, 3, 4]));", "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n\
    \        const bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBinary.split('').filter(x => x\
    \ === '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \    const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n  \
    \  if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n        let bOnes = b.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n        if (aOnes === bOnes) {\n       \
    \     return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(c\
    \ => c === '1').length;\n        const bOnes = b.toString(2).split('').filter(c\
    \ => c === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"1\").length - 1;\n    const bOnes = bBin.split(\"\
    1\").length - 1;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n   \
    \ return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n     \
    \   const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n   \
    \     const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aOnes === bOnes) {\n            return a - b;\n        }\n       \
    \ return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n    const\
    \ aBin = a.toString(2);\n    const bBin = b.toString(2);\n    const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n    const bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n        const\
    \ aBin = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = countOnes(a);\n        const bOnes = countOnes(b);\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n    const\
    \ aBin = a.toString(2);\n    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"\
    \").filter(x => x === \"1\").length;\n    const bOnes = bBin.split(\"\").filter(x\
    \ => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n \
    \   }\n    return aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 5, 2,\
    \ 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \    const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n  \
    \  if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n\nexport function runTests(): void {\n  const inputs = [\n    [1, 5,\
    \ 2, 3, 4],\n    [-2, -3, -4, -5, -6],\n    [1, 0, 2, 3, 4],\n  ];\n\n  inputs.forEach(input\
    \ => {\n    const output = sort_array(input);\n    console.log(output);\n  });\n\
    }", "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n\
    \        const bBinary = b.toString(2);\n        const aOnes = aBinary.match(/1/g)?.length\
    \ || 0;\n        const bOnes = bBinary.match(/1/g)?.length || 0;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    const bOnes = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n\
    \    return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n\
    \    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n    const aOnes\
    \ = aBin.split(\"\").filter(x => x === \"1\").length;\n    const bOnes = bBin.split(\"\
    \").filter(x => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return\
    \ a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBinary = a.toString(2);\n        const bBinary = b.toString(2);\n\
    \        const aOnes = aBinary.split('').filter(x => x === '1').length;\n    \
    \    const bOnes = bBinary.split('').filter(x => x === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        }\n        return aOnes\
    \ - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

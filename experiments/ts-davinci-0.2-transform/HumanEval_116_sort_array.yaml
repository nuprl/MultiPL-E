name: HumanEval_116_sort_array
language: ts
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\n// >>> sort_array([1, 5, 2, 3, 4])\n// [1, 2, 3, 4, 5]\n// >>> sort_array([-2,\
  \ -3, -4, -5, -6])\n// [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4])\n\
  // [0, 1, 2, 3, 4]\nfunction sort_array(arr: number[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([1, 5, 2,\
  \ 3, 4]),[1, 2, 4, 3, 5]);\n  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4,\
  \ -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1, 0, 2, 3, 4]),[0, 1, 2, 4,\
  \ 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('1').length - 1;\n        let\
    \ bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes) {\n      \
    \      return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n",
  "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).match(/1/g) || [];\n\
    \    const bOnes = b.toString(2).match(/1/g) || [];\n    if (aOnes.length ===\
    \ bOnes.length) {\n      return a - b;\n    }\n    return aOnes.length - bOnes.length;\n\
    \  });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        let bOnes = bBin.split('').filter(x => x === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        }\n        return aOnes\
    \ - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        const aBinary\
    \ = a.toString(2);\n        const bBinary = b.toString(2);\n        const aOnes\
    \ = aBinary.split('').filter(x => x === '1').length;\n        const bOnes = bBinary.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"\").filter(x => x === \"1\").length;\n    const\
    \ bOnes = bBin.split(\"\").filter(x => x === \"1\").length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n",
  "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n    const bOnes = b.toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n \
    \   }\n    return aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 5, 2,\
    \ 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ > bOnes) {\n            return 1;\n        } else if (aOnes < bOnes) {\n   \
    \         return -1;\n        } else {\n            return a - b;\n        }\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bBinary = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aBinary === bBinary) {\n            return\
    \ a - b;\n        }\n        return aBinary - bBinary;\n    });\n}\n", "  return\
    \ arr.sort((a, b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"\").filter(x => x === \"1\").length;\n    const\
    \ bOnes = bBin.split(\"\").filter(x => x === \"1\").length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n",
  "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n     \
    \   const bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBinary.split('').filter(x => x\
    \ === '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}\n", "  return arr.sort((a, b) => {\n    const aBin\
    \ = a.toString(2);\n    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"\
    \").filter(x => x === \"1\").length;\n    const bOnes = bBin.split(\"\").filter(x\
    \ => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n \
    \   }\n    return aOnes - bOnes;\n  });\n}\n", "  return arr.sort((a, b) => {\n\
    \    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        return a1 === b1 ? a - b : a1 - b1;\n    });\n}\n",
  "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n    const bBin\
    \ = b.toString(2);\n    const aOnes = aBin.split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = bBin.split(\"\").filter(x => x === \"1\").length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

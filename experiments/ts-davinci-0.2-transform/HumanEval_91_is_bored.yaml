name: HumanEval_91_is_bored
language: ts
prompt: "//You'll be given a string of words, and your task is to count the number\n\
  // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
  \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\"\
  )\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
  )\n// 1\nfunction is_bored(S: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
  ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
  I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
  I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
  You and I are going for a walk\"),0);\n}\n\ntest();"
completions: ["    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for\
    \ (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n \
    \           boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let\
    \ boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    sentences.forEach(sentence\
    \ => {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    });\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "  const sentences = S.split(/[.?!]/);\n\
    \  let boredoms = 0;\n  for (let i = 0; i < sentences.length; i++) {\n    if (sentences[i].startsWith(\"\
    I\")) {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms: number = 0;\n\
    \    let sentences: string[] = S.split(/[.?!]/);\n    for (let i: number = 0;\
    \ i < sentences.length; i++) {\n        if (sentences[i].trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "  let boredoms\
    \ = 0;\n  let sentences = S.split(/[.?!]/);\n  for (let sentence of sentences)\
    \ {\n    if (sentence.trim().startsWith(\"I\")) {\n      boredoms++;\n    }\n\
    \  }\n  return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n\
    \    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let i =\
    \ 0; i < sentences.length; i++) {\n        if (sentences[i].startsWith(\"I\"))\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n", " \
    \   let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "  let boredoms\
    \ = 0;\n  let sentences = S.split(/[.?!]/);\n  for (let sentence of sentences)\
    \ {\n    if (sentence.startsWith(\"I\")) {\n      boredoms++;\n    }\n  }\n  return\
    \ boredoms;\n}\n", "    let boredoms = 0;\n    const sentences = S.split(/[.?!]/);\n\
    \    for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n", " \
    \   let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let i = 0; i < sentences.length; i++)\
    \ {\n        if (sentences[i].startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.match(/^\\\
    s*I/)) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let i =\
    \ 0; i < sentences.length; i++) {\n        if (sentences[i].trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let i = 0; i < sentences.length;\
    \ i++) {\n        if (sentences[i].trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let count = 0;\n    let arr = S.split(/[.?!]/);\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i].startsWith(\"\
    I\")) {\n            count++;\n        }\n    }\n    return count;\n}\n", "  \
    \  let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "  let boredoms = 0;\n  let sentences\
    \ = S.split(/[.?!]/);\n  for (let sentence of sentences) {\n    if (sentence.startsWith(\"\
    I\")) {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "  let boredoms\
    \ = 0;\n  let sentences = S.split(/[.?!]/);\n  sentences.forEach(sentence => {\n\
    \    if (sentence.trim().startsWith(\"I\")) {\n      boredoms++;\n    }\n  });\n\
    \  return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n\
    \    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "  let boredoms = 0;\n  let sentences\
    \ = S.split(/[.?!]/);\n  for (let i = 0; i < sentences.length; i++) {\n    if\
    \ (sentences[i].startsWith(\"I\")) {\n      boredoms++;\n    }\n  }\n  return\
    \ boredoms;\n}\n", "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n\
    \    for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n", " \
    \   let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;\n}\n", "  let boredoms = 0;\n  const sentences\
    \ = S.split(/[.?!]/);\n  for (let sentence of sentences) {\n    if (sentence.trim().startsWith(\"\
    I\")) {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    let sentences\
    \ = S.split(/[.?!]/);\n    let boredoms = 0;\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.startsWith(\"I\")) {\n            boredoms++;\n        }\n  \
    \  }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences =\
    \ S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.!?]/);\n    for (let i =\
    \ 0; i < sentences.length; i++) {\n        if (sentences[i].startsWith(\"I\"))\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n", " \
    \ let boredoms = 0;\n  let sentences = S.split(/[.?!]/);\n  sentences.forEach(sentence\
    \ => {\n    if (sentence.trim().startsWith(\"I\")) {\n      boredoms++;\n    }\n\
    \  });\n  return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences =\
    \ S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        let words\
    \ = sentence.split(' ');\n        if (words[0] === 'I') {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.startsWith(\"I\")) {\n            boredoms++;\n        }\n  \
    \  }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences =\
    \ S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "  let boredoms = 0;\n  let sentences = S.split(/[.?!]/);\n  for (let sentence of\
    \ sentences) {\n    if (sentence.trim().startsWith(\"I\")) {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms: number = 0;\n    let sentences: string[] = S.split(/[.!?]/);\n\
    \    for (let i = 0; i < sentences.length; i++) {\n        if (sentences[i].trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "  let boredoms = 0;\n  let sentences = S.split(/[.?!]/);\n  sentences.forEach(sentence\
    \ => {\n    if (sentence.trim().startsWith(\"I\")) {\n      boredoms++;\n    }\n\
    \  });\n  return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences =\
    \ S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms: number = 0;\n    let sentences: string[] = S.split(/[.?!]/);\n\
    \    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "  let boredoms = 0;\n  let sentences = S.split(/[.?!]/);\n  for (let sentence of\
    \ sentences) {\n    if (sentence.trim().startsWith(\"I\")) {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    sentences.forEach(sentence\
    \ => {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    });\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let i =\
    \ 0; i < sentences.length; i++) {\n        if (sentences[i].startsWith(\"I\"))\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n", " \
    \   let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let words\
    \ = S.split(/[.?!]/);\n    for (let word of words) {\n        if (word.startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    sentences.forEach(sentence\
    \ => {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    });\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let i = 0; i < sentences.length; i++)\
    \ {\n        if (sentences[i].startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.startsWith(\"I\")) {\n            boredoms++;\n        }\n  \
    \  }\n    return boredoms;\n}\n", "  let boredoms = 0;\n  let sentences = S.split(/[.?!]/);\n\
    \  for (let sentence of sentences) {\n    if (sentence.startsWith(\"I\")) {\n\
    \      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    let boredoms =\
    \ 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.startsWith(\"I\")) {\n            boredoms++;\n        }\n  \
    \  }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences =\
    \ S.split(/[.?!]/);\n    for (let i = 0; i < sentences.length; i++) {\n      \
    \  if (sentences[i].startsWith(\"I\")) {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;\n}\n", "  let boredoms = 0;\n  let sentences = S.split(/[.?!]/);\n\
    \  for (let sentence of sentences) {\n    if (sentence.trim().startsWith(\"I\"\
    )) {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    const sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    sentences.forEach(sentence\
    \ => {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n \
    \       }\n    });\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms: number = 0;\n    let\
    \ sentences: string[] = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    sentences.forEach(sentence\
    \ => {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n \
    \       }\n    });\n    return boredoms;\n}\n", "  return S.split(/[.?!]/).filter(s\
    \ => s.trim().startsWith('I')).length;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let i = 0; i < sentences.length; i++)\
    \ {\n        if (sentences[i].startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    sentences.forEach(sentence => {\n       \
    \ if (sentence.startsWith(\"I\")) {\n            boredoms++;\n        }\n    });\n\
    \    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n\
    \    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        let words = sentence.split(' ');\n        if (words[0]\
    \ === 'I') {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n", "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let\
    \ sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n      \
    \      boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    sentences.forEach(sentence\
    \ => {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n \
    \       }\n    });\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for (let i = 0; i\
    \ < words.length; i++) {\n        let word = words[i].trim();\n        if (word.startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "  let boredoms\
    \ = 0;\n  let sentences = S.split(/[.?!]/);\n  for (let i = 0; i < sentences.length;\
    \ i++) {\n    if (sentences[i].startsWith(\"I\")) {\n      boredoms++;\n    }\n\
    \  }\n  return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n\
    \    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let i =\
    \ 0; i < sentences.length; i++) {\n        if (sentences[i].startsWith(\"I\"))\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n", " \
    \   let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "  let boredoms = 0;\n  let words\
    \ = S.split(/[.?!]/);\n  for (let i = 0; i < words.length; i++) {\n    if (words[i].startsWith(\"\
    I\")) {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    let count\
    \ = 0;\n    let words = S.split(/[.?!]/);\n    for (let word of words) {\n   \
    \     if (word.startsWith(\"I\")) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\n", "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n\
    \    sentences.forEach(sentence => {\n        if (sentence.startsWith(\"I\"))\
    \ {\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let i =\
    \ 0; i < sentences.length; i++) {\n        if (sentences[i].startsWith(\"I\"))\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n", " \
    \   let count = 0;\n    let words = S.split(\" \");\n    for (let i = 0; i < words.length;\
    \ i++) {\n        if (words[i] === \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n", "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n\
    \    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        let words = sentence.split(' ');\n        if (words[0]\
    \ === 'I') {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n", "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let\
    \ sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n      \
    \      boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "  let boredoms\
    \ = 0;\n  let sentences = S.split(/[.?!]/);\n  for (let sentence of sentences)\
    \ {\n    if (sentence.trim().startsWith(\"I\")) {\n      boredoms++;\n    }\n\
    \  }\n  return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n\
    \    for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n", " \
    \   let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms:\
    \ number = 0;\n    let sentences: string[] = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "  let boredoms = 0;\n  let words = S.split(\"\
    \ \");\n  for (let i = 0; i < words.length; i++) {\n    if (words[i] === \"I\"\
    ) {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    sentences.forEach(sentence => {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n",
  "  let boredoms = 0;\n  let sentences = S.split(/[.?!]/);\n  for (let sentence of\
    \ sentences) {\n    if (sentence.trim().startsWith(\"I\")) {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms: number = 0;\n\
    \    let sentences: string[] = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms:\
    \ number = 0;\n    let sentences: string[] = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.!?]/);\n    sentences.forEach(sentence => {\n       \
    \ if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n        }\n\
    \    });\n    return boredoms;\n}\n", "  let boredoms = 0;\n  let sentences =\
    \ S.split(/[.?!]/);\n  for (let sentence of sentences) {\n    if (sentence.trim().startsWith(\"\
    I\")) {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let i =\
    \ 0; i < sentences.length; i++) {\n        if (sentences[i].trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for (let i = 0; i\
    \ < words.length; i++) {\n        if (words[i].startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "  let boredoms\
    \ = 0;\n  let sentences = S.split(/[.?!]/);\n  for (let sentence of sentences)\
    \ {\n    let words = sentence.split(\" \");\n    if (words[0] === \"I\") {\n \
    \     boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    let boredoms = 0;\n\
    \    let sentences = S.split(/[.?!]/);\n    sentences.forEach(sentence => {\n\
    \        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n \
    \       }\n    });\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let i = 0; i < sentences.length; i++) {\n    \
    \    if (sentences[i].trim().startsWith(\"I\")) {\n            boredoms++;\n \
    \       }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "  let boredoms = 0;\n  let sentences\
    \ = S.split(/[.?!]/);\n  for (let sentence of sentences) {\n    if (sentence.trim().startsWith(\"\
    I\")) {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    sentences.forEach(sentence\
    \ => {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n \
    \       }\n    });\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    sentences.forEach(sentence => {\n       \
    \ let words = sentence.split(' ');\n        if (words[0] === 'I') {\n        \
    \    boredoms++;\n        }\n    });\n    return boredoms;\n}\n", "  let boredoms\
    \ = 0;\n  let sentences = S.split(/[.?!]/);\n  for (let sentence of sentences)\
    \ {\n    if (sentence.trim().startsWith(\"I\")) {\n      boredoms++;\n    }\n\
    \  }\n  return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n\
    \    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "  let boredoms = 0;\n  let sentences = S.split(/[.?!]/);\n  for (let i = 0; i <\
    \ sentences.length; i++) {\n    let words = sentences[i].split(\" \");\n    if\
    \ (words[0] === \"I\") {\n      boredoms++;\n    }\n  }\n  return boredoms;\n\
    }\n", "  let boredoms = 0;\n  let sentences = S.split(/[.?!]/);\n  for (let sentence\
    \ of sentences) {\n    if (sentence.trim().startsWith(\"I\")) {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let i = 0; i < sentences.length; i++) {\n    \
    \    if (sentences[i].startsWith(\"I\")) {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;\n}\n", "  let boredoms = 0;\n  let sentences = S.split(/[.?!]/);\n\
    \  sentences.forEach(sentence => {\n    if (sentence.trim().startsWith(\"I\"))\
    \ {\n      boredoms++;\n    }\n  });\n  return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let count = 0;\n    let arr = S.split(/[.?!]/);\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i].startsWith(\"I\")) {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let i = 0; i < sentences.length; i++) {\n    \
    \    if (sentences[i].trim().startsWith(\"I\")) {\n            boredoms++;\n \
    \       }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.startsWith(\"I\")) {\n            boredoms++;\n        }\n  \
    \  }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences =\
    \ S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        let words = sentence.split(\" \");\n        if (words[0]\
    \ === \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n", "    let boredoms = 0;\n    let sentences = S.split(/[.!?]/);\n    sentences.forEach(sentence\
    \ => {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n \
    \       }\n    });\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let count = 0;\n    let arr = S.split(/[.?!]/);\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i].startsWith(\"I\")) {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for (let word of\
    \ words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n \
    \       }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    sentences.forEach(sentence => {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "  let boredoms = 0;\n  let sentences\
    \ = S.split(/[.!?]/);\n  sentences.forEach(sentence => {\n    if (sentence.trim().startsWith(\"\
    I\")) {\n      boredoms++;\n    }\n  });\n  return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let i = 0; i < sentences.length; i++)\
    \ {\n        if (sentences[i].startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let i =\
    \ 0; i < sentences.length; i++) {\n        if (sentences[i].trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n     \
    \   }\n    });\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        let words = sentence.split(' ');\n        if (words[0]\
    \ === 'I') {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n", "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let\
    \ sentence of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "  let\
    \ boredoms = 0;\n  let sentences = S.split(/[.?!]/);\n  for (let sentence of sentences)\
    \ {\n    if (sentence.startsWith(\"I\")) {\n      boredoms++;\n    }\n  }\n  return\
    \ boredoms;\n}\n", "  let boredoms = 0;\n  let sentences = S.split(/[.?!]/);\n\
    \  for (let sentence of sentences) {\n    if (sentence.startsWith(\"I\")) {\n\
    \      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    let boredoms: number\
    \ = 0;\n    let sentences: string[] = S.split(/[.?!]/);\n    sentences.forEach(sentence\
    \ => {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    });\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence\
    \ of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n", "    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let sentence of sentences) {\n        if (sentence.startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "    let boredoms: number = 0;\n    let sentences: string[] = S.split(/[.?!]/);\n\
    \    for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "  let boredoms = 0;\n  let sentences = S.split(/[.?!]/);\n  for (let sentence of\
    \ sentences) {\n    if (sentence.trim().startsWith(\"I\")) {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n", "    let boredoms: number = 0;\n    let\
    \ sentences: string[] = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[.?!]/);\n    sentences.forEach(sentence => {\n       \
    \ if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n        }\n\
    \    });\n    return boredoms;\n}\n", "    let boredoms = 0;\n    let sentences\
    \ = S.split(/[.?!]/);\n    for (let i = 0; i < sentences.length; i++) {\n    \
    \    if (sentences[i].trim().startsWith(\"I\")) {\n            boredoms++;\n \
    \       }\n    }\n    return boredoms;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_99_closest_integer
language: ts
prompt: "//Create a function that takes a value (string) representing a number\n//\
  \ and returns the closest integer to it. If the number is equidistant\n// from two\
  \ integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"10\"\
  )\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away from\
  \ zero means that if the given number is equidistant\n// from two integers, the\
  \ one you should return is the one that is the\n// farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nfunction closest_integer(value: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
  10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
  -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
  0\"),0);\n}\n\ntest();"
completions: ["  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const number = Number(value);\n\
    \  const decimal = number % 1;\n  if (decimal < 0.5) {\n    return Math.floor(number);\n\
    \  } else {\n    return Math.ceil(number);\n  }\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "    let num = Number(value);\n\
    \    let num1 = Math.floor(num);\n    let num2 = Math.ceil(num);\n    if (num\
    \ - num1 > num2 - num) {\n        return num2;\n    } else {\n        return num1;\n\
    \    }\n}\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const number = Number(value);\n  const decimal = number % 1;\n  const\
    \ integer = Math.floor(number);\n  const nextInteger = integer + 1;\n  const distanceToInteger\
    \ = number - integer;\n  const distanceToNextInteger = nextInteger - number;\n\
    \  if (decimal === 0) {\n    return integer;\n  } else if (distanceToInteger <\
    \ distanceToNextInteger) {\n    return integer;\n  } else {\n    return nextInteger;\n\
    \  }\n}\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = parseFloat(value);\n  const num_floor = Math.floor(num);\n\
    \  const num_ceil = Math.ceil(num);\n  const diff_floor = Math.abs(num - num_floor);\n\
    \  const diff_ceil = Math.abs(num - num_ceil);\n  if (diff_floor < diff_ceil)\
    \ {\n    return num_floor;\n  } else {\n    return num_ceil;\n  }\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "    return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const number = Number(value);\n  const floor = Math.floor(number);\n\
    \  const ceil = Math.ceil(number);\n  const floorDiff = Math.abs(number - floor);\n\
    \  const ceilDiff = Math.abs(number - ceil);\n  return floorDiff < ceilDiff ?\
    \ floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n  const\
    \ floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diffFloor\
    \ = num - floor;\n  const diffCeil = ceil - num;\n  if (diffFloor === diffCeil)\
    \ {\n    return num > 0 ? ceil : floor;\n  }\n  return diffFloor < diffCeil ?\
    \ floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "    let num = parseFloat(value);\n  \
    \  let num1 = Math.ceil(num);\n    let num2 = Math.floor(num);\n    if (num1 -\
    \ num < num - num2) {\n        return num1;\n    } else {\n        return num2;\n\
    \    }\n}\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diffFloor\
    \ = num - floor;\n  const diffCeil = ceil - num;\n  if (diffFloor === diffCeil)\
    \ {\n    return num > 0 ? ceil : floor;\n  }\n  return diffFloor < diffCeil ?\
    \ floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "    let num = parseFloat(value);\n    let num1 = Math.ceil(num);\n    let\
    \ num2 = Math.floor(num);\n    if (num1 - num > num - num2) {\n        return\
    \ num2;\n    } else {\n        return num1;\n    }\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "    let num = parseFloat(value);\n    let num2 = Math.round(num);\n   \
    \ let num3 = Math.floor(num);\n    let num4 = Math.ceil(num);\n    if (num2 -\
    \ num === 0.5) {\n        return num2;\n    } else if (num2 - num === -0.5) {\n\
    \        return num2;\n    } else if (num2 - num > 0) {\n        return num3;\n\
    \    } else {\n        return num4;\n    }\n}\n", "  const num = Number(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diffFloor\
    \ = num - floor;\n  const diffCeil = ceil - num;\n  if (diffFloor === diffCeil)\
    \ {\n    return num > 0 ? ceil : floor;\n  }\n  return diffFloor < diffCeil ?\
    \ floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  const valueAsNumber = Number(value);\n\
    \  const floor = Math.floor(valueAsNumber);\n  const ceil = Math.ceil(valueAsNumber);\n\
    \  const diffToFloor = valueAsNumber - floor;\n  const diffToCeil = ceil - valueAsNumber;\n\
    \  if (diffToFloor === diffToCeil) {\n    return valueAsNumber > 0 ? ceil : floor;\n\
    \  }\n  return diffToFloor < diffToCeil ? floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  let num = parseFloat(value);\n\
    \  return Math.round(num);\n}\n", "  const num = parseFloat(value);\n  return\
    \ Math.round(num);\n}\n", "  const number = parseFloat(value);\n  const floor\
    \ = Math.floor(number);\n  const ceil = Math.ceil(number);\n  if (number - floor\
    \ > ceil - number) {\n    return ceil;\n  } else {\n    return floor;\n  }\n}\n",
  "  return Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diff1\
    \ = Math.abs(num - floor);\n  const diff2 = Math.abs(num - ceil);\n  if (diff1\
    \ === diff2) {\n    return num > 0 ? ceil : floor;\n  }\n  return diff1 < diff2\
    \ ? floor : ceil;\n}\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n\
    \  const ceil = Math.ceil(num);\n  const diffFloor = num - floor;\n  const diffCeil\
    \ = ceil - num;\n  if (diffFloor === diffCeil) {\n    return num > 0 ? ceil :\
    \ floor;\n  }\n  return diffFloor < diffCeil ? floor : ceil;\n}\n", "    return\
    \ Math.round(Number(value));\n}\n", "    let num = parseFloat(value);\n    return\
    \ Math.round(num);\n}\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"\
    -14.5\"));", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(Number(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  let num = parseFloat(value);\n  let num1 = Math.floor(num);\n  let num2\
    \ = Math.ceil(num);\n  if (num - num1 > num2 - num) {\n    return num2;\n  } else\
    \ {\n    return num1;\n  }\n}\n", "  return Math.round(parseFloat(value));\n}\n",
  "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = Number(value);\n  return Math.round(num);\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = parseFloat(value);\n  return Math.round(num);\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"10\"));\n\
    console.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"14.5\"\
    ));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  const diff = num - floor;\n  if (diff >= 0.5) {\n\
    \    return ceil;\n  } else {\n    return floor;\n  }\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const number = Number(value);\n  const floor = Math.floor(number);\n\
    \  const ceil = Math.ceil(number);\n  const diffFloor = Math.abs(number - floor);\n\
    \  const diffCeil = Math.abs(number - ceil);\n  return diffFloor < diffCeil ?\
    \ floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  const diffFloor = num - floor;\n  const diffCeil =\
    \ ceil - num;\n  if (diffFloor === diffCeil) {\n    return num > 0 ? ceil : floor;\n\
    \  }\n  return diffFloor < diffCeil ? floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  return Math.round(parseFloat(value));\n}\n", "  const number = parseFloat(value);\n\
    \  const integer = Math.round(number);\n  const decimal = number - integer;\n\
    \  if (decimal >= 0.5) {\n    return integer + 1;\n  } else if (decimal <= -0.5)\
    \ {\n    return integer - 1;\n  } else {\n    return integer;\n  }\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = parseFloat(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  const diffFloor = num - floor;\n  const diffCeil =\
    \ ceil - num;\n  if (diffFloor === diffCeil) {\n    return num > 0 ? ceil : floor;\n\
    \  }\n  return diffFloor < diffCeil ? floor : ceil;\n}\n", "  let result: number\
    \ = parseInt(value);\n  if (result < parseFloat(value)) {\n    result++;\n  }\n\
    \  return result;\n}\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"\
    -14.5\"));\n", "  return Math.round(parseFloat(value));\n}\n", "  let num = parseFloat(value);\n\
    \  let num_floor = Math.floor(num);\n  let num_ceil = Math.ceil(num);\n  let num_floor_diff\
    \ = Math.abs(num - num_floor);\n  let num_ceil_diff = Math.abs(num - num_ceil);\n\
    \  if (num_floor_diff < num_ceil_diff) {\n    return num_floor;\n  } else {\n\
    \    return num_ceil;\n  }\n}\n", "  const num = Number(value);\n  const floor\
    \ = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diffFloor = num\
    \ - floor;\n  const diffCeil = ceil - num;\n  return diffFloor < diffCeil ? floor\
    \ : ceil;\n}\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  let num = parseFloat(value);\n\
    \  let num2 = Math.round(num);\n  if (num2 > num) {\n    return num2 - 1;\n  }\
    \ else {\n    return num2;\n  }\n}\n", "  const number = Number(value);\n  const\
    \ decimal = number % 1;\n  if (decimal < 0.5) {\n    return Math.floor(number);\n\
    \  } else {\n    return Math.ceil(number);\n  }\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  if (num - floor >= ceil - num) {\n    return ceil;\n\
    \  } else {\n    return floor;\n  }\n}\n", "  const number = Number(value);\n\
    \  const integer = Math.round(number);\n  const decimal = number - integer;\n\
    \  if (decimal === 0) {\n    return integer;\n  }\n  if (decimal < 0) {\n    return\
    \ integer - 1;\n  }\n  return integer + 1;\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "    return Math.round(parseFloat(value));\n}\n", "    return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const number = parseFloat(value);\n  if (number % 1 === 0) {\n    return\
    \ number;\n  }\n  return number > 0 ? Math.ceil(number) : Math.floor(number);\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = parseFloat(value);\n  return Math.round(num);\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  const num = parseFloat(value);\n  const\
    \ floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diffFloor\
    \ = Math.abs(num - floor);\n  const diffCeil = Math.abs(num - ceil);\n  if (diffFloor\
    \ === diffCeil) {\n    return num > 0 ? ceil : floor;\n  }\n  return diffFloor\
    \ < diffCeil ? floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = parseFloat(value);\n  return Math.round(num);\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "    return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  const diff1 = Math.abs(num - floor);\n  const diff2\
    \ = Math.abs(num - ceil);\n  return diff1 < diff2 ? floor : ceil;\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n  const\
    \ numFloor = Math.floor(num);\n  const numCeil = Math.ceil(num);\n  const numFloorAbs\
    \ = Math.abs(numFloor);\n  const numCeilAbs = Math.abs(numCeil);\n  const numAbs\
    \ = Math.abs(num);\n  if (numFloorAbs === numCeilAbs) {\n    return numFloor;\n\
    \  }\n  if (numFloorAbs < numCeilAbs) {\n    return numFloor;\n  }\n  if (numFloorAbs\
    \ > numCeilAbs) {\n    return numCeil;\n  }\n  if (numAbs === numFloorAbs) {\n\
    \    return numFloor;\n  }\n  if (numAbs === numCeilAbs) {\n    return numCeil;\n\
    \  }\n  return 0;\n}\n", "  return Math.round(parseFloat(value));\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = parseFloat(value);\n\
    \  const numFloor = Math.floor(num);\n  const numCeil = Math.ceil(num);\n  const\
    \ diffFloor = Math.abs(num - numFloor);\n  const diffCeil = Math.abs(num - numCeil);\n\
    \  if (diffFloor === diffCeil) {\n    return num > 0 ? numCeil : numFloor;\n \
    \ }\n  return diffFloor < diffCeil ? numFloor : numCeil;\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const number = Number(value);\n\
    \  const isNegative = number < 0;\n  const abs = Math.abs(number);\n  const floor\
    \ = Math.floor(abs);\n  const ceil = Math.ceil(abs);\n  const diffFloor = abs\
    \ - floor;\n  const diffCeil = ceil - abs;\n  if (diffFloor === diffCeil) {\n\
    \    return isNegative ? -ceil : ceil;\n  }\n  return isNegative ? -floor : floor;\n\
    }\n", "    return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = parseFloat(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  if (num - floor === 0.5) {\n    return num > 0 ? ceil\
    \ : floor;\n  }\n  return num - floor < ceil - num ? floor : ceil;\n}\n", "  const\
    \ num = Number(value);\n  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n\
    \  const diffFloor = num - floor;\n  const diffCeil = ceil - num;\n  if (diffFloor\
    \ === diffCeil) {\n    return num > 0 ? ceil : floor;\n  }\n  return diffFloor\
    \ < diffCeil ? floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = parseFloat(value);\n  return Math.round(num);\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n  const\
    \ floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diffFloor\
    \ = num - floor;\n  const diffCeil = ceil - num;\n  if (diffFloor > diffCeil)\
    \ {\n    return ceil;\n  } else {\n    return floor;\n  }\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n\
    \  const decimal = num - Math.floor(num);\n  if (decimal < 0.5) {\n    return\
    \ Math.floor(num);\n  } else {\n    return Math.ceil(num);\n  }\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diff\
    \ = num - floor;\n  if (diff < 0.5) {\n    return floor;\n  } else {\n    return\
    \ ceil;\n  }\n}\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  const num = parseFloat(value);\n\
    \  const decimal = num - Math.floor(num);\n  if (decimal < 0.5) {\n    return\
    \ Math.floor(num);\n  } else {\n    return Math.ceil(num);\n  }\n}\n", "  const\
    \ float = parseFloat(value);\n  return float % 1 >= 0.5 ? Math.ceil(float) : Math.floor(float);\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  const diffFloor = num - floor;\n  const diffCeil =\
    \ ceil - num;\n  if (diffFloor === diffCeil) {\n    return num < 0 ? floor : ceil;\n\
    \  }\n  return diffFloor < diffCeil ? floor : ceil;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

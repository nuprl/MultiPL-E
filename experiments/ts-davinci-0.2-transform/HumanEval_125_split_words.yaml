name: HumanEval_125_split_words
language: ts
prompt: "//Given a string of words, return a list of words split on whitespace, if\
  \ no whitespaces exists in the text you\n// should split on commas ',' if no commas\
  \ exists you should return the number of lower-case letters with odd order in the\n\
  // alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>>\
  \ split_words(\"Hello world!\")\n// [\"Hello\", \"world!\"]\n// >>> split_words(\"\
  Hello,world!\")\n// [\"Hello\", \"world!\"]\n// >>> split_words(\"abcdef\")\n//\
  \ 3\nfunction split_words(txt: string): string[]| number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = split_words;\n  assert.deepEqual(candidate(\"Hello\
  \ world!\"),[\"Hello\", \"world!\"]);\n  assert.deepEqual(candidate(\"Hello,world!\"\
  ),[\"Hello\", \"world!\"]);\n  assert.deepEqual(candidate(\"Hello world,!\"),[\"\
  Hello\", \"world,!\"]);\n  assert.deepEqual(candidate(\"Hello,Hello,world !\"),[\"\
  Hello,Hello,world\", \"!\"]);\n  assert.deepEqual(candidate(\"abcdef\"),3);\n  assert.deepEqual(candidate(\"\
  aaabb\"),2);\n  assert.deepEqual(candidate(\"aaaBb\"),1);\n  assert.deepEqual(candidate(\"\
  \"),0);\n}\n\ntest();"
completions: ["    let words = txt.split(/\\s+/);\n    if (words.length > 1) {\n \
    \       return words;\n    }\n    words = txt.split(',');\n    if (words.length\
    \ > 1) {\n        return words;\n    }\n    let count = 0;\n    for (let i = 0;\
    \ i < txt.length; i++) {\n        if (txt.charCodeAt(i) % 2 === 1) {\n       \
    \     count++;\n        }\n    }\n    return count;\n}\n", "    let words = txt.split(\"\
    \ \");\n    if (words.length > 1) {\n        return words;\n    }\n    words =\
    \ txt.split(\",\");\n    if (words.length > 1) {\n        return words;\n    }\n\
    \    let count = 0;\n    for (let i = 0; i < txt.length; i++) {\n        if (i\
    \ % 2 === 0) {\n            count++;\n        }\n    }\n    return count;\n}\n",
  "    if (txt.indexOf(' ') !== -1) {\n        return txt.split(' ');\n    }\n   \
    \ if (txt.indexOf(',') !== -1) {\n        return txt.split(',');\n    }\n    let\
    \ count = 0;\n    for (let i = 0; i < txt.length; i++) {\n        if (i % 2 ===\
    \ 0 && txt[i] === txt[i].toLowerCase()) {\n            count++;\n        }\n \
    \   }\n    return count;\n}\n", "    if (txt.indexOf(\" \") > -1) {\n        return\
    \ txt.split(\" \");\n    } else if (txt.indexOf(\",\") > -1) {\n        return\
    \ txt.split(\",\");\n    } else {\n        let count = 0;\n        for (let i\
    \ = 0; i < txt.length; i++) {\n            if (i % 2 === 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n    }\n}\n", " \
    \   let words = txt.split(\" \");\n    if (words.length > 1) {\n        return\
    \ words;\n    }\n    words = txt.split(\",\");\n    if (words.length > 1) {\n\
    \        return words;\n    }\n    let count = 0;\n    for (let i = 0; i < txt.length;\
    \ i++) {\n        if (txt.charCodeAt(i) % 2 === 1) {\n            count++;\n \
    \       }\n    }\n    return count;\n}\n", "    if (txt.indexOf(' ') !== -1) {\n\
    \        return txt.split(' ');\n    } else if (txt.indexOf(',') !== -1) {\n \
    \       return txt.split(',');\n    } else {\n        let count = 0;\n       \
    \ for (let i = 0; i < txt.length; i++) {\n            if (txt.charCodeAt(i) %\
    \ 2 === 1) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n}\n", "    if (txt.indexOf(' ') !== -1) {\n        return txt.split('\
    \ ');\n    } else if (txt.indexOf(',') !== -1) {\n        return txt.split(',');\n\
    \    } else {\n        let count = 0;\n        for (let i = 0; i < txt.length;\
    \ i++) {\n            if (i % 2 === 0) {\n                count++;\n         \
    \   }\n        }\n        return count;\n    }\n}\n", "    let words = txt.split(/\\\
    s+/);\n    if (words.length > 1) {\n        return words;\n    }\n    words =\
    \ txt.split(',');\n    if (words.length > 1) {\n        return words;\n    }\n\
    \    let count = 0;\n    for (let i = 0; i < txt.length; i++) {\n        if (txt.charCodeAt(i)\
    \ % 2 === 1) {\n            count++;\n        }\n    }\n    return count;\n}\n",
  "    if (txt.indexOf(' ') != -1) {\n        return txt.split(' ');\n    } else if\
    \ (txt.indexOf(',') != -1) {\n        return txt.split(',');\n    } else {\n \
    \       let count = 0;\n        for (let i = 0; i < txt.length; i++) {\n     \
    \       if (i % 2 == 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n}\n", "    if (txt.indexOf(' ') > -1) {\n     \
    \   return txt.split(' ');\n    } else if (txt.indexOf(',') > -1) {\n        return\
    \ txt.split(',');\n    } else {\n        let count = 0;\n        for (let i =\
    \ 0; i < txt.length; i++) {\n            if (i % 2 === 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n}\n", "    let words\
    \ = txt.split(/\\s+/);\n    if (words.length > 1) {\n        return words;\n \
    \   }\n    words = txt.split(',');\n    if (words.length > 1) {\n        return\
    \ words;\n    }\n    let count = 0;\n    for (let i = 0; i < txt.length; i++)\
    \ {\n        if (i % 2 === 0 && txt[i] === txt[i].toLowerCase()) {\n         \
    \   count++;\n        }\n    }\n    return count;\n}\n", "    if (txt.indexOf('\
    \ ') !== -1) {\n        return txt.split(' ');\n    }\n    if (txt.indexOf(',')\
    \ !== -1) {\n        return txt.split(',');\n    }\n    let count = 0;\n    for\
    \ (let i = 0; i < txt.length; i++) {\n        if (i % 2 === 0) {\n           \
    \ count++;\n        }\n    }\n    return count;\n}\n", "    let words = txt.split(/\\\
    s+/);\n    if (words.length > 1) {\n        return words;\n    }\n    words =\
    \ txt.split(',');\n    if (words.length > 1) {\n        return words;\n    }\n\
    \    let count = 0;\n    for (let i = 0; i < txt.length; i++) {\n        if (txt.charCodeAt(i)\
    \ % 2 === 1) {\n            count++;\n        }\n    }\n    return count;\n}\n",
  "    let words: string[] = [];\n    let word: string = \"\";\n    let count: number\
    \ = 0;\n    for (let i: number = 0; i < txt.length; i++) {\n        if (txt[i]\
    \ != \" \" && txt[i] != \",\") {\n            word += txt[i];\n        } else\
    \ {\n            words.push(word);\n            word = \"\";\n        }\n    }\n\
    \    if (word != \"\") {\n        words.push(word);\n    }\n    if (words.length\
    \ == 0) {\n        for (let i: number = 0; i < txt.length; i++) {\n          \
    \  if (i % 2 == 0) {\n                count++;\n            }\n        }\n   \
    \     return count;\n    }\n    return words;\n}\n", "    let words = txt.split(\"\
    \ \");\n    if (words.length > 1) {\n        return words;\n    }\n    words =\
    \ txt.split(\",\");\n    if (words.length > 1) {\n        return words;\n    }\n\
    \    let count = 0;\n    for (let i = 0; i < txt.length; i++) {\n        if (i\
    \ % 2 === 0) {\n            count++;\n        }\n    }\n    return count;\n}\n",
  "    if (txt.indexOf(' ') != -1) {\n        return txt.split(' ');\n    } else if\
    \ (txt.indexOf(',') != -1) {\n        return txt.split(',');\n    } else {\n \
    \       let count = 0;\n        for (let i = 0; i < txt.length; i++) {\n     \
    \       if (i % 2 == 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n}\n", "    let words = txt.split(\" \");\n    if\
    \ (words.length > 1) {\n        return words;\n    }\n    words = txt.split(\"\
    ,\");\n    if (words.length > 1) {\n        return words;\n    }\n    let count\
    \ = 0;\n    for (let i = 0; i < txt.length; i++) {\n        if (i % 2 === 0) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let words\
    \ = txt.split(/[\\s,]+/);\n    if (words.length > 1) {\n        return words;\n\
    \    }\n    let letters = txt.split('');\n    let odd_letters = letters.filter(function\
    \ (letter, index) {\n        return index % 2 === 0;\n    });\n    return odd_letters.length;\n\
    }\n", "    if (txt.indexOf(' ') !== -1) {\n        return txt.split(' ');\n  \
    \  } else if (txt.indexOf(',') !== -1) {\n        return txt.split(',');\n   \
    \ } else {\n        let count = 0;\n        for (let i = 0; i < txt.length; i++)\
    \ {\n            if (txt.charCodeAt(i) % 2 !== 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n}\n", "    let words:\
    \ string[] = [];\n    let word: string = \"\";\n    let count: number = 0;\n \
    \   for (let i: number = 0; i < txt.length; i++) {\n        if (txt[i] === \"\
    \ \") {\n            words.push(word);\n            word = \"\";\n        } else\
    \ if (txt[i] === \",\") {\n            words.push(word);\n            word = \"\
    \";\n        } else {\n            word += txt[i];\n        }\n    }\n    if (word\
    \ !== \"\") {\n        words.push(word);\n    }\n    if (words.length === 0) {\n\
    \        for (let i: number = 0; i < txt.length; i++) {\n            if (i % 2\
    \ === 0) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    } else {\n        return words;\n    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

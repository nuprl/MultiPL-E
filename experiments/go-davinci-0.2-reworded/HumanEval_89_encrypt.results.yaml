language: go_test.go
name: HumanEval_89_encrypt
results:
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // YOUR CODE HERE\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpx8l5_bu5_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpx8l5_bu5_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp6t57cqfs_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp6t57cqfs_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp6t57cqfs_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpz2whgmem_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpz2whgmem_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpz2whgmem_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpz2whgmem_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2*2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmplv8x4o06_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmplv8x4o06_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmplv8x4o06_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO\n    return \"\"\
    \n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpcfe3zitr_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpcfe3zitr_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpcfe3zitr_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpcfe3zitr_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpcfe3zitr_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpcfe3zitr_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpcfe3zitr_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpcfe3zitr_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2*2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmplv8x4o06_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmplv8x4o06_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmplv8x4o06_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement\n  \
    \  return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpco_7qdsm_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpco_7qdsm_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpco_7qdsm_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp6t57cqfs_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp6t57cqfs_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp6t57cqfs_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprcb3x7i3_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprcb3x7i3_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprcb3x7i3_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprcb3x7i3_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprcb3x7i3_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprcb3x7i3_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement\n  \
    \  return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpco_7qdsm_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpco_7qdsm_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpco_7qdsm_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement\n  \
    \  return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpco_7qdsm_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpco_7qdsm_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpco_7qdsm_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement\n  \
    \  return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpwgr8zowf_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpwgr8zowf_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpwgr8zowf_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpwgr8zowf_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpwgr8zowf_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpwgr8zowf_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpwgr8zowf_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpwgr8zowf_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2 * 2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmp_qv1mdsj_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmp_qv1mdsj_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmp_qv1mdsj_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpz2whgmem_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpz2whgmem_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpz2whgmem_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpz2whgmem_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprcb3x7i3_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprcb3x7i3_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprcb3x7i3_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // YOUR CODE HERE\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpx8l5_bu5_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpx8l5_bu5_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp6t57cqfs_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp6t57cqfs_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp6t57cqfs_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement this\
    \ function.\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpgjvyfh7n_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpgjvyfh7n_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpgjvyfh7n_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpgjvyfh7n_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpgjvyfh7n_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpgjvyfh7n_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpgjvyfh7n_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpgjvyfh7n_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpz2whgmem_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpz2whgmem_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpz2whgmem_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpz2whgmem_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2 * 2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmp_qv1mdsj_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmp_qv1mdsj_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmp_qv1mdsj_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2*2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmplv8x4o06_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmplv8x4o06_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmplv8x4o06_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // YOUR CODE HERE\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpx8l5_bu5_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpx8l5_bu5_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpz2whgmem_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpz2whgmem_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpz2whgmem_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpz2whgmem_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 2
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n}\n\n\
    func TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpor6yehh__test.go:23:1: missing return

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073931
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me!\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp2bab9l74_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp2bab9l74_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp2bab9l74_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp2bab9l74_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me!\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp2bab9l74_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp2bab9l74_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp2bab9l74_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp2bab9l74_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2*2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmplv8x4o06_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmplv8x4o06_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmplv8x4o06_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprcb3x7i3_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprcb3x7i3_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprcb3x7i3_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement\n  \
    \  return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpco_7qdsm_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpco_7qdsm_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpco_7qdsm_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2 * 2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmp_qv1mdsj_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmp_qv1mdsj_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmp_qv1mdsj_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpz2whgmem_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpz2whgmem_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpz2whgmem_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpz2whgmem_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpz2whgmem_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpz2whgmem_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpz2whgmem_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpz2whgmem_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2 * 2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmp_qv1mdsj_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmp_qv1mdsj_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmp_qv1mdsj_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpz2whgmem_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpz2whgmem_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpz2whgmem_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpz2whgmem_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement\n  \
    \  return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpco_7qdsm_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpco_7qdsm_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpco_7qdsm_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // YOUR CODE HERE\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpx8l5_bu5_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpx8l5_bu5_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2 * 2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmp_qv1mdsj_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmp_qv1mdsj_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmp_qv1mdsj_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // YOUR CODE HERE\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpx8l5_bu5_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpx8l5_bu5_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2 * 2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmp_qv1mdsj_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmp_qv1mdsj_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmp_qv1mdsj_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2*2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmplv8x4o06_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmplv8x4o06_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmplv8x4o06_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2*2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmplv8x4o06_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmplv8x4o06_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmplv8x4o06_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp6t57cqfs_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp6t57cqfs_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp6t57cqfs_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me!\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp2bab9l74_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp2bab9l74_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp2bab9l74_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp2bab9l74_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpz2whgmem_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpz2whgmem_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpz2whgmem_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpz2whgmem_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me!\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp2bab9l74_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp2bab9l74_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp2bab9l74_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp2bab9l74_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // YOUR CODE HERE\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpx8l5_bu5_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpx8l5_bu5_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement\n  \
    \  return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpco_7qdsm_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpco_7qdsm_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpco_7qdsm_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // YOUR CODE HERE\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpx8l5_bu5_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpx8l5_bu5_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp6t57cqfs_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp6t57cqfs_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp6t57cqfs_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // YOUR CODE HERE\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpx8l5_bu5_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpx8l5_bu5_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // YOUR CODE HERE\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpx8l5_bu5_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpx8l5_bu5_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp6t57cqfs_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp6t57cqfs_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp6t57cqfs_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprcb3x7i3_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprcb3x7i3_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprcb3x7i3_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp6t57cqfs_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp6t57cqfs_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp6t57cqfs_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me!\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp2bab9l74_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp2bab9l74_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp2bab9l74_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp2bab9l74_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me!\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp2bab9l74_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp2bab9l74_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp2bab9l74_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp2bab9l74_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 2
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // YOUR CODE HERE\n}\n\n\
    func TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp_8nj4f2v_test.go:23:1: missing return

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073931
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2 * 2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmp_qv1mdsj_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmp_qv1mdsj_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmp_qv1mdsj_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprcb3x7i3_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprcb3x7i3_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprcb3x7i3_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp6t57cqfs_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp6t57cqfs_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp6t57cqfs_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprcb3x7i3_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprcb3x7i3_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprcb3x7i3_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpz2whgmem_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpz2whgmem_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpz2whgmem_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpz2whgmem_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me!\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp2bab9l74_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp2bab9l74_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp2bab9l74_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp2bab9l74_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprcb3x7i3_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprcb3x7i3_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprcb3x7i3_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me!\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp2bab9l74_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp2bab9l74_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp2bab9l74_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp2bab9l74_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, char := range s {\n        result += string(char + 2 * 2)\n    }\n  \
    \  return result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmp7pmrq2oq_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmp7pmrq2oq_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmp7pmrq2oq_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement\n  \
    \  return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpwgr8zowf_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpwgr8zowf_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpwgr8zowf_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpwgr8zowf_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpwgr8zowf_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpwgr8zowf_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpwgr8zowf_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpwgr8zowf_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpz2whgmem_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpz2whgmem_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpz2whgmem_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpz2whgmem_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement\n  \
    \  return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpwgr8zowf_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpwgr8zowf_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpwgr8zowf_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpwgr8zowf_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpwgr8zowf_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpwgr8zowf_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpwgr8zowf_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpwgr8zowf_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprcb3x7i3_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprcb3x7i3_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprcb3x7i3_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me!\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp2bab9l74_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp2bab9l74_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp2bab9l74_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp2bab9l74_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp6t57cqfs_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp6t57cqfs_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp6t57cqfs_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp6t57cqfs_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp6t57cqfs_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // YOUR CODE HERE\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpx8l5_bu5_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpx8l5_bu5_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprcb3x7i3_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprcb3x7i3_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprcb3x7i3_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprcb3x7i3_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprcb3x7i3_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // YOUR CODE HERE\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpx8l5_bu5_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpx8l5_bu5_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2 * 2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmp_qv1mdsj_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmp_qv1mdsj_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmp_qv1mdsj_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me!\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp2bab9l74_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp2bab9l74_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp2bab9l74_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp2bab9l74_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2*2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmplv8x4o06_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmplv8x4o06_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmplv8x4o06_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement\n  \
    \  return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpco_7qdsm_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpco_7qdsm_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpco_7qdsm_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpco_7qdsm_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpco_7qdsm_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpz2whgmem_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpz2whgmem_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpz2whgmem_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpz2whgmem_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: implement this\
    \ function\n    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate\
    \ := encrypt\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpbj_n2ox1_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpbj_n2ox1_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpbj_n2ox1_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpbj_n2ox1_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me!\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp2bab9l74_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp2bab9l74_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp2bab9l74_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp2bab9l74_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2*2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmplv8x4o06_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmplv8x4o06_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmplv8x4o06_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpz2whgmem_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpz2whgmem_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpz2whgmem_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpz2whgmem_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpz2whgmem_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpz2whgmem_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me!\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp2bab9l74_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp2bab9l74_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp2bab9l74_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp2bab9l74_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // TODO: Implement me!\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp2bab9l74_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp2bab9l74_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp2bab9l74_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp2bab9l74_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp2bab9l74_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp2bab9l74_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // your code here\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmprp1hhwnl_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmprp1hhwnl_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmprp1hhwnl_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmprp1hhwnl_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmprp1hhwnl_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // YOUR CODE HERE\n   \
    \ return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpx8l5_bu5_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpx8l5_bu5_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpx8l5_bu5_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpx8l5_bu5_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var encrypted string\n\
    \    for _, c := range s {\n        encrypted += string(c + 2*2)\n    }\n    return\
    \ encrypted\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmpay2e74u0_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmpay2e74u0_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmpay2e74u0_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    return \"\"\n}\n\nfunc\
    \ TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual: candidate(\"\
    asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"gf\"), expected:\
    \ \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\" },\n     { actual:\
    \ candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\" },\n     { actual:\
    \ candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\" },\n     { actual:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ },\n     { actual: candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmp3253hd2n_test.go:45: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmp3253hd2n_test.go:45: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmp3253hd2n_test.go:45: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmp3253hd2n_test.go:45: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmp3253hd2n_test.go:45:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmp3253hd2n_test.go:45: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    var result string\n   \
    \ for _, c := range s {\n        result += string(c + 2*2)\n    }\n    return\
    \ result\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n     { actual:\
    \ candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual: candidate(\"\
    gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected: \"ix\"\
    \ },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n\
    \        tmplv8x4o06_test.go:49: expected 'jeiajeaijeiak', got 'jei{je{ijei{k'\n\
    \    --- FAIL: TestEncrypt/test_num__5 (0.00s)\n        tmplv8x4o06_test.go:49:\
    \ expected 'lippsqcjvmirh', got 'lippsq}jvmirh'\n    --- FAIL: TestEncrypt/test_num__6\
    \ (0.00s)\n        tmplv8x4o06_test.go:49: expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl',\
    \ got 'h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073932
- exit_code: 1
  program: "package encrypt_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Create a function encrypt that takes a string as an argument and\n// returns\
    \ a string encrypted with the alphabet being rotated. \n// The alphabet should\
    \ be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunc encrypt(s string) string {\n    // Write your code here\n\
    \    return \"\"\n}\n\nfunc TestEncrypt(t *testing.T) {\n  candidate := encrypt\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"hi\"), expected: \"lm\" },\n\
    \     { actual: candidate(\"asdfghjkl\"), expected: \"ewhjklnop\" },\n     { actual:\
    \ candidate(\"gf\"), expected: \"kj\" },\n     { actual: candidate(\"et\"), expected:\
    \ \"ix\" },\n     { actual: candidate(\"faewfawefaewg\"), expected: \"jeiajeaijeiak\"\
    \ },\n     { actual: candidate(\"hellomyfriend\"), expected: \"lippsqcjvmirh\"\
    \ },\n     { actual: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ), expected: \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" },\n     { actual:\
    \ candidate(\"a\"), expected: \"e\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEncrypt (0.00s)\n    --- FAIL: TestEncrypt/test_num__0 (0.00s)\n\
    \        tmpmpym8vkq_test.go:46: expected 'lm', got ''\n    --- FAIL: TestEncrypt/test_num__1\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'ewhjklnop', got ''\n    ---\
    \ FAIL: TestEncrypt/test_num__2 (0.00s)\n        tmpmpym8vkq_test.go:46: expected\
    \ 'kj', got ''\n    --- FAIL: TestEncrypt/test_num__3 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'ix', got ''\n    --- FAIL: TestEncrypt/test_num__4 (0.00s)\n     \
    \   tmpmpym8vkq_test.go:46: expected 'jeiajeaijeiak', got ''\n    --- FAIL: TestEncrypt/test_num__5\
    \ (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'lippsqcjvmirh', got ''\n\
    \    --- FAIL: TestEncrypt/test_num__6 (0.00s)\n        tmpmpym8vkq_test.go:46:\
    \ expected 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl', got ''\n    --- FAIL:\
    \ TestEncrypt/test_num__7 (0.00s)\n        tmpmpym8vkq_test.go:46: expected 'e',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073932

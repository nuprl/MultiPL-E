name: HumanEval_140_fix_spaces
language: go_test.go
prompt: "package fix_spaces_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Given a string text, replace all spaces in it with underscores, \n// and if a\
  \ string has more than 2 consecutive spaces, \n// then replace all consecutive spaces\
  \ with - \n// >>> fix_spaces(\" Example\")\n// \"Example\"\n// >>> fix_spaces(\"\
  \ Example 1\")\n// \"Example_1\"\n// >>> fix_spaces(\" Example 2\")\n// \"_Example_2\"\
  \n// >>> fix_spaces(\" Example 3\")\n// \"_Example-3\"\nfunc fix_spaces(text string)\
  \ string {\n"
tests: "func TestFix_Spaces(t *testing.T) {\n  candidate := fix_spaces\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate(\"Example\"), expected: \"Example\" },\n   \
  \  { actual: candidate(\"Mudasir Hanif \"), expected: \"Mudasir_Hanif_\" },\n  \
  \   { actual: candidate(\"Yellow Yellow  Dirty  Fellow\"), expected: \"Yellow_Yellow__Dirty__Fellow\"\
  \ },\n     { actual: candidate(\"Exa   mple\"), expected: \"Exa-mple\" },\n    \
  \ { actual: candidate(\"   Exa 1 2 2 mple\"), expected: \"-Exa_1_2_2_mple\" },\n\
  \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i),\
  \ func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    var result string\n    var space_count int\n    for _, c := range\
    \ text {\n        if c == ' ' {\n            space_count++\n            if space_count\
    \ > 2 {\n                continue\n            }\n        } else {\n         \
    \   space_count = 0\n        }\n        result += string(c)\n    }\n    return\
    \ result\n}\n", "    var result string\n    var prev rune\n    var count int\n\
    \    for _, c := range text {\n        if c == ' ' {\n            count++\n  \
    \          if count > 2 {\n                if prev != '-' {\n                \
    \    result += \"-\"\n                }\n            } else {\n              \
    \  if prev != '_' {\n                    result += \"_\"\n                }\n\
    \            }\n        } else {\n            result += string(c)\n          \
    \  count = 0\n        }\n        prev = c\n    }\n    return result\n}\n", " \
    \   return \"\"\n}\n", "    var result string\n    var space_count int\n    for\
    \ _, c := range text {\n        if c == ' ' {\n            space_count++\n   \
    \         if space_count == 1 {\n                result += \"_\"\n           \
    \ } else if space_count == 2 {\n                result += \"_\"\n            }\n\
    \        } else {\n            if space_count > 2 {\n                result +=\
    \ \"-\"\n            }\n            result += string(c)\n            space_count\
    \ = 0\n        }\n    }\n    return result\n}\n", "    var result string\n   \
    \ var space_count int\n    for _, c := range text {\n        if c == ' ' {\n \
    \           space_count++\n            if space_count > 2 {\n                result\
    \ += \"-\"\n            } else {\n                result += \"_\"\n          \
    \  }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count > 2 {\n                result += \"-\"\n         \
    \   } else {\n                result += \"_\"\n            }\n        } else {\n\
    \            space_count = 0\n            result += string(c)\n        }\n   \
    \ }\n    return result\n}\n", "    var result string\n    var prev_char byte\n\
    \    var space_count int\n    for _, char := range text {\n        if char ==\
    \ ' ' {\n            space_count++\n            if space_count > 2 {\n       \
    \         continue\n            }\n        } else {\n            space_count =\
    \ 0\n        }\n        if char == ' ' && prev_char == ' ' {\n            result\
    \ = result[:len(result)-1]\n            result += \"-\"\n        } else {\n  \
    \          result += string(char)\n        }\n        prev_char = byte(char)\n\
    \    }\n    return result\n}\n", "    var result string\n    var space_count int\n\
    \    for _, char := range text {\n        if char == ' ' {\n            space_count++\n\
    \            if space_count > 2 {\n                result += \"-\"\n         \
    \   } else {\n                result += \"_\"\n            }\n        } else {\n\
    \            space_count = 0\n            result += string(char)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    var space_count int\n\
    \    for _, ch := range text {\n        if ch == ' ' {\n            space_count++\n\
    \            if space_count > 2 {\n                result += \"-\"\n         \
    \   } else {\n                result += \"_\"\n            }\n        } else {\n\
    \            result += string(ch)\n            space_count = 0\n        }\n  \
    \  }\n    return result\n}\n", "    var result string\n    var space_count int\n\
    \    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count > 2 {\n                result += \"-\"\n         \
    \   } else {\n                result += \"_\"\n            }\n        } else {\n\
    \            space_count = 0\n            result += string(c)\n        }\n   \
    \ }\n    return result\n}\n", "    var result string\n    var last_char byte\n\
    \    var space_count int\n    for _, char := range text {\n        if char ==\
    \ ' ' {\n            space_count++\n            if space_count == 1 {\n      \
    \          result += string(char)\n            }\n        } else {\n         \
    \   if space_count > 1 {\n                result += \"_\"\n            }\n   \
    \         space_count = 0\n            result += string(char)\n        }\n   \
    \     last_char = byte(char)\n    }\n    if space_count > 1 {\n        result\
    \ += \"_\"\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    // TODO:\
    \ implement\n    return \"\"\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count > 2 {\n                result += \"-\"\n          \
    \  }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            if space_count > 2 {\n                result\
    \ += \"-\"\n            }\n            result += string(c)\n            space_count\
    \ = 0\n        }\n    }\n    return result\n}\n", "    var result string\n   \
    \ var count int\n    for _, c := range text {\n        if c == ' ' {\n       \
    \     count++\n            if count == 1 {\n                result += \"_\"\n\
    \            } else if count == 2 {\n                result += \"_\"\n       \
    \     } else {\n                result += \"-\"\n            }\n        } else\
    \ {\n            count = 0\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    var prev_char byte\n   \
    \ var count int\n    for _, char := range text {\n        if char == ' ' {\n \
    \           count++\n            if count == 1 {\n                result += \"\
    _\"\n            } else if count == 2 {\n                result += \"-\"\n   \
    \         }\n        } else {\n            count = 0\n            result += string(char)\n\
    \        }\n        prev_char = byte(char)\n    }\n    return result\n}\n", " \
    \   var result string\n    var space_count int\n    for _, char := range text\
    \ {\n        if char == ' ' {\n            space_count++\n            if space_count\
    \ == 1 {\n                result += \"_\"\n            } else if space_count ==\
    \ 2 {\n                result += \"_\"\n            } else {\n               \
    \ result += \"-\"\n            }\n        } else {\n            space_count =\
    \ 0\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    var count int\n    for _, c := range text {\n\
    \        if c == ' ' {\n            count++\n            if count == 1 {\n   \
    \             result += \"_\"\n            } else if count == 2 {\n          \
    \      result += \"_\"\n            } else {\n                result += \"-\"\n\
    \            }\n        } else {\n            result += string(c)\n          \
    \  count = 0\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    var prev_space bool = false\n    var space_count int = 0\n    for _, c :=\
    \ range text {\n        if c == ' ' {\n            space_count++\n           \
    \ if space_count == 1 {\n                result += \"_\"\n            } else if\
    \ space_count == 2 {\n                result += \"_\"\n            } else if space_count\
    \ > 2 {\n                result += \"-\"\n            }\n            prev_space\
    \ = true\n        } else {\n            space_count = 0\n            result +=\
    \ string(c)\n            prev_space = false\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    var prev_char byte\n    var space_count int\n\
    \    for i := 0; i < len(text); i++ {\n        if text[i] == ' ' {\n         \
    \   space_count++\n            if space_count == 1 {\n                result +=\
    \ \"_\"\n            } else if space_count == 2 {\n                result += \"\
    _\"\n            } else if space_count > 2 {\n                if prev_char !=\
    \ '-' {\n                    result += \"-\"\n                }\n            }\n\
    \        } else {\n            space_count = 0\n            result += string(text[i])\n\
    \        }\n        prev_char = text[i]\n    }\n    return result\n}\n", "   \
    \ var result string\n    var space_count int\n    for _, c := range text {\n \
    \       if c == ' ' {\n            space_count++\n            if space_count ==\
    \ 1 {\n                result += \"_\"\n            } else if space_count == 2\
    \ {\n                result += \"_\"\n            }\n        } else {\n      \
    \      space_count = 0\n            result += string(c)\n        }\n    }\n  \
    \  return result\n}\n", "    var result string\n    var space_count int\n    for\
    \ _, char := range text {\n        if char == ' ' {\n            space_count++\n\
    \            if space_count > 2 {\n                result += \"-\"\n         \
    \   } else {\n                result += \"_\"\n            }\n        } else {\n\
    \            space_count = 0\n            result += string(char)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    var space_count int\n\
    \    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            if space_count > 2 {\n                result\
    \ += \"-\"\n            }\n            result += string(c)\n            space_count\
    \ = 0\n        }\n    }\n    return result\n}\n", "    var result string\n   \
    \ var space_count int\n    for _, c := range text {\n        if c == ' ' {\n \
    \           space_count++\n            if space_count == 1 {\n               \
    \ result += \"_\"\n            } else if space_count == 2 {\n                result\
    \ += \"_\"\n            }\n        } else {\n            space_count = 0\n   \
    \         result += string(c)\n        }\n    }\n    return result\n}\n", "  \
    \  return \"\"\n}\n", "    var result string\n    var count int = 0\n    for _,\
    \ char := range text {\n        if char == ' ' {\n            count++\n      \
    \      if count > 2 {\n                result += \"-\"\n            } else {\n\
    \                result += \"_\"\n            }\n        } else {\n          \
    \  result += string(char)\n            count = 0\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    var space_count int\n    for _, c\
    \ := range text {\n        if c == ' ' {\n            space_count++\n        \
    \    if space_count == 1 {\n                result += \"_\"\n            } else\
    \ if space_count == 2 {\n                result += \"_\"\n            }\n    \
    \    } else {\n            if space_count > 2 {\n                result += \"\
    -\"\n            }\n            result += string(c)\n            space_count =\
    \ 0\n        }\n    }\n    return result\n}\n", "    var result string\n    var\
    \ count int\n    for _, c := range text {\n        if c == ' ' {\n           \
    \ count++\n            if count == 1 {\n                result += \"_\"\n    \
    \        } else if count == 2 {\n                result += \"_\"\n           \
    \ } else {\n                result += \"-\"\n            }\n        } else {\n\
    \            count = 0\n            result += string(c)\n        }\n    }\n  \
    \  return result\n}\n", "    var result string\n    var last_char rune\n    var\
    \ count int\n    for _, char := range text {\n        if char == ' ' {\n     \
    \       if last_char == ' ' {\n                count++\n            } else {\n\
    \                count = 1\n            }\n            if count > 2 {\n      \
    \          result += \"-\"\n            } else {\n                result += \"\
    _\"\n            }\n        } else {\n            result += string(char)\n   \
    \     }\n        last_char = char\n    }\n    return result\n}\n", "    var result\
    \ string\n    var prev_space bool\n    var space_count int\n    for _, c := range\
    \ text {\n        if c == ' ' {\n            if prev_space {\n               \
    \ space_count++\n            } else {\n                prev_space = true\n   \
    \             space_count = 1\n            }\n        } else {\n            if\
    \ prev_space {\n                if space_count == 1 {\n                    result\
    \ += \"_\"\n                } else {\n                    result += \"-\"\n  \
    \              }\n            }\n            prev_space = false\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    var space_count int\n    for _, c := range text {\n        if c == ' ' {\n\
    \            space_count++\n            if space_count == 1 {\n              \
    \  result += \"_\"\n            } else if space_count == 2 {\n               \
    \ result += \"_\"\n            }\n        } else {\n            space_count =\
    \ 0\n            result += string(c)\n        }\n    }\n    return result\n}\n",
  "    return \"\"\n}\n", "    var result string\n    var space_count int\n    for\
    \ _, c := range text {\n        if c == ' ' {\n            space_count++\n   \
    \         if space_count > 2 {\n                result += \"-\"\n            }\
    \ else {\n                result += \"_\"\n            }\n        } else {\n \
    \           space_count = 0\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    // your code here\n    return \"\"\n}\n", "   \
    \ var result string\n    var space_count int\n    for _, c := range text {\n \
    \       if c == ' ' {\n            space_count++\n            if space_count >\
    \ 2 {\n                result += \"-\"\n            } else {\n               \
    \ result += \"_\"\n            }\n        } else {\n            space_count =\
    \ 0\n            result += string(c)\n        }\n    }\n    return result\n}\n",
  "    // TODO: implement this function\n    return \"\"\n}\n", "    var result string\n\
    \    var count int\n    for _, c := range text {\n        if c == ' ' {\n    \
    \        count++\n            if count == 2 {\n                result += \"-\"\
    \n            }\n        } else {\n            if count == 1 {\n             \
    \   result += \"_\"\n            }\n            result += string(c)\n        \
    \    count = 0\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    var space_count int\n    for _, c := range text {\n        if c == ' ' {\n\
    \            space_count++\n            if space_count > 2 {\n               \
    \ result += \"-\"\n            } else {\n                result += \"_\"\n   \
    \         }\n        } else {\n            space_count = 0\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    var count int\n    for _, c := range text {\n        if c == ' ' {\n    \
    \        count++\n            if count > 2 {\n                result += \"-\"\n\
    \            } else {\n                result += \"_\"\n            }\n      \
    \  } else {\n            result += string(c)\n            count = 0\n        }\n\
    \    }\n    return result\n}\n", "    return text\n}\n", "    return \"\"\n}\n",
  "    var result string\n    var space_count int\n    for _, c := range text {\n\
    \        if c == ' ' {\n            space_count++\n            if space_count\
    \ > 2 {\n                result += \"-\"\n            } else {\n             \
    \   result += \"_\"\n            }\n        } else {\n            space_count\
    \ = 0\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    return \"\"\n}\n", "    var result string\n    var space_count int\n\
    \    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var spaceCount\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            spaceCount++\n\
    \            if spaceCount == 2 {\n                result += \"-\"\n         \
    \   }\n        } else {\n            if spaceCount == 1 {\n                result\
    \ += \"_\"\n            }\n            result += string(c)\n            spaceCount\
    \ = 0\n        }\n    }\n    return result\n}\n", "    var result string\n   \
    \ var count int\n    for _, c := range text {\n        if c == ' ' {\n       \
    \     count++\n            if count > 2 {\n                result += \"-\"\n \
    \           } else {\n                result += \"_\"\n            }\n       \
    \ } else {\n            result += string(c)\n            count = 0\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    var prev_char byte\n\
    \    var spaces_count int\n    for i := 0; i < len(text); i++ {\n        if text[i]\
    \ == ' ' {\n            spaces_count++\n            if spaces_count == 1 {\n \
    \               result += \"_\"\n            } else if spaces_count == 2 {\n \
    \               result += \"-\"\n            }\n        } else {\n           \
    \ spaces_count = 0\n            result += string(text[i])\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    var space_count int\n  \
    \  for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            if space_count > 2 {\n                result\
    \ += \"-\"\n            }\n            result += string(c)\n            space_count\
    \ = 0\n        }\n    }\n    return result\n}\n", "    var result string\n   \
    \ var space_count int\n    for _, c := range text {\n        if c == ' ' {\n \
    \           space_count++\n            if space_count == 1 {\n               \
    \ result += \"_\"\n            } else if space_count == 2 {\n                result\
    \ += \"_\"\n            }\n        } else {\n            space_count = 0\n   \
    \         result += string(c)\n        }\n    }\n    return result\n}\n", "  \
    \  var result string\n    var count int\n    for _, c := range text {\n      \
    \  if c == ' ' {\n            count++\n            if count == 1 {\n         \
    \       result += \"_\"\n            } else if count > 2 {\n                result\
    \ += \"-\"\n            }\n        } else {\n            count = 0\n         \
    \   result += string(c)\n        }\n    }\n    return result\n}\n", "    return\
    \ \"\"\n}\n", "    var result string\n    var space_count int\n    for _, char\
    \ := range text {\n        if char == ' ' {\n            space_count++\n     \
    \       if space_count == 1 {\n                result += \"_\"\n            }\
    \ else if space_count == 2 {\n                result += \"_\"\n            } else\
    \ {\n                result += \"-\"\n            }\n        } else {\n      \
    \      space_count = 0\n            result += string(char)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    var space_count int\n  \
    \  for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            if space_count > 2 {\n                result\
    \ += \"-\"\n            }\n            result += string(c)\n            space_count\
    \ = 0\n        }\n    }\n    return result\n}\n", "    var result string\n   \
    \ var prev_char byte\n    var prev_prev_char byte\n    var space_count int\n \
    \   for i := 0; i < len(text); i++ {\n        if text[i] == ' ' {\n          \
    \  space_count++\n            if space_count == 1 {\n                result +=\
    \ string(text[i])\n            } else if space_count == 2 {\n                result\
    \ += \"_\"\n            } else if space_count > 2 {\n                if prev_char\
    \ == ' ' && prev_prev_char == ' ' {\n                    result += \"-\"\n   \
    \             }\n            }\n        } else {\n            space_count = 0\n\
    \            result += string(text[i])\n        }\n        prev_prev_char = prev_char\n\
    \        prev_char = text[i]\n    }\n    return result\n}\n", "    var result\
    \ string\n    var space_count int\n    for _, c := range text {\n        if c\
    \ == ' ' {\n            space_count++\n            if space_count == 1 {\n   \
    \             result += \"_\"\n            } else if space_count == 2 {\n    \
    \            result += \"_\"\n            } else {\n                result +=\
    \ \"-\"\n            }\n        } else {\n            space_count = 0\n      \
    \      result += string(c)\n        }\n    }\n    return result\n}\n", "    var\
    \ result string\n    var space_count int\n    for _, c := range text {\n     \
    \   if c == ' ' {\n            space_count++\n            if space_count == 1\
    \ {\n                result += \"_\"\n            } else if space_count > 2 {\n\
    \                result += \"-\"\n            }\n        } else {\n          \
    \  result += string(c)\n            space_count = 0\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    var spaceCount int\n    for _, char\
    \ := range text {\n        if char == ' ' {\n            spaceCount++\n      \
    \      if spaceCount > 2 {\n                result += \"-\"\n                spaceCount\
    \ = 0\n            } else {\n                result += \"_\"\n            }\n\
    \        } else {\n            result += string(char)\n            spaceCount\
    \ = 0\n        }\n    }\n    return result\n}\n", "    var result string\n   \
    \ var last_char byte\n    var space_count int\n    for _, char := range text {\n\
    \        if char == ' ' {\n            space_count++\n            if space_count\
    \ == 1 {\n                result += \"_\"\n            } else if space_count ==\
    \ 2 {\n                result += \"_\"\n            } else {\n               \
    \ result += \"-\"\n            }\n        } else {\n            space_count =\
    \ 0\n            result += string(char)\n        }\n        last_char = byte(char)\n\
    \    }\n    return result\n}\n", "    return \"\"\n}\n", "    var result string\n\
    \    var space_count int\n    for _, c := range text {\n        if c == ' ' {\n\
    \            space_count++\n            if space_count == 1 {\n              \
    \  result += \"_\"\n            } else if space_count == 2 {\n               \
    \ result += \"_\"\n            }\n        } else {\n            space_count =\
    \ 0\n            result += string(c)\n        }\n    }\n    return result\n}\n",
  "    var result string\n    var prev_space bool\n    var space_count int\n    for\
    \ _, c := range text {\n        if c == ' ' {\n            if prev_space {\n \
    \               space_count += 1\n            } else {\n                space_count\
    \ = 1\n            }\n            prev_space = true\n        } else {\n      \
    \      if prev_space {\n                if space_count == 1 {\n              \
    \      result += \"_\"\n                } else if space_count > 1 {\n        \
    \            result += \"-\"\n                }\n            }\n            result\
    \ += string(c)\n            prev_space = false\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    var prev_char byte\n    var prev_prev_char byte\n\
    \    for i, char := range text {\n        if char == ' ' {\n            if prev_char\
    \ == ' ' {\n                if prev_prev_char == ' ' {\n                    result\
    \ += \"-\"\n                } else {\n                    result += \"_\"\n  \
    \              }\n            } else {\n                result += \"_\"\n    \
    \        }\n        } else {\n            result += string(char)\n        }\n\
    \        prev_prev_char = prev_char\n        prev_char = byte(text[i])\n    }\n\
    \    return result\n}\n", "    var result string\n    var space_count int\n  \
    \  for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            if space_count > 2 {\n                result\
    \ += \"-\"\n            }\n            result += string(c)\n            space_count\
    \ = 0\n        }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "  \
    \  var result string\n    var count int\n    for _, c := range text {\n      \
    \  if c == ' ' {\n            count++\n            if count > 2 {\n          \
    \      result += \"-\"\n            } else {\n                result += \"_\"\n\
    \            }\n        } else {\n            count = 0\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    var prev_space bool\n    var space_count int\n    for _, c := range text\
    \ {\n        if c == ' ' {\n            if prev_space {\n                space_count++\n\
    \            } else {\n                prev_space = true\n                space_count\
    \ = 1\n            }\n        } else {\n            if prev_space {\n        \
    \        if space_count == 1 {\n                    result += \"_\"\n        \
    \        } else {\n                    result += \"-\"\n                }\n  \
    \          }\n            prev_space = false\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    return\
    \ \"\"\n}\n", "    var result string\n    var prev_char byte\n    var space_count\
    \ int\n    for i := 0; i < len(text); i++ {\n        if text[i] == ' ' {\n   \
    \         space_count++\n            if space_count == 1 {\n                result\
    \ += \"_\"\n            } else if space_count == 2 {\n                result +=\
    \ \"_\"\n            } else if space_count > 2 {\n                result += \"\
    -\"\n            }\n        } else {\n            space_count = 0\n          \
    \  result += string(text[i])\n        }\n        prev_char = text[i]\n    }\n\
    \    return result\n}\n", "    var result string\n    var spaceCount int\n   \
    \ for _, c := range text {\n        if c == ' ' {\n            spaceCount++\n\
    \            if spaceCount == 1 {\n                result += \"_\"\n         \
    \   } else if spaceCount == 2 {\n                result += \"_\"\n           \
    \ } else {\n                result += \"-\"\n            }\n        } else {\n\
    \            spaceCount = 0\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    var prev_char_is_space bool\n\
    \    var space_count int\n    for _, char := range text {\n        if char ==\
    \ ' ' {\n            if !prev_char_is_space {\n                space_count = 1\n\
    \            } else {\n                space_count++\n            }\n        \
    \    prev_char_is_space = true\n        } else {\n            if prev_char_is_space\
    \ {\n                if space_count > 2 {\n                    result += \"-\"\
    \n                } else {\n                    result += \"_\"\n            \
    \    }\n            }\n            result += string(char)\n            prev_char_is_space\
    \ = false\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    var last rune\n    var count int\n    for _, c := range text {\n        if\
    \ c == ' ' {\n            count++\n            if count == 1 {\n             \
    \   result += string(c)\n            } else if count == 2 {\n                result\
    \ += \"_\"\n            } else if count > 2 {\n                result += \"-\"\
    \n            }\n        } else {\n            count = 0\n            result +=\
    \ string(c)\n        }\n        last = c\n    }\n    return result\n}\n", "  \
    \  var result string\n    var count int\n    for _, c := range text {\n      \
    \  if c == ' ' {\n            count++\n            if count == 1 {\n         \
    \       result += \"_\"\n            } else if count == 2 {\n                result\
    \ += \"_\"\n            } else {\n                result += \"-\"\n          \
    \  }\n        } else {\n            count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count > 2 {\n                result += \"-\"\n         \
    \   } else {\n                result += \"_\"\n            }\n        } else {\n\
    \            space_count = 0\n            result += string(c)\n        }\n   \
    \ }\n    return result\n}\n", "    var result string\n    var prev_char byte\n\
    \    var count int\n    for _, char := range text {\n        if char == ' ' {\n\
    \            count++\n            if count == 1 {\n                result += \"\
    _\"\n            } else if count == 2 {\n                result += \"_\"\n   \
    \         } else if count > 2 {\n                result += \"-\"\n           \
    \ }\n        } else {\n            count = 0\n            result += string(char)\n\
    \        }\n        prev_char = byte(char)\n    }\n    return result\n}\n", " \
    \   var result string\n    var space_count int\n    for _, c := range text {\n\
    \        if c == ' ' {\n            space_count++\n            if space_count\
    \ == 1 {\n                result += \"_\"\n            } else if space_count ==\
    \ 2 {\n                result += \"_\"\n            }\n        } else {\n    \
    \        if space_count > 2 {\n                result += \"-\"\n            }\n\
    \            result += string(c)\n            space_count = 0\n        }\n   \
    \ }\n    return result\n}\n", "    return \"\"\n}\n", "    var result string\n\
    \    var prev_space bool\n    var space_count int\n    for _, c := range text\
    \ {\n        if c == ' ' {\n            if !prev_space {\n                space_count++\n\
    \            }\n            prev_space = true\n        } else {\n            if\
    \ prev_space {\n                if space_count > 2 {\n                    result\
    \ += \"-\"\n                } else {\n                    result += \"_\"\n  \
    \              }\n            }\n            result += string(c)\n           \
    \ prev_space = false\n            space_count = 0\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    var prev_char rune\n    var space_count\
    \ int\n    for _, char := range text {\n        if char == ' ' {\n           \
    \ space_count++\n            if space_count > 2 {\n                continue\n\
    \            }\n        } else {\n            space_count = 0\n        }\n   \
    \     if char == ' ' && prev_char == ' ' {\n            result = result[:len(result)-1]\n\
    \            result += \"-\"\n        } else {\n            result += string(char)\n\
    \        }\n        prev_char = char\n    }\n    return result\n}\n", "    var\
    \ result string\n    var spaceCount int\n    for _, c := range text {\n      \
    \  if c == ' ' {\n            spaceCount++\n            if spaceCount == 1 {\n\
    \                result += \"_\"\n            } else if spaceCount == 2 {\n  \
    \              result += \"_\"\n            } else {\n                result +=\
    \ \"-\"\n            }\n        } else {\n            spaceCount = 0\n       \
    \     result += string(c)\n        }\n    }\n    return result\n}\n", "    var\
    \ result string\n    var prev_space bool = false\n    var space_count int = 0\n\
    \    for _, c := range text {\n        if c == ' ' {\n            if prev_space\
    \ {\n                space_count++\n            } else {\n                prev_space\
    \ = true\n                space_count = 1\n            }\n        } else {\n \
    \           if prev_space {\n                if space_count == 1 {\n         \
    \           result += \"_\"\n                } else {\n                    result\
    \ += \"-\"\n                }\n            }\n            prev_space = false\n\
    \            space_count = 0\n            result += string(c)\n        }\n   \
    \ }\n    if prev_space {\n        if space_count == 1 {\n            result +=\
    \ \"_\"\n        } else {\n            result += \"-\"\n        }\n    }\n   \
    \ return result\n}\n", "    return \"\"\n}\n", "    var result string\n    var\
    \ prev_char byte\n    var space_count int\n    for _, char := range text {\n \
    \       if char == ' ' {\n            space_count++\n            if space_count\
    \ > 2 {\n                continue\n            }\n        } else {\n         \
    \   space_count = 0\n        }\n        if prev_char == ' ' && char == ' ' {\n\
    \            result = result[:len(result)-1]\n            result += \"-\"\n  \
    \      } else {\n            result += string(char)\n        }\n        prev_char\
    \ = byte(char)\n    }\n    return result\n}\n", "    var result string\n    var\
    \ space_count int\n    for _, c := range text {\n        if c == ' ' {\n     \
    \       space_count++\n            if space_count == 1 {\n                result\
    \ += \"_\"\n            } else if space_count == 2 {\n                result +=\
    \ \"_\"\n            }\n        } else {\n            space_count = 0\n      \
    \      result += string(c)\n        }\n    }\n    return result\n}\n", "    var\
    \ result string\n    var space_count int\n    for _, c := range text {\n     \
    \   if c == ' ' {\n            space_count++\n            if space_count > 2 {\n\
    \                result += \"-\"\n            } else {\n                result\
    \ += \"_\"\n            }\n        } else {\n            space_count = 0\n   \
    \         result += string(c)\n        }\n    }\n    return result\n}\n", "  \
    \  var result string\n    var prev_char byte\n    var space_count int\n    for\
    \ i := 0; i < len(text); i++ {\n        if text[i] == ' ' {\n            space_count++\n\
    \            if space_count > 2 {\n                result += \"-\"\n         \
    \       space_count = 0\n            }\n        } else {\n            if prev_char\
    \ == ' ' {\n                result += \"_\"\n            }\n            space_count\
    \ = 0\n            result += string(text[i])\n        }\n        prev_char = text[i]\n\
    \    }\n    return result\n}\n", "    var result string\n    var last_char byte\n\
    \    var space_count int\n    for _, char := range text {\n        if char ==\
    \ ' ' {\n            space_count++\n            if space_count == 1 {\n      \
    \          result += \"_\"\n            } else if space_count == 2 {\n       \
    \         result += \"_\"\n            } else {\n                result += \"\
    -\"\n            }\n        } else {\n            space_count = 0\n          \
    \  result += string(char)\n        }\n        last_char = byte(char)\n    }\n\
    \    return result\n}\n", "    var result string\n    var space_count int\n  \
    \  for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            if space_count > 2 {\n                result\
    \ += \"-\"\n            }\n            result += string(c)\n            space_count\
    \ = 0\n        }\n    }\n    return result\n}\n", "    var result string\n   \
    \ var space_count int\n    for _, c := range text {\n        if c == ' ' {\n \
    \           space_count++\n            if space_count > 2 {\n                result\
    \ += \"-\"\n            } else {\n                result += \"_\"\n          \
    \  }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, char := range text {\n        if char == ' ' {\n           \
    \ space_count++\n            if space_count == 1 {\n                result +=\
    \ \"_\"\n            } else if space_count == 2 {\n                result += \"\
    _\"\n            } else {\n                result += \"-\"\n            }\n  \
    \      } else {\n            space_count = 0\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var count\
    \ int\n    for _, char := range text {\n        if char == ' ' {\n           \
    \ count++\n            if count > 2 {\n                result += \"-\"\n     \
    \       } else {\n                result += \"_\"\n            }\n        } else\
    \ {\n            count = 0\n            result += string(char)\n        }\n  \
    \  }\n    return result\n}\n", "    // TODO: Implement me\n    return \"\"\n}\n",
  "    if len(text) == 0 {\n        return text\n    }\n    result := make([]byte,\
    \ 0, len(text))\n    count := 0\n    for i := 0; i < len(text); i++ {\n      \
    \  if text[i] == ' ' {\n            count++\n            if count == 1 {\n   \
    \             result = append(result, '_')\n            } else if count == 2 {\n\
    \                result = append(result, '_')\n            } else if count > 2\
    \ {\n                result = append(result, '-')\n            }\n        } else\
    \ {\n            count = 0\n            result = append(result, text[i])\n   \
    \     }\n    }\n    return string(result)\n}\n", "    var result string\n    var\
    \ space_count int\n    for _, char := range text {\n        if char == ' ' {\n\
    \            space_count++\n            if space_count == 1 {\n              \
    \  result += \"_\"\n            } else if space_count == 2 {\n               \
    \ result += \"_\"\n            } else {\n                result += \"-\"\n   \
    \         }\n        } else {\n            space_count = 0\n            result\
    \ += string(char)\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    var prevSpace bool\n    for _, c := range text {\n        if c ==\
    \ ' ' {\n            if prevSpace {\n                result += \"-\"\n       \
    \     } else {\n                result += \"_\"\n            }\n            prevSpace\
    \ = true\n        } else {\n            result += string(c)\n            prevSpace\
    \ = false\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    var prev_char byte\n    var space_count int\n    for _, char := range text\
    \ {\n        if char == ' ' {\n            space_count++\n            if space_count\
    \ > 2 {\n                if prev_char != '-' {\n                    result +=\
    \ \"-\"\n                }\n            } else {\n                result += \"\
    _\"\n            }\n        } else {\n            space_count = 0\n          \
    \  result += string(char)\n        }\n        prev_char = byte(char)\n    }\n\
    \    return result\n}\n", "    return \"\"\n}\n", "    var result string\n   \
    \ var space_count int\n    for _, c := range text {\n        if c == ' ' {\n \
    \           space_count++\n            if space_count == 1 {\n               \
    \ result += \"_\"\n            } else if space_count == 2 {\n                result\
    \ += \"_\"\n            }\n        } else {\n            space_count = 0\n   \
    \         result += string(c)\n        }\n    }\n    return result\n}\n", "  \
    \  var result string\n    var space_count int\n    for _, c := range text {\n\
    \        if c == ' ' {\n            space_count++\n            if space_count\
    \ == 1 {\n                result += \"_\"\n            } else if space_count ==\
    \ 2 {\n                result += \"_\"\n            }\n        } else {\n    \
    \        if space_count > 2 {\n                result += \"-\"\n            }\n\
    \            result += string(c)\n            space_count = 0\n        }\n   \
    \ }\n    return result\n}\n", "    var result string\n    var space_count int\n\
    \    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var spaceCount\
    \ int\n    for _, char := range text {\n        if char == ' ' {\n           \
    \ spaceCount++\n            if spaceCount == 1 {\n                result += \"\
    _\"\n            } else if spaceCount == 2 {\n                result += \"_\"\n\
    \            } else {\n                result += \"-\"\n            }\n      \
    \  } else {\n            spaceCount = 0\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            count++\n\
    \            if count > 2 {\n                result += \"-\"\n            } else\
    \ {\n                result += \"_\"\n            }\n        } else {\n      \
    \      result += string(c)\n            count = 0\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    var space_count int\n    for _, char\
    \ := range text {\n        if char == ' ' {\n            space_count++\n     \
    \       if space_count > 2 {\n                result += \"-\"\n            } else\
    \ {\n                result += \"_\"\n            }\n        } else {\n      \
    \      space_count = 0\n            result += string(char)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    var space_count int\n  \
    \  for i := 0; i < len(text); i++ {\n        if text[i] == ' ' {\n           \
    \ space_count++\n            if space_count > 2 {\n                result += \"\
    -\"\n                space_count = 0\n            }\n        } else {\n      \
    \      if space_count == 1 {\n                result += \"_\"\n            }\n\
    \            result += string(text[i])\n            space_count = 0\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    var spaceCount int\n\
    \    for _, c := range text {\n        if c == ' ' {\n            spaceCount++\n\
    \            if spaceCount == 2 {\n                result += \"-\"\n         \
    \   }\n        } else {\n            if spaceCount == 1 {\n                result\
    \ += \"_\"\n            }\n            result += string(c)\n            spaceCount\
    \ = 0\n        }\n    }\n    return result\n}\n", "    var result string\n   \
    \ var spaceCount int\n    for _, c := range text {\n        if c == ' ' {\n  \
    \          spaceCount++\n            if spaceCount == 1 {\n                result\
    \ += \"_\"\n            } else if spaceCount == 2 {\n                result +=\
    \ \"_\"\n            } else {\n                result += \"-\"\n            }\n\
    \        } else {\n            spaceCount = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var prev_char\
    \ byte\n    var space_count int\n    for i := 0; i < len(text); i++ {\n      \
    \  if text[i] == ' ' {\n            space_count++\n            if space_count\
    \ == 1 {\n                result += string(text[i])\n            } else if space_count\
    \ == 2 {\n                result += \"_\"\n            } else if space_count >\
    \ 2 {\n                result += \"-\"\n            }\n        } else {\n    \
    \        space_count = 0\n            result += string(text[i])\n        }\n \
    \       prev_char = text[i]\n    }\n    return result\n}\n", "    var result string\n\
    \    var space_count int\n    for _, c := range text {\n        if c == ' ' {\n\
    \            space_count++\n            if space_count > 2 {\n               \
    \ result += \"-\"\n            } else {\n                result += \"_\"\n   \
    \         }\n        } else {\n            space_count = 0\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    var space_count int\n    for _, c := range text {\n        if c == ' ' {\n\
    \            space_count += 1\n            if space_count == 1 {\n           \
    \     result += \"_\"\n            } else if space_count == 2 {\n            \
    \    result += \"_\"\n            } else {\n                result += \"-\"\n\
    \            }\n        } else {\n            space_count = 0\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    var spaceCount int\n    for i := 0; i < len(text); i++ {\n        if text[i]\
    \ == ' ' {\n            spaceCount++\n            if spaceCount == 2 {\n     \
    \           result += \"_\"\n            } else if spaceCount > 2 {\n        \
    \        result += \"-\"\n            }\n        } else {\n            spaceCount\
    \ = 0\n            result += string(text[i])\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    var space_count int\n    for _, char := range\
    \ text {\n        if char == ' ' {\n            space_count++\n            if\
    \ space_count == 2 {\n                result += \"-\"\n            }\n       \
    \ } else {\n            space_count = 0\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var prev_char\
    \ byte\n    var prev_prev_char byte\n    var count int\n    for _, char := range\
    \ text {\n        if char == ' ' {\n            count++\n            if count\
    \ > 2 {\n                if prev_char == ' ' {\n                    result = result[:len(result)-1]\n\
    \                    result += \"-\"\n                }\n            } else {\n\
    \                result += \"_\"\n            }\n        } else {\n          \
    \  result += string(char)\n            count = 0\n        }\n        prev_prev_char\
    \ = prev_char\n        prev_char = byte(char)\n    }\n    return result\n}\n",
  "    var result string\n    var space_count int\n    for _, c := range text {\n\
    \        if c == ' ' {\n            space_count++\n            if space_count\
    \ == 1 {\n                result += \"_\"\n            } else if space_count ==\
    \ 2 {\n                result += \"_\"\n            }\n        } else {\n    \
    \        if space_count > 2 {\n                result += \"-\"\n            }\n\
    \            result += string(c)\n            space_count = 0\n        }\n   \
    \ }\n    return result\n}\n", "    var result string\n    var count int\n    for\
    \ _, c := range text {\n        if c == ' ' {\n            count++\n         \
    \   if count == 1 {\n                result += \"_\"\n            } else if count\
    \ == 2 {\n                result += \"_\"\n            } else {\n            \
    \    result += \"-\"\n            }\n        } else {\n            count = 0\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var res string\n    var spaces int\n    for _, c := range text {\n       \
    \ if c == ' ' {\n            spaces++\n            if spaces == 1 {\n        \
    \        res += \"_\"\n            } else if spaces == 2 {\n                res\
    \ += \"-\"\n            }\n        } else {\n            spaces = 0\n        \
    \    res += string(c)\n        }\n    }\n    return res\n}\n", "    var result\
    \ string\n    var space_count int\n    for _, c := range text {\n        if c\
    \ == ' ' {\n            space_count++\n            if space_count == 1 {\n   \
    \             result += \"_\"\n            } else if space_count > 2 {\n     \
    \           result += \"-\"\n            }\n        } else {\n            space_count\
    \ = 0\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    var last_char byte\n    var last_last_char byte\n\
    \    for _, char := range text {\n        if char == ' ' {\n            if last_char\
    \ == ' ' {\n                if last_last_char == ' ' {\n                    result\
    \ += \"-\"\n                } else {\n                    result += \"_\"\n  \
    \              }\n            } else {\n                result += \"_\"\n    \
    \        }\n        } else {\n            result += string(char)\n        }\n\
    \        last_last_char = last_char\n        last_char = byte(char)\n    }\n \
    \   return result\n}\n", "    var result string\n    var count int\n    for _,\
    \ char := range text {\n        if char == ' ' {\n            count++\n      \
    \      if count == 1 {\n                result += \"_\"\n            } else if\
    \ count == 2 {\n                result += \"_\"\n            } else {\n      \
    \          result += \"-\"\n            }\n        } else {\n            count\
    \ = 0\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    var prev_space bool\n    var space_count int\n\
    \    for _, c := range text {\n        if c == ' ' {\n            if prev_space\
    \ {\n                space_count++\n            } else {\n                prev_space\
    \ = true\n                space_count = 1\n            }\n        } else {\n \
    \           if prev_space {\n                if space_count > 2 {\n          \
    \          result += \"-\"\n                } else {\n                    result\
    \ += \"_\"\n                }\n            }\n            prev_space = false\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var result string\n    var space_count int\n    for _, c := range text {\n\
    \        if c == ' ' {\n            space_count++\n            if space_count\
    \ > 2 {\n                result += \"-\"\n            } else {\n             \
    \   result += \"_\"\n            }\n        } else {\n            space_count\
    \ = 0\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    return \"\"\n}\n", "    var result string\n    var space_count int\n\
    \    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            count++\n\
    \            if count == 1 {\n                result += \"_\"\n            } else\
    \ if count == 2 {\n                result += \"-\"\n            }\n        } else\
    \ {\n            count = 0\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    var space_count int\n  \
    \  for _, char := range text {\n        if char == ' ' {\n            space_count++\n\
    \            if space_count > 2 {\n                result += \"-\"\n         \
    \   } else {\n                result += \"_\"\n            }\n        } else {\n\
    \            space_count = 0\n            result += string(char)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    var space_count int\n\
    \    for _, v := range text {\n        if v == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count > 2 {\n                result += \"-\"\n          \
    \  }\n        } else {\n            space_count = 0\n            result += string(v)\n\
    \        }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    var result\
    \ string\n    var prev_space bool\n    var space_count int\n    for _, c := range\
    \ text {\n        if c == ' ' {\n            if prev_space {\n               \
    \ space_count++\n            } else {\n                prev_space = true\n   \
    \             space_count = 1\n            }\n        } else {\n            if\
    \ prev_space {\n                if space_count > 2 {\n                    result\
    \ += \"-\"\n                } else {\n                    result += \"_\"\n  \
    \              }\n            }\n            prev_space = false\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    return \"\"\n\
    }\n", "    return \"\"\n}\n", "    var result string\n    var space_count int\n\
    \    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var spaceCount\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            spaceCount++\n\
    \            if spaceCount > 2 {\n                result += \"-\"\n          \
    \      spaceCount = 0\n            }\n        } else {\n            if spaceCount\
    \ > 0 {\n                result += \"_\"\n                spaceCount = 0\n   \
    \         }\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    var spaceCount int\n    for _, c := range text\
    \ {\n        if c == ' ' {\n            spaceCount++\n            if spaceCount\
    \ == 1 {\n                result += \"_\"\n            } else if spaceCount ==\
    \ 2 {\n                result += \"_\"\n            } else {\n               \
    \ result += \"-\"\n            }\n        } else {\n            spaceCount = 0\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var result string\n    var space_count int\n    for _, c := range text {\n\
    \        if c == ' ' {\n            space_count++\n            if space_count\
    \ > 2 {\n                result += \"-\"\n            } else {\n             \
    \   result += \"_\"\n            }\n        } else {\n            space_count\
    \ = 0\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    var spaceCount int\n    for _, c := range text\
    \ {\n        if c == ' ' {\n            spaceCount++\n            if spaceCount\
    \ == 2 {\n                result += \"-\"\n            }\n        } else {\n \
    \           if spaceCount == 1 {\n                result += \"_\"\n          \
    \  }\n            spaceCount = 0\n            result += string(c)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    var spaceCount int\n\
    \    for _, c := range text {\n        if c == ' ' {\n            spaceCount++\n\
    \            if spaceCount == 1 {\n                result += \"_\"\n         \
    \   } else if spaceCount == 2 {\n                result += \"_\"\n           \
    \ } else {\n                result += \"-\"\n            }\n        } else {\n\
    \            spaceCount = 0\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    var spaces int\n    for\
    \ _, c := range text {\n        if c == ' ' {\n            spaces++\n        \
    \    if spaces > 2 {\n                result += \"-\"\n            } else {\n\
    \                result += \"_\"\n            }\n        } else {\n          \
    \  spaces = 0\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    var prev_char byte\n    var count int\n    for\
    \ i := 0; i < len(text); i++ {\n        if text[i] == ' ' {\n            count++\n\
    \            if count == 2 {\n                result += \"-\"\n            }\n\
    \        } else {\n            if prev_char == ' ' {\n                result +=\
    \ \"_\"\n            }\n            result += string(text[i])\n            count\
    \ = 0\n        }\n        prev_char = text[i]\n    }\n    return result\n}\n",
  "    return \"\"\n}\n", "    var result string\n    var space_count int\n    for\
    \ _, c := range text {\n        if c == ' ' {\n            space_count++\n   \
    \         if space_count > 2 {\n                result += \"-\"\n            }\
    \ else {\n                result += \"_\"\n            }\n        } else {\n \
    \           space_count = 0\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    return \"\"\n}\n", "    var result string\n   \
    \ var space_count int\n    for _, c := range text {\n        if c == ' ' {\n \
    \           space_count++\n            if space_count == 1 {\n               \
    \ result += \"_\"\n            } else if space_count == 2 {\n                result\
    \ += \"_\"\n            }\n        } else {\n            space_count = 0\n   \
    \         result += string(c)\n        }\n    }\n    return result\n}\n", "  \
    \  var result string\n    var count int\n    for _, c := range text {\n      \
    \  if c == ' ' {\n            count++\n            if count == 1 {\n         \
    \       result += \"_\"\n            } else if count == 2 {\n                result\
    \ += \"_\"\n            } else {\n                result += \"-\"\n          \
    \  }\n        } else {\n            count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for i := 0; i < len(text); i++ {\n        if text[i] == ' ' {\n   \
    \         space_count++\n            if space_count == 2 {\n                result\
    \ += \"-\"\n            }\n        } else {\n            if space_count == 1 {\n\
    \                result += \"_\"\n            }\n            result += string(text[i])\n\
    \            space_count = 0\n        }\n    }\n    return result\n}\n", "   \
    \ var result string\n    var spaceCount int\n    for _, c := range text {\n  \
    \      if c == ' ' {\n            spaceCount++\n            if spaceCount == 2\
    \ {\n                result += \"_\"\n            } else if spaceCount > 2 {\n\
    \                result += \"-\"\n            }\n        } else {\n          \
    \  result += string(c)\n            spaceCount = 0\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    var space_count int\n    for _, char\
    \ := range text {\n        if char == ' ' {\n            space_count++\n     \
    \       if space_count == 1 {\n                result += \"_\"\n            }\
    \ else if space_count == 2 {\n                result += \"-\"\n            }\n\
    \        } else {\n            result += string(char)\n            space_count\
    \ = 0\n        }\n    }\n    return result\n}\n", "    var result string\n   \
    \ var count int\n    for _, c := range text {\n        if c == ' ' {\n       \
    \     count++\n            if count == 1 {\n                result += \"_\"\n\
    \            } else if count == 2 {\n                result += \"_\"\n       \
    \     } else {\n                result += \"-\"\n            }\n        } else\
    \ {\n            count = 0\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    var space_count int\n  \
    \  for _, char := range text {\n        if char == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count > 2 {\n                result += \"-\"\n          \
    \  }\n        } else {\n            space_count = 0\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    var result\
    \ string\n    var spaces int\n    for _, c := range text {\n        if c == '\
    \ ' {\n            spaces++\n            if spaces > 2 {\n                result\
    \ += \"-\"\n            } else {\n                result += \"_\"\n          \
    \  }\n        } else {\n            spaces = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count > 2 {\n                result += \"-\"\n         \
    \   } else {\n                result += \"_\"\n            }\n        } else {\n\
    \            space_count = 0\n            result += string(c)\n        }\n   \
    \ }\n    return result\n}\n", "    var result string\n    var count int\n    for\
    \ _, char := range text {\n        if char == ' ' {\n            count++\n   \
    \         if count == 1 {\n                result += \"_\"\n            } else\
    \ if count == 2 {\n                result += \"_\"\n            } else {\n   \
    \             result += \"-\"\n            }\n        } else {\n            result\
    \ += string(char)\n            count = 0\n        }\n    }\n    return result\n\
    }\n", "    return \"\"\n}\n", "    var result string\n    var space_count int\n\
    \    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            if space_count > 2 {\n                result\
    \ += \"-\"\n            }\n            result += string(c)\n            space_count\
    \ = 0\n        }\n    }\n    return result\n}\n", "    var result string\n   \
    \ var count int\n    for _, char := range text {\n        if char == ' ' {\n \
    \           count++\n            if count > 2 {\n                result += \"\
    -\"\n            } else {\n                result += \"_\"\n            }\n  \
    \      } else {\n            count = 0\n            result += string(char)\n \
    \       }\n    }\n    return result\n}\n", "    var result string\n    var spaceCount\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            spaceCount++\n\
    \            if spaceCount > 2 {\n                result += \"-\"\n          \
    \      spaceCount = 0\n            }\n        } else {\n            if spaceCount\
    \ > 0 {\n                result += \"_\"\n                spaceCount = 0\n   \
    \         }\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    var space_count int\n    for _, c := range text\
    \ {\n        if c == ' ' {\n            space_count++\n            if space_count\
    \ == 1 {\n                result += \"_\"\n            } else if space_count ==\
    \ 2 {\n                result += \"_\"\n            }\n        } else {\n    \
    \        space_count = 0\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    var prev_space bool\n  \
    \  var space_count int\n    for _, c := range text {\n        if c == ' ' {\n\
    \            if !prev_space {\n                space_count = 1\n             \
    \   prev_space = true\n            } else {\n                space_count++\n \
    \           }\n            if space_count == 2 {\n                result += \"\
    _\"\n            } else if space_count > 2 {\n                result += \"-\"\n\
    \            }\n        } else {\n            result += string(c)\n          \
    \  prev_space = false\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    var space_count int\n    for _, c := range text {\n        if c\
    \ == ' ' {\n            space_count++\n            if space_count > 2 {\n    \
    \            result += \"-\"\n            } else {\n                result +=\
    \ \"_\"\n            }\n        } else {\n            space_count = 0\n      \
    \      result += string(c)\n        }\n    }\n    return result\n}\n", "    var\
    \ result string\n    var count int\n    for _, c := range text {\n        if c\
    \ == ' ' {\n            count++\n            if count == 1 {\n               \
    \ result += \"_\"\n            } else if count == 2 {\n                result\
    \ += \"_\"\n            } else {\n                result += \"-\"\n          \
    \  }\n        } else {\n            count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count > 2 {\n                result += \"-\"\n         \
    \   } else {\n                result += \"_\"\n            }\n        } else {\n\
    \            space_count = 0\n            result += string(c)\n        }\n   \
    \ }\n    return result\n}\n", "    return \"\"\n}\n", "    var result string\n\
    \    var spaceCount int\n    for _, c := range text {\n        if c == ' ' {\n\
    \            spaceCount++\n            if spaceCount > 2 {\n                result\
    \ += \"-\"\n                spaceCount = 0\n            }\n        } else {\n\
    \            if spaceCount == 1 {\n                result += \"_\"\n         \
    \   }\n            result += string(c)\n            spaceCount = 0\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    var last_char byte\n\
    \    var space_count int\n    for _, char := range text {\n        if char ==\
    \ ' ' {\n            space_count++\n            if space_count > 2 {\n       \
    \         result += \"-\"\n                space_count = 0\n            }\n  \
    \      } else {\n            if last_char == ' ' {\n                result +=\
    \ \"_\"\n            }\n            result += string(char)\n            space_count\
    \ = 0\n        }\n        last_char = byte(char)\n    }\n    return result\n}\n",
  "    return \"\"\n}\n", "    return \"\"\n}\n", "    var result string\n    var\
    \ count int\n    for _, c := range text {\n        if c == ' ' {\n           \
    \ count++\n            if count == 1 {\n                result += \"_\"\n    \
    \        } else if count == 2 {\n                result += \"_\"\n           \
    \ } else {\n                result += \"-\"\n            }\n        } else {\n\
    \            count = 0\n            result += string(c)\n        }\n    }\n  \
    \  return result\n}\n", "    return \"\"\n}\n", "    var result string\n    var\
    \ spaceCount int\n    for _, char := range text {\n        if char == ' ' {\n\
    \            spaceCount++\n            if spaceCount > 2 {\n                result\
    \ += \"-\"\n                spaceCount = 0\n            }\n        } else {\n\
    \            if spaceCount == 1 {\n                result += \"_\"\n         \
    \   }\n            result += string(char)\n            spaceCount = 0\n      \
    \  }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count > 2 {\n                result += \"-\"\n          \
    \  }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var spaceCount\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            spaceCount++\n\
    \            if spaceCount > 2 {\n                result += \"-\"\n          \
    \      spaceCount = 0\n            }\n        } else {\n            if spaceCount\
    \ > 0 {\n                result += \"_\"\n                spaceCount = 0\n   \
    \         }\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    var space_count int\n    for _, c := range text\
    \ {\n        if c == ' ' {\n            space_count++\n            if space_count\
    \ == 2 {\n                result += \"-\"\n            }\n        } else {\n \
    \           space_count = 0\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    var space_count int\n  \
    \  for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count > 2 {\n                result += \"-\"\n         \
    \   } else {\n                result += \"_\"\n            }\n        } else {\n\
    \            space_count = 0\n            result += string(c)\n        }\n   \
    \ }\n    return result\n}\n", "    var result string\n    var space_count int\n\
    \    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"_\"\n         \
    \   }\n        } else {\n            if space_count > 2 {\n                result\
    \ += \"-\"\n            }\n            result += string(c)\n            space_count\
    \ = 0\n        }\n    }\n    return result\n}\n", "    var result string\n   \
    \ var prev_char byte\n    var space_count int\n    for i := 0; i < len(text);\
    \ i++ {\n        if text[i] == ' ' {\n            space_count++\n            if\
    \ space_count > 2 {\n                result += \"-\"\n                space_count\
    \ = 0\n            }\n        } else {\n            if prev_char == ' ' {\n  \
    \              result += \"_\"\n            }\n            result += string(text[i])\n\
    \            space_count = 0\n        }\n        prev_char = text[i]\n    }\n\
    \    return result\n}\n", "    var result string\n    var prev_char rune\n   \
    \ var count int = 0\n    for _, char := range text {\n        if char == ' ' {\n\
    \            if prev_char == ' ' {\n                count += 1\n            }\
    \ else {\n                count = 1\n            }\n            if count > 2 {\n\
    \                result += \"-\"\n            } else {\n                result\
    \ += \"_\"\n            }\n        } else {\n            result += string(char)\n\
    \            count = 0\n        }\n        prev_char = char\n    }\n    return\
    \ result\n}\n", "    var result string\n    var spaceCount int\n    for _, c :=\
    \ range text {\n        if c == ' ' {\n            spaceCount++\n            if\
    \ spaceCount > 2 {\n                result += \"-\"\n                spaceCount\
    \ = 0\n            }\n        } else {\n            if spaceCount > 0 {\n    \
    \            result += \"_\"\n                spaceCount = 0\n            }\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   return \"\"\n}\n", "    var result string\n    var count int\n    for _, c\
    \ := range text {\n        if c == ' ' {\n            count++\n            if\
    \ count == 1 {\n                result += \"_\"\n            } else if count ==\
    \ 2 {\n                result += \"_\"\n            } else {\n               \
    \ result += \"-\"\n            }\n        } else {\n            count = 0\n  \
    \          result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   return \"\"\n}\n", "    var result string\n    var prev_char byte = ' '\n\
    \    var prev_prev_char byte = ' '\n    for _, char := range text {\n        if\
    \ char == ' ' {\n            if prev_char == ' ' {\n                if prev_prev_char\
    \ == ' ' {\n                    result += \"-\"\n                } else {\n  \
    \                  result += \"_\"\n                }\n            } else {\n\
    \                result += \"_\"\n            }\n        } else {\n          \
    \  result += string(char)\n        }\n        prev_prev_char = prev_char\n   \
    \     prev_char = byte(char)\n    }\n    return result\n}\n", "    var result\
    \ string\n    var space_count int\n    for _, char := range text {\n        if\
    \ char == ' ' {\n            space_count++\n            if space_count > 2 {\n\
    \                result += \"-\"\n            } else {\n                result\
    \ += \"_\"\n            }\n        } else {\n            space_count = 0\n   \
    \         result += string(char)\n        }\n    }\n    return result\n}\n", " \
    \   var result string\n    var spaceCount int\n    for _, c := range text {\n\
    \        if c == ' ' {\n            spaceCount++\n            if spaceCount ==\
    \ 2 {\n                result += \"-\"\n            }\n        } else {\n    \
    \        if spaceCount > 0 {\n                result += \"_\"\n            }\n\
    \            spaceCount = 0\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    var space_count int\n  \
    \  for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count > 2 {\n                result += \"-\"\n         \
    \   } else {\n                result += \"_\"\n            }\n        } else {\n\
    \            space_count = 0\n            result += string(c)\n        }\n   \
    \ }\n    return result\n}\n", "    var result string\n    var spaceCount int\n\
    \    for _, char := range text {\n        if char == ' ' {\n            spaceCount++\n\
    \            if spaceCount == 1 {\n                result += \"_\"\n         \
    \   } else if spaceCount == 2 {\n                result += \"-\"\n           \
    \ }\n        } else {\n            spaceCount = 0\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"-\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, char := range text {\n        if char == ' ' {\n           \
    \ space_count++\n            if space_count > 2 {\n                result += \"\
    -\"\n            } else {\n                result += \"_\"\n            }\n  \
    \      } else {\n            space_count = 0\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    var space_count\
    \ int\n    for _, c := range text {\n        if c == ' ' {\n            space_count++\n\
    \            if space_count > 2 {\n                result += \"-\"\n         \
    \   } else {\n                result += \"_\"\n            }\n        } else {\n\
    \            space_count = 0\n            result += string(c)\n        }\n   \
    \ }\n    return result\n}\n", "    var result string\n    var prev_space bool\n\
    \    var space_count int\n    for _, c := range text {\n        if c == ' ' {\n\
    \            space_count++\n            if space_count > 2 {\n               \
    \ if !prev_space {\n                    result += \"-\"\n                }\n \
    \           } else {\n                result += \"_\"\n            }\n       \
    \     prev_space = true\n        } else {\n            if prev_space {\n     \
    \           space_count = 0\n            }\n            result += string(c)\n\
    \            prev_space = false\n        }\n    }\n    return result\n}\n", " \
    \   var result string\n    var space_count int\n    for _, char := range text\
    \ {\n        if char == ' ' {\n            space_count++\n            if space_count\
    \ > 2 {\n                result += \"-\"\n            } else {\n             \
    \   result += \"_\"\n            }\n        } else {\n            space_count\
    \ = 0\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    var last_char rune\n    var space_count int\n\
    \    for _, char := range text {\n        if char == ' ' {\n            space_count++\n\
    \            if space_count == 2 {\n                result += \"-\"\n        \
    \    }\n        } else {\n            if last_char == ' ' {\n                result\
    \ += \"_\"\n            }\n            result += string(char)\n            space_count\
    \ = 0\n        }\n        last_char = char\n    }\n    return result\n}\n", " \
    \   var result string\n    var space_count int\n    for _, c := range text {\n\
    \        if c == ' ' {\n            space_count++\n            if space_count\
    \ == 1 {\n                result += \"_\"\n            } else if space_count ==\
    \ 2 {\n                result += \"_\"\n            }\n        } else {\n    \
    \        space_count = 0\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

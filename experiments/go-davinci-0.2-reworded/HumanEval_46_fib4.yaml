name: HumanEval_46_fib4
language: go_test.go
prompt: "package fib4_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// The\
  \ Fib4 number sequence is a sequence similar to the Fibbonacci sequnece that's defined\
  \ as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2) -> 2\n// fib4(3) ->\
  \ 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n// Please write\
  \ a function to efficiently compute the n-th element of the fib4 number sequence.\
  \  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n// 8\n// >>> fib4(7)\n\
  // 14\nfunc fib4(n int) int {\n"
tests: "func TestFib4(t *testing.T) {\n  candidate := fib4\n\ttype test struct {\n\
  \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
  \    { actual: candidate(5), expected: 4 },\n     { actual: candidate(8), expected:\
  \ 28 },\n     { actual: candidate(10), expected: 104 },\n     { actual: candidate(12),\
  \ expected: 386 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n       \
    \ return 0\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n\
    \        return 0\n    }\n    a, b, c, d := 0, 0, 2, 0\n    for i := 4; i <= n;\
    \ i++ {\n        a, b, c, d = b, c, d, a+b+c+d\n    }\n    return d\n}\n", " \
    \   if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 0\n\
    \    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return\
    \ 0\n    }\n    a, b, c, d := 0, 0, 2, 0\n    for i := 4; i <= n; i++ {\n    \
    \    a, b, c, d = b, c, d, a+b+c+d\n    }\n    return d\n}\n", "    if n == 0\
    \ {\n        return 0\n    }\n    if n == 1 {\n        return 0\n    }\n    if\
    \ n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 0\n    }\n\
    \    a, b, c, d := 0, 0, 2, 0\n    for i := 4; i <= n; i++ {\n        a, b, c,\
    \ d = b, c, d, a+b+c+d\n    }\n    return d\n}\n", "    if n < 4 {\n        return\
    \ n\n    }\n    a, b, c, d := 0, 0, 2, 0\n    for i := 4; i <= n; i++ {\n    \
    \    a, b, c, d = b, c, d, a+b+c+d\n    }\n    return d\n}\n", "    if n == 0\
    \ {\n        return 0\n    }\n    if n == 1 {\n        return 0\n    }\n    if\
    \ n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 0\n    }\n\
    \    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n}\n", "    if n < 0\
    \ {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if\
    \ n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return 2\n    }\n\
    \    if n == 3 {\n        return 0\n    }\n    if n == 4 {\n        return 2\n\
    \    }\n    if n == 5 {\n        return 4\n    }\n    if n == 6 {\n        return\
    \ 8\n    }\n    if n == 7 {\n        return 14\n    }\n    if n == 8 {\n     \
    \   return 24\n    }\n    if n == 9 {\n        return 42\n    }\n    if n == 10\
    \ {\n        return 70\n    }\n    if n == 11 {\n        return 116\n    }\n \
    \   if n == 12 {\n        return 190\n    }\n    if n == 13 {\n        return\
    \ 310\n    }\n    if n == 14 {\n        return 504\n    }\n    if n == 15 {\n\
    \        return 818\n    }\n    if n == 16 {\n        return 1322\n    }\n   \
    \ if n == 17 {\n        return 2140\n    }\n    if n == 18 {\n        return 3458\n\
    \    }\n    if n == 19 {\n        return 5618\n    }\n    if n == 20 {\n     \
    \   return 9176\n    }\n    if n == 21 {\n        return 14890\n    }\n    if\
    \ n == 22 {\n        return 24006\n    }\n    if n == 23 {\n        return 38896\n\
    \    }\n    if n == 24 {\n        return 62990\n    }\n    if n == 25 {\n    \
    \    return 102076\n    }\n    if n == 26 {\n        return 165066\n    }\n  \
    \  if n == 27 {\n        return 267150\n    }\n    if n == 28 {\n        return\
    \ 432216\n    }\n    if n == 29 {\n        return 699366\n    }\n    if n == 30\
    \ {\n        return 1130552\n    }\n    if n == 31 {\n        return 1829708\n\
    \    }\n    if n == 32 {\n        return 2960260\n    }\n    if n == 33 {\n  \
    \     ", "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if n == 1 {\n        return 0\n    }\n    if n == 2 {\n      \
    \  return 2\n    }\n    if n == 3 {\n        return 0\n    }\n    a, b, c, d :=\
    \ 0, 0, 2, 0\n    for i := 4; i <= n; i++ {\n        a, b, c, d = b, c, d, a+b+c+d\n\
    \    }\n    return d\n}\n", "    if n < 3 {\n        return n * 2\n    }\n   \
    \ if n == 3 {\n        return 0\n    }\n    a, b, c, d := 0, 2, 0, 4\n    for\
    \ i := 4; i <= n; i++ {\n        a, b, c, d = b, c, d, a + b + c + d\n    }\n\
    \    return d\n}\n", "    if n == 0 {\n        return 0\n    } else if n == 1\
    \ {\n        return 0\n    } else if n == 2 {\n        return 2\n    } else if\
    \ n == 3 {\n        return 0\n    } else {\n        return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4)\n    }\n}\n", "    if n < 0 {\n        return 0\n  \
    \  }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ 0\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n      \
    \  return 0\n    }\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    }\n", "    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ 0\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n      \
    \  return 0\n    }\n    a := 0\n    b := 0\n    c := 2\n    d := 0\n    for i\
    \ := 4; i <= n; i++ {\n        a, b, c, d = b, c, d, a+b+c+d\n    }\n    return\
    \ d\n}\n", "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n       \
    \ return 0\n    }\n    if n == 1 {\n        return 0\n    }\n    if n == 2 {\n\
    \        return 2\n    }\n    if n == 3 {\n        return 0\n    }\n    if n ==\
    \ 4 {\n        return 4\n    }\n    a, b, c, d := 0, 0, 2, 4\n    for i := 5;\
    \ i <= n; i++ {\n        a, b, c, d = b, c, d, a+b+c+d\n    }\n    return d\n\
    }\n", "    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ 0\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n      \
    \  return 0\n    }\n    a, b, c, d := 0, 0, 2, 0\n    for i := 4; i <= n; i++\
    \ {\n        a, b, c, d = b, c, d, a+b+c+d\n    }\n    return d\n}\n", "    if\
    \ n < 4 {\n        return n\n    }\n    a, b, c, d := 0, 0, 2, 0\n    for i :=\
    \ 4; i <= n; i++ {\n        a, b, c, d = b, c, d, a+b+c+d\n    }\n    return d\n\
    }\n", "    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return\
    \ 0\n    } else if n == 2 {\n        return 2\n    } else if n == 3 {\n      \
    \  return 0\n    }\n\n    a, b, c, d := 0, 0, 2, 0\n    for i := 4; i <= n; i++\
    \ {\n        a, b, c, d = b, c, d, a + b + c + d\n    }\n    return d\n}\n", " \
    \   if n < 4 {\n        return n\n    }\n    a, b, c, d := 0, 0, 2, 0\n    for\
    \ i := 4; i <= n; i++ {\n        a, b, c, d = b, c, d, a+b+c+d\n    }\n    return\
    \ d\n}\n", "    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n      \
    \  return 0\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n\
    \        return 0\n    }\n    a, b, c, d := 0, 0, 2, 0\n    for i := 4; i <= n;\
    \ i++ {\n        a, b, c, d = b, c, d, a+b+c+d\n    }\n    return d\n}\n", " \
    \   if n < 2 {\n        return 0\n    }\n    if n == 2 {\n        return 2\n \
    \   }\n    if n == 3 {\n        return 0\n    }\n    return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4)\n}\n", "    if n == 0 {\n        return 0\n    }\n \
    \   if n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return 2\n\
    \    }\n    if n == 3 {\n        return 0\n    }\n    a, b, c, d := 0, 0, 2, 0\n\
    \    for i := 4; i <= n; i++ {\n        a, b, c, d = b, c, d, a+b+c+d\n    }\n\
    \    return d\n}\n", "    if n < 0 {\n        return 0\n    }\n    if n < 2 {\n\
    \        return n\n    }\n    if n == 2 {\n        return 2\n    }\n    if n ==\
    \ 3 {\n        return 0\n    }\n    a, b, c, d := 0, 0, 2, 0\n    for i := 4;\
    \ i <= n; i++ {\n        a, b, c, d = b, c, d, a+b+c+d\n    }\n    return d\n\
    }\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

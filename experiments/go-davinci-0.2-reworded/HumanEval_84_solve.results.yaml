language: go_test.go
name: HumanEval_84_solve
results:
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code goes here\n    return \"\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpzuck1rfn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpzuck1rfn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpzuck1rfn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpzuck1rfn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpzuck1rfn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N == 0 {\n        return \"0\"\n    }\n    var result string\n\
    \    for N > 0 {\n        result = fmt.Sprintf(\"%d%s\", N % 2, result)\n    \
    \    N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n \
    \ candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpd2af0o6h_test.go:50: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpd2af0o6h_test.go:50: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpd2af0o6h_test.go:50:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpd2af0o6h_test.go:50: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpd2af0o6h_test.go:50: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code goes here\n    return \"\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpzuck1rfn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpzuck1rfn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpzuck1rfn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpzuck1rfn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpzuck1rfn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use fmt.Println()\n    // Example: fmt.Println(\"Hello world!\"\
    )\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpdnxf1q2z_test.go:45: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpdnxf1q2z_test.go:45: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpdnxf1q2z_test.go:45:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpdnxf1q2z_test.go:45: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpdnxf1q2z_test.go:45: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code goes here\n    return \"\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpzuck1rfn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpzuck1rfn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpzuck1rfn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpzuck1rfn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpzuck1rfn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Write your code here\n    return fmt.Sprintf(\"%b\", N)\n}\n\
    \nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk0djoyfi_test.go:43: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpk0djoyfi_test.go:43: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk0djoyfi_test.go:43:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpk0djoyfi_test.go:43: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpk0djoyfi_test.go:43: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Write your code here\n    return \"\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpfe7se98o_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpfe7se98o_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpfe7se98o_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpfe7se98o_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpfe7se98o_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpronn6rwx_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpronn6rwx_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpronn6rwx_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpronn6rwx_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046

name: HumanEval_83_starts_one_ends
language: go_test.go
prompt: "package starts_one_ends_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// Given a positive integer n, return the count of the numbers of n-digit\n\
  // positive integers that start or end with 1.\nfunc starts_one_ends(n int) int\
  \ {\n"
tests: "func TestStarts_One_Ends(t *testing.T) {\n  candidate := starts_one_ends\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
  \ candidate(2), expected: 18 },\n     { actual: candidate(3), expected: 180 },\n\
  \     { actual: candidate(4), expected: 1800 },\n     { actual: candidate(5), expected:\
  \ 18000 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
  \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n       \
    \ return 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n",
  "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n\
    \    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return\
    \ 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n\
    \        return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n\
    \    if n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return\
    \ 100000000\n    }\n    if n == 10 {\n        return 1000000000\n    }\n    return\
    \ 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n      \
    \  return 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4\
    \ {\n        return 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n\
    \    if n == 6 {\n        return 100000\n    }\n    return 0\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 1\n    }\n\n    if n == 2 {\n        return 10\n    }\n\n\
    \    return 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return 2\n   \
    \ }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return 100\n\
    \    }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n       \
    \ return 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n    if n\
    \ == 7 {\n        return 1000000\n    }\n    if n == 8 {\n        return 10000000\n\
    \    }\n    if n == 9 {\n        return 100000000\n    }\n    if n == 10 {\n \
    \       return 1000000000\n    }\n    return 0\n}\n", "    if n == 1 {\n     \
    \   return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if n == 3\
    \ {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n    }\n\
    \    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n        return\
    \ 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if n == 8\
    \ {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return\
    \ 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return 2\n    }\n    if\
    \ n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n   \
    \     return 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if\
    \ n == 6 {\n        return 100000\n    }\n    if n == 7 {\n        return 1000000\n\
    \    }\n    if n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n   \
    \     return 100000000\n    }\n    if n == 10 {\n        return 1000000000\n \
    \   }\n    return 0\n}\n", "    if n == 1 {\n        return 2\n    }\n    if n\
    \ == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", " \
    \   if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n\
    \    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if\
    \ n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n\
    \    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n\
    \    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n      \
    \  return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if\
    \ n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n",
  "    if n == 1 {\n        return 1\n    }\n\n    if n == 2 {\n        return 10\n\
    \    }\n\n    return 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n\n\
    \    if n == 2 {\n        return 2\n    }\n\n    return starts_one_ends(n - 1)\
    \ + starts_one_ends(n - 2)\n}\n", "    if n == 1 {\n        return 2\n    }\n\
    \    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n\
    \    }\n    return 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n\n    if n == 2 {\n        return\
    \ 10\n    }\n\n    return 9 * starts_one_ends(n - 1)\n}\n", "    if n == 1 {\n\
    \        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n \
    \   if n == 2 {\n        return 10\n    }\n    return 9 * starts_one_ends(n -\
    \ 1)\n}\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n     \
    \   return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n   \
    \     return 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if\
    \ n == 6 {\n        return 100000\n    }\n    if n == 7 {\n        return 1000000\n\
    \    }\n    if n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n   \
    \     return 100000000\n    }\n    if n == 10 {\n        return 1000000000\n \
    \   }\n    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    if n\
    \ == 2 {\n        return 10\n    }\n    return 9 * pow(10, n - 2)\n}\n", "   \
    \ if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n  \
    \  }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n\
    \        return 100\n    }\n    if n == 4 {\n        return 1000\n    }\n    if\
    \ n == 5 {\n        return 10000\n    }\n    if n == 6 {\n        return 100000\n\
    \    }\n    if n == 7 {\n        return 1000000\n    }\n    if n == 8 {\n    \
    \    return 10000000\n    }\n    if n == 9 {\n        return 100000000\n    }\n\
    \    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n", "   \
    \ if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n  \
    \  }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n\
    \    return 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return 2\n   \
    \ }\n    if n == 2 {\n        return 4\n    }\n    if n == 3 {\n        return\
    \ 7\n    }\n    if n == 4 {\n        return 13\n    }\n    if n == 5 {\n     \
    \   return 24\n    }\n    if n == 6 {\n        return 44\n    }\n    if n == 7\
    \ {\n        return 81\n    }\n    if n == 8 {\n        return 149\n    }\n  \
    \  if n == 9 {\n        return 274\n    }\n    if n == 10 {\n        return 504\n\
    \    }\n    if n == 11 {\n        return 927\n    }\n    if n == 12 {\n      \
    \  return 1705\n    }\n    if n == 13 {\n        return 3136\n    }\n    if n\
    \ == 14 {\n        return 5768\n    }\n    if n == 15 {\n        return 10609\n\
    \    }\n    if n == 16 {\n        return 19513\n    }\n    if n == 17 {\n    \
    \    return 35890\n    }\n    if n == 18 {\n        return 66012\n    }\n    if\
    \ n == 19 {\n        return 121415\n    }\n    if n == 20 {\n        return 223317\n\
    \    }\n    if n == 21 {\n        return 410744\n    }\n    if n == 22 {\n   \
    \     return 755476\n    }\n    if n == 23 {\n        return 1389537\n    }\n\
    \    if n == 24 {\n        return 2555757\n    }\n    if n == 25 {\n        return\
    \ 4700770\n    }\n    if n == 26 {\n        return 8646064\n    }\n    if n ==\
    \ 27 {\n        return 15902591\n    }\n    if n == 28 {\n        return 29249425\n\
    \    }\n    if n == 29 {\n        return 53798080\n    }\n    if n == 30 {\n \
    \       return 98950096\n    }\n    if n == 31 {\n        return 181997601\n \
    \   }\n    if n == 32 {\n        return 334745777\n    }\n    if n == 33 {\n \
    \       return 615693474\n    }\n    if n", "    if n == 1 {\n        return 2\n\
    \    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n < 1 {\n\
    \        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n ==\
    \ 2 {\n        return 10\n    }\n    if n == 3 {\n        return 100\n    }\n\
    \    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n        return\
    \ 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n    if n == 7 {\n\
    \        return 1000000\n    }\n    if n == 8 {\n        return 10000000\n   \
    \ }\n    if n == 9 {\n        return 100000000\n    }\n    if n == 10 {\n    \
    \    return 1000000000\n    }\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n     \
    \   return 100\n    }\n    if n == 4 {\n        return 1000\n    }\n    if n ==\
    \ 5 {\n        return 10000\n    }\n    if n == 6 {\n        return 100000\n \
    \   }\n    if n == 7 {\n        return 1000000\n    }\n    if n == 8 {\n     \
    \   return 10000000\n    }\n    if n == 9 {\n        return 100000000\n    }\n\
    \    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n", "   \
    \ if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n  \
    \  }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return\
    \ 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return 2\n    }\n    return\
    \ 9 * (n - 1) + starts_one_ends(n - 1)\n}\n", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n\n    if n == 2 {\n        return\
    \ 4\n    }\n\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2)\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n\
    \        return 100\n    }\n    if n == 4 {\n        return 1000\n    }\n    if\
    \ n == 5 {\n        return 10000\n    }\n    if n == 6 {\n        return 100000\n\
    \    }\n    if n == 7 {\n        return 1000000\n    }\n    if n == 8 {\n    \
    \    return 10000000\n    }\n    if n == 9 {\n        return 100000000\n    }\n\
    \    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n", "   \
    \ if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n  \
    \  }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 1\n    }\n    if n == 2 {\n        return 11\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    return starts_one_ends(n-1) + 9 * pow(10, n-2)\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ < 1 {\n        return 0\n    }\n\n    if n == 1 {\n        return 2\n    }\n\
    \n    if n == 2 {\n        return 4\n    }\n\n    return starts_one_ends(n - 1)\
    \ + starts_one_ends(n - 2)\n}\n", "    if n == 1 {\n        return 2\n    }\n\
    \    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 10\n    }\n    if n == 2 {\n        return 55\n    }\n\
    \    if n == 3 {\n        return 220\n    }\n    if n == 4 {\n        return 715\n\
    \    }\n    if n == 5 {\n        return 2002\n    }\n    if n == 6 {\n       \
    \ return 5005\n    }\n    if n == 7 {\n        return 11440\n    }\n    if n ==\
    \ 8 {\n        return 24310\n    }\n    if n == 9 {\n        return 48620\n  \
    \  }\n    if n == 10 {\n        return 92378\n    }\n    if n == 11 {\n      \
    \  return 167960\n    }\n    if n == 12 {\n        return 293930\n    }\n    if\
    \ n == 13 {\n        return 497420\n    }\n    if n == 14 {\n        return 817190\n\
    \    }\n    if n == 15 {\n        return 1307504\n    }\n    if n == 16 {\n  \
    \      return 2042975\n    }\n    if n == 17 {\n        return 3124550\n    }\n\
    \    if n == 18 {\n        return 4686825\n    }\n    if n == 19 {\n        return\
    \ 6782270\n    }\n    if n == 20 {\n        return 9694845\n    }\n    if n ==\
    \ 21 {\n        return 13520785\n    }\n    if n == 22 {\n        return 18907485\n\
    \    }\n    if n == 23 {\n        return 26179780\n    }\n    if n == 24 {\n \
    \       return 35904265\n    }\n    if n == 25 {\n        return 48726290\n  \
    \  }\n    if n == 26 {\n        return 64570081\n    }\n    if n == 27 {\n   \
    \     return 83491376\n    }\n    if n == 28 {\n        return 106745150\n   \
    \ }\n    if n == 29 {\n        return 134945135\n    }\n    if n == 30 {\n   \
    \     return 169345204\n    }\n    if n == 31 {\n        return 211392925\n  \
    \  }\n    if n == 32 {\n        return 262359225\n    }", "    if n == 1 {\n \
    \       return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    if n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    return starts_one_ends(n-1)\
    \ + 9*(n-1)*power(10, n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n\
    \    if n == 2 {\n        return 4\n    }\n    if n == 3 {\n        return 8\n\
    \    }\n    if n == 4 {\n        return 16\n    }\n    if n == 5 {\n        return\
    \ 32\n    }\n    if n == 6 {\n        return 64\n    }\n    if n == 7 {\n    \
    \    return 128\n    }\n    if n == 8 {\n        return 256\n    }\n    if n ==\
    \ 9 {\n        return 512\n    }\n    if n == 10 {\n        return 1024\n    }\n\
    \    if n == 11 {\n        return 2048\n    }\n    if n == 12 {\n        return\
    \ 4096\n    }\n    if n == 13 {\n        return 8192\n    }\n    if n == 14 {\n\
    \        return 16384\n    }\n    if n == 15 {\n        return 32768\n    }\n\
    \    if n == 16 {\n        return 65536\n    }\n    if n == 17 {\n        return\
    \ 131072\n    }\n    if n == 18 {\n        return 262144\n    }\n    if n == 19\
    \ {\n        return 524288\n    }\n    if n == 20 {\n        return 1048576\n\
    \    }\n    if n == 21 {\n        return 2097152\n    }\n    if n == 22 {\n  \
    \      return 4194304\n    }\n    if n == 23 {\n        return 8388608\n    }\n\
    \    if n == 24 {\n        return 16777216\n    }\n    if n == 25 {\n        return\
    \ 33554432\n    }\n    if n == 26 {\n        return 67108864\n    }\n    if n\
    \ == 27 {\n        return 134217728\n    }\n    if n == 28 {\n        return 268435456\n\
    \    }\n    if n == 29 {\n        return 536870912\n    }\n    if n == 30 {\n\
    \        return 1073741824\n    }\n    if n == 31 {\n        return 2147483648\n\
    \    }\n    if n == 32 {\n        return 4294967296\n    }\n    if n == 33 {\n\
    \        return 8589934592\n    }\n", "    if n == 1 {\n        return 2\n   \
    \ }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n\n\
    \    if n == 2 {\n        return 4\n    }\n\n    return starts_one_ends(n - 1)\
    \ + starts_one_ends(n - 2)\n}\n", "    if n == 1 {\n        return 2\n    }\n\
    \    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n    return starts_one_ends(n-1) + 9 * (n-1) * power(10, n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n      \
    \  return 10\n    }\n    if n == 5 {\n        return 16\n    }\n    if n == 6\
    \ {\n        return 26\n    }\n    if n == 7 {\n        return 42\n    }\n   \
    \ if n == 8 {\n        return 68\n    }\n    if n == 9 {\n        return 110\n\
    \    }\n    if n == 10 {\n        return 178\n    }\n    if n == 11 {\n      \
    \  return 288\n    }\n    if n == 12 {\n        return 466\n    }\n    if n ==\
    \ 13 {\n        return 754\n    }\n    if n == 14 {\n        return 1220\n   \
    \ }\n    if n == 15 {\n        return 1974\n    }\n    if n == 16 {\n        return\
    \ 3194\n    }\n    if n == 17 {\n        return 5168\n    }\n    if n == 18 {\n\
    \        return 8362\n    }\n    if n == 19 {\n        return 13530\n    }\n \
    \   if n == 20 {\n        return 21892\n    }\n    if n == 21 {\n        return\
    \ 35422\n    }\n    if n == 22 {\n        return 57314\n    }\n    if n == 23\
    \ {\n        return 92736\n    }\n    if n == 24 {\n        return 150050\n  \
    \  }\n    if n == 25 {\n        return 242786\n    }\n    if n == 26 {\n     \
    \   return 392836\n    }\n    if n == 27 {\n        return 635622\n    }\n   \
    \ if n == 28 {\n        return 1028458\n    }\n    if n == 29 {\n        return\
    \ 1664080\n    }\n    if n == 30 {\n        return 2692538\n    }\n    if n ==\
    \ 31 {\n        return 4356618\n    }\n    if n == 32 {\n        return 7049156\n\
    \    }\n    if n == 33 {\n        return 11405774\n    }\n    if n == 34 {\n \
    \       return 18454930\n    }\n", "    if n == 1 {\n        return 2\n    }\n\
    \    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    if n == 3 {\n        return 7\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2) + starts_one_ends(n-3)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  // 1. n = 1, return 1\n    // 2. n = 2, return 10\n    // 3. n = 3, return\
    \ 100\n    // 4. n = 4, return 1000\n    // 5. n = 5, return 10000\n    // 6.\
    \ n = 6, return 100000\n    // 7. n = 7, return 1000000\n    // 8. n = 8, return\
    \ 10000000\n    // 9. n = 9, return 100000000\n    // 10. n = 10, return 1000000000\n\
    \    // 11. n = 11, return 10000000000\n    // 12. n = 12, return 100000000000\n\
    \    // 13. n = 13, return 1000000000000\n    // 14. n = 14, return 10000000000000\n\
    \    // 15. n = 15, return 100000000000000\n    // 16. n = 16, return 1000000000000000\n\
    \    // 17. n = 17, return 10000000000000000\n    // 18. n = 18, return 100000000000000000\n\
    \    // 19. n = 19, return 1000000000000000000\n    // 20. n = 20, return 10000000000000000000\n\
    \    // 21. n = 21, return 100000000000000000000\n    // 22. n = 22, return 1000000000000000000000\n\
    \    // 23. n = 23, return 10000000000000000000000\n    // 24. n = 24, return\
    \ 100000000000000000000000\n    // 25. n = 25, return 1000000000000000000000000\n\
    \    // 26. n = 26, return 10000000000000000000000000\n    // 27. n = 27, return\
    \ 100000000000000000000000000\n    // 28. n = 28, return 1000000000000000000000000000\n\
    \    // 29. n = 29, return 10000000000000000000000000000\n    // 30. n = 30, return\
    \ 100000000000000000000000000000\n    // 31. n = 31, return 1000000000000000000000000000000\n\
    \    // 32. n = 32, return 10000000000000000000000000000000\n    // 33. n = 33,\
    \ return 100000000000000000000000000000000\n    // 34. n = 34, return 1000000000000000000000000000000000\n\
    \    // 35. n = 35, return 10000000000000000000000000000000000\n    // 36. n =\
    \ 36, return 100000000000000000000000000000000000\n    // 37. n = 37, return 1000000000000000000000000000000000000\n\
    \    // 38. n = 38, return 10000000000000000000000000000000000000\n    // 39.\
    \ n = 39, return 100000000000000000000000000000000000000\n    // 40. n = 40,",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n\
    \    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n\
    \    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n      \
    \  return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if\
    \ n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n",
  "    if n == 1 {\n        return 2\n    }\n\n    if n == 2 {\n        return 4\n\
    \    }\n\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2)\n}\n", " \
    \   if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n\
    \    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if\
    \ n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n\
    \    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n\
    \    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n      \
    \  return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if\
    \ n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n\
    \    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n\
    \    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n      \
    \  return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if\
    \ n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    if n == 3 {\n        return 8\n \
    \   }\n    if n == 4 {\n        return 16\n    }\n    if n == 5 {\n        return\
    \ 32\n    }\n    if n == 6 {\n        return 64\n    }\n    if n == 7 {\n    \
    \    return 128\n    }\n    if n == 8 {\n        return 256\n    }\n    if n ==\
    \ 9 {\n        return 512\n    }\n    if n == 10 {\n        return 1024\n    }\n\
    \    if n == 11 {\n        return 2048\n    }\n    if n == 12 {\n        return\
    \ 4096\n    }\n    if n == 13 {\n        return 8192\n    }\n    if n == 14 {\n\
    \        return 16384\n    }\n    if n == 15 {\n        return 32768\n    }\n\
    \    if n == 16 {\n        return 65536\n    }\n    if n == 17 {\n        return\
    \ 131072\n    }\n    if n == 18 {\n        return 262144\n    }\n    if n == 19\
    \ {\n        return 524288\n    }\n    if n == 20 {\n        return 1048576\n\
    \    }\n    if n == 21 {\n        return 2097152\n    }\n    if n == 22 {\n  \
    \      return 4194304\n    }\n    if n == 23 {\n        return 8388608\n    }\n\
    \    if n == 24 {\n        return 16777216\n    }\n    if n == 25 {\n        return\
    \ 33554432\n    }\n    if n == 26 {\n        return 67108864\n    }\n    if n\
    \ == 27 {\n        return 134217728\n    }\n    if n == 28 {\n        return 268435456\n\
    \    }\n    if n == 29 {\n        return 536870912\n    }\n    if n == 30 {\n\
    \        return 1073741824\n    }\n    if n == 31 {\n        return 2147483648\n\
    \    }\n    if n == 32 {\n        return 4294967296\n    }\n    if n == 33 {\n\
    \        return 8589934592\n    }\n", "    if n == 1 {\n        return 1\n   \
    \ }\n    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return\
    \ 100\n    }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n \
    \       return 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n \
    \   if n == 7 {\n        return 1000000\n    }\n    if n == 8 {\n        return\
    \ 10000000\n    }\n    if n == 9 {\n        return 100000000\n    }\n    if n\
    \ == 10 {\n        return 1000000000\n    }\n    return 0\n}\n", "    if n ==\
    \ 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n   \
    \ return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n\
    \        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    var count int\n\
    \    count = 9\n    for i := 1; i < n - 1; i++ {\n        count *= 10\n    }\n\
    \    count *= 2\n    return count\n}\n", "    if n == 1 {\n        return 2\n\
    \    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return 100\n\
    \    }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n       \
    \ return 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n    if n\
    \ == 7 {\n        return 1000000\n    }\n    if n == 8 {\n        return 10000000\n\
    \    }\n    if n == 9 {\n        return 100000000\n    }\n    if n == 10 {\n \
    \       return 1000000000\n    }\n    return 0\n}\n", "    if n == 1 {\n     \
    \   return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    if n == 3 {\n\
    \        return 6\n    }\n    if n == 4 {\n        return 10\n    }\n    if n\
    \ == 5 {\n        return 16\n    }\n    if n == 6 {\n        return 26\n    }\n\
    \    if n == 7 {\n        return 42\n    }\n    if n == 8 {\n        return 68\n\
    \    }\n    if n == 9 {\n        return 110\n    }\n    if n == 10 {\n       \
    \ return 178\n    }\n    if n == 11 {\n        return 288\n    }\n    if n ==\
    \ 12 {\n        return 466\n    }\n    if n == 13 {\n        return 754\n    }\n\
    \    if n == 14 {\n        return 1220\n    }\n    if n == 15 {\n        return\
    \ 1974\n    }\n    if n == 16 {\n        return 3194\n    }\n    if n == 17 {\n\
    \        return 5168\n    }\n    if n == 18 {\n        return 8362\n    }\n  \
    \  if n == 19 {\n        return 13530\n    }\n    if n == 20 {\n        return\
    \ 21892\n    }\n    if n == 21 {\n        return 35422\n    }\n    if n == 22\
    \ {\n        return 57314\n    }\n    if n == 23 {\n        return 92736\n   \
    \ }\n    if n == 24 {\n        return 150050\n    }\n    if n == 25 {\n      \
    \  return 242786\n    }\n    if n == 26 {\n        return 392836\n    }\n    if\
    \ n == 27 {\n        return 635622\n    }\n    if n == 28 {\n        return 1028458\n\
    \    }\n    if n == 29 {\n        return 1664080\n    }\n    if n == 30 {\n  \
    \      return 2692538\n    }\n    if n == 31 {\n        return 4356618\n    }\n\
    \    if n == 32 {\n        return 7049156\n    }\n    if n == 33 {\n        return\
    \ 11405774\n    }\n    if n == 34 {\n        return 18454930\n    }\n", "    if\
    \ n == 1 {\n        return 10\n    }\n\n    if n == 2 {\n        return 55\n \
    \   }\n\n    if n == 3 {\n        return 220\n    }\n\n    if n == 4 {\n     \
    \   return 715\n    }\n\n    if n == 5 {\n        return 2002\n    }\n\n    if\
    \ n == 6 {\n        return 5005\n    }\n\n    if n == 7 {\n        return 11440\n\
    \    }\n\n    if n == 8 {\n        return 24310\n    }\n\n    if n == 9 {\n  \
    \      return 48620\n    }\n\n    if n == 10 {\n        return 92378\n    }\n\n\
    \    if n == 11 {\n        return 167960\n    }\n\n    if n == 12 {\n        return\
    \ 293930\n    }\n\n    if n == 13 {\n        return 497420\n    }\n\n    if n\
    \ == 14 {\n        return 817190\n    }\n\n    if n == 15 {\n        return 1307504\n\
    \    }\n\n    if n == 16 {\n        return 2042975\n    }\n\n    if n == 17 {\n\
    \        return 3124550\n    }\n\n    if n == 18 {\n        return 4686825\n \
    \   }\n\n    if n == 19 {\n        return 6782220\n    }\n\n    if n == 20 {\n\
    \        return 9657700\n    }\n\n    if n == 21 {\n        return 13306110\n\
    \    }\n\n    if n == 22 {\n        return 18454930\n    }\n\n    if n == 23 {\n\
    \        return 24667544\n    }\n\n    if n == 24 {\n        return 32907100\n\
    \    }\n\n    if n == 25 {\n        return 43566600\n    }\n\n    if n == 26 {\n\
    \        return 57289000\n    }\n\n    if n == 27 {\n        return 74974100\n\
    \    }\n\n    if n == 28 {\n        return 96845300\n    }\n\n    if n == 29 {\n\
    \        return 123393344\n    }\n\n    if n == 30 {\n        return 156461300\n\
    \    }\n\n    if n == 31 {\n        return 197129200\n    }\n\n    if n == 32\
    \ {\n        return 246675200\n    }\n\n", "    if n == 1 {\n        return 2\n\
    \    }\n    if n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    if n == 3 {\n        return 8\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n\n    if n == 2 {\n        return 4\n\
    \    }\n\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2)\n}\n", " \
    \   if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n\
    \    }\n    return 9 * power(10, n - 2)\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return 9 * (int(math.Pow10(n\
    \ - 1)) - int(math.Pow10(n - 2)))\n}\n", "    if n == 1 {\n        return 1\n\
    \    }\n    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return\
    \ 100\n    }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n \
    \       return 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n \
    \   if n == 7 {\n        return 1000000\n    }\n    if n == 8 {\n        return\
    \ 10000000\n    }\n    if n == 9 {\n        return 100000000\n    }\n    if n\
    \ == 10 {\n        return 1000000000\n    }\n    return 0\n}\n", "    if n ==\
    \ 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n   \
    \ if n == 3 {\n        return 8\n    }\n    if n == 4 {\n        return 16\n \
    \   }\n    if n == 5 {\n        return 32\n    }\n    if n == 6 {\n        return\
    \ 64\n    }\n    if n == 7 {\n        return 128\n    }\n    if n == 8 {\n   \
    \     return 256\n    }\n    if n == 9 {\n        return 512\n    }\n    if n\
    \ == 10 {\n        return 1024\n    }\n    if n == 11 {\n        return 2048\n\
    \    }\n    if n == 12 {\n        return 4096\n    }\n    if n == 13 {\n     \
    \   return 8192\n    }\n    if n == 14 {\n        return 16384\n    }\n    if\
    \ n == 15 {\n        return 32768\n    }\n    if n == 16 {\n        return 65536\n\
    \    }\n    if n == 17 {\n        return 131072\n    }\n    if n == 18 {\n   \
    \     return 262144\n    }\n    if n == 19 {\n        return 524288\n    }\n \
    \   if n == 20 {\n        return 1048576\n    }\n    if n == 21 {\n        return\
    \ 2097152\n    }\n    if n == 22 {\n        return 4194304\n    }\n    if n ==\
    \ 23 {\n        return 8388608\n    }\n    if n == 24 {\n        return 16777216\n\
    \    }\n    if n == 25 {\n        return 33554432\n    }\n    if n == 26 {\n \
    \       return 67108864\n    }\n    if n == 27 {\n        return 134217728\n \
    \   }\n    if n == 28 {\n        return 268435456\n    }\n    if n == 29 {\n \
    \       return 536870912\n    }\n    if n == 30 {\n        return 1073741824\n\
    \    }\n    if n == 31 {\n        return 2147483648\n    }\n    if n == 32 {\n\
    \        return 4294967296\n    }\n    if n == 33 {\n        return 8589934592\n\
    \    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n      \
    \  return 10\n    }\n    if n == 3 {\n        return 100\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n \
    \   }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n        return\
    \ 8\n    }\n    if n == 5 {\n        return 13\n    }\n    if n == 6 {\n     \
    \   return 21\n    }\n    if n == 7 {\n        return 34\n    }\n    if n == 8\
    \ {\n        return 55\n    }\n    if n == 9 {\n        return 89\n    }\n   \
    \ if n == 10 {\n        return 144\n    }\n    if n == 11 {\n        return 233\n\
    \    }\n    if n == 12 {\n        return 377\n    }\n    if n == 13 {\n      \
    \  return 610\n    }\n    if n == 14 {\n        return 987\n    }\n    if n ==\
    \ 15 {\n        return 1597\n    }\n    if n == 16 {\n        return 2584\n  \
    \  }\n    if n == 17 {\n        return 4181\n    }\n    if n == 18 {\n       \
    \ return 6765\n    }\n    if n == 19 {\n        return 10946\n    }\n    if n\
    \ == 20 {\n        return 17711\n    }\n    if n == 21 {\n        return 28657\n\
    \    }\n    if n == 22 {\n        return 46368\n    }\n    if n == 23 {\n    \
    \    return 75025\n    }\n    if n == 24 {\n        return 121393\n    }\n   \
    \ if n == 25 {\n        return 196418\n    }\n    if n == 26 {\n        return\
    \ 317811\n    }\n    if n == 27 {\n        return 514229\n    }\n    if n == 28\
    \ {\n        return 832040\n    }\n    if n == 29 {\n        return 1346269\n\
    \    }\n    if n == 30 {\n        return 2178309\n    }\n    if n == 31 {\n  \
    \      return 3524578\n    }\n    if n == 32 {\n        return 5702887\n    }\n\
    \    if n == 33 {\n        return 9227465\n    }\n    if n == 34 {\n        return\
    \ 14930352\n    }\n    if n", "    if n == 1 {\n        return 2\n    }\n    if\
    \ n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if\
    \ n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n\
    \    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n      \
    \  return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if\
    \ n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    if n == 11 {\n\
    \        return 10000000000\n    }\n    if n == 12 {\n        return 100000000000\n\
    \    }\n    if n == 13 {\n        return 1000000000000\n    }\n    if n == 14\
    \ {\n        return 10000000000000\n    }\n    if n == 15 {\n        return 100000000000000\n\
    \    }\n    if n == 16 {\n        return 1000000000000000\n    }\n    if n ==\
    \ 17 {\n        return 10000000000000000\n    }\n    if n == 18 {\n        return\
    \ 100000000000000000\n    }\n    if n == 19 {\n        return 1000000000000000000\n\
    \    }\n    if n == 20 {\n        return 10000000000000000000\n    }\n    if n\
    \ == 21 {\n        return 100000000000000000000\n    }\n    if n == 22 {\n   \
    \     return 1000000000000000000000\n    }\n    if n == 23 {\n        return 10000000000000000000000\n\
    \    }\n    if n == 24 {\n        return 100000000000000000000000\n    }\n   \
    \ if n == 25 {\n        return 1000000000000000000000000\n    }\n    if n == 26\
    \ {\n        return 10000000000000000000000000\n    }\n    if n == 27 {\n    \
    \    return 100000000000000000000000000\n    }\n    if n == 28 {\n        return\
    \ 1000000000000000000000000000\n    }\n    if n == 29 {\n        return 10000000000000000000000000000\n\
    \    }\n    if n == 30 {\n        return 100000000000000000000000000000\n    }\n\
    \    if n == 31 {\n        return 1000000000000000000000000000000\n    }\n   \
    \ if n == 32 {\n        return 10000000000000000000000000000000\n    }\n    if\
    \ n == 33 {\n        return 100", "    if n == 1 {\n        return 1\n    }\n\n\
    \    // The number of n-digit positive integers that start with 1 is\n    // 10^(n-1).\n\
    \    //\n    // The number of n-digit positive integers that end with 1 is\n \
    \   // 9 * 10^(n-2).\n    //\n    // The number of n-digit positive integers that\
    \ start or end with 1 is\n    // 10^(n-1) + 9 * 10^(n-2).\n    return int(math.Pow10(n-1))\
    \ + 9 * int(math.Pow10(n-2))\n}\n", "    if n == 1 {\n        return 1\n    }\n\
    \n    if n == 2 {\n        return 10\n    }\n\n    return starts_one_ends(n -\
    \ 1) + starts_one_ends(n - 2)\n}\n", "    if n == 1 {\n        return 2\n    }\n\
    \n    if n == 2 {\n        return 4\n    }\n\n    return starts_one_ends(n - 1)\
    \ + starts_one_ends(n - 2)\n}\n", "    if n == 1 {\n        return 2\n    }\n\
    \    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 2\n    }\n    if n == 3 {\n        return 4\n    }\n    if n == 4 {\n      \
    \  return 8\n    }\n    if n == 5 {\n        return 16\n    }\n    if n == 6 {\n\
    \        return 32\n    }\n    if n == 7 {\n        return 64\n    }\n    if n\
    \ == 8 {\n        return 128\n    }\n    if n == 9 {\n        return 256\n   \
    \ }\n    if n == 10 {\n        return 512\n    }\n    if n == 11 {\n        return\
    \ 1024\n    }\n    if n == 12 {\n        return 2048\n    }\n    if n == 13 {\n\
    \        return 4096\n    }\n    if n == 14 {\n        return 8192\n    }\n  \
    \  if n == 15 {\n        return 16384\n    }\n    if n == 16 {\n        return\
    \ 32768\n    }\n    if n == 17 {\n        return 65536\n    }\n    if n == 18\
    \ {\n        return 131072\n    }\n    if n == 19 {\n        return 262144\n \
    \   }\n    if n == 20 {\n        return 524288\n    }\n    if n == 21 {\n    \
    \    return 1048576\n    }\n    if n == 22 {\n        return 2097152\n    }\n\
    \    if n == 23 {\n        return 4194304\n    }\n    if n == 24 {\n        return\
    \ 8388608\n    }\n    if n == 25 {\n        return 16777216\n    }\n    if n ==\
    \ 26 {\n        return 33554432\n    }\n    if n == 27 {\n        return 67108864\n\
    \    }\n    if n == 28 {\n        return 134217728\n    }\n    if n == 29 {\n\
    \        return 268435456\n    }\n    if n == 30 {\n        return 536870912\n\
    \    }\n    if n == 31 {\n        return 1073741824\n    }\n    if n == 32 {\n\
    \        return 2147483648\n    }\n    if n == 33 {\n        return 4294967296\n\
    \    }\n    if n ==", "    if n == 1 {\n        return 1\n    }\n    if n == 2\
    \ {\n        return 10\n    }\n    return 9 * pow(10, n - 2)\n}\n", "    if n\
    \ == 1 {\n        return 10\n    }\n    if n == 2 {\n        return 55\n    }\n\
    \    if n == 3 {\n        return 220\n    }\n    if n == 4 {\n        return 715\n\
    \    }\n    if n == 5 {\n        return 2002\n    }\n    if n == 6 {\n       \
    \ return 5005\n    }\n    if n == 7 {\n        return 11440\n    }\n    if n ==\
    \ 8 {\n        return 24310\n    }\n    if n == 9 {\n        return 48620\n  \
    \  }\n    if n == 10 {\n        return 92378\n    }\n    if n == 11 {\n      \
    \  return 167960\n    }\n    if n == 12 {\n        return 293930\n    }\n    if\
    \ n == 13 {\n        return 497420\n    }\n    if n == 14 {\n        return 817190\n\
    \    }\n    if n == 15 {\n        return 1307504\n    }\n    if n == 16 {\n  \
    \      return 2042975\n    }\n    if n == 17 {\n        return 3124550\n    }\n\
    \    if n == 18 {\n        return 4686825\n    }\n    if n == 19 {\n        return\
    \ 6782270\n    }\n    if n == 20 {\n        return 9657700\n    }\n    if n ==\
    \ 21 {\n        return 13356670\n    }\n    if n == 22 {\n        return 18053360\n\
    \    }\n    if n == 23 {\n        return 23667540\n    }\n    if n == 24 {\n \
    \       return 30471860\n    }\n    if n == 25 {\n        return 38150125\n  \
    \  }\n    if n == 26 {\n        return 46845176\n    }\n    if n == 27 {\n   \
    \     return 56535300\n    }\n    if n == 28 {\n        return 67282756\n    }\n\
    \    if n == 29 {\n        return 79058535\n    }\n    if n == 30 {\n        return\
    \ 91939120\n    }\n    if n == 31 {\n        return 105931130\n    }\n    if n\
    \ == 32 {\n        return 121035276", "    if n == 1 {\n        return 1\n   \
    \ }\n    if n == 2 {\n        return 10\n    }\n    return 9 * pow(10, n - 2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    return 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 4\n    }\n    if n == 3 {\n      \
    \  return 7\n    }\n    if n == 4 {\n        return 13\n    }\n    if n == 5 {\n\
    \        return 24\n    }\n    if n == 6 {\n        return 44\n    }\n    if n\
    \ == 7 {\n        return 81\n    }\n    if n == 8 {\n        return 149\n    }\n\
    \    if n == 9 {\n        return 274\n    }\n    if n == 10 {\n        return\
    \ 504\n    }\n    if n == 11 {\n        return 927\n    }\n    if n == 12 {\n\
    \        return 1705\n    }\n    if n == 13 {\n        return 3136\n    }\n  \
    \  if n == 14 {\n        return 5768\n    }\n    if n == 15 {\n        return\
    \ 10609\n    }\n    if n == 16 {\n        return 19513\n    }\n    if n == 17\
    \ {\n        return 35890\n    }\n    if n == 18 {\n        return 66012\n   \
    \ }\n    if n == 19 {\n        return 121415\n    }\n    if n == 20 {\n      \
    \  return 223317\n    }\n    if n == 21 {\n        return 410744\n    }\n    if\
    \ n == 22 {\n        return 755476\n    }\n    if n == 23 {\n        return 1389537\n\
    \    }\n    if n == 24 {\n        return 2555757\n    }\n    if n == 25 {\n  \
    \      return 4700770\n    }\n    if n == 26 {\n        return 8646064\n    }\n\
    \    if n == 27 {\n        return 15902591\n    }\n    if n == 28 {\n        return\
    \ 29249425\n    }\n    if n == 29 {\n        return 53798080\n    }\n    if n\
    \ == 30 {\n        return 98950096\n    }\n    if n == 31 {\n        return 181997601\n\
    \    }\n    if n == 32 {\n        return 334745777\n    }\n    if n == 33 {\n\
    \        return 615693474\n    }\n    if n", "    if n == 1 {\n        return\
    \ 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n     \
    \   return 100\n    }\n    if n == 4 {\n        return 1000\n    }\n    if n ==\
    \ 5 {\n        return 10000\n    }\n    if n == 6 {\n        return 100000\n \
    \   }\n    if n == 7 {\n        return 1000000\n    }\n    if n == 8 {\n     \
    \   return 10000000\n    }\n    if n == 9 {\n        return 100000000\n    }\n\
    \    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n", "   \
    \ if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n \
    \   }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return\
    \ 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n\
    \        return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n\
    \    if n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return\
    \ 100000000\n    }\n    if n == 10 {\n        return 1000000000\n    }\n    return\
    \ 0\n}\n", "    if n == 1 {\n        return 2\n    }\n\n    if n == 2 {\n    \
    \    return 4\n    }\n\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2)\n}\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n   \
    \     return 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if n ==\
    \ 4 {\n        return 1000\n    }\n    if n == 5 {\n        return 10000\n   \
    \ }\n    if n == 6 {\n        return 100000\n    }\n    if n == 7 {\n        return\
    \ 1000000\n    }\n    if n == 8 {\n        return 10000000\n    }\n    if n ==\
    \ 9 {\n        return 100000000\n    }\n    if n == 10 {\n        return 1000000000\n\
    \    }\n    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    if\
    \ n == 2 {\n        return 10\n    }\n    return 9 * pow(10, n - 2)\n}\n", " \
    \   if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n\
    \    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if\
    \ n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 11\n    }\n    if n == 3 {\n        return 111\n\
    \    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if\
    \ n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return\
    \ 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return 2\n    }\n    if\
    \ n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n\
    \    }\n    return 9 * starts_one_ends(n - 1)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    return 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    if n == 3 {\n        return 7\n    }\n    if n == 4 {\n      \
    \  return 13\n    }\n    if n == 5 {\n        return 24\n    }\n    if n == 6\
    \ {\n        return 44\n    }\n    if n == 7 {\n        return 81\n    }\n   \
    \ if n == 8 {\n        return 149\n    }\n    if n == 9 {\n        return 274\n\
    \    }\n    if n == 10 {\n        return 504\n    }\n    if n == 11 {\n      \
    \  return 927\n    }\n    if n == 12 {\n        return 1705\n    }\n    if n ==\
    \ 13 {\n        return 3136\n    }\n    if n == 14 {\n        return 5768\n  \
    \  }\n    if n == 15 {\n        return 10609\n    }\n    if n == 16 {\n      \
    \  return 19513\n    }\n    if n == 17 {\n        return 35890\n    }\n    if\
    \ n == 18 {\n        return 66012\n    }\n    if n == 19 {\n        return 121415\n\
    \    }\n    if n == 20 {\n        return 223317\n    }\n    if n == 21 {\n   \
    \     return 410744\n    }\n    if n == 22 {\n        return 755476\n    }\n \
    \   if n == 23 {\n        return 1389537\n    }\n    if n == 24 {\n        return\
    \ 2555757\n    }\n    if n == 25 {\n        return 4700770\n    }\n    if n ==\
    \ 26 {\n        return 8646064\n    }\n    if n == 27 {\n        return 15902591\n\
    \    }\n    if n == 28 {\n        return 29249425\n    }\n    if n == 29 {\n \
    \       return 53798080\n    }\n    if n == 30 {\n        return 98950096\n  \
    \  }\n    if n == 31 {\n        return 181997601\n    }\n    if n == 32 {\n  \
    \      return 334745777\n    }\n    if n == 33 {\n        return 615693474\n \
    \   }\n    if n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n\
    \        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    if n == 3 {\n        return 8\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    return 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    if n == 3 {\n        return 8\n    }\n    if n == 4 {\n        return\
    \ 16\n    }\n    if n == 5 {\n        return 32\n    }\n    if n == 6 {\n    \
    \    return 64\n    }\n    if n == 7 {\n        return 128\n    }\n    if n ==\
    \ 8 {\n        return 256\n    }\n    if n == 9 {\n        return 512\n    }\n\
    \    if n == 10 {\n        return 1024\n    }\n    if n == 11 {\n        return\
    \ 2048\n    }\n    if n == 12 {\n        return 4096\n    }\n    if n == 13 {\n\
    \        return 8192\n    }\n    if n == 14 {\n        return 16384\n    }\n \
    \   if n == 15 {\n        return 32768\n    }\n    if n == 16 {\n        return\
    \ 65536\n    }\n    if n == 17 {\n        return 131072\n    }\n    if n == 18\
    \ {\n        return 262144\n    }\n    if n == 19 {\n        return 524288\n \
    \   }\n    if n == 20 {\n        return 1048576\n    }\n    if n == 21 {\n   \
    \     return 2097152\n    }\n    if n == 22 {\n        return 4194304\n    }\n\
    \    if n == 23 {\n        return 8388608\n    }\n    if n == 24 {\n        return\
    \ 16777216\n    }\n    if n == 25 {\n        return 33554432\n    }\n    if n\
    \ == 26 {\n        return 67108864\n    }\n    if n == 27 {\n        return 134217728\n\
    \    }\n    if n == 28 {\n        return 268435456\n    }\n    if n == 29 {\n\
    \        return 536870912\n    }\n    if n == 30 {\n        return 1073741824\n\
    \    }\n    if n == 31 {\n        return 2147483648\n    }\n    if n == 32 {\n\
    \        return 4294967296\n    }\n    if n == 33 {\n        return 8589934592\n\
    \    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n      \
    \  return 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n\
    \        return 100\n    }\n    if n == 4 {\n        return 1000\n    }\n    if\
    \ n == 5 {\n        return 10000\n    }\n    if n == 6 {\n        return 100000\n\
    \    }\n    if n == 7 {\n        return 1000000\n    }\n    if n == 8 {\n    \
    \    return 10000000\n    }\n    if n == 9 {\n        return 100000000\n    }\n\
    \    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n", "   \
    \ if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n  \
    \  }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    if n == 3 {\n        return 7\n    }\n    if n == 4 {\n        return 13\n\
    \    }\n    if n == 5 {\n        return 24\n    }\n    if n == 6 {\n        return\
    \ 44\n    }\n    if n == 7 {\n        return 81\n    }\n    if n == 8 {\n    \
    \    return 149\n    }\n    if n == 9 {\n        return 274\n    }\n    if n ==\
    \ 10 {\n        return 504\n    }\n    if n == 11 {\n        return 927\n    }\n\
    \    if n == 12 {\n        return 1705\n    }\n    if n == 13 {\n        return\
    \ 3136\n    }\n    if n == 14 {\n        return 5768\n    }\n    if n == 15 {\n\
    \        return 10609\n    }\n    if n == 16 {\n        return 19513\n    }\n\
    \    if n == 17 {\n        return 35890\n    }\n    if n == 18 {\n        return\
    \ 66012\n    }\n    if n == 19 {\n        return 121415\n    }\n    if n == 20\
    \ {\n        return 223317\n    }\n    if n == 21 {\n        return 410744\n \
    \   }\n    if n == 22 {\n        return 755476\n    }\n    if n == 23 {\n    \
    \    return 1389537\n    }\n    if n == 24 {\n        return 2555757\n    }\n\
    \    if n == 25 {\n        return 4700770\n    }\n    if n == 26 {\n        return\
    \ 8646064\n    }\n    if n == 27 {\n        return 15902591\n    }\n    if n ==\
    \ 28 {\n        return 29249425\n    }\n    if n == 29 {\n        return 53798080\n\
    \    }\n    if n == 30 {\n        return 98950096\n    }\n    if n == 31 {\n \
    \       return 181997601\n    }\n    if n == 32 {\n        return 334745777\n\
    \    }\n    if n == 33 {\n        return 615693474\n    }\n    if n", "    if\
    \ n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n\
    \    if n == 3 {\n        return 4\n    }\n    if n == 4 {\n        return 7\n\
    \    }\n    if n == 5 {\n        return 13\n    }\n    if n == 6 {\n        return\
    \ 24\n    }\n    if n == 7 {\n        return 44\n    }\n    if n == 8 {\n    \
    \    return 81\n    }\n    if n == 9 {\n        return 149\n    }\n    if n ==\
    \ 10 {\n        return 274\n    }\n    if n == 11 {\n        return 504\n    }\n\
    \    if n == 12 {\n        return 927\n    }\n    if n == 13 {\n        return\
    \ 1705\n    }\n    if n == 14 {\n        return 3136\n    }\n    if n == 15 {\n\
    \        return 5768\n    }\n    if n == 16 {\n        return 10609\n    }\n \
    \   if n == 17 {\n        return 19513\n    }\n    if n == 18 {\n        return\
    \ 35890\n    }\n    if n == 19 {\n        return 66012\n    }\n    if n == 20\
    \ {\n        return 121415\n    }\n    if n == 21 {\n        return 223317\n \
    \   }\n    if n == 22 {\n        return 410744\n    }\n    if n == 23 {\n    \
    \    return 755476\n    }\n    if n == 24 {\n        return 1389537\n    }\n \
    \   if n == 25 {\n        return 2555757\n    }\n    if n == 26 {\n        return\
    \ 4700770\n    }\n    if n == 27 {\n        return 8646064\n    }\n    if n ==\
    \ 28 {\n        return 15902591\n    }\n    if n == 29 {\n        return 29249425\n\
    \    }\n    if n == 30 {\n        return 53798080\n    }\n    if n == 31 {\n \
    \       return 98950096\n    }\n    if n == 32 {\n        return 181997601\n \
    \   }\n    if n == 33 {\n        return 334745777\n    }\n    if n == 34 {\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    if n == 3 {\n        return 8\n    }\n    if n == 4 {\n        return\
    \ 16\n    }\n    if n == 5 {\n        return 32\n    }\n    if n == 6 {\n    \
    \    return 64\n    }\n    if n == 7 {\n        return 128\n    }\n    if n ==\
    \ 8 {\n        return 256\n    }\n    if n == 9 {\n        return 512\n    }\n\
    \    if n == 10 {\n        return 1024\n    }\n    if n == 11 {\n        return\
    \ 2048\n    }\n    if n == 12 {\n        return 4096\n    }\n    if n == 13 {\n\
    \        return 8192\n    }\n    if n == 14 {\n        return 16384\n    }\n \
    \   if n == 15 {\n        return 32768\n    }\n    if n == 16 {\n        return\
    \ 65536\n    }\n    if n == 17 {\n        return 131072\n    }\n    if n == 18\
    \ {\n        return 262144\n    }\n    if n == 19 {\n        return 524288\n \
    \   }\n    if n == 20 {\n        return 1048576\n    }\n    if n == 21 {\n   \
    \     return 2097152\n    }\n    if n == 22 {\n        return 4194304\n    }\n\
    \    if n == 23 {\n        return 8388608\n    }\n    if n == 24 {\n        return\
    \ 16777216\n    }\n    if n == 25 {\n        return 33554432\n    }\n    if n\
    \ == 26 {\n        return 67108864\n    }\n    if n == 27 {\n        return 134217728\n\
    \    }\n    if n == 28 {\n        return 268435456\n    }\n    if n == 29 {\n\
    \        return 536870912\n    }\n    if n == 30 {\n        return 1073741824\n\
    \    }\n    if n == 31 {\n        return 2147483648\n    }\n    if n == 32 {\n\
    \        return 4294967296\n    }\n    if n == 33 {\n        return 8589934592\n\
    \    }\n", "    if n == 1 {\n        return 1\n    }\n\n    if n == 2 {\n    \
    \    return 10\n    }\n\n    if n == 3 {\n        return 100\n    }\n\n    if\
    \ n == 4 {\n        return 1000\n    }\n\n    if n == 5 {\n        return 10000\n\
    \    }\n\n    if n == 6 {\n        return 100000\n    }\n\n    if n == 7 {\n \
    \       return 1000000\n    }\n\n    if n == 8 {\n        return 10000000\n  \
    \  }\n\n    if n == 9 {\n        return 100000000\n    }\n\n    if n == 10 {\n\
    \        return 1000000000\n    }\n\n    return 0\n}\n", "    if n == 1 {\n  \
    \      return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if n ==\
    \ 3 {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n    }\n\
    \    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n        return\
    \ 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if n == 8\
    \ {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n\n    if n == 2 {\n        return 10\n    }\n\
    \n    return starts_one_ends(n - 1) + starts_one_ends(n - 2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n\
    \    if n == 3 {\n        return 5\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    if n == 3 {\n        return 10\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    return 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    if n == 3 {\n        return 8\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return\
    \ 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return 2\n    }\n    if\
    \ n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n   \
    \     return 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if\
    \ n == 6 {\n        return 100000\n    }\n    if n == 7 {\n        return 1000000\n\
    \    }\n    if n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n   \
    \     return 100000000\n    }\n    if n == 10 {\n        return 1000000000\n \
    \   }\n    return 0\n}\n", "    if n == 1 {\n        return 2\n    }\n    if n\
    \ == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", " \
    \   if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n\
    \    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if\
    \ n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n\
    \    return 9 * starts_one_ends(n - 1)\n}\n", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_88_sort_array
language: go_test.go
prompt: "package sort_array_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Given a list of non-negative integers, return a cogo of the given list after\
  \ sorting,\n// you will sort the given list in ascending order if the sum( first\
  \ index value, last index value) is odd,\n// or sort it in descending order if the\
  \ sum( first index value, last index value) is even.\n// Note:\n// * don't change\
  \ the given list.\n// Examples:\n// >>> sort_array(string{})\n// PATCH list\n//\
  \ >>> sort_array([]int{5})\n// []int{5}\n// >>> sort_array([]int{2, 4, 3, 0, 1,\
  \ 5})\n// []int{0, 1, 2, 3, 4, 5}\n// >>> sort_array([]int{2, 4, 3, 0, 1, 5, 6})\n\
  // []int{6, 5, 4, 3, 2, 1, 0}\nfunc sort_array(array []int) []int {\n"
tests: "func TestSort_Array(t *testing.T) {\n  candidate := sort_array\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate([]int{}), expected: []int{} },\n     { actual:\
  \ candidate([]int{5}), expected: []int{5} },\n     { actual: candidate([]int{2,\
  \ 4, 3, 0, 1, 5}), expected: []int{0, 1, 2, 3, 4, 5} },\n     { actual: candidate([]int{2,\
  \ 4, 3, 0, 1, 5, 6}), expected: []int{6, 5, 4, 3, 2, 1, 0} },\n     { actual: candidate([]int{2,\
  \ 1}), expected: []int{1, 2} },\n     { actual: candidate([]int{15, 42, 87, 32,\
  \ 11, 0}), expected: []int{0, 11, 15, 32, 42, 87} },\n     { actual: candidate([]int{21,\
  \ 14, 23, 11}), expected: []int{23, 21, 14, 11} },\n   }\n\n\tfor i, tc := range\
  \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\
  \tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
  \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\
  \t}\n}\n"
completions: ["    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    for i := 1; i < len(array) - 1; i += 2 {\n        if array[i] > array[i\
    \ + 1] {\n            array[i], array[i + 1] = array[i + 1], array[i]\n      \
    \  }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n        return\
    \ array\n    }\n    if len(array) == 1 {\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    // TODO: implement sort_array\n    return array\n}\n", " \
    \   if len(array) <= 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n    }\n    return sort_array_asc(array)\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        return sort_array_desc(array)\n    } else {\n        return\
    \ sort_array_asc(array)\n    }\n}\n", "    if len(array) == 0 {\n        return\
    \ array\n    }\n    if len(array) == 1 {\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    for i\
    \ := 1; i < len(array) - 1; i++ {\n        if (array[i] + array[i - 1]) % 2 ==\
    \ 0 {\n            for j := i + 1; j < len(array); j++ {\n                if (array[i]\
    \ + array[j]) % 2 == 0 {\n                    array[i], array[j] = array[j], array[i]\n\
    \                    break\n                }\n            }\n        }\n    }\n\
    \    return array\n}\n", "    if len(array) == 0 {\n        return array\n   \
    \ }\n    if len(array) == 1 {\n        return array\n    }\n    if (array[0] +\
    \ array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n \
    \   } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i <\
    \ len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n    } else {\n    \
    \    return sort_array_asc(array)\n    }\n}\n", "    if len(array) == 0 {\n  \
    \      return array\n    }\n    if len(array) == 1 {\n        return array\n \
    \   }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n          \
    \  array[0], array[1] = array[1], array[0]\n        }\n        return array\n\
    \    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i :=\
    \ 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i]\
    \ = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n    } else {\n    \
    \    return sort_array_asc(array)\n    }\n}\n", "    if len(array) == 0 {\n  \
    \      return array\n    }\n    if len(array) == 1 {\n        return array\n \
    \   }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    }\n    return sort_array_asc(array)\n}\n", "    if len(array) == 0 {\n  \
    \      return array\n    }\n    if len(array) == 1 {\n        return array\n \
    \   }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i :=\
    \ 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i]\
    \ = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    // TODO\n    return array\n}\n", "    if len(array) == 0 {\n      \
    \  return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for\
    \ i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) -\
    \ 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for\
    \ i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) -\
    \ 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    }\n    return sort_array_asc(array)\n}\n", "    if len(array) == 0 {\n  \
    \      return array\n    }\n    if len(array) == 1 {\n        return array\n \
    \   }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if array[0] > array[1] {\n            array[0],\
    \ array[1] = array[1], array[0]\n        }\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if (array[0] + array[1]) % 2\
    \ == 0 {\n            if array[0] < array[1] {\n                array[0], array[1]\
    \ = array[1], array[0]\n            }\n        } else {\n            if array[0]\
    \ > array[1] {\n                array[0], array[1] = array[1], array[0]\n    \
    \        }\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    for i := 0; i < len(array) - 1; i++ {\n        for j :=\
    \ i + 1; j < len(array); j++ {\n            if (array[i] + array[j]) % 2 == 0\
    \ {\n                if array[i] < array[j] {\n                    array[i], array[j]\
    \ = array[j], array[i]\n                }\n            } else {\n            \
    \    if array[i] > array[j] {\n                    array[i], array[j] = array[j],\
    \ array[i]\n                }\n            }\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if (array[0]\
    \ + array[1]) % 2 == 0 {\n            return []int{array[1], array[0]}\n     \
    \   } else {\n            return array\n        }\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if array[0] > array[1] {\n            array[0],\
    \ array[1] = array[1], array[0]\n        }\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if (array[0] + array[1]) % 2 == 0 {\n     \
    \       return []int{array[1], array[0]}\n        } else {\n            return\
    \ array\n        }\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0\
    \ {\n        return append(sort_array(array[1:]), array[0])\n    } else {\n  \
    \      return append(sort_array(array[:len(array) - 1]), array[len(array) - 1])\n\
    \    }\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        return sort_array_descending(array)\n    }\n    return\
    \ sort_array_ascending(array)\n}\n", "    if len(array) == 0 {\n        return\
    \ array\n    }\n    if len(array) == 1 {\n        return array\n    }\n    if\
    \ len(array) == 2 {\n        if array[0] > array[1] {\n            array[0], array[1]\
    \ = array[1], array[0]\n        }\n        return array\n    }\n    if (array[0]\
    \ + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array) -\
    \ 1 - i], array[i]\n        }\n    } else {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n        for i := 0; i < len(array) - 1; i++ {\n\
    \            if array[i] > array[i + 1] {\n                array[i], array[i +\
    \ 1] = array[i + 1], array[i]\n            }\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            return []int{array[1], array[0]}\n        }\n    \
    \    return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n\
    \        return sort_array_desc(array)\n    }\n    return sort_array_asc(array)\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if (array[0] + array[1]) % 2 == 0 {\n            if array[0] < array[1]\
    \ {\n                array[0], array[1] = array[1], array[0]\n            }\n\
    \        } else {\n            if array[0] > array[1] {\n                array[0],\
    \ array[1] = array[1], array[0]\n            }\n        }\n        return array\n\
    \    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i :=\
    \ 0; i < len(array) / 2; i++ {\n            if array[i] < array[len(array) - 1\
    \ - i] {\n                array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n            }\n        }\n    } else {\n        for i :=\
    \ 0; i < len(array) / 2; i++ {\n            if array[i] > array[len(array) - 1\
    \ - i] {\n                array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n            }\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if len(array) == 1 {\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        return sort_array_descending(array)\n    } else {\n        return\
    \ sort_array_ascending(array)\n    }\n}\n", "    if len(array) == 0 {\n      \
    \  return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if array[0] > array[1] {\n            array[0],\
    \ array[1] = array[1], array[0]\n        }\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n\n    if len(array) == 1 {\n        return\
    \ array\n    }\n\n    if len(array) == 2 {\n        if array[0] > array[1] {\n\
    \            array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n     \
    \   for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) < 2 {\n        return array\n\
    \    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i :=\
    \ 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i]\
    \ = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    len := len(array)\n    if len\
    \ == 0 {\n        return array\n    }\n    if len == 1 {\n        return array\n\
    \    }\n    if (array[0] + array[len - 1]) % 2 == 0 {\n        for i := 0; i <\
    \ len / 2; i++ {\n            array[i], array[len - 1 - i] = array[len - 1 - i],\
    \ array[i]\n        }\n    }\n    return array\n}\n", "    if len(array) <= 1\
    \ {\n        return array\n    }\n    if (array[0] + array[len(array) - 1]) %\
    \ 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) < 2 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array) -\
    \ 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n    } else {\n    \
    \    return sort_array_asc(array)\n    }\n}\n", "    if len(array) == 0 {\n  \
    \      return array\n    }\n    if len(array) == 1 {\n        return array\n \
    \   }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n    } else {\n    \
    \    return sort_array_asc(array)\n    }\n}\n", "    if len(array) == 0 {\n  \
    \      return array\n    }\n    if len(array) == 1 {\n        return array\n \
    \   }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n          \
    \  array[0], array[1] = array[1], array[0]\n        }\n        return array\n\
    \    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i :=\
    \ 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i]\
    \ = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if array[0] > array[1] {\n            array[0],\
    \ array[1] = array[1], array[0]\n        }\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n\n    if len(array) == 1 {\n        return\
    \ array\n    }\n\n    if len(array) == 2 {\n        if array[0] > array[1] {\n\
    \            array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n     \
    \   for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if array[0] > array[1] {\n            array[0],\
    \ array[1] = array[1], array[0]\n        }\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i <\
    \ len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ return sort_array_desc(array)\n    } else {\n        return sort_array_asc(array)\n\
    \    }\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if (array[0]\
    \ + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_descending(array)\n\
    \    } else {\n        return sort_array_ascending(array)\n    }\n}\n", "    if\
    \ len(array) == 0 {\n        return array\n    }\n    if len(array) == 1 {\n \
    \       return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        // even\n        for i := 0; i < len(array) / 2; i++\
    \ {\n            array[i], array[len(array) - 1 - i] = array[len(array) - 1 -\
    \ i], array[i]\n        }\n    } else {\n        // odd\n        for i := 0; i\
    \ < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ // even\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    } else {\n        // odd\n        for i := 0; i < len(array) / 2; i++ {\n\
    \            array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i],\
    \ array[i]\n        }\n        for i := 0; i < len(array) - 1; i++ {\n       \
    \     for j := 0; j < len(array) - 1 - i; j++ {\n                if array[j] >\
    \ array[j + 1] {\n                    array[j], array[j + 1] = array[j + 1], array[j]\n\
    \                }\n            }\n        }\n    }\n    return array\n}\n", " \
    \   if len(array) == 0 {\n        return array\n    }\n    if len(array) == 1\
    \ {\n        return array\n    }\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) <= 1 {\n        return array\n\
    \    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i :=\
    \ 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i]\
    \ = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if (array[0] + array[1]) % 2\
    \ == 0 {\n            if array[0] < array[1] {\n                array[0], array[1]\
    \ = array[1], array[0]\n            }\n        } else {\n            if array[0]\
    \ > array[1] {\n                array[0], array[1] = array[1], array[0]\n    \
    \        }\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if array[0] > array[1] {\n            array[0],\
    \ array[1] = array[1], array[0]\n        }\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if (array[0] + array[1]) % 2\
    \ == 0 {\n            return []int{array[1], array[0]}\n        } else {\n   \
    \         return array\n        }\n    }\n    var odd_array []int\n    var even_array\
    \ []int\n    for _, value := range array {\n        if value % 2 == 0 {\n    \
    \        even_array = append(even_array, value)\n        } else {\n          \
    \  odd_array = append(odd_array, value)\n        }\n    }\n    odd_array = sort_array(odd_array)\n\
    \    even_array = sort_array(even_array)\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        even_array = reverse_array(even_array)\n    }\n  \
    \  return append(odd_array, even_array...)\n}\n", "    if len(array) == 0 {\n\
    \        return array\n    }\n    if len(array) == 1 {\n        return array\n\
    \    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if (array[0]\
    \ + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    for i\
    \ := 1; i < len(array) - 1; i++ {\n        if array[i] % 2 == 1 {\n          \
    \  for j := i + 1; j < len(array); j++ {\n                if array[j] % 2 == 1\
    \ {\n                    if array[i] > array[j] {\n                        array[i],\
    \ array[j] = array[j], array[i]\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return array\n}\n", "    if len(array) ==\
    \ 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return array\n\
    \    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if (array[0] + array[1]) % 2 == 0 {\n     \
    \       return []int{array[1], array[0]}\n        } else {\n            return\
    \ array\n        }\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0\
    \ {\n        return append(sort_array(array[1:]), array[0])\n    } else {\n  \
    \      return append([]int{array[0]}, sort_array(array[1:])...)\n    }\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if len(array) == 1 {\n\
    \        return array\n    }\n    if len(array) == 2 {\n        if array[0] >\
    \ array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    for i\
    \ := 1; i < len(array) - 1; i += 2 {\n        if array[i] > array[i + 1] {\n \
    \           array[i], array[i + 1] = array[i + 1], array[i]\n        }\n    }\n\
    \    return array\n}\n", "    if len(array) == 0 {\n        return array\n   \
    \ }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i <\
    \ len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        return\
    \ sort_array_desc(array)\n    }\n    return sort_array_asc(array)\n}\n", "   \
    \ if len(array) == 0 {\n        return array\n    }\n    if len(array) == 1 {\n\
    \        return array\n    }\n    if len(array) == 2 {\n        if array[0] >\
    \ array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if array[0] > array[1] {\n            array[0],\
    \ array[1] = array[1], array[0]\n        }\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        return\
    \ sort_array_desc(array)\n    }\n    return sort_array_asc(array)\n}\n", "   \
    \ if len(array) == 0 {\n        return array\n    }\n    if len(array) == 1 {\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        return sort_array_desc(array)\n    } else {\n        return sort_array_asc(array)\n\
    \    }\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if array[0] > array[1] {\n            array[0],\
    \ array[1] = array[1], array[0]\n        }\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i <\
    \ len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if array[0] > array[1] {\n            array[0],\
    \ array[1] = array[1], array[0]\n        }\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if (array[0] + array[1]) % 2\
    \ == 0 {\n            return []int{array[1], array[0]}\n        } else {\n   \
    \         return array\n        }\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        return append([]int{array[len(array) - 1]}, sort_array(array[:len(array)\
    \ - 1])...)\n    } else {\n        return append(sort_array(array[1:]), array[0])\n\
    \    }\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if array[0] > array[1] {\n            array[0],\
    \ array[1] = array[1], array[0]\n        }\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if (array[0] + array[1]) % 2 == 0 {\n            return []int{array[1],\
    \ array[0]}\n        } else {\n            return array\n        }\n    }\n  \
    \  if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        return append([]int{array[len(array)\
    \ - 1]}, sort_array(array[1:len(array) - 1])...)\n    } else {\n        return\
    \ append(sort_array(array[1:len(array) - 1]), array[0])\n    }\n}\n", "    if\
    \ len(array) == 0 {\n        return array\n    }\n    if len(array) == 1 {\n \
    \       return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        return sort_array_desc(array)\n    } else {\n        return sort_array_asc(array)\n\
    \    }\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i <\
    \ len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for\
    \ i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) -\
    \ 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        return sort_array_desc(array)\n    } else {\n        return\
    \ sort_array_asc(array)\n    }\n}\n", "    if len(array) == 0 {\n        return\
    \ array\n    }\n    if len(array) == 1 {\n        return array\n    }\n    if\
    \ len(array) == 2 {\n        if array[0] > array[1] {\n            array[0], array[1]\
    \ = array[1], array[0]\n        }\n        return array\n    }\n    if (array[0]\
    \ + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array) -\
    \ 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array) -\
    \ 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i <\
    \ len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        return\
    \ sort_array_desc(array)\n    }\n    return sort_array_asc(array)\n}\n", "   \
    \ if len(array) == 0 {\n        return array\n    }\n\n    if len(array) == 1\
    \ {\n        return array\n    }\n\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n\n    if (array[0] + array[len(array) - 1]) % 2\
    \ == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    } else {\n        for i := 0; i < len(array) / 2; i++ {\n            if array[i]\
    \ > array[len(array) - 1 - i] {\n                array[i], array[len(array) -\
    \ 1 - i] = array[len(array) - 1 - i], array[i]\n            }\n        }\n   \
    \ }\n\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i <\
    \ len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if (array[0] + array[1]) % 2 == 0 {\n     \
    \       return []int{array[1], array[0]}\n        } else {\n            return\
    \ array\n        }\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0\
    \ {\n        return append(sort_array(array[1:]), array[0])\n    } else {\n  \
    \      return append(sort_array(array[:len(array) - 1]), array[len(array) - 1])\n\
    \    }\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) <= 1 {\n       \
    \ return array\n    }\n    // \u5947\u6570\u4E2A\u5143\u7D20\uFF0C\u6309\u7167\
    \u5347\u5E8F\u6392\u5217\n    // \u5076\u6570\u4E2A\u5143\u7D20\uFF0C\u6309\u7167\
    \u964D\u5E8F\u6392\u5217\n    if len(array) % 2 == 0 {\n        for i := 0; i\
    \ < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    } else {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n        for i :=\
    \ 0; i < len(array) - 1; i++ {\n            if array[i] > array[i + 1] {\n   \
    \             array[i], array[i + 1] = array[i + 1], array[i]\n            }\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i <\
    \ len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if (array[0] + array[1]) % 2\
    \ == 0 {\n            return []int{array[1], array[0]}\n        } else {\n   \
    \         return array\n        }\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        return append([]int{array[len(array) - 1]}, sort_array(array[:len(array)\
    \ - 1])...)\n    } else {\n        return append(sort_array(array[1:]), array[0])\n\
    \    }\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if (array[0]\
    \ + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array) -\
    \ 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n    } else {\n    \
    \    return sort_array_asc(array)\n    }\n}\n", "    if len(array) == 0 {\n  \
    \      return array\n    }\n    if len(array) == 1 {\n        return array\n \
    \   }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n          \
    \  array[0], array[1] = array[1], array[0]\n        }\n        return array\n\
    \    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i :=\
    \ 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i]\
    \ = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array) -\
    \ 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if (array[0] + array[1]) % 2\
    \ == 0 {\n            return []int{array[1], array[0]}\n        } else {\n   \
    \         return array\n        }\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        return append(sort_array(array[:len(array) - 1]),\
    \ array[len(array) - 1])\n    } else {\n        return append([]int{array[0]},\
    \ sort_array(array[1:]))\n    }\n}\n", "    if len(array) == 0 {\n        return\
    \ array\n    }\n    if len(array) == 1 {\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        return sort_desc(array)\n    } else {\n        return\
    \ sort_asc(array)\n    }\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if (array[0]\
    \ + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if array[0] > array[1] {\n            array[0],\
    \ array[1] = array[1], array[0]\n        }\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    // TODO: implement sort_array\n    return array\n}\n", " \
    \   if len(array) == 0 {\n        return array\n    }\n    if len(array) == 1\
    \ {\n        return array\n    }\n    if array[0] + array[len(array) - 1] % 2\
    \ == 0 {\n        return sort_array_desc(array)\n    }\n    return sort_array_asc(array)\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i <\
    \ len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if array[0] > array[1] {\n \
    \           array[0], array[1] = array[1], array[0]\n        }\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n    } else {\n    \
    \    return sort_array_asc(array)\n    }\n}\n", "    if len(array) == 0 {\n  \
    \      return array\n    }\n    if len(array) == 1 {\n        return array\n \
    \   }\n    if len(array) == 2 {\n        if (array[0] + array[1]) % 2 == 0 {\n\
    \            return []int{array[1], array[0]}\n        } else {\n            return\
    \ array\n        }\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0\
    \ {\n        return append([]int{array[len(array) - 1]}, sort_array(array[:len(array)\
    \ - 1])...)\n    } else {\n        return append(sort_array(array[1:]), array[0])\n\
    \    }\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if array[0]\
    \ > array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if (array[0]\
    \ + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ return sort_array_desc(array)\n    } else {\n        return sort_array_asc(array)\n\
    \    }\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if len(array) == 2 {\n        if (array[0]\
    \ + array[1]) % 2 == 0 {\n            if array[0] < array[1] {\n             \
    \   array[0], array[1] = array[1], array[0]\n            }\n        } else {\n\
    \            if array[0] > array[1] {\n                array[0], array[1] = array[1],\
    \ array[0]\n            }\n        }\n        return array\n    }\n    if (array[0]\
    \ + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            if array[i] < array[len(array) - 1 - i] {\n             \
    \   array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \            }\n        }\n    } else {\n        for i := 0; i < len(array) /\
    \ 2; i++ {\n            if array[i] > array[len(array) - 1 - i] {\n          \
    \      array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \            }\n        }\n    }\n    return array\n}\n", "    if len(array) ==\
    \ 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return array\n\
    \    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i :=\
    \ 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i]\
    \ = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        return sort_array_desc(array)\n    } else {\n        return\
    \ sort_array_asc(array)\n    }\n}\n", "    if len(array) == 0 {\n        return\
    \ array\n    }\n    if len(array) == 1 {\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        return\
    \ sort_array_descending(array)\n    }\n    return sort_array_ascending(array)\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if array[0] > array[1] {\n            array[0],\
    \ array[1] = array[1], array[0]\n        }\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        return\
    \ sort_array_desc(array)\n    }\n    return sort_array_asc(array)\n}\n", "   \
    \ if len(array) == 0 {\n        return array\n    }\n    if len(array) == 1 {\n\
    \        return array\n    }\n    if len(array) == 2 {\n        if array[0] >\
    \ array[1] {\n            array[0], array[1] = array[1], array[0]\n        }\n\
    \        return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 ==\
    \ 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if len(array) == 2 {\n        if array[0] > array[1] {\n            array[0],\
    \ array[1] = array[1], array[0]\n        }\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

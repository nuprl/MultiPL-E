name: HumanEval_2_truncate_number
language: go_test.go
prompt: "package truncate_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// Given a positive floating point number, it can be decomposed into\n// and\
  \ integer part (largest integer smaller than given number) and decimals\n// (leftover\
  \ part always smaller than 1).\n// Return the decimal part of the number.\n// >>>\
  \ truncate_number(3.5)\n// 0.5\nfunc truncate_number(number float64) float64 {\n"
tests: "func TestTruncate_Number(t *testing.T) {\n  candidate := truncate_number\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(3.5), expected: 0.5 },\n     { actual:\
  \ candidate(1.25), expected: 0.25 },\n     { actual: candidate(123.0), expected:\
  \ 0.0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
  \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    return number - float64(int(number))\n}\n", "    return number\
    \ - float64(int(number))\n}\n", "    return number - float64(int(number))\n}\n",
  "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    // TODO: implement me\n    return 0.0\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    // TODO: implement\n\
    \    return 0.0\n}\n", "    return number - float64(int(number))\n}\n", "    return\
    \ number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n", "    return number - float64(int(number))\n}\n", "    return number - float64(int(number))\n\
    }\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

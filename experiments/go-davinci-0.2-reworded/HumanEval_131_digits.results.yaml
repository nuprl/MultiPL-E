language: go_test.go
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmplcpfegs3_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    product := 1\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmp_oy9gcjr_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var total int =\
    \ 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n \
    \           total *= digit\n        }\n        n /= 10\n    }\n    return total\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmp09_kd7xh_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmplcpfegs3_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmp4_9ybvht_test.go:48:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmplcpfegs3_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    } else {\n        if n % 2 == 1 {\n            return n %\
    \ 10 * digits(n / 10)\n        } else {\n            return digits(n / 10)\n \
    \       }\n    }\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    } else {\n        if n % 2 == 1 {\n            return n %\
    \ 10 * digits(n / 10)\n        } else {\n            return digits(n / 10)\n \
    \       }\n    }\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    product := 1\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmp_oy9gcjr_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmplcpfegs3_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return (n % 10) * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpc39y7hfh_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpc39y7hfh_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpc39y7hfh_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpc39y7hfh_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpc39y7hfh_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpc39y7hfh_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    } else {\n        if n % 2 == 1 {\n            return n %\
    \ 10 * digits(n / 10)\n        } else {\n            return digits(n / 10)\n \
    \       }\n    }\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    // your code here\n\
    \    return 0\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpvyw6h5c9_test.go:41:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmp4_9ybvht_test.go:48:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n /\
    \ 10)\n    } else {\n        return digits(n / 10)\n    }\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    } else {\n        if n % 2 == 1 {\n            return n %\
    \ 10 * digits(n / 10)\n        } else {\n            return digits(n / 10)\n \
    \       }\n    }\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmplcpfegs3_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    // your code here\n\
    \    return 0\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpvyw6h5c9_test.go:41:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    product := 1\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmp_oy9gcjr_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmplcpfegs3_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmplcpfegs3_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmp4_9ybvht_test.go:48:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmplcpfegs3_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 0 {\n  \
    \      return 0\n    }\n    if n < 10 {\n        if n % 2 == 1 {\n           \
    \ return n\n        }\n        return 0\n    }\n    return digits(n / 10) * digits(n\
    \ % 10)\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmpz5ol56n4_test.go:49: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmpz5ol56n4_test.go:49: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmpz5ol56n4_test.go:49: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmpz5ol56n4_test.go:49: expected\
    \ '%!s(int=315)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmpz5ol56n4_test.go:49: expected '%!s(int=2625)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       return n\n    }\n    return digits(n / 10) * (n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=20)'\n  \
    \  --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=315)', got '%!s(int=15120)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=2625)', got '%!s(int=63000)'\n\
    \    --- FAIL: TestDigits/test_num__6 (0.00s)\n        tmp91v_dwpj_test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=384)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmp4_9ybvht_test.go:48:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var prod int =\
    \ 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n \
    \           prod *= digit\n        }\n        n /= 10\n    }\n    return prod\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpb5j9slp5_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       return n\n    }\n    return digits(n / 10) * (n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=20)'\n  \
    \  --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=315)', got '%!s(int=15120)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=2625)', got '%!s(int=63000)'\n\
    \    --- FAIL: TestDigits/test_num__6 (0.00s)\n        tmp91v_dwpj_test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=384)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    product := 1\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmp_oy9gcjr_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    // your code here\n\
    \    return 0\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpvyw6h5c9_test.go:41:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 0 {\n  \
    \      return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n < 10\
    \ {\n        if n % 2 == 1 {\n            return n\n        }\n        return\
    \ 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n / 10)\n    }\n\
    \    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate\
    \ := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     {\
    \ actual: candidate(54), expected: 5 },\n     { actual: candidate(120), expected:\
    \ 1 },\n     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n /\
    \ 10)\n    } else {\n        return digits(n / 10)\n    }\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    product := 1\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmp_oy9gcjr_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n /\
    \ 10)\n    } else {\n        return digits(n / 10)\n    }\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    // your code here\n\
    \    return 0\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpvyw6h5c9_test.go:41:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    } else {\n        if n % 2 == 1 {\n            return n %\
    \ 10 * digits(n / 10)\n        } else {\n            return digits(n / 10)\n \
    \       }\n    }\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    } else {\n        if n % 2 == 1 {\n            return n %\
    \ 10 * digits(n / 10)\n        } else {\n            return digits(n / 10)\n \
    \       }\n    }\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    product := 1\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmp_oy9gcjr_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    }\n    last_digit := n % 10\n    if last_digit % 2 == 1 {\n\
    \        return last_digit * digits(n / 10)\n    } else {\n        return digits(n\
    \ / 10)\n    }\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 0 {\n  \
    \      return 0\n    }\n    if n < 10 {\n        if n % 2 == 1 {\n           \
    \ return n\n        }\n        return 0\n    }\n    return digits(n / 10) * digits(n\
    \ % 10)\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmpz5ol56n4_test.go:49: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmpz5ol56n4_test.go:49: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmpz5ol56n4_test.go:49: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmpz5ol56n4_test.go:49: expected\
    \ '%!s(int=315)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmpz5ol56n4_test.go:49: expected '%!s(int=2625)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    } else {\n        if n % 2 == 1 {\n            return n %\
    \ 10 * digits(n / 10)\n        } else {\n            return digits(n / 10)\n \
    \       }\n    }\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmplcpfegs3_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    } else {\n        if n % 2 == 1 {\n            return n %\
    \ 10 * digits(n / 10)\n        } else {\n            return digits(n / 10)\n \
    \       }\n    }\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    var product int = 1\n    for n > 0 {\n        digit\
    \ := n % 10\n        if digit % 2 != 0 {\n            product *= digit\n     \
    \   }\n        n /= 10\n    }\n    return product\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpvp6jqcvo_test.go:51: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    product := 1\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmp_oy9gcjr_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       return n\n    }\n    return digits(n / 10) * (n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=20)'\n  \
    \  --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=315)', got '%!s(int=15120)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=2625)', got '%!s(int=63000)'\n\
    \    --- FAIL: TestDigits/test_num__6 (0.00s)\n        tmp91v_dwpj_test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=384)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    // your code here\n\
    \    return 0\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpvyw6h5c9_test.go:41:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       return n\n    }\n    return digits(n / 10) * (n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=20)'\n  \
    \  --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=315)', got '%!s(int=15120)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=2625)', got '%!s(int=63000)'\n\
    \    --- FAIL: TestDigits/test_num__6 (0.00s)\n        tmp91v_dwpj_test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=384)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       return n\n    }\n    return digits(n/10) * (n%10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmpda9rw8me_test.go:43: expected '%!s(int=5)', got '%!s(int=20)'\n  \
    \  --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmpda9rw8me_test.go:43: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmpda9rw8me_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmpda9rw8me_test.go:43: expected\
    \ '%!s(int=315)', got '%!s(int=15120)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmpda9rw8me_test.go:43: expected '%!s(int=2625)', got '%!s(int=63000)'\n\
    \    --- FAIL: TestDigits/test_num__6 (0.00s)\n        tmpda9rw8me_test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=384)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    // your code here\n\
    \    return 0\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpvyw6h5c9_test.go:41:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    // your code here\n\
    \    return 0\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpvyw6h5c9_test.go:41:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmplcpfegs3_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       return n\n    }\n    return digits(n / 10) * (n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=20)'\n  \
    \  --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=315)', got '%!s(int=15120)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=2625)', got '%!s(int=63000)'\n\
    \    --- FAIL: TestDigits/test_num__6 (0.00s)\n        tmp91v_dwpj_test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=384)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    product := 1\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmp_oy9gcjr_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       return n\n    }\n    return digits(n / 10) * (n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=20)'\n  \
    \  --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=315)', got '%!s(int=15120)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=2625)', got '%!s(int=63000)'\n\
    \    --- FAIL: TestDigits/test_num__6 (0.00s)\n        tmp91v_dwpj_test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=384)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n\n    var result int\n    if n % 2 == 1 {\n        result\
    \ = n % 10\n    }\n\n    return result * digits(n / 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmp_imw89iv_test.go:49: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmp_imw89iv_test.go:49: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmp_imw89iv_test.go:49: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmp_imw89iv_test.go:49: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmp_imw89iv_test.go:49: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmp_imw89iv_test.go:49:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var prod int =\
    \ 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n \
    \           prod *= digit\n        }\n        n /= 10\n    }\n    return prod\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpb5j9slp5_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return (n % 10) * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpc39y7hfh_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpc39y7hfh_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpc39y7hfh_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpc39y7hfh_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpc39y7hfh_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpc39y7hfh_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    // Your code here\n\
    \    return 0\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmp4sihpo_l_test.go:41: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmp4sihpo_l_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmp4sihpo_l_test.go:41: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmp4sihpo_l_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmp4sihpo_l_test.go:41: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmp4sihpo_l_test.go:41:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       return n\n    }\n    return digits(n / 10) * (n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=20)'\n  \
    \  --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=315)', got '%!s(int=15120)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=2625)', got '%!s(int=63000)'\n\
    \    --- FAIL: TestDigits/test_num__6 (0.00s)\n        tmp91v_dwpj_test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=384)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmplcpfegs3_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    var product int = 1\n    for n > 0 {\n        digit\
    \ := n % 10\n        if digit % 2 != 0 {\n            product *= digit\n     \
    \   }\n        n /= 10\n    }\n    return product\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpvp6jqcvo_test.go:51: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    product := 1\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmp_oy9gcjr_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       return n\n    }\n    return digits(n / 10) * (n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=20)'\n  \
    \  --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmp91v_dwpj_test.go:43: expected\
    \ '%!s(int=315)', got '%!s(int=15120)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmp91v_dwpj_test.go:43: expected '%!s(int=2625)', got '%!s(int=63000)'\n\
    \    --- FAIL: TestDigits/test_num__6 (0.00s)\n        tmp91v_dwpj_test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=384)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmp4_9ybvht_test.go:48:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n == 0 {\n \
    \       return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmplcpfegs3_test.go:46: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmplcpfegs3_test.go:46: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmplcpfegs3_test.go:46:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    } else {\n        if n % 2 == 1 {\n            return (n %\
    \ 10) * digits(n / 10)\n        } else {\n            return digits(n / 10)\n\
    \        }\n    }\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmp4_9ybvht_test.go:48:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmp4_9ybvht_test.go:48:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    product := 1\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmp_oy9gcjr_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 10 {\n \
    \       if n % 2 == 1 {\n            return n\n        } else {\n            return\
    \ 0\n        }\n    } else {\n        if n % 2 == 1 {\n            return n %\
    \ 10 * digits(n / 10)\n        } else {\n            return digits(n / 10)\n \
    \       }\n    }\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    // your code here\n\
    \    return 0\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpvyw6h5c9_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpvyw6h5c9_test.go:41: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpvyw6h5c9_test.go:41:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var prod int =\
    \ 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n \
    \           prod *= digit\n        }\n        n /= 10\n    }\n    return prod\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpb5j9slp5_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmp4_9ybvht_test.go:48:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\n\
    \    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n     \
    \       result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmp4_9ybvht_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmp4_9ybvht_test.go:48: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmp4_9ybvht_test.go:48:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var result int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpz2ob9n4x_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    var product int\
    \ = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpc6vgk2h6_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074454
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
    // 0\n// >>> digits(235)\n// 15\nfunc digits(n int) int {\n    if n < 0 {\n  \
    \      return 0\n    }\n    if n < 10 {\n        if n % 2 == 1 {\n           \
    \ return n\n        }\n        return 0\n    }\n    return digits(n / 10) * (n\
    \ % 10)\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmp4r7aj_tw_test.go:49: expected '%!s(int=5)', got '%!s(int=20)'\n  \
    \  --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmp4r7aj_tw_test.go:49: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmp4r7aj_tw_test.go:49: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmp4r7aj_tw_test.go:49: expected\
    \ '%!s(int=315)', got '%!s(int=15120)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmp4r7aj_tw_test.go:49: expected '%!s(int=2625)', got '%!s(int=63000)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074454

name: HumanEval_85_add
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list of\
  \ integers lst. add the even elements that are at odd indices..\n// Examples:\n\
  // add([4, 2, 6, 7]) ==> 2\nlong add(std::vector<long> lst) {\n"
tests: "}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({4,\
  \ 88}))) == (88));\n    assert(candidate((std::vector<long>({4, 5, 6, 7, 2, 122})))\
  \ == (122));\n    assert(candidate((std::vector<long>({4, 0, 6, 7}))) == (0));\n\
  \    assert(candidate((std::vector<long>({4, 4, 6, 8}))) == (12));\n}\n"
completions: ["  long sum = 0;\n  for(int i = 0; i < lst.size(); i++) {\n    if(i\
    \ % 2 != 0 && lst[i] % 2 == 0)\n      sum += lst[i];\n  }\n  return sum;", " \
    \ long num = 0;\n  for(int i = 1; i < lst.size(); i = i + 2){\n    if(lst[i] %\
    \ 2 == 0){\n      num += lst[i];\n    }\n  }\n  return num;", "    long sum =\
    \ 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(i % 2 != 0){\n   \
    \         if(lst[i] % 2 == 0){\n                sum += lst[i];\n            }\n\
    \        }\n    }\n    return sum;", "  return std::accumulate(lst.begin() + 1,\
    \ lst.end(), 0L, [](long a, long b) {\n    return b % 2 ? a : a + b;\n  });",
  "  long sum = 0;\n  for(int i = 0; i < lst.size(); i++){\n    if(lst[i] % 2 == 0\
    \ && i % 2 != 0){\n      sum += lst[i];\n    }\n  }\n  return sum;", "  // your\
    \ code here\n  long s=0;\n  for(long i=0;i<lst.size();i++){\n    if(i%2==1 &&\
    \ lst[i]%2==0){\n      s+=lst[i];\n    }\n  }\n  return s;", "  long sum = 0;\n\
    \  for(long i = 0; i < lst.size(); i++){\n    if(lst[i] % 2 == 0 && i % 2 != 0){\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;", "    long retval=0;\n    int\
    \ i;\n    for(i=0;i<lst.size();i++)\n    {\n        if(i%2==0 && lst[i]%2==0)\n\
    \        {\n            retval+=lst[i];\n        }\n    }\n    return retval;",
  "  int sum = 0;\n  for(int i = 1; i < lst.size(); i+=2){\n    if(lst[i] % 2 == 0){\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;", "  // your code here\n   long\
    \ ans=0;\n   for(long i=0;i<lst.size();i++)\n   {\n     if(i%2!=0)\n     {\n \
    \      if(lst[i]%2==0)\n       {\n         ans+=lst[i];\n       }\n     }\n  \
    \ }\n   return ans;", "    long long sum = 0;\n    for(unsigned int i = 0; i <\
    \ lst.size(); i++){\n        if(i % 2 == 1 && lst[i] % 2 == 0){\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;", "  long result = 0;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    if (i % 2 == 1 && lst[i] % 2 == 0) {\n  \
    \    result += lst[i];\n    }\n  }\n  return result;", "  long sum=0;\n  for(int\
    \ i=0;i<lst.size();i+=2)\n  {\n    if(lst[i]%2==0)\n    {\n      sum+=lst[i];\n\
    \    }\n  }\n  return sum;", "  long sum = 0;\n  for(int i = 0; i < lst.size();\
    \ i++) {\n    if(i % 2 == 1 && lst[i] % 2 == 0) {\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;", "long sum=0;\n    for(int i=0;i<lst.size();i+=2)\n    {\n\
    \        if(lst[i]%2==0)\n        {\n            sum+=lst[i];\n        }\n   \
    \ }\n    return sum;", "   long sum=0;\n   int n=lst.size();\n   for(int i=0;i<n;i+=2)\n\
    \   {\n       if(lst[i]%2==0)\n       {\n         sum+=lst[i];\n       }\n   }\n\
    \   return sum;", "    std::vector<long>::iterator it;\n    long sum = 0;\n  \
    \  for(it = lst.begin(); it != lst.end(); it++){\n        if(*it % 2 == 0){\n\
    \            sum += *it;\n        }\n    }\n    return sum;", "   std::cout<<\"\
    array size: \"<<lst.size()<<std::endl;\n   long sum = 0;\n   for(int i = 0; i\
    \ < lst.size(); i+=2){\n      sum += lst[i];\n   }\n   return sum;", '  return
    accumulate(lst.begin()+1, lst.end(), 0, [](int a, int b){return a+(b%2==0?b:0);});',
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 0 && i % 2 != 0){\n            sum += lst[i];\n        }\n    }\n   \
    \ return sum;", "  long even_sum = 0;\n  for(int i = 0; i < lst.size(); i++) {\n\
    \    if(i % 2 == 1 && lst[i] % 2 == 0) {\n      even_sum += lst[i];\n    }\n \
    \ }\n  return even_sum;", "  int n = lst.size();\n  int sum = 0;\n  for(int i\
    \ = 0; i < n; i++) {\n    if(i%2 == 1 && lst[i]%2 == 0) {\n      sum += lst[i];\n\
    \    }\n  }\n  return sum;", "  long sum = 0;\n  for(int i = 0; i < lst.size();\
    \ i += 2)\n  {\n    if(lst[i] % 2 == 0)\n    {\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;", "\tint s = 0;\n\tfor (int i = 0; i < lst.size(); i += 2)\
    \ {\n\t\tif (lst[i] % 2 == 0) {\n\t\t\ts += lst[i];\n\t\t}\n\t}\n\treturn s;",
  "    long sum = 0;\n    for(int i = 1; i < lst.size(); i += 2)\n        if(lst[i]\
    \ % 2 == 0)\n            sum += lst[i];\n    return sum;", "\tvector<long>::iterator\
    \ it;\n\tlong sum = 0;\n\tint i = 0;\n\tfor (it = lst.begin(); it != lst.end();\
    \ it++) {\n\t\tif (*it % 2 == 0 && i % 2 != 0) {\n\t\t\tsum += *it;\n\t\t}\n\t\
    \ti++;\n\t}\n\treturn sum;", "  // your code here\n  long sum = 0;\n  for(int\
    \ i = 0; i < lst.size(); i++){\n    if(i % 2 != 0){\n      if(lst[i] % 2 == 0){\n\
    \        sum += lst[i];\n      }\n    }\n  }\n  return sum;", "    std::vector<long>::iterator\
    \ it = lst.begin();\n    int i = 0;\n    long s = 0;\n    while(it != lst.end())\
    \ {\n        if (i % 2 == 1 && *it % 2 == 0)\n            s += *it;\n        it++;\n\
    \        i++;\n    }\n    return s;", "    long s = 0;\n    for(int i = 0; i <\
    \ lst.size(); i++) {\n        if(i % 2 != 0 && lst[i] % 2 == 0) {\n          \
    \  s += lst[i];\n        }\n    }\n    return s;", "  // your code here...\n \
    \ long r=0;\n  for(int i=0;i<lst.size();i++){\n      if(i%2!=0 && lst[i]%2==0){\n\
    \        r+=lst[i];\n      }\n  }\n  return r;", "    long c=0;\n    for(long\
    \ i=0;i<lst.size();i++)\n    {\n        if(i%2==1 && lst[i]%2==0)\n        {\n\
    \            c+=lst[i];\n        }\n    }\n    return c;", "    long sum=0;\n\
    \    for(int i=0;i<lst.size();i++)\n    {\n        if(i%2==1 && lst[i]%2==0)\n\
    \        {\n            sum+=lst[i];\n        }\n    }\n    return sum;", "  long\
    \ sum = 0;\n  for(int i = 0; i < lst.size(); i++) {\n    if(i % 2 != 0 && lst[i]\
    \ % 2 == 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  long sum =\
    \ 0;\n  for(long i = 0; i < lst.size(); i++){\n    if(i % 2 != 0){\n      if(lst[i]\
    \ % 2 == 0){\n        sum += lst[i];\n      }\n    }\n  }\n  return sum;", " \
    \   long oddSum = 0;\n    int counter = 0;\n    while(counter < lst.size()){\n\
    \        if(lst[counter] % 2 == 0 && counter % 2 != 0){\n            oddSum +=\
    \ lst[counter];\n        }\n        counter++;\n    }\n    return oddSum;", " \
    \   long sum=0;\n    for(int i=0;i<lst.size();i+=2)\n    {\n        if(lst[i]%2==0)\n\
    \        {\n            sum+=lst[i];\n        }\n    }\n    return sum;", "  \
    \  int sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(i % 2 !=\
    \ 0 && lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++)\n    {\n        if(i%2==1\
    \ && lst[i]%2==0)\n        {\n            sum+=lst[i];\n        }\n    }\n   \
    \ return sum;", "    long ans = 0;\n    for(int i = 0; i < lst.size(); i++){\n\
    \        if(i % 2 == 1 && lst[i] % 2 == 0){\n            ans += lst[i];\n    \
    \    }\n    }\n    return ans;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if(i % 2 != 0 && lst[i] % 2 == 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "\tint result = 0;\n\tfor (int i = 0; i <\
    \ lst.size(); i++) {\n\t\tif (i % 2 != 0 && lst[i] % 2 == 0) {\n\t\t\tresult +=\
    \ lst[i];\n\t\t}\n\t}\n\treturn result;", "    std::vector<long>::iterator it;\n\
    \    long result = 0;\n    for(it = lst.begin(); it != lst.end(); it++){\n   \
    \     if((*it % 2 == 0) && (it-lst.begin() % 2 != 0)){\n            result +=\
    \ *it;\n        }\n    }\n    return result;", "\tlong sum = 0;\n\t// We add the\
    \ even integers that are at odd indices\n\t// i = 0 is an even index\n\t// i =\
    \ 1 is an odd index\n\t// i = 2 is an even index\n\t// i = 3 is an odd index\n\
    \t// ...\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 != 0 && lst[i]\
    \ % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "  // <---\n\
    \  return std::accumulate(lst.begin()+1, lst.end(), 0, [](long sum, int n){return\
    \ sum + (n%2 == 0 ? n : 0);});", "    if(lst.size() == 0) return 0;\n    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(i % 2 == 1 &&\
    \ lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;", "  // your code\n  int sum = 0;\n  for(int i = 0; i < lst.size(); i++){\n\
    \    if(i % 2 != 0){\n      if(lst[i] % 2 == 0){\n        sum += lst[i];\n   \
    \   }\n    }\n  }\n  return sum;", "    long r=0;\n    for(int i=0;i<lst.size();i++){\n\
    \        if(i%2==1 && lst[i]%2==0){\n            r+=lst[i];\n        }\n    }\n\
    \    return r;", "    int result = 0;\n    for(int i = 0; i < lst.size(); i++){\n\
    \        if(i % 2 != 0){\n            if(lst[i] % 2 == 0){\n                result\
    \ += lst[i];\n            }\n        }\n    }\n    return result;", "    // Write\
    \ code here..\n    long ans = 0;\n    int i = 0;\n    for(auto x : lst){\n   \
    \     if(i % 2 == 1 && x % 2 == 0){\n            ans += x;\n        }\n      \
    \  i++;\n    }\n    return ans;", "    long answer = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++){\n        if(i % 2 == 1 && lst[i] % 2 == 0){\n          \
    \  answer += lst[i];\n        }\n    }\n    return answer;", "  long sum = 0;\n\
    \  for(long i = 0; i < lst.size(); i++) {\n    if(i % 2 == 1 && lst[i] % 2 ==\
    \ 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "\tlong sum = 0;\n\t\
    for (unsigned i = 0; i < lst.size(); i += 2) {\n\t\tif (lst[i] % 2 == 0) {\n\t\
    \t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "\tlong sum = 0;\n\tfor (int i\
    \ = 0; i < lst.size(); i+=2) {\n\t\tif (lst[i] % 2 == 0) {\n\t\t\tsum += lst[i];\n\
    \t\t}\n\t}\n\treturn sum;", "  long sum = 0;\n  for(int i = 1; i < lst.size();\
    \ i+=2)\n  {\n    if(lst[i] % 2 == 0)\n    {\n      sum += lst[i];\n    }\n  }\n\
    \  return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\
    \tif (i % 2 == 1 && lst[i] % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn\
    \ sum;", "    long sum = 0;\n    for(int i = 1; i < lst.size(); i+=2) {\n    \
    \    if(lst[i] % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n   \
    \ return sum;", "  return std::accumulate(lst.begin() + 1, lst.end(), 0,\n   \
    \   [](int a, int b) { return a + (b % 2 == 0 ? b : 0); });", "  long ret = 0;\n\
    \  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 1 && lst[i] % 2 ==\
    \ 0) {\n      ret += lst[i];\n    }\n  }\n  return ret;", "  // Place your code\
    \ here\n  long s=0;\n  for(int i=0;i<lst.size();i++){\n    if(i%2!=0){\n     \
    \ if(lst[i]%2==0){\n        s+=lst[i];\n      }\n    }\n  }\n  return s;", "\t\
    // initialize sum to zero\n\tlong sum = 0;\n\t// loop through the list lst, keep\
    \ a count of indices\n\tfor (size_t i = 0; i < lst.size(); i++) {\n\t\t// if the\
    \ number at that index is even and the index is odd, add the number to sum\n\t\
    \tif (lst[i] % 2 == 0 && i % 2 != 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\t//\
    \ return the sum\n\treturn sum;", "   long result = 0;\n   for(int i = 0; i <\
    \ lst.size(); i+=2) {\n      if(lst[i] % 2 == 0) {\n         result += lst[i];\n\
    \      }\n   }\n   return result;", "  int n = lst.size();\n  int sum = 0;\n \
    \ for(int i = 0; i < n; i++) {\n    if(i%2 == 1 && lst[i]%2 == 0)\n      sum +=\
    \ lst[i];\n  }\n  return sum;", "    long ans = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if(i % 2 != 0 && lst[i] % 2 == 0){\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;", "    long res = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++)\n        if((i+1)%2 != 0 && lst[i]%2 == 0)\n            res\
    \ += lst[i];\n    return res;", "    int sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i+=2)\n    {\n        if(lst[i] % 2 == 0)\n        {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++)\n\
    \    {\n        if(i%2==1 && lst[i]%2==0)\n        {\n            sum+=lst[i];\n\
    \        }\n    }\n    return sum;", "  long sum=0;\n  for(int i=0;i<lst.size();i++){\n\
    \    if(i%2!=0){\n      if(lst[i]%2==0){\n        sum+=lst[i];\n      }\n    }\n\
    \  }\n  return sum;", "   long sum=0;\n   for(int i=0;i<lst.size();i++){\n   \
    \  if(i%2!=0 && lst[i]%2==0){\n       sum+=lst[i];\n     }\n   }\n   return sum;",
  "    long output = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(i %\
    \ 2 == 1 && lst[i] % 2 == 0) {\n            output += lst[i];\n        }\n   \
    \ }\n    return output;", '  return 0;', "  int sum = 0;\n  for(int i = 0; i <\
    \ lst.size(); i++){\n    if(i % 2 != 0 && lst[i] % 2 == 0){\n      sum += lst[i];\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    int count = 0;\n    for(auto\
    \ it : lst) {\n        if(count % 2 == 1 && it % 2 == 0) {\n            sum +=\
    \ it;\n        }\n        count++;\n    }\n    return sum;", "    long sum = 0;\n\
    \    int len = lst.size();\n    for(int i = 0; i < len; i += 2) {\n        if(lst[i]\
    \ % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "  long sum = 0;\n  for(int i = 0; i < lst.size(); i++) {\n    if(i % 2 == 1 &&\
    \ lst[i] % 2 == 0)\n      sum += lst[i];\n  }\n  return sum;", "\tlong result\
    \ = 0;\n\tfor (long i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 1 && lst[i]\
    \ % 2 == 0) {\n\t\t\tresult += lst[i];\n\t\t}\n\t}\n\treturn result;", "    long\
    \ sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(i%2!=0 && lst[i]%2==0){\n\
    \            sum+=lst[i];\n        }\n    }\n    return sum;", "  int indx = 1;\n\
    \  long sum = 0;\n  for(int i = 0; i < lst.size(); i++){\n    if(lst[i] % 2 ==\
    \ 0 && i % 2 != 0){\n      sum += lst[i];\n    }\n  }\n  return sum;", "  long\
    \ s=0;\n  for(int i=0;i<lst.size();i++){\n    if(i%2==1&&lst[i]%2==0)\n      s+=lst[i];\n\
    \  }\n  return s;", "  int len = lst.size();\n  long sum = 0;\n  for(int i = 1;\
    \ i < len; i+=2) {\n    if(lst[i] % 2 == 0) {\n      sum += lst[i];\n    }\n \
    \ }\n  return sum;", "\tint s = 0;\n\tfor (long i = 0; i < lst.size(); i++) {\n\
    \t\tif (i % 2 != 0 && lst[i] % 2 == 0) {\n\t\t\ts += lst[i];\n\t\t}\n\t}\n\treturn\
    \ s;", "  long res = 0;\n  for(int i = 0; i < lst.size(); i++) {\n    if (i %\
    \ 2 == 1 && lst[i] % 2 == 0) {\n      res += lst[i];\n    }\n  }\n  return res;",
  "    long sum = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0 && i % 2 != 0)\n            sum += lst[i];\n    }\n    return sum;",
  "  long sum = 0;\n  for(int i = 1; i < lst.size(); i+=2) {\n    if(lst[i] % 2 ==\
    \ 0)\n      sum += lst[i];\n  }\n  return sum;", "  int sum = 0;\n  int i = 1;\n\
    \  for(int i = 0; i < lst.size(); i++) {\n    if(lst[i] % 2 == 0 && i % 2 != 0)\
    \ {\n      sum += lst[i];\n    }\n  }\n  return sum;", "    int sum = 0;\n   \
    \ for(int i = 0; i < lst.size(); i++) {\n        if(i % 2 != 0 && lst[i] % 2 ==\
    \ 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;", "  int\
    \ n = lst.size();\n  int ans = 0;\n  for(int i = 0; i < n; i+=2) {\n    if(lst[i]\
    \ % 2 == 0)\n      ans += lst[i];\n  }\n  return ans;", "    long sum = 0;\n \
    \   for(int i = 0; i < lst.size(); i++){\n        if(i % 2 == 1 && lst[i] % 2\
    \ == 0){\n            sum += lst[i];\n        }\n    }\n    return sum;", "  \
    \  long ans = 0;\n    for(int i = 0; i < lst.size(); i += 2) ans += lst[i];\n\
    \    return ans;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(i % 2 == 1 && lst[i] % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "  int size = lst.size();\n  long result\
    \ = 0;\n  for(int i = 0; i < size; i++) {\n    if (i % 2 != 0 && lst[i] % 2 ==\
    \ 0) {\n      result += lst[i];\n    }\n  }\n  return result;", "\tint i =0;\n\
    \tint sum = 0;\n\tfor(auto it: lst){\n\t\tif(i%2==1){\n\t\t\tsum += it;\n\t\t\
    }\n\t\ti++;\n\t}\n\treturn sum;", "  long sum = 0;\n  for(long i = 0; i < lst.size();\
    \ i++){\n    if(i % 2 == 1 && lst[i] % 2 == 0){\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;", "  long res = 0;\n  int i = 0;\n  while (i < lst.size())\
    \ {\n    if (i % 2 == 1 && lst[i] % 2 == 0) {\n      res += lst[i];\n    }\n \
    \   i++;\n  }\n  return res;", "  long sum = 0;\n  for(int i = 1; i < lst.size();\
    \ i+=2) {\n    if(lst[i] % 2 == 0) {\n      sum += lst[i];\n    }\n  }\n  return\
    \ sum;", "  std::vector<long>::iterator i;\n  long sum=0;\n  for(i=lst.begin();i!=lst.end();i++)\n\
    \  {\n    if((i-lst.begin())%2!=0 && *i%2==0)\n    {\n      sum+=*i;\n    }\n\
    \  }\n  return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++)\
    \ {\n\t\tif (i % 2 == 1 && lst[i] % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t\
    }\n\treturn sum;", "  int length = lst.size();\n  int count = 0;\n  int ans =\
    \ 0;\n  for(int i = 0; i < length; i++) {\n    if(i % 2 == 0 && lst[i] % 2 ==\
    \ 0) {\n      ans += lst[i];\n    }\n  }\n  return ans;", "  long ans=0;\n  for(int\
    \ i=0;i<lst.size();i++){\n    if(i%2==1 && lst[i]%2==0){\n      ans+=lst[i];\n\
    \    }\n  }\n  return ans;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i += 2) {\n        if(lst[i] % 2 == 0) {\n            sum += lst[i];\n     \
    \   }\n    }\n    return sum;", "  long sum = 0;\n  for(int i = 0; i < lst.size();\
    \ i++){\n    if(i % 2 != 0){\n      if(lst[i] % 2 == 0){\n        sum += lst[i];\n\
    \      }\n    }\n  }\n  return sum;", "  long sum = 0;\n  int count = 0;\n  for(int\
    \ i = 0; i < lst.size(); i++) {\n    if(lst[i] % 2 == 0 && count % 2 != 0) {\n\
    \      sum += lst[i];\n    }\n    count++;\n  }\n  return sum;", "\tlong c=0;\n\
    \tfor(long i=0;i<lst.size();i+=2)\n\t\tif(lst[i]%2==0)\n\t\t\tc+=lst[i];\n\treturn\
    \ c;", "  int sum = 0;\n  for(int i = 0; i < lst.size(); i+=2)\n  {\n      if(lst[i]\
    \ % 2 == 0)\n        sum += lst[i];\n  }\n  return sum;", "  long sum=0;\n  for(int\
    \ i=0;i<lst.size();i++)\n  {\n    if(i%2==1)\n    {\n      if(lst[i]%2==0)\n \
    \     {\n        sum+=lst[i];\n      }\n    }\n  }\n  return sum;", "\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 1 && lst[i]\
    \ % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "    // what\
    \ I did was okay\n    // for(int i = 1; i < lst.size(); i += 2)\n    // {\n  \
    \  //     if(lst[i] % 2 == 0)\n    //     {\n    //         total += lst[i];\n\
    \    //     }\n    // }\n    // return total;\n    // I didn't get it, the question\
    \ was literally asking for the even numbers\n    // at odd indices..\n    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i % 2 ==\
    \ 1 && lst[i] % 2 == 0)\n        {\n            sum += lst[i];\n        }\n  \
    \  }\n    return sum;", "   int s=0;\n   for(int i=0;i<lst.size();i++)\n   {\n\
    \     if(i%2==1 && lst[i]%2==0)\n     {\n       s+=lst[i];\n     }\n   }\n   return\
    \ s;", "  int sz = lst.size();\n  long c = 0;\n  for(int i = 0; i < sz; i++){\n\
    \    if(i%2==1 && lst[i]%2==0){\n      c+=lst[i];\n    }\n  }\n  return c;", '  return
    accumulate(lst.begin()+1, lst.end(), 0L, [](long a, long b) {return a + (b & 1
    ? 0 : b);});', "\tlong evenSum = 0;\n\tint size = lst.size();\n\tfor (int i =\
    \ 0; i < size; i++) {\n\t\tif (i % 2 != 0 && lst[i] % 2 == 0) {\n\t\t\tevenSum\
    \ += lst[i];\n\t\t}\n\t}\n\treturn evenSum;", "  long sum = 0;\n  if (lst.size()\
    \ == 0) {\n    return 0;\n  }\n  for (unsigned i = 0; i < lst.size(); i++) {\n\
    \    if (i % 2 == 1 && lst[i] % 2 == 0) {\n      sum += lst[i];\n    }\n  }\n\
    \  return sum;", "\tlong odd=0;\n\tfor(int i=0;i<lst.size();i++){\n\t\tif(i%2==1&&lst[i]%2==0){\n\
    \t\t\todd+=lst[i];\n\t\t}\n\t}\n\treturn odd;", "  long sum = 0;\n  for(int i\
    \ = 0; i < lst.size(); i+=2)\n    if(lst[i] % 2 == 0)\n      sum += lst[i];\n\
    \  return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\
    \tif (i % 2 != 0 && lst[i] % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn\
    \ sum;", "    long sum = 0;\n    for(int i = 1; i < lst.size(); i+=2)\n    {\n\
    \        if(lst[i] % 2 == 0)\n        {\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;", "    int sz = lst.size();\n    long ans = 0;\n    for(int\
    \ i = 0; i < sz; i += 2) {\n        ans += lst[i];\n    }\n    return ans;", " \
    \ long result = 0;\n  for (int i = 0; i < lst.size(); i += 2) {\n    if (lst[i]\
    \ % 2 == 0) {\n      result += lst[i];\n    }\n  }\n  return result;", "  long\
    \ l=lst.size();\n  long sum=0;\n  for(long i=0;i<l;i+=2)\n  {\n    if(lst[i]%2==0)\n\
    \    {\n      sum+=lst[i];\n    }\n  }\n  return sum;", "  //TODO\n  long sum=0;\n\
    \  for(int i=0;i<lst.size();i++)\n  {\n    if(i%2!=0 && lst[i]%2==0)\n    {\n\
    \      sum+=lst[i];\n    }\n  }\n  return sum;", "  long sum = 0;\n  for(int i\
    \ = 0; i < lst.size(); i++) {\n    if(i % 2 != 0 && lst[i] % 2 == 0) {\n     \
    \ sum += lst[i];\n    }\n  }\n  return sum;", "    if(lst.size() == 0) return\
    \ 0;\n    long sum = 0;\n    for(int i = 0; i < lst.size(); i+=2)\n        sum\
    \ += lst[i];\n    return sum;", "  long sum = 0;\n  if (lst.size() < 2) {\n  \
    \  return 0;\n  }\n  for (int i = 1; i < lst.size(); i += 2) {\n    if (lst[i]\
    \ % 2 == 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  long sum =\
    \ 0;\n  for(int i = 0; i < lst.size(); i++) {\n    if(i % 2 != 0 && lst[i] % 2\
    \ == 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  long sum = 0;\n\
    \  for(int i = 1; i < lst.size(); i = i + 2)\n  {\n    if(lst[i] % 2 == 0)\n \
    \   {\n      sum += lst[i];\n    }\n  }\n  return sum;", "    int sum = 0;\n \
    \   for(int i = 0; i < lst.size(); i++) {\n        if (i % 2 != 0 && lst[i] %\
    \ 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;", " \
    \   int a = lst.size();\n    int sum = 0;\n    for(int i = 0; i < a; i++)\n  \
    \  {\n        if(i % 2 != 0 && lst[i] % 2 == 0)\n        {\n            sum +=\
    \ lst[i];\n        }\n    }\n    return sum;", '    return 0;', "  // your code\
    \ here\n  long sum=0;\n  for(int i=0;i<lst.size();i++)\n  {\n      if(i%2!=0)\n\
    \      {\n          if(lst[i]%2==0)\n          {\n              sum+=lst[i];\n\
    \          }\n      }\n  }\n  return sum;", "    std::vector<long> odd;\n    for(int\
    \ i=0;i<lst.size();i++){\n        if(i%2!=0 && lst[i]%2==0){\n            odd.push_back(lst[i]);\n\
    \        }\n    }\n    std::sort(odd.begin(),odd.end());\n    long sum=0;\n  \
    \  for(int i=0;i<odd.size();i++){\n        sum+=odd[i];\n    }\n    return sum;",
  "    long n=0;\n    for(int i=0;i<lst.size();i+=2)\n    {\n        if(lst[i]%2==0)\n\
    \        {\n            n+=lst[i];\n        }\n    }\n    return n;", "    long\
    \ sum = 0;\n    for(int i = 1; i < lst.size(); i += 2)\n        if(lst[i] % 2\
    \ == 0)\n            sum += lst[i];\n    return sum;", "    int sum = 0;\n   \
    \ for(int i = 1; i < lst.size(); i+=2)\n    {\n        if(lst[i] % 2 == 0)\n \
    \       {\n            sum += lst[i];\n        }\n    }\n    return sum;", " \
    \ long out = 0;\n  for(int i = 0; i < lst.size(); i+=2){\n    if(lst[i] % 2 ==\
    \ 0){\n      out += lst[i];\n    }\n  }\n  return out;", "  long sum = 0;\n  for(int\
    \ i = 0; i < lst.size(); i++) {\n    if(i % 2 == 1 && lst[i] % 2 == 0) {\n   \
    \   sum += lst[i];\n    }\n  }\n  return sum;", "  // your code here\n  long sum=0;\n\
    \  for(int i=0;i<lst.size();i++){\n    if(i%2!=0 && lst[i]%2==0){\n      sum+=lst[i];\n\
    \    }\n  }\n  return sum;", "\tlong s=0;\n\tfor(int i=0;i<lst.size();i++)\n\t\
    {\n\t\tif(i%2==1 && lst[i]%2==0)\n\t\t\ts+=lst[i];\n\t}\n\treturn s;", "  long\
    \ sum=0;\n  for(int i=0;i<lst.size();i++)\n  {\n    if(i%2==1 && lst[i]%2==0)\n\
    \    {\n      sum+=lst[i];\n    }\n  }\n  return sum;", "  long sum = 0;\n  for(int\
    \ i = 1; i < lst.size(); i += 2)\n    if(lst[i] % 2 == 0)\n      sum += lst[i];\n\
    \  return sum;", "    long sum = 0;\n    for(int i = 1; i < lst.size(); i += 2)\n\
    \        if(lst[i] % 2 == 0)\n            sum += lst[i];\n    return sum;", " \
    \ return std::accumulate(lst.begin() + 1, lst.end(), 0L, [](long c, long x) {\n\
    \    return c + (x % 2 == 0 ? x : 0);\n  });", "  long sum = 0;\n  for(long i\
    \ = 0; i < lst.size(); i++){\n    if(i % 2 == 1 && lst[i] % 2 == 0){\n      sum\
    \ += lst[i];\n    }\n  }\n  return sum;", "    long sum=0;\n    if(lst.size()==0)\n\
    \      return 0;\n    else{\n      for(int i=0;i<lst.size();i++){\n        if(i%2!=0\
    \ && lst[i]%2==0)\n          sum=sum+lst[i];\n      }\n    }\n    return sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(i % 2 !=\
    \ 0 && lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;", "\t\tlong sum = 0;\n\t\tfor(int i = 1; i < lst.size(); i++)\n\t\t{\n\t\
    \t\tif(lst[i] % 2 == 0 && i % 2 != 0)\n\t\t\t{\n\t\t\t\tsum += lst[i];\n\t\t\t\
    }\n\t\t}\n\t\treturn sum;", "    long sum = 0;\n    for(int i = 1; i < lst.size();\
    \ i = i + 2)\n    {\n        if(lst[i] % 2 == 0)\n        {\n            sum +=\
    \ lst[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n  for(int i =\
    \ 1; i < lst.size(); i++) {\n    if(lst[i] % 2 == 0) {\n      sum += lst[i];\n\
    \    }\n  }\n  return sum;", "    long a=0;\n    for(long x:lst)\n        if(x%2==0&&x%4==0)\n\
    \            a+=x;\n    return a;", "  long count = 0;\n  for(unsigned int i =\
    \ 0; i < lst.size(); i += 2) {\n    if(lst[i] % 2 == 0) {\n      count += lst[i];\n\
    \    }\n  }\n  return count;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if(i % 2 != 0 && lst[i] % 2 == 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 1; i\
    \ < lst.size(); i += 2) {\n        if(lst[i] % 2 == 0)\n            sum += lst[i];\n\
    \    }\n    return sum;", "  int j = 0;\n  int sum = 0;\n  for (int i = 0; i <\
    \ lst.size(); i++) {\n    if (i % 2 == 0) {\n      sum += lst[i];\n    }\n  }\n\
    \  return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n\
    \        if(i % 2 != 0 && lst[i] % 2 == 0)\n            sum += lst[i];\n    }\n\
    \    return sum;", "\tlong sum = 0;\n\tint i = 0;\n\tfor (auto j : lst) {\n\t\t\
    if ((i % 2 == 1) && (j % 2 == 0)) {\n\t\t\tsum += j;\n\t\t}\n\t\ti++;\n\t}\n\t\
    return sum;", "  long res = 0;\n  int i;\n  for(i=0;i<lst.size();i++)\n  {\n \
    \   if(i%2==0)\n    {\n      if(lst[i]%2==0)\n      {\n        res+=lst[i];\n\
    \      }\n    }\n  }\n  return res;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(i % 2 == 1 && lst[i] % 2 == 0)\n          \
    \  sum += lst[i];\n    }\n    return sum;", "    long answer = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(i % 2 != 0 && lst[i] % 2 == 0) {\n\
    \            answer += lst[i];\n        }\n    }\n    return answer;", "    long\
    \ sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(i%2==1){\n          \
    \  if(lst[i]%2==0){\n                sum+=lst[i];\n            }\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(i % 2 != 0 && lst[i] % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "  long sum = 0;\n  for(int i = 0; i < lst.size();\
    \ i++) {\n    if(i % 2 == 1 && lst[i] % 2 == 0) {\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;", "  long sum=0;\n  for(int i=0;i<lst.size();i++)\n  {\n \
    \   if(i%2==1)\n    {\n      if(lst[i]%2==0)\n      {\n        sum+=lst[i];\n\
    \      }\n    }\n  }\n  return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++){\n      if(i % 2 == 1){\n        if(lst[i] % 2 == 0){\n \
    \         sum += lst[i];\n        }\n      }\n    }\n    return sum;", "\tlong\
    \ sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 1 && lst[i]\
    \ % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "    int result\
    \ = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(i % 2 != 0 && lst[i]\
    \ % 2 == 0){\n            result += lst[i];\n        }\n    }\n    return result;",
  "    int sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(i % 2 !=\
    \ 0){\n            if(lst[i] % 2 == 0){\n                sum += lst[i];\n    \
    \        }\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(long\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0 && i % 2 != 0) {\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;", "  long sum=0;\n\
    \  for(int i=0;i<lst.size();i++){\n    if(i%2==1 && lst[i]%2==0){\n      sum+=lst[i];\n\
    \    }\n  }\n  return sum;", "    int length = lst.size();\n    int sum = 0;\n\
    \    for(int i = 1; i < length; i++)\n    {\n        if(lst[i] % 2 == 0)\n   \
    \     {\n            sum += lst[i];\n        }\n    }\n    return sum;", "   \
    \ long ans = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if((i\
    \ % 2 != 0) && (lst[i] % 2 == 0)) ans += lst[i];\n    }\n    return ans;", " \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(i % 2\
    \ == 1 && lst[i] % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;",
  "  int sum = 0;\n  for(int i = 0; i < lst.size(); i++) {\n    if(i % 2 == 1 && lst[i]\
    \ % 2 == 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "    long sum\
    \ = 0;\n    for(int i = 1; i < lst.size(); i += 2) {\n        if(lst[i] % 2 ==\
    \ 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;", "\tlong\
    \ sum = 0;\n\t// your code here\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\t\
    if (i % 2 == 1 && lst[i] % 2 == 0)\n\t\t\tsum += lst[i];\n\t}\n\treturn sum;",
  "  int i=0;\n  long sum=0;\n  while(i<lst.size()){\n    if(i%2==1){\n      sum=sum+lst[i];\n\
    \    }\n    i++;\n  }\n  return sum;", "    long sum=0;\n    for(long i=0;i<lst.size();i++)\n\
    \    {\n        if(i%2!=0 && lst[i]%2==0)\n        {\n            sum+=lst[i];\n\
    \        }\n    }\n    return sum;", "\tlong ans = 0;\n\tint l = lst.size();\n\
    \tfor (int i = 0; i < l; i++) {\n\t\tif (i % 2 != 0 && lst[i] % 2 == 0) {\n\t\t\
    \tans += lst[i];\n\t\t}\n\t}\n\treturn ans;", "    long long sum = 0;\n    for(int\
    \ i = 1; i < lst.size(); i += 2)\n    {\n        if(lst[i] % 2 == 0)\n       \
    \ {\n            sum += lst[i];\n        }\n    }\n    return sum;", "    long\
    \ ans = 0;\n    for(int i = 0; i < lst.size(); i+=2) {\n        if(lst[i] % 2\
    \ == 0) {\n            ans += lst[i];\n        }\n    }\n    return ans;", " \
    \   long i=0,sum=0;\n    while(i<lst.size())\n    {\n        if(i%2==0)\n    \
    \    {\n            if(lst[i]%2==0)\n            {\n                sum=sum+lst[i];\n\
    \            }\n        }\n        i++;\n    }\n    return sum;", "  long result\
    \ = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 != 0 && lst[i]\
    \ % 2 == 0) {\n      result += lst[i];\n    }\n  }\n  return result;", "  long\
    \ sum=0;\n  for(int i=0;i<lst.size();i+=2)\n  {\n    if(lst[i]%2==0)\n    {\n\
    \      sum+=lst[i];\n    }\n  }\n  return sum;", "    int i=0;\n    long sum=0;\n\
    \    for(std::vector<long>::iterator it=lst.begin();it!=lst.end();it++){\n   \
    \     if(i%2!=0){\n            if(*it%2==0){\n                sum+=*it;\n    \
    \        }\n        }\n        i++;\n    }\n    return sum;", "    int sum=0;\n\
    \    for(int i=0;i<lst.size();i++)\n    {\n        if(i%2==1 && lst[i]%2==0)\n\
    \        {\n            sum+=lst[i];\n        }\n    }\n    return sum;", "  int\
    \ sum = 0;\n  for(int i = 1; i < lst.size(); i += 2)\n  {\n    if(lst[i] % 2 ==\
    \ 0)\n    {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  long sum = 0;\n\
    \  for(int i = 1; i < lst.size(); i += 2) {\n    if(lst[i] % 2 == 0) {\n     \
    \ sum += lst[i];\n    }\n  }\n  return sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++)\n\
    \    {\n      if(i%2!=0 && lst[i]%2==0)\n        sum+=lst[i];\n    }\n    return\
    \ sum;", "  int size = lst.size();\n  int sum = 0;\n  for(int i = 0; i < size;\
    \ i++) {\n    if(lst[i] % 2 == 0 && i % 2 != 0) {\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;", "    int j=1;\n    int s=0;\n    for(int i=0;i<lst.size();i++)\n\
    \    {\n        if(lst[i]%2==0&&j%2!=0)\n        {\n            s=s+lst[i];\n\
    \        }\n        j++;\n    }\n    return s;", "  int sum = 0;\n  for(int i\
    \ = 0; i < lst.size(); i++) {\n    if(i % 2 != 0 && lst[i] % 2 == 0) {\n     \
    \ sum += lst[i];\n    }\n  }\n  return sum;", "    int n = lst.size();\n    int\
    \ sum = 0;\n    for(int i = 0; i < n; i++){\n        if(lst[i] % 2 == 0 && i %\
    \ 2 != 0){\n            sum += lst[i];\n        }\n    }\n    return sum;", " \
    \ long sum = 0;\n  for(int i = 1; i < lst.size(); i+=2)\n    sum += lst[i];\n\
    \  return sum;", "    long sum = 0;\n    for(int i = 1; i < lst.size(); i+=2)\
    \ {\n        if(lst[i] % 2 == 0) {\n            sum += lst[i];\n        }\n  \
    \  }\n    return sum;", "  long sum = 0;\n  for(int i = 1; i < lst.size(); i+=2)\n\
    \    if(lst[i] % 2 == 0)\n      sum += lst[i];\n  return sum;", "    // your code\
    \ here\n    long sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(i%2==1\
    \ && lst[i]%2==0){\n            sum+=lst[i];\n        }\n    }\n    return sum;",
  "  long result = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if ((i + 1) %\
    \ 2 != 0 && lst[i] % 2 == 0) {\n      result += lst[i];\n    }\n  }\n  return\
    \ result;", "  long result = 0;\n  for (int i = 0; i < lst.size(); i++) {\n  \
    \  if (i % 2 != 0 && lst[i] % 2 == 0) {\n      result += lst[i];\n    }\n  }\n\
    \  return result;", "  long ans = 0;\n  for(int i = 0; i < lst.size(); i++){\n\
    \    if(lst[i] % 2 == 0 && i % 2 != 0){\n      ans += lst[i];\n    }\n  }\n  return\
    \ ans;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i\
    \ % 2 == 1 && lst[i] % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;",
  "\tlong result=0;\n\tfor(int i=0;i<lst.size();i++)\n\t{\n\t\tif(i%2==1 && lst[i]%2==0)\n\
    \t\t{\n\t\t\tresult+=lst[i];\n\t\t}\n\t}\n\treturn result;", "  long result =\
    \ 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 != 0 && lst[i] %\
    \ 2 == 0) {\n      result += lst[i];\n    }\n  }\n  return result;", "\tlong ans\
    \ = 0;\n\tfor (long i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 1 && lst[i]\
    \ % 2 == 0)\n\t\t\tans += lst[i];\n\t}\n\treturn ans;"]
stop_tokens:
- "\n}"

name: HumanEval_140_fix_spaces
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string result = \"\";\n\t\
    int spaces = 0;\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i]\
    \ == ' ') {\n\t\t\tspaces++;\n\t\t}\n\t\telse {\n\t\t\tif (spaces == 1) {\n\t\t\
    \t\tresult += '_';\n\t\t\t}\n\t\t\telse if (spaces > 1) {\n\t\t\t\tresult += '-';\n\
    \t\t\t}\n\t\t\tspaces = 0;\n\t\t\tresult += text[i];\n\t\t}\n\t}\n\tif (spaces\
    \ == 1) {\n\t\tresult += '_';\n\t}\n\telse if (spaces > 1) {\n\t\tresult += '-';\n\
    \t}\n\treturn result;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpgoh1kwxs: /tmp/tmpgoh1kwxs.cpp:40: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    return text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpd3qw4m1j: /tmp/tmpd3qw4m1j.cpp:16: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\t// int i = 0;\n\t// while(i <\
    \ text.length() - 1){\n\t// \tif(text[i] == ' '){\n\t// \t\tint j = i;\n\t// \t\
    \tif(text[j] == ' '){\n\t// \t\t\twhile(text[j] == ' '){\n\t// \t\t\t\tj++;\n\t\
    // \t\t\t}\n\t// \t\t\ttext.replace(i, j - i, \"-\");\n\t// \t\t}else{\n\t// \t\
    \t\ttext.replace(i, 1, \"_\");\n\t// \t\t}\n\t// \t}\n\t// \ti++;\n\t// }\n\t\
    std::replace(text.begin(), text.end(), ' ', '_');\n\tstd::stringstream text_stream(text);\n\
    \tstd::string temp;\n\tstd::string final;\n\twhile(text_stream >> temp){\n\t\t\
    final += temp;\n\t\tif(text_stream.peek() == '_'){\n\t\t\ttext_stream.ignore();\n\
    \t\t\tfinal += '-';\n\t\t}\n\t}\n\treturn final;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpy25i5b41: /tmp/tmpy25i5b41.cpp:44: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::regex multipleSpaces(\"\
    \  +\");\n    std::string newText = std::regex_replace(text, multipleSpaces, \"\
    -\");\n    std::regex singleSpace(\" \");\n    return std::regex_replace(newText,\
    \ singleSpace, \"_\");\n}\nint main() {\n    auto candidate = fix_spaces;\n  \
    \  assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpc_5v8xro: /tmp/tmpc_5v8xro.cpp:20: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int n = text.size();\n    int\
    \ s = 0;\n    int c = 0;\n    for(int i = 0; i < n; i++) {\n        if(text[i]\
    \ == ' ') c++;\n        else c = 0;\n        if(c > 2) c = 2;\n        text[s++]\
    \ = text[i];\n        if(c == 2) text[s++] = '-';\n        if(c == 1) text[s++]\
    \ = '_';\n    }\n    text.resize(s);\n    return text;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpschrjv2i: /tmp/tmpschrjv2i.cpp:28: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    for(int i = 0; i < text.size();\
    \ i++) {\n        if(text[i] == ' ') {\n            text[i] = '_';\n        }\n\
    \    }\n    int count = 0;\n    for(int i = 0; i < text.size(); i++) {\n     \
    \   if(text[i] == '_') {\n            count++;\n        }\n        else {\n  \
    \          count = 0;\n        }\n        if(count > 2) {\n            text[i]\
    \ = '-';\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp5gnumsxg: /tmp/tmp5gnumsxg.cpp:35: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int count = 0;\n    for (int\
    \ i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n          \
    \  count++;\n        }\n        else {\n            count = 0;\n        }\n  \
    \      if (count == 2) {\n            text[i - 1] = '-';\n            count =\
    \ 1;\n        }\n        else if (count > 2) {\n            text[i] = '-';\n \
    \       }\n    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp6wdmkdhm: /tmp/tmp6wdmkdhm.cpp:32: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tfor (int i = 0; i < text.size();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tif (i == 0) {\n\t\t\t\tif (text[i +\
    \ 1] == ' ') {\n\t\t\t\t\ttext[i] = '-';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t\
    text[i] = '_';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (i == text.size() - 1) {\n\t\
    \t\t\tif (text[i - 1] == ' ') {\n\t\t\t\t\ttext[i] = '-';\n\t\t\t\t}\n\t\t\t\t\
    else {\n\t\t\t\t\ttext[i] = '_';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif\
    \ (text[i - 1] == ' ' && text[i + 1] == ' ') {\n\t\t\t\t\ttext[i] = '-';\n\t\t\
    \t\t}\n\t\t\t\telse if (text[i - 1] == ' ' && text[i + 1] != ' ') {\n\t\t\t\t\t\
    text[i] = '_';\n\t\t\t\t}\n\t\t\t\telse if (text[i - 1] != ' ' && text[i + 1]\
    \ == ' ') {\n\t\t\t\t\ttext[i] = '_';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttext[i]\
    \ = '_';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn text;\n}\nint main() {\n  \
    \  auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp5jlqp9mp: /tmp/tmp5jlqp9mp.cpp:52: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string fixed;\n    bool\
    \ prev = false;\n    for (auto ch : text) {\n        if (ch == ' ') {\n      \
    \      if (prev) {\n                fixed += '-';\n            } else {\n    \
    \            fixed += '_';\n                prev = true;\n            }\n    \
    \    } else {\n            fixed += ch;\n            prev = false;\n        }\n\
    \    }\n    return fixed;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp2vdke015: /tmp/tmp2vdke015.cpp:32: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  int counter = 0;\n  for (int i\
    \ = 0; i < text.size(); i++) {\n    if (text[i] == ' ') {\n      counter++;\n\
    \    } else {\n      counter = 0;\n    }\n    if (counter == 2) {\n      counter\
    \ = 0;\n      text[i] = '-';\n    } else if (counter == 1) {\n      text[i] =\
    \ '_';\n    }\n  }\n  return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpnxmda5h8: /tmp/tmpnxmda5h8.cpp:31: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string fixed_text;\n  \
    \  bool last_under = false;\n    for (auto c : text) {\n        if (c == ' ')\
    \ {\n            if (last_under) {\n                fixed_text += '-';\n     \
    \       } else {\n                fixed_text += '_';\n                last_under\
    \ = true;\n            }\n        } else {\n            fixed_text += c;\n   \
    \         last_under = false;\n        }\n    }\n    return fixed_text;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpst36q66p: /tmp/tmpst36q66p.cpp:32: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string new_text = \"\"\
    ;\n    int spaces = 0;\n    for (size_t i = 0; i < text.size(); i++) {\n     \
    \   if (text[i] == ' ') {\n            spaces++;\n            if (spaces > 2)\
    \ {\n                new_text += '-';\n                while (text[i] == ' ')\
    \ {\n                    i++;\n                }\n                i--;\n     \
    \       } else {\n                new_text += '_';\n            }\n        } else\
    \ {\n            new_text += text[i];\n            spaces = 0;\n        }\n  \
    \  }\n    return new_text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpkjfu1n04: /tmp/tmpkjfu1n04.cpp:37: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string output;\n    int\
    \ count=0;\n    for(int i=0;i<text.length();i++){\n        if(text[i]==' ')\n\
    \            count++;\n        else\n            count=0;\n        if(count>2){\n\
    \            output+='-';\n            count=0;\n        }\n        else if(text[i]=='\
    \ ')\n            output+='_';\n        else\n            output+=text[i];\n \
    \   }\n    return output;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpxrp42iq6: /tmp/tmpxrp42iq6.cpp:34: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::regex re(\"\\\\s+\");\n\
    \    text = std::regex_replace(text, re, \"_\");\n    std::regex re2(\"_+\");\n\
    \    text = std::regex_replace(text, re2, \"-\");\n    return text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpty5keeuj: /tmp/tmpty5keeuj.cpp:20: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    if(text.empty())\n        return\
    \ text;\n    std::string answer = \"\";\n    int flag = 0;\n    for(int i = 0;\
    \ i < text.size(); i++) {\n        if(text[i] == ' ') {\n            if(flag ==\
    \ 0) {\n                answer += \"_\";\n                flag = 1;\n        \
    \    }\n            else {\n                answer += \"-\";\n            }\n\
    \        }\n        else {\n            answer += text[i];\n            flag =\
    \ 0;\n        }\n    }\n    return answer;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp35iso4c6: /tmp/tmp35iso4c6.cpp:36: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  int j = 0;\n  int spaces = 0;\n\
    \  for (int i = 0; i < text.size(); i++) {\n    if (text[i] == ' ') {\n      spaces++;\n\
    \    } else {\n      if (spaces == 1) {\n        text[j++] = '_';\n      } else\
    \ if (spaces >= 2) {\n        text[j++] = '-';\n      }\n      spaces = 0;\n \
    \     text[j++] = text[i];\n    }\n  }\n  if (spaces == 1) {\n    text[j++] =\
    \ '_';\n  } else if (spaces >= 2) {\n    text[j++] = '-';\n  }\n  text = text.substr(0,\
    \ j);\n  return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp9vgdfon1: /tmp/tmp9vgdfon1.cpp:38: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\t\n\tfor(int i=0;i<text.length();i++)\n\
    \t{\n\t\tif(text[i]==' ')\n\t\t{\n\t\t\ttext[i]='_';\n\t\t}\n\t}\n\tint count=0;\n\
    \tfor(int i=0;i<text.length();i++)\n\t{\n\t\tif(text[i]=='_')\n\t\t{\n\t\t\tcount++;\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\tcount=0;\n\t\t}\n\t\tif(count>2)\n\t\t{\n\t\t\t\
    text[i]='-';\n\t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp17anft9r: /tmp/tmp17anft9r.cpp:42: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  int len = text.length();\n  for(int\
    \ i = 0; i < len; i++) {\n    if(text[i] == ' ') {\n      text[i] = '_';\n   \
    \ }\n  }\n  for(int i = 0; i < len; i++) {\n    if(text[i] == '_' && text[i+1]\
    \ == '_' && text[i+2] == '_') {\n      text[i] = '-';\n      text[i+1] = '-';\n\
    \      text[i+2] = '-';\n    }\n  }\n  return text;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp4rx1q38c: /tmp/tmp4rx1q38c.cpp:31: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tfor (int i = 0; i < text.size();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\ttext[i] = '_';\n\t\t\tint k = i + 1;\n\
    \t\t\twhile (text[k] == ' ') {\n\t\t\t\ttext[k] = '-';\n\t\t\t\tk++;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmph9kmit2u: /tmp/tmph9kmit2u.cpp:27: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    if(text.size() == 0)\n     \
    \   return text;\n    std::string res;\n    int count = 0;\n    for(int i = 0;\
    \ i < text.size(); i++) {\n        if(text[i] == ' ' && i != 0) {\n          \
    \  if(text[i-1] == ' ') {\n                if(count != 0)\n                  \
    \  res += '-';\n                count++;\n            }\n            else {\n\
    \                res += '_';\n                count = 0;\n            }\n    \
    \    }\n        else {\n            res += text[i];\n            count = 0;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpjog61sc1: /tmp/tmpjog61sc1.cpp:38: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string s = \"\";\n    int\
    \ cnt = 0;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] ==\
    \ ' ') {\n            cnt++;\n            if(cnt > 2) continue;\n            else\
    \ s += \"_\";\n        } else {\n            s += text[i];\n            cnt =\
    \ 0;\n        }\n    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp_e4cqqow: /tmp/tmp_e4cqqow.cpp:30: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string output;\n    for\
    \ (char c : text) {\n        if (c == ' ') {\n            if (output.back() ==\
    \ ' ') {\n                output.pop_back();\n                output += '-';\n\
    \            } else {\n                output += '_';\n            }\n       \
    \ } else {\n            output += c;\n        }\n    }\n    return output;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp1wq6i568: /tmp/tmp1wq6i568.cpp:31: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tfor (size_t i = 0; i < text.size();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tsize_t count = 0;\n\t\t\twhile (text[i]\
    \ == ' ') {\n\t\t\t\tcount++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (count == 1) {\n\
    \t\t\t\ttext[i - 1] = '_';\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext[i - 1] = '-';\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmps0h418hd: /tmp/tmps0h418hd.cpp:32: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint i = 0;\n\tint spaces_count\
    \ = 0;\n\twhile (i < text.length()) {\n\t\tif (text[i] == ' ') {\n\t\t\tspaces_count++;\n\
    \t\t\tint j = i + 1;\n\t\t\twhile (j < text.length() && text[j] == ' ') {\n\t\t\
    \t\tspaces_count++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif (spaces_count > 2) {\n\t\t\
    \t\ttext.replace(i, spaces_count, \"-\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext.replace(i,\
    \ spaces_count, \"_\");\n\t\t\t}\n\t\t\ti = j;\n\t\t\tspaces_count = 0;\n\t\t\
    }\n\t\telse {\n\t\t\ti++;\n\t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpd1feo30t: /tmp/tmpd1feo30t.cpp:40: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count=0;\n    for(char c: text){\n        if(c==' '){\n            count++;\n\
    \            if(count==1){\n                result+=c;\n            }else if(count>2){\n\
    \                result+='-';\n            }\n        }else{\n            count=0;\n\
    \            result+=c;\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp3gvnwtlu: /tmp/tmp3gvnwtlu.cpp:31: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // if the string is empty\n\
    \    if(text.empty()) {\n        return \"\";\n    }\n    // if the string has\
    \ only one character\n    if(text.size() == 1) {\n        return text;\n    }\n\
    \    // checking if the string has only one space\n    if(text.size() == 2 &&\
    \ text[0] == ' ') {\n        return \"_\";\n    }\n    // special cases\n    if(text.size()\
    \ == 2 && text[1] == ' ') {\n        return text[0] + \"_\";\n    }\n    if(text.size()\
    \ == 3 && text[1] == ' ') {\n        return text[0] + \"_\" + text[2];\n    }\n\
    \    // if not, then we start changing spaces with \"_\"\n    for(unsigned int\
    \ i = 0; i < text.size(); i++) {\n        if(text[i] == ' ') {\n            text[i]\
    \ = '_';\n        }\n    }\n    // now we check if there are consecutive spaces\n\
    \    for(unsigned int i = 0; i < text.size(); i++) {\n        if(text[i] == '_'\
    \ && text[i + 1] == '_') {\n            // and if there are, then we change them\
    \ with \"-\"\n            text[i] = '-';\n        }\n    }\n    return text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpivirtpf3: /tmp/tmpivirtpf3.cpp:49: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // TODO\n    int numSpaces =\
    \ 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\
    \ ') {\n            numSpaces++;\n        }\n    }\n    if (numSpaces == 0) {\n\
    \        return text;\n    }\n    std::string result = \"\";\n    int j = 0;\n\
    \    while (text[j] == ' ') {\n        result = \"_\";\n        j++;\n    }\n\
    \    while (j < text.length()) {\n        while (text[j] == ' ') {\n         \
    \   int index = j;\n            while (text[index] == ' ') {\n               \
    \ result += '-';\n                index++;\n            }\n            j = index;\n\
    \        }\n        if (text[j] != ' ') {\n            result += text[j];\n  \
    \      }\n        j++;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp_pig22il: /tmp/tmp_pig22il.cpp:46: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    for(int i = 0; i < text.size();\
    \ i++) {\n        if(text[i] == ' ') {\n            text[i] = '_';\n        }\n\
    \    }\n    int cnt = 0;\n    for(int i = 0; i < text.size(); i++) {\n       \
    \ if(text[i] == '_') {\n            cnt++;\n        } else {\n            cnt\
    \ = 0;\n        }\n        if(cnt > 2) {\n            text[i] = '-';\n       \
    \ }\n    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpei_zehpz: /tmp/tmpei_zehpz.cpp:34: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  std::vector<char> text_in_chars{};\n\
    \  for (const auto &char_ : text) {\n    text_in_chars.push_back(char_);\n  }\n\
    \  for (auto &char_ : text_in_chars) {\n    if (char_ == ' ') {\n      char_ =\
    \ '_';\n    }\n  }\n  std::vector<int> count_spaces_in_row{};\n  int count_spaces\
    \ = 0;\n  for (int i = 0; i < text_in_chars.size(); ++i) {\n    if (text_in_chars[i]\
    \ == '_') {\n      count_spaces++;\n    } else {\n      count_spaces_in_row.push_back(count_spaces);\n\
    \      count_spaces = 0;\n    }\n  }\n  std::vector<int> indexes_for_replacement{};\n\
    \  for (int i = 0; i < count_spaces_in_row.size(); ++i) {\n    if (count_spaces_in_row[i]\
    \ > 2) {\n      indexes_for_replacement.push_back(i);\n    }\n  }\n  for (const\
    \ auto &index : indexes_for_replacement) {\n    text_in_chars[index] = '-';\n\
    \  }\n  std::string result{};\n  for (const auto &char_ : text_in_chars) {\n \
    \   result += char_;\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpxs2wya08: /tmp/tmpxs2wya08.cpp:50: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int count = 0;\n    string result;\n\
    \    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ')\n  \
    \          count++;\n        else {\n            count = 0;\n        }\n     \
    \   if(count == 1)\n            result.push_back('_');\n        else if(count\
    \ == 2)\n            result.push_back('-');\n        else if(count > 2)\n    \
    \        continue;\n        else\n            result.push_back(text[i]);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n \
    \   assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp__xufl44.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmp__xufl44.cpp:12:5: error: \u2018string\u2019 was not declared in this\
    \ scope\n   12 |     string result;\n      |     ^~~~~~\n/tmp/tmp__xufl44.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/11/iosfwd:39,\n\
    \                 from /usr/include/c++/11/ios:38,\n                 from /usr/include/c++/11/istream:38,\n\
    \                 from /usr/include/c++/11/sstream:38,\n                 from\
    \ /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp__xufl44.cpp:2:\n/usr/include/c++/11/bits/stringfwd.h:79:33:\
    \ note:   \u2018std::string\u2019\n   79 |   typedef basic_string<char>    string;\n\
    \      |                                 ^~~~~~\nIn file included from /usr/include/c++/11/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/11/bits/ios_base.h:41,\n             \
    \    from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n\
    \                 from /usr/include/c++/11/sstream:38,\n                 from\
    \ /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp__xufl44.cpp:2:\n/usr/include/c++/11/string:67:11:\
    \ note:   \u2018std::pmr::string\u2019\n   67 |     using string    = basic_string<char>;\n\
    \      |           ^~~~~~\n/tmp/tmp__xufl44.cpp:20:13: error: \u2018result\u2019\
    \ was not declared in this scope\n   20 |             result.push_back('_');\n\
    \      |             ^~~~~~\n/tmp/tmp__xufl44.cpp:22:13: error: \u2018result\u2019\
    \ was not declared in this scope\n   22 |             result.push_back('-');\n\
    \      |             ^~~~~~\n/tmp/tmp__xufl44.cpp:26:13: error: \u2018result\u2019\
    \ was not declared in this scope\n   26 |             result.push_back(text[i]);\n\
    \      |             ^~~~~~\n/tmp/tmp__xufl44.cpp:28:12: error: \u2018result\u2019\
    \ was not declared in this scope\n   28 |     return resul"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int size = text.size();\n  \
    \  std::string result = \"\";\n    char previous;\n    for(int i = 0; i < size;\
    \ i++) {\n        if(i == 0) {\n            previous = text[i];\n            if(previous\
    \ == ' ') {\n                result += '_';\n            } else {\n          \
    \      result += previous;\n            }\n        } else {\n            if(previous\
    \ == ' ' && text[i] == ' ') {\n                result += '-';\n            } else\
    \ if(previous == ' ' && text[i] != ' ') {\n                result += '_';\n  \
    \              result += text[i];\n            } else {\n                result\
    \ += text[i];\n            }\n            previous = text[i];\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n \
    \   assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpby6mlore: /tmp/tmpby6mlore.cpp:39: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint j = 0;\n\tfor (int i = 0;\
    \ i < text.size(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\ttext[j++] = '_';\n\
    \t\t\twhile (text[i] == ' ') {\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ti--;\n\t\t}\n\t\t\
    else {\n\t\t\ttext[j++] = text[i];\n\t\t}\n\t}\n\ttext.resize(j);\n\treturn text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp7tep9bka: /tmp/tmp7tep9bka.cpp:30: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string str = \"\";\n  \
    \  for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ') {\n  \
    \          str += '_';\n            int j = i + 1;\n            while(text[j]\
    \ == ' ') {\n                j++;\n            }\n            i = j - 1;\n   \
    \     } else {\n            str += text[i];\n        }\n    }\n    return str;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp0k3ji5mr: /tmp/tmp0k3ji5mr.cpp:30: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  std::string answer = \"\";\n \
    \ if (text[0] == ' ') {\n      answer += '_';\n  }\n  for (int i = 0; i < text.size();\
    \ i++) {\n      if (text[i] == ' ') {\n          int count = 0;\n          while\
    \ (text[i] == ' ') {\n              count++;\n              i++;\n          }\n\
    \          if (count >= 2) {\n              answer += '-';\n          } else {\n\
    \              answer += '_';\n          }\n          i--;\n      } else {\n \
    \         answer += text[i];\n      }\n  }\n  return answer;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp2v0v_v5n: /tmp/tmp2v0v_v5n.cpp:38: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string res;\n    int flag\
    \ = 0;\n    int count = 0;\n    for(int i = 0; i < text.size(); i++) {\n     \
    \   if(text[i] == ' ') {\n            count++;\n            if(count >= 2) {\n\
    \                if(flag == 0) {\n                    res += '-';\n          \
    \          flag = 1;\n                }\n            }\n            else {\n \
    \               res += '_';\n            }\n        }\n        else {\n      \
    \      res += text[i];\n            count = 0;\n            flag = 0;\n      \
    \  }\n    }\n    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpns2pr993: /tmp/tmpns2pr993.cpp:39: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n\
    \            result += \"_\";\n            if (text[i+1] == ' ') {\n         \
    \       while (text[i+1] == ' ') {\n                    result += \"-\";\n   \
    \                 i++;\n                }\n            }\n        } else {\n \
    \           result += text[i];\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp6z9j66a2: /tmp/tmp6z9j66a2.cpp:31: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tfor (int i = 0; i < text.size();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\ttext[i] = '_';\n\t\t\twhile (text[i\
    \ + 1] == ' ') {\n\t\t\t\ttext[i] = '-';\n\t\t\t\ttext.erase(i + 1, 1);\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp0cq018wz: /tmp/tmp0cq018wz.cpp:26: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ space_cnt = 0;\n    for (auto ch: text) {\n        if (ch == ' ') {\n      \
    \      ++space_cnt;\n        } else {\n            space_cnt = 0;\n        }\n\
    \        if (space_cnt == 1) {\n            result += '_';\n        } else if\
    \ (space_cnt > 2) {\n            result += '-';\n        } else {\n          \
    \  result += ch;\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpfrpxevul: /tmp/tmpfrpxevul.cpp:33: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string ret = \"\";\n  \
    \  for (size_t i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n\
    \            if (i == 0) {\n                ret += '_';\n            } else if\
    \ (i > 0 && text[i-1] == ' ') {\n                if (i < text.size()-1 && text[i+1]\
    \ == ' ') {\n                    ret += '-';\n                } else {\n     \
    \               ret += '_';\n                }\n            } else {\n       \
    \         ret += '_';\n            }\n        } else {\n            ret += text[i];\n\
    \        }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpbzja5zrw: /tmp/tmpbzja5zrw.cpp:36: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string ans;\n    int c\
    \ = 0;\n    for(auto x: text) {\n        if(x == ' ') {\n            c++;\n  \
    \          if(c == 1) {\n                ans += '_';\n            }\n        \
    \    else if(c == 2) {\n                ans += '-';\n            }\n        }\n\
    \        else {\n            c = 0;\n            ans += x;\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpw2onvcxw: /tmp/tmpw2onvcxw.cpp:34: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string newText = \"\";\n\t\
    bool isSpace = false;\n\tint counter = 0;\n\tfor (int i = 0; i < text.length();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tif (isSpace) {\n\t\t\t\tcounter++;\n\
    \t\t\t\tif (counter > 2) {\n\t\t\t\t\tcounter = 0;\n\t\t\t\t\tisSpace = false;\n\
    \t\t\t\t\tnewText += '-';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tisSpace =\
    \ true;\n\t\t\t\tnewText += '_';\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tisSpace =\
    \ false;\n\t\t\tcounter = 0;\n\t\t\tnewText += text[i];\n\t\t}\n\t}\n\treturn\
    \ newText;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpwxl8p_1n: /tmp/tmpwxl8p_1n.cpp:41: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // Write your code here\n  \
    \  // Trying to replace spaces with _\n    int i = 0;\n    for(i = 0; i < text.length();\
    \ i++) {\n        if(text[i] == ' ') {\n            text[i] = '_';\n        }\n\
    \    }\n    i = 0;\n    while(i < text.length()) {\n        if(text[i] == '_')\
    \ {\n            int j = i;\n            while(text[j] == '_') {\n           \
    \     j++;\n            }\n            if(j - i > 2) {\n                // replace\
    \ all consecutive spaces with -\n                for(int k = i; k < j; k++) {\n\
    \                    text[k] = '-';\n                }\n            }\n      \
    \      i = j;\n        }\n        else {\n            i++;\n        }\n    }\n\
    \    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpet93ry_c: /tmp/tmpet93ry_c.cpp:45: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int l = text.length();\n   \
    \ if(l == 0) {\n        return text;\n    }\n    int prev = text[0] == ' ';\n\
    \    for(int i = 1; i < l; i++) {\n        if(text[i] == ' ') {\n            if(prev)\
    \ {\n                text[i] = '-';\n            } else {\n                text[i]\
    \ = '_';\n            }\n            prev = 1;\n        } else {\n           \
    \ prev = 0;\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpc6nvhdn6: /tmp/tmpc6nvhdn6.cpp:34: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int flag = 0;\n    std::string\
    \ result = \"\";\n    int current_space_count = 0;\n    for(int i = 0; i < text.length();\
    \ i++) {\n        if(text[i] == ' ') {\n            if(current_space_count > 0)\
    \ {\n                current_space_count++;\n            } else {\n          \
    \      current_space_count = 1;\n            }\n        } else {\n           \
    \ if(current_space_count > 0) {\n                if(current_space_count == 1)\
    \ {\n                    result += \"_\";\n                } else {\n        \
    \            result += \"-\";\n                }\n                current_space_count\
    \ = 0;\n            }\n            result += text[i];\n        }\n    }\n    if(current_space_count\
    \ > 0) {\n        if(current_space_count == 1) {\n            result += \"_\"\
    ;\n        } else {\n            result += \"-\";\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpaxen5mso: /tmp/tmpaxen5mso.cpp:46: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint count = 0;\n\tfor (char c\
    \ : text) {\n\t\tif (c == ' ') {\n\t\t\tcount++;\n\t\t}\n\t\telse {\n\t\t\tcount\
    \ = 0;\n\t\t}\n\t\tif (count > 2) {\n\t\t\ttext.erase(text.begin() + (c - text.begin()));\n\
    \t\t\ttext.insert(c - text.begin(), '-');\n\t\t}\n\t}\n\tfor (char& c : text)\
    \ {\n\t\tif (c == ' ') {\n\t\t\tc = '_';\n\t\t}\n\t}\n\treturn text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx6l8lnj5.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmpx6l8lnj5.cpp:20:54: error: no match for \u2018operator-\u2019 (operand\
    \ types are \u2018char\u2019 and \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    )\n   20 |                         text.erase(text.begin() + (c - text.begin()));\n\
    \      |                                                    ~ ^ ~~~~~~~~~~~~\n\
    \      |                                                    |             |\n\
    \      |                                                    char          std::__cxx11::basic_string<char>::iterator\n\
    In file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n          \
    \       from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpx6l8lnj5.cpp:2:\n/usr/include/c++/11/bits/stl_iterator.h:560:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> constexpr\
    \ decltype ((__y.base() - __x.base())) std::operator-(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_IteratorR>&)\u2019\n  560 |     operator-(const\
    \ reverse_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:560:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpx6l8lnj5.cpp:20:67:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018char\u2019\n   20 |                         text.erase(text.begin()\
    \ + (c - text.begin()));\n      |                                            \
    \                       ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/11/bits/specfun.h:45,\n              \
    \   from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpx6l8lnj5.cpp:2:\n/usr/include/c++/11/bits/stl_iterator.h:1639:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> constexpr\
    \ decltype ((__x.base() - __y.base())) std::operator-(const st"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // Add your code here\n    std::string\
    \ str;\n    int i = 0;\n    int count = 0;\n    int size = text.size();\n    while(i\
    \ < size) {\n        if(text[i] == ' ') {\n            count++;\n            if(count\
    \ == 2) {\n                str = str + '-';\n                count = 0;\n    \
    \        }\n        }\n        else {\n            str = str + text[i];\n    \
    \        count = 0;\n        }\n        i++;\n    }\n    return str;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpk6x2nn14: /tmp/tmpk6x2nn14.cpp:35: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  std::string result = \"\";\n \
    \ int spaces_count = 0;\n  for (size_t i = 0; i < text.size(); i++) {\n    if\
    \ (text[i] == ' ') {\n      spaces_count++;\n    } else {\n      spaces_count\
    \ = 0;\n    }\n    if (spaces_count == 2) {\n      result += '-';\n      spaces_count\
    \ = 0;\n    } else if (spaces_count == 1) {\n      result += '_';\n    } else\
    \ {\n      result += text[i];\n    }\n  }\n  return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp2gnr74m2: /tmp/tmp2gnr74m2.cpp:34: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string ret = \"\";\n  \
    \  int spaceCount = 0;\n    for(char &ch : text) {\n        if(ch == ' ') {\n\
    \            ++spaceCount;\n            if(spaceCount == 1) {\n              \
    \  ret += '_';\n            }\n        } else {\n            if(spaceCount > 2)\
    \ {\n                ret += '-';\n            }\n            spaceCount = 0;\n\
    \            ret += ch;\n        }\n    }\n    return ret;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmphecosr22: /tmp/tmphecosr22.cpp:33: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int num_spaces = 0;\n    int\
    \ len = text.length();\n    for (int i = 0; i < len; i++) {\n        if (text[i]\
    \ == ' ') {\n            num_spaces++;\n        }\n    }\n    int new_len = len\
    \ + num_spaces*2;\n    char s[new_len];\n    // int start = new_len-1;\n    for\
    \ (int i = len-1; i >= 0; i--) {\n        if (text[i] == ' ') {\n            num_spaces--;\n\
    \            if (num_spaces == 0) {\n                s[new_len-1] = '_';\n   \
    \             new_len--;\n            } else {\n                s[new_len-1] =\
    \ '-';\n                new_len--;\n            }\n        } else {\n        \
    \    s[new_len-1] = text[i];\n            new_len--;\n        }\n    }\n    //\
    \ std::cout << text.c_str() << \" : \" << s << std::endl;\n    return std::string(s);\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpz9c559z_: /tmp/tmpz9c559z_.cpp:42: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int j = 0;\n    int spaces =\
    \ 0;\n    std::string res = \"\";\n    if(text[0] == ' ') res = \"_\";\n    while(j\
    \ < text.length()){\n        if(text[j] == ' ') spaces++;\n        else spaces\
    \ = 0;\n        if(spaces > 2) spaces = 2;\n        if(spaces == 2) res += \"\
    -\";\n        else res += text[j];\n        j++;\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpkwyjeiuy: /tmp/tmpkwyjeiuy.cpp:28: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string new_text = \"\"\
    ;\n    std::string prev_text = \"\";\n    for (char c : text) {\n        if (c\
    \ == ' ') {\n            if (prev_text == \"\") {\n                new_text +=\
    \ \"_\";\n                prev_text = \"_\";\n            } else if (prev_text\
    \ == \" \") {\n                new_text += \"-\";\n                prev_text =\
    \ \"-\";\n            } else {\n                new_text += \" \";\n         \
    \       prev_text = \" \";\n            }\n        } else {\n            new_text\
    \ += c;\n            prev_text = c;\n        }\n    }\n    return new_text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp4da4j67q: /tmp/tmp4da4j67q.cpp:35: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    if(text.empty()) return \"\"\
    ;\n    std::string res = \"\";\n    int count = 0;\n    for(int i = 0; i < text.size();\
    \ i++) {\n        if(text[i] == ' ') {\n            count++;\n            if(count\
    \ == 2) {\n                res += '-';\n                count = 0;\n         \
    \   }\n        } else {\n            if(count == 1) {\n                res +=\
    \ '_';\n                count = 0;\n            }\n            res += text[i];\n\
    \        }\n    }\n    if(count == 1) res += '_';\n    return res;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpx9_ln4mm: /tmp/tmpx9_ln4mm.cpp:36: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint count = 0;\n\tint i = 0;\n\
    \twhile (i < text.length()) {\n\t\tif (text[i] == ' ') {\n\t\t\ttext[i] = '_';\n\
    \t\t\tcount++;\n\t\t}\n\t\telse\n\t\t\tcount = 0;\n\t\tif (count == 3) {\n\t\t\
    \ttext[i] = '-';\n\t\t\tcount = 0;\n\t\t}\n\t\ti++;\n\t}\n\treturn text;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpt9wb7m_e: /tmp/tmpt9wb7m_e.cpp:33: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int count = 0;\n    for (int\
    \ i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n          \
    \  count++;\n        }\n        else {\n            count = 0;\n        }\n  \
    \      if (count > 2) {\n            text[i] = '-';\n        }\n        else if\
    \ (count == 1) {\n            text[i] = '_';\n        }\n    }\n    return text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpg5g65upo: /tmp/tmpg5g65upo.cpp:32: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint n = text.length();\n\tint\
    \ spaces = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (text[i] == ' ') {\n\t\t\
    \tspaces++;\n\t\t}\n\t}\n\tif (spaces == 0) {\n\t\treturn text;\n\t}\n\tint s\
    \ = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (text[i] == ' ') {\n\t\t\ts++;\n\
    \t\t}\n\t\telse {\n\t\t\ts = 0;\n\t\t}\n\t\tif (s == 2) {\n\t\t\ttext[i] = '-';\n\
    \t\t}\n\t\telse if (s == 1) {\n\t\t\ttext[i] = '_';\n\t\t}\n\t}\n\treturn text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp2vjyukq3: /tmp/tmp2vjyukq3.cpp:42: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  int length = text.length();\n\
    \  std::string new_text = \"\";\n  for (int i = 0; i < length; i++) {\n    //\
    \ We are not at the start of the string,\n    // and the current character is\
    \ a space and the \n    // previous character is a space, then we \n    // add\
    \ a - to the new string\n    if (i > 0 && text[i] == ' ' && text[i - 1] == ' ')\
    \ {\n      new_text += '-';\n    }\n    // We are not at the start of the string,\n\
    \    // and the current character is a space and the \n    // previous character\
    \ is not a space, then we \n    // add a _ to the new string\n    else if (i >\
    \ 0 && text[i] == ' ' && text[i - 1] != ' ') {\n      new_text += '_';\n    }\n\
    \    // Otherwise we add the original character \n    // to the new string\n \
    \   else {\n      new_text += text[i];\n    }\n  }\n  return new_text;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpzmv9qj2s: /tmp/tmpzmv9qj2s.cpp:40: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::stringstream word;\n  \
    \  word << text[0];\n    for (size_t i = 1; i < text.size(); i++) {\n        if\
    \ (text[i] == ' ' && text[i-1] == ' ') {\n            word << '-';\n        }\
    \ else if (text[i] == ' ') {\n            word << '_';\n        } else {\n   \
    \         word << text[i];\n        }\n    }\n    return word.str();\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp5_niuvmb: /tmp/tmp5_niuvmb.cpp:28: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  if (text.empty()) return text;\n\
    \  text[0] = text[0] == ' ' ? '_' : text[0];\n  for (int i = 1; i < text.size();\
    \ i++) {\n    if (text[i] == ' ') {\n      if (text[i - 1] == ' ') {\n       \
    \ if (text[i - 2] == '-') {\n          text[i] = '\\0';\n        } else {\n  \
    \        text[i] = '-';\n        }\n      } else {\n        text[i] = '_';\n \
    \     }\n    }\n  }\n  return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpyc0tw7w8: /tmp/tmpyc0tw7w8.cpp:33: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // int i = 0;\n    // while(text[i]=='\
    \ ') {\n    //     text.erase(text.begin()+i);\n    // }\n    // while(text[text.size()-1]=='\
    \ ') {\n    //     text.erase(text.begin()+text.size()-1);\n    // }\n    // int\
    \ count = 0;\n    // while(i<text.size()) {\n    //     if(text[i]==' ') {\n \
    \   //         count++;\n    //         if(count>2) {\n    //             text.erase(text.begin()+i);\n\
    \    //             count = 1;\n    //         }\n    //     } else {\n    //\
    \         count = 0;\n    //     }\n    //     i++;\n    // }\n    // for(int\
    \ i=0;i<text.size();i++) {\n    //     if(text[i]==' ')\n    //         text[i]\
    \ = '_';\n    // }\n    int count = 0;\n    for(int i=0;i<text.size();i++) {\n\
    \        if(text[i]==' ') {\n            count++;\n            if(count==2) {\n\
    \                text[i] = '_';\n            } else if(count>2) {\n          \
    \      text[i] = '-';\n            }\n        } else {\n            count = 0;\n\
    \        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpn7ypfb6s: /tmp/tmpn7ypfb6s.cpp:53: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string ret;\n    int len\
    \ = text.length();\n    bool isFirst = true;\n    bool isFirstSpace = true;\n\
    \    for(int i = 0; i < len; i++) {\n        if(text[i] == ' ') {\n          \
    \  if(isFirst) {\n                isFirst = false;\n                isFirstSpace\
    \ = true;\n                ret.push_back('_');\n            } else {\n       \
    \         if(isFirstSpace) {\n                    isFirstSpace = false;\n    \
    \                ret.push_back('-');\n                }\n            }\n     \
    \   } else {\n            isFirst = false;\n            isFirstSpace = true;\n\
    \            ret.push_back(text[i]);\n        }\n    }\n    return ret;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpnypprxsy: /tmp/tmpnypprxsy.cpp:38: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // replace all spaces with underscores\n\
    \    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n\
    \            text[i] = '_';\n        }\n    }\n    // replace all multiple consecutive\
    \ spaces with -\n    bool last_space = false;\n    for (int i = 0; i < text.size();\
    \ i++) {\n        if (text[i] == '_') {\n            if (last_space) {\n     \
    \           text[i] = '-';\n            }\n            last_space = true;\n  \
    \      } else {\n            last_space = false;\n        }\n    }\n    return\
    \ text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpy86owarw: /tmp/tmpy86owarw.cpp:35: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string ret;\n    int n=text.size();\n\
    \    int count=0;\n    for(int i=0;i<n;i++){\n        if(text[i]==' '){\n    \
    \        count++;\n            continue;\n        }\n        if(count==1){\n \
    \           ret+='_';\n        }\n        else if(count>1){\n            ret+='-';\n\
    \        }\n        ret+=text[i];\n        count=0;\n    }\n    if(count==1){\n\
    \        ret+='_';\n    }\n    else if(count>1){\n        ret+='-';\n    }\n \
    \   return ret;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpzicioo2m: /tmp/tmpzicioo2m.cpp:40: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tif (text.empty()) {\n\t\treturn\
    \ \"\";\n\t}\n\tstd::string res;\n\tint count = 0;\n\tfor (int i = 0; i < text.size();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tcount++;\n\t\t}\n\t\telse {\n\t\t\t\
    count = 0;\n\t\t}\n\t\tif (count == 1) {\n\t\t\tres.push_back('_');\n\t\t}\n\t\
    \telse if (count > 2) {\n\t\t\tres.push_back('-');\n\t\t}\n\t\telse {\n\t\t\t\
    res.push_back(text[i]);\n\t\t}\n\t}\n\treturn res;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp8neu7mk5: /tmp/tmp8neu7mk5.cpp:39: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\t//std::regex re_2_spaces(\"\\\\\
    b[ ]{2,}\\\\b\");\n\t//std::regex re_1_space(\"\\\\b[ ]\\\\b\");\n\t//std::regex\
    \ re_space(\"\\\\b[ ]\\\\b\");\n\t//text = std::regex_replace(text, re_2_spaces,\
    \ \"-\");\n\t//text = std::regex_replace(text, re_1_space, \"_\");\n\t//text =\
    \ std::regex_replace(text, re_space, \"_\");\n\t//return text;\n\tstd::stringstream\
    \ my_stream(text);\n\tstd::string temp;\n\tstd::string result;\n\twhile (my_stream\
    \ >> temp) {\n\t\tresult += temp;\n\t\tresult += \"_\";\n\t}\n\tresult.pop_back();\n\
    \treturn result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp5nwya2zx: /tmp/tmp5nwya2zx.cpp:31: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int l=text.length();\n    std::string\
    \ res;\n    int i=0;\n    while(i<l)\n    {\n        if(text[i]==' ' && text[i+1]=='\
    \ ')\n        {\n            res+='-';\n            i++;\n            while(text[i]=='\
    \ ')\n            {\n                i++;\n            }\n        }\n        else\
    \ if(text[i]==' ')\n        {\n            res+='_';\n            i++;\n     \
    \   }\n        else\n        {\n            res+=text[i];\n            i++;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmprn001l49: /tmp/tmprn001l49.cpp:42: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    for(int i = 0; i < text.size();\
    \ i++) {\n        if(text[i] == ' ') {\n            if(i == 0) {\n           \
    \     text[i] = '_';\n            }\n            else if(text[i-1] == ' ') {\n\
    \                text[i] = '-';\n            }\n            else {\n         \
    \       text[i] = '_';\n            }\n        }\n    }\n    return text;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpy_26lhon: /tmp/tmpy_26lhon.cpp:31: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string new_str = \"\";\n\t\
    int len = text.length();\n\tfor(int i = 0; i < len; i++) {\n\t\tif(text[i] ==\
    \ ' ' && text[i+1] == ' ') {\n\t\t\tnew_str.push_back('-');\n\t\t\twhile(text[i]\
    \ == ' ') {\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ti--;\n\t\t}\n\t\telse if(text[i] ==\
    \ ' ') {\n\t\t\tnew_str.push_back('_');\n\t\t}\n\t\telse {\n\t\t\tnew_str.push_back(text[i]);\n\
    \t\t}\n\t}\n\treturn new_str;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp42h6v41h: /tmp/tmp42h6v41h.cpp:34: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int l = text.length();\n   \
    \ // std::cout << \"Entered string - \" << text << std::endl;\n    for(int i =\
    \ 0; i < l; i++) {\n        if(text[i] == ' ') {\n            if(i == 0) {\n \
    \               text[i] = '_';\n            } else if(text[i - 1] == ' ') {\n\
    \                text[i] = '-';\n            } else {\n                text[i]\
    \ = '_';\n            }\n        }\n    }\n    return text;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp2e1j8ckp: /tmp/tmp2e1j8ckp.cpp:31: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tfor (int i = 0; i < text.size();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tif (i != 0 && text[i - 1] == ' ') {\n\
    \t\t\t\tif (i != text.size() - 1 && text[i + 1] == ' ') {\n\t\t\t\t\ttext[i] =\
    \ '-';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttext[i] = '_';\n\t\t\t\t}\n\t\t\t\
    }\n\t\t\telse {\n\t\t\t\ttext[i] = '_';\n\t\t\t}\n\t\t}\n\t}\n\treturn text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpdmglv9g7: /tmp/tmpdmglv9g7.cpp:33: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ count = 0;\n    int textSize = text.size();\n    for(int i = 0; i < textSize;\
    \ i++) {\n        if(text[i] == ' ') {\n            count++;\n        } else {\n\
    \            result += ' ';\n            result += text[i];\n            count\
    \ = 0;\n        }\n        if(count > 2) {\n            count = 0;\n         \
    \   result += '-';\n        }\n    }\n    return result;\n}\nint main() {\n  \
    \  auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpji_ipipa: /tmp/tmpji_ipipa.cpp:31: int main(): Assertion `candidate((\"\
    Example\")) == (\"Example\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string prev;\n    std::regex\
    \ replace(\" \");\n    std::string curr=regex_replace(text,replace,\"_\");\n \
    \   std::string prev1=regex_replace(prev,replace,\"_\");\n    while(curr!=prev1){\n\
    \        prev=prev1;\n        prev1=regex_replace(prev,replace,\"_\");\n    }\n\
    \    std::regex replace1(\"_{2,}\");\n    std::string curr1=regex_replace(prev1,replace1,\"\
    -\");\n    return curr1;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int count_space = 0;\n    int\
    \ n = text.length();\n    std::string res;\n    for(int i = 0; i < n; i++) {\n\
    \        if(text[i] == ' ') {\n            count_space++;\n            if(count_space\
    \ >= 2) {\n                res += '-';\n                count_space = 0;\n   \
    \         }\n        } else {\n            res += text[i];\n            count_space\
    \ = 0;\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpjt8f_vqz: /tmp/tmpjt8f_vqz.cpp:31: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    for(int i = 0; i < text.size();\
    \ i++) {\n        if(text[i] == ' ') {\n            text[i] = '_';\n        }\n\
    \    }\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '_'\
    \ && text[i+1] == '_' && text[i+2] == '_') {\n            text[i] = '-';\n   \
    \         text[i+1] = '-';\n            text[i+2] = '-';\n        }\n    }\n \
    \   return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpjrum_512: /tmp/tmpjrum_512.cpp:30: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    bool\
    \ found_space = false;\n    for (auto c : text) {\n        if (isspace(c)) {\n\
    \            if (found_space) {\n                continue;\n            }\n  \
    \          result += \"-\";\n            found_space = true;\n        } else {\n\
    \            result += c;\n            found_space = false;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp173cxn0a: /tmp/tmp173cxn0a.cpp:30: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int spacecount = 0;\n    for (int i = 0; i < text.length(); i++) {\n    \
    \    if (text[i] == ' ') {\n            spacecount++;\n            if (spacecount\
    \ == 1) {\n                result += \"_\";\n            }\n            else if\
    \ (spacecount == 2) {\n                result += \"-\";\n            }\n     \
    \   }\n        else {\n            result += text[i];\n            spacecount\
    \ = 0;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp3b9jt0jg: /tmp/tmp3b9jt0jg.cpp:34: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint space_counter = 0;\n\tfor\
    \ (int i = 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tspace_counter++;\n\
    \t\t}\n\t\telse {\n\t\t\tspace_counter = 0;\n\t\t}\n\t\tif (space_counter > 2)\
    \ {\n\t\t\ttext[i] = '-';\n\t\t}\n\t\telse if (space_counter > 0) {\n\t\t\ttext[i]\
    \ = '_';\n\t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpx2czfdiu: /tmp/tmpx2czfdiu.cpp:33: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string res = \"\";\n  \
    \  int i = 0;\n    while(i < text.length()){\n        if(text[i] == ' '){\n  \
    \          if(text[i+1] == ' '){\n                res += '-';\n              \
    \  while(text[i] == ' '){\n                    i++;\n                }\n     \
    \       }\n            else{\n                res += '_';\n                i++;\n\
    \            }\n        }\n        else{\n            res += text[i];\n      \
    \      i++;\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpzvomf8xq: /tmp/tmpzvomf8xq.cpp:37: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  //TODO: write your code here.\n\
    \  // return text;\n  string res=\"\";\n  if(text.length() == 0) return res;\n\
    \  int count = 0;\n  for(int i=0;i<text.length();i++){\n    if(text[i] == ' '){\n\
    \      count++;\n      if(count >= 3){\n        count = 2;\n        res += '-';\n\
    \      }else{\n        res += '_';\n      }\n    }else{\n      count = 0;\n  \
    \    res += text[i];\n    }\n  }\n  return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfym32zyx.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmpfym32zyx.cpp:13:3: error: \u2018string\u2019 was not declared in this\
    \ scope\n   13 |   string res=\"\";\n      |   ^~~~~~\n/tmp/tmpfym32zyx.cpp:13:3:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/11/iosfwd:39,\n\
    \                 from /usr/include/c++/11/ios:38,\n                 from /usr/include/c++/11/istream:38,\n\
    \                 from /usr/include/c++/11/sstream:38,\n                 from\
    \ /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfym32zyx.cpp:2:\n/usr/include/c++/11/bits/stringfwd.h:79:33:\
    \ note:   \u2018std::string\u2019\n   79 |   typedef basic_string<char>    string;\n\
    \      |                                 ^~~~~~\nIn file included from /usr/include/c++/11/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/11/bits/ios_base.h:41,\n             \
    \    from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n\
    \                 from /usr/include/c++/11/sstream:38,\n                 from\
    \ /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfym32zyx.cpp:2:\n/usr/include/c++/11/string:67:11:\
    \ note:   \u2018std::pmr::string\u2019\n   67 |     using string    = basic_string<char>;\n\
    \      |           ^~~~~~\n/tmp/tmpfym32zyx.cpp:14:33: error: \u2018res\u2019\
    \ was not declared in this scope\n   14 |   if(text.length() == 0) return res;\n\
    \      |                                 ^~~\n/tmp/tmpfym32zyx.cpp:21:9: error:\
    \ \u2018res\u2019 was not declared in this scope\n   21 |         res += '-';\n\
    \      |         ^~~\n/tmp/tmpfym32zyx.cpp:23:9: error: \u2018res\u2019 was not\
    \ declared in this scope\n   23 |         res += '_';\n      |         ^~~\n/tmp/tmpfym32zyx.cpp:27:7:\
    \ error: \u2018res\u2019 was not declared in this scope\n   27 |       res +=\
    \ text[i];\n      |       ^~~\n/tmp/tmpfym32zyx.cpp:30:"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint n = text.length();\n\tfor\
    \ (int i = 0; i < n; i++) {\n\t\tif (text[i] == ' ') {\n\t\t\ttext[i] = '_';\n\
    \t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (text[i] == '_' && text[i\
    \ + 1] == '_') {\n\t\t\ttext[i] = '-';\n\t\t}\n\t}\n\treturn text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpw4svcnem: /tmp/tmpw4svcnem.cpp:28: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    for(int i = 0; i < text.size();\
    \ i++) {\n        if(text[i] == ' ') {\n            if(i != 0 && text[i-1] ==\
    \ ' ') {\n                text[i] = '-';\n            } else {\n             \
    \   text[i] = '_';\n            }\n        }\n    }\n    return text;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpe87jpg47: /tmp/tmpe87jpg47.cpp:27: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    //write your code here\n   \
    \ std::string result = \"\";\n    int count = 0;\n    for(int i = 0; i < text.length();\
    \ i++){\n        if(text[i] == ' ') count++;\n        else count = 0;\n      \
    \  if(count < 3){\n            if(count == 1) result = result + \"_\";\n     \
    \       else result = result + text[i];\n        }\n        else if(count == 3)\
    \ result = result + \"-\";\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmppqaisj18: /tmp/tmppqaisj18.cpp:29: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint i, j;\n\tfor (i = 0; i < text.length();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tj = i;\n\t\t\twhile (text[j] == ' ')\
    \ {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif (j - i > 2) {\n\t\t\t\ttext.replace(i, j\
    \ - i, \"-\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext.replace(i, 1, \"_\");\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint i=0;\n\twhile(i<text.length()){\n\
    \t\tif(text[i]==' '){\n\t\t\tint j=i+1;\n\t\t\twhile(j<text.length() && text[j]=='\
    \ '){\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif(j-i==1){\n\t\t\t\ttext[i]='_';\n\t\t\t\
    }\n\t\t\telse{\n\t\t\t\tfor(int k=i;k<j;k++){\n\t\t\t\t\ttext[k]='-';\n\t\t\t\t\
    }\n\t\t\t}\n\t\t\ti=j;\n\t\t}\n\t\telse{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpngsk5iv0: /tmp/tmpngsk5iv0.cpp:38: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string res;\n    int cnt\
    \ = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\
    \ ') {\n            cnt++;\n            if (cnt >= 2) {\n                res +=\
    \ '-';\n                cnt = 0;\n            }\n        } else {\n          \
    \  if (cnt >= 2) {\n                res += '-';\n                cnt = 0;\n  \
    \          }\n            res += text[i];\n        }\n    }\n    if (cnt >= 2)\
    \ res += '-';\n    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp8haln0hb: /tmp/tmp8haln0hb.cpp:34: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tfor (int i = 0; i < text.size();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\ttext[i] = '_';\n\t\t\ti++;\n\t\t\t\
    while (text[i] == ' ') {\n\t\t\t\ttext[i] = '-';\n\t\t\t\ti++;\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n  \
    \  assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpv4q4y8gl: /tmp/tmpv4q4y8gl.cpp:27: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string result;\n\t// bool\
    \ space = false;\n\tint space_count = 0;\n\t// in the first iteration, we replace\
    \ the leading spaces with underscores\n\tfor (int i = 0; i < text.length(); i++)\
    \ {\n\t\tif (text[i] == ' ') {\n\t\t\tspace_count++;\n\t\t\tif (space_count ==\
    \ 1) {\n\t\t\t\tresult += '_';\n\t\t\t}\n\t\t} else {\n\t\t\tif (space_count >\
    \ 2) {\n\t\t\t\tresult += '-';\n\t\t\t}\n\t\t\tresult += text[i];\n\t\t\tspace_count\
    \ = 0;\n\t\t}\n\t}\n\t// in the second iteration, we replace trailing spaces with\
    \ underscores\n\t// we reverse the string and do the same thing as before\n\t\
    std::reverse(result.begin(), result.end());\n\tspace_count = 0;\n\tstd::string\
    \ final_result;\n\tfor (int i = 0; i < result.length(); i++) {\n\t\tif (result[i]\
    \ == ' ') {\n\t\t\tspace_count++;\n\t\t\tif (space_count == 1) {\n\t\t\t\tfinal_result\
    \ += '_';\n\t\t\t}\n\t\t} else {\n\t\t\tif (space_count > 2) {\n\t\t\t\tfinal_result\
    \ += '-';\n\t\t\t}\n\t\t\tfinal_result += result[i];\n\t\t\tspace_count = 0;\n\
    \t\t}\n\t}\n\tstd::reverse(final_result.begin(), final_result.end());\n\treturn\
    \ final_result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpnz9ajj1b: /tmp/tmpnz9ajj1b.cpp:55: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string r = \"\";\n    bool\
    \ extra = false;\n    bool flag = false;\n    for(int i = 0; i < text.length();\
    \ i++) {\n        if(text[i] == ' ') {\n            flag = true;\n           \
    \ if(extra) {\n                r += '-';\n                extra = false;\n   \
    \         }\n        } else {\n            if(flag) {\n                r += '_';\n\
    \                flag = false;\n                extra = true;\n            }\n\
    \            r += text[i];\n        }\n    }\n    if(extra) r += '-';\n    return\
    \ r;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpkxlx92dt: /tmp/tmpkxlx92dt.cpp:36: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    for(auto i=0;i<text.size();i++){\n\
    \        if(text[i]==' '){\n            if(i==0){\n                text[i]='_';\n\
    \            }\n            else if(text[i-1]==' '){\n                text[i]='-';\n\
    \            }\n            else{\n                text[i]='_';\n            }\n\
    \        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp3od8gtqm: /tmp/tmp3od8gtqm.cpp:31: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int n = text.size();\n    std::string\
    \ ans = \"\";\n    for(int i = 0; i < n; i++) {\n        if(text[i] == ' ') {\n\
    \            int cnt = 0;\n            while(i < n && text[i] == ' ') {\n    \
    \            cnt++;\n                i++;\n            }\n            if(cnt ==\
    \ 1) {\n                ans += '_';\n            } else {\n                ans\
    \ += '-';\n            }\n            i--;\n        } else {\n            ans\
    \ += text[i];\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpd3ciutgq: /tmp/tmpd3ciutgq.cpp:36: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    for(int i = 0; i < text.size();\
    \ i++) {\n        if(text[i] == ' ' && i!=0 && text[i-1] != ' ' && i!=text.size()-1)\
    \ {\n            text[i] = '_';\n        }\n        if(text[i] == ' ' && i!=0\
    \ && text[i-1] == ' ' && i!=text.size()-1) {\n            text[i] = '-';\n   \
    \     }\n    }\n    if(text[0] == ' ') {\n        text[0] = '_';\n    }\n    return\
    \ text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpel8gef54: /tmp/tmpel8gef54.cpp:27: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint space_count = 0;\n\tfor (int\
    \ i = 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tspace_count++;\n\
    \t\t}\n\t\telse {\n\t\t\tspace_count = 0;\n\t\t}\n\t\tif (space_count > 2) {\n\
    \t\t\ttext[i] = '-';\n\t\t}\n\t\telse if (space_count == 1) {\n\t\t\ttext[i] =\
    \ '_';\n\t\t}\n\t}\n\tif (text[0] == ' ') {\n\t\ttext[0] = '_';\n\t}\n\treturn\
    \ text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmps7gnu_vo: /tmp/tmps7gnu_vo.cpp:35: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int count = 0;\n    for (int\
    \ i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n          \
    \  count++;\n        }\n        else {\n            count = 0;\n        }\n  \
    \      if (count == 2) {\n            text[i] = '-';\n        }\n        else\
    \ if (count > 2) {\n            text[i] = '-';\n        }\n        else if (count\
    \ == 1) {\n            text[i] = '_';\n        }\n    }\n    return text;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmper6h7jac: /tmp/tmper6h7jac.cpp:35: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::stringstream ss;\n    bool\
    \ seenSpace = false;\n    bool seenConsecutive = false;\n    for (char c : text)\
    \ {\n        if (isspace(c)) {\n            if (seenSpace) {\n               \
    \ seenConsecutive = true;\n            }\n            seenSpace = true;\n    \
    \    } else {\n            if (seenConsecutive) {\n                ss << '-';\n\
    \                seenConsecutive = false;\n            }\n            if (seenSpace)\
    \ {\n                ss << '_';\n                seenSpace = false;\n        \
    \    }\n            ss << c;\n        }\n    }\n    if (seenConsecutive) {\n \
    \       ss << '-';\n    }\n    if (seenSpace) {\n        ss << '_';\n    }\n \
    \   return ss.str();\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp4gpu75qv: /tmp/tmp4gpu75qv.cpp:44: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string str = \"\";\n  \
    \  int i = 0;\n    int n = text.length();\n    int count = 0;\n    while(i < n){\n\
    \        if(text[i] == ' '){\n            count++;\n            if(count == 2){\n\
    \                str += '-';\n                count = 0;\n            }\n    \
    \    }\n        else{\n            str += text[i];\n            count = 0;\n \
    \       }\n        i++;\n    }\n    return str;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpu9he0hxg: /tmp/tmpu9he0hxg.cpp:34: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // Regex to handle multiple\
    \ spaces\n    std::regex pattern(\"(\\\\s\\\\s+)\");\n\n    // Replace multiple\
    \ spaces with -\n    text = std::regex_replace(text, pattern, \"-\");\n\n    //\
    \ Return a string with all the spaces replaced with underscores\n    return std::regex_replace(text,\
    \ std::regex(\"\\\\s\"), \"_\");\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpqwhthp0n: /tmp/tmpqwhthp0n.cpp:24: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    int\
    \ i=0;\n    while(i<text.size()){\n        if(text[i]==' '){\n            result+='_';\n\
    \            while(text[i]==' '){\n                result+='-';\n            \
    \    i++;\n            }\n        }\n        else{\n            result+=text[i];\n\
    \            i++;\n        }\n    }\n    return result;\n}\nint main() {\n   \
    \ auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp2m67ez4e: /tmp/tmp2m67ez4e.cpp:31: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string result;\n\tfor (int\
    \ i = 0; i < text.size(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tresult += '_';\n\
    \t\t\twhile (text[i + 1] == ' ') {\n\t\t\t\tresult += '-';\n\t\t\t\ti++;\n\t\t\
    \t}\n\t\t}\n\t\telse {\n\t\t\tresult += text[i];\n\t\t}\n\t}\n\treturn result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp5d9pv5a9: /tmp/tmp5d9pv5a9.cpp:30: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string result = \"\";\n\t\
    bool two_spaces = false;\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif\
    \ (text[i] == ' ') {\n\t\t\tif (two_spaces) {\n\t\t\t\tresult += \"-\";\n\t\t\t\
    \ttwo_spaces = false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult += \"_\";\n\t\t\t\
    \ttwo_spaces = true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tresult += text[i];\n\t\
    \t\ttwo_spaces = false;\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpn5yv00mb: /tmp/tmpn5yv00mb.cpp:35: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string result = \"\";\n\t\
    for (int i = 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tresult\
    \ += '_';\n\t\t\tint count = 0;\n\t\t\twhile (text[i] == ' ') {\n\t\t\t\ti++;\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t\tif (count > 2) {\n\t\t\t\tresult += '-';\n\t\t\
    \t}\n\t\t\telse {\n\t\t\t\tresult += '_';\n\t\t\t}\n\t\t\ti--;\n\t\t}\n\t\telse\
    \ {\n\t\t\tresult += text[i];\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpcc1oxkkm: /tmp/tmpcc1oxkkm.cpp:37: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  std::cout << \"Original = \" <<\
    \ text << \"\\n\";\n  int i = 0;\n  int spaceCount = 0;\n  std::string newText\
    \ = \"\";\n  std::vector<int> spaces;\n  while (i < text.length()) {\n    if (text[i]\
    \ == ' ') {\n      spaceCount++;\n      spaces.push_back(i);\n    }\n    else\
    \ {\n      if (spaceCount > 2) {\n        for (int j = 0; j < spaces.size(); j++)\
    \ {\n          text[spaces[j]] = '-';\n        }\n      }\n      spaceCount =\
    \ 0;\n      spaces.clear();\n    }\n    i++;\n  }\n  if (spaceCount > 2) {\n \
    \   for (int j = 0; j < spaces.size(); j++) {\n      text[spaces[j]] = '-';\n\
    \    }\n  }\n  for (i = 0; i < text.length(); i++) {\n    if (text[i] == ' ')\
    \ {\n      text[i] = '_';\n    }\n  }\n  return text;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp9c9068_1: /tmp/tmp9c9068_1.cpp:49: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    if(text.empty()) return text;\n\
    \    std::stringstream ss;\n    size_t pos = 0;\n    while(pos != text.length()){\n\
    \        if(text[pos] == ' '){\n            size_t space_counter = 0;\n      \
    \      while(text[pos] == ' '){\n                ++space_counter;\n          \
    \      ++pos;\n            }\n            if(space_counter > 2){\n           \
    \     ss << '-';\n            }\n            else{\n                while(space_counter){\n\
    \                    ss << '_';\n                    --space_counter;\n      \
    \          }\n            }\n        }\n        else{\n            ss << text[pos];\n\
    \            ++pos;\n        }\n    }\n    return ss.str();\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string res;\n\tint cnt =\
    \ 0;\n\tchar prev;\n\tfor (int i = 0; i < text.size(); i++) {\n\t\tif (text[i]\
    \ == ' ') {\n\t\t\tcnt++;\n\t\t\tif (cnt > 2) {\n\t\t\t\tres.push_back('-');\n\
    \t\t\t\tcnt = 0;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tres.push_back(text[i]);\n\t\
    \t\tcnt = 0;\n\t\t}\n\t}\n\treturn res;\n}\nint main() {\n    auto candidate =\
    \ fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmptdfvfor0: /tmp/tmptdfvfor0.cpp:32: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string res;\n\tres += text[0];\n\
    \tfor (int i = 1; i < text.size(); i++) {\n\t\tif (text[i] == ' ' && text[i-1]\
    \ == ' ') {\n\t\t\tres += '-';\n\t\t} else if (text[i] == ' ') {\n\t\t\tres +=\
    \ '_';\n\t\t} else {\n\t\t\tres += text[i];\n\t\t}\n\t}\n\treturn res;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpbwbfkg6z: /tmp/tmpbwbfkg6z.cpp:28: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tbool flag=true;\n\tfor(int i=0;i<text.length();i++){\n\
    \t\tif(text[i]==' '){\n\t\t\tif(flag==true){\n\t\t\t\ttext[i]='_';\n\t\t\t\tflag=false;\n\
    \t\t\t}\n\t\t\telse{\n\t\t\t\ttext[i]='-';\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\t\
    flag=true;\n\t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate =\
    \ fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpe5d1v8u4: /tmp/tmpe5d1v8u4.cpp:32: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string a;\n    if(text.find(\"\
    \ \") != std::string::npos)\n    {\n        a = text.substr(0, text.find(\" \"\
    ));\n        a = a + \"_\" + fix_spaces(text.substr(text.find(\" \") + 1));\n\
    \    }\n    else\n    {\n        a = text;\n    }\n    while(a.find(\"  \") !=\
    \ std::string::npos)\n    {\n        a = a.substr(0, a.find(\"  \")) + \"-\" +\
    \ a.substr(a.find(\"  \") + 2);\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpqhxdb1kf: /tmp/tmpqhxdb1kf.cpp:32: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string result = \"\";\n\t\
    int spaces = 0;\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i]\
    \ == ' ') {\n\t\t\tspaces++;\n\t\t}\n\t\telse {\n\t\t\tspaces = 0;\n\t\t}\n\t\t\
    if (spaces > 1) {\n\t\t\tresult += '-';\n\t\t}\n\t\telse if (text[i] == ' ') {\n\
    \t\t\tresult += '_';\n\t\t}\n\t\telse {\n\t\t\tresult += text[i];\n\t\t}\n\t}\n\
    \treturn result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp3g28r3cj: /tmp/tmp3g28r3cj.cpp:36: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    if(text.size() == 0) return\
    \ text;\n    bool prev_is_space = true;\n    int num_spaces = 0;\n    for(int\
    \ i = 0; i < text.size(); i++) {\n        if(text[i] == ' ') {\n            num_spaces++;\n\
    \            if(prev_is_space) text[i] = '-';\n            else text[i] = '_';\n\
    \            prev_is_space = true;\n        }\n        else prev_is_space = false;\n\
    \    }\n    if(num_spaces == 0) return text;\n    if(text[0] == ' ') text[0] =\
    \ '_';\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp8g2gr18h: /tmp/tmp8g2gr18h.cpp:31: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int i = 0;\n    while(i < text.length()) {\n        while(i < text.length()\
    \ && text[i] == ' ') {\n            i++;\n        }\n        if(i == text.length())\
    \ {\n            break;\n        }\n        int count = 0;\n        while(i <\
    \ text.length() && text[i] != ' ') {\n            result += text[i];\n       \
    \     i++;\n            count++;\n        }\n        while(i < text.length() &&\
    \ text[i] == ' ') {\n            i++;\n            count++;\n        }\n     \
    \   if(count == 2) {\n            result += '_';\n        } else if(count > 2)\
    \ {\n            result += '-';\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpemxbfi80: /tmp/tmpemxbfi80.cpp:40: int main(): Assertion `candidate((\"\
    Example\")) == (\"Example\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string new_text;\n    bool\
    \ isSpace = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            if (isSpace) {\n                new_text += '-';\n  \
    \          } else {\n                new_text += '_';\n                isSpace\
    \ = true;\n            }\n        } else {\n            new_text += text[i];\n\
    \            isSpace = false;\n        }\n    }\n    return new_text;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpxh7wv82q: /tmp/tmpxh7wv82q.cpp:32: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    std::string\
    \ previous_character = \"\";\n    std::string multiple_space = \" \";\n    std::string\
    \ _space = \"_\";\n    std::string _hyphen = \"-\";\n    for (auto c : text) {\n\
    \        if (c == ' ') {\n            if (previous_character == \" \") {\n   \
    \             multiple_space += \" \";\n            } else {\n               \
    \ multiple_space = \" \";\n            }\n        } else {\n            if (multiple_space.size()\
    \ > 2) {\n                multiple_space = _hyphen;\n            } else {\n  \
    \              multiple_space = _space;\n            }\n        }\n        result\
    \ += multiple_space;\n        previous_character = multiple_space;\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp6dq4ecao: /tmp/tmp6dq4ecao.cpp:37: int main(): Assertion `candidate((\"\
    Example\")) == (\"Example\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // TODO: Implement me\n    //\
    \ Your code here\n    std::string new_text = \"\";\n    int i = 0;\n    while(i\
    \ < text.length()){\n        if(i == 0 && text[i] == ' '){\n            new_text\
    \ += '_';\n            i++;\n        }else if(text[i] == ' '){\n            if(i\
    \ < text.length() - 1 && text[i+1] == ' '){\n                int cnt = 1;\n  \
    \              while(i < text.length() - 1 && text[i+1] == ' '){\n           \
    \         cnt++;\n                    i++;\n                }\n              \
    \  new_text += '-';\n                i++;\n            }else{\n              \
    \  new_text += '_';\n                i++;\n            }\n        }else{\n   \
    \         new_text += text[i];\n            i++;\n        }\n    }\n    return\
    \ new_text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpbuetitgc: /tmp/tmpbuetitgc.cpp:43: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string res = \"\";\n  \
    \  bool space = false;\n    for (int i = 0; i < text.size(); i++) {\n        if\
    \ (text[i] == ' ') {\n            if (space) {\n                res += '-';\n\
    \            } else {\n                res += '_';\n                space = true;\n\
    \            }\n        } else {\n            res += text[i];\n            space\
    \ = false;\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmprf2z8y1v: /tmp/tmprf2z8y1v.cpp:32: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  std::string newText;\n  bool wasSpace\
    \ = false;\n  for (auto &c : text) {\n    if (c == ' ') {\n      if (wasSpace)\
    \ {\n        newText += '-';\n      } else {\n        newText += '_';\n      \
    \  wasSpace = true;\n      }\n    } else {\n      newText += c;\n      wasSpace\
    \ = false;\n    }\n  }\n  return newText;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp1e8vwm9x: /tmp/tmp1e8vwm9x.cpp:32: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // remove spaces from both ends\n\
    \    size_t pos_first_sp = text.find_first_not_of(' ');\n    size_t pos_last_sp\
    \ = text.find_last_not_of(' ');\n    text = text.substr(pos_first_sp, pos_last_sp\
    \ - pos_first_sp + 1);\n    // replace single spaces\n    for (int i = 0; i <\
    \ text.size(); i++) {\n        if (text[i] == ' ') {\n            text[i] = '_';\n\
    \        }\n    }\n    // replace consecutive spaces\n    int count = 0;\n   \
    \ for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '_') {\n   \
    \         count++;\n        } else {\n            count = 0;\n        }\n    \
    \    if (count > 2) {\n            text[i] = '-';\n        }\n    }\n    return\
    \ text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpo6434ynj: /tmp/tmpo6434ynj.cpp:38: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    return std::regex_replace(text,\
    \ std::regex(\" {2,}\"), \"-\");\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpyccwalqd: /tmp/tmpyccwalqd.cpp:16: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tif (text.length() == 0) {\n\t\t\
    return text;\n\t}\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i]\
    \ == ' ') {\n\t\t\ttext[i] = '_';\n\t\t}\n\t}\n\tfor (int i = 0; i < text.length();\
    \ i++) {\n\t\tif (text[i] == '_' && text[i + 1] == '_') {\n\t\t\ttext[i] = '-';\n\
    \t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpyiueosdq: /tmp/tmpyiueosdq.cpp:30: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tfor (int i = 0; i < text.size();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tif (i > 0 && text[i - 1] == ' ')\n\t\
    \t\t\ttext[i] = '-';\n\t\t\telse\n\t\t\t\ttext[i] = '_';\n\t\t}\n\t}\n\treturn\
    \ text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpndubjrof: /tmp/tmpndubjrof.cpp:26: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    bool\
    \ space = false;\n    int counter = 0;\n    for (auto it = text.begin(); it !=\
    \ text.end(); ++it) {\n        if (*it == ' ') {\n            if (counter == 0)\
    \ {\n                result += '_';\n                counter++;\n            }\
    \ else if (counter == 1) {\n                result += '-';\n                counter++;\n\
    \            }\n        } else {\n            result += *it;\n            counter\
    \ = 0;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmptx01eie5: /tmp/tmptx01eie5.cpp:34: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tfor (int i = 0; i < text.size();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\ttext[i] = '_';\n\t\t\twhile (text[i\
    \ + 1] == ' ') {\n\t\t\t\ttext[i] = '-';\n\t\t\t\ttext.erase(i + 1, 1);\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpdik7bibq: /tmp/tmpdik7bibq.cpp:26: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tchar underscore = '_';\n\tchar\
    \ dash = '-';\n\tint numOfConsecutiveSpaces = 0;\n\tchar previousChar = ' ';\n\
    \tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\t\
    if (previousChar == ' ') {\n\t\t\t\tnumOfConsecutiveSpaces++;\n\t\t\t}\n\t\t\t\
    if (numOfConsecutiveSpaces == 2) {\n\t\t\t\ttext[i - 1] = dash;\n\t\t\t}\n\t\t\
    \telse if (numOfConsecutiveSpaces > 2) {\n\t\t\t\ttext[i] = ' ';\n\t\t\t}\n\t\t\
    \telse {\n\t\t\t\ttext[i] = underscore;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tnumOfConsecutiveSpaces\
    \ = 0;\n\t\t}\n\t\tpreviousChar = text[i];\n\t}\n\treturn text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpsg693aez: /tmp/tmpsg693aez.cpp:42: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string res;\n    int n\
    \ = text.size();\n    // loop over the string\n    for (int i = 0; i < n; i++)\
    \ {\n        // if current is empty and previous is not empty\n        if (text[i]\
    \ == ' ' && (i == 0 || text[i - 1] != ' ')) {\n            res += '_';\n     \
    \   }\n        // if current is not empty and previous is empty\n        else\
    \ if (text[i] != ' ' && (i == 0 || text[i - 1] == ' ')) {\n            res +=\
    \ text[i];\n        }\n        // if current is not empty and previous is not\
    \ empty\n        else if (text[i] != ' ' && (i != 0 || text[i - 1] != ' ')) {\n\
    \            res += text[i];\n        }\n        // if current is empty and previous\
    \ is empty\n        else if (text[i] == ' ' && (i != 0 || text[i - 1] == ' '))\
    \ {\n            res += '-';\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpvj6694sj: /tmp/tmpvj6694sj.cpp:38: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int len = text.length();\n \
    \   std::string res = \"\";\n    for(int i = 0; i < len; i++) {\n        if(text[i]\
    \ == ' ' && text[i+1] == ' ' && text[i+2] == ' ') {\n            res += \"-\"\
    ;\n            i++;\n        }\n        else if(text[i] == ' ') {\n          \
    \  res += \"_\";\n        }\n        else {\n            res += text[i];\n   \
    \     }\n    }\n    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmptyjo548_: /tmp/tmptyjo548_.cpp:32: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  for (std::size_t pos = 0; pos\
    \ < text.size(); ++pos) {\n    if (text[pos] == ' ') {\n      if (pos == 0) text[pos]\
    \ = '_';\n      else if (text[pos - 1] == ' ') {\n        if (pos == 1) text[pos\
    \ - 1] = '_';\n        else if (text[pos - 2] == ' ') {\n          if (pos ==\
    \ 2) text[pos - 2] = '_';\n          else text[pos] = '-';\n        }\n      \
    \  else {\n          text[pos] = '-';\n        }\n      }\n      else {\n    \
    \    text[pos] = '_';\n      }\n    }\n  }\n  return text;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp_hylezgm: /tmp/tmp_hylezgm.cpp:36: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    for(int i = 1; i < text.size();\
    \ i++) {\n        if(text[i] == ' ') {\n            if(text[i-1] == ' ') {\n \
    \               text[i] = '-';\n            } else {\n                text[i]\
    \ = '_';\n            }\n        }\n    }\n    if(text[0] == ' ') {\n        text[0]\
    \ = '_';\n    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpw15ekm67: /tmp/tmpw15ekm67.cpp:30: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    std::string word = \"\";\n    int spaces = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            spaces++;\n            if\
    \ (spaces == 1)\n                result += \"_\";\n            if (spaces > 2)\n\
    \                result += \"-\";\n        }\n        else {\n            result\
    \ += text[i];\n            spaces = 0;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpdamn21g8: /tmp/tmpdamn21g8.cpp:33: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int count = 0;\n    std::stringstream\
    \ ss;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ')\
    \ {\n            count++;\n            if (count == 2) {\n                ss <<\
    \ \"-\";\n                count = 0;\n            }\n        } else {\n      \
    \      count = 0;\n            ss << text[i];\n        }\n    }\n    return ss.str();\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp1e7xviam: /tmp/tmp1e7xviam.cpp:30: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int spaces = 0;\n    for (int\
    \ i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n            spaces++;\n\
    \        }\n    }\n    if (spaces == 0) {\n        return text;\n    } else if\
    \ (spaces == 1) {\n        return text.substr(0, text.find(' ')) + \"_\" + text.substr(text.find('\
    \ ') + 1);\n    } else {\n        std::string ans = \"\";\n        int i = 0;\n\
    \        while (text[i] == ' ') {\n            ans += \"_\";\n            i++;\n\
    \        }\n        while (i < text.size()) {\n            if (text[i] == ' ')\
    \ {\n                ans += \"-\";\n                int j = i;\n             \
    \   while (text[j] == ' ') {\n                    j++;\n                }\n  \
    \              if (j == text.size()) {\n                    return ans;\n    \
    \            }\n                ans += text[j];\n                i = j + 1;\n\
    \            } else {\n                ans += text[i];\n                i++;\n\
    \            }\n        }\n        return ans;\n    }\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp0xjp5iic: /tmp/tmp0xjp5iic.cpp:51: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    bool flag=false;\n    for(int\
    \ i=0;i<text.size();i++){\n        if(text[i]==' ') {\n            if(flag) text[i]='-';\n\
    \            else text[i]='_';\n            flag=true;\n        }\n        else\
    \ flag=false;\n    }\n    return text;\n}\nint main() {\n    auto candidate =\
    \ fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpz3_2ocbs: /tmp/tmpz3_2ocbs.cpp:26: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count == 2) {\n  \
    \              count = 0;\n                result += '-';\n            }\n   \
    \     } else {\n            if (count == 1) {\n                result += '_';\n\
    \            }\n            count = 0;\n            result += text[i];\n     \
    \   }\n    }\n    if (count == 1) {\n        result += '_';\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpr07ryy26: /tmp/tmpr07ryy26.cpp:37: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    text.erase(std::remove(text.begin(),\
    \ text.end(), ' '), text.end());\n    size_t pos = 0;\n    while ((pos = text.find(\"\
    \  \", pos)) != std::string::npos) {\n        text.replace(pos, 2, \"-\");\n \
    \       pos += 1;\n    }\n    text.insert(0, \"_\");\n    text.insert(1, \"_\"\
    );\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmplayt_v0c: /tmp/tmplayt_v0c.cpp:23: int main(): Assertion `candidate((\"\
    Example\")) == (\"Example\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\t\n\tbool more_than_two = false;\n\
    \tif (text[0] == ' ')\n\t\ttext[0] = '_';\n\tfor (int i = 1; i < text.length();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tif (text[i - 1] == ' ') {\n\t\t\t\t\
    if (more_than_two == false) {\n\t\t\t\t\ttext[i - 1] = '-';\n\t\t\t\t\tmore_than_two\
    \ = true;\n\t\t\t\t}\n\t\t\t\ttext[i] = '-';\n\t\t\t}\n\t\t\telse {\n\t\t\t\t\
    text[i] = '_';\n\t\t\t\tmore_than_two = false;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\
    \t\tmore_than_two = false;\n\t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp3mud4kwd: /tmp/tmp3mud4kwd.cpp:40: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string ans;\n    int count\
    \ = 0;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == ' ')\
    \ {\n            count++;\n        }\n        else {\n            count = 0;\n\
    \        }\n        if(count > 2) {\n            text[i] = '-';\n        }\n \
    \       else if(count == 1 && i == 0) {\n            text[i] = '_';\n        }\n\
    \        else if(count > 1) {\n            text[i] = '_';\n        }\n    }\n\
    \    ans = text;\n    return ans;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp7jewe9h4: /tmp/tmp7jewe9h4.cpp:36: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int sz = text.size();\n    int count = 0;\n    for(int i = 0; i < sz; i++)\
    \ {\n        if(text[i] == ' ') {\n            count++;\n        } else {\n  \
    \          if(count == 1) {\n                result += '_';\n            } else\
    \ if(count > 1) {\n                result += '-';\n            }\n           \
    \ result += text[i];\n            count = 0;\n        }\n    }\n    if(count ==\
    \ 1) {\n        result += '_';\n    } else if(count > 1) {\n        result +=\
    \ '-';\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmphu7_ah1a: /tmp/tmphu7_ah1a.cpp:38: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint i, spacecount = 0;\n\tfor\
    \ (i = 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tspacecount++;\n\
    \t\t}\n\t\telse {\n\t\t\tspacecount = 0;\n\t\t}\n\t\tif (spacecount == 1) {\n\t\
    \t\ttext[i] = '_';\n\t\t}\n\t\telse if (spacecount > 2) {\n\t\t\ttext[i] = '-';\n\
    \t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp4obt9wgo: /tmp/tmp4obt9wgo.cpp:32: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    if(text.size() == 0) return\
    \ text;\n    int n = text.size();\n    int spaces_count = 0;\n    for(int i =\
    \ 0; i < n; i++) {\n        if(text[i] == ' ') spaces_count++;\n    }\n    if(spaces_count\
    \ == 0) return text;\n    std::string res;\n    int i = 0;\n    int j = 0;\n \
    \   for(; i < n; i++) {\n        if(text[i] == ' ') {\n            if(i == 0 ||\
    \ text[i+1] == ' ') {\n                res += '-';\n                j++;\n   \
    \         } else {\n                res += '_';\n                j++;\n      \
    \      }\n        } else {\n            res += text[i];\n            j++;\n  \
    \      }\n    }\n    if(res[0] == '-') {\n        res = res.substr(1,res.size()-1);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n \
    \   assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpu9hkoa47: /tmp/tmpu9hkoa47.cpp:44: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int counter = 0;\n    for (int\
    \ i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n            counter++;\n\
    \        } else {\n            counter = 0;\n        }\n        if (counter ==\
    \ 2) {\n            counter = 0;\n            text[i] = '-';\n        } else if\
    \ (counter == 1) {\n            text[i] = '_';\n        }\n    }\n    return text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpaqbnobs1: /tmp/tmpaqbnobs1.cpp:31: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string result;\n\tfor (auto\
    \ c : text) {\n\t\tif (result.size() == 0 && c == ' ') {\n\t\t\tresult += '_';\n\
    \t\t} else if (result.size() == 0 && c != ' ') {\n\t\t\tresult += c;\n\t\t} else\
    \ if (result.size() > 0 && result.back() == ' ' && c == ' ') {\n\t\t\tresult.back()\
    \ = '-';\n\t\t} else if (result.size() > 0 && result.back() == ' ' && c != ' ')\
    \ {\n\t\t\tresult += c;\n\t\t} else if (result.size() > 0 && result.back() !=\
    \ ' ' && c == ' ') {\n\t\t\tresult += '_';\n\t\t} else if (result.size() > 0 &&\
    \ result.back() != ' ' && c != ' ') {\n\t\t\tresult += c;\n\t\t}\n\t}\n\treturn\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpmq58jsrj: /tmp/tmpmq58jsrj.cpp:34: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int size=text.size();\n    int\
    \ i=0;\n    while(i<size)\n    {\n        if(text[i]==' ')\n        {\n      \
    \      if(i==0)\n            {\n                text[i]='_';\n            }\n\
    \            else if(text[i-1]==' ')\n            {\n                text[i]='-';\n\
    \            }\n            else\n            {\n                text[i]='_';\n\
    \            }\n        }\n        i++;\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpytxcxo3d: /tmp/tmpytxcxo3d.cpp:39: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int spaces = 0;\n    std::string\
    \ _text = \"\";\n    for (char ch : text) {\n        if (ch == ' ') {\n      \
    \      spaces++;\n            if (spaces == 2) {\n                _text.pop_back();\n\
    \                _text += \"-\";\n            }\n        } else {\n          \
    \  spaces = 0;\n        }\n        _text += ch;\n    }\n    return _text;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpgi8ofx7z: /tmp/tmpgi8ofx7z.cpp:30: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    text.erase(std::remove(text.begin(),\
    \ text.end(), ' '), text.end());\n    return text;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp1l1ny5dd: /tmp/tmp1l1ny5dd.cpp:17: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  std::regex space(\"\\\\s{2,}\"\
    );\n  text = std::regex_replace(text, space, \"-\");\n  return std::regex_replace(text,\
    \ std::regex(\"\\\\s\"), \"_\");\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpa5qheqcp: /tmp/tmpa5qheqcp.cpp:19: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::regex reg(\"\\\\s+\");\n\t\
    std::string answer = std::regex_replace(text, reg, \"-\");\n\tstd::regex underscore(\"\
    -\");\n\tanswer = std::regex_replace(answer, underscore, \"_\");\n\tstd::regex\
    \ leading(\"^_\");\n\tanswer = std::regex_replace(answer, leading, \"\");\n\t\
    return answer;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpng1cw0qx: /tmp/tmpng1cw0qx.cpp:23: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == ' ') {\n\
    \            while(text[i] == ' ') {\n                result += '-';\n       \
    \         i++;\n            }\n        }\n        else {\n            result +=\
    \ text[i];\n            i++;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpqeqkpq98: /tmp/tmpqeqkpq98.cpp:30: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  std::string ret;\n  int spaces\
    \ = 0;\n  for (auto ch : text) {\n    if (ch == ' ') {\n      ++spaces;\n    }\
    \ else {\n      if (spaces > 2) {\n        ret += '-';\n      } else if (spaces\
    \ > 0) {\n        ret += '_';\n      }\n      ret += ch;\n      spaces = 0;\n\
    \    }\n  }\n  if (spaces > 2) {\n    ret += '-';\n  } else if (spaces > 0) {\n\
    \    ret += '_';\n  }\n  return ret;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmprqksctmb: /tmp/tmprqksctmb.cpp:37: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    size_t n = text.size();\n  \
    \  std::string res;\n    size_t i=0;\n    while(i<n){\n        if(i==0 && text[i]=='\
    \ '){\n            res += '_';\n            i++;\n        }\n        else if(text[i]=='\
    \ '){\n            res += '_';\n            i++;\n            while(i<n && text[i]=='\
    \ '){\n                i++;\n            }\n            if(i<n){\n           \
    \     res += '-';\n            }\n        }\n        else{\n            res +=\
    \ text[i];\n            i++;\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpocf6qe5n: /tmp/tmpocf6qe5n.cpp:39: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    for(size_t i = 0; i < text.size();\
    \ i++) {\n        if(text[i] == ' ') {\n            if(i < text.size() - 1 &&\
    \ text[i + 1] == ' ') {\n                if(i < text.size() - 2 && text[i + 2]\
    \ == ' ') {\n                    text[i] = '-';\n                } else {\n  \
    \                  text[i] = '_';\n                }\n            } else {\n \
    \               text[i] = '_';\n            }\n        }\n    }\n    return text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp74u6n26t: /tmp/tmp74u6n26t.cpp:31: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string temp = \"\";\n\tint\
    \ count = 0;\n\tfor (auto i = 0; i < text.length(); i++) {\n\t\tif (text[i] ==\
    \ ' ') {\n\t\t\tcount++;\n\t\t\tif (count == 1) {\n\t\t\t\ttemp += '_';\n\t\t\t\
    }\n\t\t\telse if (count == 2) {\n\t\t\t\ttemp += '-';\n\t\t\t}\n\t\t}\n\t\telse\
    \ {\n\t\t\tcount = 0;\n\t\t\ttemp += text[i];\n\t\t}\n\t}\n\treturn temp;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpsp77miso: /tmp/tmpsp77miso.cpp:34: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int length = text.length();\n\
    \    int i = 0;\n    while(i < length){\n        int j = i;\n        while(j <\
    \ length && text[j] == ' '){\n            j++;\n        }\n        if(j-i > 2){\n\
    \            for(int k = i; k < j; k++){\n                text[k] = '-';\n   \
    \         }\n        }\n        else if(j-i == 2){\n            for(int k = i;\
    \ k < j; k++){\n                text[k] = '_';\n            }\n        }\n   \
    \     i = j;\n    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tif (text.length() == 0) return\
    \ text;\n\tint count = 0;\n\tstd::string result = \"\";\n\tfor (int i = 0; i <\
    \ text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tcount++;\n\t\t\tif (count\
    \ == 2) {\n\t\t\t\tresult += '-';\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t\telse\
    \ {\n\t\t\tif (count > 0) {\n\t\t\t\tcount = 0;\n\t\t\t\tresult += '_';\n\t\t\t\
    }\n\t\t\tresult += text[i];\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n \
    \   auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpk1em3v2d: /tmp/tmpk1em3v2d.cpp:35: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    bool\
    \ has_spaces = false;\n    for (int i = 0; i < text.size(); i++) {\n        if\
    \ (text[i] == ' ') {\n            has_spaces = true;\n            break;\n   \
    \     }\n    }\n    if (!has_spaces) {\n        return text;\n    }\n    int i\
    \ = 0;\n    bool should_replace_with_underscore = false;\n    int consecutive_spaces\
    \ = 0;\n    for (; i < text.size(); i++) {\n        if (text[i] == ' ') {\n  \
    \          if (should_replace_with_underscore) {\n                result += \"\
    _\";\n                should_replace_with_underscore = false;\n            }\n\
    \            consecutive_spaces++;\n            if (consecutive_spaces > 2) {\n\
    \                consecutive_spaces = 0;\n                result += \"-\";\n \
    \           }\n        } else {\n            if (consecutive_spaces == 1) {\n\
    \                result += \"_\";\n            }\n            consecutive_spaces\
    \ = 0;\n            result += text[i];\n            should_replace_with_underscore\
    \ = true;\n        }\n    }\n    if (consecutive_spaces == 1) {\n        result\
    \ += \"_\";\n    }\n    return result;\n}\nint main() {\n    auto candidate =\
    \ fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpu1pnzdco: /tmp/tmpu1pnzdco.cpp:53: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  int spaces = 0;\n  std::string\
    \ result = \"\";\n  for (int i = 0; i < text.length(); i++) {\n    if (text[i]\
    \ == ' ') {\n      spaces++;\n      if (spaces == 1) {\n        result += '_';\n\
    \      } else if (spaces > 2) {\n        result += '-';\n      }\n    } else {\n\
    \      spaces = 0;\n      result += text[i];\n    }\n  }\n  return result;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp0_2zl_du: /tmp/tmp0_2zl_du.cpp:32: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string temp = \"\";\n \
    \   std::string ans = \"\";\n    for(int i = 0; i < text.length(); i++) {\n  \
    \      if(text[i] == ' ') {\n            if(temp.length() == 0) {\n          \
    \      ans += \"_\";\n            } else {\n                ans += temp;\n   \
    \             temp = \"\";\n            }\n        } else {\n            if(temp.length()\
    \ == 0) {\n                temp += text[i];\n            } else {\n          \
    \      temp += text[i];\n                ans += temp;\n                temp =\
    \ \"\";\n            }\n        }\n    }\n    if(temp.length() != 0) {\n     \
    \   ans += temp;\n    }\n    int count = 0;\n    std::string output = \"\";\n\
    \    temp = \"\";\n    for(int i = 0; i < ans.length(); i++) {\n        if(ans[i]\
    \ == '_') {\n            count++;\n            if(count >= 2) {\n            \
    \    output += temp;\n                output += \"-\";\n                temp =\
    \ \"\";\n            }\n        } else {\n            if(count >= 2) {\n     \
    \           count = 0;\n            }\n            temp += ans[i];\n        }\n\
    \    }\n    if(temp.length() != 0) {\n        output += temp;\n    }\n    return\
    \ output;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpmrv2pf7_: /tmp/tmpmrv2pf7_.cpp:60: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tfor (unsigned int i = 0; i < text.length();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\ttext[i] = '_';\n\t\t\tint counter =\
    \ 0;\n\t\t\twhile (text[i + 1] == ' ') {\n\t\t\t\tcounter++;\n\t\t\t\ti++;\n\t\
    \t\t}\n\t\t\tif (counter > 2) {\n\t\t\t\ttext[i] = '-';\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpiafvqzyg: /tmp/tmpiafvqzyg.cpp:30: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  int i = 0;\n  int counter = 0;\n\
    \  std::string ans = \"\";\n  while(i < text.length()){\n    if(text[i] == ' '){\n\
    \      counter++;\n      if(counter > 2){\n        ans += '-';\n        counter\
    \ = 0;\n      }\n      else{\n        ans += '_';\n      }\n    }\n    else{\n\
    \      ans += text[i];\n      counter = 0;\n    }\n    i++;\n  }\n  return ans;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpr4n1side: /tmp/tmpr4n1side.cpp:38: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  int len = text.length();\n  std::string\
    \ ret = \"\";\n  for(int i = 0; i < len; i++) {\n    if(text[i] == ' ') {\n  \
    \    int j = i;\n      while(text[j] == ' ') {\n        j++;\n      }\n      if(i\
    \ == 0) {\n        ret += \"_\";\n      } else if(i == j - 1) {\n        ret +=\
    \ \"_\";\n      } else {\n        ret += \"-\";\n      }\n      i = j - 1;\n \
    \   } else {\n      ret += text[i];\n    }\n  }\n  return ret;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpxb2_hwgt: /tmp/tmpxb2_hwgt.cpp:37: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint count = 0;\n\tfor (int i =\
    \ 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tcount++;\n\t\t\
    }\n\t\telse {\n\t\t\tcount = 0;\n\t\t}\n\t\tif (count > 2) {\n\t\t\ttext[i] =\
    \ '-';\n\t\t}\n\t\telse if (count == 1) {\n\t\t\ttext[i] = '_';\n\t\t}\n\t}\n\t\
    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpi9lvmjf4: /tmp/tmpi9lvmjf4.cpp:32: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  // use the stringstream to read\
    \ the string\n  std::stringstream out;\n  bool space = false; // tracks if we\
    \ had a space previously\n  for (auto x : text) {\n    if (x == ' ') {\n     \
    \ if (space) {\n        out << '-';\n      } else {\n        out << '_';\n   \
    \     space = true;\n      }\n    } else {\n      out << x;\n      space = false;\n\
    \    }\n  }\n  return out.str();\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpaqlgvdet: /tmp/tmpaqlgvdet.cpp:33: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int k;\n    for(int i=0;i<text.length();i++){\n\
    \        if(text[i]==' '){\n            k=i;\n            while(text[k]==' '){\n\
    \                k++;\n            }\n            if(k-i>2){\n               \
    \ text[i]='-';\n                i=k-1;\n            }\n            else{\n   \
    \             text[i]='_';\n            }\n        }\n    }\n    return text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpyjndths1: /tmp/tmpyjndths1.cpp:34: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    return text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpjd5zn3yn: /tmp/tmpjd5zn3yn.cpp:16: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  int len = text.length();\n  for(int\
    \ i = 1; i < len; i++) {\n    if(text[i] == ' ' && text[i-1] == ' ') {\n     \
    \ text[i] = '-';\n    }\n  }\n  replace(text.begin(), text.end(), ' ', '_');\n\
    \  return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmph5d44rxa: /tmp/tmph5d44rxa.cpp:24: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // It's not a valid C++ source\
    \ code\n    // for(int i = 0; i < text.length(); i++) {\n    //     if(text[i]\
    \ == ' ') {\n    //         text[i] = '_';\n    //     }\n    // }\n    // return\
    \ text;\n    std::string out;\n    for(int i = 0; i < text.length(); i++) {\n\
    \        if(text[i] == ' ') {\n            out += '_';\n        } else {\n   \
    \         out += text[i];\n        }\n    }\n    return out;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmppimq4aez: /tmp/tmppimq4aez.cpp:33: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int len = text.length();\n \
    \   int i;\n    for(i=0;i<len;i++)\n    {\n        if(text[i]==' ')\n        {\n\
    \            text[i]='_';\n        }\n    }\n    if(len>2)\n    {\n        for(i=2;i<len;i++)\n\
    \        {\n            if(text[i]=='_' && text[i-1]=='_' && text[i-2]=='_')\n\
    \            {\n                text[i]='-';\n            }\n        }\n    }\n\
    \    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp1j1r9l4_: /tmp/tmp1j1r9l4_.cpp:37: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\t\n\tstd::string s = \"\";\n\t\
    int space_count = 0;\n\tfor(int i = 0; i < text.length(); i++) {\n\t\tif(text[i]\
    \ == ' ') {\n\t\t\ts += ' ';\n\t\t\tspace_count++;\n\t\t}\n\t\telse {\n\t\t\t\
    if(space_count >= 2) {\n\t\t\t\ts = s.substr(0, s.length() - 1);\n\t\t\t\ts +=\
    \ '-';\n\t\t\t}\n\t\t\telse if(space_count == 1) {\n\t\t\t\ts = s.substr(0, s.length()\
    \ - 1);\n\t\t\t\ts += '_';\n\t\t\t}\n\t\t\ts += text[i];\n\t\t\tspace_count =\
    \ 0;\n\t\t}\n\t}\n\tif(space_count >= 2) {\n\t\ts = s.substr(0, s.length() - 1);\n\
    \t\ts += '-';\n\t}\n\telse if(space_count == 1) {\n\t\ts = s.substr(0, s.length()\
    \ - 1);\n\t\ts += '_';\n\t}\n\treturn s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpt8fg4ebb: /tmp/tmpt8fg4ebb.cpp:46: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count_consec_spaces = 0;\n    for (char ch : text) {\n        if (ch\
    \ == ' ') {\n            count_consec_spaces++;\n            if (count_consec_spaces\
    \ == 1) {\n                result += \"_\";\n            }\n        } else {\n\
    \            if (count_consec_spaces > 2) {\n                result += \"-\";\n\
    \            }\n            result += ch;\n            count_consec_spaces = 0;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpgq0ixjjj: /tmp/tmpgq0ixjjj.cpp:33: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::vector<std::string> text_vec(text.begin(),\
    \ text.end());\n    std::vector<char> res;\n    std::cout << text << \"\\n\";\n\
    \    for (auto i : text_vec) {\n        // std::cout << i << \" \";\n        if\
    \ (i == \" \") {\n            if (!res.empty() && res.back() == '_') {\n     \
    \           res.pop_back();\n                res.push_back('-');\n           \
    \ } else if (!res.empty() && res.back() == '-') {\n                continue;\n\
    \            } else {\n                res.push_back('_');\n            }\n  \
    \      } else {\n            res.push_back(i[0]);\n        }\n    }\n    std::string\
    \ result(res.begin(), res.end());\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "In file included from /usr/include/c++/11/vector:66,\n                \
    \ from /usr/include/c++/11/functional:62,\n                 from /usr/include/c++/11/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/11/algorithm:74,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpfyl_nqaw.cpp:2:\n/usr/include/c++/11/bits/stl_uninitialized.h: In instantiation\
    \ of \u2018_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator,\
    \ _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _ForwardIterator = std::__cxx11::basic_string<char>*]\u2019\
    :\n/usr/include/c++/11/bits/stl_uninitialized.h:333:37:   required from \u2018\
    _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator,\
    \ std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _ForwardIterator = std::__cxx11::basic_string<char>*;\
    \ _Tp = std::__cxx11::basic_string<char>]\u2019\n/usr/include/c++/11/bits/stl_vector.h:1585:33:\
    \   required from \u2018void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator,\
    \ _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Tp = std::__cxx11::basic_string<char>;\
    \ _Alloc = std::allocator<std::__cxx11::basic_string<char> >]\u2019\n/usr/include/c++/11/bits/stl_vector.h:657:23:\
    \   required from \u2018std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator,\
    \ const allocator_type&) [with _InputIterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>;\
    \ _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]\u2019\
    \n/tmp/tmpfyl_nqaw.cpp:11:63:   required from here\n/usr/include/c++/11/bits/stl_uninitialized.h:138:72:\
    \ error: static assertion failed: result type must"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int l = text.length();\n   \
    \ std::string str;\n    int f = 0;\n    int c = 0;\n    for(int i = 0; i < l;\
    \ i++) {\n        if(text[i] == ' ') {\n            c++;\n            if(c >=\
    \ 2) {\n                str += '-';\n                c = 0;\n            }\n \
    \       }\n        else {\n            if(text[i] != ' ') {\n                str\
    \ += text[i];\n                c = 0;\n            }\n        }\n    }\n    return\
    \ str;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpt78xwvkk: /tmp/tmpt78xwvkk.cpp:35: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    if(text.length() == 0) return\
    \ text;\n    std::string res = \"\";\n    int counter = 0;\n    for(int i = 0;\
    \ i < text.length(); i++) {\n        if(text[i] == ' ') {\n            counter++;\n\
    \            continue;\n        } else {\n            if(counter == 1) res +=\
    \ \"_\";\n            else if(counter > 1) res += \"-\";\n            res += text[i];\n\
    \            counter = 0;\n        }\n    }\n    if(counter == 1) res += \"_\"\
    ;\n    else if(counter > 1) res += \"-\";\n    return res;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp02t04beu: /tmp/tmp02t04beu.cpp:33: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string res;\n    int n\
    \ = text.size();\n    int i=0;\n    while(i<n){\n        if(text[i]==' '){\n \
    \           res += '_';\n            while(i<n && text[i]==' '){\n           \
    \     res += '-';\n                i++;\n            }\n        }\n        else{\n\
    \            res += text[i];\n            i++;\n        }\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp5idl0tlg: /tmp/tmp5idl0tlg.cpp:32: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    std::string::iterator\
    \ it;\n    std::string::iterator itEnd = text.end();\n    --itEnd;\n    int index\
    \ = 0;\n    for (it = text.begin(); it < itEnd; ++it) {\n        ++index;\n  \
    \      if (*it == ' ') {\n            if (*(it + 1) == ' ') {\n              \
    \  result.push_back('-');\n                ++it;\n                while(*it ==\
    \ ' ' && it < itEnd) {\n                    ++it;\n                }\n       \
    \         --it;\n            } else {\n                result.push_back('_');\n\
    \            }\n        } else {\n            result.push_back(*it);\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpg3k5czzi: /tmp/tmpg3k5czzi.cpp:37: int main(): Assertion `candidate((\"\
    Example\")) == (\"Example\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    std::size_t\
    \ n = text.size();\n    int counter = 0;\n    for (std::size_t i = 0; i < n; i++)\
    \ {\n        if (text[i] == ' ') {\n            result += '_';\n            counter++;\n\
    \        } else {\n            result += text[i];\n            counter = 0;\n\
    \        }\n        if (counter > 2) {\n            result.back() = '-';\n   \
    \     }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpn77z83kg: /tmp/tmpn77z83kg.cpp:33: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ') {\n\
    \            if (i == 0) {\n                result += '_';\n            } else\
    \ if (i == text.size() - 1) {\n                result += '_';\n            } else\
    \ if (text[i + 1] == ' ') {\n                result += '-';\n            } else\
    \ {\n                result += '_';\n            }\n        } else {\n       \
    \     result += text[i];\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpo47w96cm: /tmp/tmpo47w96cm.cpp:33: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result;\n    std::string\
    \ not_spaces;\n    if(text.size() < 1) return result;\n    for(int i = 0; i <\
    \ text.size(); i++) {\n        if(text[i] == ' ') {\n            if(not_spaces.size()\
    \ == 0) {\n                result += '_';\n            } else {\n            \
    \    if(not_spaces.size() == 1) {\n                    result += not_spaces;\n\
    \                    result += '_';\n                } else {\n              \
    \      result += not_spaces;\n                    result += '-';\n           \
    \     }\n                not_spaces.clear();\n            }\n        } else {\n\
    \            not_spaces += text[i];\n        }\n    }\n    if(not_spaces.size()\
    \ > 0) {\n        result += not_spaces;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpmh8zcmq2: /tmp/tmpmh8zcmq2.cpp:40: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint l = text.length();\n\tstring\
    \ newText = \"\";\n\tint c = 0;\n\tfor (int i = 0; i < l; i++) {\n\t\tif (text[i]\
    \ == ' ') {\n\t\t\tif (c > 0) {\n\t\t\t\tnewText += '-';\n\t\t\t\tc = 0;\n\t\t\
    \t}\n\t\t\telse {\n\t\t\t\tnewText += '_';\n\t\t\t\tc++;\n\t\t\t}\n\t\t}\n\t\t\
    else {\n\t\t\tnewText += text[i];\n\t\t\tc = 0;\n\t\t}\n\t}\n\treturn newText;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqokt0q9w.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmpqokt0q9w.cpp:12:9: error: \u2018string\u2019 was not declared in this\
    \ scope\n   12 |         string newText = \"\";\n      |         ^~~~~~\n/tmp/tmpqokt0q9w.cpp:12:9:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/11/iosfwd:39,\n\
    \                 from /usr/include/c++/11/ios:38,\n                 from /usr/include/c++/11/istream:38,\n\
    \                 from /usr/include/c++/11/sstream:38,\n                 from\
    \ /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpqokt0q9w.cpp:2:\n/usr/include/c++/11/bits/stringfwd.h:79:33:\
    \ note:   \u2018std::string\u2019\n   79 |   typedef basic_string<char>    string;\n\
    \      |                                 ^~~~~~\nIn file included from /usr/include/c++/11/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/11/bits/ios_base.h:41,\n             \
    \    from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n\
    \                 from /usr/include/c++/11/sstream:38,\n                 from\
    \ /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpqokt0q9w.cpp:2:\n/usr/include/c++/11/string:67:11:\
    \ note:   \u2018std::pmr::string\u2019\n   67 |     using string    = basic_string<char>;\n\
    \      |           ^~~~~~\n/tmp/tmpqokt0q9w.cpp:17:33: error: \u2018newText\u2019\
    \ was not declared in this scope\n   17 |                                 newText\
    \ += '-';\n      |                                 ^~~~~~~\n/tmp/tmpqokt0q9w.cpp:21:33:\
    \ error: \u2018newText\u2019 was not declared in this scope\n   21 |         \
    \                        newText += '_';\n      |                            \
    \     ^~~~~~~\n/tmp/tmpqokt0q9w.cpp:26:25: error: \u2018newText\u2019 was not\
    \ declared in this scope\n   26 |                         newText += text[i];\n\
    \      |                         ^~~~"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // replace all spaces with underscore\n\
    \    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n\
    \            text[i] = '_';\n        }\n    }\n    // if there are more than 2\
    \ consecutive spaces, replace with '-'\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == '_' && text[i+1] == '_' && text[i+2] == '_')\
    \ {\n            text[i+1] = '-';\n            text[i+2] = '-';\n        }\n \
    \   }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n \
    \   assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpt6vobzi3: /tmp/tmpt6vobzi3.cpp:31: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\treturn text;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp5siu5ex3: /tmp/tmp5siu5ex3.cpp:16: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    text.erase(remove(text.begin(),\
    \ text.end(), ' '), text.end());\n    for (int i = 0; i < text.size(); i++) {\n\
    \        if (text[i] == ' ') {\n            text[i] = '_';\n        }\n    }\n\
    \    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpeb2vd3ti: /tmp/tmpeb2vd3ti.cpp:22: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    int len = text.length();\n \
    \   std::string result = \"\";\n    bool last_is_space = false;\n    int spaces\
    \ = 0;\n    for (int i = 0; i < len; i++) {\n        if (text[i] == ' ') {\n \
    \           spaces++;\n            if (spaces == 2) {\n                if (last_is_space)\n\
    \                    result.pop_back();\n                result += \"-\";\n  \
    \              spaces = 0;\n            }\n            last_is_space = true;\n\
    \        } else {\n            spaces = 0;\n            last_is_space = false;\n\
    \        }\n        result += text[i];\n    }\n    if (result[0] == ' ')\n   \
    \     result[0] = '_';\n    if (result[result.length() - 1] == ' ')\n        result[result.length()\
    \ - 1] = '_';\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpr6shkoyv: /tmp/tmpr6shkoyv.cpp:40: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  int len = text.length();\n  std::string\
    \ result = \"\";\n  int count = 0;\n  for(int i = 0; i < len; i++) {\n    if(text[i]\
    \ == ' ') {\n      count++;\n      if(count == 1) {\n        result += '_';\n\
    \      }\n      else if(count == 2) {\n        result += '-';\n      }\n    }\n\
    \    else {\n      count = 0;\n      result += text[i];\n    }\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpcs0z3ew_: /tmp/tmpcs0z3ew_.cpp:35: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // str_b -  \u043F\u0440\u043E\
    \u043C\u0435\u0436\u0443\u0442\u043E\u0447\u043D\u044B\u0439 \u0440\u0435\u0437\
    \u0443\u043B\u044C\u0442\u0430\u0442\n    std::string str_b;\n    // str_c - \
    \ \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\n    std::string str_c;\n\
    \    int counter = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if\
    \ (text[i] == ' ') {\n            counter++;\n            if (counter > 2) {\n\
    \                str_b += '-';\n                counter = 0;\n            } else\
    \ {\n                str_b += '_';\n            }\n        } else {\n        \
    \    str_b += text[i];\n            counter = 0;\n        }\n    }\n    if (str_b[0]\
    \ == ' ') {\n        str_c += '_';\n    }\n    for (int i = 1; i < str_b.size();\
    \ i++) {\n        if (str_b[i] == '_' && str_b[i - 1] == '_') {\n            str_c\
    \ += '-';\n        } else {\n            str_c += str_b[i];\n        }\n    }\n\
    \    return str_c;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmperic7on4: /tmp/tmperic7on4.cpp:44: int main(): Assertion `candidate((\"\
    Example\")) == (\"Example\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    for(int i = 0; i < text.size();\
    \ i++) {\n        if(text[i] == ' ') {\n            text[i] = '_';\n        }\n\
    \    }\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '_')\
    \ {\n            int j = i + 1;\n            while(j < text.size() && text[j]\
    \ == '_') {\n                j++;\n            }\n            if(j - i > 2) {\n\
    \                text[i] = '-';\n                for(int k = i + 1; k < j; k++)\
    \ {\n                    text[k] = '-';\n                }\n            }\n  \
    \          i = j;\n        }\n        else {\n            i++;\n        }\n  \
    \  }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n  \
    \  assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp1w5xsg7f: /tmp/tmp1w5xsg7f.cpp:42: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tfor (int i = 0; i < text.size();\
    \ i++) {\n\t\tif (text[i] == ' ')\n\t\t\ttext[i] = '_';\n\t}\n\tfor (int i = 0;\
    \ i < text.size(); i++) {\n\t\tif (text[i] == '_' && text[i + 1] == '_' && text[i\
    \ + 2] == '_') {\n\t\t\ttext[i] = '-';\n\t\t\ttext.erase(i + 1, 2);\n\t\t}\n\t\
    }\n\treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tint n = text.length();\n\tstring\
    \ ans;\n\tint i = 0;\n\twhile(i < n){\n\t\tif(i == 0 && text[i] == ' '){\n\t\t\
    \tans.push_back('_');\n\t\t\ti++;\n\t\t}\n\t\telse if(text[i] == ' ' && text[i\
    \ + 1] == ' '){\n\t\t\tint j = i + 1;\n\t\t\twhile(j < n && text[j] == ' '){\n\
    \t\t\t\tj++;\n\t\t\t}\n\t\t\tans.push_back('-');\n\t\t\ti = j;\n\t\t}\n\t\telse\
    \ if(text[i] == ' '){\n\t\t\tans.push_back('_');\n\t\t\ti++;\n\t\t}\n\t\telse{\n\
    \t\t\tans.push_back(text[i]);\n\t\t\ti++;\n\t\t}\n\t}\n\treturn ans;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptm_505gj.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmptm_505gj.cpp:12:9: error: \u2018string\u2019 was not declared in this\
    \ scope\n   12 |         string ans;\n      |         ^~~~~~\n/tmp/tmptm_505gj.cpp:12:9:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/11/iosfwd:39,\n\
    \                 from /usr/include/c++/11/ios:38,\n                 from /usr/include/c++/11/istream:38,\n\
    \                 from /usr/include/c++/11/sstream:38,\n                 from\
    \ /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptm_505gj.cpp:2:\n/usr/include/c++/11/bits/stringfwd.h:79:33:\
    \ note:   \u2018std::string\u2019\n   79 |   typedef basic_string<char>    string;\n\
    \      |                                 ^~~~~~\nIn file included from /usr/include/c++/11/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/11/bits/ios_base.h:41,\n             \
    \    from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n\
    \                 from /usr/include/c++/11/sstream:38,\n                 from\
    \ /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptm_505gj.cpp:2:\n/usr/include/c++/11/string:67:11:\
    \ note:   \u2018std::pmr::string\u2019\n   67 |     using string    = basic_string<char>;\n\
    \      |           ^~~~~~\n/tmp/tmptm_505gj.cpp:16:25: error: \u2018ans\u2019\
    \ was not declared in this scope; did you mean \u2018abs\u2019?\n   16 |     \
    \                    ans.push_back('_');\n      |                         ^~~\n\
    \      |                         abs\n/tmp/tmptm_505gj.cpp:24:25: error: \u2018\
    ans\u2019 was not declared in this scope; did you mean \u2018abs\u2019?\n   24\
    \ |                         ans.push_back('-');\n      |                     \
    \    ^~~\n      |                         abs\n/tmp/tmptm_505gj.cpp:28:25: error:\
    \ \u2018ans\u2019 was not declared in this scope; did you mean \u2018abs\u2019\
    ?\n   28 "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  int old_length = text.length();\n\
    \  int new_length = 0;\n  int space_count = 0;\n  for (int i = 0; i < old_length;\
    \ i++) {\n    if (text[i] == ' ') {\n      space_count++;\n    } else {\n    \
    \  space_count = 0;\n    }\n    new_length++;\n    if (space_count == 2) {\n \
    \     new_length++;\n      space_count = 0;\n    }\n  }\n  std::string new_text(new_length,\
    \ ' ');\n  space_count = 0;\n  int j = 0;\n  for (int i = 0; i < old_length; i++)\
    \ {\n    if (text[i] == ' ') {\n      space_count++;\n    } else {\n      space_count\
    \ = 0;\n    }\n    if (space_count == 1) {\n      new_text[j] = '_';\n      j++;\n\
    \    } else if (space_count == 2) {\n      new_text[j] = '-';\n      j++;\n  \
    \    space_count = 0;\n    } else {\n      new_text[j] = text[i];\n      j++;\n\
    \    }\n  }\n  return new_text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp52ljemxj: /tmp/tmp52ljemxj.cpp:53: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  //...\n  return \"\";\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpz645gh9p: /tmp/tmpz645gh9p.cpp:16: int main(): Assertion `candidate((\"\
    Example\")) == (\"Example\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tif (text.size() == 0) {\n\t\t\
    return text;\n\t}\n\tint cnt = 0;\n\tbool first_space = false;\n\tfor (int i =\
    \ 0; i < text.size(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tcnt++;\n\t\t\t\
    if (cnt == 1) {\n\t\t\t\tfirst_space = true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\
    \tcnt = 0;\n\t\t}\n\t}\n\tif (first_space) {\n\t\ttext = '_' + text;\n\t}\n\t\
    for (int i = 1; i < text.size(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tint\
    \ j = i + 1;\n\t\t\twhile (j < text.size() && text[j] == ' ') {\n\t\t\t\tj++;\n\
    \t\t\t}\n\t\t\tif (j - i > 2) {\n\t\t\t\ttext[i] = '-';\n\t\t\t\tint pos = i +\
    \ 1;\n\t\t\t\twhile (pos < j) {\n\t\t\t\t\ttext.erase(pos, 1);\n\t\t\t\t}\n\t\t\
    \t}\n\t\t\telse {\n\t\t\t\ttext[i] = '_';\n\t\t\t}\n\t\t}\n\t}\n\treturn text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpbht2gkee: /tmp/tmpbht2gkee.cpp:53: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string temp = \"\";\n \
    \   std::string res = \"\";\n    for(int i = 0; i < text.length(); i++) {\n  \
    \      if(text[i] == ' ')\n            temp += \"_\";\n        else {\n      \
    \      if(temp == \"__\") {\n                res += \"-\";\n                temp\
    \ = \"\";\n            }\n            else if(temp != \"\") {\n              \
    \  res += temp;\n                temp = \"\";\n            }\n            res\
    \ += text[i];\n        }\n    }\n    if(temp == \"__\")\n        res += \"-\"\
    ;\n    else if(temp != \"\")\n        res += temp;\n    return res;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpw4jo49mn: /tmp/tmpw4jo49mn.cpp:38: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // Your code goes here\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpghit1232: /tmp/tmpghit1232.cpp:15: int main(): Assertion `candidate((\"\
    Example\")) == (\"Example\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n  std::string text1 = \"\";\n  int\
    \ c = 0;\n  for(int i = 0; i < text.length(); i++) {\n    if(text[i] == ' ') {\n\
    \      if(c == 0) {\n        text1 += '_';\n        c++;\n      } else if(c ==\
    \ 1) {\n        text1 += '_';\n        c++;\n      } else {\n        text1 +=\
    \ '-';\n        c++;\n      }\n    } else {\n      text1 += text[i];\n      c\
    \ = 0;\n    }\n  }\n  return text1;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpn6bxettm: /tmp/tmpn6bxettm.cpp:37: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // write your code here\n  \
    \  std::string out = \"\";\n    bool was_space = false;\n    for (auto c : text)\
    \ {\n        if (c == ' ') {\n            if (was_space) {\n                out\
    \ += '-';\n            } else {\n                out += '_';\n               \
    \ was_space = true;\n            }\n        } else {\n            out += c;\n\
    \            was_space = false;\n        }\n    }\n    return out;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpwo06hr_z: /tmp/tmpwo06hr_z.cpp:33: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    // Write your code here\n  \
    \  // Don't forget to return the result :)\n    for(int i=0;i<text.length();i++){\n\
    \        if(text[i]==' '){\n            text[i]='_';\n        }\n    }\n    return\
    \ text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpk0ypp_9u: /tmp/tmpk0ypp_9u.cpp:25: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::cout << \"Received: \"\
    \ << text << \"\\n\";\n    std::string output = \"\";\n    int spaces_count =\
    \ 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\
    \ ') {\n            spaces_count++;\n        } else {\n            spaces_count\
    \ = 0;\n        }\n        if (spaces_count > 2) {\n            if (output[output.length()\
    \ - 1] != '-') {\n                output += '-';\n            }\n        } else\
    \ if (text[i] == ' ') {\n            output += '_';\n        } else {\n      \
    \      output += text[i];\n        }\n    }\n    return output;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpecelhhc6: /tmp/tmpecelhhc6.cpp:37: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string res = \"\";\n  \
    \  for (int i = 0; i < text.size(); i++) {\n        int x = 0;\n        if (text[i]\
    \ == ' ') {\n            while (text[i + x] == ' ') x++;\n            if (x >\
    \ 2) res += \"-\";\n            else {\n                while (x > 0) {\n    \
    \                res += \"_\";\n                    x--;\n                }\n\
    \            }\n        }\n        else {\n            res += text[i];\n     \
    \   }\n    }\n    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpeg3xvlct: /tmp/tmpeg3xvlct.cpp:34: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\tstd::string result = \"\";\n\t\
    int cnt = 0;\n\tfor (int i = 0; i < text.size(); i++) {\n\t\tif (text[i] == '\
    \ ') {\n\t\t\tif (cnt == 0) {\n\t\t\t\tresult.push_back('_');\n\t\t\t\tcnt++;\n\
    \t\t\t}\n\t\t\telse if (cnt == 1) {\n\t\t\t\tresult.push_back('-');\n\t\t\t\t\
    cnt++;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tresult.push_back(text[i]);\n\t\t\tcnt\
    \ = 0;\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmp4di35g5r: /tmp/tmp4di35g5r.cpp:35: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\t// REPLACE ALL SPACES WITH UNDERSCORES\n\
    \tstd::replace(text.begin(), text.end(), ' ', '_');\n\t// std::replace(s.begin(),\
    \ s.end(), 'a', 'e');\n\t// APPLY THE CONDITION\n\t// std::string::size_type i\
    \ = 0;\n\n\t// while (i < text.size()) {\n\t// \tif (text[i] == '_' && text[i\
    \ + 1] == '_' && text[i + 2] == '_') {\n\t// \t\ttext[i] = '-';\n\t// \t\ttext.erase(i\
    \ + 1, 2);\n\t// \t}\n\t// \ti++;\n\t// }\n\t// return text;\n\t// REWRITING THE\
    \ CODE ABOVE\n\tint i = 0;\n\twhile (i < text.size()) {\n\t\tif (text[i] == '_'\
    \ && text[i + 1] == '_' && text[i + 2] == '_') {\n\t\t\ttext[i] = '-';\n\t\t\t\
    text.erase(i + 1, 2);\n\t\t}\n\t\telse {\n\t\t\ti++;\n\t\t}\n\t}\n\treturn text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\t// your code here\n\tstd::string\
    \ result;\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ')\
    \ {\n\t\t\tif (i == 0) {\n\t\t\t\tresult += '_';\n\t\t\t}\n\t\t\telse if (text[i\
    \ - 1] == ' ') {\n\t\t\t\tresult += '-';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult\
    \ += '_';\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tresult += text[i];\n\t\t}\n\t}\n\t\
    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmphn82553y: /tmp/tmphn82553y.cpp:35: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n\t\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpeenn25q4: /tmp/tmpeenn25q4.cpp:15: int main(): Assertion `candidate((\"\
    Example\")) == (\"Example\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string text_with_underscores;\n\
    \    std::string text_with_dashes;\n    size_t space_count = 0;\n    for (char\
    \ const &c : text) {\n        if (isspace(c)) {\n            space_count++;\n\
    \            if (space_count == 2) {\n                text_with_underscores +=\
    \ \"-\";\n            }\n        } else {\n            text_with_underscores +=\
    \ c;\n            space_count = 0;\n        }\n    }\n    // std::cout << text_with_underscores\
    \ << std::endl;\n    space_count = 0;\n    for (char const &c : text_with_underscores)\
    \ {\n        if (isspace(c)) {\n            space_count++;\n            if (space_count\
    \ == 1) {\n                text_with_dashes += \"_\";\n            }\n       \
    \ } else {\n            text_with_dashes += c;\n            space_count = 0;\n\
    \        }\n    }\n    return text_with_dashes;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmppl_k5c15: /tmp/tmppl_k5c15.cpp:43: int main(): Assertion `candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string result = \"\";\n\
    \    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n            if (count > 2) {\n   \
    \             continue;\n            }\n            result += '_';\n        }\
    \ else {\n            if (count > 2) {\n                result += '-';\n     \
    \       }\n            count = 0;\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpxnoxz5m5: /tmp/tmpxnoxz5m5.cpp:35: int main(): Assertion `candidate((\"\
    Exa   mple\")) == (\"Exa-mple\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    std::string ans = \"\";\n  \
    \  for(int i = 0; i < text.size(); i++) {\n        if(i == 0 && text[i] == ' ')\
    \ {\n            ans += '_';\n        }\n        else if(text[i] == ' ' && text[i\
    \ - 1] == ' ') {\n            ans += '-';\n        }\n        else if(text[i]\
    \ == ' ') {\n            ans += '_';\n        }\n        else {\n            ans\
    \ += text[i];\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "tmpa22eo1k_: /tmp/tmpa22eo1k_.cpp:32: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// fix_spaces(\"Example\"\
    ) == \"Example\"\n// fix_spaces(\"Example 1\") == \"Example_1\"\n// fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n// fix_spaces(\" Example   3\") == \"_Example-3\"\
    \nstd::string fix_spaces(std::string text) {\n    for(int i = 0; i < text.size();\
    \ i++) {\n        if(text[i] == ' ') {\n            int j = i;\n            int\
    \ cnt = 0;\n            for(; j < text.size() && text[j] == ' '; j++) {\n    \
    \            cnt++;\n            }\n            if(cnt >= 2) {\n             \
    \   text[i] = '-';\n                while(j < text.size()) {\n               \
    \     text[i+1] = text[j];\n                    i++;\n                    j++;\n\
    \                }\n                text = text.substr(0, i);\n            } else\
    \ {\n                text[i] = '_';\n            }\n        }\n    }\n    return\
    \ text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp20aguh4n: /tmp/tmp20aguh4n.cpp:37: int main(): Assertion `candidate((\"\
    Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\")' failed.\n"
  exit_code: -6
  status: Exception

name: HumanEval_71_triangle_area
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n   if(a+b<=c||b+c<=a||a+c<=b){\n    return -1;\n   }\n    float s = (a+b+c)/2.0;\n\
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpi95b733q: /tmp/tmpi95b733q.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n \
    \   }\n    long p = (a + b + c) / 2;\n    return sqrt(p * (p - a) * (p - b) *\
    \ (p - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpv4ww9dkb: /tmp/tmpv4ww9dkb.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    if(s-a > 0 && s-b > 0 && s-c > 0) {\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp0z9fbzmw: /tmp/tmp0z9fbzmw.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tlong s = (a + b + c) / 2;\n\tfloat area = sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n\tif (area <= 0)\n\t\treturn -1;\n\telse\n\t\treturn area;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpm65aagrk: /tmp/tmpm65aagrk.cpp:22: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif (a + b <= c || a + c <= b || b + c <= a) {\n\t\treturn -1;\n\t}\n\t\
    float p = (a + b + c) / 2.0;\n\tfloat area = sqrt(p * (p - a) * (p - b) * (p -\
    \ c));\n\treturn roundf(area * 100) / 100;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpru6izi86: /tmp/tmpru6izi86.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c&&a+c>b&&b+c>a) return 0.5*sqrt((a+b+c)*(a+b-c)*(a+c-b)*(b+c-a));\n\
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp4xcq7y4h: /tmp/tmp4xcq7y4h.cpp:17: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpv_ln21v3: /tmp/tmpv_ln21v3.cpp:27: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float area = -1;\n  float s = (a + b + c) / 2.0;\n  area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n  if (a + b > c && a + c > b && b + c > a) {\n \
    \   return area;\n  }\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmph5c8kgs6: /tmp/tmph5c8kgs6.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float p, area;\n    p = (a + b + c) / 2.0;\n    area = sqrt(p * (p -\
    \ a) * (p - b) * (p - c));\n    if (area > 0)\n        return area;\n    else\n\
    \        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpo5m4jb_b: /tmp/tmpo5m4jb_b.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float p = (a + b + c) / 2.0;\n    float area = sqrt(p * (p - a) * (p\
    \ - b) * (p - c));\n    return (area > 0) ? area : -1;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpxtgn2z0i: /tmp/tmpxtgn2z0i.cpp:20: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif(a>0 && b>0 && c>0 && (a+b>c) && (a+c>b) && (b+c>a))\n\t\treturn (float)sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \telse\n\t\treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp9zkcj7mn: /tmp/tmp9zkcj7mn.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (area <= 0) {\n    return -1;\n  }\n  return roundf(area *\
    \ 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpjeys87gg: /tmp/tmpjeys87gg.cpp:22: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat area;\n\tif (a + b > c && a + c > b && b + c > a) {\n\t\tarea = a\
    \ * b * c;\n\t\tarea = sqrt(area);\n\t\treturn area;\n\t}\n\telse {\n\t\treturn\
    \ -1;\n\t}\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmppcqiluz8: /tmp/tmppcqiluz8.cpp:24: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif(a + b > c && a + c > b && b + c > a) {\n\t\tfloat s = (a + b + c) /\
    \ 2.0;\n\t\treturn sqrt(s * (s - a) * (s - b) * (s - c));\n\t}\n\treturn -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp7763jxah: /tmp/tmp7763jxah.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) /\
    \ 2.0;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return (roundf(area\
    \ * 100) / 100);\n  }\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpsojiokdo: /tmp/tmpsojiokdo.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // need to check if the numbers are positive, and if the sum of any two\
    \ sides is greater than the third\n  // use std::max to find greatest of the three\n\
    \  // ensure that each side is greater than 0\n  if (a > 0 && b > 0 && c > 0 &&\
    \ (a + b) > c && (a + c) > b && (b + c) > a) {\n    float s = (a + b + c) / 2.0;\n\
    \    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpxg3wozpx: /tmp/tmpxg3wozpx.cpp:25: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (area <= 0) {\n    return -1;\n  }\n  return area;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmph16vzvw6: /tmp/tmph16vzvw6.cpp:22: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif ((a + b) > c && (a + c) > b && (b + c) > a) {\n\t\tdouble s = (a + b\
    \ + c) / 2.0;\n\t\tdouble area = sqrt(s * (s - a) * (s - b) * (s - c));\n\t\t\
    return area;\n\t}\n\telse {\n\t\treturn -1;\n\t}\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp0ep4ep8h: /tmp/tmp0ep4ep8h.cpp:25: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // your code here\n    if (a > 0 && b > 0 && c > 0 && a + b > c && a\
    \ + c > b && b + c > a) {\n        float s = (a + b + c) / 2.0;\n        return\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpxngfqw9l: /tmp/tmpxngfqw9l.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Type your code here\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpfso8bomq: /tmp/tmpfso8bomq.cpp:16: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float p = (a + b + c) / 2.0;\n  float area = sqrt(p * (p - a) * (p - b)\
    \ * (p - c));\n  if (area > 0) {\n    return area;\n  }\n  return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmppxkrgish: /tmp/tmppxkrgish.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // your code here\n  return -1;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpnxsfapgi: /tmp/tmpnxsfapgi.cpp:17: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a+b <= c || a+c <= b || b+c <= a) return -1;\n    double p = (a+b+c)/2.0;\n\
    \    return sqrt(p*(p-a)*(p-b)*(p-c));\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpy111q224: /tmp/tmpy111q224.cpp:20: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    long sum = a + b + c;\n    if (a > 0 && b > 0 && c > 0 && (a < sum) &&\
    \ (b < sum) && (c < sum)) {\n        float s = (a + b + c) / 2.0;\n        return\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpzka9x8g0: /tmp/tmpzka9x8g0.cpp:22: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a+b>c && a+c>b && b+c>a) {\n    float s = (a+b+c)/2.0;\n    float area\
    \ = sqrt(s*(s-a)*(s-b)*(s-c));\n    return roundf(area * 100) / 100;\n  }\n  return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp041gbax8: /tmp/tmp041gbax8.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s=(a+b+c)/2.0;\n    if((a+b>c)&&(a+c>b)&&(b+c>a))\n    {\n    \
    \    float area=sqrt(s*(s-a)*(s-b)*(s-c));\n        return roundf(area*100)/100;\n\
    \    }\n    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp1d4evpb0: /tmp/tmp1d4evpb0.cpp:27: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a + b > c && a + c > b && b + c > a)\n        return sqrt(4 * a *\
    \ a * b * b - (a * a + b * b - c * c) * (a * a + b * b - c * c)) / 4;\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpev8ucz33: /tmp/tmpev8ucz33.cpp:20: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  double S, area;\n  if(a + b > c && a + c > b && b + c > a) {\n    S = (a\
    \ + b + c) / 2.0;\n    area = sqrt(S * (S - a) * (S - b) * (S - c));\n    return\
    \ (float)area;\n  }\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmplpx3s21y: /tmp/tmplpx3s21y.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a+b > c && a+c > b && b+c > a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpk4lt0162: /tmp/tmpk4lt0162.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp0l85n1zn: /tmp/tmp0l85n1zn.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    if (s - a <= 0 || s - b <= 0 || s -\
    \ c <= 0)\n        return -1;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp_t9ojuk2: /tmp/tmp_t9ojuk2.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // TODO: Implement your solution here\n    float p = (a+b+c)/2.0;\n \
    \   float area = sqrt(p*(p-a)*(p-b)*(p-c));\n    if(area<=0) return -1;\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp_2d25sla: /tmp/tmp_2d25sla.cpp:21: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c && a+c>b && b+c>a) return sqrt(a*b*c*(a+b+c))*1.0/4;\n  return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpkvo56j78: /tmp/tmpkvo56j78.cpp:17: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  long max = std::max(a, std::max(b, c));\n  long sum = a + b + c;\n  float\
    \ p = sum / 2.0;\n  float area = sqrt(p * (p - a) * (p - b) * (p - c));\n  if\
    \ (area > 0 && area < max)\n    return area;\n  return -1;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpx8v41zqd: /tmp/tmpx8v41zqd.cpp:22: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if((a + b > c) && (a + c > b) && (b + c > a))\n        return abs((a\
    \ + b + c) * (c - a + b) * (c + a - b) * (a + b - c)) / 4.0;\n    else\n     \
    \   return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpehqm0c9_: /tmp/tmpehqm0c9_.cpp:19: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  if(a + b > c && a + c > b && b + c > a)\
    \ {\n    float result = sqrt(s * (s - a) * (s - b) * (s - c));\n    return (float)((int)(result\
    \ * 100)) / 100;\n  } else {\n    return -1;\n  }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp4zlisp0z: /tmp/tmp4zlisp0z.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a + b <= c || a + c <= b || b + c <= a) {\n    return -1;\n  }\n  float\
    \ s = (a + b + c) / 2.0;\n  return sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpcebgallb: /tmp/tmpcebgallb.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\t// Check for Validity\n\tif (a+b > c && a+c > b && b+c > a) {\n\t\t// Heron's\
    \ Formula\n\t\tfloat s = (a+b+c)/2.0;\n\t\treturn sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \t}\n\treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpgncrwxo8: /tmp/tmpgncrwxo8.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a<0 || b<0 || c<0) return -1;\n    if (a+b<=c || a+c<=b || b+c<=a)\
    \ return -1;\n    long s = (a+b+c)/2;\n    return sqrt(s*(s-a)*(s-b)*(s-c));\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmptuk57bwj: /tmp/tmptuk57bwj.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s=(a+b+c)/2.0;\n    float area=sqrt(s*(s-a)*(s-b)*(s-c));\n   \
    \ return (area>0?area:-1);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpjiz0ftyi: /tmp/tmpjiz0ftyi.cpp:20: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    if (s - a <= 0 || s - b <= 0 || s -\
    \ c <= 0) {\n        return -1;\n    }\n    return sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpxxnra7g6: /tmp/tmpxxnra7g6.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tstd::vector<long> sides(3);\n\tsides[0] = a;\n\tsides[1] = b;\n\tsides[2]\
    \ = c;\n\tstd::sort(sides.begin(), sides.end());\n\tif (sides[0] + sides[1] >\
    \ sides[2]) {\n\t\tfloat p = (float)(a + b + c) / 2;\n\t\treturn sqrt(p * (p -\
    \ a) * (p - b) * (p - c));\n\t}\n\treturn -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmph6fhy8_f: /tmp/tmph6fhy8_f.cpp:27: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b<=c || a+c<=b || b+c<=a)\n    return -1;\n  float p = (a+b+c)/2.0;\n\
    \  float area = sqrt(p*(p-a)*(p-b)*(p-c));\n  return round(area*100)/100;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpk3wvkmy2: /tmp/tmpk3wvkmy2.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Side length must be positive\n    if(a <= 0 || b <= 0 || c <= 0) return\
    \ -1;\n    // Ensure valid triangle property\n    if(a + b <= c || a + c <= b\
    \ || b + c <= a) return -1;\n    // There exists a valid triangle\n    float s\
    \ = 0.5 * (a + b + c);\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpzk7znvkq: /tmp/tmpzk7znvkq.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // your code here\n  //float s = (a+b+c)/2;\n  //return sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  double s = (a+b+c)/2.0;\n  double area = sqrt(s*(s-a)*(s-b)*(s-c));\n  if(area\
    \ < 0)\n  \treturn -1;\n  return area;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp9bebwxqb: /tmp/tmp9bebwxqb.cpp:24: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif (a > b + c || b > a + c || c > a + b) {\n\t\treturn -1;\n\t}\n\telse\
    \ {\n\t\tfloat s = (a + b + c) / 2.0;\n\t\treturn sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n\t}\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpehjd3wss: /tmp/tmpehjd3wss.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // TODO: Your code here!\n    float s;\n    if(a+b>c && a+c>b && b+c>a)\n\
    \    {\n        s=(a+b+c)/2.0;\n        return sqrt(s*(s-a)*(s-b)*(s-c));\n  \
    \  }\n    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp7plyxmad: /tmp/tmp7plyxmad.cpp:28: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float p = (a + b + c) / 2.0;\n    float area = sqrt(p * (p - a) * (p\
    \ - b) * (p - c));\n    if (area < 0) {\n        return -1;\n    }\n    return\
    \ roundf(area * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp_j62d7qz: /tmp/tmp_j62d7qz.cpp:22: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a + b <= c || a + c <= b || b + c <= a){\n        return -1;\n   \
    \ }\n    float s = (a + b + c) / 2.0;\n    return sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpf_oisbix: /tmp/tmpf_oisbix.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n  \
    \  }\n    float s = (a + b + c) / 2.0;\n    return sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp9yituqvy: /tmp/tmp9yituqvy.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = -1;\n    if(a+b>c && a+c>b && b+c>a){\n        float s =\
    \ (a+b+c)/2.0;\n        area = sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp9hyxdb5p: /tmp/tmp9hyxdb5p.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // TODO: Implement your code here\n  if(a<=0 || b<=0 || c<=0){\n    return\
    \ -1;\n  }\n  if(a+b<=c || a+c<=b || b+c<=a){\n    return -1;\n  }\n  float s\
    \ = (a+b+c)/2.0;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n  return floor(area*100)/100;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp9ph1pq86: /tmp/tmp9ph1pq86.cpp:27: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a + b > c && a + c > b && b + c > a)\n    return sqrt((a + b + c) *\
    \ (a + b - c) * (a - b + c) * (-a + b + c)) * 0.25;\n  return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp0rw0sish: /tmp/tmp0rw0sish.cpp:20: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp0r_byvao: /tmp/tmp0r_byvao.cpp:16: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  double s = (a + b + c) / 2.0;\n  // printf(\"s: %lf\", s);\n  double ans\
    \ = (s * (s - a) * (s - b) * (s - c));\n  if (ans <= 0) {\n    return -1;\n  }\n\
    \  ans = sqrt(ans);\n  return ans;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpxuz9qynk: /tmp/tmpxuz9qynk.cpp:25: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a < 0 || b < 0 || c < 0) return -1;\n    if(a + b > c && a + c > b\
    \ && b + c > a)\n        return 0.5 * std::sqrt((a + b + c) * (a + b - c) * (a\
    \ + c - b) * (b + c - a));\n    return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp5dcp5ttd: /tmp/tmp5dcp5ttd.cpp:19: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp414ul_sz: /tmp/tmp414ul_sz.cpp:26: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a+b > c && a+c > b && b+c > a)\n        return abs((float)a*(float)b*0.5);\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp46vrery2: /tmp/tmp46vrery2.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area < 0)\n        return -1;\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpw7tivbna: /tmp/tmpw7tivbna.cpp:21: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    return 0;\n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpqkx_y_l2: /tmp/tmpqkx_y_l2.cpp:16: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0)\n        return roundf(area * 100) / 100;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpjo_k5sxt: /tmp/tmpjo_k5sxt.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  \tif(!(a+b>c && a+c>b && b+c>a)){\n  \t\treturn -1;\n  \t}\n  \tdouble\
    \ s = (a+b+c)/2.0;\n  \tdouble area = std::sqrt(s*(s-a)*(s-b)*(s-c));\n  \treturn\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp4nuns583: /tmp/tmp4nuns583.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat area,p;\n\tp=(a+b+c)/2.0;\n\tarea=sqrt(p*(p-a)*(p-b)*(p-c));\n\t\
    if(area>0)\n\treturn area;\n\telse\n\treturn -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpg_j_s4ba: /tmp/tmpg_j_s4ba.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s, area;\n    // Using formula s = (a+b+c)/2\n    s = (a+b+c)/2;\n\
    \    area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return (area > 0)?round(area*100)/100:-1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpkqe_afoy: /tmp/tmpkqe_afoy.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float area;\n  if(a<b+c&&b<a+c&&c<a+b){\n    float s=(a+b+c)/2.0;\n   \
    \ area=sqrt(s*(s-a)*(s-b)*(s-c));\n  }\n  else{\n    area=-1;\n  }\n  return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp6gd98lmr: /tmp/tmp6gd98lmr.cpp:26: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    return 0;\n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpvjh172z9: /tmp/tmpvjh172z9.cpp:16: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    assert( a!= 0 && b!= 0 && c!= 0);\n    if( a+b>c && a+c>b && b+c>a)\n\
    \    {\n        double p = double(a+b+c)/2;\n        double area = sqrt(p*(p-a)*(p-b)*(p-c));\n\
    \        return area;\n    }\n    else\n    {\n        return -1;\n    }\n   \
    \ \n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp4ds5w3b9: /tmp/tmp4ds5w3b9.cpp:29: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\t// put your code here\n\tif ((a + b) > c && (a + c) > b && (b + c) > a)\n\
    \t{\n\t\t//area = (1/2)*(a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c);\n\t\tfloat s = (a +\
    \ b + c) / 2;\n\t\tfloat area = sqrt(s*(s - a)*(s - b)*(s - c));\n\t\treturn area;\n\
    \t}\n\telse\n\t{\n\t\treturn -1;\n\t}\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp2foepra3: /tmp/tmp2foepra3.cpp:29: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif (a + b > c && a + c > b && b + c > a) {\n\t\tfloat s = float(a + b +\
    \ c) / 2;\n\t\tfloat area = sqrt(s * (s - a) * (s - b) * (s - c));\n\t\treturn\
    \ floor(area * 100) / 100;\n\t}\n\treturn -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp79h_h2b5: /tmp/tmp79h_h2b5.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a < 0 || b < 0 || c < 0){\n        return -1;\n    }\n    float s\
    \ = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    float res = (float)((int)(area * 100)) / 100;\n    return res;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpydqz2nn2: /tmp/tmpydqz2nn2.cpp:23: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Write your code here\n  float s = 0;\n  s = (a+b+c)/2;\n  float area\
    \ = 0;\n  if(a<=0 || b<=0 || c<=0){\n    return -1;\n  }else if(a+b>c && a+c>b\
    \ && b+c>a){\n    area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n  }else{\n\
    \    return -1;\n  }\n}\nint main() {\n    auto candidate = triangle_area;\n \
    \   assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp1dkjzqjp: /tmp/tmp1dkjzqjp.cpp:29: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    //cout << a << ' ' << b << ' ' << c << endl;\n    float s = (a + b +\
    \ c) / 2.0;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    //cout\
    \ << area << endl;\n    if(area > 0)\n        return area;\n    else\n       \
    \ return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmppjzjp065: /tmp/tmppjzjp065.cpp:25: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if((a+b)>c && (a+c)>b && (b+c)>a)\n        return a*b*c;\n    else\n\
    \        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpjgr3e_u9: /tmp/tmpjgr3e_u9.cpp:19: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Type your solution here.\n    if(a<=0 || b<=0 || c<=0)\n        return\
    \ -1;\n    float s = (a+b+c)/2.0;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return roundf(area*100)/100;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpfl6_uf_c: /tmp/tmpfl6_uf_c.cpp:22: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n   if((a+b)<=c || (a+c)<=b || (b+c)<=a)\n      return -1;\n   float s = (a+b+c)/2.0;\n\
    \   float area = sqrt(s*(s-a)*(s-b)*(s-c));\n   return area;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpuojifoix: /tmp/tmpuojifoix.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    \n    if (a + b <= c || b + c <= a || a + c <= b) {\n        return -1;\n\
    \    }\n    float s = float(a + b + c) / 2;\n    return sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    \n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmputue0a15: /tmp/tmputue0a15.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float x,y,z;\n  x=a;\n  y=b;\n  z=c;\n  if(a+b>c && a+c>b && b+c>a)\n \
    \ {\n    float s=(x+y+z)/2;\n    return sqrt(s*(s-x)*(s-y)*(s-z));\n  }\n  else\n\
    \  {\n    return -1;\n  }\n  \n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpjb0lwjho: /tmp/tmpjb0lwjho.cpp:31: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a + b <= c || a + c <= b || b + c <= a)\n    return -1;\n  double s\
    \ = (a + b + c) / 2.0;\n  double area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \  return (float)(area * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp9ev2sznh: /tmp/tmp9ev2sznh.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a <= 0 || b <= 0 || c <= 0) return -1;\n    else {\n        if (a\
    \ > b && a > c) {\n            if (a >= b + c) return -1;\n            else {\n\
    \                float s = (a + b + c) / 2.0;\n                float result =\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n                return result;\n   \
    \         }\n        }\n        else if (b > a && b > c) {\n            if (b\
    \ >= a + c) return -1;\n            else {\n                float s = (a + b +\
    \ c) / 2.0;\n                float result = sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n                return result;\n            }\n        }\n        else\
    \ if (c > a && c > b) {\n            if (c >= a + b) return -1;\n            else\
    \ {\n                float s = (a + b + c) / 2.0;\n                float result\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n                return result;\n \
    \           }\n        }\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp_74khi2q: /tmp/tmp_74khi2q.cpp:44: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n   float s=(a+b+c)/2.0;\n   float area = sqrt(s*(s-a)*(s-b)*(s-c));\n   return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpjrfqrkmx: /tmp/tmpjrfqrkmx.cpp:19: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a + b > c && a + c > b && b + c > a)\n    return abs((a + b + c) * (a\
    \ + b - c) * (a - b + c) * (-a + b + c)) / 4.0;\n  return -1;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpbulgubih: /tmp/tmpbulgubih.cpp:18: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  //your code here\n  \n  float p = (a+b+c)/2.0;\n  float s = sqrt(p*(p-a)*(p-b)*(p-c));\n\
    \  if(s>0)\n    return s;\n  else\n    return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpz_cvqv49: /tmp/tmpz_cvqv49.cpp:25: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a <= 0 || b <= 0 || c <= 0)\n        return -1;\n    if(a > b+c ||\
    \ b > a+c || c > a+b)\n        return -1;\n    return (a+b+c)/2.0;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp2qiaq798: /tmp/tmp2qiaq798.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a<=0 || b<=0 || c<=0) return -1;\n    if(a+b>c && a+c>b && b+c>a)\
    \ return sqrt( (a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c) )/4;\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpi4s30cbl: /tmp/tmpi4s30cbl.cpp:20: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Check if the three sides form a valid triangle. \n    if(a + b > c\
    \ && a + c > b && b + c > a) {\n      return 0.5 * a * b;\n    } else {\n    \
    \  return -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n \
    \   assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpwdmrhyr5: /tmp/tmpwdmrhyr5.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (a + b > c && a + c > b && b + c > a) {\n        return\
    \ area;\n    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp4wx3v274: /tmp/tmp4wx3v274.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if ((a+b>c) && (a+c>b) && (b+c>a))\n    return sqrt(pow(a,2)+pow(b,2)-pow(c,2));\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpqskmq140: /tmp/tmpqskmq140.cpp:19: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a) {\n        float s = (a+b+c)/2.0;\n     \
    \   float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return roundf(area * 100.0)\
    \ / 100.0;\n    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpr9qpjc_5: /tmp/tmpr9qpjc_5.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if((a+b)>c && (a+c)>b && (b+c)>a)\n      return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n      return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpe_dczxvr: /tmp/tmpe_dczxvr.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // if one side is greater than the other two sides added together\n  if\
    \ (a > b + c || b > a + c || c > a + b) {\n    return -1;\n  }\n  float area =\
    \ sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4;\n  return\
    \ roundf(area * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpz34fx9tl: /tmp/tmpz34fx9tl.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if( a + b > c && a + c > b && b + c > a )\n        return ( ( a + b +\
    \ c ) * ( -a + b + c ) * ( a - b + c ) * ( a + b - c ) ) / 16.0;\n    return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpph3aal24: /tmp/tmpph3aal24.cpp:18: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n \
    \   }\n    return sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a + b + c))\
    \ / 4;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpsop2pm2o: /tmp/tmpsop2pm2o.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    \n    //TODO: Implement your solution here\n    if(a <= 0 || b <= 0 ||\
    \ c <= 0) return -1;\n    else if(a + b <= c || a + c <= b || b + c <= a) return\
    \ -1;\n    else return (float) sqrt((a + b + c) * (a + b - c) * (a - b + c) *\
    \ (-a + b + c)) / 4;\n}\nint main() {\n    auto candidate = triangle_area;\n \
    \   assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpedthh7r2: /tmp/tmpedthh7r2.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a <= 0 || b <= 0 || c <= 0) return -1;\n  if (a + b <= c || a + c <=\
    \ b || b + c <= a) return -1;\n  float s = (a + b + c) / 2.0;\n  return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpewdm6kv9: /tmp/tmpewdm6kv9.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = 0.5 * (a + b + c);\n    float A = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    if(A >= 0) return A;\n    else return -1;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpml7bzzmh: /tmp/tmpml7bzzmh.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a < 1 || b < 1 || c < 1) return -1;\n    if ((a + b) <= c || (a +\
    \ c) <= b || (b + c) <= a) return -1;\n    float s = (a + b + c) / 2.0;\n    return\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpdice1ccp: /tmp/tmpdice1ccp.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    if(a+b<=c||a+c<=b||b+c<=a)\n        return\
    \ -1;\n    else\n    {\n        float s=(a+b+c)/2.0;\n        float area=sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return area;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp8v5qxsu0: /tmp/tmp8v5qxsu0.cpp:26: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (area > 0)\n    return area;\n  else\n    return -1;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmppnqc0dpl: /tmp/tmppnqc0dpl.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float p = (a + b + c) / 2.0;\n  float area = sqrt(p * (p - a) * (p - b)\
    \ * (p - c));\n  return (area < 0) ? -1 : area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpkmc5mfpl: /tmp/tmpkmc5mfpl.cpp:19: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a <= 0 || b <= 0 || c <= 0) return -1;\n    // this is where std::max\
    \ or std::min comes in handy\n    if(a + b <= c || a + c <= b || b + c <= a) return\
    \ -1;\n    float s = (a + b + c) / 2.0;\n    return std::sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmphdppfuek: /tmp/tmphdppfuek.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Your code here\n  if(a+b>c && a+c>b && b+c>a)\n  {\n    float s = (a+b+c)/2.0;\n\
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return roundf(area * 100) /\
    \ 100;\n  }\n  else\n  {\n    return -1;\n  }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpdqnh3w4u: /tmp/tmpdqnh3w4u.cpp:28: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    assert(false);\n    return -1;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpe7kabmdw: /tmp/tmpe7kabmdw.cpp:12: float triangle_area(long int, long\
    \ int, long int): Assertion `false' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float ans = 0;\n    if (a <= 0 || b <= 0 || c <= 0)\n        return -1;\n\
    \    if (a + b <= c || a + c <= b || b + c <= a)\n        return -1;\n    ans\
    \ = sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4;\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp9ga611lk: /tmp/tmp9ga611lk.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if ((a + b) > c && (a + c) > b && (b + c) > a) {\n    float s = (a + b\
    \ + c) / 2.0;\n    float A = sqrt(s * (s - a) * (s - b) * (s - c));\n    return\
    \ roundf(A * 100) / 100;\n  } else\n    return -1;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp8nlc9sxv: /tmp/tmp8nlc9sxv.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // your code goes here\n    float area;\n    if(a+b>c && a+c>b && b+c>a)\n\
    \    {\n        float s=(a+b+c)/2.0;\n        area=sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return area;\n    }\n    else\n    {\n        return -1;\n    }\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp11b8hjeb: /tmp/tmp11b8hjeb.cpp:29: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a <= 0 || b <= 0 || c <= 0) return -1;\n  long max = a;\n  if (b >\
    \ max) max = b;\n  if (c > max) max = c;\n  if (max == a) {\n    if (b + c > a)\
    \ {\n      return 0.5 * b * c;\n    }\n  } else if (max == b) {\n    if (a + c\
    \ > b) {\n      return 0.5 * a * c;\n    }\n  } else {\n    if (a + b > c) {\n\
    \      return 0.5 * a * b;\n    }\n  }\n  return -1;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp72cqsmi8: /tmp/tmp72cqsmi8.cpp:35: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a <= 0 || b <= 0 || c <= 0)\n        return -1;\n    else{\n     \
    \   if(a+b > c && a+c > b && b+c > a){\n            float x = (a+b+c)/2.0;\n \
    \           return sqrt(x*(x-a)*(x-b)*(x-c));\n        }\n        else\n     \
    \       return -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmprx3p_j6e: /tmp/tmprx3p_j6e.cpp:27: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\t//if (a == 0 || b == 0 || c == 0) return -1;\n\tif (a <= 0 || b <= 0 ||\
    \ c <= 0) return -1;\n\tif (a + b <= c || a + c <= b || b + c <= a) return -1;\n\
    \tdouble s = (a + b + c) / 2.0;\n\treturn sqrt(s * (s - a) * (s - b) * (s - c));\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmps0z8kiw2: /tmp/tmps0z8kiw2.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // TODO: find and return the area of the triangle\n    float s = (a+b+c)/2.0;\n\
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area == 0 || std::isnan(area))\n\
    \    {\n        return -1;\n    }\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpwu11qb7r: /tmp/tmpwu11qb7r.cpp:25: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float p = (a + b + c) / 2.0;\n  float area = sqrt(p * (p - a) * (p - b)\
    \ * (p - c));\n  if (area <= 0) {\n    return -1;\n  }\n  return area;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpl4ww9dlj: /tmp/tmpl4ww9dlj.cpp:22: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  return (a + b > c && a + c > b && b + c > a) ? area : -1;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpmug9lvus: /tmp/tmpmug9lvus.cpp:20: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if((a + b > c) && (a + c > b) && (b + c > a)) {\n        double s = (a\
    \ + b + c) / 2.0;\n        double area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        return roundf(area * 100) / 100;\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpr5lupxxt: /tmp/tmpr5lupxxt.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s,area;\n    if((a+b)>c&&(a+c)>b&&(b+c)>a)\n    {\n        s=(a+b+c)/2.0;\n\
    \        area=sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n    else\n\
    \    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp6kv8kie4: /tmp/tmp6kv8kie4.cpp:28: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpd_jiidv5: /tmp/tmpd_jiidv5.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif (a + b <= c || a + c <= b || b + c <= a) {\n\t\treturn -1;\n\t}\n\t\
    // p = (a + b + c) / 2;\n\t// return sqrt(p * (p - a) * (p - b) * (p - c));\n\t\
    // better than the function above, because the precision is better\n\tfloat s\
    \ = (a + b + c) / 2.0;\n\treturn sqrt(s * (s - a) * (s - b) * (s - c));\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpobos3g35: /tmp/tmpobos3g35.cpp:25: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return roundf(area * 100) / 100;\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmplmgvpos4: /tmp/tmplmgvpos4.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a + b <= c)\n        return -1;\n    if(a + c <= b)\n        return\
    \ -1;\n    if(b + c <= a)\n        return -1;\n    float p = (a + b + c) / 2.0;\n\
    \    float area = sqrt(p * (p - a) * (p - b) * (p - c));\n    return roundf(area\
    \ * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmprl5i4emx: /tmp/tmprl5i4emx.cpp:26: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Your code goes here\n  if(a+b<=c || a+c<=b || b+c<=a)\n    return -1;\n\
    \  float s=(a+b+c)/2.0;\n  float area=sqrt(s*(s-a)*(s-b)*(s-c));\n  return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpaul3h53v: /tmp/tmpaul3h53v.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  if (a + b > c && a + c > b && b + c > a)\
    \ {\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmprnp3s92b: /tmp/tmprnp3s92b.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if(a + b > c && a + c > b && b + c > a) {\n        return\
    \ area;\n    } else {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpvtqwbnnn: /tmp/tmpvtqwbnnn.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float p = (a + b + c) / 2.0;\n    float num = p * (p - a) * (p - b) *\
    \ (p - c);\n    float denom = sqrt(num);\n    if (num <= 0) {\n        return\
    \ -1;\n    }\n    return round(denom * 100) / 100;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp6a2mlmyl: /tmp/tmp6a2mlmyl.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\t// your code goes here\n\tfloat s,area;\n\tif((a+b)>c && (a+c)>b && (b+c)>a)\n\
    \t{\n\t\ts=(a+b+c)/2;\n\t\tarea=sqrt(s*(s-a)*(s-b)*(s-c));\n\t\t// area=round(area*100.0)/100.0;\n\
    \t\treturn area;\n\t}\n\telse return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpxjt23a0c: /tmp/tmpxjt23a0c.cpp:27: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat p,s;\n\ts = (a+b+c)/2;\n\tp = s*(s-a)*(s-b)*(s-c);\n\tif(p < 0)\n\
    \t\treturn -1;\n\telse\n\t\treturn (pow(p,0.5));\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpp1kp196d: /tmp/tmpp1kp196d.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a>0 && b>0 && c>0 && (a+b)>c && (a+c)>b && (b+c)>a)\n    return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpdb8wqnio: /tmp/tmpdb8wqnio.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s, area;\n    if(a+b > c && a+c > b && b+c > a) {\n        s =\
    \ (a+b+c)/2.0;\n        area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return roundf(area\
    \ * 100) / 100;\n    }\n    return -1;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpjknxsw6y: /tmp/tmpjknxsw6y.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float S;\n    if((a+b>c)&&(a+c>b)&&(b+c>a)){\n        S=(a+b+c)/2.0;\n\
    \        return sqrt(S*(S-a)*(S-b)*(S-c));\n    }\n    else{\n        return -1;\n\
    \    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpquzplkzp: /tmp/tmpquzplkzp.cpp:25: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif ((a + b > c) && (a + c > b) && (b + c > a))\n\t{\n\t\tfloat s = (a +\
    \ b + c) / 2.0;\n\t\treturn sqrt(s * (s - a) * (s - b) * (s - c));\n\t}\n\telse\n\
    \t\treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpep0_9ctn: /tmp/tmpep0_9ctn.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  std::sort(std::begin({a, b, c}), std::end({a, b, c}));\n  return (a + b\
    \ > c) ? sqrt(std::fabs(c * c - (a - b) * (a - b))) / 4 : -1;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8s_2hyt_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:\
    \ In instantiation of \u2018void std::__insertion_sort(_RandomAccessIterator,\
    \ _RandomAccessIterator, _Compare) [with _RandomAccessIterator = const long int*;\
    \ _Compare = __gnu_cxx::__ops::_Iter_less_iter]\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1884:25:\
    \   required from \u2018void std::__final_insertion_sort(_RandomAccessIterator,\
    \ _RandomAccessIterator, _Compare) [with _RandomAccessIterator = const long int*;\
    \ _Compare = __gnu_cxx::__ops::_Iter_less_iter]\u2019\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1970:31:\
    \   required from \u2018void std::__sort(_RandomAccessIterator, _RandomAccessIterator,\
    \ _Compare) [with _RandomAccessIterator = const long int*; _Compare = __gnu_cxx::__ops::_Iter_less_iter]\u2019\
    \n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4828:18:\
    \   required from \u2018void std::sort(_RAIter, _RAIter) [with _RAIter = const\
    \ long int*]\u2019\n/tmp/tmp8s_2hyt_.cpp:12:55:   required from here\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1851:17:\
    \ error: assignment of read-only location \u2018* __first\u2019\n 1851 |     \
    \   *__first = _GLIBCXX_MOVE(__val);\n      |                 ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:61,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8s_2hyt_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_heap.h:\
    \ In instantiation of \u2018void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator,\
    \ _RandomAccessIterator, _Compare&) [with _RandomAccessIterator = const long int*;\
    \ _Comp"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  //     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  // Think of edge cases first!\
    \ What happens when a = 0? Can you divide by 0?\n  if (a == 0 || b == 0 || c ==\
    \ 0) return -1;\n  //                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \  // What about when a > b + c or b > a + c or c > a + b?\n  if (a > b + c ||\
    \ b > a + c || c > a + b) return -1;\n  // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \  // Now for the formula for the area of a triangle. Don't forget to take the\
    \ square root\n  // of the value inside the parentheses, and to multiply by 0.5.\n\
    \  float s = (a + b + c) / 2.0;\n  return sqrt(s * (s - a) * (s - b) * (s - c))\
    \ * 0.5;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp3u2yo3wb: /tmp/tmp3u2yo3wb.cpp:26: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a)\n        return a * b * sqrt(1\
    \ - pow(a, 2) / pow(c, 2)) / 2;\n    return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpe123a1a2: /tmp/tmpe123a1a2.cpp:18: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    long s = (a + b + c) / 2;\n    double area = (double) sqrt(s * (s - a)\
    \ * (s - b) * (s - c));\n    // printf(\"%f\\n\", area);\n    if (area == 0) {\n\
    \        return -1;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp4nifnx3w: /tmp/tmp4nifnx3w.cpp:23: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    double p = (a + b + c) / 2.0;\n    double area = sqrt(p * (p - a) * (p\
    \ - b) * (p - c));\n    if (area < 0)\n        return -1;\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpz219mipx: /tmp/tmpz219mipx.cpp:21: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // your code here\n  return -1;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpaf26ez09: /tmp/tmpaf26ez09.cpp:17: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float S = (a + b + c) / 2.0;\n    float area = sqrt(S * (S - a) * (S\
    \ - b) * (S - c));\n    return (area > 0) ? area : -1;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpmp7oheud: /tmp/tmpmp7oheud.cpp:20: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpsqdx_j6o: /tmp/tmpsqdx_j6o.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif(a + b > c && a + c > b && b + c > a)\n\t\treturn a*b*c;\n\telse\n\t\t\
    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpbpgt00fe: /tmp/tmpbpgt00fe.cpp:19: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float area = -1;\n  if (a<=0 || b<=0 || c<=0) {\n    return area;\n  }\n\
    \  if (a+b > c && a+c > b && b+c > a) {\n    float s = (a+b+c)/2.0;\n    area\
    \ = sqrt(s*(s-a)*(s-b)*(s-c));\n  }\n  return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp3cs_3bpx: /tmp/tmp3cs_3bpx.cpp:26: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif (a <= 0 || b <= 0 || c <= 0) return -1;\n\tif (a + b <= c || a + c <=\
    \ b || b + c <= a) return -1;\n\tfloat s = (a + b + c) / 2.0;\n\treturn sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpxdr__d1u: /tmp/tmpxdr__d1u.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s, area;\n    if ((a + b) > c && (a + c) > b && (b + c) > a) {\n\
    \        s = (a + b + c) / 2.0;\n        area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n        return area;\n    }\n    return -1;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpoi7nosef: /tmp/tmpoi7nosef.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // TODO: Return the area of the triangle.\n  if(a<=0 || b<=0 || c<=0){\n\
    \    return -1;\n  }\n  else if(a+b<=c || a+c<=b || b+c<=a){\n    return -1;\n\
    \  }\n  else{\n    float s=(a+b+c)/2.0;\n    return sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp72qx_5jx: /tmp/tmp72qx_5jx.cpp:28: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return roundf(area * 100) / 100;\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpa9al7bx4: /tmp/tmpa9al7bx4.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    if(a+b>c && a+c>b && b+c>a) {\n        return\
    \ sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp4krb9f_x: /tmp/tmp4krb9f_x.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a + b > c && a + c > b && b + c > a) {\n        return (a + b + c)\
    \ / 2.0;\n    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp8iqsgh_a: /tmp/tmp8iqsgh_a.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        float s = (a + b\
    \ + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp0k89fbak: /tmp/tmp0k89fbak.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Error checking\n    assert(a > 0 && b > 0 && c > 0);\n    //\n   \
    \ long s = (a + b + c) / 2;\n    long area = sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n    float ans = (float)area / (1.0 * area);\n    if(ans == 1.0) return\
    \ area;\n    else return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpba1s6zev: /tmp/tmpba1s6zev.cpp:24: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n  if (a + b > c && a + c > b && b + c > a) {\n    return area;\n\
    \  }\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmplrl90w41: /tmp/tmplrl90w41.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b<=c || a+c<=b || b+c<=a) {return -1;}\n    else {\n        float\
    \ p = (a+b+c)/2.0;\n        return std::sqrt(p*(p-a)*(p-b)*(p-c));\n    }\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpe6bc9a_8: /tmp/tmpe6bc9a_8.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat s=(a+b+c)/2.0;\n\tif(s-a<0 || s-b<0 || s-c<0) return -1;\n\treturn\
    \ sqrt(s*(s-a)*(s-b)*(s-c));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpl2df8vap: /tmp/tmpl2df8vap.cpp:20: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  double result = 0;\n  if(a + b > c && a + c > b && b + c > a)\n  {\n  \
    \  double s = (a + b + c) / 2.0;\n    double area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    result = round(area * 100) / 100;\n  }\n  else\n  {\n    result\
    \ = -1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpd1p0uuol: /tmp/tmpd1p0uuol.cpp:29: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    assert(a>0);\n    assert(b>0);\n    assert(c>0);\n    if((a+b>c) && (a+c>b)\
    \ && (b+c>a))\n    {\n        float s=(a+b+c)/2.0;\n        float area=std::sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        std::cout<<\"s=\"<<s<<\" area=\"<<area<<\"\\n\";\n        return area;\n\
    \    }\n    else\n    {\n        return -1;\n    }\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: "s=6 area=6\ns=8.5 area=8.18153\n"
  stderr: "tmpiwmjfq14: /tmp/tmpiwmjfq14.cpp:31: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // your code goes here\n  float s = (a+b+c)/2.0;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpj4h5i5rv: /tmp/tmpj4h5i5rv.cpp:20: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif ((a + b > c) && (a + c > b) && (b + c > a))\n\t{\n\t\treturn 0.5 * sqrt((a\
    \ + b + c) * (a + b - c) * (a + c - b) * (b + c - a));\n\t}\n\telse\n\t{\n\t\t\
    return -1;\n\t}\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpjcj5lm79: /tmp/tmpjcj5lm79.cpp:23: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    //checking for validity\n    if(a+b>c &&\
    \ a+c>b && b+c>a){\n        float s = (a+b+c)/2.0;\n        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return area;\n    }\n    else{\n        return -1;\n    }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp89nagpi0: /tmp/tmp89nagpi0.cpp:27: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\t\n\tif(a+b>c && a+c>b && b+c>a)\n\t{\n\t\tfloat s = (a+b+c)/2.0;\n\t\t\
    float a = sqrt(s*(s-a)*(s-b)*(s-c));\n\t\treturn round(a*100)/100;\n\t}\n\telse\n\
    \t{\n\t\treturn -1;\n\t}\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpijjkmz8t: /tmp/tmpijjkmz8t.cpp:26: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n \
    \   }\n    float s = (a + b + c) / 2.0;\n    return sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpfbglefrb: /tmp/tmpfbglefrb.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s, result;\n  if(a+b>c && a+c>b && b+c>a)\n  {\n    s = (a+b+c)/2.0;\n\
    \    result = sqrt(s*(s-a)*(s-b)*(s-c));\n    return result;\n  }\n  else\n  {\n\
    \    return -1;\n  }\n  \n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp5iwuhbd7: /tmp/tmp5iwuhbd7.cpp:29: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a > 0 && b > 0 && c > 0);\n  if (a + b <= c || a + c <= b || b +\
    \ c <= a) {\n    return -1;\n  }\n  float s = (a + b + c) / 2.0;\n  float area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n  return round(area * 100) / 100;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpp4a019pn: /tmp/tmpp4a019pn.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif(a+b>c && a+c>b && b+c>a)\n\t{\n\t\tfloat s = (a+b+c)/2.0;\n\t\tfloat\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n\t\treturn round(area*100)/100;\n\t}\n\t\
    else\n\t\treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n \
    \   assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp7psooksg: /tmp/tmp7psooksg.cpp:25: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a+b>c && a+c>b && b+c>a)\n    {\n        float s=(a+b+c)/2.0;\n \
    \       return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpekbtfdx1: /tmp/tmpekbtfdx1.cpp:26: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a <= 0 || b <= 0 || c <= 0)\n    return -1;\n  if(a + b <= c || a +\
    \ c <= b || b + c <= a)\n    return -1;\n  return 0.5 * sqrt((a + b + c) * (a\
    \ + b - c) * (a + c - b) * (b + c - a));\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpjobld6a1: /tmp/tmpjobld6a1.cpp:20: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmphqtvis6y: /tmp/tmphqtvis6y.cpp:16: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\t// TODO: your code here\n\t// remember to round the answer to 2 decimal\
    \ places\n\t// std::round(1.234 * 100) / 100.0;\n\t// also remember that the function\
    \ returns a float\n\tif (a + b <= c || a + c <= b || b + c <= a) {\n\t\treturn\
    \ -1;\n\t}\n\tfloat p = (a + b + c) / 2.0;\n\tfloat area = sqrt(p * (p - a) *\
    \ (p - b) * (p - c));\n\treturn std::round(area * 100) / 100.0;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpcuan1n_z: /tmp/tmpcuan1n_z.cpp:27: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c && a + c > b && b + c > a) {\n       \
    \ area = (float) (0.5 * (a * b * sin(acos(-1) * (a*a + b*b - c*c) / (2*a*b))));\n\
    \        return floor(area * 100) / 100;\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp9klhtp4q: /tmp/tmp9klhtp4q.cpp:21: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Write your code here\n  if(a>0 && b>0 && c>0){\n    if(a+b>c && a+c>b\
    \ && b+c>a){\n      return (a+b+c)/2.0;\n    }\n  }\n  return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp0s_ue75z: /tmp/tmp0s_ue75z.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat s = (a + b + c) / 2.0;\n\tfloat area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n\tif (area == 0)\n\t\treturn -1;\n\treturn area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp8wvdiovr: /tmp/tmp8wvdiovr.cpp:21: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a+b<=c || a+c<=b || b+c<=a)\n    return -1;\n  float s = (a+b+c)/2.0;\n\
    \  return sqrt(s*(s-a)*(s-b)*(s-c));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpfuui0jeo: /tmp/tmpfuui0jeo.cpp:21: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here.\n    if(a+b<=c || a+c<=b || b+c<=a)\n    {\n\
    \        return -1;\n    }\n    float s = (a+b+c)/2.0;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpc2ee_osc: /tmp/tmpc2ee_osc.cpp:25: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif (a + b > c && a + c > b && b + c > a) {\n\t\treturn (a * b * sin(c))\
    \ / 2;\n\t}\n\treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpqp__0cwf: /tmp/tmpqp__0cwf.cpp:19: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a>0 && b>0 && c>0);\n  // Return -1 for invalid inputs\n  if ( a+b\
    \ <= c || b+c <= a || a+c <= b ) {\n    return -1;\n  }\n  // Return the area\
    \ of triangle\n  return sqrt( (a+b+c)*(a+b-c)*(b+c-a)*(a+c-b) )/4;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp9qsl9e16: /tmp/tmp9qsl9e16.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    return (a<=0 || b<=0 || c<=0) ? -1 : (a+b>c && a+c>b && b+c>a) ? sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4\
    \ : -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpwtvvlevd: /tmp/tmpwtvvlevd.cpp:18: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    std::cout << __PRETTY_FUNCTION__ << std::endl;\n    if (a+b > c and a+c\
    \ > b and b+c > a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4.0;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: "float triangle_area(long int, long int, long int)\nfloat triangle_area(long\
    \ int, long int, long int)\nfloat triangle_area(long int, long int, long int)\n"
  stderr: "tmp9ll99db_: /tmp/tmp9ll99db_.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // your code here\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float\
    \ s = (a+b+c)/2.0;\n        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return\
    \ floor(area*100)/100;\n    }\n    else\n    {\n        return -1;\n    }\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp8kihio_7: /tmp/tmp8kihio_7.cpp:28: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // TODO: return the area of the triangle, or -1 if the given side lengths\n\
    \    // cannot form a triangle\n    if(a<=0 || b<=0 || c<=0)\n        return -1;\n\
    \    if(a+b<=c || a+c<=b || b+c<=a)\n        return -1;\n    float s=(a+b+c)/2.0;\n\
    \    float area=sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpbkr2t6lp: /tmp/tmpbkr2t6lp.cpp:26: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Assert that the parameters are not negative\n  assert(a >= 0 && b >=\
    \ 0 && c >= 0);\n  // Check if the triangle is valid\n  // if(a + b > c && a +\
    \ c > b && b + c > a)\n  //   return (a + b + c) / 2;\n  // return -1;\n  // Better\
    \ solution\n  if(a + b <= c || a + c <= b || b + c <= a)\n    return -1;\n  //\
    \ Find the semiperimeter\n  float s = (a + b + c) / 2.0;\n  // Return the area\n\
    \  return sqrt(s * (s - a) * (s - b) * (s - c));\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmptynkprwf: /tmp/tmptynkprwf.cpp:30: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // take the longest side as third side\n    if(a > b && a > c)\n    \
    \    swap(a, c);\n    else if(b > a && b > c)\n        swap(b, c);\n    if(a+b\
    \ > c)\n        return (float) (a*b)/2;\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplayrc14t.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplayrc14t.cpp:14:9: error: \u2018swap\u2019 was\
    \ not declared in this scope\n   14 |         swap(a, c);\n      |         ^~~~\n\
    /tmp/tmplayrc14t.cpp:14:9: note: suggested alternatives:\nIn file included from\
    \ /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n            \
    \     from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n\
    \                 from /tmp/tmplayrc14t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/exception:143,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplayrc14t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/exception_ptr.h:166:5:\
    \ note:   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr&\
    \ __lhs, exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/nested_exception.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/exception:144,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-sk"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  return a + b > c && a + c > b && b + c > a ? sqrt((a + b + c) * (-a + b\
    \ + c) * (a - b + c) * (a + b - c)) / 4 : -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp2x6ibzmj: /tmp/tmp2x6ibzmj.cpp:18: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    return area < 0 ? -1 : area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp5qxdri2r: /tmp/tmp5qxdri2r.cpp:19: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s=(a+b+c)/2.0;\n  float area = (s*(s-a)*(s-b)*(s-c));\n  if(area>0){\n\
    \    return sqrt(area);\n  }\n  return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpq1nq3xki: /tmp/tmpq1nq3xki.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s=(a+b+c)/2.0;\n  if((s-a)<0.0 || (s-b)<0.0 || (s-c)<0.0){\n    return\
    \ -1;\n  }\n  return sqrt(s*(s-a)*(s-b)*(s-c));\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpyxj_59jm: /tmp/tmpyxj_59jm.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat res = -1;\n\tfloat s = (a + b + c) / 2.0;\n\tif (s > a && s > b &&\
    \ s > c) {\n\t\tres = sqrt(s * (s - a) * (s - b) * (s - c));\n\t}\n\treturn res;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp4d8wsah5: /tmp/tmp4d8wsah5.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && a + c > b && b + c > a) {\n        double s = (a + b\
    \ + c) / 2.0;\n        double area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        return floor(area * 100) / 100;\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpbmn9l9q_: /tmp/tmpbmn9l9q_.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  return 0;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpafb6qqmh: /tmp/tmpafb6qqmh.cpp:16: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) /\
    \ 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpbvzzlrho: /tmp/tmpbvzzlrho.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt(a*a+b*b-c*c)*sqrt(a*a+c*c-b*b)*sqrt(b*b+c*c-a*a)/4;\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp0lg0hea8: /tmp/tmp0lg0hea8.cpp:19: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b<=c || a+c<=b || b+c<=a)\n    return -1;\n  else {\n    // Heron's\
    \ formula\n    float s = (a+b+c)/2.0;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return roundf(area*100)/100;\n  }\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp5rzg7kw1: /tmp/tmp5rzg7kw1.cpp:25: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float result = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    return (result < 0) ? -1 : result;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp_be_vn1v: /tmp/tmp_be_vn1v.cpp:19: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // your code here\n  std::vector<long> v = {a, b, c};\n  std::sort(v.begin(),\
    \ v.end());\n  if (v[0] + v[1] > v[2]) {\n    float p = (a + b + c) / 2.0;\n \
    \   return sqrt(p * (p - a) * (p - b) * (p - c));\n  }\n  return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp6x01t60p: /tmp/tmp6x01t60p.cpp:25: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s=(a+b+c)/2.0;\n  \
    \      return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpug75gppm: /tmp/tmpug75gppm.cpp:26: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    if (a + b <= c || a + c <= b || b +\
    \ c <= a) {\n        return -1;\n    }\n    return sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpsik0v0bm: /tmp/tmpsik0v0bm.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp6wur_4sl: /tmp/tmp6wur_4sl.cpp:16: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    long s = (a + b + c) / 2;\n    float ans = pow(s*(s-a)*(s-b)*(s-c), 0.5);\n\
    \    if (ans < 0)\n        return -1;\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmp79so71mp: /tmp/tmp79so71mp.cpp:21: int main(): Assertion `candidate((1),\
    \ (2), (10)) == (float(-1))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    if (s - a < a || s - b < b || s - c\
    \ < c)\n        return -1;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpxdxqqjis: /tmp/tmpxdxqqjis.cpp:19: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (a + b > c && a + c > b && b + c > a)\n        return\
    \ area;\n    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpjl06qz11: /tmp/tmpjl06qz11.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // your code here\n    float s = (a+b+c)/2.0;\n    // printf(\"%f\\n\"\
    ,s);\n    if(s>a && s>b && s>c){\n        return sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmpu7yz90ay: /tmp/tmpu7yz90ay.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  std::sort(std::begin({a, b, c}), std::end({a, b, c}));\n  if (a + b <=\
    \ c) return -1;\n  long p = (a + b + c) / 2;\n  float x = (float)p * (p - a) *\
    \ (p - b) * (p - c);\n  return std::sqrt(x);\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6r7me81e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:\
    \ In instantiation of \u2018void std::__insertion_sort(_RandomAccessIterator,\
    \ _RandomAccessIterator, _Compare) [with _RandomAccessIterator = const long int*;\
    \ _Compare = __gnu_cxx::__ops::_Iter_less_iter]\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1884:25:\
    \   required from \u2018void std::__final_insertion_sort(_RandomAccessIterator,\
    \ _RandomAccessIterator, _Compare) [with _RandomAccessIterator = const long int*;\
    \ _Compare = __gnu_cxx::__ops::_Iter_less_iter]\u2019\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1970:31:\
    \   required from \u2018void std::__sort(_RandomAccessIterator, _RandomAccessIterator,\
    \ _Compare) [with _RandomAccessIterator = const long int*; _Compare = __gnu_cxx::__ops::_Iter_less_iter]\u2019\
    \n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4828:18:\
    \   required from \u2018void std::sort(_RAIter, _RAIter) [with _RAIter = const\
    \ long int*]\u2019\n/tmp/tmp6r7me81e.cpp:12:55:   required from here\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1851:17:\
    \ error: assignment of read-only location \u2018* __first\u2019\n 1851 |     \
    \   *__first = _GLIBCXX_MOVE(__val);\n      |                 ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:61,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6r7me81e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_heap.h:\
    \ In instantiation of \u2018void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator,\
    \ _RandomAccessIterator, _Compare&) [with _RandomAccessIterator = const long int*;\
    \ _Comp"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  return 0;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpwe528j4c: /tmp/tmpwe528j4c.cpp:16: int main(): Assertion `candidate((3),\
    \ (4), (5)) == (6.0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif(a+b>c && a+c>b && b+c>a)\n\t{\n\t\tfloat s = (a+b+c)/2.0;\n\t\treturn\
    \ sqrt(s*(s-a)*(s-b)*(s-c));\n\t}\n\telse\n\t\treturn -1;\n}\nint main() {\n \
    \   auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpnrbopfi4: /tmp/tmpnrbopfi4.cpp:24: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n \
    \   }\n    float p = (a + b + c) / 2.0;\n    return std::sqrt(p * (p - a) * (p\
    \ - b) * (p - c));\n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  stdout: ''
  stderr: "tmpswyrd02m: /tmp/tmpswyrd02m.cpp:22: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = 0.5 * (a + b + c);\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (a + b > c && a + c > b && b + c > a)\n        return\
    \ area;\n    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp7kuujdxw: /tmp/tmp7kuujdxw.cpp:23: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float area = -1;\n  long temp_a = a;\n  long temp_b = b;\n  long temp_c\
    \ = c;\n  long max = 0;\n  if (a >= b && a >= c) {\n    max = a;\n    temp_a =\
    \ a;\n  } else if (b >= a && b >= c) {\n    max = b;\n    temp_b = b;\n  } else\
    \ if (c >= a && c >= b) {\n    max = c;\n    temp_c = c;\n  }\n  if (temp_a +\
    \ temp_b > max && temp_a + temp_c > max && temp_b + temp_c > max) {\n    float\
    \ p = (a + b + c) / 2.0;\n    area = sqrt(p * (p - a) * (p - b) * (p - c));\n\
    \  }\n  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n \
    \   assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  stdout: ''
  stderr: "tmp5_lwijf4: /tmp/tmp5_lwijf4.cpp:37: int main(): Assertion `candidate((4),\
    \ (8), (5)) == (8.18)' failed.\n"
  exit_code: -6
  status: Exception

name: HumanEval_60_sum_to_n
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function that\
  \ sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
  // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
  // 1\nlong sum_to_n(long n) {\n"
tests: "}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
  \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
  \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
  }\n"
completions: ["    long i = 0;\n    long sum = 0;\n    for (i = 1; i <= n; i++) {\n\
    \        sum += i;\n    }\n    return sum;", "    long sum=0;\n    for(int i=1;i<=n;i++)\n\
    \        sum+=i;\n    return sum;", "  long sum = 0;\n  for (long i = 1; i <=\
    \ n; i++) {\n    sum += i;\n  }\n  return sum;", "  assert(n >= 1);\n  return\
    \ n * (n + 1) / 2;", "    // write your code here\n    return n*(n+1)/2;", " \
    \ long result = 0;\n  long i;\n  for (i = 1; i <= n; i++) {\n    result += i;\n\
    \  }\n  return result;", "    long ret = 0;\n    for (long i = 1; i <= n; i++)\
    \ {\n        ret += i;\n    }\n    return ret;", "    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;", "\treturn\
    \ n * (n + 1) / 2;", '  return ((n * (n + 1)) / 2);', "  long sum = 0;\n  for\
    \ (int i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;", "    assert(n\
    \ > 0);\n    return (long)n*(n+1)/2;", "    if (n <= 0) {\n        return 0;\n\
    \    }\n    return n + sum_to_n(n - 1);", "    assert(n >= 1);\n    return (n*(n+1))/2;",
  '  return (n*(n+1))/2;', '  return n*(n+1)/2;', "  if (n < 1) {\n    return 0;\n\
    \  }\n  return n + sum_to_n(n - 1);", "    long sum = 0;\n    for (int i = 1;\
    \ i <= n; i++) {\n        sum += i;\n    }\n    return sum;", '   return (n*(n+1))/2;',
  "  long sum = 0;\n  if (n <= 0) {\n    return sum;\n  }\n  return n + sum_to_n(n\
    \ - 1);", '  return n*(n+1)/2;', '    return (n*(n+1))/2;', "  // Write a function\
    \ that sums numbers from 1 to n.\n  // >>> sum_to_n(30)\n  // 465\n  // >>> sum_to_n(100)\n\
    \  // 5050\n  // >>> sum_to_n(5)\n  // 15\n  // >>> sum_to_n(10)\n  // 55\n  //\
    \ >>> sum_to_n(1)\n  // 1\n  return n*(n+1)/2;", '    return n * (n + 1) / 2;',
  "    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n   \
    \ }\n    return sum;", "\tlong i = 1;\n\tlong sum = 0;\n\twhile (i <= n) {\n\t\
    \tsum += i;\n\t\ti += 1;\n\t}\n\treturn sum;", "    long result = n;\n    if (n>0)\n\
    \      result = n + sum_to_n(n-1);\n    return result;", '  return (n * (n + 1))
    / 2;', "    long sum=0;\n    while(n>0){\n        sum += n;\n        n--;\n  \
    \  }\n    return sum;", '    return n*(n+1)/2;', "  assert(n > 0);\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  return n + sum_to_n(n - 1);", "  // n(n+1)/2\n \
    \ long tot = n * (n + 1);\n  long answer = tot / 2;\n  return answer;", "    //\n\
    \    // YOUR CODE HERE.\n    //\n    long sum=0;\n    for(int i=1;i<=n;i++)\n\
    \    {\n        sum=sum+i;\n    }\n    return sum;", '  return (n*(n+1))/2;',
  '    return n*(n+1)/2;', "\treturn n*(n+1)/2;", "  \n  if (n == 1) {\n    return\
    \ 1;\n  }\n  return n + sum_to_n(n-1);\n  ", '    return n*(n+1)/2;', "\tlong\
    \ sum = (n*(n+1))/2;\n\treturn sum;", "    long sum = 0;\n    for (long i = 1;\
    \ i <= n; i++) {\n        sum += i;\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for (int i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return\
    \ sum;", "  // Fill in code here\n   long sum;\n   sum = n*(n+1)/2;\n   return\
    \ sum;\n", '  return n*(n+1)/2;', "    long result=0;\n    for(int i=1;i<=n;i++){\n\
    \        result=result+i;\n    }\n    return result;", '    return n * (n + 1)
    / 2;', '    return n * (n + 1) / 2;', "\t\n\tassert(n>=1);\n\tint sum=0;\n\tfor(int\
    \ i=1;i<=n;i++)\n\t{\n\t\tsum=sum+i;\n\t}\n\treturn sum;\n\t\n\t", "  long result\
    \ = 0;\n  long i;\n  for (i = 1; i <= n; i++) {\n    result += i;\n  }\n  return\
    \ result;", "    if (n < 1) {\n        return 0;\n    }\n    return n + sum_to_n(n\
    \ - 1);", '  return n * (n + 1) / 2;', "  // FILL IN YOUR CODE HERE\n  if(n==1)\n\
    \  {\n  \treturn 1;\n  }\n  else\n  {\n  \treturn n+sum_to_n(n-1);\n  }\n  //\
    \ return n;", '    return (n * (n + 1)) / 2;', "  // write this function\n  return\
    \ (n*(n+1))/2;", '    return (n*(n+1))/2;', '  return n * (n + 1) / 2;', '  return
    n*(n+1)/2;', '    return n*(n+1)/2;', "  assert(n > 0);\n  // FIXME: Implement\n\
    \  return 0;", "\treturn n*(n+1)/2;", '    return n * (n + 1) / 2;', "\t// >>>\
    \ YOUR CODE HERE\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) {\n\t\tsum\
    \ += i;\n\t}\n\treturn sum;\n\t// <<< END OF YOUR CODE", '    return (n*(n+1))/2;',
  '    return n * (n + 1) / 2;', "  // fill in the code for this function\n  long\
    \ result = 0;\n  for (long i = 1; i <= n; i++) {\n    result += i;\n  }\n  return\
    \ result;", "  long sum = (n * (n + 1)) / 2;\n  return sum;", "  long result =\
    \ 0;\n  for (long x = 1; x <= n; x++) {\n    result += x;\n  }\n  return result;",
  "\tlong x = 0;\n\tlong y = 1;\n\tlong sum = 0;\n\tif (n <= 0)\n\t\treturn 0;\n\t\
    while (x < n) {\n\t\tsum += x;\n\t\tx = y;\n\t\ty++;\n\t}\n\treturn sum;", " \
    \   // >>> YOUR CODE GOES HERE <<<\n    return (n*(n+1))/2;", '    return n*(n+1)/2;',
  "    // Insert your code here.\n    if(n==1)\n        return 1;\n    return n+sum_to_n(n-1);",
  '    return (n * (n + 1)) / 2;', "  if (n == 1) {\n    return 1;\n  } else {\n \
    \   return n + sum_to_n(n - 1);\n  }", "\tlong sum = 0;\n\tfor (int i = 1; i <=\
    \ n; i++) {\n\t\tsum += i;\n\t}\n\treturn sum;", "    if (n == 1) {\n        return\
    \ 1;\n    }\n    return n + sum_to_n(n - 1);", "  long sum = n * (n + 1) / 2;\n\
    \  return sum;", "\tif (n < 0) {\n\t\treturn 0;\n\t}\n\telse {\n\t\tif (n == 0)\
    \ {\n\t\t\treturn n;\n\t\t}\n\t\telse {\n\t\t\treturn n + sum_to_n(n - 1);\n\t\
    \t}\n\t}", "  long sum = 0;\n  for (long i = 1; i <= n; i++) {\n    sum += i;\n\
    \  }\n  return sum;", '    return n * (n + 1) / 2;', "  \n\tlong sum = 0;\n\t\
    for (long i = 1; i <= n; i++) {\n\t\tsum += i;\n\t}\n\treturn sum;", '   return
    n*(n+1)/2;', '    return (n * (n + 1)) / 2;', "  // TODO: Implement this.\n  long\
    \ sum = 0;\n  sum = (n*(n+1))/2;\n  return sum;", "  assert(n > 0);\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  return n + sum_to_n(n - 1);", "  long sum = 0;\n\
    \  for (long i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;", "//   \
    \ assert(n >= 1);\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;", "    long sum=0;\n    for(int i=1;i<=n;i++)\n\
    \        sum+=i;\n    return sum;", '    return n * (n + 1) / 2;', '    return
    (n*(n+1))/2;', "\treturn (n * (n + 1)) / 2;", '    return (n*(n+1))/2;', "   \
    \ if (n == 1) {\n        return 1;\n    } else {\n        return n + sum_to_n(n\
    \ - 1);\n    }", "    long ret = (n * (n + 1)) / 2;\n    return ret;", "  long\
    \ sum = (n * (n + 1)) / 2;\n  return sum;", "\tassert(n > 0);\n\treturn n*(n+1)/2;",
  "\tlong sum = 0;\n\tlong i = 1;\n\twhile (i <= n) {\n\t\tsum += i;\n\t\ti++;\n\t\
    }\n\treturn sum;", "    if (n == 1) {\n        return 1;\n    }\n    else {\n\
    \        return sum_to_n(n - 1) + n;\n    }", '  return n * (n + 1) / 2;', '  return
    (n * (n + 1)) / 2;', "\t// TODO: fill me in\n\tassert(n >= 1);\n\tlong sum = 0;\n\
    \tfor (long i = 1; i <= n; i++) {\n\t\tsum += i;\n\t}\n\treturn sum;", "    long\
    \ sum;\n    if (n < 1) {\n        sum = 0;\n    } else {\n        sum = n + sum_to_n(n\
    \ - 1);\n    }\n    return sum;", "\treturn n * (n + 1) / 2;", "\tlong sum = 0;\n\
    \tfor (int i = 1; i <= n; i++) {\n\t\tsum += i;\n\t}\n\treturn sum;", "\treturn\
    \ n*(n+1)/2;", '  ', '    return n * (n + 1) / 2;', "    // TODO: your code here\n\
    \    return (n * (n + 1)) / 2;", "  if (n > 0) {\n    return n + sum_to_n(n -\
    \ 1);\n  } else {\n    return 0;\n  }", "    // YOUR CODE HERE\n    return (n\
    \ * (n + 1)) / 2;", "    long result = 0;\n    for (long i = 1; i <= n; i++) {\n\
    \        result += i;\n    }\n    return result;", "\tlong result = 0;\n\tlong\
    \ i;\n\tfor (i = 1; i <= n; i++) {\n\t\tresult += i;\n\t}\n\treturn result;",
  '    return n*(n+1)/2;', "\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) {\n\t\
    \tsum += i;\n\t}\n\treturn sum;", "\tlong sum = 0;\n\tfor (long i = 1; i <= n;\
    \ i++) {\n\t\tsum += i;\n\t}\n\treturn sum;", "    // TODO: complete this function.\n\
    \    // Be sure to use a loop, not recursion.\n  long sum = 0;\n  for(int i =\
    \ 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;", "    if (n == 1) {\n \
    \       return 1;\n    }\n    return n + sum_to_n(n - 1);", "    if (n == 1) {\n\
    \        return 1;\n    } else {\n        return n + sum_to_n(n - 1);\n    }",
  "    // long i, res = 0;\n    // for (i = 1; i <= n; i++)\n    //     res += i;\n\
    \    // return res;\n    return n*(n+1)/2;", "   assert(n >= 1);\n   // Fill in\
    \ code here\n\n   return (n * (n + 1)) / 2;\n", "  long sum=0;\n  for(int i=1;i<=n;i++)\n\
    \  {\n  \tsum=sum+i;\n  }\n  return sum;", '    return (n * (n + 1)) / 2;', '  return
    n*(n+1)/2;', "    if (n == 1) {\n        return 1;\n    }\n    return n + sum_to_n(n\
    \ - 1);", "\tlong total = 0;\n\tfor (long i = 1; i <= n; i++) {\n\t\ttotal +=\
    \ i;\n\t}\n\treturn total;", '    return (n * (n + 1)) / 2;', '  return (n*(n+1))/2;',
  "    long output = n*(n+1)/2;\n    return output;", '  return n * (n + 1) / 2;',
  "  long int sum = 0;\n  while (n != 0) {\n    sum += n;\n    n--;\n  }\n  return\
    \ sum;", "  long sum = 0;\n  long i = 1;\n  while (i <= n) {\n    sum += i;\n\
    \    i++;\n  }\n  return sum;", "    long sum = 0;\n    for (long i = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;",
  "  if (n == 1) {\n    return 1;\n  } else {\n    return n + sum_to_n(n - 1);\n \
    \ }", "\treturn n*(n+1)/2;", "\tif (n <= 0) {\n\t\treturn 0;\n\t}\n\tlong result\
    \ = 0;\n\tlong i = 1;\n\tfor (; i <= n; i++) {\n\t\tresult += i;\n\t}\n\treturn\
    \ result;", "    // YOUR CODE GOES HERE\n    long result = n * (n + 1) / 2;\n\
    \    return result;", "    assert(n >= 1);\n    return n * (n + 1) / 2;", "  assert(n\
    \ > 0);\n  return n * (n + 1) / 2;", "\tlong sum = n * (n + 1) / 2;\n\treturn\
    \ sum;", "    long i, sum = 0;\n    for (i = 1; i <= n; i++) {\n        sum +=\
    \ i;\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;", '    return (n * (n + 1))
    / 2;', '    return n * (n + 1) / 2;', '    return n * (n + 1) / 2;', '    return
    n * (n + 1) / 2;', "    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;", "    if (n == 1) {\n        return\
    \ 1;\n    } else {\n        return n + sum_to_n(n - 1);\n    }", "    long result\
    \ = n * (n + 1) / 2;\n    return result;", "    if (n == 1)\n        return 1;\n\
    \    else\n        return n + sum_to_n(n - 1);", "    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;", "\t// your\
    \ code here\n\tassert(n >= 1);\n\tlong res = n;\n\tif (n == 1) return 1;\n\tres\
    \ += sum_to_n(n - 1);\n\treturn res;", "  long sum = 0;\n  for (int i = 1; i <=\
    \ n; i++) {\n    sum += i;\n  }\n  return sum;", '   return n*(n+1)/2;', '  return
    (n*(n+1))/2;', '    return (n*(n+1))/2;', "    if (n == 1) {\n        return 1;\n\
    \    }\n    return n + sum_to_n(n - 1);", "\tlong sum = 0;\n\tfor (long i = 1;\
    \ i <= n; i++) {\n\t\tsum += i;\n\t}\n\treturn sum;", '    return (n*(n+1))/2;',
  '    return n * (n + 1) / 2;', "    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;", "    long i, sum;\n    sum\
    \ = 0;\n    for (i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;",
  '    return n*(n+1)/2;', "    long sum = (n*(n+1))/2;\n    return sum;", "    if\
    \ (n < 0)\n        return 0;\n    else if (n == 0)\n        return 0;\n    else\n\
    \        return n + sum_to_n(n - 1);", '    return n * (n + 1) / 2;', '    return
    (n * (n + 1)) / 2;', "    assert(n >= 1);\n    return (n * (n + 1)) / 2;", " \
    \   assert(n > 0);\n    return n*(n+1)/2;", "    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;", "    long\
    \ r = 0;\n    for (long i = 1; i <= n; i++) {\n        r += i;\n    }\n    return\
    \ r;", '    // TODO', "    long res = 0;\n    for (int i = 1; i <= n; i++) {\n\
    \        res += i;\n    }\n    return res;", "    assert(n >= 1);\n    // The\
    \ sum from 1 to n is n(n+1)/2.\n    return n * (n + 1) / 2;", "    if (n == 1)\
    \ {\n        return 1;\n    }\n    else {\n        return n + sum_to_n(n - 1);\n\
    \    }", "    // Need to use longs because n is a long\n    long i, sum = 0;\n\
    \    for (i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;", " \
    \   if (n == 1) {\n        return 1;\n    } else {\n        return n + sum_to_n(n\
    \ - 1);\n    }", "  // Put your code here.\n  return (n*(n+1))/2;", "    long\
    \ sum = n*(n+1)/2;\n    return sum;", "    long sum = n * (n + 1) / 2;\n    return\
    \ sum;", '  return (n*(n+1))/2;', '  return (n * (n + 1)) / 2;', "\treturn (n*(n+1))/2;",
  '  return n * (n + 1) / 2;', "\treturn n * (n + 1) / 2;", "    // your code here\n\
    \    long sum=0;\n    for(int i=1;i<=n;i++)\n    {\n        sum=sum+i;\n    }\n\
    \    return sum;", "    long sum=0;\n    for(int i=1;i<=n;i++)\n        sum+=i;\n\
    \    return sum;", "    if (n == 1) {\n        return 1;\n    } else {\n     \
    \   return n + sum_to_n(n - 1);\n    }", '    return n*(n+1)/2;', "    long sum\
    \ = n*(n+1)/2;\n    return sum;", "\tif (n == 1) {\n\t\treturn 1;\n\t}\n\treturn\
    \ n + sum_to_n(n - 1);", "\tif (n <= 0)\n\t\treturn 0;\n\telse\n\t\treturn n +\
    \ sum_to_n(n - 1);", "    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n\
    \        sum += i;\n    }\n    return sum;", "\tlong sum = 0;\n\tfor (long i =\
    \ 1; i <= n; i++) {\n\t\tsum += i;\n\t}\n\treturn sum;", "long sum=0;\n\tsum =\
    \ (n*(n+1))/2;\n\n\treturn sum;", "    long sum = 0;\n    // Fill in your code\
    \ here\n    return sum;", "    if (n < 1) {\n        return 0;\n    }\n    return\
    \ n + sum_to_n(n - 1);", "  if (n > 0) {\n    return n + sum_to_n(n - 1);\n  }\
    \ else {\n    return 0;\n  }", "long sum=0;\nfor(int i=1;i<=n;i++)\n{\nsum=sum+i;",
  "  // YOUR CODE HERE.\n  // DO NOT USE ANY LOOPS.\n  return n*(n+1)/2;", "\t// YOUR\
    \ CODE GOES HERE\n\t//if (n==1)\n\t\t//return 1;\n\t//else\n\t\treturn n + sum_to_n(n-1);",
  '    return (n * (n + 1)) / 2;']
stop_tokens:
- "\n}"

name: HumanEval_142_sum_squares
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// \"\n// This function will\
  \ take a list of integers. For all entries in the list, the function shall square\
  \ the integer entry if its index is a \n// multiple of 3 and will cube the integer\
  \ entry if its index is a multiple of 4 and not a multiple of 3. The function will\
  \ not \n// change the entries in the list whose indexes are not a multiple of 3\
  \ or 4. The function shall then return the sum of all entries. \n// Examples:\n\
  // For lst = [1,2,3] the output should be 6\n// For lst = []  the output should\
  \ be 0\n// For lst = [-1,-5,2,-1,-5]  the output should be -126\nlong sum_squares(std::vector<long>\
  \ lst) {\n"
tests: "}\nint main() {\n    auto candidate = sum_squares;\n    assert(candidate((std::vector<long>({1,\
  \ 2, 3}))) == (6));\n    assert(candidate((std::vector<long>({1, 4, 9}))) == (14));\n\
  \    assert(candidate((std::vector<long>())) == (0));\n    assert(candidate((std::vector<long>({1,\
  \ 1, 1, 1, 1, 1, 1, 1, 1}))) == (9));\n    assert(candidate((std::vector<long>({-1,\
  \ -1, -1, -1, -1, -1, -1, -1, -1}))) == (-3));\n    assert(candidate((std::vector<long>({0})))\
  \ == (0));\n    assert(candidate((std::vector<long>({-1, -5, 2, -1, -5}))) == (-126));\n\
  \    assert(candidate((std::vector<long>({-56, -99, 1, 0, -2}))) == (3030));\n \
  \   assert(candidate((std::vector<long>({-1, 0, 0, 0, 0, 0, 0, 0, -1}))) == (0));\n\
  \    assert(candidate((std::vector<long>({-16, -9, -2, 36, 36, 26, -20, 25, -40,\
  \ 20, -4, 12, -26, 35, 37}))) == (-14196));\n    assert(candidate((std::vector<long>({-1,\
  \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10})))\
  \ == (-1448));\n}\n"
completions: ["    // Do not change the code above this line.\n    // You only need\
    \ to write/modify code below this line.\n    // \"\n    // You need to add code\
    \ that takes the input list, squares the entries whose indexes are a multiple\
    \ of 3,\n    // cubes the entries whose indexes are a multiple of 4 and not a\
    \ multiple of 3, and returns the sum of the list.\n    // \"\n    long sum = 0;\n\
    \    for(int i = 0; i < lst.size(); i++){\n        if(i % 3 == 0)\n          \
    \  lst[i] = lst[i] * lst[i];\n        else if(i % 4 == 0)\n            lst[i]\
    \ = lst[i] * lst[i] * lst[i];\n        sum += lst[i];\n    }\n    return sum;",
  "    // your code here...\n    // this function should return the sum of all entries\
    \ in the list.\n    // The entries shall be squared if the index of the entry\
    \ is a multiple of 3\n    // and cubed if the index of the entry is a multiple\
    \ of 4 and not a multiple of 3.\n    // The entries shall be left as is if neither\
    \ of these conditions are met.", "\t//  your code goes here\n\tlong sum = 0;\n\
    \tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tlst[i]\
    \ = pow(lst[i], 2);\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\tlst[i]\
    \ = pow(lst[i], 3);\n\t\t}\n\t\tsum += lst[i];\n\t}\n\treturn sum;", "\t// your\
    \ code here\n\treturn 0;", "\t// your code here\n\treturn 0;", "\tlong long sum\
    \ = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\t\
    sum += lst[i] * lst[i];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\
    \tsum += lst[i] * lst[i] * lst[i];\n\t\t}\n\t\telse {\n\t\t\tsum += lst[i];\n\t\
    \t}\n\t}\n\treturn sum;", "\tlong sum = 0;\n\tlong power = 2;\n\tfor (int i =\
    \ 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0 && i % 4 != 0) {\n\t\t\tsum +=\
    \ pow(lst[i], power);\n\t\t}\n\t\telse if (i % 4 == 0) {\n\t\t\tsum += pow(lst[i],\
    \ 3);\n\t\t}\n\t\telse\n\t\t\tsum += lst[i];\n\t}\n\treturn sum;", "\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\t\
    sum += lst[i] * lst[i];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\
    \tsum += lst[i] * lst[i] * lst[i];\n\t\t}\n\t\telse {\n\t\t\tsum += lst[i];\n\t\
    \t}\n\t}\n\treturn sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (i % 3 == 0) {\n            sum += lst[i] * lst[i];\n   \
    \     } else if (i % 4 == 0) {\n            sum += lst[i] * lst[i] * lst[i];\n\
    \        } else {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "    // Put your code here\n    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if(i % 3 == 0){\n            lst[i] = lst[i] * lst[i];\n    \
    \    }\n        if(i % 4 == 0 && i % 3 != 0){\n            lst[i] = lst[i] * lst[i]\
    \ * lst[i];\n        }\n        sum += lst[i];\n    }\n    return sum;", "\tlong\
    \ ans = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0 && i\
    \ % 4 != 0)\n\t\t\tans += lst[i] * lst[i];\n\t\telse if (i % 4 == 0)\n\t\t\tans\
    \ += lst[i] * lst[i] * lst[i];\n\t\telse\n\t\t\tans += lst[i];\n\t}\n\treturn\
    \ ans;", "  if(lst.size()==0)return 0;\n  else if(lst.size()==1)return lst[0];\n\
    \  long sum=0;\n  for(int i=0;i<lst.size();i++){\n    if(i%3==0)\n      sum+=pow(lst[i],2);\n\
    \    else if(i%4==0&&i%3!=0)\n      sum+=pow(lst[i],3);\n    else sum+=lst[i];\n\
    \  }\n  return sum;", "\treturn 0;", "\t// your code here\n\tlong sum = 0;\n\t\
    for (long i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tlong square\
    \ = lst[i] * lst[i];\n\t\t\tsum += square;\n\t\t}\n\t\telse if (i % 4 == 0 &&\
    \ i % 3 != 0) {\n\t\t\tlong cube = lst[i] * lst[i] * lst[i];\n\t\t\tsum += cube;\n\
    \t\t}\n\t\telse {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) lst[i] =\
    \ lst[i] * lst[i];\n\t\tif (i % 4 == 0 && i % 3 != 0) lst[i] = lst[i] * lst[i]\
    \ * lst[i];\n\t\tsum += lst[i];\n\t}\n\treturn sum;", "\tfor (long i = 0; i <\
    \ lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tlst[i] = lst[i] * lst[i];\n\
    \t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\tlst[i] = lst[i] * lst[i]\
    \ * lst[i];\n\t\t}\n\t}\n\tlong sum = 0;\n\tfor (long i = 0; i < lst.size(); i++)\
    \ {\n\t\tsum += lst[i];\n\t}\n\treturn sum;", "  long sum = 0;\n  for (long i\
    \ = 0; i < lst.size(); i++) {\n    if (i % 3 == 0) {\n      lst[i] = pow(lst[i],\
    \ 2);\n    }\n    if (i % 4 == 0 && i % 3 != 0) {\n      lst[i] = pow(lst[i],\
    \ 3);\n    }\n    sum += lst[i];\n  }\n  return sum;", "    long sum=0;\n    for(int\
    \ i=0;i<lst.size();i++){\n        if(i%3==0){\n            sum+=lst[i]*lst[i];\n\
    \        }\n        else if(i%4==0 && i%3!=0){\n            sum+=lst[i]*lst[i]*lst[i];\n\
    \        }\n        else{\n            sum+=lst[i];\n        }\n    }\n    return\
    \ sum;", "    // Your code here\n    int k=0;\n    for(int i=0;i<lst.size();i++)\n\
    \    {\n        if(i%3==0)\n        {\n            lst[i]=lst[i]*lst[i];\n   \
    \     }\n        if(i%4==0 && i%3!=0)\n        {\n            lst[i]=lst[i]*lst[i]*lst[i];\n\
    \        }\n        k=k+lst[i];\n    }\n    return k;", "  int sum = 0;\n  for(int\
    \ i = 0; i < lst.size(); i++){\n    if(i % 3 == 0 && i % 4 != 0){\n      sum +=\
    \ pow(lst[i], 2);\n    }\n    else if(i % 4 == 0 && i % 3 != 0){\n      sum +=\
    \ pow(lst[i], 3);\n    }\n    else{\n      sum += lst[i];\n    }\n  }\n  return\
    \ sum;", "  long sum_of_squares=0;\n  for(long index=0;index<lst.size();index++){\n\
    \      if(index%3==0){\n        sum_of_squares+=lst[index]*lst[index];\n     \
    \ }\n      else if(index%4==0){\n        sum_of_squares+=lst[index]*lst[index]*lst[index];\n\
    \      }\n      else{\n        sum_of_squares+=lst[index];\n      }\n  }\n  return\
    \ sum_of_squares;", "    long count=0;\n    for(auto it=lst.begin();it!=lst.end();it++){\n\
    \        if((std::distance(lst.begin(),it)+1)%3==0){\n            if((std::distance(lst.begin(),it)+1)%4==0){\n\
    \                count+=pow(*it,3);\n            }\n            else{\n      \
    \          count+=pow(*it,2);\n            }\n        }\n        else{\n     \
    \       count+=*it;\n        }\n    }\n    return count;", "\tlong sum = 0;\n\t\
    for (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tsum += lst[i]\
    \ * lst[i];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\tsum += lst[i]\
    \ * lst[i] * lst[i];\n\t\t}\n\t\telse {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\t\
    return sum;", "    // Your code goes here\n    long sum;\n    for(long i=0;i<lst.size();i++)\n\
    \    {\n    \tif(i%3==0 && i%4!=0)\n    \t{\n    \t\tsum+=lst[i]*lst[i];\n\t\t\
    }\n\t\telse if(i%4==0 && i%3!=0)\n\t\t{\n\t\t\tsum+=lst[i]*lst[i]*lst[i];\n\t\t\
    }\n\t\telse\n\t\t{\n\t\t\tsum+=lst[i];\n\t\t}\n\t}\n\treturn sum;", "    long\
    \ sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(i%3==0 && i%4!=0){\n\
    \            sum+=lst[i]*lst[i];\n        }\n        else if(i%4==0 && i%3!=0){\n\
    \            sum+=lst[i]*lst[i]*lst[i];\n        }\n        else{\n          \
    \  sum+=lst[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    if (i % 3 == 0) {\n      sum += lst[i] *\
    \ lst[i];\n    } else if (i % 4 == 0) {\n      sum += lst[i] * lst[i] * lst[i];\n\
    \    } else {\n      sum += lst[i];\n    }\n  }\n  return sum;", "    long sum\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (i % 3 == 0) {\n\
    \            sum += lst[i] * lst[i];\n        } else if (i % 4 == 0) {\n     \
    \       sum += lst[i] * lst[i] * lst[i];\n        } else {\n            sum +=\
    \ lst[i];\n        }\n    }\n    return sum;", "\t// YOUR CODE GOES HERE\n\tint\
    \ sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\
    \t\tint result = lst[i] * lst[i];\n\t\t\tsum += result;\n\t\t}\n\t\telse if (i\
    \ % 4 == 0 && i % 3 != 0) {\n\t\t\tint result = lst[i] * lst[i] * lst[i];\n\t\t\
    \tsum += result;\n\t\t}\n\t\telse {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn\
    \ sum;", "  int sz = lst.size();\n  long sum = 0;\n  for(int i = 0; i < sz; i++)\
    \ {\n    if(i % 3 == 0)\n      lst[i] = lst[i] * lst[i];\n    else if(i % 4 ==\
    \ 0 && i % 3 != 0)\n      lst[i] = lst[i] * lst[i] * lst[i];\n    sum += lst[i];\n\
    \  }\n  return sum;", "    long total = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (i % 3 == 0) {\n            total += pow(lst[i], 2);\n  \
    \      }\n        else if (i % 4 == 0 && i % 3 != 0) {\n            total += pow(lst[i],\
    \ 3);\n        }\n        else {\n            total += lst[i];\n        }\n  \
    \  }\n    return total;", "  long sum=0;\n  for(int i=0;i<lst.size();i++){\n \
    \   if(i%3==0){\n      sum+=lst[i]*lst[i];\n    }\n    else if(i%4==0){\n    \
    \  sum+=lst[i]*lst[i]*lst[i];\n    }\n    else{\n      sum+=lst[i];\n    }\n \
    \ }\n  return sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        if (i % 3 == 0) {\n            lst[i] = pow(lst[i], 2);\n       \
    \ } else if (i % 4 == 0 && i % 3 != 0) {\n            lst[i] = pow(lst[i], 3);\n\
    \        }\n        sum += lst[i];\n    }\n    return sum;", "  assert(true);\n\
    \  // Write a solution here\n  long sum = 0;\n  for(int i = 0; i < lst.size();\
    \ i++){\n    if(i % 3 == 0){\n      sum += lst[i] * lst[i];\n    }else if(i %\
    \ 4 == 0 && i % 3 != 0){\n      sum += lst[i] * lst[i] * lst[i];\n    }else{\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;", '   // WRITE YOUR CODE HERE!!!',
  "    long sum = 0;\n    for (size_t i = 0; i < lst.size(); i++) {\n        if ((i+1)\
    \ % 3 == 0) {\n            sum += lst[i] * lst[i];\n        } else if ((i+1) %\
    \ 4 == 0) {\n            sum += lst[i] * lst[i] * lst[i];\n        } else {\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;", "\t// insert\
    \ your code here\n  long sum = 0;\n  for(long i = 0; i < lst.size(); i++){\n \
    \   if(i % 3 == 0){\n      sum += lst[i] * lst[i];\n    }\n    else if(i % 4 ==\
    \ 0 && i % 3 != 0){\n      sum += lst[i] * lst[i] * lst[i];\n    }\n    else{\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;", "    long sum = 0;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        if (i % 3 == 0) {\n            lst[i]\
    \ = lst[i] * lst[i];\n        }\n        if (i % 4 == 0 && i % 3 != 0) {\n   \
    \         lst[i] = lst[i] * lst[i] * lst[i];\n        }\n        sum += lst[i];\n\
    \    }\n    return sum;", "\t// your code here\n\treturn 0;", "    // write your\
    \ code here\n    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n   \
    \     if(i % 3 == 0 && i % 4 != 0){\n            sum += lst[i] * lst[i];\n   \
    \     }\n        else if(i % 4 == 0 && i % 3 != 0){\n            sum += lst[i]\
    \ * lst[i] * lst[i];\n        }\n        else{\n            sum += lst[i];\n \
    \       }\n    }\n    return sum;", "\tlong sum = 0;\n\tint i = 0;\n\tfor (int\
    \ j = 0; j < lst.size(); j++) {\n\t\tif (i % 3 == 0) {\n\t\t\tsum += lst[j] *\
    \ lst[j];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\tsum += lst[j]\
    \ * lst[j] * lst[j];\n\t\t}\n\t\telse {\n\t\t\tsum += lst[j];\n\t\t}\n\t\ti++;\n\
    \t}\n\treturn sum;", '  return 0;', "\tlong sum = 0;\n\tstd::for_each(lst.begin(),\
    \ lst.end(), [&](long &data) {\n\t\tif(data % 3 == 0)\n\t\t\tdata = data * data;\n\
    \t\telse if(data % 4 == 0)\n\t\t\tdata = data * data * data;\n\t\tsum += data;\n\
    \t});\n\treturn sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++){\n\
    \        if(i%3==0){\n            sum+=lst[i]*lst[i];\n        }\n        else\
    \ if(i%4==0&&i%3!=0){\n            sum+=lst[i]*lst[i]*lst[i];\n        }\n   \
    \     else{\n            sum+=lst[i];\n        }\n    }\n    return sum;", " \
    \   long result = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (i\
    \ % 3 == 0) {\n            result += pow(lst[i], 2);\n        } else if (i % 4\
    \ == 0) {\n            result += pow(lst[i], 3);\n        } else {\n         \
    \   result += lst[i];\n        }\n    }\n    return result;", "    long sum =\
    \ 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if ((i+1) % 3 == 0 &&\
    \ (i+1) % 4 != 0) {\n            lst[i] = lst[i] * lst[i];\n        }\n      \
    \  else if ((i+1) % 4 == 0) {\n            lst[i] = lst[i] * lst[i] * lst[i];\n\
    \        }\n        sum += lst[i];\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if ((i % 3 == 0) && (i %\
    \ 4 != 0)) {\n            sum += lst[i] * lst[i];\n        }\n        else if\
    \ (i % 4 == 0) {\n            sum += lst[i] * lst[i] * lst[i];\n        }\n  \
    \      else {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "\tassert(lst.size()>=0);\n\tlong sum=0;\n\tfor(int i=0;i<lst.size();i++){\n\t\t\
    if(i%3==0){\n\t\t\tsum+=lst[i]*lst[i];\n\t\t}\n\t\telse if(i%4==0 && i%3!=0){\n\
    \t\t\tsum+=lst[i]*lst[i]*lst[i];\n\t\t}\n\t\telse{\n\t\t\tsum+=lst[i];\n\t\t}\n\
    \t}\n\treturn sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        if (i % 3 == 0) {\n            sum += pow(lst[i], 2);\n        }\
    \ else if (i % 4 == 0 && i % 3 != 0) {\n            sum += pow(lst[i], 3);\n \
    \       } else {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if ((i % 3 == 0)\
    \ && (i % 4 != 0)) {\n      sum += lst[i] * lst[i];\n    }\n    else if (i % 4\
    \ == 0) {\n      sum += lst[i] * lst[i] * lst[i];\n    }\n    else {\n      sum\
    \ += lst[i];\n    }\n  }\n  return sum;", "\tint list_size = lst.size();\n\tint\
    \ sum = 0;\n\tfor (int i = 0; i < list_size; i++) {\n\t\tif (i % 3 == 0) {\n\t\
    \t\tlst[i] = lst[i] * lst[i];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\
    \t\t\tlst[i] = lst[i] * lst[i] * lst[i];\n\t\t}\n\t\tsum += lst[i];\n\t}\n\treturn\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (i % 3 == 0) {\n            sum += pow(lst[i], 2);\n        } else if\
    \ (i % 4 == 0) {\n            sum += pow(lst[i], 3);\n        } else {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;", "    long ans=0;\n\
    \    for(int i=0;i<lst.size();i++){\n        if(i%3==0 && i%4!=0){\n         \
    \   ans+=pow(lst[i],2);\n        }\n        else if(i%4==0 && i%3!=0){\n     \
    \       ans+=pow(lst[i],3);\n        }\n        else{\n            ans+=lst[i];\n\
    \        }\n    }\n    return ans;", "\t//Write your code here\n\tlong sum = 0;\n\
    \tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tlst[i]\
    \ = lst[i] * lst[i];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\t\
    lst[i] = lst[i] * lst[i] * lst[i];\n\t\t}\n\t\tsum += lst[i];\n\t}\n\treturn sum;",
  "\t// Write your code here\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i\
    \ % 3 == 0) {\n\t\t\tlst[i] = lst[i] * lst[i];\n\t\t}\n\t\telse if (i % 4 == 0\
    \ && i % 3 != 0) {\n\t\t\tlst[i] = lst[i] * lst[i] * lst[i];\n\t\t}\n\t}\n\tint\
    \ sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tsum += lst[i];\n\t}\n\
    \treturn sum;", "\t//Your code goes here\n\tlong int i, sum = 0;\n\tfor (i = 0;\
    \ i < lst.size(); i++)\n\t{\n\t\tif (i % 3 == 0)\n\t\t{\n\t\t\tlst[i] = lst[i]\
    \ * lst[i];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0)\n\t\t{\n\t\t\tlst[i]\
    \ = lst[i] * lst[i] * lst[i];\n\t\t}\n\t\tsum = sum + lst[i];\n\t}\n\treturn sum;",
  "    long sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(i%3==0 && i%4!=0){\n\
    \            sum+=(lst[i]*lst[i]);\n        }\n        else if(i%4==0 && i%3!=0){\n\
    \            sum+=(lst[i]*lst[i]*lst[i]);\n        }\n        else{\n        \
    \    sum+=lst[i];\n        }\n    }\n    return sum;", "    \n    assert (true);\n\
    \    return 0;", "\tint i=0;\n\tlong sum = 0;\n\tfor(std::vector<long>::iterator\
    \ it = lst.begin(); it != lst.end(); ++it) {\n\t\ti++;\n\t\tif(i%3 == 0)\n\t\t\
    \tsum += *it * *it;\n\t\telse if(i%4 == 0)\n\t\t\tsum += *it * *it * *it;\n\t\t\
    else\n\t\t\tsum += *it;\n\t}\n\treturn sum;", "    // write your code here and\
    \ below\n    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n       \
    \ if(i % 3 == 0){\n            sum += lst[i] * lst[i];\n        }\n        else\
    \ if(i % 4 == 0 && i % 3 != 0){\n            sum += lst[i] * lst[i] * lst[i];\n\
    \        }\n        else{\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i\
    \ % 3 == 0) {\n\t\t\tsum += pow(lst[i], 2);\n\t\t}\n\t\telse if (i % 4 == 0 &&\
    \ i % 3 != 0) {\n\t\t\tsum += pow(lst[i], 3);\n\t\t}\n\t\telse if (i % 3 != 0\
    \ && i % 4 != 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "    long\
    \ sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (i % 3 ==\
    \ 0) {\n            sum += lst[i] * lst[i];\n        } else if (i % 4 == 0) {\n\
    \            sum += lst[i] * lst[i] * lst[i];\n        } else {\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;", "  // This will be used to sum\
    \ the values in the vector.\n  long result = 0;\n  // This is to get the lenght\
    \ of the vector.\n  int n = lst.size();\n  // This will iterate through all of\
    \ the elements in the vector.\n  for (int i = 0; i < n; i++) {\n    //This is\
    \ to check if the current index is a multiple of 3.\n    if (i % 3 == 0) {\n \
    \     // This is to set the current element to its square.\n      lst[i] = lst[i]\
    \ * lst[i];\n    }\n    // This is to check if the current index is a multiple\
    \ of 4 and not a multiple of 3.\n    else if (i % 4 == 0 && i % 3 != 0) {\n  \
    \    // This is to set the current element to its cube.\n      lst[i] = lst[i]\
    \ * lst[i] * lst[i];\n    }\n    // This is to sum the values in the vector.\n\
    \    result += lst[i];\n  }\n  // This will return the sum of the elements in\
    \ the vector.\n  return result;", "    long ans = 0;\n    for(long i = 0; i <\
    \ lst.size(); i++){\n        if(i % 3 == 0 && i % 4 != 0){\n            ans +=\
    \ lst[i] * lst[i];\n        }\n        else if(i % 4 == 0 && i % 3 != 0){\n  \
    \          ans += lst[i] * lst[i] * lst[i];\n        }\n        else{\n      \
    \      ans += lst[i];\n        }\n    }\n    return ans;", "\tif (lst.size() ==\
    \ 0) return 0;\n\tstd::vector<long>::iterator it;\n\tint num = 0;\n\tfor (it =\
    \ lst.begin(); it != lst.end(); it++) {\n\t\tif (num % 3 == 0) {\n\t\t\t*it =\
    \ pow(*it, 2);\n\t\t}\n\t\telse if (num % 4 == 0 && num % 3 != 0) {\n\t\t\t*it\
    \ = pow(*it, 3);\n\t\t}\n\t\tnum++;\n\t}\n\tlong sum = 0;\n\tfor (it = lst.begin();\
    \ it != lst.end(); it++) {\n\t\tsum += *it;\n\t}\n\treturn sum;", "    long sum\
    \ = 0;\n    for (unsigned i = 0; i < lst.size(); i++) {\n        if (i % 3 ==\
    \ 0) {\n            sum += pow(lst[i], 2);\n        } else if (i % 4 == 0) {\n\
    \            sum += pow(lst[i], 3);\n        } else {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "\t// put your code here\n\tint n = lst.size();\n\
    \tlong sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (i % 3 == 0) {\n\t\t\t\
    lst[i] = lst[i] * lst[i];\n\t\t}\n\t\telse if (i % 4 == 0) {\n\t\t\tlst[i] = lst[i]\
    \ * lst[i] * lst[i];\n\t\t}\n\t\tsum += lst[i];\n\t}\n\treturn sum;", "    long\
    \ sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(i%3==0){\n          \
    \  sum+=lst[i]*lst[i];\n        }\n        else if(i%4==0 && i%3!=0){\n      \
    \      sum+=lst[i]*lst[i]*lst[i];\n        }\n        else{\n            sum+=lst[i];\n\
    \        }\n    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tsum += pow(lst[i], 2);\n\t\t}\n\t\telse\
    \ if (i % 4 == 0 && i % 3 != 0) {\n\t\t\tsum += pow(lst[i], 3);\n\t\t}\n\t\telse\
    \ {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "    //write your code\
    \ here\n    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(i\
    \ % 3 == 0){\n            sum += pow(lst[i], 2);\n        }\n        else if((i\
    \ % 4 == 0) && (i % 3 != 0)){\n            sum += pow(lst[i], 3);\n        }\n\
    \        else{\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0)\n\
    \t\t\tsum += pow(lst[i], 2);\n\t\telse if (i % 4 == 0 && i % 3 != 0)\n\t\t\tsum\
    \ += pow(lst[i], 3);\n\t\telse\n\t\t\tsum += lst[i];\n\t}\n\treturn sum;", " \
    \   long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (i\
    \ % 3 == 0) {\n            sum += lst[i] * lst[i];\n        } else if (i % 4 ==\
    \ 0) {\n            sum += lst[i] * lst[i] * lst[i];\n        } else {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;", "    long sum=0;\n\
    \    for(int i=0;i<lst.size();i++){\n        if(i%3==0)\n            sum+=pow(lst[i],2);\n\
    \        else if(i%4==0 && i%3!=0)\n            sum+=pow(lst[i],3);\n        else\n\
    \            sum+=lst[i];\n    }\n    return sum;", "    long sum = 0;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        if (i % 3 == 0) {\n            lst[i]\
    \ = lst[i] * lst[i];\n        }\n        if (i % 4 == 0 && i % 3 != 0) {\n   \
    \         lst[i] = lst[i] * lst[i] * lst[i];\n        }\n        sum += lst[i];\n\
    \    }\n    return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (i % 3 == 0) {\n      sum += lst[i] * lst[i];\n    } else if\
    \ (i % 4 == 0) {\n      sum += lst[i] * lst[i] * lst[i];\n    } else {\n     \
    \ sum += lst[i];\n    }\n  }\n  return sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++){\n\
    \        if(i%3==0 && i%4!=0){\n            sum+=(lst[i]*lst[i]);\n        }\n\
    \        else if(i%4==0 && i%3!=0){\n            sum+=(lst[i]*lst[i]*lst[i]);\n\
    \        }\n        else{\n            sum+=lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (size_t i = 0; i < lst.size(); i++) {\n \
    \       long num = lst[i];\n        if (i % 3 == 0) {\n            sum += num\
    \ * num;\n        } else if (i % 4 == 0) {\n            sum += num * num * num;\n\
    \        } else {\n            sum += num;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    int len = lst.size();\n    for(int i = 0; i < len; i++)\
    \ {\n        if(i % 3 == 0) {\n            lst[i] = lst[i] * lst[i];\n       \
    \ } else if(i % 4 == 0 && i % 3 != 0) {\n            lst[i] = lst[i] * lst[i]\
    \ * lst[i];\n        }\n        sum += lst[i];\n    }\n    return sum;", "  //\
    \ your code goes here\n  int len = lst.size();\n  long sum = 0;\n  for(int i =\
    \ 0; i < len; i++){\n    if(i % 3 == 0 && i % 4 != 0){\n      sum += lst[i] *\
    \ lst[i];\n    }\n    else if(i % 4 == 0 && i % 3 != 0){\n      sum += lst[i]\
    \ * lst[i] * lst[i];\n    }\n    else{\n      sum += lst[i];\n    }\n  }\n  return\
    \ sum;", "    long total = 0;\n    for (size_t i = 0; i < lst.size(); i++) {\n\
    \        if ((i % 3 == 0) && (i % 4 != 0)) {\n            total += lst[i] * lst[i];\n\
    \        } else if (i % 4 == 0) {\n            total += lst[i] * lst[i] * lst[i];\n\
    \        } else {\n            total += lst[i];\n        }\n    }\n    return\
    \ total;", "\tint len = lst.size();\n\tlong sum = 0;\n\tfor (int i = 0; i < len;\
    \ i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tlst[i] = lst[i] * lst[i];\n\t\t}\n\t\t\
    if (i % 4 == 0 && i % 3 != 0) {\n\t\t\tlst[i] = lst[i] * lst[i] * lst[i];\n\t\t\
    }\n\t\tsum += lst[i];\n\t}\n\treturn sum;", "    \n    long sum=0;\n    for(long\
    \ i=0;i<lst.size();i++)\n    {\n        if(i%3==0 && i%4!=0)\n        sum=sum+(lst[i]*lst[i]);\n\
    \        else if(i%4==0 && i%3!=0)\n        sum=sum+(lst[i]*lst[i]*lst[i]);\n\
    \        else\n        sum=sum+lst[i];\n    }\n    return sum;", "\t// Write your\
    \ code here\n\treturn 0;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (i % 3 == 0) {\n            lst[i] = lst[i] * lst[i];\n \
    \       } else if (i % 4 == 0 && i % 3 != 0) {\n            lst[i] = lst[i] *\
    \ lst[i] * lst[i];\n        }\n        sum += lst[i];\n    }\n    return sum;",
  "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (i %\
    \ 3 == 0) {\n            sum += lst[i] * lst[i];\n        } else if (i % 4 ==\
    \ 0) {\n            sum += lst[i] * lst[i] * lst[i];\n        } else {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;", "    // Write your\
    \ code here.\n    int sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n   \
    \ \tif(i % 3 == 0 && i % 4 != 0){\n    \t\tlst[i] = lst[i] * lst[i];\n    \t}\n\
    \    \telse if(i % 4 == 0 && i % 3 != 0){\n    \t\tlst[i] = lst[i] * lst[i] *\
    \ lst[i];\n    \t}\n    \tsum += lst[i];\n    }\n    return sum;", "\tif (lst.size()\
    \ == 0) return 0;\n\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\
    \t\tif (i % 3 == 0) lst[i] = pow(lst[i], 2);\n\t\telse if (i % 4 == 0 && i % 3\
    \ != 0) lst[i] = pow(lst[i], 3);\n\t\tsum += lst[i];\n\t}\n\treturn sum;", "\t\
    long sum=0;\n\tfor(int i=0;i<lst.size();i++){\n\t\tif(i%3==0)\n\t\t\tsum+=lst[i]*lst[i];\n\
    \t\telse if(i%4==0 && i%3!=0)\n\t\t\tsum+=lst[i]*lst[i]*lst[i];\n\t\telse\n\t\t\
    \tsum+=lst[i];\n\t}\n\treturn sum;", "  // your code here\n  return 0;", "  //\
    \ Enter your code here.\n  return 0;", "\t//Place your solution here.\n\t//return\
    \ 0;\n\tstd::vector<long>::iterator itr;\n\tlong sum=0;\n\tint i=0;\n\tfor(itr=lst.begin();itr!=lst.end();itr++,i++)\n\
    \t{\n\t\tif(i%3==0 && i%4!=0)\n\t\t\tsum+=pow(*itr,2);\n\t\telse if(i%4==0 &&\
    \ i%3!=0)\n\t\t\tsum+=pow(*itr,3);\n\t\telse\n\t\t\tsum+=*itr;\n\t}\n\treturn\
    \ sum;", "    long sum = 0;\n    int len = lst.size();\n    for(int i = 0; i <\
    \ len; i++) {\n        if(i % 3 == 0 && i % 4 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n        else if(i % 4 == 0 && i % 3 != 0) {\n        \
    \    sum += lst[i] * lst[i] * lst[i];\n        }\n        else {\n           \
    \ sum += lst[i];\n        }\n    }\n    return sum;", "    long total = 0;\n \
    \   int i = 0;\n    for (auto it = lst.begin(); it != lst.end(); it++, i++) {\n\
    \        if (i % 3 == 0) {\n            total += pow(*it, 2);\n        } else\
    \ if (i % 4 == 0) {\n            total += pow(*it, 3);\n        } else {\n   \
    \         total += *it;\n        }\n    }\n    return total;", "\t// Your code\
    \ goes here\n\treturn 0;", "    long sum=0;\n    for(int i=0;i<lst.size();i++){\n\
    \        if(i%3==0 && i%4!=0){\n            sum=sum+(lst[i]*lst[i]);\n       \
    \ }\n        else if(i%4==0 && i%3!=0){\n            sum=sum+(lst[i]*lst[i]*lst[i]);\n\
    \        }\n        else{\n            sum=sum+lst[i];\n        }\n    }\n   \
    \ return sum;", "    // Start your code here.\n    int size = lst.size();\n  \
    \  int i = 0;\n    long result = 0;\n    for(i = 0; i < size; i++){\n        if((i\
    \ % 3 == 0) && (i % 4 != 0)){\n            lst[i] = lst[i] * lst[i];\n       \
    \ }\n        else if((i % 4 == 0) && (i % 3 != 0)){\n            lst[i] = lst[i]\
    \ * lst[i] * lst[i];\n        }\n        result += lst[i];\n    }\n    return\
    \ result;", "    long sum = 0;\n    long x;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        x = i + 1;\n        if (x % 3 == 0 && x % 4 == 0) {\n      \
    \      sum += lst[i] * lst[i] * lst[i];\n        } else if (x % 3 == 0) {\n  \
    \          sum += lst[i] * lst[i];\n        } else if (x % 4 == 0) {\n       \
    \     sum += lst[i] * lst[i] * lst[i];\n        } else {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    long index = 0;\n\
    \    while (index < lst.size()) {\n        if (index % 3 == 0) {\n           \
    \ lst[index] = lst[index] * lst[index];\n        }\n        if (index % 4 == 0\
    \ && index % 3 != 0) {\n            lst[index] = lst[index] * lst[index] * lst[index];\n\
    \        }\n        sum += lst[index];\n        index++;\n    }\n    return sum;",
  "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0)\
    \ {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 !=\
    \ 0) {\n\t\t\tsum += lst[i] * lst[i] * lst[i];\n\t\t}\n\t\telse {\n\t\t\tsum +=\
    \ lst[i];\n\t\t}\n\t}\n\treturn sum;", "\tlong sum = 0;\n\tlong i = 0;\n\twhile\
    \ (i < lst.size()) {\n\t\tif (i % 3 == 0) {\n\t\t\tif (i % 4 == 0) {\n\t\t\t\t\
    sum += lst[i] * lst[i] * lst[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsum += lst[i]\
    \ * lst[i];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tsum += lst[i];\n\t\t}\n\t\ti++;\n\
    \t}\n\treturn sum;", "  std::cout << \"The sum of the values in the vector are\
    \ : \";\n  long sum = 0;\n  for(int i = 0; i < lst.size(); i++){\n    if(i % 3\
    \ == 0 && i % 4 != 0){\n      sum += lst[i] * lst[i];\n    }\n    else if(i %\
    \ 4 == 0 && i % 3 != 0){\n      sum += lst[i] * lst[i] * lst[i];\n    }\n    else{\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;", "    // Write your code here\n\
    \    long sum=0;\n    for(long i=0;i<lst.size();i++)\n    {\n        if(i%3==0)\n\
    \        {\n            lst[i]=lst[i]*lst[i];\n        }\n        else if(i%4==0\
    \ && i%3!=0)\n        {\n            lst[i]=lst[i]*lst[i]*lst[i];\n        }\n\
    \        sum+=lst[i];\n    }\n    return sum;", "  // Type your code here\n  if(lst.size()\
    \ == 0)\n    return 0;\n  int index = 0;\n  for(auto iter = lst.begin(); iter\
    \ != lst.end(); iter++){\n    if(index % 3 == 0){\n      *iter = (*iter) * (*iter);\n\
    \    }else if(index % 4 == 0 && index % 3 != 0){\n      *iter = (*iter) * (*iter)\
    \ * (*iter);\n    }\n    index++;\n  }\n  return std::accumulate(lst.begin(),\
    \ lst.end(), 0);", "    for(int i=0;i<lst.size();i++){\n        if(i%3==0){\n\
    \            lst[i]=lst[i]*lst[i];\n        }\n        if(i%4==0 && i%3!=0){\n\
    \            lst[i]=lst[i]*lst[i]*lst[i];\n        }\n    }\n    long sum=0;\n\
    \    for(int i=0;i<lst.size();i++){\n        sum+=lst[i];\n    }\n    return sum;",
  "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (i %\
    \ 3 == 0) {\n            sum += lst[i] * lst[i];\n        } else if (i % 4 ==\
    \ 0) {\n            sum += lst[i] * lst[i] * lst[i];\n        } else {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;", "    // Write your\
    \ code here\n    int sum=0;\n    for(long i=0;i<lst.size();i++)\n    {\n     \
    \   if(i%3==0 && i%4!=0)\n        {\n            sum=sum+(lst[i]*lst[i]);\n  \
    \      }\n        else if(i%4==0 && i%3!=0)\n        {\n            sum=sum+(lst[i]*lst[i]*lst[i]);\n\
    \        }\n        else\n        {\n            sum=sum+lst[i];\n        }\n\
    \    }\n    return sum;", "    if(lst.size() == 0)\n        return 0;\n    int\
    \ i = 0;\n    int sum = 0;\n    for(auto it = lst.begin(); it != lst.end(); it++){\n\
    \        if(i % 3 == 0)\n            sum += pow(*it, 2);\n        else if(i %\
    \ 4 == 0 && i % 3 != 0)\n            sum += pow(*it, 3);\n        else\n     \
    \       sum += *it;\n        i++;\n    }\n    return sum;", "    long sum=0;\n\
    \    for(long i=0;i<lst.size();i++){\n    \tif(i%3==0){\n    \t\tsum+=lst[i]*lst[i];\n\
    \    \t}\n    \telse if(i%4==0 && i%3!=0){\n    \t\tsum+=lst[i]*lst[i]*lst[i];\n\
    \    \t}\n    \telse{\n    \t\tsum+=lst[i];\n    \t}\n    }\n    return sum;",
  "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (i %\
    \ 3 == 0) {\n            sum += pow(lst[i], 2);\n        }\n        else if (i\
    \ % 4 == 0 && i % 3 != 0) {\n            sum += pow(lst[i], 3);\n        }\n \
    \       else {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "\t//Good luck!\n\tlong i,s=0;\n\tfor(i=0;i<lst.size();i++)\n\t{\n\t\tif(i%3==0\
    \ && i%4!=0)\n\t\t{\n\t\t\ts=s+(lst[i]*lst[i]);\n\t\t}\n\t\telse if(i%4==0 &&\
    \ i%3!=0)\n\t\t{\n\t\t\ts=s+(lst[i]*lst[i]*lst[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\
    \t\ts=s+lst[i];\n\t\t}\n\t}\n\treturn s;", "  //your code here\n  long sum=0;\n\
    \  for(int i=0;i<lst.size();i++)\n  {\n    if(i%3==0)\n    {\n      lst[i]=lst[i]*lst[i];\n\
    \    }\n    else if(i%4==0 && i%3!=0)\n    {\n      lst[i]=lst[i]*lst[i]*lst[i];\n\
    \    }\n    sum+=lst[i];\n  }\n  return sum;", "// Do not write the main method.\
    \ \n// Do not read input, instead use the arguments to the function. \n// Do not\
    \ print the output, instead return values as specified. \n// Still have a doubt.\
    \ Checkout www.interviewbit.com/pages/sample_codes/ for more details\n\tif(lst.size()\
    \ == 0)\n\t\treturn 0;\n\tlong sum=0;\n\tfor(long i=0;i<lst.size();i++)\n\t{\n\
    \t\tif(i%3 == 0)\n\t\t\tsum += lst[i]*lst[i];\n\t\telse if(i%4 == 0 && i%3 !=\
    \ 0)\n\t\t\tsum += lst[i]*lst[i]*lst[i];\n\t\telse\n\t\t\tsum += lst[i];\n\t}\n\
    \treturn sum;", "    long sum = 0;\n    int i;\n    for(i=0;i<lst.size();i++){\n\
    \        if(i%3==0)\n            sum += lst[i]*lst[i];\n        else if(i%4==0)\n\
    \            sum += lst[i]*lst[i]*lst[i];\n        else\n            sum += lst[i];\n\
    \    }\n    return sum;", "  //write your code here\n  long sum = 0;\n  long value;\n\
    \  int index = 0;\n  for(int i=0; i<lst.size(); i++){\n    value = lst[i];\n \
    \   if(index % 3 == 0 && index % 4 != 0){\n      value = lst[i] * lst[i];\n  \
    \  }\n    else if(index % 4 == 0 && index % 3 != 0){\n      value = lst[i] * lst[i]\
    \ * lst[i];\n    }\n    else{\n      value = lst[i];\n    }\n    sum += value;\n\
    \    index++;\n  }\n  return sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++){\n\
    \    \tif(i%3==0)\n    \t\tsum+=lst[i]*lst[i];\n    \telse if(i%4==0)\n    \t\t\
    sum+=lst[i]*lst[i]*lst[i];\n    \telse\n    \t\tsum+=lst[i];\n    }\n    return\
    \ sum;", "\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\
    \tlst[i] = pow(lst[i], 2);\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\
    \t\tlst[i] = pow(lst[i], 3);\n\t\t}\n\t}\n\tlong sum = 0;\n\tfor (int i = 0; i\
    \ < lst.size(); i++) {\n\t\tsum += lst[i];\n\t}\n\treturn sum;", "    long sum=0;\n\
    \    long int len=lst.size();\n    for(int i=0;i<len;i++)\n    {\n        if(i%3==0)\n\
    \        {\n            lst[i]=lst[i]*lst[i];\n        }\n        else if(i%4==0\
    \ && i%3!=0)\n        {\n            lst[i]=lst[i]*lst[i]*lst[i];\n        }\n\
    \        sum=sum+lst[i];\n    }\n    return sum;", "\t// Replace the code below\
    \ with your implementation. \n\t// Do not introduce new functions in the code\
    \ below.\n\t// Do not make changes to the main function. \n\t// Do not print anything\
    \ in the function.\n\t// Code starts here \n\tlong sum=0;\n\tfor(long i=0;i<lst.size();i++)\n\
    \t{\n\t\tif(i%3==0&&i%4!=0)\n\t\t{\n\t\t\tlst[i]=lst[i]*lst[i];\n\t\t}\n\t\telse\
    \ if(i%4==0&&i%3!=0)\n\t\t{\n\t\t\tlst[i]=lst[i]*lst[i]*lst[i];\n\t\t}\n\t\tsum=sum+lst[i];\n\
    \t}\n\treturn sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        if (i % 3 == 0) {\n            sum += lst[i] * lst[i];\n        }\
    \ else if (i % 4 == 0) {\n            sum += lst[i] * lst[i] * lst[i];\n     \
    \   } else {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (i %\
    \ 3 == 0) {\n            sum += lst[i] * lst[i];\n        } else if (i % 4 ==\
    \ 0) {\n            sum += lst[i] * lst[i] * lst[i];\n        } else {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;", "\tlong sum=0;\n\t\
    for(long i=0;i<lst.size();i++){\n\t\tif(i%3==0){\n\t\t\tsum+=lst[i]*lst[i];\n\t\
    \t}\n\t\telse if(i%4==0 && i%3!=0){\n\t\t\tsum+=lst[i]*lst[i]*lst[i];\n\t\t}\n\
    \t\telse{\n\t\t\tsum+=lst[i];\n\t\t}\n\t}\n\treturn sum;", "    for(int i=0;i<lst.size();i++){\n\
    \        if(i%3==0)\n            lst[i] = lst[i]*lst[i];\n        else if(i%4==0\
    \ && i%3!=0)\n            lst[i] = lst[i]*lst[i]*lst[i];\n    }\n    return std::accumulate(lst.begin(),lst.end(),0);",
  "  int size = lst.size();\n  for(int i = 0; i < size; i++) {\n    if((i % 3 == 0)\
    \ && (i % 4 != 0)) {\n      lst[i] = lst[i] * lst[i];\n    }\n    else if(i %\
    \ 4 == 0) {\n      lst[i] = lst[i] * lst[i] * lst[i];\n    }\n  }\n  long sum\
    \ = 0;\n  for(int i = 0; i < size; i++) {\n    sum += lst[i];\n  }\n  return sum;",
  "    long sum = 0;\n    int lst_len = lst.size();\n    for (int i = 0; i < lst_len;\
    \ i++) {\n        if (i % 3 == 0) {\n            sum += lst[i] * lst[i];\n   \
    \     } else if (i % 4 == 0) {\n            sum += lst[i] * lst[i] * lst[i];\n\
    \        } else {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "    //Your Code Goes Here\n    return 0;", "    // your code here\n    return 0;",
  "    long total = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (i\
    \ % 3 == 0) {\n            lst[i] = pow(lst[i], 2);\n        }\n        if (i\
    \ % 4 == 0 && i % 3 != 0) {\n            lst[i] = pow(lst[i], 3);\n        }\n\
    \        total += lst[i];\n    }\n    return total;", "  long sum = 0;\n  for\
    \ (long i = 0; i < lst.size(); i++) {\n    if (i % 3 == 0) {\n      lst[i] = lst[i]\
    \ * lst[i];\n    }\n    if (i % 4 == 0 && i % 3 != 0) {\n      lst[i] = lst[i]\
    \ * lst[i] * lst[i];\n    }\n    sum += lst[i];\n  }\n  return sum;", "\tlong\
    \ sum=0;\n\tfor(int i=0;i<lst.size();i++){\n\t\tif(i%3==0)\n\t\t\tsum+=lst[i]*lst[i];\n\
    \t\telse if(i%4==0 && i%3!=0)\n\t\t\tsum+=lst[i]*lst[i]*lst[i];\n\t\telse \n\t\
    \t\tsum+=lst[i];\n\t}\n\treturn sum;", "\t// your code here\n\treturn 0;", " \
    \   // Write your code here\n    long sum=0;\n    for(int i=0;i<lst.size();i++)\n\
    \    {\n        if(i%3==0)\n        {\n            sum+=lst[i]*lst[i];\n     \
    \   }\n        else if(i%4==0 && i%3!=0)\n        {\n            sum+=lst[i]*lst[i]*lst[i];\n\
    \        }\n        else if(i%3!=0 && i%4!=0)\n        {\n            sum+=lst[i];\n\
    \        }\n    }\n    return sum;", "\tfor (int i = 0; i < lst.size(); i++) {\n\
    \t\tif (i % 3 == 0) {\n\t\t\tlst[i] = lst[i] * lst[i];\n\t\t}\n\t\telse if (i\
    \ % 4 == 0 && i % 3 != 0) {\n\t\t\tlst[i] = lst[i] * lst[i] * lst[i];\n\t\t}\n\
    \t}\n\tlong result = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tresult\
    \ += lst[i];\n\t}\n\treturn result;", "    long result = 0;\n    int i = 0;\n\
    \    for (long& value : lst) {\n        if ((i % 3) == 0) {\n            value\
    \ *= value;\n        } else if ((i % 4) == 0) {\n            value *= value *\
    \ value;\n        }\n        i++;\n        result += value;\n    }\n    return\
    \ result;", "    int sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n    \
    \    if(i % 3 == 0){\n            sum += lst[i] * lst[i];\n        }\n       \
    \ else if(i % 4 == 0 && i % 3 != 0){\n            sum += lst[i] * lst[i] * lst[i];\n\
    \        }\n        else{\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (i % 3 == 0) {\n            sum += lst[i] * lst[i];\n        } else if\
    \ (i % 4 == 0) {\n            sum += lst[i] * lst[i] * lst[i];\n        } else\
    \ {\n            sum += lst[i];\n        }\n    }\n    return sum;", "    int\
    \ n = lst.size();\n    int k = n-1;\n    long sum=0;\n    for(int i=0;i<n;i++){\n\
    \        if(k%3==0)\n            sum+=lst[i]*lst[i];\n        else if(k%4==0&&k%3!=0)\n\
    \            sum+=lst[i]*lst[i]*lst[i];\n        else\n            sum+=lst[i];\n\
    \        k--;\n    }\n    return sum;", "\tlong total = 0;\n\tfor (long i = 0;\
    \ i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\ttotal += lst[i] * lst[i];\n\
    \t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\ttotal += lst[i] * lst[i]\
    \ * lst[i];\n\t\t}\n\t\telse {\n\t\t\ttotal += lst[i];\n\t\t}\n\t}\n\treturn total;",
  "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0)\
    \ {\n\t\t\tsum += pow(lst[i], 2);\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 !=\
    \ 0) {\n\t\t\tsum += pow(lst[i], 3);\n\t\t}\n\t\telse {\n\t\t\tsum += lst[i];\n\
    \t\t}\n\t}\n\treturn sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++){\n\
    \    \tif(i%3==0)\n    \t\tsum+=lst[i]*lst[i];\n    \telse if(i%4==0&&i%3!=0)\n\
    \    \t\tsum+=lst[i]*lst[i]*lst[i];\n    \telse\n    \t\tsum+=lst[i];\n    }\n\
    \    return sum;", "\tlong sum=0;\n\tfor(int i=0;i<lst.size();i++){\n\t\tif(i%3==0\
    \ && i%4!=0){\n\t\t\tsum+=lst[i]*lst[i];\n\t\t}\n\t\telse if(i%4==0 && i%3!=0){\n\
    \t\t\tsum+=lst[i]*lst[i]*lst[i];\n\t\t}\n\t\telse{\n\t\t\tsum+=lst[i];\n\t\t}\n\
    \t}\n\treturn sum;", "  long sum=0;\n  long n=lst.size();\n  for(long i=0;i<n;i++){\n\
    \    if(i%3==0){\n      sum+=lst[i]*lst[i];\n    }\n    else if(i%4==0 && i%3!=0){\n\
    \      sum+=lst[i]*lst[i]*lst[i];\n    }\n    else{\n      sum+=lst[i];\n    }\n\
    \  }\n  return sum;", "    long sum = 0;\n    //for(long i = 0; i < lst.size();\
    \ i++){\n        //if(i%3 == 0)\n            //sum += lst[i]*lst[i];\n       \
    \ //else if(i%4 == 0)\n            //sum += lst[i]*lst[i]*lst[i];\n        //else\n\
    \            //sum += lst[i];\n    //}\n    for(long i = 0; i < lst.size(); i++){\n\
    \        if(i%3 == 0 && i%4 != 0)\n            sum += lst[i]*lst[i];\n       \
    \ else if(i%4 == 0)\n            sum += lst[i]*lst[i]*lst[i];\n        else\n\
    \            sum += lst[i];\n    }\n    return sum;", "  long i = 0;\n  long sum\
    \ = 0;\n  while (i < lst.size()) {\n    if (i % 3 == 0 && i % 4 != 0) {\n    \
    \  sum += pow(lst[i], 2);\n    }\n    else if (i % 4 == 0 && i % 3 != 0) {\n \
    \     sum += pow(lst[i], 3);\n    }\n    else {\n      sum += lst[i];\n    }\n\
    \    i++;\n  }\n  return sum;", "\tlong sum=0;\n\tfor(long i=0;i<lst.size();i++){\n\
    \t\tif(i%3==0&&i%4!=0){\n\t\t\tsum+=lst[i]*lst[i];\n\t\t}\n\t\telse if(i%4==0&&i%3!=0){\n\
    \t\t\tsum+=lst[i]*lst[i]*lst[i];\n\t\t}\n\t\telse{\n\t\t\tsum+=lst[i];\n\t\t}\n\
    \t}\n\treturn sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\
    \ {\n        if (i % 3 == 0) {\n            sum += lst[i] * lst[i];\n        }\
    \ else if (i % 4 == 0) {\n            sum += lst[i] * lst[i] * lst[i];\n     \
    \   } else {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0)\n\
    \t\t\tsum += lst[i] * lst[i];\n\t\telse if (i % 4 == 0 && i % 3 != 0)\n\t\t\t\
    sum += lst[i] * lst[i] * lst[i];\n\t\telse\n\t\t\tsum += lst[i];\n\t}\n\treturn\
    \ sum;", "\treturn 0;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++)\
    \ {\n\t\tif (i % 3 == 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t\telse if\
    \ (i % 4 == 0 && i % 3 != 0) {\n\t\t\tsum += lst[i] * lst[i] * lst[i];\n\t\t}\n\
    \t\telse {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "\t// Write your\
    \ code here\n\t\n\tint sum = 0;\n\tint c = 0;\n\tint d = 0;\n\tfor(int i = 0;\
    \ i < lst.size(); i++)\n\t{\n\t\tif(i % 3 == 0)\n\t\t{\n\t\t\tc = c + lst[i] *\
    \ lst[i];\n\t\t}\n\t\telse if(i % 4 == 0 && i % 3 != 0)\n\t\t{\n\t\t\td = d +\
    \ lst[i] * lst[i] * lst[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum = sum + lst[i];\n\
    \t\t}\n\t}\n\treturn sum + c + d;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (i % 3 == 0) {\n      sum += pow(lst[i], 2);\n    } else if (i\
    \ % 4 == 0 && i % 3 != 0) {\n      sum += pow(lst[i], 3);\n    } else {\n    \
    \  sum += lst[i];\n    }\n  }\n  return sum;", "\tint l = lst.size();\n\tlong\
    \ sum = 0;\n\tfor (int i = 0; i < l; i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tsum\
    \ += lst[i] * lst[i];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\t\
    sum += lst[i] * lst[i] * lst[i];\n\t\t}\n\t\telse {\n\t\t\tsum += lst[i];\n\t\t\
    }\n\t}\n\treturn sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        // index of 3\n        if ((i+1) % 3 == 0) {\n            lst[i]\
    \ = pow(lst[i], 2);\n        }\n        // index of 4 and not 3\n        else\
    \ if ((i+1) % 4 == 0 && (i+1) % 3 != 0) {\n            lst[i] = pow(lst[i], 3);\n\
    \        }\n        sum += lst[i];\n    }\n    return sum;", "    assert(true);\n\
    \    // TODO\n    return 0;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tlst[i] = lst[i] * lst[i];\n\t\t}\n\t\t\
    if (i % 4 == 0 && i % 3 != 0) {\n\t\t\tlst[i] = lst[i] * lst[i] * lst[i];\n\t\t\
    }\n\t\tsum += lst[i];\n\t}\n\treturn sum;", "\tlong sum=0;\n\t//\n\t// Write your\
    \ code here.\n\t//\n\tfor(int i=0;i<lst.size();i++){\n\t\tif(i%3==0)\n\t\t\tlst[i]=lst[i]*lst[i];\n\
    \t\telse if(i%4==0)\n\t\t\tlst[i]=lst[i]*lst[i]*lst[i];\n\t\tsum+=lst[i];\n\t\
    }\n\treturn sum;", "  // your code here\n  long sum=0;\n  int n=lst.size();\n\
    \  for(int i=0;i<n;i++)\n  {\n    if(i%3==0 && i%4!=0)\n    {\n      sum+=lst[i]*lst[i];\n\
    \    }\n    else if(i%4==0 && i%3!=0)\n    {\n      sum+=lst[i]*lst[i]*lst[i];\n\
    \    }\n    else\n    {\n      sum+=lst[i];\n    }\n  }\n  return sum;", "\tlong\
    \ sum = 0;\n\t// you must write the body of this function\n\t// and return the\
    \ correct answer.\n\tfor (long i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 ==\
    \ 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3\
    \ != 0) {\n\t\t\tsum += lst[i] * lst[i] * lst[i];\n\t\t}\n\t\telse {\n\t\t\tsum\
    \ += lst[i];\n\t\t}\n\t}\n\treturn sum;", "    for(int i=0;i<lst.size();i++){\n\
    \        if(i%3==0)\n            lst[i]*=lst[i];\n        else if(i%4==0&&i%3!=0)\n\
    \            lst[i]*=lst[i]*lst[i];\n    }\n    long sum=0;\n    for(int i=0;i<lst.size();i++)\n\
    \        sum+=lst[i];\n    return sum;", "    long sum = 0;\n    for (int i =\
    \ 0; i < lst.size(); i++) {\n        if (i % 3 == 0) {\n            sum += lst[i]\
    \ * lst[i];\n        } else if (i % 4 == 0) {\n            sum += lst[i] * lst[i]\
    \ * lst[i];\n        } else {\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;", "    for(long i = 0; i < lst.size(); i++){\n        if(i %\
    \ 3 == 0){\n            lst[i] = lst[i] * lst[i];\n        }else if(i % 4 == 0\
    \ && i % 3 != 0){\n            lst[i] = lst[i] * lst[i] * lst[i];\n        }\n\
    \    }\n    long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n       \
    \ sum += lst[i];\n    }\n    return sum;", "    int sum = 0;\n    for(int i =\
    \ 0; i < lst.size(); i++){\n        if(i % 3 == 0 && i % 4 != 0){\n          \
    \  sum += pow(lst[i], 2);\n        }\n        else if(i % 4 == 0 && i % 3 != 0){\n\
    \            sum += pow(lst[i], 3);\n        }\n        else{\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;", "\tassert(true);\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\t\
    sum += lst[i] * lst[i];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\
    \tsum += lst[i] * lst[i] * lst[i];\n\t\t}\n\t\telse {\n\t\t\tsum += lst[i];\n\t\
    \t}\n\t}\n\treturn sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tlst[i] = lst[i] * lst[i];\n\t\t}\n\t\t\
    if (i % 4 == 0 && i % 3 != 0) {\n\t\t\tlst[i] = lst[i] * lst[i] * lst[i];\n\t\t\
    }\n\t\tsum += lst[i];\n\t}\n\treturn sum;", "\t// for every number in lst, multiply\
    \ it by its index if it is divisible by 4, 3 or both\n\tlong total = 0;\n\n\t\
    for (int i = 0; i < lst.size(); i++) {\n\t\t// if the index is divisible by 4\
    \ and not by 3, multiply by 4\n\t\tif (i % 4 == 0 && i % 3 != 0) {\n\t\t\tlst[i]\
    \ *= 4;\n\t\t}\n\t\t// if the index is divisible by 3 and not by 4, multiply by\
    \ 3\n\t\telse if (i % 3 == 0 && i % 4 != 0) {\n\t\t\tlst[i] *= 3;\n\t\t}\n\t\t\
    // if the index is divisible by both 3 and 4, multiply by 12\n\t\telse if (i %\
    \ 3 == 0 && i % 4 == 0) {\n\t\t\tlst[i] *= 12;\n\t\t}\n\t\ttotal += lst[i];\n\t\
    }\n\treturn total;", "  for(int i=0;i<lst.size();i++){\n    if(i%3==0 && i%4!=0){\n\
    \      lst[i]=lst[i]*lst[i];\n    }\n    else if(i%4==0){\n      lst[i]=lst[i]*lst[i]*lst[i];\n\
    \    }\n  }\n  int sum=0;\n  for(int i=0;i<lst.size();i++){\n    sum=sum+lst[i];\n\
    \  }\n  return sum;", "\tlong sum = 0;\n\t// Implement function here\n\tlong mod3\
    \ = 0;\n\tlong mod4 = 0;\n\tfor (long i = 0; i < lst.size(); i++) {\n\t\tmod3\
    \ = i % 3;\n\t\tmod4 = i % 4;\n\t\tif (mod3 == 0) {\n\t\t\tlst[i] = lst[i] * lst[i];\n\
    \t\t}\n\t\tif (mod4 == 0 && mod3 != 0) {\n\t\t\tlst[i] = lst[i] * lst[i] * lst[i];\n\
    \t\t}\n\t\tsum += lst[i];\n\t}\n\treturn sum;", "  long sum = 0;\n   for(int i\
    \ = 0; i < lst.size(); i++){\n       if(i % 3 == 0){\n           lst[i] = lst[i]\
    \ * lst[i];\n       }\n       if(i % 4 == 0 && i % 3 != 0){\n           lst[i]\
    \ = lst[i] * lst[i] * lst[i];\n       }\n       sum += lst[i];\n   }\n   return\
    \ sum;", "    // Your code here\n    return 0;", "\tlong sum = 0;\n\tint n = lst.size();\n\
    \tfor (int i = 0; i < n; i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tsum += lst[i] *\
    \ lst[i];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\tsum += lst[i]\
    \ * lst[i] * lst[i];\n\t\t}\n\t\telse {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\t\
    return sum;", "    // your code here\n    long sum = 0;\n    if(lst.size() ==\
    \ 0) return 0;\n    else{\n        for(int i = 0; i < lst.size(); i++){\n    \
    \        if(i % 3 == 0)\n                sum += pow(lst[i], 2);\n            else\
    \ if(i % 4 == 0)\n                sum += pow(lst[i], 3);\n            else\n \
    \               sum += lst[i];\n        }\n    }\n    return sum;", "\t// Write\
    \ your code here\n\tlong sum=0;\n\tfor(int i=0;i<lst.size();i++)\n\t{\n\t\tif(i%3==0)\n\
    \t\t\tsum+=lst[i]*lst[i];\n\t\telse if(i%4==0)\n\t\t\tsum+=lst[i]*lst[i]*lst[i];\n\
    \t\telse\n\t\t\tsum+=lst[i];\n\t}\n\treturn sum;", "    long result = 0;\n   \
    \ for (unsigned int i = 0; i < lst.size(); i++) {\n        if (i % 3 == 0) {\n\
    \            if (i % 4 == 0) {\n                result += lst[i] * lst[i] * lst[i];\n\
    \            } else {\n                result += lst[i] * lst[i];\n          \
    \  }\n        } else {\n            result += lst[i];\n        }\n    }\n    return\
    \ result;", "\tlong result = 0;\n\tfor (long i = 0; i < lst.size(); i++) {\n\t\
    \tif (i % 3 == 0)\n\t\t\tresult += lst[i] * lst[i];\n\t\telse if (i % 4 == 0)\n\
    \t\t\tresult += lst[i] * lst[i] * lst[i];\n\t\telse\n\t\t\tresult += lst[i];\n\
    \t}\n\treturn result;", "    int lst_length = lst.size();\n    int index = 0;\n\
    \    long output = 0;\n    while (index < lst_length) {\n        long product\
    \ = 1;\n        if (index % 3 == 0) {\n            product *= lst[index] * lst[index];\n\
    \        }\n        if (index % 4 == 0 && index % 3 != 0) {\n            product\
    \ *= lst[index] * lst[index] * lst[index];\n        }\n        if (index % 3 !=\
    \ 0 && index % 4 != 0) {\n            product *= lst[index];\n        }\n    \
    \    output += product;\n        index++;\n    }\n    return output;", "  int\
    \ sum = 0;\n  for(int i = 0; i < lst.size(); i++){\n    if(i % 3 == 0){\n    \
    \  lst[i] = lst[i] * lst[i];\n    }\n    if(i % 4 == 0 && i % 3 != 0){\n     \
    \ lst[i] = lst[i] * lst[i] * lst[i];\n    }\n    sum += lst[i];\n  }\n  return\
    \ sum;", "  long sum=0;\n  if(lst.size()==0)\n    return 0;\n  for(unsigned int\
    \ i=0;i<lst.size();i++)\n  {\n    if(i%3==0&&i%4!=0)\n      sum+=lst[i]*lst[i];\n\
    \    else if(i%4==0&&i%3!=0)\n      sum+=lst[i]*lst[i]*lst[i];\n    else\n   \
    \   sum+=lst[i];\n  }\n  return sum;", "    long len = lst.size();\n    long sum\
    \ = 0;\n    long i = 0;\n    while(i < len){\n        if((i+1)%3 == 0 && (i+1)%4\
    \ != 0){\n            sum += lst[i]*lst[i];\n        }\n        else if((i+1)%4\
    \ == 0){\n            sum += lst[i]*lst[i]*lst[i];\n        }\n        else{\n\
    \            sum += lst[i];\n        }\n        i++;\n    }\n    return sum;",
  "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (i %\
    \ 3 == 0) {\n            sum += (lst[i] * lst[i]);\n        } else if (i % 4 ==\
    \ 0 && i % 3 != 0) {\n            sum += (lst[i] * lst[i] * lst[i]);\n       \
    \ } else {\n            sum += lst[i];\n        }\n    }\n    return sum;", "\t\
    int sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\
    \t\t\tlst[i] = lst[i] * lst[i];\n\t\t}\n\t\tif (i % 4 == 0 && i % 3 != 0) {\n\t\
    \t\tlst[i] = lst[i] * lst[i] * lst[i];\n\t\t}\n\t\tsum += lst[i];\n\t}\n\treturn\
    \ sum;", "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n    \
    \    if (i % 3 == 0) {\n            lst[i] = lst[i] * lst[i];\n        }\n   \
    \     if (i % 4 == 0 && i % 3 != 0) {\n            lst[i] = lst[i] * lst[i] *\
    \ lst[i];\n        }\n        sum += lst[i];\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (i % 3 == 0)\
    \ {\n            sum += lst[i] * lst[i];\n        } else if (i % 4 == 0) {\n \
    \           sum += lst[i] * lst[i] * lst[i];\n        } else {\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;", "    int sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++){\n        if(i % 3 == 0){\n            sum += pow(lst[i],\
    \ 2);\n        }\n        else if(i % 4 == 0 && i % 3 != 0){\n            sum\
    \ += pow(lst[i], 3);\n        }\n        else{\n            sum += lst[i];\n \
    \       }\n    }\n    return sum;", "\t// Your code here!\n\tfor (int i = 0; i\
    \ < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tlst[i] = lst[i] * lst[i];\n\
    \t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\tlst[i] = lst[i] * lst[i]\
    \ * lst[i];\n\t\t}\n\t}\n\tlong result = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tresult += lst[i];\n\t}\n\treturn result;", "    long sum = 0;\n\
    \    for (int i = 0; i < lst.size(); i++) {\n        if (i % 3 == 0) {\n     \
    \       sum += pow(lst[i], 2);\n        } else if (i % 4 == 0 && i % 3 != 0) {\n\
    \            sum += pow(lst[i], 3);\n        } else {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "    //TODO: Implement your function here\n\
    \    assert(false);\n    return 0;", "   int count = 0;\n   long sum = 0;\n  \
    \ for(auto it = lst.begin(); it != lst.end(); it++){\n       if(count % 4 == 0\
    \ && count % 3 != 0){\n           sum += pow(*it, 3);\n       }\n       else if(count\
    \ % 3 == 0){\n           sum += pow(*it, 2);\n       }\n       else{\n       \
    \    sum += *it;\n       }\n       count++;\n   }\n   return sum;", "    long\
    \ ans = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(i % 3 == 0)\
    \ {\n            ans += lst[i] * lst[i];\n        }\n        else if(i % 4 ==\
    \ 0) {\n            ans += lst[i] * lst[i] * lst[i];\n        }\n        else\
    \ {\n            ans += lst[i];\n        }\n    }\n    return ans;", "    for(int\
    \ i=0;i<lst.size();i++){\n        if(i%3==0){\n            lst[i]=lst[i]*lst[i];\n\
    \        }\n        else if(i%4==0 && i%3!=0){\n            lst[i]=lst[i]*lst[i]*lst[i];\n\
    \        }\n    }\n    return accumulate(lst.begin(),lst.end(),0);", "    long\
    \ sum=0;\n    for(long i=0;i<lst.size();i++){\n        if(i%3==0)\n          \
    \  sum+=lst[i]*lst[i];\n        else if(i%4==0 && i%3!=0)\n            sum+=lst[i]*lst[i]*lst[i];\n\
    \        else\n            sum+=lst[i];\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (i % 3 == 0) sum\
    \ += lst[i] * lst[i];\n        else if (i % 4 == 0) sum += lst[i] * lst[i] * lst[i];\n\
    \        else sum += lst[i];\n    }\n    return sum;", "\tassert(lst.size() <=\
    \ std::numeric_limits<int>::max());\n\tint sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t\telse\
    \ if (i % 4 == 0 && i % 3 != 0) {\n\t\t\tsum += lst[i] * lst[i] * lst[i];\n\t\t\
    }\n\t\telse {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\t\
    sum += lst[i] * lst[i];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\
    \tsum += lst[i] * lst[i] * lst[i];\n\t\t}\n\t\telse {\n\t\t\tsum += lst[i];\n\t\
    \t}\n\t}\n\treturn sum;", "  long sum = 0;\n  // your code goes here\n  //std::sort(lst.begin(),\
    \ lst.end());\n  for(int i = 0; i < lst.size(); i++){\n    if(i % 3 == 0 && i\
    \ % 4 != 0){\n      //int val = lst[i];\n      //val = val * val;\n      lst[i]\
    \ = pow(lst[i], 2);\n    }\n    else if(i % 4 == 0 && i % 3 != 0){\n      //int\
    \ val = lst[i];\n      //val = val * val * val;\n      lst[i] = pow(lst[i], 3);\n\
    \    }\n    sum += lst[i];\n  }\n  return sum;", "\tlong sum = 0;\n\tfor (long\
    \ i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tsum += lst[i] *\
    \ lst[i];\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\tsum += lst[i]\
    \ * lst[i] * lst[i];\n\t\t}\n\t\telse {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\t\
    return sum;", "\t//TODO: Implement me!\n\tlong sum = 0;\n\tfor (int i = 0; i <\
    \ lst.size(); i++) {\n\t\tif (i % 3 == 0)\n\t\t\tsum += lst[i] * lst[i];\n\t\t\
    else if (i % 4 == 0 && i % 3 != 0)\n\t\t\tsum += lst[i] * lst[i] * lst[i];\n\t\
    \telse\n\t\t\tsum += lst[i];\n\t}\n\treturn sum;", "\tint sum = 0;\n\tint i =\
    \ 0;\n\tfor (auto& element : lst) {\n\t\tif (i % 3 == 0 && i % 4 != 0) {\n\t\t\
    \tsum += element * element;\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\
    \t\t\tsum += element * element * element;\n\t\t}\n\t\telse {\n\t\t\tsum += element;\n\
    \t\t}\n\t\ti++;\n\t}\n\treturn sum;", "\tlong sum = 0;\n\tlong lstSize = lst.size();\n\
    \tfor (long i = 0; i < lstSize; i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tsum += pow(lst[i],\
    \ 2);\n\t\t}\n\t\telse if (i % 4 == 0 && i % 3 != 0) {\n\t\t\tsum += pow(lst[i],\
    \ 3);\n\t\t}\n\t\telse {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", " \
    \   long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (i\
    \ % 3 == 0) {\n            sum += lst[i] * lst[i];\n        } else if (i % 4 ==\
    \ 0) {\n            sum += lst[i] * lst[i] * lst[i];\n        } else {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;", "\tlong sum = 0;\n\
    \tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 3 == 0) {\n\t\t\tlst[i]\
    \ = lst[i] * lst[i];\n\t\t}\n\t\tif (i % 4 == 0 && i % 3 != 0) {\n\t\t\tlst[i]\
    \ = lst[i] * lst[i] * lst[i];\n\t\t}\n\t\tsum += lst[i];\n\t}\n\treturn sum;",
  "    long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (i %\
    \ 3 == 0)\n            sum += lst[i] * lst[i];\n        else if (i % 4 == 0)\n\
    \            sum += lst[i] * lst[i] * lst[i];\n        else\n            sum +=\
    \ lst[i];\n    }\n    return sum;", "\tassert(lst.size() > 0);\n\tlong result\
    \ = 0;\n\tlong l = lst.size();\n\tfor (int i = 0; i < l; i++) {\n\t\tif (i % 3\
    \ == 0 && i % 4 != 0) {\n\t\t\tresult += pow(lst[i], 2);\n\t\t}\n\t\telse if (i\
    \ % 4 == 0 && i % 3 != 0) {\n\t\t\tresult += pow(lst[i], 3);\n\t\t}\n\t\telse\
    \ {\n\t\t\tresult += lst[i];\n\t\t}\n\t}\n\treturn result;"]
stop_tokens:
- "\n}"

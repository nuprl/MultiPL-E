name: HumanEval_64_vowels_count
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function vowels_count\
  \ which takes a string representing\n// a word as input and returns the number of\
  \ vowels in the string.\n// Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here,\
  \ 'y' is also a\n// vowel, but only when it is at the end of the given word.\n//\
  \ Example:\n// >>> vowels_count(\"abcde\")\n// 2\n// >>> vowels_count(\"ACEDY\"\
  )\n// 3\nlong vowels_count(std::string s) {\n"
tests: "}\nint main() {\n    auto candidate = vowels_count;\n    assert(candidate((\"\
  abcde\")) == (2));\n    assert(candidate((\"Alone\")) == (3));\n    assert(candidate((\"\
  key\")) == (2));\n    assert(candidate((\"bye\")) == (1));\n    assert(candidate((\"\
  keY\")) == (2));\n    assert(candidate((\"bYe\")) == (1));\n    assert(candidate((\"\
  ACEDY\")) == (3));\n}\n"
completions: ["\tassert(s.length() < 1000);\n\tlong count = 0;\n\tfor (auto p = s.begin();\
    \ p != s.end(); p++) {\n\t\tstd::string t = *p;\n\t\tif (t == \"a\" || t == \"\
    e\" || t == \"i\" || t == \"o\" || t == \"u\") {\n\t\t\tcount++;\n\t\t}\n\t\t\
    else if (t == \"y\") {\n\t\t\tif (p + 1 == s.end()) {\n\t\t\t\tcount++;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn count;", "    // Implement your code here\n    long count\
    \ = 0;\n    for(long i = 0; i < s.length(); i++){\n        if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\n            count++;\n\
    \        }\n        else if(s[i] == 'y' && i == s.length() - 1){\n           \
    \ count++;\n        }\n    }\n    return count;", "  long c = 0;\n  if(s[s.length()-1]\
    \ == 'y'){\n    c++;\n  }\n  for(int i = 0; i < s.length(); i++){\n    if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\n     \
    \ c++;\n    }\n  }\n  return c;", "    // Write your code here\n    int len =\
    \ s.length();\n    char last=s[len-1];\n    int y_count=0;\n    if (last=='y')\n\
    \    {\n        y_count=1;\n    }\n    int vowels=0;\n    for (int i = 0; i <\
    \ len; i++)\n    {\n        char ch=tolower(s[i]);\n        if (ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u')\n\
    \        {\n            vowels++;\n        }\n    }\n    return vowels+y_count;",
  "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n      \
    \      count++;\n        if (s[i] == 'y' && i < s.length() - 1)\n            count++;\n\
    \    }\n    return count;", "    long count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            count++;\n        }\n        if (s[i] == 'y'\
    \ && i != s.length() - 1) {\n            continue;\n        }\n        if (s[i]\
    \ == 'y' && i == s.length() - 1) {\n            count++;\n        }\n    }\n \
    \   return count;", "\t// Write your code here\n\t// To print results to the standard\
    \ output you can use 'cout'\n\t// Example: cout << \"Hello world!\";\n\tstring\
    \ a=\"aeiouy\";\n\tlong count=0;\n\tint i=0;\n\tfor(i=0;i<s.length();i++)\n\t\
    {\n\t\tif(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\t\
    \t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "    long len=s.length();\n\
    \    long result=0;\n    for(long i=0;i<len;i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \        {\n            result++;\n        }\n        else if(s[i]=='y'&&i==len-1)\n\
    \        {\n            result++;\n        }\n    }\n    return result;", "  long\
    \ count = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      count++;\n\
    \    }\n    if (s[i] == 'y' && i == s.length() - 1) {\n      count++;\n    }\n\
    \  }\n  return count;", "  int count = 0;\n  for (int i = 0; i < s.length(); i++)\
    \ {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n      count++;\n    }\n    if (s[i] == 'y' && i == s.length() - 1)\
    \ {\n      count++;\n    }\n  }\n  return count;", "    long i, ans=0;\n    for(i=0;\
    \ i<s.length(); i++) {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\
    \ {\n            ans++;\n        }\n        else if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\
    \ {\n            ans++;\n        }\n        else if(s[i]=='y' && i==s.length()-1)\
    \ {\n            ans++;\n        }\n        else if(s[i]=='Y' && i==s.length()-1)\
    \ {\n            ans++;\n        }\n    }\n    return ans;", "    long count =\
    \ 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n\
    \        }\n        if (s[i] == 'y' && i == s.length() - 1) {\n            count++;\n\
    \        }\n    }\n    return count;", "    // Write your code here\n    long\
    \ count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\n            count++;\n\
    \        }\n        else if(s[i] == 'y' && i == s.length() - 1) {\n          \
    \  count++;\n        }\n    }\n    return count;", "    long count = 0;\n    for\
    \ (long i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n    \
    \    }\n        if (s[i] == 'y' && i == s.length() - 1) {\n            count++;\n\
    \        }\n    }\n    return count;", "    long sum = 0;\n    int n = s.length();\n\
    \    if (n == 0) {\n        return 0;\n    }\n    if (s[n - 1] == 'a' || s[n -\
    \ 1] == 'e' || s[n - 1] == 'i' || s[n - 1] == 'o' || s[n - 1] == 'u' || s[n -\
    \ 1] == 'y') {\n        sum += 1;\n    }\n    sum += vowels_count(s.substr(0,\
    \ n - 1));\n    return sum;", "    long count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u')\n            count++;\n        if (s[i] == 'y' && i == s.length()\
    \ - 1)\n            count++;\n    }\n    return count;", "    int n = s.length();\n\
    \    long count = 0;\n    for (int i = 0; i < n; i++) {\n        if (s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n           \
    \ count++;\n        }\n        if (s[i] == 'y' && i != n - 1) {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n    \
    \    if (s[i] == 'y' && i == s.length() - 1) {\n            count++;\n       \
    \ }\n    }\n    return count;", "    long c = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        char ch = s[i];\n        if ((ch == 'a' || ch == 'e' || ch ==\
    \ 'i' || ch == 'o' || ch == 'u') || (ch == 'y' && i == s.length() - 1)) {\n  \
    \          c++;\n        }\n    }\n    return c;", "    long count = 0;\n    int\
    \ n = s.length();\n    for (int i = 0; i < n; i++) {\n        if (s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n           \
    \ count++;\n        }\n        if (s[i] == 'y' && i == n - 1) {\n            count++;\n\
    \        }\n    }\n    return count;", "    // Vowels we are interested in are\n\
    \    // a, e, i, o, u and y at the end of the string\n    long cnt = 0;\n    int\
    \ size = s.size();\n    for (int i = 0; i < size; i++) {\n        if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n       \
    \     cnt++;\n        }\n        if (s[i] == 'y' && i == size - 1) {\n       \
    \     cnt++;\n        }\n    }\n    return cnt;", "\tint count=0;\n    for(int\
    \ i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \        {\n            count++;\n        }\n    }\n\treturn count;", "    //\
    \ Assume that s is lowercase\n    long count = 0;\n    int i = 0;\n    while (i\
    \ < s.length()) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u') {\n            count++;\n        }\n        i++;\n  \
    \  }\n    if (s[s.length() - 1] == 'y') {\n        count++;\n    }\n    return\
    \ count;", "    assert(s.length() > 0);\n    long cnt = 0;\n    for (size_t i\
    \ = 0; i < s.length(); i++) {\n        char c = s[i];\n        if (i == s.length()\
    \ - 1) {\n            if (c == 'y' || c == 'Y') {\n                cnt++;\n  \
    \          }\n        } else {\n            if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U') {\n                cnt++;\n            }\n        }\n    }\n    return\
    \ cnt;", "  int n = s.length();\n  long count = 0;\n  for (int i = 0; i < n; i++)\
    \ {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n      count++;\n    }\n    if (s[i] == 'y' && (i == n - 1)) {\n \
    \     count++;\n    }\n  }\n  return count;", "    std::transform(s.begin(), s.end(),\
    \ s.begin(), ::tolower);\n    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            count++;\n        }\n    }\n    if (s[s.length()\
    \ - 1] == 'y') {\n        count++;\n    }\n    return count;", "    assert(!s.empty());\n\
    \    std::string v{\"aeiouy\"};\n    int count{0};\n    for (auto i : s) {\n \
    \       for (auto j : v) {\n            if (tolower(i) == j) {\n             \
    \   count++;\n            }\n        }\n    }\n    return count;", "    long count\
    \ = 0;\n    for (std::string::iterator it = s.begin(); it != s.end(); ++it) {\n\
    \        switch (std::tolower(*it)) {\n            case 'a':\n            case\
    \ 'e':\n            case 'i':\n            case 'o':\n            case 'u':\n\
    \                count++;\n                break;\n            case 'y':\n   \
    \             if (it == s.end() - 1) {\n                    count++;\n       \
    \         }\n                break;\n            default:\n                break;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    int i;\n    for(i=0;i<s.length();i++)\n\
    \    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n  \
    \      {\n            count++;\n        }\n        else if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \        {\n            count++;\n        }\n    }\n    if(s[i-1]=='y')\n    {\n\
    \        count++;\n    }\n    return count;", "\tstd::set<char> vowels;\n\tvowels.insert('a');\n\
    \tvowels.insert('e');\n\tvowels.insert('i');\n\tvowels.insert('o');\n\tvowels.insert('u');\n\
    \tlong count = 0;\n\tfor (char c : s) {\n\t\tif (vowels.find(tolower(c)) != vowels.end())\
    \ {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "    long cnt = 0;\n    for\
    \ (auto x : s) {\n        if (x == 'a' || x == 'e' || x == 'i' || x == 'o' ||\
    \ x == 'u' || x == 'y') {\n            cnt++;\n        }\n    }\n    if (s[s.size()\
    \ - 1] == 'y') cnt--;\n    return cnt;", "    long c=0;\n    for(int i=0;i<s.length();i++)\n\
    \    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \        {\n            c++;\n        }\n    }\n    return c;", "  int num_vowels=0;\n\
    \  std::string vowels=\"aeiou\";\n  for(int i=0;i<s.length();i++){\n    if(vowels.find(tolower(s[i]))!=std::string::npos){\n\
    \      num_vowels++;\n    }\n  }\n  if(tolower(s[s.length()-1])=='y'){\n    num_vowels++;\n\
    \  }\n  return num_vowels;", "    return std::count_if(s.begin(), s.end(), [](char\
    \ c) {\n        return std::tolower(c) == 'a' || std::tolower(c) == 'e' || std::tolower(c)\
    \ == 'i' || std::tolower(c) == 'o' || std::tolower(c) == 'u';\n    });", "   \
    \ long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        count++;\n        }\n        if (s[i] == 'y' && (i == s.length() - 1))\
    \ {\n            count++;\n        }\n    }\n    return count;", "  long count\
    \ = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      count++;\n   \
    \ }\n    if (s[i] == 'y' && i < s.length() - 1) {\n      count++;\n    }\n  }\n\
    \  return count;", "    std::locale loc;\n    int count = 0;\n    std::string\
    \ s_lower = s;\n    std::transform(s_lower.begin(), s_lower.end(), s_lower.begin(),\
    \ ::tolower);\n    for (int i = 0; i < s_lower.length(); i++) {\n        if (s_lower[i]\
    \ == 'a' || s_lower[i] == 'e' || s_lower[i] == 'i' || s_lower[i] == 'o' || s_lower[i]\
    \ == 'u') {\n            count++;\n        }\n    }\n    return count;", "  char\
    \ vowels[] = {'a', 'e', 'i', 'o', 'u', 'y'};\n  int len = s.length();\n  int count\
    \ = 0;\n  for (int i = 0; i < len; i++) {\n    for (int j = 0; j < 6; j++) {\n\
    \      if (s[i] == vowels[j]) {\n        count++;\n      }\n    }\n  }\n  if (s[len\
    \ - 1] == 'y') {\n    count--;\n  }\n  return count;", "  // your code goes here\n\
    \  long count = 0;\n  for(long i = 0; i < s.length(); i++) {\n      if(s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n        count++;\n\
    \      if(s[i] == 'y' && i != s.length() - 1)\n        count++;\n  }\n  return\
    \ count;", "  long count=0;\n  for(int i=0;i<s.length();i++)\n  {\n    if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \    {\n      count++;\n    }\n    else if(s[i]=='y'&&i==s.length()-1)\n    {\n\
    \      count++;\n    }\n  }\n  return count;", "  long count = 0;\n  for (unsigned\
    \ i = 0; i < s.length(); i++) {\n    char c = s[i];\n    if (c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u') {\n      count++;\n    }\n    if (c\
    \ == 'y' && i < s.length() - 1) {\n      continue;\n    }\n    if (c == 'y' &&\
    \ i == s.length() - 1) {\n      count++;\n    }\n  }\n  return count;", "  long\
    \ count=0;\n  for(int i=0;i<s.length();i++)\n  {\n    if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \    {\n      count++;\n    }\n    else if(s[i]=='y'&&i==s.length()-1)\n    {\n\
    \      count++;\n    }\n  }\n  return count;", "\tlong count = 0;\n\tfor (int\
    \ i = 0; i < s.length(); i++) {\n\t\tchar ch = s[i];\n\t\tif (ch == 'a' || ch\
    \ == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n\t\t\tcount++;\n\t\t}\n\t\t\
    if (ch == 'y' && i != s.length() - 1) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch ==\
    \ 'y' && i == s.length() - 1) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
  "  // Write your solution here\n  int cnt = 0;\n  for (char ch : s) {\n    if (ch\
    \ == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n      cnt++;\n\
    \    }\n  }\n  // s[s.size() - 1] == 'y'\n  if (s[s.size() - 1] == 'y') {\n  \
    \  cnt++;\n  }\n  return cnt;", "    // Write code here\n    long count = 0;\n\
    \    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n\
    \        }\n        else if(s[i] == 'y' && i == s.length() - 1) {\n          \
    \  count++;\n        }\n    }\n    return count;", "\tint count = 0;\n\tfor (int\
    \ i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n\t\t\tcount++;\n\t\t}\n\t\telse if (s[i]\
    \ == 'y' && i == s.length() - 1) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
  "  int c = 0;\n  int i = 0;\n  while (s[i] != '\\0') {\n    if (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      c++;\n    }\n\
    \    if (s[i] == 'y' && s[i + 1] == '\\0') {\n      c++;\n    }\n    i++;\n  }\n\
    \  return c;", "    int vowels = 0;\n    std::string v = \"aeiou\";\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (v.find(std::tolower(s[i])) != std::string::npos)\
    \ {\n            vowels++;\n        }\n    }\n    if (vowels != 0 && std::tolower(s[s.length()\
    \ - 1]) == 'y') {\n        vowels++;\n    }\n    return vowels;", "    // Write\
    \ your code here\n    long count = 0;\n    std::transform(s.begin(), s.end(),\
    \ s.begin(), ::tolower);\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        count += 1;\n        }\n        if(s[i] == 'y' && (i == (s.length() -\
    \ 1))) {\n            count += 1;\n        }\n    }\n    return count;", "   \
    \ long cnt=0;\n    int i;\n    for(i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \        {\n            cnt+=1;\n        }\n        else if(s[i]=='y'&&i==s.length()-1)\n\
    \        {\n            cnt+=1;\n        }\n    }\n    return cnt;", "   std::transform(s.begin(),\
    \ s.end(), s.begin(), ::tolower);\n   long count = 0;\n   if (s.back() == 'y')\n\
    \       count++;\n   for (long i = 0; i < s.length(); i++) {\n       if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n      \
    \     count++;\n   }\n   return count;", "    long counter = 0;\n    for (char\
    \ i : s) {\n        if (i == 'a' || i == 'e' || i == 'i' || i == 'o' || i == 'u'\
    \ || i == 'y') {\n            counter++;\n        }\n    }\n    return counter;",
  "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        count++;\n        }\n        if (s[i] == 'y' && i == s.length() - 1)\
    \ {\n            count++;\n        }\n    }\n    return count;", "    int count\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        char ch = tolower(s[i]);\n\
    \        if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n\
    \            count++;\n        }\n    }\n    return count;", "    std::transform(s.begin(),\
    \ s.end(), s.begin(), ::tolower);\n    long count = 0;\n    int size = s.size();\n\
    \    for (int i = 0; i < size; i++) {\n        if (s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n            count++;\n      \
    \  if (s[i] == 'y' && i != size - 1)\n            count++;\n    }\n    return\
    \ count;", "  return std::count_if(s.begin(), s.end(), [](char c) {\n    return\
    \ std::tolower(c) == 'a' || std::tolower(c) == 'e' ||\n           std::tolower(c)\
    \ == 'i' || std::tolower(c) == 'o' ||\n           std::tolower(c) == 'u' || std::tolower(c)\
    \ == 'y';\n  });", "    long numOfVowels = 0;\n    char vowels[] = {'a', 'e',\
    \ 'i', 'o', 'u', 'y'};\n    for (int i = 0; i < s.length(); i++) {\n        for\
    \ (int j = 0; j < 6; j++) {\n            if (s[i] == vowels[j]) {\n          \
    \      numOfVowels++;\n            }\n        }\n    }\n    if (s[s.length() -\
    \ 1] == 'y') {\n        numOfVowels++;\n    }\n    return numOfVowels;", "   \
    \ long count = 0;\n    char last_char = s[s.length() - 1];\n    for (char c :\
    \ s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n\
    \            count++;\n    }\n    if (last_char == 'y')\n        count++;\n  \
    \  return count;", "\tassert(s.length() > 0);\n\tlong num_vowels = 0;\n\tfor (int\
    \ i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n\t\t\tnum_vowels += 1;\n\t\t}\n\t\telse\
    \ if (s[i] == 'y' && i != s.length() - 1) {\n\t\t\tnum_vowels += 1;\n\t\t}\n\t\
    }\n\treturn num_vowels;", "  long count = 0;\n  for (int i = 0; i < s.length();\
    \ i++) {\n    char v = tolower(s[i]);\n    if (v == 'a' || v == 'e' || v == 'i'\
    \ || v == 'o' || v == 'u') {\n      count++;\n    }\n  }\n  return count;", " \
    \   // YOUR CODE HERE\n    std::transform(s.begin(), s.end(), s.begin(), ::tolower);\n\
    \    long count = 0;\n    int n = s.length();\n    for(int i = 0; i < n; i++)\
    \ {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            count++;\n        }\n        if(s[i] == 'y' && i == n-1)\
    \ {\n            count++;\n        }\n    }\n    return count;", "\tlong result\
    \ = 0;\n\tfor (long i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\t\t\tresult++;\n\t\t\
    }\n\t\telse if (s[i] == 'y' && i != s.length() - 1) {\n\t\t\tresult++;\n\t\t}\n\
    \t}\n\treturn result;", "    // Write your code here\n    long count = 0;\n  \
    \  for(char c : s) {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u' || c == 'y') {\n            count++;\n        }\n    }\n    return\
    \ count;", "\t// Write your code here\n\t// To print results to the standard output\
    \ you can use std::cout\n\t// Example: std::cout << \"Hello world!\";\n\tlong\
    \ count = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\t\t\tcount++;\n\
    \t\t}\n\t\telse if (s[i] == 'y' && i == s.length() - 1) {\n\t\t\tcount++;\n\t\t\
    }\n\t}\n\treturn count;", "    // Write your code here\n    long count = 0;\n\
    \    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n\
    \        }\n        if(s[i] == 'y' && i == s.length() - 1) {\n            count++;\n\
    \        }\n    }\n    return count;", "    int l = s.length();\n    long ans\
    \ = 0;\n    for(int i = 0; i < l; i++) {\n        if(s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            ans++;\n      \
    \  }\n        if(s[i] == 'y' && i != l - 1) {\n            ans++;\n        }\n\
    \    }\n    return ans;", "    long v_count = 0;\n    for (long i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            v_count++;\n        }\n        if (s[i] == 'y'\
    \ && i != s.length() - 1) {\n            v_count++;\n        }\n    }\n    return\
    \ v_count;", "    long count=0;\n    for(int i=0;i<s.length();i++)\n    {\n  \
    \      if(tolower(s[i])=='a'||tolower(s[i])=='e'||tolower(s[i])=='i'||tolower(s[i])=='o'||tolower(s[i])=='u')\n\
    \        {\n            count++;\n        }\n    }\n    if(s[s.length()-1]=='y')\n\
    \    {\n        count++;\n    }\n    return count;", "    int c = 0;\n    for(int\
    \ i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u' || (s[i] == 'y' && i == s.length() - 1))\
    \ {\n            c++;\n        }\n    }\n    return c;", "    // YOUR CODE HERE\n\
    \    long count = 0;\n    std::string v = \"aeiouy\";\n    // if (s[s.length()-1]\
    \ == 'y') {\n    //   count++;\n    // }\n    for (int i = 0; i < s.length();\
    \ i++) {\n      for (int j = 0; j < v.length(); j++) {\n        if (s[i] == v[j])\
    \ {\n          count++;\n        }\n      }\n    }\n    return count;", "\tlong\
    \ count=0;\n\tfor(int i=0;i<s.length();i++)\n\t{\n\t\tif(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(s[s.length()-1]=='y')\n\t{\n\t\tcount++;\n\
    \t}\n\treturn count;", "  long c = 0;\n  for (std::string::iterator it = s.begin();\
    \ it != s.end(); ++it) {\n    char ch = std::tolower(*it);\n    switch (ch) {\n\
    \      case 'a':\n      case 'e':\n      case 'i':\n      case 'o':\n      case\
    \ 'u':\n        c++;\n        break;\n      case 'y':\n        if (it == s.end()\
    \ - 1) {\n          c++;\n        }\n        break;\n      default:\n        break;\n\
    \    }\n  }\n  return c;", "  // Write your code here\n  int len = s.length();\n\
    \  if(len == 0)\n    return 0;\n  std::string vowel = \"AEIOUaeiou\";\n  int count\
    \ = 0;\n  for(int i = 0; i < len; i++)\n  {\n    if(s[i] == 'y' && i != len -\
    \ 1)\n      continue;\n    for(int j = 0; j < 10; j++)\n    {\n      if(s[i] ==\
    \ vowel[j])\n      {\n        count++;\n        break;\n      }\n    }\n  }\n\
    \  return count;", "    long count = 0;\n    if(s.length() > 0){\n        char\
    \ last = *(s.end()-1);\n        if(last == 'A' || last == 'E' || last == 'I' ||\
    \ last == 'O' || last == 'U' || last == 'Y'){\n            count++;\n        }\n\
    \    }\n    for(int i = 0; i < s.length(); i++){\n        char c = s[i];\n   \
    \     if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'){\n        \
    \    count++;\n        }\n    }\n    return count;", "    int n = s.length();\n\
    \    int count = 0;\n    for(int i = 0; i < n; i++) {\n        if(s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n           \
    \ count++;\n        }\n        if(s[i] == 'y' && i != n - 1) {\n            continue;\n\
    \        }\n        if(s[i] == 'y' && i == n - 1) {\n            count++;\n  \
    \      }\n    }\n    return count;", "    int i = 0;\n    int count = 0;\n   \
    \ while(i < s.length()) {\n        switch(s[i]) {\n            case 'a':\n   \
    \         case 'e':\n            case 'i':\n            case 'o':\n          \
    \  case 'u':\n            case 'y':\n                count++;\n              \
    \  break;\n            default:\n                break;\n        }\n        i++;\n\
    \    }\n    return count;", "    // TODO: add your code here\n    long count=0;\n\
    \    for(int i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \        {\n            count++;\n        }\n    }\n    if(s[s.length()-1]=='y')\n\
    \    {\n        return count;\n    }\n    else\n    {\n        return count-1;\n\
    \    }", "    long vcount = 0;\n    for (auto i: s) {\n        if (tolower(i)\
    \ == 'a' || tolower(i) == 'e' || tolower(i) == 'i' || tolower(i) == 'o' || tolower(i)\
    \ == 'u')\n            vcount++;\n    }\n    if (s[s.length() - 1] == 'y')\n \
    \       vcount++;\n    return vcount;", "    long count = 0;\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        if (tolower(s[i]) == 'a' || tolower(s[i])\
    \ == 'e' || tolower(s[i]) == 'i' || tolower(s[i]) == 'o' || tolower(s[i]) == 'u')\
    \ {\n            count++;\n        }\n    }\n    if (tolower(s[s.length() - 1])\
    \ == 'y') {\n        count++;\n    }\n    return count;", "    // s.toLowerCase();\n\
    \    // int count = 0;\n    // for(int i = 0; i < s.length(); i++) {\n    // \
    \    switch(s[i]) {\n    //         case 'a':\n    //         case 'e':\n    //\
    \         case 'i':\n    //         case 'o':\n    //         case 'u':\n    //\
    \         case 'y':\n    //             count++;\n    //             break;\n\
    \    //     }\n    // }\n    // return count;\n    std::transform(s.begin(), s.end(),\
    \ s.begin(), ::tolower);\n    int count = 0;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        switch(s[i]) {\n            case 'a':\n            case 'e':\n\
    \            case 'i':\n            case 'o':\n            case 'u':\n       \
    \         count++;\n                break;\n            case 'y':\n          \
    \      if(i == s.length() - 1)\n                    count++;\n               \
    \ break;\n        }\n    }\n    return count;", "    long c = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n            c++;\n        }\n     \
    \   if (s[i] == 'y' && (i == (s.length() - 1))) {\n            c++;\n        }\n\
    \    }\n    return c;", "    std::transform(s.begin(), s.end(), s.begin(), ::tolower);\n\
    \    std::size_t found = s.find_last_of(\"aeiouy\");\n    if (found == s.length()\
    \ - 1 && found == s.find_first_of(\"aeiouy\")) {\n        return 1;\n    }\n \
    \   else if (found == s.length() - 1) {\n        return s.length() - s.find_first_of(\"\
    aeiouy\");\n    }\n    else {\n        return s.length() - s.find_first_of(\"\
    aeiouy\") - (s.length() - found - 1);\n    }", "    long sum = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        char c = s[i];\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            sum++;\n   \
    \     }\n        if (c == 'y' && i == s.length() - 1) {\n            sum++;\n\
    \        }\n    }\n    return sum;", "    // Write your solution here\n    long\
    \ count = 0;\n    for(long i = 0; i < s.length(); i++){\n        if(s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\n            count++;\n\
    \        }\n        else if(s[i] == 'y' && i == s.length() - 1){\n           \
    \ count++;\n        }\n    }\n    return count;", "    long c=0;\n    int n=s.length();\n\
    \    for(int i=0;i<n;i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \        {\n            c+=1;\n        }\n        else if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \        {\n            c+=1;\n        }\n        else if(s[i]=='y'||s[i]=='Y')\n\
    \        {\n            if(i==n-1)\n            {\n                c+=1;\n   \
    \         }\n        }\n    }\n    return c;", "\tstd::string vowels = \"aeiouy\"\
    ;\n\tint count = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (vowels.find(s[i])\
    \ != std::string::npos)\n\t\t\tcount++;\n\t}\n\treturn count;", "    // TODO:\
    \ complete this function\n    \tint count=0;\n\t\tfor(int i=0;i<s.length();i++)\n\
    \t\t{\n\t\t\tif(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(s[s.length()-1]=='y')\n\t\t\
    {\n\t\t\tcount--;\n\t\t}\n\t\treturn count;", "  if (s.size() == 0) {\n    return\
    \ 0;\n  }\n  std::string vowels = \"aeiouy\";\n  long count = 0;\n  for (char\
    \ i : s) {\n    for (char j : vowels) {\n      if (i == j) {\n        count++;\n\
    \      }\n    }\n  }\n  if (s[s.size() - 1] == 'y') {\n    return count;\n  }\n\
    \  return count - 1;", "    long count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        char c = s[i];\n        if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u')\n            count++;\n        if (c == 'y' && i !=\
    \ s.length() - 1)\n            count++;\n    }\n    return count;", "    long\
    \ cnt = 0;\n    for (int i = 0; i < s.size(); i++) {\n        char ch = s[i];\n\
    \        if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n\
    \            cnt++;\n        }\n        if (ch == 'y' && i == s.size() - 1) {\n\
    \            cnt++;\n        }\n    }\n    return cnt;", "    long count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n\
    \        }\n        if (s[i] == 'y' && i == s.length() - 1) {\n            count++;\n\
    \        }\n    }\n    return count;", "    // write your code here\n    std::transform(s.begin(),\
    \ s.end(), s.begin(), ::tolower);\n    std::string count;\n    std::string temp(\"\
    aeiouy\");\n    for(int i=0;i<s.length();i++){\n        for(int j=0;j<temp.length();j++){\n\
    \            if(s[i]==temp[j])\n                count += temp[j];\n        }\n\
    \    }\n    if(count.length() > 0 && count[count.length()-1]=='y')\n        return\
    \ count.length();\n    else if(count.length() > 0 && count[count.length()-1]!='y')\n\
    \        return count.length()-1;\n    else\n        return 0;", "\tint count\
    \ = 0;\n\tfor (auto i = s.begin(); i != s.end(); i++) {\n\t\tswitch (*i) {\n\t\
    \t\tcase 'a': case 'e': case 'i': case 'o': case 'u': case 'y':\n\t\t\t\tcount++;\n\
    \t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tif (count > 0) {\n\
    \t\tif (s.back() == 'y') {\n\t\t\tcount -= 1;\n\t\t}\n\t}\n\treturn count;", "\t\
    int length = s.length();\n\tint count = 0;\n\tfor (int i = 0; i < length; i++)\
    \ {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n\t\t\tcount++;\n\t\t}\n\t\telse if (s[i] == 'y' && i == length -\
    \ 1) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "    std::locale loc;\n\
    \    int count = 0;\n    for (char c : s) {\n        switch (std::tolower(c, loc))\
    \ {\n            case 'a':\n            case 'e':\n            case 'i':\n   \
    \         case 'o':\n            case 'u':\n                count++;\n       \
    \         break;\n            case 'y':\n                if (c == s.back()) {\n\
    \                    count++;\n                }\n                break;\n   \
    \         default:\n                break;\n        }\n    }\n    return count;",
  "    long count=0;\n    // Write your code here\n    int j;\n    for(int i=0; i<s.length();\
    \ i++)\n    {\n        j=tolower(s[i]);\n        if(j=='a' || j=='e' || j=='i'\
    \ || j=='o' || j=='u')\n        {\n            count++;\n        }\n    }\n  \
    \  return count;", '  return 0;', "    int count = 0;\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u') {\n            count += 1;\n        }\n        else\
    \ if (s[i] == 'y' && i == s.length() - 1) {\n            count += 1;\n       \
    \ }\n    }\n    return count;", "\t", "    // your code goes here.\n    // char\
    \ vowels[] = {'a', 'e', 'i', 'o', 'u'};\n    long count = 0;\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        char ch = s[i];\n        if (ch == 'a' ||\
    \ ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n            count++;\n\
    \        }\n        else if (ch == 'y' && i == s.length() - 1) {\n           \
    \ count++;\n        }\n    }\n    return count;", "\t// Place your code here",
  "    long count=0;\n    for(long i=0; i<s.length(); i++)\n    {\n        if(s[i]=='a'\
    \ || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u')\n        {\n          \
    \  count++;\n        }\n        else if(s[i]=='y' && i==s.length()-1)\n      \
    \  {\n            count++;\n        }\n    }\n    return count;", "\tint count\
    \ = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\t\t\tcount++;\n\t\t\
    }\n\t\telse if (s[i] == 'y' && i == s.length() - 1) {\n\t\t\tcount++;\n\t\t}\n\
    \t}\n\treturn count;", "  long i, count = 0;\n  for (i = 0; i < s.length(); i++)\
    \ {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n      count++;\n    }\n  }\n  if (s[s.length() - 1] == 'y') {\n \
    \   count++;\n  }\n  return count;", "    long count = 0;\n    for (int i = 0;\
    \ i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n        if\
    \ (s[i] == 'y' && i == s.length() - 1) {\n            count++;\n        }\n  \
    \  }\n    return count;", "    char vowels[] = {'a', 'e', 'i', 'o', 'u', 'y'};\n\
    \    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        for\
    \ (int j = 0; j < 6; j++) {\n            if (s[i] == vowels[j]) {\n          \
    \      count++;\n            }\n        }\n    }\n    if (s[s.length() - 1] ==\
    \ 'y') {\n        count++;\n    }\n    return count;", "    std::string vowels\
    \ = \"aeiou\";\n    char lastChar = s[s.length() - 1];\n    if(lastChar == 'y')\
    \ {\n        vowels += 'y';\n    }\n    long count = 0;\n    for(char c : s) {\n\
    \        if(vowels.find(c) != std::string::npos) {\n            count++;\n   \
    \     }\n    }\n    return count;", "  long count=0;\n  for(int i=0;i<s.length();i++)\n\
    \  {\n      if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n      \
    \  count++;\n  }\n  if(s[s.length()-1]=='y')\n    count++;\n  return count;",
  "  \t// Write your code here.\n\tlong count = 0;\n\tfor(int i = 0; i < s.length();\
    \ i++) {\n\t\ts[i] = tolower(s[i]);\n\t\tswitch(s[i]) {\n\t\t\tcase 'a':\n\t\t\
    \tcase 'e':\n\t\t\tcase 'i':\n\t\t\tcase 'o':\n\t\t\tcase 'u':\n\t\t\t\tcount++;\n\
    \t\t\t\tbreak;\n\t\t\tcase 'y':\n\t\t\t\tif(i == s.length() - 1) {\n\t\t\t\t\t\
    count++;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn count;", "  long count\
    \ = 0;\n  if(s[s.length()-1] == 'y'){\n    count += 1;\n  }\n  for(int i = 0;\
    \ i < s.length(); i++){\n    if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u'){\n      count += 1;\n    }\n  }\n  return count;", " \
    \ /* NOTE: We want to iterate through each character in the string 's'.\n    \
    \       Unfortunately the type of 's' is const std::string, meaning that\n   \
    \        we cannot simply assign a value to each character in 's'. We\n      \
    \     could, however, iterate through each character by using the\n          \
    \ following method:\n           for (auto c : s)\n  */\n  long count = 0;\n  //\
    \ TODO: Implement this function.\n  for (auto c : s) {\n    // Use tolower() to\
    \ convert each character to lowercase.\n    // The function tolower() takes a\
    \ character c as input and\n    // returns c if c is not an uppercase letter.\
    \ It returns the\n    // corresponding lowercase letter if c is an uppercase letter.\n\
    \    c = tolower(c);\n    if ((c == 'a') || (c == 'e') || (c == 'i') || (c ==\
    \ 'o') || (c == 'u')) {\n      count++;\n    }\n  }\n  return count;", "    //\
    \ write your code here\n    int v=0;\n    for(int i=0;i<s.length();i++)\n    {\n\
    \        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \        {\n            v++;\n        }\n    }\n    return v;", "    std::transform(s.begin(),\
    \ s.end(), s.begin(), ::tolower);\n    long result = 0;\n    if (s.length() >=\
    \ 1) {\n        if (s[s.length() - 1] == 'y') {\n            result += 1;\n  \
    \      }\n    }\n    for (auto& c : s) {\n        if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            result += 1;\n        }\n \
    \   }\n    return result;", "    long vcount = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vcount++;\n        }\n        else if (s[i] ==\
    \ 'y' && i == s.length() - 1) {\n            vcount++;\n        }\n    }\n   \
    \ return vcount;", "\tint n = s.length();\n\tlong cnt = 0;\n\tstd::string vowels\
    \ = \"aeiou\";\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i] == 'y' && i == n\
    \ - 1) {\n\t\t\tcnt++;\n\t\t}\n\t\tfor (int j = 0; j < 5; j++) {\n\t\t\tif (s[i]\
    \ == vowels[j]) {\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t}\n\treturn cnt;", "  std::vector<char>\
    \ v;\n  long c=0;\n  for(int i=0;i<s.length();i++)\n  {\n    if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \    {\n      v.push_back(s[i]);\n      c++;\n    }\n  }\n  if(s[s.length()-1]=='y')\n\
    \  {\n    v.push_back(s[s.length()-1]);\n    c++;\n  }\n  return c;", "  // YOUR\
    \ CODE GOES HERE.\n  int n = s.length();\n  int count = 0;\n  for(int i = 0; i\
    \ < n; i++) {\n    if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n      count++;\n    }\n    else if(s[i] == 'y' && i == n-1)\
    \ {\n      count++;\n    }\n  }\n  return count;", "    long len = s.length();\n\
    \    long counter = 0;\n    for (long i = 0; i < len; i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        counter++;\n        }\n        if (s[i] == 'y' && i != len - 1) {\n \
    \           continue;\n        }\n        if (s[i] == 'y' && i == len - 1) {\n\
    \            counter++;\n        }\n    }\n    return counter;", "  // Write your\
    \ code here\n  // It's main function. Don't erase this function.\n    int a=0;\n\
    \    int i;\n    for(i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \        {\n            a++;\n        }\n    }\n    return a;", "    long count=0;\n\
    \    for(long i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \        {\n            count+=1;\n        }\n        else if(s[i]=='y' && i==s.length()-1)\n\
    \        {\n            count+=1;\n        }\n    }\n    return count;", "  long\
    \ total = 0;\n  for (int i = 0; i < s.length(); i++) {\n    // if s[i] is a vowel\n\
    \    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n      total++;\n    }\n    // if y appears as the last letter and it isn't\
    \ a capital\n    if (s[i] == 'y' && i == s.length() - 1 && s[i] != 'Y') {\n  \
    \    total++;\n    }\n  }\n  return total;", "  long count = 0;\n  std::cout <<\
    \ \"Entering vowels_count\" << std::endl;\n  int length = s.length();\n  for (int\
    \ i = 0; i < length; i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u') {\n      count++;\n    }\n    if (s[i] == 'y'\
    \ && i != length - 1) {\n      if (s[i + 1] != 'a' || s[i + 1] != 'e' || s[i +\
    \ 1] != 'i' || s[i + 1] != 'o' || s[i + 1] != 'u') {\n        count++;\n     \
    \ }\n    }\n  }\n  std::cout << \"Exiting vowels_count\" << std::endl;\n  return\
    \ count;", "  long ans = 0;\n  int n = s.length();\n  for (int i = 0; i < n; i++)\
    \ {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u')\n      ans++;\n    if (s[i] == 'y' && i < n - 1)\n      continue;\n\
    \    if (s[i] == 'y' && i == n - 1)\n      ans++;\n  }\n  return ans;", "    long\
    \ v=0;\n    for(int i=0; i<s.length(); i++) {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \            v++;\n    }\n    if(s[s.length()-1]=='y')\n        v++;\n    return\
    \ v;", "    long count=0;\n    for(int i=0; i<s.length(); i++)\n    {\n      \
    \  if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u' || s[i]=='y')\n\
    \        {\n            count++;\n        }\n    }\n    if(s[s.length()-1]=='y')\n\
    \    {\n        count++;\n    }\n    return count;", "    long sum = 0;\n    std::transform(s.begin(),\
    \ s.end(), s.begin(), ::tolower);\n    for (auto &c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            sum++;\n   \
    \     }\n    }\n    // std::cout << s.length() << std::endl;\n    if (s[s.length()\
    \ - 1] == 'y') {\n        sum++;\n    }\n    return sum;", "    long count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count += 1;\n\
    \        }\n        if (s[i] == 'y' && i == s.length() - 1) {\n            count\
    \ += 1;\n        }\n    }\n    return count;", "    // Your code goes here\n \
    \   long len=s.length();\n    long count=0;\n    for(long i=0;i<len;i++)\n   \
    \ {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n     \
    \   {\n            count++;\n        }\n        else if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \        {\n            count++;\n        }\n        else if(s[i]=='y'||s[i]=='Y')\n\
    \        {\n            if(i==len-1)\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;", "\tlong count = 0;\n\tstd::vector<char>\
    \ vowels = {'a', 'e', 'i', 'o', 'u', 'y'};\n\tfor (int i = 0; i < s.length();\
    \ i++) {\n\t\tfor (int j = 0; j < vowels.size(); j++) {\n\t\t\tif (s[i] == vowels[j])\
    \ {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\tif (s[s.length() - 1] == 'y') {\n\
    \t\tcount++;\n\t}\n\treturn count;", "\tlong vowels = 0;\n\tfor (char c : s) {\n\
    \t\tif (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\t\t\tvowels++;\n\
    \t\t}\n\t}\n\tif (s[s.length() - 1] == 'y') {\n\t\tvowels++;\n\t}\n\treturn vowels;",
  "    long c = 0;\n    for (long i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        c++;\n        }\n        if (s[i] == 'y' && i < s.length() - 1) {\n \
    \           c++;\n        }\n    }\n    return c;", "    long count=0;\n    for(int\
    \ i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \        {\n            count++;\n        }\n        else if(s[i]=='y'&&i==s.length()-1)\n\
    \        {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count=0;\n    int len=s.length();\n    for(int i=0;i<len;i++)\n    {\n     \
    \   char ch=s[i];\n        if(ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u')\n \
    \       {\n            count++;\n        }\n        else if(ch=='y'&&i==len-1)\n\
    \        {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ total=0;\n    long n=s.length();\n    for(long i=0;i<n;i++)\n    {\n       \
    \ if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n        {\n     \
    \       total++;\n        }\n        else if(s[i]=='y'&&(i==n-1))\n        {\n\
    \            total++;\n        }\n    }\n    return total;", "    long count =\
    \ 0;\n    for (int i = 0; i < s.length(); i++) {\n        if ((s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') || (s[i] == 'y' &&\
    \ i == s.length() - 1)) {\n            count++;\n        }\n    }\n    return\
    \ count;", "  long vowels = 0;\n  std::transform(s.begin(), s.end(), s.begin(),\
    \ ::tolower);\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      vowels++;\n\
    \    }\n    if (s[i] == 'y' && (i == s.length() - 1)) {\n      vowels++;\n   \
    \ }\n  }\n  return vowels;", "    // Write your code here\n    long count = 0;\n\
    \    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n\
    \        }\n        if(s[i] == 'y' && i == s.length() - 1) {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u')\n            count++;\n        if (s[i] ==\
    \ 'y' && i == s.length() - 1)\n            count++;\n    }\n    return count;",
  "    // replace the following line with your code\n\tlong count = 0;\n\tfor(int\
    \ i = 0; i < s.length(); i++)\n\t{\n\t\tif(s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\
    \ if(s[i] == 'y' && i == s.length() - 1)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\t\
    return count;", "    long count=0;\n    for(int i=0;i<s.length();i++)\n    {\n\
    \        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n        {\n\
    \            count++;\n        }\n        else if(s[i]=='y'&& i==s.length()-1)\n\
    \        {\n            count++;\n        }\n    }\n    return count;", "\tlong\
    \ count = 0;\n\tlong len = s.length();\n\tstd::transform(s.begin(), s.end(), s.begin(),\
    \ ::tolower);\n\tfor (long i = 0; i < len; i++) {\n\t\tif (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\t\t\tcount++;\n\t\t\
    }\n\t\telse if (s[i] == 'y' && i == len - 1) {\n\t\t\tcount++;\n\t\t}\n\t}\n\t\
    return count;", "    std::transform(s.begin(), s.end(), s.begin(), ::tolower);\n\
    \    long result = 0;\n    for (long i = 0; i < s.length(); i++) {\n        if\
    \ (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\
    \            result++;\n        }\n    }\n    return result;", "    long count\
    \ = 0;\n    std::string::iterator it;\n    for (it = s.begin(); it != s.end();\
    \ it++) {\n        if (*it == 'a' || *it == 'e' || *it == 'i' || *it == 'o' ||\
    \ *it == 'u') {\n            count++;\n        }\n    }\n    if (s[s.length()\
    \ - 1] == 'y') {\n        count++;\n    }\n    return count;", "\t// Your code\
    \ here.\n\t// Please note that you must submit the solution that counts\n\t//\
    \ all the vowels in the string and not just the ones that\n\t// are in upper case.\
    \ For example, vowels_count(\"ACEDY\")\n\t// must return 3.\n\tlong count=0;\n\
    \tfor(int i=0;i<s.length();i++)\n\t{\n\t\tif(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "    long vowels=0;\n   \
    \ for(int i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \        {\n            vowels++;\n        }\n        else if(s[i]=='y'&&i==s.length()-1)\n\
    \        {\n            vowels++;\n        }\n    }\n    return vowels;", "  \
    \  \n    long count = 0;\n    if(s.back() == 'y'){\n        count++;\n    }\n\
    \    for(int i = 0; i < s.length(); i++){\n        if(s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\n            count++;\n     \
    \   }\n    }\n    return count;", "\tlong count=0;\n\tfor(long i=0;i<s.length();i++)\n\
    \t{\n\t\tif(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "  int count = 0;\n  char\
    \ vowels[] = {'a', 'e', 'i', 'o', 'u', 'y'};\n  // To determine if a word ends\
    \ with 'y'\n  char last_element = s[s.length() - 1];\n  // std::cout << \"Last\
    \ Element: \" << last_element << std::endl;\n  for (int i = 0; i < s.length();\
    \ i++) {\n    // Checking if each element of the string is equal to the\n    //\
    \ elements in the array of vowels.\n    // To check if each element is a vowel\
    \ we have to convert it\n    // to lowercase\n    for (int j = 0; j < sizeof(vowels)\
    \ / sizeof(vowels[0]); j++) {\n      if (tolower(s[i]) == vowels[j]) {\n     \
    \   count++;\n      }\n    }\n  }\n  if (last_element == 'y') {\n    count++;\n\
    \  }\n  return count;", "\tlong vowels = 0;\n\tfor (int i = 0; i < s.length();\
    \ i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u') {\n\t\t\tvowels++;\n\t\t}\n\t\telse if (s[i] == 'y' && i == s.length()\
    \ - 1) {\n\t\t\tvowels++;\n\t\t}\n\t}\n\treturn vowels;", "    int len = s.length();\n\
    \    int count = 0;\n    if(len == 0)\n        return 0;\n    for(int i = 0; i\
    \ < len; i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u')\n            count++;\n        if(s[i] == 'y' && i ==\
    \ len - 1)\n            count++;\n    }\n    return count;", "  if (s.length()\
    \ == 0) return 0;\n  long count = 0;\n  for (long i = 0; i < s.length(); i++)\
    \ {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n      count++;\n    }\n  }\n  if (s[s.length() - 1] == 'y') {\n \
    \   count++;\n  }\n  return count;", "    long l = 0;\n    for(long i = 0; i <\
    \ s.length(); i++) {\n        switch(s[i]) {\n            case 'a':\n        \
    \    case 'e':\n            case 'i':\n            case 'o':\n            case\
    \ 'u':\n            case 'y':\n                l++;\n        }\n    }\n    if(s[s.length()\
    \ - 1] == 'y') {\n        l--;\n    }\n    return l;", "    long c=0;\n    for(int\
    \ i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \        {\n            c++;\n        }\n    }\n    return c;", "  int vowel =\
    \ 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      vowel++;\n    }\n\
    \    if (s[i] == 'y' && i == s.length() - 1) {\n      vowel++;\n    }\n  }\n \
    \ return vowel;", "  int count = 0;\n  for (int i = 0; i < s.length(); i++) {\n\
    \    if (tolower(s[i]) == 'a' || tolower(s[i]) == 'e' || tolower(s[i]) == 'i'\
    \ || tolower(s[i]) == 'o' || tolower(s[i]) == 'u') {\n      count++;\n    }\n\
    \  }\n  return count;", "  long count = 0;\n  for (int i = 0; i < s.length();\
    \ i++) {\n    char ch = s[i];\n    if (ch == 'a' || ch == 'e' || ch == 'i' ||\
    \ ch == 'o' || ch == 'u') {\n      count++;\n    }\n    if (ch == 'y' && i ==\
    \ s.length() - 1) {\n      count++;\n    }\n  }\n  return count;", "    long count\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n\
    \        }\n        if (s[i] == 'y' && i == s.length() - 1) {\n            count++;\n\
    \        }\n    }\n    return count;", "  std::transform(s.begin(), s.end(), s.begin(),\
    \ ::tolower);\n  long count=0;\n  int n=s.length();\n  for(int i=0;i<n;i++)\n\
    \  {\n    if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n    {\n \
    \     count+=1;\n    }\n    else if(s[i]=='y'&&i!=n-1)\n    {\n      continue;\n\
    \    }\n    else if(s[i]=='y'&&i==n-1)\n    {\n      count+=1;\n    }\n  }\n \
    \ return count;", "  // This function receives a string input which is basically\
    \ a word and\n  // returns the number of vowels that the word contains.\n  //\
    \ It iterates through the characters of the word and checks for\n  // vowels.\
    \ If a vowel is found, it increases the vowel counter by 1.\n  // The for loop\
    \ iterates till the length of the word and character by\n  // character, it checks\
    \ for vowel and increases the counter.\n  // The function returns the count of\
    \ vowels in the word given as an\n  // input.\n  long count=0;\n  for(long i=0;i<s.length();i++)\n\
    \  {\n    if((s[i]=='a')||(s[i]=='e')||(s[i]=='i')||(s[i]=='o')||(s[i]=='u')||(s[i]=='y'))\n\
    \    {\n      count++;\n    }\n  }\n  return count;", "    long count = 0;\n \
    \   // Write your code here\n    int n = s.length();\n    for(int i=0;i<n;i++){\n\
    \        if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u')\n \
    \           count++;\n        if(s[i]=='y' && i<n-1)\n            count++;\n \
    \   }\n    return count;", "  std::string vowels = \"aeiouy\";\n  std::string\
    \ last_vowel = \"y\";\n  long count = 0;\n  for (char c : s) {\n    if (vowels.find(c)\
    \ != std::string::npos) {\n      count++;\n    }\n  }\n  if (last_vowel.find(s[s.length()\
    \ - 1]) != std::string::npos) {\n    count++;\n  }\n  return count;", "    long\
    \ c = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n            c++;\n\
    \    }\n    if (s[s.length() - 1] == 'y')\n        c++;\n    return c;", "\tlong\
    \ count = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tswitch (s[i]) {\n\t\
    \t\tcase 'a':\n\t\t\tcase 'e':\n\t\t\tcase 'i':\n\t\t\tcase 'o':\n\t\t\tcase 'u':\n\
    \t\t\t\tcount++;\n\t\t\t\tbreak;\n\t\t\tcase 'y':\n\t\t\t\tif (i == s.length()\
    \ - 1)\n\t\t\t\t\tcount++;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn count;", "  \
    \  long cnt = 0;\n    for (char c : s) {\n        if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            cnt++;\n        }\n    }\n\
    \    if (s[s.size() - 1] == 'y') {\n        cnt++;\n    }\n    return cnt;", "\t\
    long vowels = 0;\n\t// long len = s.length();\n\tfor (size_t i = 0; i < s.length();\
    \ i++) {\n\t\tif ((s[i] == 'a') or (s[i] == 'e') or (s[i] == 'i') or (s[i] ==\
    \ 'o') or (s[i] == 'u')) {\n\t\t\tvowels += 1;\n\t\t}\n\t\tif ((i == s.length()\
    \ - 1) and (s[i] == 'y')) {\n\t\t\tvowels += 1;\n\t\t}\n\t}\n\treturn vowels;",
  "  long c = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      c++;\n  \
    \  }\n    if (s[i] == 'y' && i == s.length() - 1) {\n      c++;\n    }\n  }\n\
    \  return c;", "    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            count += 1;\n        }\n        else if (s[i] == 'y'\
    \ && i == s.length() - 1) {\n            count += 1;\n        }\n    }\n    return\
    \ count;", "  long result=0;\n  for(int i=0;i<s.length();i++)\n  {\n    if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \    {\n      result++;\n    }\n    else if(s[i]=='y'&&i==s.length()-1)\n    {\n\
    \      result++;\n    }\n  }\n  return result;", "    long size = s.size();\n\
    \    long count = 0;\n    for (long i = 0; i < size; i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        count++;\n        }\n        if (s[i] == 'y' && i == size - 1) {\n  \
    \          count++;\n        }\n    }\n    return count;", "    long cnt = 0;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n            cnt++;\n    \
    \    if (s[i] == 'y' && i != s.size() - 1)\n            cnt++;\n    }\n    return\
    \ cnt;", "    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n   \
    \     switch (s[i]) {\n            case 'a':\n            case 'e':\n        \
    \    case 'i':\n            case 'o':\n            case 'u':\n            case\
    \ 'y':\n                count++;\n                break;\n            default:\n\
    \                break;\n        }\n    }\n    if (s[s.length() - 1] == 'y') {\n\
    \        count++;\n    }\n    return count;", "    // YOUR CODE GOES HERE\n  \
    \  return 0;", "    long count=0;\n    std::string s1=s;\n    // std::transform(s1.begin(),\
    \ s1.end(), s1.begin(), ::tolower);\n    long len=s1.length();\n    for(long i=0;i<len;i++)\n\
    \    {\n        if(s1[i]=='a'||s1[i]=='e'||s1[i]=='i'||s1[i]=='o'||s1[i]=='u')\n\
    \        {\n            count++;\n        }\n        else if(s1[i]=='y'&&i==len-1)\n\
    \        {\n            count++;\n        }\n    }\n    return count;", "  int\
    \ count=0;\n  for(int i=0;i<s.length();i++)\n  {\n    if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \    {\n      count++;\n    }\n  }\n  return count;", "    int vowels = 0;\n \
    \   for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels += 1;\n\
    \        }\n        else if (s[i] == 'y' && i == s.length() - 1) {\n         \
    \   vowels += 1;\n        }\n    }\n    return vowels;", "\tint len = s.length();\n\
    \tint count = 0;\n\tstd::string vowels = \"AEIOUaeiou\";\n\tfor (int i = 0; i\
    \ < len; i++) {\n\t\tif (vowels.find(s[i]) != std::string::npos) {\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\tif (s[len - 1] == 'y') {\n\t\tcount++;\n\t}\n\treturn count;", " \
    \   // ToDo: write code here\n    long count = 0;\n    int i = 0;\n    while(s[i]\
    \ != '\\0') {\n        if((s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] ==\
    \ 'o' || s[i] == 'u') || (s[i] == 'y' && s[i + 1] == '\\0')) {\n            count++;\n\
    \        }\n        i++;\n    }\n    return count;", "    // Write your code here.\n\
    \    long int i,l,v=0;\n    std::string x;\n    std::transform(s.begin(), s.end(),\
    \ s.begin(), ::tolower);\n    l=s.length();\n    for(i=0;i<l;i++)\n    {\n   \
    \     if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n        {\n \
    \           v++;\n        }\n        else if(s[i]=='y')\n        {\n         \
    \   if(i==l-1)\n            {\n                v++;\n            }\n        }\n\
    \    }\n    return v;", "    std::string vowel = \"aeiouy\";\n    long vowelCount\
    \ = 0;\n    long lastChar = s.length() - 1;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        for (int j = 0; j < vowel.length(); j++) {\n            if (s[i]\
    \ == vowel[j]) {\n                vowelCount++;\n            }\n        }\n  \
    \      if (s[i] == 'y' && i != lastChar) {\n            vowelCount--;\n      \
    \  }\n    }\n    return vowelCount;", "  // Write your code here\n  // To print\
    \ results to the standard output you can use std::cout\n  // Example: std::cout\
    \ << \"Hello world!\";\n  int vowels = 0;\n  for(int i = 0; i < s.length(); i++)\
    \ {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n      vowels++;\n    }\n    if (s[i] == 'y' && i < s.length() - 1)\
    \ {\n      if (s[i+1] == 'a' || s[i+1] == 'e' || s[i+1] == 'i' || s[i+1] == 'o'\
    \ || s[i+1] == 'u') {\n        vowels++;\n      }\n    }\n  }\n  if (s[s.length()\
    \ - 1] == 'y') {\n    vowels++;\n  }\n  return vowels;", "  int count = 0;\n \
    \ for (int i = 0; i < s.length(); i++) {\n    s[i] = tolower(s[i]);\n    if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n      count++;\n\
    \  }\n  if (s[s.length() - 1] == 'y')\n    count++;\n  return count;", "  long\
    \ num_vowels = 0;\n  int len = s.length();\n  for (int i = 0; i < len; i++) {\n\
    \    char curr = s[i];\n    if (curr == 'a' || curr == 'e' || curr == 'i' || curr\
    \ == 'o' || curr == 'u') {\n      num_vowels++;\n    }\n    else if (curr == 'y'\
    \ && i == len - 1) {\n      num_vowels++;\n    }\n  }\n  return num_vowels;",
  "    long vowels=0;\n    std::string::iterator it=s.begin();\n    while(it!=s.end()){\n\
    \        switch (*it) {\n            case 'a':\n            case 'e':\n      \
    \      case 'i':\n            case 'o':\n            case 'u':\n            case\
    \ 'y':\n                vowels++;\n                break;\n            default:\n\
    \                break;\n        }\n        it++;\n    }\n    return vowels;",
  "  long n = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n      n++;\n    if\
    \ (s[i] == 'y' && i == s.length() - 1)\n      n++;\n  }\n  return n;", '    //
    Write your code here', "    long count = 0;\n    // Write your code here\n   \
    \ int n = s.length();\n    if(s[n-1] == 'y'){\n        count++;\n    }\n    for(int\
    \ i = 0; i < n; i++){\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u'){\n            count++;\n        }\n    }\n    return\
    \ count;", "  int count = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if\
    \ (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\
    \      count++;\n    }\n    if (s[i] == 'y' && i < s.length() - 1) {\n      continue;\n\
    \    }\n    if (s[i] == 'y' && i == s.length() - 1) {\n      count++;\n    }\n\
    \  }\n  return count;", "    std::transform(s.begin(), s.end(), s.begin(), ::tolower);\n\
    \    char *y = strchr(&s[0], 'y');\n    if (y != NULL) {\n        *y = '\\0';\n\
    \    }\n    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n    \
    \    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n            count++;\n        }\n    }\n    return count;", "  int vowels\
    \ = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      vowels++;\n  \
    \  }\n    if (s[i] == 'y' && i == s.length() - 1) {\n      vowels++;\n    }\n\
    \  }\n  return vowels;", "  long cnt = 0;\n  // your code here\n  for(char c :\
    \ s) {\n    if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c ==\
    \ 'y') {\n      cnt++;\n    }\n  }\n  return cnt;", "    std::transform(s.begin(),\
    \ s.end(), s.begin(), ::tolower);\n    long count = 0;\n    if (s.find(\"a\")\
    \ != std::string::npos) {\n        count++;\n    }\n    if (s.find(\"e\") != std::string::npos)\
    \ {\n        count++;\n    }\n    if (s.find(\"i\") != std::string::npos) {\n\
    \        count++;\n    }\n    if (s.find(\"o\") != std::string::npos) {\n    \
    \    count++;\n    }\n    if (s.find(\"u\") != std::string::npos) {\n        count++;\n\
    \    }\n    if (s.find(\"y\") != std::string::npos) {\n        if (s.length()\
    \ > 1) {\n            if (s.substr(s.length() - 2) == \"y\") {\n             \
    \   count++;\n            }\n        }\n    }\n    return count;", "  int len\
    \ = s.length();\n  long count = 0;\n  for (int i = 0; i < len; i++) {\n    char\
    \ ch = s[i];\n    if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch ==\
    \ 'u') {\n      count++;\n    }\n    if (ch == 'y' && i == len - 1) {\n      count++;\n\
    \    }\n  }\n  return count;", "    long count=0;\n    if(s.length()==0) return\
    \ 0;\n    if(s[s.length()-1]=='y') count++;\n    for(int i=0;i<s.length();i++){\n\
    \        if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u')\n \
    \           count++;\n    }\n    return count;", "    int vcount = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if ((s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') || ((s[i] == 'y') && (i == s.length()\
    \ - 1))) {\n            vcount++;\n        }\n    }\n    return vcount;", "  \
    \  // your code here\n    long n = s.length();\n    long count = 0;\n    for(long\
    \ i = 0; i < n; i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n        else\
    \ if((s[i] == 'y' && (i == (n - 1)))) {\n            count++;\n        }\n   \
    \ }\n    return count;", "\t/* your code goes here */\n\t// int a,e,i,o,u=0;\n\
    \t// for(int j=0;j<s.length();j++){\n\t// \tif(s[j]=='a'||s[j]=='e'||s[j]=='i'||s[j]=='o'||s[j]=='u'){\n\
    \t// \t\ta++;\n\t// \t}\n\t// \telse if(s[j]=='A'||s[j]=='E'||s[j]=='I'||s[j]=='O'||s[j]=='U'){\n\
    \t// \t\te++;\n\t// \t}\n\t// }\n\t// return a+e;\n\tlong count=0;\n\tfor(int\
    \ i=0;i<s.length();i++){\n\t\tif(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\
    \t\t\tcount++;\n\t\t}\n\t\telse if(s[i]=='y'||s[i]=='Y'){\n\t\t\tif(i==s.length()-1){\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n", "    long n = s.length();\n\
    \    long count = 0;\n    for (long i = 0; i < n; i++) {\n        if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n         \
    \   count++;\n        if (s[i] == 'y' && i != n - 1)\n            count++;\n \
    \   }\n    return count;", "    long n = s.length();\n    long i = 0;\n    long\
    \ vowels = 0;\n    while (i < n) {\n        if (s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n      \
    \  }\n        i++;\n    }\n    // Write your solution here\n    return vowels;",
  "    long c = 0;\n    int len = s.length();\n    for(int i = 0; i < len; i++) {\n\
    \        if((s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') || ((s[i] == 'y') && (i == len - 1))) {\n            c++;\n        }\n\
    \    }\n    return c;", "    int length = s.length();\n    long count = 0;\n \
    \   for (int i = 0; i < length; i++) {\n        char ch = s[i];\n        if (ch\
    \ == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n            count++;\n\
    \        }\n        if (ch == 'y' && i == length - 1) {\n            count++;\n\
    \        }\n    }\n    return count;"]
stop_tokens:
- "\n}"

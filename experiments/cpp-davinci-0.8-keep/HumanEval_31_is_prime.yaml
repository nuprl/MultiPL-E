name: HumanEval_31_is_prime
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given number\
  \ is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n\
  // True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n\
  // True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nbool is_prime(long\
  \ n) {\n"
tests: "}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
  \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
  \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
  \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
  \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
  \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
  \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
  \ == (false));\n}\n"
completions: ["  bool prime=true;\n  long i;\n  if(n==1)\n    return false;\n  for(i=2;i<=n/2;i++)\n\
    \  {\n    if(n%i==0)\n    {\n      prime=false;\n      break;\n    }\n  }\n  return\
    \ prime;", "  if (n < 2) {\n    return false;\n  }\n  else if (n == 2) {\n   \
    \ return true;\n  }\n  else if (n % 2 == 0) {\n    return false;\n  }\n  else\
    \ {\n    for (long i = 3; i <= sqrt(n); i += 2) {\n      if (n % i == 0) {\n \
    \       return false;\n      }\n    }\n    return true;\n  }", "    // add your\
    \ code here\n    if(n==1)\n    {\n        return false;\n    }\n    long i = 2;\n\
    \    while(i<=sqrt(n))\n    {\n        if(n%i==0)\n        {\n            return\
    \ false;\n        }\n        i++;\n    }\n    return true;", "    bool prime =\
    \ true;\n    for (int i = 2; i <= n/2; i++) {\n        if (n % i == 0) {\n   \
    \         prime = false;\n            break;\n        }\n    }\n    return prime;",
  "    long i;\n    if (n <= 1) return false;\n    for (i = 2; i <= sqrt(n); i++)\
    \ {\n        if (n % i == 0) return false;\n    }\n    return true;", "  // >>>\
    \ Write your code here <<<\n  long i;\n  for(i=2;i<=sqrt(n);i++)\n  {\n      if(n%i==0)\n\
    \      {\n          return false;\n      }\n  }\n  return true;", "  if (n ==\
    \ 1) {\n    return false;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n %\
    \ i == 0) {\n      return false;\n    }\n  }\n  return true;", '  // TODO:', " \
    \ if (n == 1) {\n    return false;\n  }\n  long i = 2;\n  while (i < n) {\n  \
    \  if (n % i == 0) {\n      return false;\n    }\n    i += 1;\n  }\n  return true;",
  "  assert(n >= 0);\n  if (n==1 || n==0)\n  {\n    return false;\n  }\n  for (int\
    \ i = 2; i < n; i++)\n  {\n    if (n%i==0)\n    {\n      return false;\n    }\n\
    \  }\n  return true;", "    int c = 0;\n    for (int i = 1; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            c++;\n        }\n    }\n    if (c == 2)\
    \ {\n        return true;\n    }\n    else {\n        return false;\n    }", " \
    \ if (n <= 1) {\n    return false;\n  }\n  for (long i = 2; i < n; i++) {\n  \
    \  if (n % i == 0) {\n      return false;\n    }\n  }\n  return true;", "    assert(n>=1);\n\
    \n    if(n==1)\n        return false;\n    else if(n==2)\n        return true;\n\
    \    else\n    {\n        for(int i=2;i<=sqrt(n);i++)\n        {\n           \
    \ if(n%i==0)\n                return false;\n        }\n        return true;\n\
    \    }\n", "    if (n == 1) {\n        return false;\n    }\n    if (n <= 3) {\n\
    \        return true;\n    }\n    if (n % 2 == 0 || n % 3 == 0) {\n        return\
    \ false;\n    }\n    for (int i = 5; i <= sqrt(n); i += 6) {\n        if (n %\
    \ i == 0 || n % (i + 2) == 0) {\n            return false;\n        }\n    }\n\
    \    return true;", "    // Your code here!\n    if(n<=1) return false;\n    if(n==2)\
    \ return true;\n    if(n%2==0) return false;\n    for(int i=3;i<sqrt(n);i+=2){\n\
    \        if(n%i==0) return false;\n    }\n    return true;", "  if (n<=1) {\n\
    \    return false;\n  }\n  for (long i=2; i<n; i++) {\n    if (n%i==0) {\n   \
    \   return false;\n    }\n  }\n  return true;", "    // Note: we only need to\
    \ check up to the sqrt of n\n    if (n == 2 || n == 3) {\n        return true;\n\
    \    }\n    for (int i = 2; i <= std::sqrt(n); i++) {\n        if (n % i == 0)\
    \ {\n            return false;\n        }\n    }\n    return true;", "\tif (n\
    \ == 1) {\n\t\treturn false;\n\t}\n\tif (n == 2) {\n\t\treturn true;\n\t}\n\t\
    if (n % 2 == 0) {\n\t\treturn false;\n\t}\n\tfor (long i = 3; i < sqrt(n); i +=\
    \ 2) {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;",
  "\t// TODO: Implement me!\n\t// Use this function to build up the below array of\
    \ primes.\n\treturn false;", "    // Fill this in.\n    assert(n > 0);\n    if\
    \ (n == 1)\n        return false;\n    if (n == 2 || n == 3)\n        return true;\n\
    \    if ((n % 2 == 0) || (n % 3 == 0))\n        return false;\n    int i = 5;\n\
    \    while ((i * i) <= n) {\n        if ((n % i == 0) || (n % (i + 2) == 0))\n\
    \            return false;\n        i += 6;\n    }\n    return true;", "    if\
    \ (n <= 1) return false;\n    for (long i = 2; i * i <= n; i++) {\n        if\
    \ (n % i == 0) return false;\n    }\n    return true;", "    if (n == 1) {\n \
    \       return false;\n    }\n    if (n == 2) {\n        return true;\n    }\n\
    \    if (n == 3) {\n        return true;\n    }\n    for (int i = 2; i <= sqrt(n);\
    \ i++) {\n        if (n % i == 0) {\n            return false;\n        }\n  \
    \  }\n    return true;", "    if (n<=1) return false;\n    if (n<=3) return true;\n\
    \    if (n%2==0 or n%3==0) return false;\n    long count = 5;\n    while (count*count<=n)\
    \ {\n        if (n%count==0 or n%(count+2)==0) {\n            return false;\n\
    \        }\n        count += 6;\n    }\n    return true;", "\tif (n <= 1) return\
    \ false;\n\tfor (long i = 2; i < n; i++) {\n\t\tif (n % i == 0) return false;\n\
    \t}\n\treturn true;", "    // TODO: your code here!\n    // You need to implement\
    \ this function so that it returns\n    // whether or not a given number is prime.\n\
    \    // If the number is prime, return true. Otherwise, return false.\n    if(n==1\
    \ || n==0)\n    {\n        return false;\n    }\n    for(int i=2;i<=n/2;i++)\n\
    \    {\n        if(n%i==0)\n        {\n            return false;\n        }\n\
    \    }\n    return true;", "    if (n <= 1) return false;\n\n    // look for factors\
    \ of 2 first\n    if (n % 2 == 0) return false;\n\n    // now look for odd factors\n\
    \    for (int i = 3; i * i <= n; i += 2) {\n        if (n % i == 0) return false;\n\
    \    }\n    return true;", "    int a=0;\n    for(int i=1;i<=n;i++){\n       \
    \ if(n%i==0){\n            a++;\n        }\n    }\n    if(a==2){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }\n", "\t\n\t// (1) assert\
    \ n >= 1.\n\t// (2) Treat the edge case n = 2.\n\t// (3) If n is even, return\
    \ false\n\t// (4) For every i in range 3, n, check if n is divisible by i.\n\t\
    //     If it is, return false.\n\t// (5) If you haven't returned false yet, return\
    \ true.\n\tassert(n >= 1);\n\tif (n == 2) {\n\t\treturn true;\n\t}\n\tif (n %\
    \ 2 == 0) {\n\t\treturn false;\n\t}\n\tfor (int i = 3; i <= std::sqrt(n); i +=\
    \ 2) {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;",
  "    if (n<2) return false;\n    else if (n==2) return true;\n    else if (n%2==0)\
    \ return false;\n    for (long i=3; i<=sqrt(n); i+=2) {\n        if (n%i==0) {\n\
    \            return false;\n        }\n    }\n    return true;", "\t\n\tif (n\
    \ <= 1) return false;\n\tif (n <= 3) return true;\n\tif (n % 2 == 0 || n % 3 ==\
    \ 0) return false;\n\t\n\tfor (int i = 5; i * i <= n; i += 6)\n\t\tif (n % i ==\
    \ 0 || n % (i + 2) == 0)\n\t\t\treturn false;\n\treturn true;", "    // Your code\
    \ here\n    if(n==1){\n      return false;\n    }\n    if(n<=3){\n      return\
    \ true;\n    }\n    if(n%2==0||n%3==0){\n      return false;\n    }\n    for(int\
    \ i=5;i*i<=n;i=i+6){\n      if(n%i==0||n%(i+2)==0){\n        return false;\n \
    \     }\n    }\n    return true;", "\tif (n == 2) {\n\t\treturn true;\n\t}\n\t\
    if (n % 2 == 0 || n < 2) {\n\t\treturn false;\n\t}\n\tfor (int i = 3; i <= sqrt(n);\
    \ i += 2) {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;", "\tif (n <= 1) {\n\t\treturn false;\n\t}\n\telse if (n <= 3) {\n\t\t\
    return true;\n\t}\n\telse if (n % 2 == 0 || n % 3 == 0) {\n\t\treturn false;\n\
    \t}\n\tint i = 5;\n\twhile (i * i <= n) {\n\t\tif (n % i == 0 || n % (i + 2) ==\
    \ 0) {\n\t\t\treturn false;\n\t\t}\n\t\ti = i + 6;\n\t}\n\treturn true;", "  \
    \  long i;\n    for (i = 2; i < n; i++) {\n        if ((n % i) == 0)\n       \
    \     return false;\n    }\n    return true;", "    if (n<=1) return false;\n\
    \    for (long i=2; i<=n/2; ++i) {\n        if (n%i==0) return false;\n    }\n\
    \    return true;", "  if (n < 2) {\n    return false;\n  }\n  for (long i = 2;\
    \ i < n; i++) {\n    if (n % i == 0) {\n      return false;\n    }\n  }\n  return\
    \ true;", "  if (n<=1) {\n    return false;\n  }\n  for (long i=2; i<n; i++) {\n\
    \    if (n%i==0) {\n      return false;\n    }\n  }\n  return true;", "    if\
    \ (n == 2 || n == 3)\n        return true;\n    if (n % 2 == 0 || n % 3 == 0)\n\
    \        return false;\n    for (int i = 5; i * i <= n; i += 6) {\n        if\
    \ (n % i == 0 || n % (i + 2) == 0)\n            return false;\n    }\n    return\
    \ true;", "  bool prime = true;\n  for (long i = 2; i < n; i++) {\n    if (n %\
    \ i == 0) {\n      prime = false;\n      break;\n    }\n  }\n  return prime;",
  "    assert(n >= 1);\n    // your code here\n    if (n==1)\n        return false;\n\
    \    if (n==2)\n        return true;\n    for (int i=2;i<=sqrt(n);i++)\n    {\n\
    \        if (n%i==0)\n            return false;\n    }\n    return true;", " \
    \   if (n == 1) {\n        return false;\n    }\n    else if (n <= 3) {\n    \
    \    return true;\n    }\n    else if (n % 2 == 0) {\n        return false;\n\
    \    }\n    else {\n        for (int i = 3; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                return false;\n            }\n        }\n       \
    \ return true;\n    }", "    if (n <= 1) return false;\n    if (n <= 3) return\
    \ true;\n    if (n % 2 == 0 || n % 3 == 0) return false;\n    for (int i = 5;\
    \ i * i <= n; i = i + 6) {\n        if (n % i == 0 || n % (i + 2) == 0) return\
    \ false;\n    }\n    return true;", "    if (n <= 1) return false;\n    for (long\
    \ i = 2; i * i <= n; i++) {\n        if (n % i == 0) return false;\n    }\n  \
    \  return true;", "\tif (n < 2) {\n\t\treturn false;\n\t}\n\tif (n == 2) {\n\t\
    \treturn true;\n\t}\n\tif (n % 2 == 0) {\n\t\treturn false;\n\t}\n\t// We only\
    \ need to check up to the square root of n.\n\tlong max_check = std::sqrt(n);\n\
    \tfor (long i = 3; i <= max_check; i += 2) {\n\t\tif (n % i == 0) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;", "  if (n<=1) return false;\n  for (long\
    \ i=2; i<=n/2; i++) {\n    if (n%i==0) return false;\n  }\n  return true;", " \
    \ if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n\
    \ % 3 == 0) return false;\n  for (int i = 5; i*i <= n; i += 6) {\n    if (n %\
    \ i == 0 || n % (i+2) == 0) {\n      return false;\n    }\n  }\n  return true;",
  "\t// write your code here\n\tif (n == 1) {\n\t\treturn false;\n\t}\n\tfor (int\
    \ i = 2; i < n; i++) {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t\
    }\n\treturn true;", "    if (n < 2) return false;\n    for (long i = 2; i < n;\
    \ i++) {\n        if (n % i == 0) return false;\n    }\n    return true;", " \
    \ long x=2;\n  while(x<n){\n    if(n%x==0){\n      return false;\n    }\n    x=x+1;\n\
    \  }\n  return true;", "  if (n == 1) {\n    return false;\n  }\n  if (n == 2)\
    \ {\n    return true;\n  }\n  if (n % 2 == 0) {\n    return false;\n  }\n  if\
    \ (n == 3) {\n    return true;\n  }\n  if (n % 3 == 0) {\n    return false;\n\
    \  }\n  if (n == 5) {\n    return true;\n  }\n  if (n % 5 == 0) {\n    return\
    \ false;\n  }\n  if (n == 7) {\n    return true;\n  }\n  if (n % 7 == 0) {\n \
    \   return false;\n  }\n  int i = 11;\n  for (i = 11; i * i <= n; i += 2) {\n\
    \    if (n % i == 0) {\n      return false;\n    }\n  }\n  return true;", "  \
    \  if (n <= 1) {\n        return false;\n    }\n    for (long i = 2; i < n; i++)\
    \ {\n        if (n % i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;", "    // Insert code here\n    if(n==1)\n        return false;\n\
    \    for(int i=2;i<=sqrt(n);i++)\n    {\n        if(n%i==0)\n            return\
    \ false;\n    }\n    return true;", "\t//checks if n is prime\n\t//if n is prime\
    \ then returns true\n\t//returns false if n is not prime\n\tif (n == 2) {\n\t\t\
    return true;\n\t}\n\tif (n == 1) {\n\t\treturn false;\n\t}\n\tif (n % 2 == 0)\
    \ {\n\t\treturn false;\n\t}\n\telse {\n\t\tfor (int i = 3; i < n; i += 2) {\n\t\
    \t\tif (n % i == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\
    \t}", "\tif (n <= 1) {\n\t\treturn false;\n\t}\n\tfor (long i = 2; i < n; i++)\
    \ {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;",
  "  // Start with checking if n is even.\n  if (n % 2 == 0) {\n    return false;\n\
    \  }\n  // Check for odd numbers in range 3 to sqrt(n).\n  for (long i = 3; i\
    \ * i <= n; i += 2) {\n    if (n % i == 0) {\n      return false;\n    }\n  }\n\
    \  return true;", "  if (n == 1) {\n    return false;\n  }\n  if (n == 2) {\n\
    \    return true;\n  }\n  if (n % 2 == 0) {\n    return false;\n  }\n  for (long\
    \ divisor = 3; divisor <= n / 2; divisor += 2) {\n    if (n % divisor == 0) {\n\
    \      return false;\n    }\n  }\n  return true;", "    assert(n > 0);\n    if\
    \ (n == 1) {\n        return false;\n    }\n    if (n == 2) {\n        return\
    \ true;\n    }\n    // Increment from 2 until you reach the square root of n.\n\
    \    for (long i = 2; i <= sqrt(n); i++) {\n        // If n is evenly divisible\
    \ by i, it is not prime, so return false.\n        if (n % i == 0) {\n       \
    \     return false;\n        }\n    }\n    // If none of the above conditions\
    \ were met, the number is prime, so return true.\n    return true;", "  // your\
    \ code here\n  if(n==1)\n  return false;\n  if(n==2)\n  return true;\n  for(int\
    \ i=2;i<=sqrt(n);i++)\n  {\n  \tif(n%i==0)\n  \treturn false;\n  }\n  return true;",
  "    for (long i = 2; i <= sqrt(n); i++) {\n        if (n % i == 0) {\n        \
    \    return false;\n        }\n    }\n    return true;", "// TODO: implement\n\
    if(n>1){\nfor(int i=2;i<n;i++){\nif(n%i==0){\nreturn false;", "  if (n == 1 ||\
    \ n == 0) {\n    return false;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return false;\n    }\n  }\n  return true;", "    if (n\
    \ <= 1) return false;\n    for (long i = 2; i < n; i++) {\n        if (n % i ==\
    \ 0) return false;\n    }\n    return true;", "\t// >>> Write your code here <<<\n\
    \    if(n == 1) return false;\n    for(int i = 2; i <= n/2; i++){\n        if(n\
    \ % i == 0) return false;\n    }\n    return true;", "    int flag=0;\n    for(int\
    \ i=2;i<=n/2;i++)\n    {\n        if(n%i==0)\n        {\n            flag=1;\n\
    \            break;\n        }\n    }\n    if(flag==0)\n    {\n        return\
    \ true;\n    }\n    else\n    {\n        return false;\n    }", "    if (n <=\
    \ 1) return false;\n    for (long i = 2; i < n; i++) {\n        if (n % i == 0)\
    \ return false;\n    }\n    return true;", "  // Your code here\n  if(n<=1) return\
    \ false;\n  for(int i=2;i<=sqrt(n);i++){\n    if(n%i==0) return false;\n  }\n\
    \  return true;", "  if (n==2) return true;\n  if (n<2) return false;\n  if (n%2==0)\
    \ return false;\n  long i=3;\n  while (i*i<=n) {\n    if (n%i==0) return false;\n\
    \    i=i+2;\n  }\n  return true;", "    if (n<=1) return false;\n    for (long\
    \ i=2; i<=n/2; i++) {\n        if (n%i==0) return false;\n    }\n    return true;",
  "    if (n < 2) {\n        return false;\n    }\n    for (long i = 2; i < n; i++)\
    \ {\n        if (n % i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;", "\tif (n < 2) {\n\t\treturn false;\n\t}\n\tfor (long i = 2;\
    \ i <= sqrt(n); i++) {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t\
    }\n\treturn true;", "    if (n == 1) {\n        return false;\n    }\n    for\
    \ (long i = 2; i <= n / 2; i++) {\n        if (n % i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;", "  if (n == 1) {\n    return false;\n\
    \  } else if (n < 4) {\n    return true;\n  } else if (n % 2 == 0) {\n    return\
    \ false;\n  } else if (n < 9) {\n    return true;\n  } else if (n % 3 == 0) {\n\
    \    return false;\n  } else {\n    int r = floor(sqrt(n));\n    int f = 5;\n\
    \    while (f <= r) {\n      if (n % f == 0) {\n        return false;\n      }\
    \ else if (n % (f + 2) == 0) {\n        return false;\n      }\n      f += 6;\n\
    \    }\n    return true;\n  }", "  // TODO: Fill this in.\n  if(n==1){\n    return\
    \ false;\n  }\n  for(int i=2;i<=sqrt(n);i++){\n    if(n%i==0){\n      return false;\n\
    \    }\n  }\n  return true;", "\tif (n == 2) {\n\t\treturn true;\n\t}\n\tif (n\
    \ == 1 || n % 2 == 0) {\n\t\treturn false;\n\t}\n\tfor (long i = 3; i * i <= n;\
    \ i += 2) {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;", "    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n \
    \   for (long i = 3; i * i <= n; i += 2) {\n        if (n % i == 0) {\n      \
    \      return false;\n        }\n    }\n    return true;", "\tbool pr = true;\n\
    \tif (n == 1)\n\t\treturn false;\n\tif (n == 2)\n\t\treturn true;\n\tif (n ==\
    \ 3)\n\t\treturn true;\n\tif (n % 2 == 0)\n\t\treturn false;\n\tif (n % 3 == 0)\n\
    \t\treturn false;\n\tfor (int i = 3; i < sqrt(n) + 1; i += 2) {\n\t\tif (n % i\
    \ == 0) {\n\t\t\tpr = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn pr;", "\t// corner\
    \ case 1: n is less than 2, it is not prime\n\tif (n < 2) {\n\t\treturn false;\n\
    \t}\n\t\n\t// corner case 2: n equals 2, it is prime\n\tif (n == 2) {\n\t\treturn\
    \ true;\n\t}\n\t\n\t// corner case 3: n is even but not 2, it is not prime\n\t\
    if (n % 2 == 0) {\n\t\treturn false;\n\t}\n\t\n\t// corner case 4: n is odd, check\
    \ if it is prime\n\tlong m = 3;\n\twhile (m * m <= n) {\n\t\tif (n % m == 0) {\n\
    \t\t\treturn false;\n\t\t}\n\t\t\n\t\tm += 2;\n\t}\n\t\n\treturn true;", "   \
    \ // TODO\n    if(n<2)\n        return false;\n    int flag=0;\n    for(int i=2;i<=sqrt(n);i++)\n\
    \    {\n        if(n%i==0)\n        {\n            flag=1;\n            break;\n\
    \        }\n    }\n    if(flag==0)\n        return true;\n    else\n        return\
    \ false;", "  assert(n >= 0);\n  if (n == 0 || n == 1) {\n    return false;\n\
    \  }\n  if (n == 2) {\n    return true;\n  }\n  if (n%2 == 0) {\n    return false;\n\
    \  }\n  for (long i = 3; i < n; i += 2) {\n    if (n%i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;", "    int divisor = 2;\n    if (n == 1) {\n     \
    \   return false;\n    }\n    for (int i = 2; i < n / 2; i++) {\n        if (n\
    \ % i == 0) {\n            return false;\n        }\n    }\n    return true;",
  "    // if ((n%2 == 0) || (n%3 == 0) || (n%5 == 0) || (n%7 == 0))\n    //     return\
    \ false;\n    if (n<=1)\n        return false;\n    else if (n<=3)\n        return\
    \ true;\n    else if ((n%2 == 0) || (n%3 == 0))\n        return false;\n    int\
    \ i = 5;\n    while (i*i <= n) {\n        if ((n%i == 0) || (n%(i+2) == 0))\n\
    \            return false;\n        i = i+6;\n    }\n    return true;", "    //\
    \ Your code here\n    if(n<=1)\n      return false;\n    if(n <= 3)\n      return\
    \ true;\n    else if(n%2 == 0 or n%3 == 0)\n      return false;\n    else{\n \
    \     for(int i=5;i*i<=n;i=i+6){\n        if(n%i == 0 or n%(i+2) == 0)\n     \
    \     return false;\n      }\n      return true;\n    }", "  if (n == 1) {\n \
    \   return false;\n  }\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ {\n      return false;\n    }\n  }\n  return true;", "    if (n < 2) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  for (long i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0) return false;\n\
    \    }\n    return true;", "    if (n < 2) {\n        return false;\n    }\n \
    \   if (n == 2) {\n        return true;\n    }\n    if (n % 2 == 0) {\n      \
    \  return false;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if\
    \ (n % i == 0) {\n            return false;\n        }\n    }\n    return true;",
  "    //if(n<=1) return false;\n    if(n<=3) return true;\n    if(n%2==0 || n%3==0)\
    \ return false;\n    for(int i=5;i*i<=n;i=i+6)\n    {\n        if(n%i==0 || n%(i+2)==0)\n\
    \        return false;\n    }\n    return true;", "   // TODO: implement\n   if(n<2)\n\
    \      return false;\n   else if(n==2)\n      return true;\n   else if(n%2==0)\n\
    \      return false;\n   for(int i=3;i<=std::sqrt(n);i+=2)\n   {\n      if(n%i==0)\n\
    \         return false;\n   }\n   return true;", "  if (n <= 1) return false;\n\
    \  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n \
    \ for (long i = 5; i * i <= n; i = i + 6) {\n    if (n % i == 0 || n % (i + 2)\
    \ == 0) return false;\n  }\n  return true;", "\tif (n == 1) {\n\t\treturn false;\n\
    \t}\n\tfor (long i = 2; i <= n / 2; i++) {\n\t\tif (n % i == 0) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;", "\tfor (int i = 2; i < n; i++) {\n\t\t\
    if (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;", "    if (n\
    \ < 2) {\n        return false;\n    }\n    if (n == 2) {\n        return true;\n\
    \    }\n    long m = 2;\n    while (m < n) {\n        if (n % m == 0) {\n    \
    \        return false;\n        }\n        m++;\n    }\n    return true;", "\t\
    long i = 2;\n\tlong square = sqrt(n);\n\twhile (i <= square) {\n\t\tif (n % i\
    \ == 0) {\n\t\t\treturn false;\n\t\t}\n\t\ti += 1;\n\t}\n\treturn true;", "  if\
    \ (n < 2) {\n    return false;\n  }\n  if (n == 2) {\n    return true;\n  }\n\
    \  for (long i = 2; i < n; i++) {\n    if (n % i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;", "    assert(n>=0);\n    //@judge-include\n    //@judge-exclude\n\
    \    if (n < 2) {\n        return false;\n    }\n    for (long i = 2; i * i <=\
    \ n; i++) {\n        if (n % i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n    //@judge-include\n    //@judge-exclude", "\tif (n\
    \ == 1) {\n\t\treturn false;\n\t}\n\telse if (n == 2) {\n\t\treturn true;\n\t\
    }\n\telse if (n % 2 == 0) {\n\t\treturn false;\n\t}\n\tfor (int i = 3; i <= sqrt(n);\
    \ i += 2) {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;", "  if (n == 2) {\n    return true;\n  }\n  if (n <= 1 || n % 2 == 0)\
    \ {\n    return false;\n  }\n  for (long i = 3; i <= sqrt(n); i += 2) {\n    if\
    \ (n % i == 0) {\n      return false;\n    }\n  }\n  return true;", "    if (n\
    \ <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= n/2; i++) {\n\
    \        if (n % i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    long i;\n    if (n <= 1)\n    {\n        return false;\n    }\n\
    \    for (i = 2; i <= n / 2; i++)\n    {\n        if (n % i == 0)\n        {\n\
    \            return false;\n        }\n    }\n    return true;", "    if (n<=1)\
    \ {\n        return false;\n    } else if (n<=3) {\n        return true;\n   \
    \ } else if (n%2==0 || n%3==0) {\n        return false;\n    }\n    int i = 5;\n\
    \    while (i*i<=n) {\n        if (n%i==0 || n%(i+2)==0) {\n            return\
    \ false;\n        }\n        i += 6;\n    }\n    return true;", "\tif (n == 1)\
    \ {\n\t\treturn false;\n\t}\n\t// n is prime when only 1 and n divides it.\n\t\
    for (long i = 2; i * i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;", "    if (n == 1) return false;\n    for (long i =\
    \ 2; i * i <= n; i++) {\n        if (n % i == 0) return false;\n    }\n    return\
    \ true;", "    for (long i = 2; i < n; i++) {\n      if (n % i == 0) {\n     \
    \   return false;\n      }\n    }\n    return true;", "  bool is_prime = true;\n\
    \  for (int i = 2; i < n; i++) {\n    if (n % i == 0) {\n      is_prime = false;\n\
    \      break;\n    }\n  }\n  return is_prime;", "  for (long i = 2; i < n; i++)\
    \ {\n    if (n % i == 0) {\n      return false;\n    }\n  }\n  return true;",
  "  if (n<2) {\n    return false;\n  }\n  for (long i=2; i*i<=n; i++) {\n    if (n%i==0)\
    \ {\n      return false;\n    }\n  }\n  return true;", "\tfor (int i = 2; i <=\
    \ sqrt(n); i++) {\n\t\tif (n % i == 0)\n\t\t\treturn false;\n\t}\n\treturn true;",
  "  if (n == 2 || n == 3) {\n    return true;\n  }\n  if (n == 1 || n % 2 == 0) {\n\
    \    return false;\n  }\n  for (int i = 3; i * i <= n; i += 2) {\n    if (n %\
    \ i == 0) {\n      return false;\n    }\n  }\n  return true;", "\tlong i;\n\t\
    for (i = 2; i <= sqrt(n); i++) {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;", "    long x = 2;\n    while (x * x <= n) {\n    \
    \    if (n % x == 0) {\n            return false;\n        }\n        x += 1;\n\
    \    }\n    return true;", "    if (n < 2) return false;\n    else if (n == 2)\
    \ return true;\n    else if (n % 2 == 0) return false;\n    for (long i = 3; i\
    \ <= sqrt(n); i+=2) {\n        if (n % i == 0) return false;\n    }\n    return\
    \ true;", "\tif (n==1){\n\t\treturn false;\n\t}\n\tfor (int i=2; i<=sqrt(n); i++){\n\
    \t\tif (n%i==0){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;", "    if (n\
    \ <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 == 0 || n %\
    \ 3 == 0) return false;\n    for (int i = 5; i * i <= n; i = i + 6) {\n      \
    \  if (n % i == 0 || n % (i + 2) == 0) {\n            return false;\n        }\n\
    \    }\n    return true;", "    // check if n is a multiple of 2\n    if (n%2==0)\
    \ return false;\n    // if not, then just check the odds\n    for(int i=3;i*i<=n;i+=2)\
    \ {\n        if(n%i==0)\n            return false;\n    }\n    return true;",
  "  // Your code goes here.\n  if(n<2)\n    return false;\n  for(int i=2;i<n;i++)\n\
    \  {\n    if(n%i==0)\n      return false;\n  }\n  return true;", "  for (long\
    \ i = 2; i < n; i++) {\n    if (n % i == 0) {\n      return false;\n    }\n  }\n\
    \  return true;", "\tif (n <= 1) {\n\t\treturn false;\n\t}\n\tfor (long long int\
    \ i = 2; i < n; i++) {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t\
    }\n\treturn true;", "  if (n < 2) return false;\n  if (n == 2) return true;\n\
    \  if (n % 2 == 0) return false;\n  for (long i = 3; i < n; i += 2) {\n    if\
    \ (n % i == 0) {\n      return false;\n    }\n  }\n  return true;", "  if (n ==\
    \ 1) return false;\n  else if (n < 4) return true;\n  else if (n % 2 == 0) return\
    \ false;\n  else if (n < 9) return true;\n  else if (n % 3 == 0) return false;\n\
    \  else {\n    long r = floor(sqrt(n));\n    long f = 5;\n    while (f <= r) {\n\
    \      if (n % f == 0) return false;\n      if (n % (f + 2) == 0) return false;\n\
    \      f += 6;\n    }\n    return true;\n  }", "    if (n <= 1) return false;\n\
    \    for (long i = 2; i < n; i++) {\n        if (n % i == 0) return false;\n \
    \   }\n    return true;", "\tif (n < 2) {\n\t\treturn false;\n\t}\n\telse if (n\
    \ == 2) {\n\t\treturn true;\n\t}\n\tfor (long i = 2; i < n; i++) {\n\t\tif (n\
    \ % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;", "\tif (n == 1)\n\
    \t\treturn false;\n\tif (n == 2)\n\t\treturn true;\n\tlong sq = sqrt(n);\n\tlong\
    \ i = 2;\n\twhile (i <= sq) {\n\t\tif (n % i == 0)\n\t\t\treturn false;\n\t\t\
    i++;\n\t}\n\treturn true;", "    if (n<=1) {\n        return false;\n    }\n \
    \   for (long i=2; i<n; i++) {\n        if (n%i==0) {\n            return false;\n\
    \        }\n    }\n    return true;", "\tint x = sqrt(n);\n\tbool ans = true;\n\
    \tfor (int i = 2; i <= x; i++) {\n\t\tif (n % i == 0) {\n\t\t\tans = false;\n\t\
    \t\tbreak;\n\t\t}\n\t}\n\treturn ans;", "    if (n <= 1) {\n        return false;\n\
    \    }\n    else if (n <= 3) {\n        return true;\n    }\n    else if (n %\
    \ 2 == 0 || n % 3 == 0) {\n        return false;\n    }\n    int i = 5;\n    while\
    \ (i * i <= n) {\n        if (n % i == 0 || n % (i + 2) == 0) {\n            return\
    \ false;\n        }\n        i = i + 6;\n    }\n    return true;", "  if (n <=\
    \ 1) {\n    return false;\n  }\n  if (n <= 3) {\n    return true;\n  }\n  for\
    \ (long i = 2; i <= sqrt(n); i++) {\n    if (n % i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;", "  if (n < 2) {\n    return false;\n  }\n  if (n\
    \ == 2) {\n    return true;\n  }\n  if (n % 2 == 0) {\n    return false;\n  }\n\
    \  long up_bound = (long)sqrt(n);\n  for (long i = 3; i <= up_bound; i += 2) {\n\
    \    if (n % i == 0) {\n      return false;\n    }\n  }\n  return true;", "  \
    \  if (n <= 1) return false;\n    for (long i = 2; i < n; i++) {\n        if (n\
    \ % i == 0) {\n            return false;\n        }\n    }\n    return true;",
  "    // Note: When writing this function, think about what else is prime.\n    //\
    \ Hint: Try trial division.\n    // Helper: what else is prime?\n    \n    int\
    \ k = 1;\n    while(k*k <= n){\n        if(n%k == 0){\n            return false;\n\
    \        }\n        k++;\n    }\n    return true;", "    assert(n > 0);\n    long\
    \ i = 1;\n    bool res = true;\n    while (i < n) {\n        i++;\n        if\
    \ (n % i == 0 && i != n) {\n            res = false;\n            break;\n   \
    \     }\n    }\n    return res;", "\t//\n\t// YOUR CODE HERE\n\t//\n\tif (n <=\
    \ 1)\n\t\treturn false;\n\telse if (n <= 3)\n\t\treturn true;\n\telse if (n %\
    \ 2 == 0 || n % 3 == 0)\n\t\treturn false;\n\tint i = 5;\n\twhile (i * i <= n)\
    \ {\n\t\tif (n % i == 0 || n % (i + 2) == 0)\n\t\t\treturn false;\n\t\ti += 6;\n\
    \t}\n\treturn true;", "  if (n == 2) {\n    return true;\n  }\n  if (n <= 1) {\n\
    \    return false;\n  }\n  for (long i = 2; i <= std::sqrt(n); i++) {\n    if\
    \ (n % i == 0) {\n      return false;\n    }\n  }\n  return true;", "\tif (n<=1)\
    \ {\n\t\treturn false;\n\t}\n\telse if (n<=3) {\n\t\treturn true;\n\t}\n\telse\
    \ if (n%2==0 || n%3==0) {\n\t\treturn false;\n\t}\n\tlong i=5;\n\twhile (i*i<=n)\
    \ {\n\t\tif (n%i==0 || n%(i+2)==0) {\n\t\t\treturn false;\n\t\t}\n\t\ti=i+6;\n\
    \t}\n\treturn true;", "   assert(n > 0);\n   for (long i = 2; i <= n; i++) {\n\
    \      if (n % i == 0) {\n         if (n == i) {\n            return true;\n \
    \        }\n         return false;\n      }\n   }\n   return false;", "\tif (n\
    \ == 1 || n == 0) {\n\t\treturn false;\n\t}\n\tfor (long i = 2; i * i <= n; i++)\
    \ {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;",
  "  if (n == 1) return false;\n\n  // Note that this loop runs until *square* of\
    \ the number\n  for (long i = 2; i*i <= n; i++) {\n    if (n % i == 0) return\
    \ false;\n  }\n  return true;", "    if (n <= 1) {\n        return false;\n  \
    \  }\n    for (long i = 2; i < n; i++) {\n        if (n % i == 0) {\n        \
    \    return false;\n        }\n    }\n    return true;", "  if (n < 2) return\
    \ false;\n  if (n == 2) return true;\n  if (n % 2 == 0) return false;\n  long\
    \ i = 3;\n  while (i <= sqrt(n)) {\n    if (n % i == 0) return false;\n    i +=\
    \ 2;\n  }\n  return true;", "if (n == 1)\nreturn false;\nif (n == 2)\nreturn true;\n\
    if (n == 3)\nreturn true;\nif (n % 2 == 0)\nreturn false;\nif (n % 3 == 0)\nreturn\
    \ false;\nlong i = 5;\nlong w = 2;\nwhile (i * i <= n) {\nif (n % i == 0)\nreturn\
    \ false;\ni += w;\nw = 6 - w;", "  if (n < 2) return false;\n  for (long i = 2;\
    \ i < sqrt(n); i++) {\n    if (n % i == 0) return false;\n  }\n  return true;",
  "    if (n == 1) {\n        return false;\n    }\n    for (long i = 2; i * i <=\
    \ n; i++) {\n        if (n % i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;", "   int i;\n   if(n<2) return false;\n   for(i=2;i<n;i++)\n\
    \   {\n      if(n%i==0)\n         return false;\n   }\n   return true;", "   \
    \ if (n == 1) return false;\n    for (long i = 2; i * i <= n; i++) {\n       \
    \ if (n % i == 0) return false;\n    }\n    return true;", "  if (n == 1 || n\
    \ == 0) {\n    return false;\n  }\n  if (n == 2) {\n    return true;\n  }\n  if\
    \ (n % 2 == 0) {\n    return false;\n  }\n  for (long i = 3; i <= sqrt(n); i +=\
    \ 2) {\n    if (n % i == 0) {\n      return false;\n    }\n  }\n  return true;",
  "\tif (n == 1) {\n\t\treturn false;\n\t}\n\tlong sn = sqrt(n);\n\tfor (long i =\
    \ 2; i <= sn; i++) {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\
    \treturn true;", "    if (n == 1) return false;\n    for (long i = 2; i <= sqrt(n);\
    \ i++) {\n        if (n % i == 0) return false;\n    }\n    return true;", " \
    \   if (n <= 1) {\n        return false;\n    }\n    else if (n <= 3) {\n    \
    \    return true;\n    }\n    else if (n % 2 == 0 || n % 3 == 0) {\n        return\
    \ false;\n    }\n    else {\n        for (int i = 5; i * i <= n; i = i + 6) {\n\
    \            if (n % i == 0 || n % (i + 2) == 0) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }", "    if (n == 1) return\
    \ false;\n    for (long i = 2; i <= (n-1); i++) {\n        if (n % i == 0) return\
    \ false;\n    }\n    return true;", "\tif (n <= 1) {\n\t\treturn false;\n\t}\n\
    \tif (n <= 3) {\n\t\treturn true;\n\t}\n\tif (n % 2 == 0 || n % 3 == 0) {\n\t\t\
    return false;\n\t}\n\tfor (int i = 5; i * i <= n; i = i + 6) {\n\t\tif (n % i\
    \ == 0 || n % (i + 2) == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;",
  "    if (n == 1) {\n        return false;\n    }\n    for (long i = 2; i * i <=\
    \ n; i++) {\n        if (n % i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;", "    // assert(n>=0);\n    if(n<2) return false;\n\
    \    else if(n==2) return true;\n    else if(n%2==0) return false;\n    for(int\
    \ i=3;i<sqrt(n)+1;i+=2){\n        if(n%i==0) return false;\n    }\n    return\
    \ true;", "  // WRITE YOUR CODE HERE\n  long i=2;\n  if(n==2){\n    return true;\n\
    \  }\n  if(n==0 || n==1 || n%2==0){\n    return false;\n  }\n  for(i=3;i<=n/2;i+=2){\n\
    \    if(n%i==0){\n      return false;\n    }\n  }\n  return true;", "  // Fill\
    \ this in.\n  if(n<=1)\n    return false;\n   if(n==2 || n==3)\n    return true;\n\
    \  long k=sqrt(n);\n  for(long i=2;i<=k;i++)\n  {\n      if(n%i==0)\n        return\
    \ false;\n  }\n  return true;", "\tif (n <= 1) return false;\n\tfor (long d =\
    \ 2; d*d <= n; d++) {\n\t\tif (n % d == 0) return false;\n\t}\n\treturn true;",
  "    if (n == 2 || n == 3) {\n        return true;\n    }\n    if (n % 2 == 0 ||\
    \ n < 2) {\n        return false;\n    }\n    for (int i = 3; i <= sqrt(n); i\
    \ += 2) {\n        if (n % i == 0) {\n            return false;\n        }\n \
    \   }\n    return true;", "    if (n == 1) return false;\n    for (long i = 2;\
    \ i < n; i++) {\n        if (n % i == 0) return false;\n    }\n    return true;",
  "    // base case\n    if (n <= 1) return false;\n    // check if n is prime\n \
    \   for (long i = 2; i < n; i++) {\n        if (n % i == 0) return false;\n  \
    \  }\n    return true;", "  int z = 0;\n  for (int i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      z++;\n    }\n  }\n  if (z > 0) {\n    return false;\n\
    \  }\n  else {\n    return true;\n  }", "    int c=0;\n    for(int i=1;i<=n;i++)\n\
    \    {\n        if(n%i==0)\n        {\n            c++;\n        }\n    }\n  \
    \  if(c==2)\n    {\n        return true;\n    }\n    else\n    {\n        return\
    \ false;\n    }", "    long i;\n    bool result = true;\n    // Your code goes\
    \ here.\n    if(n==1 || n==0)\n        return false;\n    else{\n        for(i=2;i<=n/2;i++){\n\
    \            if(n%i==0){\n                result = false;\n                break;\n\
    \            }\n        }\n    }\n    return result;", "    if (n == 1) {\n  \
    \      return false;\n    } else if (n <= 3) {\n        return true;\n    } else\
    \ if (n % 2 == 0 || n % 3 == 0) {\n        return false;\n    } else {\n     \
    \   for (long i = 5; i * i <= n; i += 6) {\n            if (n % i == 0 || n %\
    \ (i + 2) == 0) {\n                return false;\n            }\n        }\n \
    \       return true;\n    }", "  // TODO: Return whether the given number n is\
    \ prime\n  // By definition, a prime number is a natural number greater than 1\
    \ that has no positive divisors other than 1 and itself.\n  if (n <= 1) {\n  \
    \  return false;\n  }\n  for (int i = 2; i < n; i++) {\n    if (n % i == 0) {\n\
    \      return false;\n    }\n  }\n  return true;", "    // Implement is_prime.\n\
    \    if(n==1) return false;\n    if(n==2) return true;\n    if(n%2==0) return\
    \ false;\n    long i;\n    for(i=3;i<=sqrt(n);i=i+2)\n    {\n        if(n%i==0)\
    \ return false;\n    }\n    return true;", "    // TODO: Your code here\n    //\
    \ check if n is a multiple of 2\n    if (n % 2 == 0) return false;\n    // if\
    \ not, then just check the odds\n    for(int i = 3; i * i <= n; i += 2) {\n  \
    \      if(n % i == 0)\n            return false;\n    }\n    return true;", " \
    \ bool prime = true;\n  for (long d = 2; d < n; d++) {\n    if (n % d == 0) {\n\
    \      prime = false;\n      break;\n    }\n  }\n  return prime;", "    if (n\
    \ == 2 || n == 3)\n        return true;\n    if (n % 2 == 0 || n % 3 == 0)\n \
    \       return false;\n    for (int i = 5; i * i <= n; i += 6) {\n        if (n\
    \ % i == 0 || n % (i + 2) == 0)\n            return false;\n    }\n    return\
    \ true;", "    if (n == 1) {\n        return false;\n    }\n    if (n == 2) {\n\
    \        return true;\n    }\n    if (n % 2 == 0) {\n        return false;\n \
    \   }\n    // The smallest prime number is 2, so we can try all odds.\n    long\
    \ i = 3;\n    while (i * i <= n) {\n        if (n % i == 0) {\n            return\
    \ false;\n        }\n        i += 2;\n    }\n    return true;", "    // If a number\
    \ is divisible by any number other than 1 and itself,\n    // it is not prime.\n\
    \    for (long i = 2; i < n; i++) {\n        if (n % i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;", "\tassert(n > 0);\n\tif (n == 1\
    \ || n == 2)\n\t\treturn false;\n\tif (n % 2 == 0)\n\t\treturn false;\n\tfor (int\
    \ i = 3; i < sqrt(n); i += 2) {\n\t\tif (n % i == 0)\n\t\t\treturn false;\n\t\
    }\n\treturn true;", "  if (n == 1) {\n    return false;\n  } else if (n == 2)\
    \ {\n    return true;\n  } else if (n % 2 == 0) {\n    return false;\n  } else\
    \ {\n    long i = 3;\n    while (i <= sqrt(n)) {\n      if (n % i == 0) {\n  \
    \      return false;\n      }\n      i += 2;\n    }\n    return true;\n  }", " \
    \   if (n < 2) {\n        return false;\n    }\n    if (n == 2) {\n        return\
    \ true;\n    }\n    // long limit = n**0.5\n    long limit = pow(n, 0.5);\n  \
    \  for (long i = 2; i <= limit; i++) {\n        if (n % i == 0) {\n          \
    \  return false;\n        }\n    }\n    return true;", "\tint i, x;\n\tfor (i\
    \ = 2; i < n; i++) {\n\t\tx = n % i;\n\t\tif (x == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;", "    assert(n > 0);\n    // if(n==1) return false;\n\
    \    if(n%2==0 && n>2) return false;\n    for(int i=3; i<=sqrt(n); i+=2) {\n \
    \       if(n%i==0) return false;\n    }\n    return true;", "  if (n < 2) {\n\
    \    return false;\n  }\n  else if (n == 2) {\n    return true;\n  }\n  for (long\
    \ i = 2; i <= std::sqrt(n); i++) {\n    if (n % i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;", "    if (n <= 1) return false;\n    if (n <= 3)\
    \ return true;\n    if (n % 2 == 0 || n % 3 == 0) return false;\n    for (int\
    \ i = 5; i * i <= n; i = i + 6) {\n        if (n % i == 0 || n % (i + 2) == 0)\
    \ return false;\n    }\n    return true;", "    // TODO: implement me!\n    //\
    \ In order to get full credit, you will need to handle all corner cases and large\
    \ numbers\n    if(n==2){\n        return true;\n    }\n    if(n==3){\n       \
    \ return true;\n    }\n    if(n%2==0){\n        return false;\n    }\n    if(n%3==0){\n\
    \        return false;\n    }\n    long i=5;\n    long w=2;\n    while(i*i<=n){\n\
    \        if(n%i==0){\n            return false;\n        }\n        i+=w;\n  \
    \      w=6-w;\n    }\n    return true;", "    if (n<=1) return false;\n    if\
    \ (n==2 || n==3) return true;\n    if (n%2==0 || n%3==0) return false;\n    int\
    \ i = 5;\n    while (i*i<=n) {\n        if (n%i==0 || n%(i+2)==0) return false;\n\
    \        i+=6;\n    }\n    return true;", "  if (n <= 1) {\n    return false;\n\
    \  }\n  if (n == 2) {\n    return true;\n  }\n  if (n % 2 == 0) {\n    return\
    \ false;\n  }\n  for (long i = 3; i <= sqrt(n); i += 2) {\n    if (n % i == 0)\
    \ {\n      return false;\n    }\n  }\n  return true;", "  if (n <= 1) {\n    return\
    \ false;\n  }\n  if (n <= 3) {\n    return true;\n  }\n  if (n % 2 == 0 || n %\
    \ 3 == 0) {\n    return false;\n  }\n  for (int i = 5; i * i <= n; i = i + 6)\
    \ {\n    if (n % i == 0 || n % (i + 2) == 0) {\n      return false;\n    }\n \
    \ }\n  return true;", "    assert(n>=1);\n    for(long i=2;i<=n-1;i++){\n    \
    \    if(n%i==0){\n            return false;\n        }\n    }\n    return true;",
  "if(n==2)\nreturn true;\nfor(int i=2;i<=sqrt(n);i++)\n{\n    if(n%i==0)\n    return\
    \ false;", "    if (n < 2) {\n        return false;\n    }\n    else if (n ==\
    \ 2) {\n        return true;\n    }\n    else if (n % 2 == 0) {\n        return\
    \ false;\n    }\n    else {\n        for (int i = 3; i <= std::sqrt(n); i += 2)\
    \ {\n            if (n % i == 0) {\n                return false;\n          \
    \  }\n        }\n        return true;\n    }", "    bool prime = true;\n    if\
    \ (n == 1) {\n        prime = false;\n    }\n    if (n > 1) {\n        for (int\
    \ i = 2; i <= std::sqrt(n); i++) {\n            if (n % i == 0) {\n          \
    \      prime = false;\n                break;\n            }\n        }\n    }\n\
    \    return prime;", "    bool result = false;\n    if (n==1) {\n        result\
    \ = false;\n    }\n    else {\n        result = true;\n        for (int i=2; i*i<=n;\
    \ i++) {\n            if (n%i==0) {\n                result = false;\n       \
    \         break;\n            }\n        }\n    }\n    return result;", "    if\
    \ (n == 2 || n == 3) {\n        return true;\n    }\n    if (n < 2 || n % 2 ==\
    \ 0) {\n        return false;\n    }\n    if (n < 9) {\n        return true;\n\
    \    }\n    if (n % 3 == 0) {\n        return false;\n    }\n    long r = floor(sqrt(n));\n\
    \    long f = 5;\n    while (f <= r) {\n        if (n % f == 0) {\n          \
    \  return false;\n        }\n        if (n % (f + 2) == 0) {\n            return\
    \ false;\n        }\n        f += 6;\n    }\n    return true;", "    assert(n\
    \ > 0);\n    if (n == 1) return false;\n    if (n == 2) return true;\n    int\
    \ k = sqrt(n);\n    for (int i = 2; i <= k; i++) {\n        if (n % i == 0) {\n\
    \            return false;\n        }\n    }\n    return true;", "  if (n == 1)\
    \ {\n    return false;\n  } else if (n <= 3) {\n    return true;\n  } else if\
    \ (n % 2 == 0 || n % 3 == 0) {\n    return false;\n  }\n  long i = 5;\n  while\
    \ (i * i <= n) {\n    if (n % i == 0 || n % (i + 2) == 0) {\n      return false;\n\
    \    }\n    i += 6;\n  }\n  return true;", "    if (n <= 1) {\n        return\
    \ false;\n    }\n    for (long i = 2; i < n; i++) {\n        if (n % i == 0) {\n\
    \            return false;\n        }\n    }\n    return true;", "    if (n <\
    \ 2) return false;\n    if (n % 2 == 0) return n == 2;\n    if (n % 3 == 0) return\
    \ n == 3;\n    long d = 5;\n    while (d * d <= n) {\n        if (n % d == 0)\
    \ return false;\n        d += 2;\n        if (n % d == 0) return false;\n    \
    \    d += 4;\n    }\n    return true;", "\tif (n <= 1) {\n\t\treturn false;\n\t\
    }\n\tif (n <= 3) {\n\t\treturn true;\n\t}\n\tfor (int i = 2; i < sqrt(n); i++)\
    \ {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;",
  "    if (n <= 1) {\n        return false;\n    }\n    long i = 2;\n    while (i\
    \ < n) {\n        if (n % i == 0) {\n            return false;\n        }\n  \
    \      i++;\n    }\n    return true;", "    if (n <= 1) {\n        return false;\n\
    \    }\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n    \
    \        return false;\n        }\n        i++;\n    }\n    return true;", " \
    \ assert(n >= 0);\n  if (n < 2) {\n    return false;\n  }\n  if (n == 2) {\n \
    \   return true;\n  }\n  if (n % 2 == 0) {\n    return false;\n  }\n  // Now n\
    \ must be odd and larger than 2.\n  for (long i = 3; i < n; i += 2) {\n    if\
    \ (n % i == 0) {\n      return false;\n    }\n  }\n  return true;", "    long\
    \ max = sqrt(n) + 1;\n    if (n == 1) return false;\n    for (long i = 2; i <\
    \ max; i++) {\n        if (n % i == 0) return false;\n    }\n    return true;",
  "  if (n < 2) {\n    return false;\n  }\n  if (n == 2) {\n    return true;\n  }\n\
    \  if (n % 2 == 0) {\n    return false;\n  }\n  for (long i = 3; i < n; i += 2)\
    \ {\n    if (n % i == 0) {\n      return false;\n    }\n  }\n  return true;",
  "    // Your code here\n    if(n==1){\n        return false;\n    }\n    for(int\
    \ i=2;i<=sqrt(n);i++){\n        if(n%i==0){\n            return false;\n     \
    \   }\n    }\n    return true;", "\tif (n < 2) return false;\n\tfor (long i =\
    \ 2; i < n; i++) {\n\t\tif (n % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\
    return true;", "    if (n==1) return false;\n    if (n==2) return true;\n    if\
    \ (n%2==0) return false;\n    for (int i=3; i*i<=n; i+=2) {\n        if (n%i==0)\
    \ return false;\n    }\n    return true;", "    int a=0;\n    for(int i=1;i<=n;i++){\n\
    \        if(n%i==0){\n            a++;\n        }\n    }\n    if(a==2){\n    \
    \    return true;\n    }\n    else{\n        return false;\n    }", "    // Write\
    \ your code here.\n    \n    if(n == 1)\n        return false;\n    \n    if(n\
    \ == 2)\n        return true;\n    \n    int i;\n    for(i = 2; i*i <= n; i++)\n\
    \    {\n        if(n%i == 0)\n            return false;\n    }\n    \n    return\
    \ true;", "    if (n < 2) {\n        return false;\n    }\n    for (long i = 2;\
    \ i * i <= n; i++) {\n        if (n % i == 0) {\n            return false;\n \
    \       }\n    }\n    return true;"]
stop_tokens:
- "\n}"

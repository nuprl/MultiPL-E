name: HumanEval_77_iscube
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes\
  \ an integer a and returns True \n// if this ingeger is a cube of some integer number.\n\
  // Note: you may assume the input is always valid.\n// Examples:\n// iscube(1) ==>\
  \ True\n// iscube(2) ==> False\n// iscube(-1) ==> True\n// iscube(64) ==> True\n\
  // iscube(0) ==> True\n// iscube(180) ==> False\nbool iscube(long a) {\n"
tests: "}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1)) ==\
  \ (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1)) ==\
  \ (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
  \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
  \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
completions: ["  long b = a<0?-a:a;\n  long c = sqrt(b);\n  long d = c*c*c;\n  return\
    \ b==d;", "\treturn a>=0 && pow(round(pow(a, 1./3)), 3) == a;", "  if (a == 0\
    \ || a == 1) {\n    return true;\n  }\n  else if (a < 0) {\n    a = -a;\n  }\n\
    \  else {\n    a = a;\n  }\n  for (int i = 1; i <= a; i++) {\n    if (i * i *\
    \ i == a) {\n      return true;\n    }\n  }\n  return false;", "  // your code\
    \ here\n  if(a == 0 || a == 1 || a == -1)\n    return true;\n  else\n  {\n   \
    \ for(int i = 1; i <= a; i++)\n    {\n      if(i*i*i == a)\n        return true;\n\
    \    }\n  }\n  return false;", "\tif (a == 0) return true;\n\tif (a < 0) a = -a;\n\
    \tfor (long i = 1; i < a; i++) {\n\t\tif (i*i*i == a) return true;\n\t}\n\treturn\
    \ false;", "    long temp = std::cbrt(a);\n    if (temp*temp*temp == a)\n    \
    \    return true;\n    return false;", "    // Your code\n    double d=pow(a,1.0/3.0);\n\
    \    int t=(int)d;\n    if(t==d)\n    return true;\n    else\n    return false;",
  '    return cbrt(a) == (int)cbrt(a);', "  if (a == 0) {\n    return true;\n  }\n\
    \  if (a < 0) {\n    a = -a;\n  }\n  for (long x = 1; x < a; x++) {\n    if (x\
    \ * x * x == a) {\n      return true;\n    }\n  }\n  return false;", "    assert(a\
    \ == 0 || a > 0);\n    if (a == 0) {\n        return true;\n    }\n    int r =\
    \ round(pow(a, 1/3.0));\n    if (r * r * r == a) {\n        return true;\n   \
    \ }\n    return false;", "    long root = (long) std::cbrt(a);\n    return a ==\
    \ root * root * root;", "\tif (a == 0) return true;\n\tif (a < 0) a = -a;\n\t\
    if (pow(round(pow(a, 1.0 / 3)), 3) == a) return true;\n\treturn false;", "\treturn\
    \ cbrt(a) == floor(cbrt(a));", "  if (a < 0) {\n    a = -a;\n  }\n  long n = floor(cbrt(a)\
    \ + 0.5);\n  return n * n * n == a;", '    return (abs(a)== pow(int(pow(abs(a),
    1.0/3.0)), 3));', "    long cube = 0;\n    for (int i = 0; cube <= a; i++) {\n\
    \        cube = pow(i, 3);\n        if (cube == a) {\n            return true;\n\
    \        }\n    }\n    return false;", '  return a >= 0 && std::cbrt(a) == std::ceil(std::cbrt(a));',
  "  //TODO:\n  long b;\n  if(a==0){\n    return true;\n  }\n  if(a>0){\n  for(int\
    \ i=1;i<=a;i++){\n    b=i*i*i;\n    if(b==a){\n      return true;\n    }\n  }\n\
    \  }\n  else{\n    a=a*(-1);\n    for(int i=1;i<=a;i++){\n    b=i*i*i;\n    if(b==a){\n\
    \      return true;\n    }\n  }\n  }\n  return false;", "  int b = a;\n  for (int\
    \ i = 0; i < 100; i++) {\n    if (i * i * i == b) {\n      return true;\n    }\n\
    \  }\n  return false;", '    return a >= 0 && a == std::pow(std::round(std::pow(a,
    1.0 / 3)), 3);', "  if (a == 0) return true;\n  double b = abs(a);\n  b = pow(b,\
    \ 1.0/3.0);\n  return (long)b == b;", "\tdouble b;\n\tb = cbrt(a);\n\tif (b-floor(b)==0)\n\
    \t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}", "    if (a==0)\n\
    \        return true;\n    if (a<0)\n        a = -a;\n    for (long i=1; i<=a;\
    \ i++)\n        if (i*i*i == a)\n            return true;\n    return false;",
  "    long root = round(std::cbrt(a));\n    return a == root * root * root;", '    return
    round(cbrt(a))*round(cbrt(a))*round(cbrt(a)) == a;', "  int b = a;\n  for (int\
    \ i = 1; i < 25; i++) {\n    b = b / i;\n    if (b == 0) {\n      return true;\n\
    \    }\n  }\n  return false;", "\tlong b = abs(a);\n\treturn (floor(cbrt(b)) ==\
    \ ceil(cbrt(b)));", "  \n  long guess = 0;\n  long abs_a = abs(a);\n  while (guess*guess*guess\
    \ < abs_a) {\n    guess = guess + 1;\n  }\n  return guess*guess*guess == abs_a;",
  "    if (a < 0) {\n        a = abs(a);\n    }\n    // long b = floor(cbrt(a));\n\
    \    // return b * b * b == a;\n    for (long b = 0; b * b * b <= a; b++) {\n\
    \        if (b * b * b == a) {\n            return true;\n        }\n    }\n \
    \   return false;", "    double x = (double)a;\n    if (a == 0 || a == 1) {\n\
    \        return true;\n    }\n    x = cbrt(x);\n    if (a % (int)x == 0) {\n \
    \       return true;\n    }\n    return false;", "\tif (a < 0) {\n\t\ta = -a;\n\
    \t}\n\tif (a == 0) {\n\t\treturn true;\n\t}\n\tlong tmp = (long)cbrt(a);\n\tif\
    \ (tmp * tmp * tmp == a) {\n\t\treturn true;\n\t}\n\treturn false;", "    int\
    \ i = 1;\n    while (i*i*i < a) i++;\n    return i*i*i == a;", '  return cbrt(a)
    - floor(cbrt(a)) == 0;', "    if (a == 0 || a == 1) return true;\n    if (a <\
    \ 0) a = -a;\n    double c = pow(a, 1.0/3);\n    return round(c) == c;", "\tif\
    \ (a == 0) {\n\t\treturn true;\n\t}\n\tfor (int i = 0; i*i*i <= abs(a); i++) {\n\
    \t\tif (i*i*i == abs(a)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;",
  "    // your code here\n    int i = 1;\n    while(i*i*i < a)\n    {\n        i++;\n\
    \    }\n    if(i*i*i == a)\n    {\n        return true;\n    }\n    else\n   \
    \ {\n        return false;\n    }", "    if (a < 0) {\n        a = -a;\n    }\n\
    \    int n = 0;\n    for (int i = 1; i <= a; i++) {\n        n = i * i * i;\n\
    \        if (n == a) {\n            return true;\n        }\n    }\n    return\
    \ false;", "\treturn (a >= 0 && std::cbrt(a) == std::floor(std::cbrt(a)));", "\t\
    // write your code here.\n\treturn a == 0 || floor(pow(a, 1.0 / 3)) == pow(a,\
    \ 1.0 / 3);", "\tfloat r = sqrt(a);\n\treturn r*r*r == a;", "\treturn a < 0 ?\
    \ a == -1 : (int)pow(a, 1.0 / 3) == pow(a, 1.0 / 3);", '    // write your code
    here', "  long cube = 0;\n  for (long i = 0; cube < a; i++) {\n    cube = i *\
    \ i * i;\n    if (cube == a) {\n      return true;\n    }\n  }\n  return false;",
  "    long n = std::cbrt(a);\n    return (a == n*n*n);", "    assert(a >= 0);\n \
    \   int n = ceil(cbrt(a));\n    return (n*n*n == a);", "    // Complete this function\n\
    \    long left = 0, right = a;\n    while (left <= right) {\n        long mid\
    \ = left + (right - left) / 2;\n        if (mid * mid * mid == a) return true;\n\
    \        else if (mid * mid * mid > a) right = mid - 1;\n        else left = mid\
    \ + 1;\n    }\n    return false;", "\tlong ans = 0;\n\twhile (ans * ans * ans\
    \ < a) ans++;\n\treturn (ans * ans * ans == a);", "  long b=a;\n  if(a<0)\n  a=-a;\n\
    \  if(a==0)\n  return true;\n  long x=1;\n  while(x*x*x<=a)\n  {\n    if(x*x*x==a)\n\
    \    return true;\n    x++;\n  }\n  return false;", "\tstd::cout << a << std::endl;\n\
    \tif (a == 0) {\n\t\treturn true;\n\t}\n\tif (a < 0) {\n\t\ta = -a;\n\t}\n\tlong\
    \ divider = 1;\n\twhile (a > divider) {\n\t\tdivider *= 2;\n\t}\n\tstd::cout <<\
    \ \"cube of : \" << divider << std::endl;\n\twhile (divider > 0) {\n\t\tlong cube\
    \ = divider * divider * divider;\n\t\tif (cube == a) {\n\t\t\treturn true;\n\t\
    \t}\n\t\tif (cube > a) {\n\t\t\tdivider /= 2;\n\t\t} else {\n\t\t\ta -= cube;\n\
    \t\t}\n\t}\n\treturn false;", "    if (a == 0 || a == 1) {\n        return true;\n\
    \    } else if (a < 0) {\n        return iscube(-a);\n    }\n    for (long i =\
    \ 2; i <= a; i++) {\n        if (i * i * i == a) {\n            return true;\n\
    \        }\n    }\n    return false;", "  if (a < 0)\n    a = -a;\n  if (a ==\
    \ 0)\n    return true;\n  long i = 0;\n  while (i * i * i < a)\n    i++;\n  return\
    \ i * i * i == a;", "    long b=abs(a);\n    if(b==0) return true;\n    long r=round(pow(b,1.0/3));\n\
    \    return r*r*r==b;", "  long b = abs(a);\n  if (a == 0) return true;\n  int\
    \ res = 0;\n  for (int i = 1; i <= b; i++) {\n    res = i * i * i;\n    if (res\
    \ == b) {\n      return true;\n    }\n  }\n  return false;", "  // your code\n\
    \  if(a==0) return true;\n  return cbrt(a) == floor(cbrt(a));", "  // Write your\
    \ code here\n  if(a < 0) a = -a;\n  long i = 1;\n  while(i*i*i <= a) {\n    if(i*i*i\
    \ == a) return true;\n    i++;\n  }\n  return false;", "    if (a<0)\n    {\n\
    \        return true;\n    }\n    long b = 0;\n    while (b*b*b<a)\n    {\n  \
    \      b++;\n    }\n    if (b*b*b==a)\n    {\n        return true;\n    }\n  \
    \  return false;", '  return (long)cbrt(a) * (long)cbrt(a) * (long)cbrt(a) ==
    a;', "    long i = 0;\n    while (i*i*i <= a) {\n        if (i*i*i == a) {\n \
    \           return true;\n        }\n        i++;\n    }\n    return false;",
  '    return (a > 0 && ((int)round(cbrt(a)) == cbrt(a)));', "\tlong b = abs(a);\n\
    \tlong x = round(cbrt(b));\n\treturn b == x * x * x;", '  return a >= 0 ? ceil(cbrt(a))
    == floor(cbrt(a)) : ceil(cbrt(-a)) == floor(cbrt(-a));', "    int i = 1;\n   \
    \ while (i*i*i < a) {\n        i++;\n    }\n    return i*i*i == a;", "    if (a<0)\
    \ {\n        a=-a;\n    }\n    long x = static_cast<long>(pow(a, 1.0/3.0) + 0.5);\n\
    \    return (x*x*x == a);", "  // write your code here\n  double d = a;\n  double\
    \ root = cbrt(d);\n  double root_f = floor(root);\n  double root_c = ceil(root);\n\
    \  if(root_f == root_c)\n    return true;\n  return false;", "    return a >=\
    \ 0 &&\n        (std::cbrt(a) == std::floor(std::cbrt(a)));", "\treturn false;",
  "  long ab = abs(a);\n  long val = pow(ab,1/3.0);\n  return val*val*val == ab;",
  "  // Write your code here\n  return true;", "    if (a >= 0)\n        return (pow(a,\
    \ 1.0/3) == floor(pow(a, 1.0/3)));\n    else\n        return (pow(-a, 1.0/3) ==\
    \ floor(pow(-a, 1.0/3)));", "    //return pow(round(pow(a, 1.0/3)), 3) == a;\n\
    \    return cbrt(a) == round(cbrt(a));", "\tif (a < 0) {\n\t\ta = -a;\n\t}\n\t\
    if (a == 0) {\n\t\treturn true;\n\t}\n\tlong x = 1;\n\tlong x3 = x * x * x;\n\t\
    while (x3 < a) {\n\t\tx3 = x * x * x;\n\t\tx++;\n\t}\n\tif (x3 == a) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;", "    float cube;\n    for(int i = 1;i<100;i++){\n\
    \        cube = i*i*i;\n        if(cube == a){\n            return true;\n   \
    \     }\n    }\n    return false;", "    double b = sqrt(a);\n    double c = cbrt(a);\n\
    \    if (b == (int)b && c == (int)c) {\n        return true;\n    }\n    return\
    \ false;", "    if (a < 0)\n        a = -a;\n    double ans = cbrt(a);\n    return\
    \ pow(ans, 3) == a;", "    if (a < 0) a = -a;\n    int t = a;\n    while (t *\
    \ t * t <= a) {\n        if (t * t * t == a) return true;\n        t++;\n    }\n\
    \    return false;", "    if (a==0 || a==1)\n        return true;\n    for (long\
    \ i=2; i<=a/2; i++)\n        if (i*i*i==a)\n            return true;\n    return\
    \ false;", "    long base = 0;\n    while (base * base * base < a) {\n       \
    \ base += 1;\n    }\n    return base * base * base == a;", '  return a == pow(round(pow(a,1.0/3)),3);',
  "    long aa = std::abs(a);\n    long r = (int)round(std::cbrt(aa));\n    if (r*r*r\
    \ == aa) {\n        return true;\n    }\n    return false;", "    long long i=0;\n\
    \    while(i*i*i<=a){\n        if(i*i*i==a)\n            return true;\n      \
    \  i++;\n    }\n    return false;", "  assert(a >= 0);\n  int cube = 0;\n  int\
    \ count = 0;\n  while (cube < a) {\n    cube = count * count * count;\n    count++;\n\
    \  }\n  if (cube == a) {\n    return true;\n  }\n  return false;", '    return
    a >= 0 && (int)round(cbrt(a)) == cbrt(a);', "\treturn !(a < 0) && ((long)round(pow(a,\
    \ 1.0 / 3)) * (long)round(pow(a, 1.0 / 3)) * (long)round(pow(a, 1.0 / 3)) == a);",
  "\treturn cbrt(a) - round(cbrt(a)) == 0;", "    long x = (long)cbrt(a);\n    //\
    \ return a == x * x * x;\n    return a == x * x * x;", "    if (a<0) {\n     \
    \   a=-a;\n    }\n    long aroot=long(sqrt(a));\n    if (aroot*aroot*aroot==a)\
    \ {\n        return true;\n    }\n    return false;", '    return floor(cbrt(a))
    == ceil(cbrt(a));', "    long i=0;\n    for(i=0;i*i*i<=a;i++){\n    \tif(i*i*i==a)return\
    \ true;\n    }\n    return false;", "    long long t = pow(a, 1.0/3);\n    return\
    \ t*t*t == a;", "  if (a == 0) return true;\n  if (a < 0) a = -a;\n  for (long\
    \ i = 0; i * i * i <= a; i++)\n    if (i * i * i == a) return true;\n  return\
    \ false;", "  bool ret = false;\n  ret = (a == 0) ? true : (std::abs(std::cbrt(a))\
    \ - std::floor(std::cbrt(a)) < std::numeric_limits<double>::epsilon());\n  return\
    \ ret;", "\tassert(a >= -(2 << 29));\n\tlong x = pow(a, 1.0 / 3);\n\treturn (a\
    \ == x * x * x);", "    if (a < 0) {\n        a = -a;\n    }\n    long root =\
    \ (long) std::cbrt(a);\n    return root * root * root == a;", "  if (a == 0) {\n\
    \    return true;\n  }\n  long low = 1;\n  long high = a;\n  while (low <= high)\
    \ {\n    long middle = (low + high) / 2;\n    long cube = middle * middle * middle;\n\
    \    if (cube == a) {\n      return true;\n    } else if (cube < a) {\n      low\
    \ = middle + 1;\n    } else {\n      high = middle - 1;\n    }\n  }\n  return\
    \ false;", "    double x = cbrt(a);\n    if (fabs(x - round(x)) < 1e-4) {\n  \
    \      return true;\n    }\n    return false;", "  return a > 0 && a % 3 == 0\
    \ && a % 4 == 0 && a % 5 == 0 && a % 6 == 0 && a % 7 == 0\n  && a % 8 == 0 &&\
    \ a % 9 == 0 && a % 10 == 0 && a % 11 == 0 && a % 12 == 0 && a % 13 == 0\n  &&\
    \ a % 14 == 0 && a % 15 == 0 && a % 16 == 0 && a % 17 == 0 && a % 18 == 0 && a\
    \ % 19 == 0\n  && a % 20 == 0 && a % 21 == 0 && a % 22 == 0 && a % 23 == 0 &&\
    \ a % 24 == 0 && a % 25 == 0\n  && a % 26 == 0 && a % 27 == 0 && a % 28 == 0 &&\
    \ a % 29 == 0 && a % 30 == 0 && a % 31 == 0\n  && a % 32 == 0 && a % 33 == 0 &&\
    \ a % 34 == 0 && a % 35 == 0 && a % 36 == 0 && a % 37 == 0\n  && a % 38 == 0 &&\
    \ a % 39 == 0 && a % 40 == 0 && a % 41 == 0 && a % 42 == 0 && a % 43 == 0\n  &&\
    \ a % 44 == 0 && a % 45 == 0 && a % 46 == 0 && a % 47 == 0 && a % 48 == 0 && a\
    \ % 49 == 0\n  && a % 50 == 0 && a % 51 == 0 && a % 52 == 0 && a % 53 == 0 &&\
    \ a % 54 == 0 && a % 55 == 0\n  && a % 56 == 0 && a % 57 == 0 && a % 58 == 0 &&\
    \ a % 59 == 0 && a % 60 == 0 && a % 61 == 0\n  && a % 62 == 0 && a % 63 == 0 &&\
    \ a % 64 == 0 && a % 65 == 0 && a % 66 == 0 && a % 67 == 0\n  && a % 68 == 0 &&\
    \ a % 69 == 0 && a % 70 == 0 && a % 71 == 0 && a % 72 == 0 && a % 73 == 0\n  &&\
    \ a % 74 == 0 && a % 75 == 0 && a % 76 == 0 && a % 77 == 0 && a % 78 == 0 && a\
    \ % 79 == 0\n  && a % 80 == 0 && a % 81 == 0 && a % 82 == 0", "\tlong root = ceil(cbrt(a));\n\
    \treturn a == root * root * root;", "    // your code here\n    int b = (int)pow(a,\
    \ 1.0/3);\n    int c = b*b*b;\n    return c == a;", '    return std::cbrt(a) ==
    std::round(std::cbrt(a));', "\treturn round(cbrt(a)) * round(cbrt(a)) * round(cbrt(a))\
    \ == a;", "  long x = a > 0 ? a : -a;\n  long ans = 0;\n  for (long i = 0; ans\
    \ <= x; i++) {\n    ans = i * i * i;\n    if (ans == x) return true;\n  }\n  return\
    \ false;", "   long c = 0;\n    while (c*c*c <= a) {\n        if (c*c*c == a)\
    \ return true;\n        ++c;\n    }\n    return false;", "\tfloat s = pow(a, 1.0/3);\n\
    \tif (s != (int)s) return false;\n\telse return true;", "\tlong long i = 1;\n\t\
    double b = i * i * i;\n\twhile (b < a) {\n\t\ti++;\n\t\tb = i * i * i;\n\t}\n\t\
    if (b == a) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}", "\tif\
    \ (a == 0) {\n\t\treturn true;\n\t}\n\tif (a < 0) {\n\t\ta = (-1) * a;\n\t}\n\t\
    double temp = cbrt(a);\n\tlong double x = cbrt(a);\n\treturn (long double)temp\
    \ == x;", "    if (a <= 0) return true;\n    return (long)(pow(a, 1.0/3) + 0.5)\
    \ * (long)(pow(a, 1.0/3) + 0.5) * (long)(pow(a, 1.0/3) + 0.5) == a;", "    if\
    \ (a < 0)\n        a = -a;\n    long n = (long)pow(a, 1/3.0);\n    return n *\
    \ n * n == a;", '  return (floor(cbrt(a)) == ceil(cbrt(a)));', "  // your code\
    \ here!\n  long sq = std::sqrt(a);\n  long cb = sq * sq * sq;\n  return (cb ==\
    \ a);", "\t//your code here\n\tdouble c = cbrt(a);\n\tif (c - int(c) == 0)\n\t\
    \treturn true;\n\telse\n\t\treturn false;", "\tlong x = a;\n\tif (a < 0) {\n\t\
    \tx = a * -1;\n\t}\n\tif (pow(round(pow(x, 1.0 / 3.0)), 3) == x) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;", "    assert(a != NULL);\n    // your code here\n\
    \    long long b=a;\n    while(b*b*b<a)\n        b++;\n    if(b*b*b==a)\n    \
    \    return true;\n    return false;", "  if (a < 0) a = -a;\n  if (a == 0) return\
    \ true;\n  long b = std::pow(a, 0.33);\n  return b * b * b == a;", "    // Not\
    \ elegant solution\n    double cube_root = cbrt(a);\n    double int_part;\n  \
    \  double frac_part = modf(cube_root, &int_part);\n    return frac_part == 0;\n\
    \    // Elegant solution\n    // return abs(cbrt(a) - round(cbrt(a))) < 1e-9;",
  "  // your code goes here\n  assert(a>=0);\n  return pow(pow(a,1.0/3.0),3)==a;",
  "\t//your code here\n\tif (a == 0)\n\t\treturn true;\n\tif (a == 1)\n\t\treturn\
    \ true;\n\tif (a == -1)\n\t\treturn true;\n\tlong root = round(pow(a, 1.0 / 3.0));\n\
    \treturn root * root * root == a;", "    if (a < 0) {\n        a = -a;\n    }\n\
    \    long sq = sqrt(a);\n    return sq * sq * sq == a;", "  long temp = (long)pow(a,\
    \ (1.0/3.0));\n  if(temp*temp*temp == a)\n    return true;\n  return false;",
  "    double number = (double)a;\n    double root = pow(number,1.0/3.0);\n    return\
    \ root == round(root);", "\tfor (int i = 0; i*i*i <= abs(a); i++) {\n\t\tif (i*i*i\
    \ == abs(a)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;", "\t// for (long\
    \ i = -1; i*i*i<a; i++)\n\t// {\n\t// \tif (i*i*i==a)\n\t// \t{\n\t// \t\treturn\
    \ true;\n\t// \t}\n\t// }\n\t// return false;\n\tfor (int i = 0; i*i*i<=a; i++)\n\
    \t{\n\t\tif (i*i*i==a)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;",
  "    long cube = 0;\n    long i = 0;\n    while (cube < a) {\n        i++;\n   \
    \     cube = i * i * i;\n    }\n    return cube == a;", "  if (a < 0) {\n    a\
    \ = -a;\n  }\n  long l = 0, r = a;\n  while (l <= r) {\n    long mid = l + (r\
    \ - l) / 2;\n    if (mid * mid * mid == a) {\n      return true;\n    } else if\
    \ (mid * mid * mid < a) {\n      l = mid + 1;\n    } else {\n      r = mid - 1;\n\
    \    }\n  }\n  return false;", "    int b = abs(a);\n    for (int i = 1; i < b;\
    \ i++) {\n        if (i * i * i == b) return true;\n    }\n    return false;",
  "\tdouble result = pow(a, 1.0/3.0);\n\tif (result == round(result))\n\t\treturn\
    \ true;\n\treturn false;", "\tfloat n = cbrt(a);\n\tif (n - floor(n) == 0)\n\t\
    \treturn true;\n\telse\n\t\treturn false;", "\tlong cube_root = round(pow(a, (1.0\
    \ / 3.0)));\n\treturn (cube_root * cube_root * cube_root == a);", "  if (a ==\
    \ 0) {\n    return true;\n  }\n  if (a < 0) {\n    a = -a;\n  }\n  int i = 1;\n\
    \  while (i*i*i <= a) {\n    if (i*i*i == a) {\n      return true;\n    }\n  \
    \  i++;\n  }\n  return false;", "\tassert(a >= 0);\n\tif (a == 0) return true;\n\
    \treturn (round(cbrt(a)) * round(cbrt(a)) * round(cbrt(a))) == a;", "  if (a <\
    \ 0) {\n    a = -a;\n  }\n  if (a == 0) {\n    return true;\n  }\n  double root_a\
    \ = std::cbrt(a);\n  long b = root_a;\n  if (std::abs(root_a - b) > 0.000001)\
    \ {\n    return false;\n  }\n  long c = b * b * b;\n  if (c == a) {\n    return\
    \ true;\n  }\n  return false;", "\treturn a>=0 && cbrt(a)==floor(cbrt(a));", "\t\
    int c = a > 0 ? 1 : -1;\n\tlong tmp = c * a;\n\tint i = 1;\n\twhile (i * i * i\
    \ <= tmp) {\n\t\tif (i * i * i == tmp) {\n\t\t\treturn true;\n\t\t}\n\t\ti++;\n\
    \t}\n\treturn false;", "  assert(a != NULL);\n  long root = round(cbrt(a));\n\
    \  return (a == root * root * root);", "  if (a == 0) return true;\n  if (a <\
    \ 0) a = -a;\n  long root = floor(cbrt(a));\n  return (root * root * root == a);",
  '  return abs(a) == cbrt(abs(a)) * cbrt(abs(a)) * cbrt(abs(a));', '  ', "   assert(a\
    \ != 0);\n   return (pow(abs(a), 1.0/3.0) == ceil(pow(abs(a), 1.0/3.0)));", " \
    \   double c = cbrt(a);\n    if(ceil(c)==floor(c)){\n        return true;\n  \
    \  }\n    return false;", "    // Hints:\n    // Using floating point point arithmetic\n\
    \    // <http://www.cplusplus.com/reference/cmath/pow/>\n    // can lead to a\
    \ solution with a running time\n    // that exceeds the allowed time limits.\n\
    \    // Hint: here is a proof that the output is always valid:\n    // <https://codefights.com/tournaments/e4SNKD9dJKb8ZbnWn/D>\n\
    \    // <https://codefights.com/tournaments/e4SNKD9dJKb8ZbnWn/F>\n    // <https://codefights.com/tournaments/e4SNKD9dJKb8ZbnWn/J>\n\
    \    // <https://codefights.com/tournaments/e4SNKD9dJKb8ZbnWn/G>\n    // <https://codefights.com/tournaments/e4SNKD9dJKb8ZbnWn/L>\n\
    \    // <https://codefights.com/tournaments/e4SNKD9dJKb8ZbnWn/K>\n    // <https://codefights.com/tournaments/e4SNKD9dJKb8ZbnWn/I>\n\
    \    // <https://codefights.com/tournaments/e4SNKD9dJKb8ZbnWn/H>\n    //\n   \
    \ // Your solution here.\n    double root = cbrt(a);\n    if(root == floor(root)){\n\
    \        return true;\n    }\n    return false;", "    long b=sqrt(a);\n    long\
    \ c=b*b*b;\n    if(c==a) return true;\n    else return false;", "\tassert(a >\
    \ 0);\n\tlong temp = pow(a, 1.0 / 3);\n\treturn temp * temp * temp == a;", " \
    \   assert(a);\n    double l = std::cbrt(a);\n    return std::pow(l, 3) == a;",
  "\tlong cube = 1;\n\tfor (long i = 1; cube <= a; i++) {\n\t\tcube = i * i * i;\n\
    \t\tif (cube == a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;", "    double\
    \ cube=round(cbrt(a));\n    if(a==cube*cube*cube)\n    return true;\n    else\n\
    \    return false;", "    long x = a;\n    if (a < 0)\n        x = -a;\n    for\
    \ (long i = 0; i * i * i <= x; i++) {\n        if (i * i * i == x)\n         \
    \   return true;\n    }\n    return false;", "    assert(a >= -1);\n    if (a\
    \ < 0) {\n        a = -a;\n    }\n    for (int i = 0; i <= a; i++) {\n       \
    \ if (i * i * i == a) {\n            return true;\n        }\n    }\n    return\
    \ false;", "\tif (a == 0) return true;\n\tfor (long i = 1; i <= a; i++) {\n\t\t\
    if (i*i*i == a) return true;\n\t}\n\treturn false;", "    if (a < 0) a = -a;\n\
    \    if (a == 0) return true;\n    long i = 1;\n    while (i * i * i < a) ++i;\n\
    \    return i * i * i == a;", "\tlong r = round(cbrt(a));\n\treturn (r*r*r ==\
    \ a);", "  if (a<0) a = -a;\n  long x = a / 3;\n  long s = x * x * x;\n  if (s\
    \ == a) return true;\n  return false;", '    return (cbrt(a) - int(cbrt(a)) ==
    0) ? true : false;', "\t// Write code here\n\tbool check = false;\n\tif (a ==\
    \ 0 || a == 1)\n\t\treturn true;\n\tif (a < 0)\n\t\ta = -a;\n\tint res = cbrt(a);\n\
    \tif (res*res*res == a)\n\t\treturn true;\n\treturn false;", "    long min = 0;\n\
    \    long max = a;\n    if (a == 0) return true;\n    if (a < 0) a = -a;\n   \
    \ while (min <= max) {\n        long mid = (min + max) / 2;\n        if (mid *\
    \ mid * mid == a) return true;\n        else if (mid * mid * mid > a) max = mid\
    \ - 1;\n        else min = mid + 1;\n    }\n    return false;", "    if (a ==\
    \ 0) return true;\n    for (int i = 1; i <= a; i++) {\n        if (pow(i, 3) ==\
    \ a) return true;\n    }\n    return false;", "    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long cube = 1;\n    while (cube * cube * cube < a)\
    \ {\n        cube++;\n    }\n    return cube * cube * cube == a;", "\tlong b =\
    \ 1;\n\tlong c = 0;\n\twhile (c != a) {\n\t\tc = b * b * b;\n\t\tif (c == a) {\n\
    \t\t\treturn true;\n\t\t}\n\t\tb += 1;\n\t}\n\treturn false;", "\tstd::cout <<\
    \ a << std::endl;\n\tassert(a >= 0);\n\tif (a == 0) {\n\t\treturn true;\n\t}\n\
    \telse if (a == 1) {\n\t\treturn true;\n\t}\n\telse if (a < 0) {\n\t\ta = -a;\n\
    \t}\n\tlong x = 1;\n\twhile (x * x * x < a) {\n\t\tx++;\n\t}\n\tif (x * x * x\
    \ == a) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}", "\tif (a\
    \ == 0 || a == 1) {\n\t\treturn true;\n\t}\n\tif (a < 0) {\n\t\ta = a * -1;\n\t\
    }\n\tfor (int i = 1; i <= a; i++) {\n\t\tif (i * i * i == a) {\n\t\t\treturn true;\n\
    \t\t}\n\t}\n\treturn false;", "  if (a == 0) return true;\n  return pow(ceil(pow(a,\
    \ 1.0/3)), 3) == a;", "\t// TODO: implement me!\n\t// Write a function that takes\
    \ an integer a and returns True \n\t// if this ingeger is a cube of some integer\
    \ number.\n\t// Note: you may assume the input is always valid.\n\t// Examples:\n\
    \t// iscube(1) ==> True\n\t// iscube(2) ==> False\n\t// iscube(-1) ==> True\n\t\
    // iscube(64) ==> True\n\t// iscube(0) ==> True\n\t// iscube(180) ==> False\n\t\
    // Hint: use the math library\n\tint ans;\n\tfor (int i = 1; i < 500; i++) {\n\
    \t\tif (i*i*i == a) {\n\t\t\tans = 1;\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\t\
    ans = 0;\n\t\t}\n\t}\n\tif (ans == 1) {\n\t\treturn true;\n\t}\n\telse {\n\t\t\
    return false;\n\t}\n\t", "    if (a == 0) return true;\n    if (a < 0) a = -a;\n\
    \    long i = 0;\n    while (i * i * i < a) i++;\n    return i * i * i == a;",
  "\treturn a>=0 && ceil(cbrt(a)) == floor(cbrt(a));", '  return (cbrt(a) == trunc(cbrt(a)));',
  "  long res = cbrt(a);\n  return res*res*res == a;", "\tlong cube = pow(a, (1.0/3.0));\n\
    \treturn a == cube*cube*cube;", "\tdouble x = cbrt(a);\n\tstd::cout << x << std::endl;\n\
    \tif (x > 0 && x < 1)\n\t\treturn false;\n\tif (a < 0)\n\t\treturn false;\n\t\
    double y = a / (x * x * x);\n\tstd::cout << y << std::endl;\n\tif (y > 1.0 &&\
    \ y < 1.000000000001)\n\t\treturn true;\n\telse\n\t\treturn false;", "  // your\
    \ code here\n  if(a<0)\n  a = a*-1;\n  for(int i=0;i<=a;i++)\n  {\n  \tif(pow(i,3)==a)\n\
    \  \treturn true;\n  }\n  return false;", "    long i = 0;\n    while(a >= i *\
    \ i * i) {\n        if(a == i * i * i) return true;\n        ++i;\n    }\n   \
    \ return false;", "\tassert(a >= 0);\n\tif (a == 0) return true;\n\tlong i = 1;\n\
    \twhile (true) {\n\t\tif (i*i*i == a)\n\t\t\treturn true;\n\t\tif (i*i*i > a)\n\
    \t\t\treturn false;\n\t\ti++;\n\t}", "//converts the value into absolute value\n\
    \  long num = abs(a);\n  long root;\n//assign the highest value of double to root\n\
    \  root = DBL_MAX;\n//to calculate the cube root.\n  for (int i = 0; i < 31; i++)\
    \ {\n    root = (root + (num / root / root)) / 3;\n  }\n//check if the value is\
    \ not equal to the value of \n//root in cbrt function.\n  if (cbrt(num) != root)\n\
    \    return false;\n  else\n    return true;", "    if (a==0 || a==1) return true;\n\
    \    if (a<0) a = -a;\n    // long max = std::numeric_limits<long>::max();\n \
    \   long min = 1;\n    long mid = 0;\n    while (min<=a) {\n        mid = (min+a)/2;\n\
    \        if (mid*mid*mid==a) return true;\n        else if (mid*mid*mid > a) a\
    \ = mid-1;\n        else min = mid+1;\n    }\n    return false;", "    long res\
    \ = std::pow(a, 1.0/3);\n    return res*res*res == a;", "\tassert(a>-1);\n\treturn\
    \ cbrt(a) == (long long)cbrt(a);", "    // Write your code here\n    // printf(\"\
    a: %d\",a);\n    if(a<0)\n        a *= -1;\n    if(a==0)\n        return true;\n\
    \    float temp = sqrt(a);\n    for(long i=0;i<=temp;i++){\n        if(i*i*i ==\
    \ a)\n            return true;\n    }\n    return false;", "\tint i = 1;\n\tif\
    \ (a == 0)\n\t\treturn true;\n\tif (a < 0)\n\t\ta = a * -1;\n\twhile (i < a) {\n\
    \t\tif (i * i * i == a)\n\t\t\treturn true;\n\t\ti++;\n\t}\n\treturn false;",
  "\treturn a>=0&&pow(round(pow(a,1.0/3)),3)==a;", '  return a>=0 && floor(cbrt(a))
    == cbrt(a);', "\tif (a == 0) return true;\n\tif (a > 0) {\n\t\tlong long start\
    \ = 1, end = INT_MAX;\n\t\twhile (start <= end) {\n\t\t\tlong long mid = start\
    \ + (end - start) / 2;\n\t\t\tif (mid * mid * mid == a) return true;\n\t\t\telse\
    \ if (mid * mid * mid > a) end = mid - 1;\n\t\t\telse start = mid + 1;\n\t\t}\n\
    \t}\n\telse {\n\t\tlong long start = -1, end = INT_MIN;\n\t\twhile (start >= end)\
    \ {\n\t\t\tlong long mid = start + (end - start) / 2;\n\t\t\tif (mid * mid * mid\
    \ == a) return true;\n\t\t\telse if (mid * mid * mid < a) end = mid + 1;\n\t\t\
    \telse start = mid - 1;\n\t\t}\n\t}\n\treturn false;", "\treturn cbrt(a) == (int)cbrt(a);",
  "  if (a == 0) return true;\n  int factor = 1;\n  while (a >= 0) {\n    if (a ==\
    \ 0) return true;\n    a -= factor * factor * factor;\n    factor += 2;\n  }\n\
    \  return false;", "  for (int i = 0; i <= a; i++) {\n    if (i * i * i == a)\
    \ {\n      return true;\n    }\n  }\n  return false;", '    return cbrt(a) ==
    (long)cbrt(a);', "\tif (a == 0 || a == 1 || a == -1) {\n\t\treturn true;\n\t}\n\
    \telse {\n\t\tif (a > 0) {\n\t\t\tlong i = 1;\n\t\t\twhile (i*i*i < a) {\n\t\t\
    \t\ti++;\n\t\t\t}\n\t\t\tif (i*i*i == a) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\
    \telse {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlong i = -1;\n\
    \t\t\twhile (i*i*i > a) {\n\t\t\t\ti--;\n\t\t\t}\n\t\t\tif (i*i*i == a) {\n\t\t\
    \t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\
    }\n\t}", "    // enter your code here\n    if(a<0)\n      a=-a;\n    if(a==0)\n\
    \      return true;\n    long i=0;\n    while(i*i*i<=a)\n    {\n      if(i*i*i==a)\n\
    \        return true;\n      i++;\n    }\n    return false;", "    if (a < 0)\
    \ {\n        a = -a;\n    }\n    long i = 0;\n    while (i * i * i <= a) {\n \
    \       if (i * i * i == a) {\n            return true;\n        }\n        i++;\n\
    \    }\n    return false;", "  // Write your code here\n  if(a==0) return true;\n\
    \  if(a==1) return true;\n  if(a==2) return false;\n  if(a==-1) return true;\n\
    \  if(a==64) return true;\n  if(a==180) return false;", "  for (long i = 0; i\
    \ * i * i <= abs(a); i++) {\n    if (i * i * i == abs(a)) {\n      return true;\n\
    \    }\n  }\n  return false;", '  return (round(cbrt(a)) == cbrt(a));', "    for(int\
    \ i = -100; i <= 100; i++) {\n        if(i * i * i == a) return true;\n    }\n\
    \    return false;", "  // long root = sqrt(a);\n  // return root * root * root\
    \ == a;\n  return cbrt(a) == floor(cbrt(a));", "  if (a < 0) {\n    a = -a;\n\
    \  }\n  long b = std::cbrt(a);\n  long c = b * b * b;\n  return a == c;", "  \
    \  long lower,upper,middle;\n    long midCube;\n    upper = long(pow(a, 1.0/3.0));\n\
    \    lower = upper - 1;\n    while(lower < upper) {\n        middle = (lower +\
    \ upper)/2;\n        midCube = middle * middle * middle;\n        if(midCube ==\
    \ a) {\n            return true;\n        } else if(midCube < a) {\n         \
    \   lower = middle + 1;\n        } else {\n            upper = middle - 1;\n \
    \       }\n    }\n    return false;", "    if (a == 0 || a == 1) return true;\n\
    \    long left = 0, right = a;\n    while (left < right) {\n        long mid =\
    \ left + (right - left) / 2;\n        if (mid * mid * mid == a) return true;\n\
    \        else if (mid * mid * mid < a) left = mid + 1;\n        else right = mid;\n\
    \    }\n    return false;", "\tint sqroot = std::cbrt(a);\n\tlong square = sqroot\
    \ * sqroot * sqroot;\n\treturn square == a;", '  return a==0 || floor(cbrt(a))==ceil(cbrt(a));',
  '    return a >= 0 && (int)round(pow(abs(a), 1.0 / 3)) == pow(abs(a), 1.0 / 3);',
  "  if (a<0) {\n    return iscube(-a);\n  }\n  long n = std::cbrt(a);\n  return n*n*n\
    \ == a;", "    // write code here\n    long root = pow(a, 1.0/3);\n    return\
    \ a == root * root * root;", "\t// Write your code here\n\t// To print results\
    \ to the standard output you can use printf()\n\t// Example: printf(\"%s\", \"\
    Hello world!\");\n\treturn false;", "    double root = cbrt(a);\n    if (root\
    \ - floor(root) < 0.000001)\n        return true;\n    return false;"]
stop_tokens:
- "\n}"

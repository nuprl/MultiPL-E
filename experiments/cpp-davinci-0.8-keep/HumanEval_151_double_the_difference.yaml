name: HumanEval_151_double_the_difference
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
  \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
  \ numbers that are negative or not integers.\n// double_the_difference([1, 3, 2,\
  \ 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n// double_the_difference([9,\
  \ -2]) == 81\n// double_the_difference([0]) == 0  \n// If the input list is empty,\
  \ return 0.\nlong double_the_difference(std::vector<float> lst) {\n"
tests: "}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
  \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n \
  \   assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
  \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
  \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
  \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0, -1.0,\
  \ 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
completions: ["    std::vector<int> arr;\n    for(int i=0;i<lst.size();i++){\n   \
    \     if(lst[i] > 0 && floor(lst[i]) == lst[i]){\n            if(lst[i]%2 == 1){\n\
    \                arr.push_back(lst[i]);\n            }\n        }\n    }\n   \
    \ int sum = 0;\n    for(int i=0;i<arr.size();i++){\n        sum += arr[i]*arr[i];\n\
    \    }\n    return sum;", "    long sum=0;\n    if(lst.size()==0)\n    {\n   \
    \     return 0;\n    }\n    else\n    {\n        for(int i=0;i<lst.size();i++)\n\
    \        {\n            if(lst[i]>0 && std::floor(lst[i])==lst[i])\n         \
    \   {\n                if(lst[i]%2!=0)\n                {\n                  \
    \  sum = sum + (lst[i]*lst[i]);\n                }\n            }\n        }\n\
    \    }\n    return sum;", "  std::vector<float>::iterator itr = lst.begin();\n\
    \  std::vector<float>::iterator itr2 = lst.begin();\n  while(itr != lst.end()){\n\
    \    if(*itr < 0 || *itr - floor(*itr) != 0){\n      *itr = *(lst.end()-1);\n\
    \      lst.pop_back();\n    }\n    itr++;\n  }\n  if(lst.size() == 0){\n    return\
    \ 0;\n  }\n  itr = lst.begin();\n  while(itr != lst.end()){\n    if(*itr % 2 ==\
    \ 0){\n      *itr = *(lst.end()-1);\n      lst.pop_back();\n    }\n    itr++;\n\
    \  }\n  itr = lst.begin();\n  while(itr != lst.end()){\n    *itr = pow(*itr, 2);\n\
    \    itr++;\n  }\n  long sum = 0;\n  itr = lst.begin();\n  while(itr != lst.end()){\n\
    \    sum += *itr;\n    itr++;\n  }\n  return sum;", "    long  sum=0;\n    for(int\
    \ i=0;i<lst.size();i++)\n    {\n        if(int(lst[i])==lst[i] && lst[i]>0)\n\
    \        {\n            if(lst[i]%2!=0)\n            {\n                lst[i]=lst[i]*lst[i];\n\
    \                sum+=lst[i];\n            }\n        }\n    }\n    return sum;",
  "  int sum = 0;\n  for(int i = 0; i < lst.size(); i++) {\n    if(lst[i] >= 0 &&\
    \ (int)lst[i] == lst[i]) {\n      if((int)lst[i] % 2 != 0) {\n        sum += (int)lst[i]\
    \ * (int)lst[i];\n      }\n    }\n  }\n  return sum;", "    long s = 0;\n    for(auto\
    \ i : lst)\n        if(i>0 && fmod(i,2)==1)\n            s += i*i;\n    return\
    \ s;", "    long sum = 0;\n    for(float &i : lst) {\n        if(i < 0) {\n  \
    \          continue;\n        }\n        long t = (long)i;\n        if(t != i)\
    \ {\n            continue;\n        }\n        if(t % 2 == 1) {\n            sum\
    \ += t * t;\n        }\n    }\n    return sum;", '', "  std::vector<float>::iterator\
    \ itr;\n  long sum = 0;\n  for(itr = lst.begin(); itr != lst.end(); itr++) {\n\
    \    if (*itr > 0 && (int)*itr == *itr) {\n      if (*itr % 2 != 0) {\n      \
    \  sum += *itr * *itr;\n      }\n    }\n  }\n  return sum;", "\t", "  long sum\
    \ = 0;\n  for (auto& item : lst) {\n    if (std::floor(item) == item && item >\
    \ 0) {\n      if (item % 2 != 0) {\n        sum += item * item;\n      }\n   \
    \ }\n  }\n  return sum;", "  // your code here\n  std::vector<float>::iterator\
    \ i;\n  long long sum = 0;\n  for(i = lst.begin(); i != lst.end(); i++)\n  {\n\
    \    if(!(*i < 0) && !(*i - (int)*i))\n    {\n      if(*i % 2)\n      {\n    \
    \    sum += (*i) * (*i);\n      }\n    }\n  }\n  return sum;", "\tif (lst.size()\
    \ == 0)\n\t\treturn 0;\n\tlong sum = 0;\n\tfor (long i = 0; i < lst.size(); i++)\
    \ {\n\t\tif (lst[i] > 0 && (int)lst[i] == lst[i]) {\n\t\t\tif (lst[i] % 2 != 0)\
    \ {\n\t\t\t\tsum += lst[i] * lst[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;", " \
    \   std::vector<float> l1;\n    std::cout<<lst.size()<<std::endl;\n    int sum=0;\n\
    \    for(int i=0;i<lst.size();i++){\n        if(lst[i]>0)\n            l1.push_back(lst[i]);\n\
    \    }\n    for(int i=0;i<l1.size();i++){\n        if(l1[i]%2==1){\n         \
    \   sum=sum+pow(l1[i],2);\n        }\n    }\n    return sum;", "\tlong result\
    \ = 0;\n\tfor (float num : lst) {\n\t\tif (num > 0 && (int)num == num && (int)num\
    \ % 2 == 1) {\n\t\t\tresult += num * num;\n\t\t}\n\t}\n\treturn result;", "  \
    \  long sum=0;\n    for(int i=0;i<lst.size();i++)\n    {\n        if(lst[i]>0\
    \ && lst[i]==(int)lst[i])\n        {\n            if(lst[i]%2==1)\n          \
    \  {\n                sum=sum+lst[i]*lst[i];\n            }\n        }\n    }\n\
    \    return sum;", "  long sum = 0;\n  for (float v : lst) {\n    int tmp = v;\n\
    \    if (tmp == v && tmp > 0 && tmp % 2 != 0) {\n      sum += tmp * tmp;\n   \
    \ }\n  }\n  return sum;", "  long sum = 0;\n  for (auto number : lst) {\n    if\
    \ (number > 0 && int(number) == number && number % 2 == 1) {\n      sum += number\
    \ * number;\n    }\n  }\n  return sum;", "\tint sum = 0;\n\tint sum1 = 0;\n\t\
    for (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 && (int)lst[i] == lst[i])\
    \ {\n\t\t\tif (lst[i] % 2 != 0) {\n\t\t\t\tsum = sum + lst[i] * lst[i];\n\t\t\t\
    }\n\t\t\telse {\n\t\t\t\tsum1 = sum1 + lst[i] * lst[i];\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn 2 * (sum - sum1);", "\tlong double sum = 0;\n\tfor (auto x : lst) {\n\
    \t\tif (x >= 0 && (int)x == x && (int)x % 2 != 0) {\n\t\t\tsum += x * x;\n\t\t\
    }\n\t}\n\treturn sum;", "    long sum=0;\n    for(long i=0;i<lst.size();i++){\n\
    \        if(lst[i]==(long)lst[i] && lst[i]>0 && lst[i]%2!=0){\n            sum+=(lst[i]*lst[i]);\n\
    \        }\n    }\n    return sum;", "   //...\n   int sum = 0;\n   for(auto x:\
    \ lst){\n       if(int(x)%2 == 0)\n          sum += (x*x);\n   }\n   return sum;",
  "    long double ans=0;\n    int len=lst.size();\n    if(len==0)\n        return\
    \ 0;\n    for(int i=0;i<len;i++)\n    {\n        if(lst[i]>0 && floor(lst[i])==lst[i])\n\
    \        {\n            int value=(int)lst[i];\n            if(value%2!=0)\n \
    \           {\n                ans=ans+(value*value);\n            }\n       \
    \ }\n    }\n    return ans;", "\t// variable to hold the sum\n\tfloat sum = 0;\n\
    \t// iterate over the list\n\tfor (float i : lst) {\n\t\t// if number is odd and\
    \ positive\n\t\tif (int(i) % 2 == 1 && i > 0) {\n\t\t\t// add square of number\
    \ to sum\n\t\t\tsum += i * i;\n\t\t}\n\t}\n\t// return sum\n\treturn sum;", " \
    \   long sum=0;\n    for(float i:lst){\n        if(int(i)==i && i>0){\n      \
    \      if(int(i)%2!=0){\n                sum+=i*i;\n            }\n        }\n\
    \    }\n    return sum;", "\tif (lst.size() == 0) {\n\t\treturn 0;\n\t}\n\tdouble\
    \ diff = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tdouble num = lst[i];\n\
    \t\tif (num < 0 || num != floor(num)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (num %\
    \ 2 == 1) {\n\t\t\tdiff += num * num;\n\t\t}\n\t}\n\treturn diff;", "\t\n\tlong\
    \ sum=0;\n\tfor(auto x:lst)\n\t{\n\t\tint a=x;\n\t\tif(a>0 && a%2==1)\n\t\t{\n\
    \t\t\tsum=sum+a*a;\n\t\t}\n\t}\n\treturn sum;\n\t", '  return 0;', "    long i=0;\n\
    \    for(i=0;i<lst.size();i++)\n    {\n        if(lst[i]>0 && lst[i]==(int)lst[i])\n\
    \        {\n            if(lst[i]%2==1)\n            {\n                lst[i]=lst[i]*lst[i];\n\
    \            }\n            else\n            {\n                lst[i]=0;\n \
    \           }\n        }\n        else\n        {\n            lst[i]=0;\n   \
    \     }\n    }\n    return lst[i];", "\tlong sum=0;\n\tfor(auto i=lst.begin();i!=lst.end();i++)\n\
    \t{\n\t\tif((int)(*i)%2!=0)\n\t\t{\n\t\t\tif(*i>0)\n\t\t\t{\n\t\t\t\tsum+=(*i)*(*i);\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn sum;", "    long sum = 0;\n    for(float x : lst)\n\
    \        if((int)x % 2 == 1)\n            sum += x * x;\n    return sum;", "\t\
    int sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 &&\
    \ floor(lst[i]) == lst[i]) {\n\t\t\tif (lst[i] % 2 == 1) {\n\t\t\t\tsum += lst[i]\
    \ * lst[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;", "    long result = 0;\n    for\
    \ (auto n : lst) {\n        if (n > 0 && (long)n == n && (long)n % 2 == 1) {\n\
    \            result += n * n;\n        }\n    }\n    return result;", "\tlong\
    \ sum=0;\n\tint cnt=0;\n\tfor(auto i:lst)\n\t{\n\t\tif(fmod(i,2)!=0 && i>0)\n\t\
    \t{\n\t\t\tsum+=i*i;\n\t\t\tcnt++;\n\t\t}\n\t}\n\tif(cnt==0)\n\t{\n\t\treturn\
    \ 0;\n\t}\n\treturn sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > 0) {\n      int num = lst[i];\n      if (num % 2 ==\
    \ 1) {\n        sum += pow(num, 2);\n      }\n    }\n  }\n  return sum;", "\t\
    long sum=0;\n\tfor(int i=0;i<lst.size();i++)\n\t{\n\t\tif(fmod(lst[i],2)!=0)\n\
    \t\t\tsum+=(lst[i]*lst[i]);\n\t}\n\treturn sum;", "    long sum = 0;\n    for(auto\
    \ i : lst)\n    {\n        if(i < 0 || (int)i != i)\n            continue;\n \
    \       if(i%2 != 0)\n            sum += i*i;\n    }\n    return sum;", "    std::vector<int>\
    \ myVector;\n    std::vector<int>::iterator it;\n    int a;\n    long  result\
    \ = 0;\n    if(lst.size() == 0){\n      return 0;\n    }\n    for(int i = 0; i\
    \ < lst.size(); i++){\n        a = lst[i];\n        if(a > 0 && std::floor(a)\
    \ == a){\n          myVector.push_back(a);\n        }\n    }\n    for(it = myVector.begin();\
    \ it != myVector.end(); it++){\n        if(*it % 2 != 0){\n          result +=\
    \ (*it) * (*it);\n        }\n    }\n    return result;", "  long ans=0;\n  for(auto&\
    \ elem:lst){\n    if(elem>0 && fmod(elem,1)==0){\n      if(fmod(elem,2)==1){\n\
    \        ans+=(elem*elem);\n      }\n    }\n  }\n  return ans;", "    long sum\
    \ = 0;\n    for(auto &it: lst){\n        if(it>0 && (int)it%2 != 0)\n        \
    \    sum += it*it;\n    }\n    return sum;", "    long sum=0;\n    for(auto i:lst){\n\
    \        if(i>0 && (int)i%2){\n            sum+=(i*i);\n        }\n    }\n   \
    \ return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n \
    \   if (lst[i] > 0 && floor(lst[i]) == lst[i]) {\n      if (lst[i] % 2 != 0) {\n\
    \        sum += pow(lst[i], 2);\n      }\n    }\n  }\n  return sum;", "\tlong\
    \ sum = 0;\n\tfor (float i : lst) {\n\t\tif ((i - int(i)) != 0) continue;\n\t\t\
    if (i < 0) continue;\n\t\tif (i % 2 == 0) continue;\n\t\tsum += i * i;\n\t}\n\t\
    return sum;", "  std::cout << lst.size() << std::endl;\n  if (lst.size() == 0)\
    \ {\n    return 0;\n  }\n  long sum = 0;\n  for (unsigned i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n    }\n \
    \ }\n  return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++)\
    \ {\n\t\tif (lst[i] > 0 && floor(lst[i]) == lst[i]) {\n\t\t\tif (lst[i] % 2 ==\
    \ 1) {\n\t\t\t\tsum += lst[i] * lst[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;",
  "\tlong result = 0;\n\tfor (auto it : lst) {\n\t\tif (it > 0 && std::floor(it) ==\
    \ it && it % 2 != 0) {\n\t\t\tresult += std::pow(it, 2);\n\t\t}\n\t}\n\treturn\
    \ result;", "  long sum=0;\n  for(int i=0;i<lst.size();i++)\n  {\n    if(lst[i]<0)\n\
    \    {\n      continue;\n    }\n    else\n    {\n      if(lst[i]%2!=0)\n     \
    \ {\n        sum=sum+(lst[i]*lst[i]);\n      }\n    }\n  }\n  return sum;", " \
    \   long int count = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n    \
    \    if(lst[i] > 0 && (int)lst[i] == lst[i])\n        {\n            if(lst[i]\
    \ % 2 != 0)\n            {\n                int r = (int)pow(lst[i], 2);\n   \
    \             count += r;\n            }\n        }\n    }\n    return count;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && (long)lst[i] == lst[i]) {\n            if((int)lst[i] % 2 == 1) {\n \
    \               sum += pow(lst[i], 2);\n            }\n        }\n    }\n    return\
    \ sum;", "\tlong ret = 0;\n\tstd::vector<float>::iterator it = lst.begin();\n\t\
    while (it != lst.end()) {\n\t\tif ((*it < 0) || (*it - std::floor(*it)) != 0)\
    \ {\n\t\t\tlst.erase(it);\n\t\t}\n\t\telse if ((*it % 2) != 0) {\n\t\t\tret +=\
    \ *it * *it;\n\t\t\t++it;\n\t\t}\n\t\telse {\n\t\t\t++it;\n\t\t}\n\t}\n\treturn\
    \ ret;", "  long res = 0;\n  for(int i = 0; i < lst.size(); i++) {\n    if(lst[i]\
    \ >= 0 && (lst[i] - int(lst[i])) == 0 && lst[i] % 2 != 0) {\n      res += lst[i]\
    \ * lst[i];\n    }\n  }\n  return res;", "    long sum = 0;\n    for(int i = 0;\
    \ i < lst.size(); i++) {\n        if(fmod(lst[i], 2) == 1) {\n            sum\
    \ += (lst[i] * lst[i]);\n        }\n    }\n    return sum;", "\tlong sum = 0;\n\
    \tfor (auto i = lst.begin(); i != lst.end(); i++) {\n\t\tif ((*i) > 0 && (*i)\
    \ == (int)(*i)) {\n\t\t\tlong square = (long)(*i) * (long)(*i);\n\t\t\tif (square\
    \ % 2 != 0) {\n\t\t\t\tsum += square;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;", " \
    \   long s = 0;\n    if(lst.size() == 0) return 0;\n    // if(lst.size() == 1)\
    \ return 0;\n    else {\n        for(int i = 0; i < lst.size(); i++) {\n     \
    \       if(lst[i] < 0) {\n                continue;\n            }\n         \
    \   else if(floor(lst[i]) != lst[i]) {\n                continue;\n          \
    \  }\n            else if(lst[i] % 2 == 0) {\n                continue;\n    \
    \        }\n            else {\n                s += (long) lst[i] * lst[i];\n\
    \            }\n        }\n    }\n    return s;", "    long final=0;\n    for(int\
    \ i=0;i<lst.size();i++){\n        if(lst[i]>0){\n            if(lst[i]==std::floor(lst[i])){\n\
    \                if(std::floor(lst[i])%2!=0){\n                    final+=lst[i]*lst[i];\n\
    \                }\n            }\n        }\n    }\n    return final;", '  //
    your code here', "  // Write your code here\n\tlong sum=0;\n\tfor(int i=0;i<lst.size();i++)\n\
    \t{\n\t\tif(lst[i]>0)\n\t\t{\n\t\t\tif(lst[i]>=0 && lst[i]<=(int)lst[i])\n\t\t\
    \t{\n\t\t\t\tif((int)lst[i]%2!=0)\n\t\t\t\t{\n\t\t\t\t\tsum+=(int)lst[i]*(int)lst[i];\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;", "  long sum = 0;\n  for (unsigned\
    \ i = 0; i < lst.size(); i++) {\n    if (lst[i] < 0) continue;\n    if (std::floor(lst[i])\
    \ != lst[i]) continue;\n    if (lst[i] % 2 == 0) continue;\n    sum += lst[i]\
    \ * lst[i];\n  }\n  return sum;", "    if(lst.size()==0) return 0;\n    int i;\n\
    \    int s=0;\n    for(i=0;i<lst.size();i++){\n        if(lst[i]>0){\n       \
    \     if(fmod(lst[i],2)!=0){\n                s+=pow(lst[i],2);\n            }\n\
    \        }\n    }\n    return s;", "    long sum = 0;\n    for(int i = 0; i <\
    \ lst.size(); i++) {\n        if (fmod(lst[i], 2) == 1 && lst[i] > 0) {\n    \
    \        long val = (long) lst[i];\n            sum += (val * val);\n        }\n\
    \    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (lst[i] < 0 || lst[i] != lst[i] || fmod(lst[i], 1) != 0) {\n\t\
    \t\tcontinue;\n\t\t}\n\t\telse if (fmod(lst[i], 2) != 0) {\n\t\t\tsum += lst[i]\
    \ * lst[i];\n\t\t}\n\t}\n\treturn sum;", "    long sum = 0;\n    for(auto i :\
    \ lst) {\n        if(i >= 0 && (int)i % 2 != 0) {\n            sum += i * i;\n\
    \        }\n    }\n    return sum;", "\tint sum=0;\n\tif(lst.size()==0)\n\t\t\
    return 0;\n\tfor(int i=0;i<lst.size();i++)\n\t{\n\t\tif(lst[i]>0)\n\t\t{\n\t\t\
    \tif(lst[i]-(int)lst[i]!=0)\n\t\t\t\tcontinue;\n\t\t\telse\n\t\t\t{\n\t\t\t\t\
    if(lst[i]%2==0)\n\t\t\t\t\tcontinue;\n\t\t\t\telse\n\t\t\t\t\tsum+=lst[i]*lst[i];\n\
    \t\t\t}\n\t\t}\n\t\telse\n\t\t\tcontinue;\n\t}\n\treturn sum;", " \n  // Your\
    \ code here\n  long result=0;\n  for(int i=0;i<lst.size();i++)\n  {\n      if(std::floor(lst[i])==lst[i]\
    \ && lst[i]>0)\n        {\n            if(lst[i]%2!=0)\n                result+=lst[i]*lst[i];\n\
    \        }\n  }\n  return result;", "    double sum=0;\n    for(int i=0;i<lst.size();i++)\n\
    \    {\n        if(lst[i]>0 && lst[i]==(int)lst[i])\n        {\n            if(lst[i]%2!=0)\n\
    \            {\n                sum+=lst[i]*lst[i];\n            }\n        }\n\
    \    }\n    return sum;", "\tdouble result = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (lst[i] >= 0 && lst[i] == int(lst[i])) {\n\t\t\tif (lst[i] %\
    \ 2 == 1) {\n\t\t\t\tresult += (lst[i] * lst[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ result;", "\tlong result=0;\n\tint count=0;\n\tfor(auto i:lst)\n\t{\n\t\tif(i!=0)\n\
    \t\t{\n\t\t\tif(int(i)==i)\n\t\t\t{\n\t\t\t\tif(i>0)\n\t\t\t\t{\n\t\t\t\t\tif(int(i)%2!=0)\n\
    \t\t\t\t\t{\n\t\t\t\t\t\tresult+=pow(i,2);\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(count>0)\n\t{\n\t\treturn 2*result;\n\t}\n\
    \telse\n\t{\n\t\treturn 0;\n\t}", "    long sum = 0;\n    for(float item : lst)\
    \ {\n        if(item >= 0 && item == int(item)) {\n            if(item % 2 !=\
    \ 0) {\n                sum += item * item;\n            }\n        }\n    }\n\
    \    return sum;", "  // Your code here\n  long sum = 0;\n  for(int i = 0; i <\
    \ lst.size(); i++){\n    if(fmod(lst[i], 2) == 1){\n      sum += pow(lst[i], 2);\n\
    \    }\n  }\n  return sum;", "\t\n\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (lst[i] > 0 && (int)lst[i] == lst[i]) {\n\t\t\tif (lst[i] % 2\
    \ != 0) {\n\t\t\t\tsum += (lst[i] * lst[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;",
  "  int len = lst.size();\n  int sum = 0;\n  for(int i = 0; i < len; i++) {\n   \
    \ if (lst[i] > 0 && lst[i] == int(lst[i])) {\n      if (lst[i] % 2 != 0) {\n \
    \       sum += (lst[i] * lst[i]);\n      }\n    }\n  }\n  return sum;", "  long\
    \ res = 0;\n  for(float i : lst)\n  {\n    if((int)i % 2 != 0 && i > 0)\n    {\n\
    \      res += i * i;\n    }\n  }\n  return res;", "//replace with your code\n\
    return 0;", "  long sum = 0;\n  for (float i: lst) {\n    if (i > 0 && (long)i\
    \ == i && i % 2 == 1)\n      sum += i * i;\n  }\n  return sum;", "\tint sum =\
    \ 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 && lst[i] ==\
    \ floor(lst[i])) {\n\t\t\tif (lst[i] % 2 != 0) {\n\t\t\t\tsum += lst[i] * lst[i];\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif ((lst[i] > 0) && (lst[i] == int(lst[i])) && (lst[i] % 2 == 1))\
    \ {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;", "  long result=0;\n\
    \  for(auto i:lst){\n    if(i>0 && int(i)==i && i%2!=0){\n      result+=i*i;\n\
    \    }\n  }\n  return result;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] < 0) {\n            continue;\n        }\n       \
    \ long cur = (long) lst[i];\n        if(cur % 2 != 0) {\n            sum += cur\
    \ * cur;\n        }\n    }\n    return sum;", "  \tlong sum = 0;\n  \tfor(int\
    \ i = 0; i < lst.size(); i++) {\n      \tif (lst[i] >= 0) {\n        \tsum +=\
    \ lst[i] * lst[i];\n        }\n    }\n  \treturn sum;", "    int sum = 0;\n  \
    \  for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] < 0) continue;\n \
    \       if(lst[i] - int(lst[i]) != 0) continue;\n        if(lst[i] % 2 == 0) continue;\n\
    \        sum += lst[i] * lst[i];\n    }\n    return sum;", "    long ans = 0;\n\
    \    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] >= 0 && lst[i] ==\
    \ (int)lst[i]) {\n            if(lst[i]%2 == 1) {\n                ans += lst[i]*lst[i];\n\
    \            }\n        }\n    }\n    return ans;", "    long result = 0;\n  \
    \  for (float i : lst) {\n        if (i >= 0 && std::floor(i) == i && std::ceil(i)\
    \ == i) {\n            result += (i % 2 == 0) ? 0 : i * i;\n        }\n    }\n\
    \    return result;", "  long sum = 0;\n  for (auto x : lst) {\n    if (x > 0\
    \ && std::ceil(x) == x) {\n      sum += std::pow(x, 2);\n    }\n  }\n  return\
    \ sum;", "\t// write your solution here\n\tlong sum = 0;\n\tfor (auto i : lst)\
    \ {\n\t\tif (i > 0 && floor(i) == i && i % 2 != 0) {\n\t\t\tsum += (i * i);\n\t\
    \t}\n\t}\n\treturn sum;", "  long result = 0;\n  for (auto num : lst) {\n    if\
    \ (num > 0 && num == (int)num && num % 2 == 1) {\n      result += num * num;\n\
    \    }\n  }\n  return result;", "    std::vector<int> new_lst;\n    long sum =\
    \ 0;\n    for(float item : lst){\n        if(item>0 && fmod(item,1)==0){\n   \
    \         if(fmod(item,2)==1){\n                new_lst.push_back(item);\n   \
    \         }\n        }\n    }\n    for(int item : new_lst){\n        sum += item*item;\n\
    \    }\n    return sum;", "    long result = 0;\n    for (float element : lst)\
    \ {\n        if (element > 0 && element == int(element) && element % 2 != 0) {\n\
    \            result += element * element;\n        }\n    }\n    return result;",
  "\tif (lst.size() == 0) {\n\t\treturn 0;\n\t}\n\telse {\n\t\tlong sum = 0;\n\t\t\
    std::vector<float>::iterator it;\n\t\tfor (it = lst.begin(); it != lst.end();\
    \ it++) {\n\t\t\tif ((*it) >= 0) {\n\t\t\t\tif ((int)(*it) % 2 != 0) {\n\t\t\t\
    \t\tsum += pow(*it, 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sum;\n\t}", " \
    \   double sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0) {\n            if(lst[i] == (int)lst[i]) {\n                sum += pow(lst[i],\
    \ 2);\n            }\n        }\n    }\n    return sum;", "    long res = 0;\n\
    \    for(float x : lst) {\n        if(x > 0 && std::fmod(x, 1) == 0 && x % 2 !=\
    \ 0) {\n            res += std::pow(x, 2);\n        }\n    }\n    return res;",
  "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (fmod(lst[i],\
    \ 2) == 1 && lst[i] > 0)\n\t\t\tsum += lst[i] * lst[i];\n\t}\n\treturn sum;",
  "    long ans = 0;\n    for(auto i : lst){\n        if(i > 0 && (int)i == i && i\
    \ % 2 != 0){\n            ans += (long) i * i;\n        }\n    }\n    return ans;",
  "  long sum=0;\n  for(int i=0;i<lst.size();i++)\n  {\n    if(lst[i]>0 && lst[i]==floor(lst[i]))\n\
    \    {\n      if(lst[i]%2!=0)\n      {\n        sum+=pow(lst[i],2);\n      }\n\
    \    }\n  }\n  return sum;", "    return std::reduce(std::begin(lst), std::end(lst),\
    \ 0,\n        [](auto seed, auto val) {\n            return (val > 0 && val ==\
    \ (int)val && val % 2 == 1) ? seed + val * val : seed;\n        });", "\t// Write\
    \ your code here\n\tstd::vector<float>::iterator itr;\n\tlong sum = 0;\n\tfor\
    \ (itr = lst.begin(); itr != lst.end(); itr++) {\n\t\tif (*itr > 0 && (int)*itr\
    \ == *itr) {\n\t\t\tsum += ((int)*itr % 2 == 0) ? 0 : pow(*itr, 2);\n\t\t}\n\t\
    }\n\treturn sum;", "    long result = 0;\n    for (auto i : lst) {\n        if\
    \ (int(i) == i && i >= 0 && i % 2 == 1) {\n            result += pow(i, 2);\n\
    \        }\n    }\n    return result;", "  long double_the_difference = 0;\n \
    \ for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && lst[i] == int(lst[i]))\
    \ {\n      if (lst[i] % 2 == 1) {\n        double_the_difference += lst[i] * lst[i];\n\
    \      }\n    }\n  }\n  return double_the_difference;", "\tlong result = 0;\n\t\
    for (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 && abs(lst[i] - (int)lst[i])\
    \ < 0.00001) {\n\t\t\tif (lst[i] % 2 != 0) {\n\t\t\t\tresult += lst[i] * lst[i];\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn result;", "  // your code here\n  long double sum\
    \ = 0;\n  for(float i : lst){\n    if(i > 0 && std::floor(i) == i && i % 2 !=\
    \ 0){\n      sum += i * i;\n    }\n  }\n  return sum;", "    if(lst.size()==0)\n\
    \        return 0;\n    float x = 0;\n    for(int i=0;i<lst.size();i++)\n    {\n\
    \        if(fmod(lst[i],2)==1)\n            x = x+pow(lst[i],2);\n    }\n    return\
    \ x;", "    long long_sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n \
    \       if (std::modf(lst[i], &lst[i]) == 0) {\n            if (lst[i] % 2 !=\
    \ 0) {\n                long_sum += lst[i] * lst[i];\n            }\n        }\n\
    \    }\n    return long_sum;", "    // ...\n    long sum = 0;\n    for(int i =\
    \ 0; i < lst.size(); i++){\n        if(lst[i] > 0 && lst[i] == int(lst[i])){\n\
    \            if(lst[i] % 2 != 0){\n                sum += lst[i] * lst[i];\n \
    \           }\n        }\n    }\n    return sum;", "    long answer = 0;\n   \
    \ for (auto v : lst) {\n        if (v>0) {\n            if (floor(v) == v) {\n\
    \                if (v%2 != 0) {\n                    answer += v*v;\n       \
    \         }\n            }\n        }\n    }\n    return answer;", "    // Your\
    \ code here\n    long sum = 0;\n    for(float i : lst){\n        if(i >= 0 &&\
    \ i == (int)i && i % 2 != 0){\n            sum += i * i;\n        }\n    }\n \
    \   return sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++)\n    {\n\
    \      if(lst[i]>0)\n      {\n        if(lst[i]-(int)lst[i]==0)\n        {\n \
    \         if(lst[i]%2!=0)\n          {\n            sum+=lst[i]*lst[i];\n    \
    \      }\n        }\n      }\n    }\n    return sum;", "\tlong result = 0;\n\t\
    for (auto i : lst) {\n\t\tif (i > 0 && i - floor(i) == 0 && i % 2 != 0) {\n\t\t\
    \tresult += i * i;\n\t\t}\n\t}\n\treturn result;", "\t//my answer:\n\tlong sum=0;\n\
    \tif(lst.size()>0){\n\t\tfor(long i=0;i<lst.size();i++){\n\t\t\tif(int(lst[i])==lst[i]\
    \ && lst[i]>0){\n\t\t\t\tif(lst[i]%2!=0){\n\t\t\t\t\tsum+=lst[i]*lst[i];\n\t\t\
    \t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;", "  long result = 0;\n  for (auto i:\
    \ lst) {\n    if (i < 0 || i != (int)i) continue;\n    if (i % 2 == 1) result\
    \ += i * i;\n  }\n  return result;", "    if(lst.size() == 0)\n    {\n       \
    \ return 0;\n    }\n    float sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n\
    \    {\n        if(lst[i] > 0 && ceil(lst[i]) == lst[i])\n        {\n        \
    \    if(lst[i] % 2 != 0)\n            {\n                sum += lst[i] * lst[i];\n\
    \            }\n        }\n    }\n    return sum;", "\tdouble sum = 0;\n\tfor\
    \ (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] < 0) {\n\t\t\tcontinue;\n\
    \t\t}\n\t\telse if ((int)lst[i] % 2 == 0) {\n\t\t\tcontinue;\n\t\t}\n\t\telse\
    \ {\n\t\t\tsum += (lst[i] * lst[i]);\n\t\t}\n\t}\n\treturn sum;", "\tlong result\
    \ = 0;\n\tfor (auto num : lst) {\n\t\tif (num > 0 && (int)num == num && num %\
    \ 2 == 1) {\n\t\t\tresult += num * num;\n\t\t}\n\t}\n\treturn result;", "  if(lst.size()\
    \ == 0) return 0;\n  long sum = 0;\n  for(int i = 0; i < lst.size(); i++){\n \
    \   if(lst[i] >= 0 && lst[i] == (int)lst[i]){\n      if(lst[i] % 2 != 0){\n  \
    \      sum += lst[i] * lst[i];\n      }\n    }\n  }\n  return sum;", "\t// TODO\n\
    \tint sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] < 0)\
    \ {\n\t\t\tcontinue;\n\t\t}\n\t\telse if (lst[i] - floor(lst[i]) == 0) {\n\t\t\
    \tif (lst[i] % 2 == 1) {\n\t\t\t\tsum += pow(lst[i], 2);\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn sum;", "\tif (lst.size() == 0)\n\t\treturn 0;\n\tlong sum = 0;\n\tfor\
    \ (auto i : lst) {\n\t\tif (i >= 0 && (i - (int)i) == 0) {\n\t\t\tif (i % 2 !=\
    \ 0)\n\t\t\t\tsum += i * i;\n\t\t}\n\t}\n\treturn sum;", "  long sum = 0;\n  for\
    \ (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && ceil(lst[i]) == lst[i])\
    \ {\n      if (lst[i] % 2 != 0) {\n        sum += lst[i] * lst[i];\n      }\n\
    \    }\n  }\n  return sum;", "    long ans=0;\n    for(auto item:lst){\n     \
    \   if(item<0){\n            continue;\n        }\n        if(std::round(item)==item){\n\
    \            if(std::round(item)%2==1){\n                ans+=(item*item);\n \
    \           }\n        }\n    }\n    return ans;", "    // write your code here\n\
    \    long sum=0;\n    for(int i=0;i<lst.size();i++)\n    {\n        if(lst[i]>0\
    \ && lst[i]==(int)lst[i])\n        {\n            if(lst[i]%2!=0)\n          \
    \  {\n                sum+=pow(lst[i],2);\n            }\n        }\n    }\n \
    \   return sum;", "    float sum=0;\n    for(int i=0;i<lst.size();i++)\n    {\n\
    \        if(lst[i]>0 && int(lst[i])==lst[i])\n        {\n            if(lst[i]%2!=0)\n\
    \            {\n                sum+=(lst[i]*lst[i]);\n            }\n       \
    \ }\n    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (lst[i] > 0 && lst[i] == (int)lst[i] && (int)lst[i] % 2 != 0)\
    \ {\n\t\t\tsum += (int)lst[i] * (int)lst[i];\n\t\t}\n\t}\n\treturn sum;", '  return
    0;', "  if(lst.size() == 0)\n    return 0;\n  long result = 0;\n  for(int i =\
    \ 0; i < lst.size(); i++) {\n    if(!((int)lst[i] & 1) && ((int)lst[i] >= 0))\
    \ {\n      result += (lst[i] * lst[i]);\n    }\n  }\n  return result;", "  //\
    \ your code here\n  long double the_sum = 0;\n  for(int i = 0; i < lst.size();\
    \ i++){\n  \tif(lst[i] > 0 && lst[i] - floor(lst[i]) == 0 && lst[i] % 2 != 0){\n\
    \  \t\tthe_sum += pow(lst[i], 2);\n  \t}\n  }\n  return the_sum;", "\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] < 0 || fmod(lst[i],\
    \ 1) != 0)\n\t\t\tcontinue;\n\t\tif (lst[i] % 2 != 0)\n\t\t\tsum += lst[i] * lst[i];\n\
    \t}\n\treturn sum;", "    // Write your code here.\n    long double_sum = 0;\n\
    \    for(int i = 0; i < lst.size(); i++){\n        if(lst[i] > 0 && lst[i] ==\
    \ floor(lst[i])){\n            if(lst[i] % 2 == 1)\n                double_sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return double_sum;", "  long i=0;\n\
    \  if(lst.size()==0)\n    return 0;\n  for(int m=0;m<lst.size();m++)\n  {\n  \
    \  if(lst[m]>0)\n    {\n      if(lst[m]==(int)lst[m])\n      {\n        if(lst[m]%2==1)\n\
    \        {\n          i+=lst[m]*lst[m];\n        }\n      }\n    }\n  }\n  return\
    \ i;", "  long sum = 0;\n  // your code here\n  if(lst.size() > 0){\n    for(int\
    \ i = 0; i < lst.size(); i++){\n      if(lst[i] > 0){\n        if(lst[i] - (int)lst[i]\
    \ == 0){\n          if(lst[i] % 2 != 0){\n            sum += lst[i] * lst[i];\n\
    \          }\n        }\n      }\n    }\n  }\n  return sum;", "    long sum =\
    \ 0;\n    if(lst.size() == 0)\n        return 0;\n    for(long i = 0; i < lst.size();\
    \ i++){\n        if(lst[i] > 0 && lst[i] == long(lst[i])){\n            if(lst[i]\
    \ % 2 == 1)\n                sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(lst[i] < 0 || fmod(lst[i], 1) != 0) continue;\n        if(fmod(lst[i],\
    \ 2) != 0) {\n            sum += pow(lst[i], 2);\n        }\n    }\n    return\
    \ sum;", "  long sum;\n  for(auto i : lst){\n    if(!(i<0) && !(int(i) % 2 ==\
    \ 0)){\n      sum += i * i;\n    }\n  }\n  return sum;", "    long ans=0;\n  \
    \  for(float i:lst){\n        if(i<0){\n            continue;\n        }\n   \
    \     else if(i==int(i)){\n            if(i%2!=0){\n                ans+=i*i;\n\
    \            }\n        }\n    }\n    return ans;", "    long sum = 0;\n    for(float\
    \ n : lst) {\n        if(n > 0 && floor(n) == n && n % 2 != 0) {\n           \
    \ sum += n * n;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(float\
    \ num : lst) {\n        if(num >= 0 && (int)num == num && num%2 != 0)\n      \
    \      sum += num*num;\n    }\n    return sum;", "    long long int sum = 0;\n\
    \    for(int i = 0; i < lst.size(); i++)\n    {\n        if(fmod(lst[i], 2) !=\
    \ 0 && lst[i] > 0)\n        {\n            sum += (lst[i] * lst[i]);\n       \
    \ }\n    }\n    return sum;", "\treturn lst.size();", "    long ret = 0;\n   \
    \ for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] < 0 || fmod(lst[i],\
    \ 1) != 0) continue;\n        if (fmod(lst[i], 2) == 0) ret += lst[i] * lst[i];\n\
    \    }\n    return ret;", "    // Your code here\n    return 0;", "    long result\
    \ = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] >= 0 &&\
    \ std::floor(lst[i]) == lst[i]) {\n            if (lst[i] % 2 == 1)\n        \
    \        result += lst[i] * lst[i];\n        }\n    }\n    return result;", " \
    \   long sum = 0;\n    for(auto x: lst)\n    {\n        if(x > 0 && std::floor(x)\
    \ == x && std::ceil(x) == x)\n        {\n            if(x % 2 != 0)\n        \
    \    {\n                sum += (x * x);\n            }\n        }\n    }\n   \
    \ return sum;", "    // Write your code here\n    long sum = 0;\n    for(int i\
    \ = 0; i < lst.size(); i++){\n        if(lst[i] > 0 && (int)lst[i] == lst[i]){\n\
    \            if(lst[i] % 2 == 1){\n                sum += lst[i] * lst[i];\n \
    \           }\n        }\n    }\n    return sum;", "  if(lst.size()==0)\n    return\
    \ 0;\n  long sum=0;\n  for(long i=0;i<lst.size();i++)\n  {\n    long val=lst[i];\n\
    \    if(val>0 && (float)val-(long)val==0 && val%2!=0)\n      sum+=val*val;\n \
    \ }\n  return sum;", "  \n  long int sum=0;\n  for(int i=0;i<lst.size();i++)\n\
    \  {\n    if(lst[i]>0 && lst[i]==(int)lst[i])\n    {\n        if(lst[i]%2==1)\n\
    \        {\n            sum+=lst[i]*lst[i];\n        }\n    }\n  }\n  return sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ >= 0 && lst[i] - std::floor(lst[i]) == 0) {\n            if(lst[i] % 2 == 1)\
    \ {\n                sum += lst[i] * lst[i];\n            }\n        }\n    }\n\
    \    return sum;", "  long total=0;\n  int n=lst.size();\n  for(int i=0;i<n;i++)\n\
    \  {\n    if(lst[i]>0)\n    {\n      if(fmod(lst[i],2)==1)\n      {\n        total+=(lst[i]*lst[i]);\n\
    \      }\n    }\n  }\n  return total;", "    long sum = 0;\n    for(auto i : lst)\
    \ {\n        if (fmod(i, 2) == 1 && i > 0) {\n            sum += pow(i, 2);\n\
    \        }\n    }\n    return sum;", "    float value = 0;\n    for(int i = 0;\
    \ i < lst.size(); i++)\n    {\n        if(lst[i] >= 0)\n        {\n          \
    \  if(fmod(lst[i], 2) != 0)\n            {\n                value += lst[i] *\
    \ lst[i];\n            }\n        }\n    }\n    return value;", "    \n    \n\
    \    \n    \n    ", "\tlong double_difference = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif ((int)lst[i] == lst[i] && lst[i] > 0 && lst[i] % 2 != 0) {\n\t\
    \t\tdouble_difference += pow(lst[i], 2);\n\t\t}\n\t}\n\treturn double_difference;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        float k =\
    \ lst[i];\n        // if (k % 2 != 0) {\n        //     sum += (k * k);\n    \
    \    // }\n        sum += (lst[i] % 2 != 0) ? (lst[i] * lst[i]) : 0;\n    }\n\
    \    return sum;", "\tlong r=0;\n\tfor(auto i:lst)\n\t\tif(std::abs(i)==i and\
    \ i%2==1)\n\t\t\tr+=i*i;\n\treturn r;", "  // your code here\n  long sum = 0;\n\
    \  for(auto x: lst){\n  \tif(floor(x)==x && x>0){\n  \t\tif(x%2!=0){\n  \t\t\t\
    sum = sum + (x*x);\n  \t\t}\n  \t}\n  }\n  return sum;", "    long int sum = 0;\n\
    \    for(int i = 0; i < lst.size(); i++)\n    {\n        if(lst[i] > 0 && floor(lst[i])\
    \ == lst[i])\n        {\n            if(fmod(lst[i], 2) != 0)\n            {\n\
    \                sum += lst[i] * lst[i];\n            }\n        }\n    }\n  \
    \  return sum;", "    \n    long sum = 0;\n    for(auto v : lst)\n    {\n    \
    \    if(v < 0) continue;\n        if(std::floor(v) != v) continue;\n        if(std::fmod(v,\
    \ 2) == 0) continue;\n        sum += (long)std::pow(v, 2);\n    }\n    return\
    \ sum;", "  long sum=0;\n  int l = lst.size();\n  for(int i=0;i<l;i++){\n    if(lst[i]>0\
    \ && (lst[i]-(int)lst[i])==0){\n      if(lst[i]%2!=0){\n        sum = sum + lst[i]*lst[i];\n\
    \      }\n    }\n  }\n  return sum;", "  long sum = 0;\n  for (float elem : lst)\
    \ {\n    if (elem < 0) {\n      continue;\n    }\n    if (elem - (int)elem !=\
    \ 0) {\n      continue;\n    }\n    if (elem % 2 == 0) {\n      continue;\n  \
    \  }\n    sum += elem * elem;\n  }\n  return sum;", "    long sum = 0;\n    for(auto\
    \ e : lst) {\n        if (e < 0) continue;\n        long v = (long)e;\n      \
    \  if (v == e && v % 2 != 0) {\n            sum += v * v;\n        }\n    }\n\
    \    return sum;", "\tlong sum = 0;\n\tfor (auto i : lst) {\n\t\tif (i > 0 &&\
    \ std::fmod(i, 1) == 0 && std::fmod(i, 2) != 0)\n\t\t\tsum += i * i;\n\t}\n\t\
    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n\
    \        if(lst[i] > 0) {\n            if(lst[i] == int(lst[i])) {\n         \
    \       if(lst[i] % 2 == 1) {\n                    sum += lst[i] * lst[i];\n \
    \               }\n            }\n        }\n    }\n    return sum;", "  double\
    \ total = 0;\n  for (float num : lst) {\n    if (num > 0 && floor(num) == num\
    \ && num % 2 != 0) {\n      total += num * num;\n    }\n  }\n  return total;",
  "    // Your code here\n    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n\
    \        if(lst[i] == int(lst[i]) && lst[i] >= 0){\n            if(lst[i] % 2\
    \ != 0){\n                sum += pow(lst[i], 2);\n            }\n        }\n \
    \   }\n    return sum;", "  // input: a list of integers\n  // output: the sum\
    \ of squares of the odd integers\n  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (((int)lst[i] % 2 != 0) && lst[i] >= 0) {\n      sum += (int)lst[i]\
    \ * (int)lst[i];\n    }\n  }\n  return sum;", "\tlong sum = 0;\n\tfor (auto x\
    \ : lst) {\n\t\tif (int(x) % 2 != 0) {\n\t\t\tsum += pow(x, 2);\n\t\t}\n\t}\n\t\
    return sum;", "  if(lst.size()==0) return 0;\n  long sum=0;\n  for(auto x:lst){\n\
    \    if(floor(x)==x){\n      if(x>0)\n        sum+=(x*x);\n    }\n  }\n  return\
    \ sum;", "  // Your code here\n  long sum = 0;\n  for(int i = 0; i < lst.size();\
    \ i++){\n    if(lst[i] >= 0 && (lst[i] == (int)lst[i])){\n      if(lst[i] % 2\
    \ != 0){\n        sum += lst[i] * lst[i];\n      }\n    }\n  }\n  return sum;",
  "\tif (lst.size() == 0) return 0;\n\telse {\n\t\tlong sum = 0;\n\t\tfor (auto i\
    \ : lst) {\n\t\t\tif (std::floor(i) == i && i >= 0 && i % 2 != 0) {\n\t\t\t\t\
    sum += i * i;\n\t\t\t}\n\t\t}\n\t\treturn sum;\n\t}", "\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "    long sum=0;\n\
    \    for(auto x:lst){\n        if(x>0)\n        {\n            if(fmod(x,2)==1){\n\
    \                // x is odd\n                sum+=x*x;\n            }\n     \
    \   }\n    }\n    return sum;", "  long sum = 0;\n  for (float num : lst) {\n\
    \    if (num == 0) {\n      continue;\n    } else if (num > 0 && fmod(num, 2)\
    \ == 1) {\n      sum += pow(num, 2);\n    }\n  }\n  return sum;", "    long result=0;\n\
    \    for(auto v:lst){\n        if(v>0 && v == (int)v){\n            result+=(v*v);\n\
    \        }\n    }\n    return result;", "  \tlong double_the_difference=0;\n \
    \ \tfor(int i=0;i<lst.size();i++)\n    {\n      if(std::fmod(lst[i],1)==0)\n \
    \     {\n        if(lst[i]>0)\n        {\n          if(lst[i]%2!=0)\n        \
    \  {\n            double_the_difference+=lst[i]*lst[i];\n          }\n       \
    \ }\n      }\n    }\n  return double_the_difference;", "\tlong sum=0;\n\tfor(auto\
    \ x:lst)\n\t{\n\t\tif(fmod(x,2)==1 && x>0)\n\t\t\tsum+=x*x;\n\t}\n\treturn sum;",
  "   long sum=0;\n   for(float i : lst){\n      if(i>0 && i==(int)i && i%2!=0){\n\
    \         sum+=pow(i,2);\n      }\n   }\n   return sum;", "\tlong sum = 0;\n\t\
    for (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 && std::floor(lst[i])\
    \ == lst[i]) {\n\t\t\tif (lst[i] % 2 != 0) {\n\t\t\t\tsum += (lst[i] * lst[i]);\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn sum;", "\tlong s = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (std::floor(lst[i]) == lst[i] && lst[i] > 0) {\n\t\t\tif (lst[i]\
    \ % 2 == 1) {\n\t\t\t\ts += lst[i] * lst[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn s;",
  "    int i, p = 0;\n    for(i = 0; i < lst.size(); i++)\n    {\n        if(lst[i]\
    \ > 0 && floor(lst[i]) == lst[i])\n        {\n            if(lst[i] % 2 != 0)\n\
    \            {\n                p += lst[i] * lst[i];\n            }\n       \
    \ }\n    }\n    return p;", "    long sum = 0;\n    for(auto i: lst){\n      \
    \  if(i<0)\n            continue;\n        if(i!=i/1)\n            continue;\n\
    \        if(i%2==0)\n            continue;\n        sum += i*i;\n    }\n    return\
    \ sum;", "  auto lst_len = lst.size();\n  if(lst_len == 0) return 0;\n  long sum\
    \ = 0;\n  for(auto i : lst) {\n    if(std::floor(i) == i && i > 0) sum += std::pow(i,\
    \ 2);\n  }\n  return sum;", '  return 0;', "    int sum = 0;\n    for(int i =\
    \ 0; i < lst.size(); i++) {\n        if (lst[i] >= 0 && (lst[i] - int(lst[i]))\
    \ == 0 && lst[i] % 2 != 0) {\n            sum += (lst[i] * lst[i]);\n        }\n\
    \    }\n    return sum;", "\tlong sum=0;\n\tfor(auto& i:lst){\n\t\tif(i>0 && i-int(i)==0\
    \ && int(i)%2!=0){\n\t\t\tsum+=i*i;\n\t\t}\n\t}\n\treturn sum;", "    long ans\
    \ = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] == floor(lst[i])\
    \ && lst[i] > 0 && lst[i] % 2 != 0) {\n            ans += lst[i] * lst[i];\n \
    \       }\n    }\n    return ans;", '    // TODO: Your code here', "    long ans=0;\n\
    \    for(float i:lst){\n        if(i>0 && floor(i)==i && i%2!=0){\n          \
    \  ans+=floor(i)*floor(i);\n        }\n    }\n    return ans;", "    long sum=0;\n\
    \    for(int i=0;i<lst.size();i++)\n    {\n        if(lst[i]>0)\n        {\n \
    \           int n=(int)lst[i];\n            if(n&1)\n            {\n         \
    \       sum+=(n*n);\n            }\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] < 0)\
    \ continue;\n        if(lst[i] == int(lst[i])) {\n            if(lst[i] % 2 ==\
    \ 1) {\n                sum += pow(lst[i], 2);\n            }\n        }\n   \
    \ }\n    return sum;", "    // Your code here\n    int i;\n    long sum=0;\n \
    \   for(i=0;i<lst.size();i++)\n    {\n        if(lst[i]>0 && floor(lst[i])==lst[i])\n\
    \        {\n            if(lst[i]%2!=0)\n            {\n                sum+=pow(lst[i],2);\n\
    \            }\n        }\n    }\n    return sum;", "\tlong sum = 0;\n\tint l\
    \ = lst.size();\n\tfor (int i = 0; i < l; i++) {\n\t\tif (lst[i] > 0 && lst[i]\
    \ == (int)lst[i]) {\n\t\t\tif (lst[i] % 2 != 0) {\n\t\t\t\tsum += lst[i] * lst[i];\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn sum;", "  if(lst.size()==0)\n    return 0;\n  long\
    \ res=0;\n  for(int i=0;i<lst.size();i++)\n  {\n    if(lst[i]<0)\n      continue;\n\
    \    if(lst[i]-(int)lst[i]!=0)\n      continue;\n    if(lst[i]%2==0)\n      continue;\n\
    \    res+=lst[i]*lst[i];\n  }\n  return res;", "\tlong sum = 0;\n\tfor (auto it\
    \ = lst.begin(); it != lst.end(); it++) {\n\t\tif (*it > 0) {\n\t\t\tif (std::floor(*it)\
    \ != *it) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (*it % 2 != 0) {\n\t\t\t\tsum\
    \ += (*it) * (*it);\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;", "\tlong result = 0;\n\
    \tfor (int i = 0; i < lst.size(); i++) {\n\t\t// if (lst[i] % 2 != 0 && lst[i]\
    \ > 0) {\n\t\t// \tresult += lst[i] * lst[i];\n\t\t// }\n\t\tif (lst[i] > 0 &&\
    \ std::ceil(lst[i]) != std::floor(lst[i])) {\n\t\t\tcontinue;\n\t\t} else if (lst[i]\
    \ % 2 != 0) {\n\t\t\tresult += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn result;",
  "\tdouble result = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (fmod(lst[i],\
    \ 2) == 1) {\n\t\t\tresult += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn result;",
  "\t\n\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] >\
    \ 0 && fmod(lst[i], 2) == 1) {\n\t\t\tsum += pow(lst[i], 2);\n\t\t}\n\t}\n\treturn\
    \ sum;", "\tstd::vector<float> result;\n\tlong sum = 0;\n\tfor (int i = 0; i <\
    \ lst.size(); i++) {\n\t\tif (lst[i] > 0 && std::floor(lst[i]) == lst[i]) {\n\t\
    \t\tresult.push_back(lst[i]);\n\t\t}\n\t}\n\tfor (int i = 0; i < result.size();\
    \ i++) {\n\t\tif (result[i] % 2 != 0) {\n\t\t\tsum += result[i] * result[i];\n\
    \t\t}\n\t}\n\treturn sum;", "    // your code here\n    long double sum=0;\n \
    \   for(float i:lst)\n    {\n        if(i<0 || fmod(i,1)!=0)\n        {\n    \
    \        i=0;\n        }\n        sum+=(i*i);\n    }\n    return sum;", "  long\
    \ s = 0;\n  for(float i : lst)\n  {\n    if(i > 0 && i == floor(i))\n    {\n \
    \     if(i % 2 != 0)\n      {\n        s += i * i;\n      }\n    }\n  }\n  return\
    \ s;", "\tlong sum=0;\n\tfor(int i=0;i<lst.size();i++)\n\t{\n\t\tif(lst[i] > 0\
    \ && lst[i] == floor(lst[i]))\n\t\t{\n\t\t\tif(lst[i]%2 != 0)\n\t\t\t{\n\t\t\t\
    \tsum = sum + lst[i]*lst[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;", "    long sum\
    \ = 0;\n    for(auto i: lst){\n        if(int(i) > 0 && (abs(int(i) - i) < 0.001)){\n\
    \            if(i%2 == 1){\n                sum += i*i;\n            }\n     \
    \   }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && floor(lst[i]) == lst[i]) {\n            if(lst[i]\
    \ % 2 == 1) {\n                sum += pow(lst[i], 2);\n            }\n       \
    \ }\n    }\n    return sum;", "\t\n\tint counter{0};\n\tint sum{0};\n\tint size\
    \ = lst.size();\n\twhile(counter<size){\n\t\tif(lst[counter]>0){\n\t\t\tif(lst[counter]==int(lst[counter])){\n\
    \t\t\t\tif(lst[counter]%2!=0){\n\t\t\t\t\tsum += lst[counter]*lst[counter];\n\t\
    \t\t\t}\n\t\t\t}\n\t\t}\n\t\tcounter++;\n\t}\n\treturn sum;", "  // your code\
    \ here\n  ", "    long sum = 0;\n    for(auto x: lst) {\n        if (x >= 0 &&\
    \ floor(x) == x && floor(x) % 2 == 1) {\n            sum += pow(x, 2);\n     \
    \   }\n    }\n    return sum;"]
stop_tokens:
- "\n}"

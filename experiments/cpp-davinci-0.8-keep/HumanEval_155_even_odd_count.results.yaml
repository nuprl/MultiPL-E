language: cpp
name: HumanEval_155_even_odd_count
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even = 0;\n    int odd = 0;\n    if\
    \ (num < 0) {\n        num = -num;\n    }\n    while (num) {\n        if (num\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp5viauyqx: /tmp/tmp5viauyqx.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even, odd;\n  even = odd = 0;\n  if\
    \ (num < 0) {\n    num = -num;\n  }\n  while (num > 0) {\n    if (num % 2 == 0)\
    \ {\n      even++;\n    } else {\n      odd++;\n    }\n    num /= 10;\n  }\n \
    \ return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp8ecry6h9: /tmp/tmp8ecry6h9.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  if (num\
    \ < 0) {\n    num = num * -1;\n  }\n  while (num != 0) {\n    if (num % 2 == 0)\
    \ {\n      even++;\n    } else {\n      odd++;\n    }\n    num = num / 10;\n \
    \ }\n  return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp5i5x1ses: /tmp/tmp5i5x1ses.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  // Your code here\n  int even = 0;\n  int\
    \ odd = 0;\n  while(num != 0){\n    int r = num % 10;\n    if(r % 2 == 0){\n \
    \     even++;\n    }\n    else{\n      odd++;\n    }\n    num = num / 10;\n  }\n\
    \  return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp0apf342i: /tmp/tmp0apf342i.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    if(num==0) return std::make_tuple(1,0);\n\
    \    std::tuple<long, long> eo_count(0,0);\n    int sign = num<0?-1:1;\n    num\
    \ = abs(num);\n    while(num>0){\n        int last_digit = num%10;\n        if(last_digit%2==0)\
    \ get<0>(eo_count)++;\n        else get<1>(eo_count)++;\n        num/=10;\n  \
    \  }\n    return eo_count;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrhqre0x.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmptrhqre0x.cpp:14:29: error: \u2018get\u2019\
    \ was not declared in this scope; did you mean \u2018std::get\u2019?\n   14 |\
    \         if(last_digit%2==0) get<0>(eo_count)++;\n      |                   \
    \          ^~~\n      |                             std::get\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmptrhqre0x.cpp:2:\n/usr/include/c++/9/variant:1093:27: note: \u2018\
    std::get\u2019 declared here\n 1093 |     constexpr const _Tp&& get(const variant<_Types...>&&\
    \ __v)\n      |                           ^~~\n/tmp/tmptrhqre0x.cpp:14:45: error:\
    \ no \u2018operator++(int)\u2019 declared for postfix \u2018++\u2019 [-fpermissive]\n\
    \   14 |         if(last_digit%2==0) get<0>(eo_count)++;\n      |            \
    \                       ~~~~~~~~~~^~\n/tmp/tmptrhqre0x.cpp:15:14: error: \u2018\
    get\u2019 was not declared in this scope; did you mean \u2018std::get\u2019?\n\
    \   15 |         else get<1>(eo_count)++;\n      |              ^~~\n      | \
    \             std::get\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmptrhqre0x.cpp:2:\n/usr/include/c++/9/variant:1093:27:\
    \ note: \u2018std::get\u2019 declared here\n 1093 |     constexpr const _Tp&&\
    \ get(const variant<_Types...>&& __v)\n      |                           ^~~\n\
    /tmp/tmptrhqre0x.cpp:15:30: error: no \u2018operator++(int)\u2019 declared for\
    \ postfix \u2018++\u2019 [-fpermissive]\n   15 |         else get<1>(eo_count)++;\n\
    \      |                    ~~~~~~~~~~^~\n"
  stdout: ''
  timestamp: 1660116225
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tstd::tuple<long, long> res{ 0, 0 };\n\t\
    if (num == 0) {\n\t\tres = std::make_tuple(1, 0);\n\t\treturn res;\n\t}\n\telse\
    \ if (num < 0) {\n\t\tnum = num * -1;\n\t}\n\tstd::string int_to_string = std::to_string(num);\n\
    \tfor (auto element : int_to_string) {\n\t\tif (int(element) % 2 == 0) {\n\t\t\
    \tstd::get<0>(res) += 1;\n\t\t}\n\t\telse {\n\t\t\tstd::get<1>(res) += 1;\n\t\t\
    }\n\t}\n\treturn res;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd = 0, even = 0;\n    while(num)\
    \ {\n        if(abs(num % 10) % 2 == 0) even++;\n        else odd++;\n       \
    \ num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpt_qzd7_e: /tmp/tmpt_qzd7_e.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  // write code here\n  int oddCount = 0;\n\
    \  int evenCount = 0;\n  int  n;\n  n = abs(num);\n  while(n != 0)\n  {\n    if(n\
    \ % 2 == 0)\n    {\n      evenCount++;\n    }\n    else\n    {\n      oddCount++;\n\
    \    }\n    n = n / 10;\n  }\n  return std::make_tuple(evenCount, oddCount);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpcz7bjec9: /tmp/tmpcz7bjec9.cpp:36: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int count[2] = {0, 0};\n    int tmp =\
    \ abs(num);\n    while(tmp != 0) {\n        count[tmp % 10 % 2]++;\n        tmp\
    \ /= 10;\n    }\n    return std::make_tuple(count[0], count[1]);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpfsbq9nf4: /tmp/tmpfsbq9nf4.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    for (; num;\
    \ num /= 10) {\n        if ((num % 10) % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp85s8y4_p: /tmp/tmp85s8y4_p.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    std::tuple<long, long>result;\n    int\
    \ cnt1 = 0, cnt2 = 0;\n    for(int i = 0; i < std::abs(num); i++){\n        if((i/10)\
    \ % 2 == 0)\n            cnt1++;\n        else\n            cnt2++;\n    }\n \
    \   result = std::make_tuple(cnt1, cnt2);\n    return result;\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpi_id9v0u: /tmp/tmpi_id9v0u.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even=0,odd=0;\n    if(num<0) num=num*-1;\n\
    \    while(num>0){\n        int rem=num%10;\n        if(rem%2==0) even++;\n  \
    \      else odd++;\n        num=num/10;\n    }\n    return {even,odd};\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp27cj76m4: /tmp/tmp27cj76m4.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while(num\
    \ != 0) {\n        if(num % 2 == 0)\n            even++;\n        else\n     \
    \       odd++;\n        num /= 10;\n    }\n    return {even, odd};\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp7otpb58r: /tmp/tmp7otpb58r.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even_counter = 0;\n  long odd_counter\
    \ = 0;\n  long digits = 0;\n  long mod = 0;\n  if (num == 0) {\n    even_counter\
    \ = 1;\n    odd_counter = 0;\n  }\n  while (num != 0) {\n    digits = num%10;\n\
    \    if (digits%2 == 0) {\n      even_counter++;\n    }\n    else {\n      odd_counter++;\n\
    \    }\n    num = num/10;\n  }\n  std::tuple<long, long> result = std::make_tuple(even_counter,\
    \ odd_counter);\n  return result;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tstd::tuple<long, long> eve_odd = std::make_tuple(0,\
    \ 0);\n\twhile (num != 0) {\n\t\tint digit = num % 10;\n\t\tif (digit % 2 == 0)\n\
    \t\t\tstd::get<0>(eve_odd) += 1;\n\t\telse\n\t\t\tstd::get<1>(eve_odd) += 1;\n\
    \t\tnum /= 10;\n\t}\n\treturn eve_odd;\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpfl559zek: /tmp/tmpfl559zek.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // your code here\n    long e=0,o=0;\n\
    \    while(num){\n        if(num%2==0)\n            e++;\n        else\n     \
    \       o++;\n        num/=10;\n    }\n    return std::make_tuple(e,o);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpb_2rf97b: /tmp/tmpb_2rf97b.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while(num){\n\
    \        if(num%2==0) even++;\n        else odd++;\n        num/=10;\n    }\n\
    \    return {even, odd};\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp9t93ixgh: /tmp/tmp9t93ixgh.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong oddCount = 0;\n\tlong evenCount = 0;\n\
    \twhile (num != 0) {\n\t\tint last_digit = num % 10;\n\t\tif (last_digit % 2 ==\
    \ 0) {\n\t\t\tevenCount++;\n\t\t}\n\t\telse {\n\t\t\toddCount++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn { evenCount, oddCount };\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpfia1ypf0: /tmp/tmpfia1ypf0.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long e = 0, o = 0;\n    std::string k\
    \ = std::to_string(num);\n    for (long i = 0; i < k.length(); i++) {\n      \
    \  if ((k[i] - '0') % 2 == 0) {\n            e++;\n        } else {\n        \
    \    o++;\n        }\n    }\n    return std::make_tuple(e, o);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpdmop6x1g: /tmp/tmpdmop6x1g.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while(num\
    \ > 0) {\n        if(num % 2 == 0)\n            even++;\n        else\n      \
    \      odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpiso32ahh: /tmp/tmpiso32ahh.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even_count = 0;\n    long odd_count\
    \ = 0;\n    if (num < 0) {\n        num = -num;\n    }\n    while (num > 0) {\n\
    \        int digit = num % 10;\n        if (digit % 2 == 0) {\n            even_count++;\n\
    \        } else {\n            odd_count++;\n        }\n        num /= 10;\n \
    \   }\n    return std::make_tuple(even_count, odd_count);\n}\nint main() {\n \
    \   auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpe6huiz47: /tmp/tmpe6huiz47.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while(num){\n\
    \        if(num % 2 == 0)\n            even++;\n        else\n            odd++;\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmph984u2w8: /tmp/tmph984u2w8.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long odd_count = 0;\n  long even_count =\
    \ 0;\n  while (num != 0) {\n    long digit = num % 10;\n    num /= 10;\n    if\
    \ (digit % 2 == 0)\n      even_count++;\n    else\n      odd_count++;\n  }\n \
    \ return std::make_tuple(even_count, odd_count);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmphsm2_z2s: /tmp/tmphsm2_z2s.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116224
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    int n;\n\
    \    if(num>0){\n        n = num;\n    }\n    else{\n        n = -num;\n    }\n\
    \    while(n!=0){\n        if(n%2==0){\n            even++;\n        }\n     \
    \   else{\n            odd++;\n        }\n        n/=10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpi7uqrmy6: /tmp/tmpi7uqrmy6.cpp:36: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long evens = 0;\n  long odds = 0;\n  while\
    \ (num != 0) {\n    int remainder = num % 10;\n    if (remainder % 2 == 0) {\n\
    \      evens++;\n    } else {\n      odds++;\n    }\n    num /= 10;\n  }\n  return\
    \ std::make_tuple(evens, odds);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp_bmqj081: /tmp/tmp_bmqj081.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even{0}, odd{0};\n  while(num != 0)\
    \ {\n    if(num % 2 == 0)\n      even++;\n    else\n      odd++;\n    num /= 10;\n\
    \  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp1ji7be_3: /tmp/tmp1ji7be_3.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong even = 0, odd = 0;\n\tif (num == 0)\
    \ {\n\t\treturn std::make_tuple(1, 0);\n\t}\n\tif (num < 0) {\n\t\tnum = -num;\n\
    \t}\n\twhile (num > 0) {\n\t\tif (num % 2 == 0) {\n\t\t\teven++;\n\t\t}\n\t\t\
    else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    return std::make_tuple((num % 2 == 0),\
    \ (num % 2 != 0));\n}\nint main() {\n    auto candidate = even_odd_count;\n  \
    \  assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzuhlr3hu: /tmp/tmpzuhlr3hu.cpp:13: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd = 0, even = 0;\n    while(num\
    \ != 0) {\n        int rem = num % 10;\n        if(rem % 2 == 0)\n           \
    \ even++;\n        else\n            odd++;\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp9ebrcq7j: /tmp/tmp9ebrcq7j.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong oddCount = 0;\n\tlong evenCount = 0;\n\
    \twhile (num) {\n\t\tint temp = num % 10;\n\t\tif (temp % 2 == 0) {\n\t\t\tevenCount++;\n\
    \t\t}\n\t\telse {\n\t\t\toddCount++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(evenCount,\
    \ oddCount);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp_mhoiv5n: /tmp/tmp_mhoiv5n.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\
    \tstd::tuple<long, long> even_odd_count(i, j);\n\treturn even_odd_count;\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp8hwo608x: /tmp/tmp8hwo608x.cpp:16: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // Write your code here.\n    int a =\
    \ 0, b = 0;\n    while(num){\n        int c = num % 10;\n        if(c%2 == 0)\n\
    \            a++;\n        else\n            b++;\n        num /= 10;\n    }\n\
    \    return std::make_tuple(a, b);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp9yc1mzor: /tmp/tmp9yc1mzor.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> tup;\n  std::get<0>(tup)\
    \ = 0;\n  std::get<1>(tup) = 0;\n  while (num) {\n    int rem = num % 10;\n  \
    \  if (rem % 2 == 0)\n      std::get<0>(tup)++;\n    else\n      std::get<1>(tup)++;\n\
    \    num /= 10;\n  }\n  return tup;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpfe_e7kv9: /tmp/tmpfe_e7kv9.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    long rem;\n\
    \    do{\n        rem = num % 10;\n        if(rem % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        num /= 10;\n    } while(num != 0);\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116224
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long evens = 0;\n  long odds = 0;\n  while\
    \ (num != 0) {\n    long digit = num % 10;\n    if (digit % 2 == 0)\n      evens++;\n\
    \    else\n      odds++;\n    num /= 10;\n  }\n  return std::make_tuple(evens,\
    \ odds);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpouqn1dqt: /tmp/tmpouqn1dqt.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0, odd = 0;\n  std::stringstream\
    \ ss;\n  ss << num;\n  std::string s = ss.str();\n  for (int i = 0; i < s.length();\
    \ i++) {\n    if (s[i] - '0' % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpuup1wyxm: /tmp/tmpuup1wyxm.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0, odd = 0;\n  int rem;\n  while(num\
    \ != 0) {\n    rem = num % 10;\n    if(rem % 2 == 0)\n      even++;\n    else\n\
    \      odd++;\n    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpx7u195fe: /tmp/tmpx7u195fe.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n   long n = std::abs(num);\n   long even_count\
    \ = 0;\n   long odd_count = 0;\n   while (n > 0) {\n      if (n % 2 == 0)\n  \
    \       even_count++;\n      else\n         odd_count++;\n      n /= 10;\n   }\n\
    \   return std::make_tuple(even_count, odd_count);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpl453i4s0: /tmp/tmpl453i4s0.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    auto even_count = 0;\n    auto odd_count\
    \ = 0;\n    auto num_copy = num;\n    while (num_copy != 0) {\n        if (num_copy\
    \ % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n\
    \        }\n        num_copy /= 10;\n    }\n    return std::make_tuple(even_count,\
    \ odd_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmplntx2d0f: /tmp/tmplntx2d0f.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd=0,even=0;\n    if(num<0)\n  \
    \      num*=-1;\n    while(num!=0){\n        int x=num%10;\n        if(x%2==0)\n\
    \            even++;\n        else\n            odd++;\n        num/=10;\n   \
    \ }\n    return std::make_tuple(even,odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpdqd2afv6: /tmp/tmpdqd2afv6.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116224
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long evenCount=0, oddCount=0;\n  std::string\
    \ numberString = std::to_string(num);\n  for(int i=0; i<numberString.length();\
    \ i++){\n    if(numberString[i]%2==0){\n      evenCount++;\n    }else{\n     \
    \ oddCount++;\n    }\n  }\n  return std::make_tuple(evenCount, oddCount);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpyowb74q0: /tmp/tmpyowb74q0.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tint e=0,o=0;\n\t// TODO: Your code here!\n\
    \twhile(num)\n\t{\n\t\tif(num%2==0)\n\t\t\te++;\n\t\telse\n\t\t\to++;\n\t\tnum=num/10;\n\
    \t}\n\treturn std::make_tuple(e,o);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpnkr3rmo0: /tmp/tmpnkr3rmo0.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong even = 0, odd = 0;\n\tdo {\n\t\tint\
    \ last = num % 10;\n\t\tif (last % 2 == 0) even++;\n\t\telse odd++;\n\t\tnum /=\
    \ 10;\n\t} while (num != 0);\n\treturn std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even{0}, odd{0};\n  while(num != 0)\
    \ {\n    if((num % 10) % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp20eehcyi: /tmp/tmp20eehcyi.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    if (num ==\
    \ 0) {\n        even++;\n    }\n    if (num < 0) {\n        num *= -1;\n    }\n\
    \    while (num > 0) {\n        int dig = num % 10;\n        if (dig % 2 == 0)\
    \ {\n            even++;\n        } else {\n            odd++;\n        }\n  \
    \      num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // See: https://www.geeksforgeeks.org/stdtuple-tutorial/\n\
    \    std::tuple<long, long> t(0, 0);\n    bool isNegative = false;\n    if (num\
    \ < 0) {\n        isNegative = true;\n        num = num * -1;\n    }\n    while\
    \ (num > 0) {\n        if (num % 2 == 0) {\n            std::get<0>(t) += 1;\n\
    \        } else {\n            std::get<1>(t) += 1;\n        }\n        num =\
    \ num / 10;\n    }\n    if (isNegative) {\n        std::get<1>(t) += 1;\n    }\n\
    \    return t;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpm3diwjtp: /tmp/tmpm3diwjtp.cpp:31: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0, odd = 0;\n  while (num !=\
    \ 0) {\n    if (abs(num % 10) % 2 == 0) {\n      even++;\n    } else {\n     \
    \ odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp6yxwfbyb: /tmp/tmp6yxwfbyb.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116227
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // your code here\n    long tup[2] = {0,\
    \ 0};\n    while(num) {\n        if(num % 2 == 0) {\n            tup[0]++;\n \
    \       } else {\n            tup[1]++;\n        }\n        num /= 10;\n    }\n\
    \    return std::make_tuple(tup[0], tup[1]);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpeigk2zyg: /tmp/tmpeigk2zyg.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116227
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even_num = 0;\n    int odd_num = 0;\n\
    \    while(num != 0){\n        if(num % 2 == 0){\n            even_num++;\n  \
    \      }\n        else{\n            odd_num++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even_num, odd_num);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpu8jtbp5l: /tmp/tmpu8jtbp5l.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116227
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd = 0, even = 0;\n    while(num)\
    \ {\n        num % 2 ? odd++ : even++;\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpaessnncx: /tmp/tmpaessnncx.cpp:24: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong even = 0, odd = 0;\n\twhile (num) {\n\
    \t\tint temp = num % 10;\n\t\tif (temp % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\
    \todd++;\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp5khpxvx4: /tmp/tmp5khpxvx4.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long odd_count = 0;\n  long even_count =\
    \ 0;\n  while (num > 0) {\n    if (num % 2 == 0) {\n      even_count++;\n    }\
    \ else {\n      odd_count++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even_count,\
    \ odd_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpwp9i6p4q: /tmp/tmpwp9i6p4q.cpp:23: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    if (num <\
    \ 0) {\n        even++;\n        num *= -1;\n    }\n    while (num > 0) {\n  \
    \      int digit = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpv5tpukxl: /tmp/tmpv5tpukxl.cpp:27: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    std::tuple<long, long> res = std::make_tuple(0,\
    \ 0);\n    std::string num_str = std::to_string(std::abs(num));\n    for (auto\
    \ &ch: num_str) {\n        int x = ch - '0';\n        if (x % 2 == 0) {\n    \
    \        std::get<0>(res)++;\n        } else {\n            std::get<1>(res)++;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116227
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even_count=0,odd_count=0;\n    while(num>0){\n\
    \        if(num%2==0)\n            even_count++;\n        else\n            odd_count++;\n\
    \        num=num/10;\n    }\n    return std::make_tuple(even_count,odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp2ski14u5: /tmp/tmp2ski14u5.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  // your code here\n  std::tuple<long, long>\
    \ result;\n  if(num == 0)\n  {\n    std::get<0>(result) = 1;\n    std::get<1>(result)\
    \ = 0;\n    return result;\n  }\n  if(num < 0)\n  {\n    num = -num;\n  }\n  std::get<0>(result)\
    \ = 0;\n  std::get<1>(result) = 0;\n  while(num > 0)\n  {\n    if(num % 2 == 0)\n\
    \    {\n      std::get<0>(result)++;\n    }\n    else\n    {\n      std::get<1>(result)++;\n\
    \    }\n    num /= 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long evens = 0;\n    long odds = 0;\n\
    \    for (long i = 0; i < std::to_string(num).length(); i++) {\n        if ((std::to_string(num)[i]\
    \ - '0') % 2 == 0) {\n            evens++;\n        } else {\n            odds++;\n\
    \        }\n    }\n    return std::make_tuple(evens, odds);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp36g_z8us: /tmp/tmp36g_z8us.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even=0,odd=0;\n  while(num){\n    if(num%2==0)\n\
    \      even++;\n    else\n      odd++;\n    num/=10;\n  }\n  return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp_ohn17_j: /tmp/tmp_ohn17_j.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> result(0, 0);\n \
    \ num = std::abs(num);\n  while (num > 0) {\n    if (num % 2 == 0) {\n      std::get<0>(result)++;\n\
    \    } else {\n      std::get<1>(result)++;\n    }\n    num /= 10;\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmphgmxhibb: /tmp/tmphgmxhibb.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even = 0;\n    int odd = 0;\n    if\
    \ (num < 0) {\n        num = -num;\n    }\n    while (num > 0) {\n        int\
    \ digit = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpofm5fmua: /tmp/tmpofm5fmua.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> ans{0, 0};\n  while\
    \ (num) {\n    if (num % 2 == 0) std::get<0>(ans)++;\n    else std::get<1>(ans)++;\n\
    \    num /= 10;\n  }\n  return ans;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpqo2khiyl: /tmp/tmpqo2khiyl.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\t// TODO: remove the stub and finish implementation\n\
    \tassert(0);\n\treturn std::make_tuple(0, 0);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpw8waewf9: /tmp/tmpw8waewf9.cpp:9: std::tuple<long int, long int> even_odd_count(long
    int): Assertion `0'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tif (num == 0) {\n\t\treturn std::make_tuple(1,\
    \ 0);\n\t}\n\tlong odd = 0, even = 0;\n\twhile (num != 0) {\n\t\tint digit = abs(num\
    \ % 10);\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t}\n\t\telse {\n\t\t\t\
    odd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  while\
    \ (num != 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp_jmqrdlh: /tmp/tmp_jmqrdlh.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116148
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while(num)\
    \ {\n        if(num%2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num/=10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp9mezl_sw: /tmp/tmp9mezl_sw.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> result(0, 0);\n \
    \ while (num != 0) {\n    if (num % 2 == 0) {\n      std::get<0>(result)++;\n\
    \    } else {\n      std::get<1>(result)++;\n    }\n    num /= 10;\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpeo6_po_f: /tmp/tmpeo6_po_f.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    int temp;\n\
    \    std::vector<int> new_num;\n    std::stringstream ss;\n    ss << num;\n  \
    \  std::string s(ss.str());\n    for (char c : s) {\n        temp = std::stoi(std::string(1,\
    \ c));\n        new_num.push_back(temp);\n    }\n    for (int i = 0; i < new_num.size();\
    \ i++) {\n        if (new_num[i] % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::invalid_argument'\n\
    \  what():  stoi\n"
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long evens = 0;\n  long odds = 0;\n  if\
    \ (num < 0) {\n    num *= -1;\n  }\n  while (num > 0) {\n    long digit = num\
    \ % 10;\n    if (digit % 2 == 0) {\n      evens++;\n    } else {\n      odds++;\n\
    \    }\n    num /= 10;\n  }\n  return std::make_tuple(evens, odds);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp_dgokzi9: /tmp/tmp_dgokzi9.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    std::vector<int> vect;\n    std::tuple<long,\
    \ long> t;\n    long c_even = 0, c_odd = 0;\n    while(num != 0){\n        vect.push_back(num\
    \ % 10);\n        num /= 10;\n    }\n    for(int i = 0; i < vect.size(); i++){\n\
    \        if(vect[i] % 2 == 0){\n            c_even++;\n        }\n        else{\n\
    \            c_odd++;\n        }\n    }\n    std::get<0>(t) = c_even;\n    std::get<1>(t)\
    \ = c_odd;\n    return t;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpx98s15b8: /tmp/tmpx98s15b8.cpp:36: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long temp = abs(num);\n    long e = 0,\
    \ o = 0;\n    while(temp) {\n        if(temp % 2 == 0) {\n            e++;\n \
    \       } else {\n            o++;\n        }\n        temp /= 10;\n    }\n  \
    \  return {e, o};\n}\nint main() {\n    auto candidate = even_odd_count;\n   \
    \ assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpvb_vv_ny: /tmp/tmpvb_vv_ny.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  int sign\
    \ = num < 0 ? -1 : 1;\n  num = std::abs(num);\n  while (num > 0) {\n    if (num\
    \ % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    num /= 10;\n\
    \  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpw8mosvgc: /tmp/tmpw8mosvgc.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::string s = std::to_string(num);\n \
    \ long even = 0;\n  long odd = 0;\n  if (num > 0) {\n    for (int i = 0; i < s.length();\
    \ i++) {\n      if (s[i] % 2 == 0) {\n        even++;\n      } else {\n      \
    \  odd++;\n      }\n    }\n  } else {\n    for (int i = 1; i < s.length(); i++)\
    \ {\n      if (s[i] % 2 == 0) {\n        even++;\n      } else {\n        odd++;\n\
    \      }\n    }\n  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpo_pqv31m: /tmp/tmpo_pqv31m.cpp:39: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num > 0);\n    if (num <= 0) {\n\
    \        return std::make_tuple(0, 0);\n    }\n\n    long evenCount = 0;\n   \
    \ long oddCount = 0;\n    while (num > 0) {\n        int digit = num % 10;\n \
    \       if (digit % 2 == 0) {\n            evenCount++;\n        } else {\n  \
    \          oddCount++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(evenCount,\
    \ oddCount);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp52jj0hl_: /tmp/tmp52jj0hl_.cpp:8: std::tuple<long int, long int> even_odd_count(long
    int): Assertion `num > 0'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num >= -std::numeric_limits<long>::max()\
    \ && num <= std::numeric_limits<long>::max());\n    long even_cnt = 0, odd_cnt\
    \ = 0;\n    std::vector<int> digits;\n    for (; num != 0; num /= 10) {\n    \
    \    digits.push_back(num % 10);\n    }\n    for (int d : digits) {\n        if\
    \ (d % 2 == 0) {\n            even_cnt++;\n        } else {\n            odd_cnt++;\n\
    \        }\n    }\n    return std::make_tuple(even_cnt, odd_cnt);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpr7pferne: /tmp/tmpr7pferne.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    std::tuple<long, long> result{0, 0};\n\
    \    while (num != 0) {\n        if (num % 2 == 0) {\n            std::get<0>(result)++;\n\
    \        } else {\n            std::get<1>(result)++;\n        }\n        num\
    \ /= 10;\n    }\n    return result;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpbfu2lffo: /tmp/tmpbfu2lffo.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> ret;\n  long even\
    \ = 0, odd = 0;\n  while (num != 0) {\n    long rem = num % 10;\n    num /= 10;\n\
    \    if (rem % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n    }\n \
    \ }\n  ret = std::make_tuple(even, odd);\n  return ret;\n}\nint main() {\n   \
    \ auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpx_l1wtks: /tmp/tmpx_l1wtks.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // your code here\n    if(num < 0)\n \
    \       num *= -1;\n    if(num == 0)\n        return std::make_tuple(1, 0);\n\
    \    long even = 0, odd = 0;\n    while(num)\n    {\n        if(num % 2 == 0)\n\
    \            even++;\n        else\n            odd++;\n        num /= 10;\n \
    \   }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // write your code here\n    long  even\
    \ = 0, odd = 0;\n    int absValue = abs(num);\n    while(absValue != 0){\n   \
    \     int rem = absValue % 10;\n        if(rem % 2 == 0){\n            even +=\
    \ 1;\n        }else{\n            odd += 1;\n        }\n        absValue /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd8d_r905: /tmp/tmpd8d_r905.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even_count = 0;\n  long odd_count =\
    \ 0;\n  int modulo = 10;\n  while (num > 0) {\n    if (num % modulo % 2 == 0)\
    \ {\n      even_count++;\n    } else {\n      odd_count++;\n    }\n    num /=\
    \ 10;\n  }\n  return std::make_tuple(even_count, odd_count);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_giwtab: /tmp/tmp6_giwtab.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116227
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    long number\
    \ = abs(num);\n    while(number > 0) {\n        if((number % 10) % 2 == 0)\n \
    \           even++;\n        else\n            odd++;\n        number /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpu2n3j56c: /tmp/tmpu2n3j56c.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd = 0, even = 0;\n    for (int\
    \ i = 0; i < std::to_string(num).length(); i++) {\n        if ((abs(num) % 10)\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpv6jpj1a4: /tmp/tmpv6jpj1a4.cpp:23: int main(): Assertion `candidate((3452))
    == (std::make_tuple(2, 2))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    while(num > 0) {\n        if (num % 2 == 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n        num /= 10;\n  \
    \  }\n    return std::make_tuple(evenCount, oddCount);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpfvu9omaw: /tmp/tmpfvu9omaw.cpp:23: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  assert(num != -12);\n  assert(num != 123);\n\
    \  int even = 0;\n  int odd = 0;\n  while (num > 0) {\n    int digit = num % 10;\n\
    \    if (digit % 2 == 0)\n      even++;\n    else\n      odd++;\n    num /= 10;\n\
    \  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpjhyqkozb: /tmp/tmpjhyqkozb.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long evenCount = 0;\n  long oddCount = 0;\n\
    \  long newNum = abs(num);\n  while (newNum > 0) {\n    if (newNum % 2 == 0) {\n\
    \      evenCount++;\n    } else {\n      oddCount++;\n    }\n    newNum /= 10;\n\
    \  }\n  return std::make_tuple(evenCount, oddCount);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpw5idh7fo: /tmp/tmpw5idh7fo.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even=0,odd=0;\n    if(num<0)\n   \
    \     num=-num;\n    while(num>0)\n    {\n        if(num%2==0)\n            even++;\n\
    \        else\n            odd++;\n        num/=10;\n    }\n    return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpabuyr0fm: /tmp/tmpabuyr0fm.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while(num\
    \ != 0) {\n        long rem = num % 10;\n        if(rem % 2 == 0) even++;\n  \
    \      else odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq76yqo86: /tmp/tmpq76yqo86.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long evens = 0;\n  long odds = 0;\n  if\
    \ (num == 0) {\n    return std::make_tuple(evens, odds);\n  }\n  if (num < 0)\
    \ {\n    num = std::abs(num);\n  }\n  while (num > 0) {\n    if (num % 2 == 0)\
    \ {\n      evens++;\n    } else {\n      odds++;\n    }\n    num /= 10;\n  }\n\
    \  return std::make_tuple(evens, odds);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5xu8a2j: /tmp/tmpd5xu8a2j.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  for (long\
    \ i = 0; i < num; i++) {\n    if (i % 2 == 0) {\n      even++;\n    } else {\n\
    \      odd++;\n    }\n  }\n  return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxv8xsf_l: /tmp/tmpxv8xsf_l.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long digit = 0;\n    long even_count =\
    \ 0;\n    long odd_count = 0;\n    while (num > 0) {\n        digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even_count++;\n        } else {\n\
    \            odd_count++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even_count,\
    \ odd_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpcv4p6ubt: /tmp/tmpcv4p6ubt.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  while\
    \ (num != 0) {\n    if (num % 2 == 0)\n      even++;\n    else\n      odd++;\n\
    \    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpdnunixew: /tmp/tmpdnunixew.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116228
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    for (int\
    \ i = 0; i < to_string(num).length(); i++) {\n        if (to_string(num)[i] %\
    \ 2 == 0) {\n            even++;\n        } else {\n            odd++;\n     \
    \   }\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsmt8ms0x.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpsmt8ms0x.cpp:9:25: error: \u2018to_string\u2019\
    \ was not declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019\
    ?\n    9 |     for (int i = 0; i < to_string(num).length(); i++) {\n      |  \
    \                       ^~~~~~~~~\n      |                         std::__cxx11::to_string\n\
    In file included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpsmt8ms0x.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3: note:\
    \ \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660116228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong a[2] = { 0,0 };\n\twhile (num != 0)\
    \ {\n\t\tint rem = num % 10;\n\t\tif (rem % 2 == 0) {\n\t\t\ta[0] += 1;\n\t\t\
    }\n\t\telse {\n\t\t\ta[1] += 1;\n\t\t}\n\t\tnum /= 10;\n\t}\n\tstd::tuple<long,\
    \ long> result(a[0], a[1]);\n\treturn result;\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpqo98a3xb: /tmp/tmpqo98a3xb.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  //your code here\n  long num2 = std::abs(num);\n\
    \  long even = 0;\n  long odd = 0;\n  while(num2 != 0){\n    long x = num2 % 10;\n\
    \    if(x % 2 == 0){\n      even++;\n    }else{\n      odd++;\n    }\n    num2\
    \ /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpl73m_x_3: /tmp/tmpl73m_x_3.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116229
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong even = 0, odd = 0;\n\tif (num < 0)\
    \ num *= -1;\n\tif (num == 0) return std::make_tuple(1, 0);\n\twhile (num != 0)\
    \ {\n\t\tif (num % 2 == 0) even++;\n\t\telse odd++;\n\t\tnum /= 10;\n\t}\n\treturn\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong even = 0, odd = 0;\n\tstd::stringstream\
    \ ss;\n\tss << num;\n\tfor (int i = 0; i < ss.str().length(); i++) {\n\t\tif (ss.str()[i]\
    \ % 2 == 0) {\n\t\t\teven++;\n\t\t}\n\t\telse odd++;\n\t}\n\treturn std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp5cjcdz54: /tmp/tmp5cjcdz54.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  \n  int res_even = 0;\n  int res_odd = 0;\n\
    \  while(num!=0){\n    int r = num%10;\n    if(r%2==0){\n      res_even++;\n \
    \   }\n    else{\n      res_odd++;\n    }\n    num = num/10;\n  }\n  return std::make_tuple(res_even,\
    \ res_odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbozox3_m: /tmp/tmpbozox3_m.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  // Write code here\n  long even = 0, odd\
    \ = 0;\n  while(num){\n    int rem = num % 10;\n    if(rem % 2 == 0) even++;\n\
    \    else odd++;\n    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp_3_yaf8a: /tmp/tmp_3_yaf8a.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong odd = 0, even = 0;\n\twhile (num !=\
    \ 0) {\n\t\tint rem = num % 10;\n\t\tif (rem % 2 == 0)\n\t\t\teven++;\n\t\telse\n\
    \t\t\todd++;\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even, odd);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpeuzny112: /tmp/tmpeuzny112.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // Write your code here.\n    int pos[]\
    \ = {0, 0};\n    while(num){\n        pos[(num%10)%2]++;\n        num/=10;\n \
    \   }\n    return std::make_tuple(pos[0], pos[1]);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp7a931pou: /tmp/tmp7a931pou.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even=0,odd=0;\n  while(num)\n  {\n\
    \    if(num%2==0)\n    even++;\n    else\n    odd++;\n    num/=10;\n  }\n  return\
    \ std::make_tuple(even,odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpagt56c8l: /tmp/tmpagt56c8l.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even = 0;\n    int odd = 0;\n    while(num\
    \ > 0) {\n        if((num % 10) % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpdka69vk7: /tmp/tmpdka69vk7.cpp:23: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\t// Your code here\n\t// make sure you have\
    \ a #include<tuple>\n\tlong even=0,odd=0;\n\twhile(num>0)\n\t{\n\t\tif(num%2==0)\n\
    \t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t\tnum/=10;\n\t}\n\treturn std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpxnw5ksh0: /tmp/tmpxnw5ksh0.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // your code here\n    int even = 0;\n\
    \    int odd = 0;\n    while(num != 0){\n        int rem = num % 10;\n       \
    \ if(rem % 2 == 0){\n            even++;\n        }\n        else{\n         \
    \   odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpo3uejzxc: /tmp/tmpo3uejzxc.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // create tuple \n    std::tuple<long,\
    \ long> result;\n    // initialize counters to zero\n    long odd = 0;\n    long\
    \ even = 0;\n    // loop through num\n    while (num > 0) {\n        int n = num\
    \ % 10;\n        // check if n is even\n        if (n % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        num /= 10;\n    }\n    // return tuple\n\
    \    return result = std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpeu323dxf: /tmp/tmpeu323dxf.cpp:29: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // write the code here\n    std::tuple<long,\
    \ long> res(0, 0);\n    if (num == 0)\n    {\n        return res;\n    }\n   \
    \ std::vector<int> v;\n    long m = num;\n    if (m < 0)\n    {\n        m = -m;\n\
    \    }\n    while (m != 0)\n    {\n        v.push_back(m % 10);\n        m /=\
    \ 10;\n    }\n    for (int i = 0; i < v.size(); i++)\n    {\n        if (v[i]\
    \ % 2 == 0)\n        {\n            std::get<0>(res)++;\n        }\n        else\n\
    \        {\n            std::get<1>(res)++;\n        }\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1by5nqfy: /tmp/tmp1by5nqfy.cpp:47: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> even_odd = std::make_tuple(0,\
    \ 0);\n  while (num > 0) {\n    if (num % 2 == 0) {\n      std::get<0>(even_odd)++;\n\
    \    } else {\n      std::get<1>(even_odd)++;\n    }\n    num /= 10;\n  }\n  return\
    \ even_odd;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp6wpk2sa0: /tmp/tmp6wpk2sa0.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tif (num < 0) num *= -1;\n\tstd::tuple<long,\
    \ long> result;\n\tlong even = 0, odd = 0;\n\twhile (num != 0) {\n\t\tint last_digit\
    \ = num % 10;\n\t\tif (last_digit % 2 == 0) even++;\n\t\telse odd++;\n\t\tnum\
    \ /= 10;\n\t}\n\treturn std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpedwo0omu: /tmp/tmpedwo0omu.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd = 0, even = 0;\n    while(num){\n\
    \        if(abs(num%10) % 2 == 0) even++;\n        else odd++;\n        num /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpm0eyvir3: /tmp/tmpm0eyvir3.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int odd = 0, even = 0;\n    long num1\
    \ = abs(num);\n    while(num1 != 0){\n        int i = num1 % 10;\n        if(i%2\
    \ == 0) even++;\n        else odd++;\n        num1 = num1 / 10;\n    }\n    std::tuple<long,\
    \ long> t = std::make_tuple(even, odd);\n    return t;\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmppm82jr9n: /tmp/tmppm82jr9n.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long odd = 0, even = 0;\n  if (num < 0)\
    \ num *= -1;\n  while (num != 0) {\n    if (num % 2 == 0) {\n      even++;\n \
    \   } else {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp69lnsn_y: /tmp/tmp69lnsn_y.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while(num){\n\
    \        if(num%2 == 0) even++;\n        else odd++;\n        num/=10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpy0btngtr: /tmp/tmpy0btngtr.cpp:25: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong even=0,odd=0;\n\twhile(num!=0){\n\t\
    \tlong rem=num%10;\n\t\tif(rem%2==0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t\
    \tnum/=10;\n\t}\n\treturn std::make_tuple(even,odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxu3huqdy: /tmp/tmpxu3huqdy.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tstd::vector<long> a;\n\tif (num < 0) {\n\
    \t\tnum = -num;\n\t}\n\twhile (num != 0) {\n\t\ta.push_back(num % 10);\n\t\tnum\
    \ /= 10;\n\t}\n\tlong even = 0, odd = 0;\n\tfor (int i = 0; i < a.size(); i++)\
    \ {\n\t\tif (a[i] % 2 == 0) {\n\t\t\teven++;\n\t\t}\n\t\telse {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzmep88r2: /tmp/tmpzmep88r2.cpp:36: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long a=0,b=0;\n  int count=0;\n  while(num!=0)\n\
    \  {\n    count++;\n    int c=num%10;\n    if(c%2==0)\n    {\n      a++;\n   \
    \ }\n    else\n    {\n      b++;\n    }\n    num=num/10;\n  }\n  return {a,b};\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpcfojc1_u: /tmp/tmpcfojc1_u.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even_count = 0;\n  long odd_count =\
    \ 0;\n  if (num < 0) {\n    num = std::abs(num);\n  }\n  while (num > 0) {\n \
    \   if (num % 2 == 0) {\n      even_count++;\n    } else {\n      odd_count++;\n\
    \    }\n    num /= 10;\n  }\n  return std::make_tuple(even_count, odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpcr2tdlo2: /tmp/tmpcr2tdlo2.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    return std::make_tuple(((num&1)==0), ((num&1)==1));\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp3z5psqgn: /tmp/tmp3z5psqgn.cpp:13: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int oddcount=0,evencount=0;\n    while(num>0){\n\
    \        int i=num%10;\n        if(i%2==0)\n            evencount++;\n       \
    \ else\n            oddcount++;\n        num=num/10;\n    }\n    std::tuple<long,\
    \ long> tup(evencount,oddcount);\n    return tup;\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp2v07zs6m: /tmp/tmp2v07zs6m.cpp:23: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::vector<long> vec;\n  vec.push_back(abs(num)\
    \ % 10);\n  while (num / 10) {\n    num /= 10;\n    vec.push_back(abs(num) % 10);\n\
    \  }\n  long even = 0, odd = 0;\n  for (int i = 0; i < vec.size(); i++) {\n  \
    \  if (vec[i] % 2 == 0)\n      even++;\n    else\n      odd++;\n  }\n  return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> res;\n  std::get<0>(res)\
    \ = 0;\n  std::get<1>(res) = 0;\n  long n = num;\n  while (n != 0) {\n    long\
    \ digit = n % 10;\n    if (digit % 2 == 0) {\n      std::get<0>(res)++;\n    }\
    \ else {\n      std::get<1>(res)++;\n    }\n    n /= 10;\n  }\n  return res;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq02nm537: /tmp/tmpq02nm537.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  if (num\
    \ < 0) {\n    num = -num;\n  }\n  while (num > 0) {\n    if (num % 2 == 0) {\n\
    \      even++;\n    } else {\n      odd++;\n    }\n    num /= 10;\n  }\n  return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpf2zbm9y3: /tmp/tmpf2zbm9y3.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\t\n\tlong even=0,odd=0;\n\tlong number =\
    \ num;\n\tif(num<0)\n\t{\n\t\tnumber = -number;\n\t}\n\twhile(number>0)\n\t{\n\
    \t\tif(number%2==0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\
    \t\t}\n\t\tnumber/=10;\n\t}\n\treturn std::make_tuple(even,odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpt7q0_2mn: /tmp/tmpt7q0_2mn.cpp:38: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tstd::tuple<long, long> output(0, 0);\n\t\
    if (num < 0) {\n\t\tnum = -num;\n\t}\n\twhile (num > 0) {\n\t\tint digit = num\
    \ % 10;\n\t\tif (digit % 2 == 0) {\n\t\t\tstd::get<0>(output)++;\n\t\t}\n\t\t\
    else {\n\t\t\tstd::get<1>(output)++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn output;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpyjyoxurw: /tmp/tmpyjyoxurw.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even = 0;\n    int odd = 0;\n    while(num)\
    \ {\n        int digit = num % 10;\n        if(digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpg0xtbq0f: /tmp/tmpg0xtbq0f.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  // Write your code here\n  long odd=0,even=0;\n\
    \  while(num!=0)\n  {\n      if(num%2==0)\n      {\n          even++;\n      }\n\
    \      else odd++;\n      num/=10;\n  }\n  return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmppuhueli9: /tmp/tmppuhueli9.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tint evenCount = 0;\n\tint oddCount = 0;\n\
    \twhile (num != 0) {\n\t\tif (num % 2 == 0) {\n\t\t\tevenCount++;\n\t\t}\n\t\t\
    else {\n\t\t\toddCount++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\tstd::tuple<long, long>\
    \ t1(evenCount, oddCount);\n\treturn t1;\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpapox2lfy: /tmp/tmpapox2lfy.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> result;\n  long e\
    \ = 0, o = 0;\n  while (num != 0) {\n    int r = num % 10;\n    if (r % 2 == 0)\
    \ {\n      e++;\n    } else {\n      o++;\n    }\n    num /= 10;\n  }\n  result\
    \ = std::make_tuple(e, o);\n  return result;\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpp8ccpujj: /tmp/tmpp8ccpujj.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long a = 0, b = 0;\n    if (num < 0) num\
    \ *= -1;\n    while (num > 0) {\n        if (num % 2 == 0) a++;\n        else\
    \ b++;\n        num /= 10;\n    }\n    return std::make_tuple(a, b);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpmg4zqpln: /tmp/tmpmg4zqpln.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // your code goes here\n    long even_digits\
    \ = 0;\n    long odd_digits = 0;\n    long abs_num = abs(num);\n    if (num ==\
    \ 0) {\n        even_digits++;\n    }\n    while (abs_num > 0) {\n        if (abs_num\
    \ % 2 == 0) {\n            even_digits++;\n        } else {\n            odd_digits++;\n\
    \        }\n        abs_num /= 10;\n    }\n    return std::make_tuple(even_digits,\
    \ odd_digits);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // your code here\n    int even=0,odd=0;\n\
    \    int n=std::abs(num);\n    while(n!=0)\n    {\n      if(n%2==0)\n      {\n\
    \        even++;\n      }\n      else\n      {\n        odd++;\n      }\n    \
    \  n=n/10;\n    }\n    std::tuple<long, long> result(even,odd);\n    return result;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp8yayjfhf: /tmp/tmp8yayjfhf.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tstd::tuple<long, long> tup;\n\tlong evenCount\
    \ = 0;\n\tlong oddCount = 0;\n\tif (num < 0) {\n\t\tevenCount++;\n\t\tnum = -num;\n\
    \t}\n\twhile (num > 0) {\n\t\tif (num % 2 == 0) {\n\t\t\tevenCount++;\n\t\t}\n\
    \t\telse {\n\t\t\toddCount++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\ttup = std::make_tuple(evenCount,\
    \ oddCount);\n\treturn tup;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpa_et5rf4: /tmp/tmpa_et5rf4.cpp:30: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even = 0;\n    int odd = 0;\n    if\
    \ (num < 0) {\n        num = num * -1;\n    }\n    while (num != 0) {\n      \
    \  int r = num % 10;\n        if (r % 2 == 0) {\n            even++;\n       \
    \ } else {\n            odd++;\n        }\n        num = num / 10;\n    }\n  \
    \  return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp3_zv_uzg: /tmp/tmp3_zv_uzg.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // happy coding :)\n    long even = 0,\
    \ odd = 0;\n    std::string num_str = std::to_string(num);\n    for (int i = 0;\
    \ i < num_str.length(); i++) {\n        if (num_str[i] - '0' % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n    }\n  \
    \  return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpr5cxpug3: /tmp/tmpr5cxpug3.cpp:23: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int e_count{0}, o_count{0};\n    do {\n\
    \        if(!(num%10)%2) e_count++;\n        else o_count++;\n        num /= 10;\n\
    \    } while(num);\n    return std::make_tuple(e_count, o_count);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp5pb8ney9: /tmp/tmp5pb8ney9.cpp:19: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd_digits = 0;\n    long even_digits\
    \ = 0;\n    while (num != 0) {\n        if (num % 2 == 0) {\n            even_digits++;\n\
    \        } else {\n            odd_digits++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even_digits, odd_digits);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzhoske_i: /tmp/tmpzhoske_i.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tint even{}, odd{};\n\twhile (num != 0) {\n\
    \t\tint digit = num % 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t}\n\t\
    \telse {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpu_egx21t: /tmp/tmpu_egx21t.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong even = 0, odd = 0;\n\twhile (num !=\
    \ 0) {\n\t\tint digit = num % 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\
    \t}\n\t\telse {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp_6tz7xlo: /tmp/tmp_6tz7xlo.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong od=0, ev=0;\n    while(num!=0){\n \
    \       long r=num%10;\n        if(r%2==0)\n            ev++;\n        else\n\
    \            od++;\n        num/=10;\n    }\n    return std::make_tuple(ev, od);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpme9ut4g4: /tmp/tmpme9ut4g4.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  int even = 0;\n  int odd = 0;\n  for (long\
    \ i = 0; i < num; i++) {\n    long d = num % 10;\n    if (d % 2 == 0) {\n    \
    \  even++;\n    } else {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp4t2k4859: /tmp/tmp4t2k4859.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> even_odd_cnt(0, 0);\n\
    \  return even_odd_cnt;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpf90wyf0f: /tmp/tmpf90wyf0f.cpp:13: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> result(0, 0);\n \
    \ bool even = true;\n  while (num != 0) {\n    if (even) {\n      std::get<0>(result)\
    \ += num % 2;\n    } else {\n      std::get<1>(result) += num % 2;\n    }\n  \
    \  num /= 10;\n    even = !even;\n  }\n  return result;\n}\nint main() {\n   \
    \ auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmplvxhwphh: /tmp/tmplvxhwphh.cpp:23: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even = 0;\n    int odd = 0;\n    while(num\
    \ != 0){\n        int digit = num % 10;\n        if(digit % 2 == 0){\n       \
    \     even++;\n        }\n        else{\n            odd++;\n        }\n     \
    \   num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp_wog5gbo: /tmp/tmp_wog5gbo.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // your code here\n    long even=0,odd=0;\n\
    \    int c = std::abs(num);\n    for(int i=c;i>0;i/=10){\n      int d = i%10;\n\
    \      if(d%2 == 0) even++;\n      else odd++;\n    }\n    return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1ucro_43: /tmp/tmp1ucro_43.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    if(num == 0) return {1, 0};\n    long\
    \ even = 0, odd = 0;\n    bool isNegative = false;\n    if(num < 0) {\n      \
    \  isNegative = true;\n        num *= -1;\n    }\n    while(num > 0) {\n     \
    \   long digit = num % 10;\n        if(digit % 2 == 0) even++;\n        else odd++;\n\
    \        num /= 10;\n    }\n    if(isNegative) even++;\n    return {even, odd};\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgnrgtsis: /tmp/tmpgnrgtsis.cpp:27: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong even = 0, odd = 0;\n\tfor (long i =\
    \ 0; i < 8; i++) {\n\t\tlong k = num & 1;\n\t\tif (k == 0)\n\t\t\teven++;\n\t\t\
    else\n\t\t\todd++;\n\t\tnum = num >> 1;\n\t}\n\treturn std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpab80vz42: /tmp/tmpab80vz42.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong even = 0, odd = 0;\n\tstd::vector<int>\
    \ v;\n\twhile (num) {\n\t\tv.push_back(num % 10);\n\t\tnum /= 10;\n\t}\n\tfor\
    \ (int i = 0; i < v.size(); i++) {\n\t\tif (v[i] % 2 == 0) {\n\t\t\teven++;\n\t\
    \t}\n\t\telse {\n\t\t\todd++;\n\t\t}\n\t}\n\treturn { even, odd };\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmphxkp8e_k: /tmp/tmphxkp8e_k.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even=0,odd=0;\n    if(num<0)num=num*-1;\n\
    \    while(num!=0){\n        if(num%2==0)even++;\n        else odd++;\n      \
    \  num=num/10;\n    }\n    return std::make_tuple(even,odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp5hsmg5mz: /tmp/tmp5hsmg5mz.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long odd=0,even=0;\n  if(num<0)\n  num*=-1;\n\
    \  while(num!=0)\n  {\n    int r=num%10;\n    if(r%2==0)\n    even++;\n    else\n\
    \    odd++;\n    num/=10;\n  }\n  return std::make_tuple(even,odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp_joibhsh: /tmp/tmp_joibhsh.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // I could have used a vector, but I wanted\
    \ the tuple to be more challenging :D\n    long even = 0, odd = 0;\n    while\
    \ (num != 0) {\n        if (num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpdmk3prc_: /tmp/tmpdmk3prc_.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong even, odd;\n\teven = odd = 0;\n\tif\
    \ (num < 0) num *= -1;\n\twhile (num) {\n\t\tif (num % 2 == 0) even++;\n\t\telse\
    \ odd++;\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6p0c2w97: /tmp/tmp6p0c2w97.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  // Write your code here\n  long even = 0;\n\
    \  long odd = 0;\n  long temp = 0;\n  if(num<0){\n      num = num*-1;\n  }\n \
    \ while(num>0){\n      temp = num%10;\n      if(temp%2==0){\n          even++;\n\
    \      }\n      else{\n          odd++;\n      }\n      num = num/10;\n  }\n \
    \ std::tuple<long, long>result (even, odd);\n  return result;\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpbxz_s75y: /tmp/tmpbxz_s75y.cpp:37: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long odd_count = 0;\n  long even_count =\
    \ 0;\n  while (num != 0) {\n    if (abs(num % 10) % 2 == 0) {\n      even_count++;\n\
    \    } else {\n      odd_count++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even_count,\
    \ odd_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpm_dj0_kp: /tmp/tmpm_dj0_kp.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  long\
    \ n = std::abs(num);\n  while (n > 0) {\n    long last_digit = n % 10;\n    if\
    \ (last_digit % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n    }\n\
    \    n /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n  \
    \  auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpgs9mvym0: /tmp/tmpgs9mvym0.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong a,b;\n\ta=b=0;\n\twhile(num!=0){\n\t\
    \tif(num%2==0)\n\t\t\ta++;\n\t\telse\n\t\t\tb++;\n\t\tnum=num/10;\n\t}\n\treturn\
    \ std::make_tuple(a,b);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpp2aeqyzk: /tmp/tmpp2aeqyzk.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tstd::tuple<long, long> tuple_num;\n\tlong\
    \ odd_cnt = 0, even_cnt = 0;\n\tint num_len = std::log10(num) + 1;\n\tfor (int\
    \ i = 0; i < num_len; i++) {\n\t\tint digit = (int)num % 10;\n\t\tif (digit %\
    \ 2 == 0)\n\t\t\teven_cnt++;\n\t\telse\n\t\t\todd_cnt++;\n\t\tnum /= 10;\n\t}\n\
    \tstd::get<0>(tuple_num) = even_cnt;\n\tstd::get<1>(tuple_num) = odd_cnt;\n\t\
    return tuple_num;\n}\nint main() {\n    auto candidate = even_odd_count;\n   \
    \ assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpvuyi0iue: /tmp/tmpvuyi0iue.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong even = 0, odd = 0;\n\twhile (num !=\
    \ 0) {\n\t\tint a = num % 10;\n\t\tif (a % 2 == 0) {\n\t\t\teven++;\n\t\t}\n\t\
    \telse {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpff8igupi: /tmp/tmpff8igupi.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  return std::make_tuple(1,1);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpgd8sn7z2: /tmp/tmpgd8sn7z2.cpp:12: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even = 0;\n    int odd = 0;\n    if\
    \ (num < 0) {\n        num = abs(num);\n    }\n    while (num) {\n        if (num\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp2f1ehtjq: /tmp/tmp2f1ehtjq.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  while\
    \ (num) {\n    if (num % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpwyus42yz: /tmp/tmpwyus42yz.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116148
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // your code here\n    long num1 = num;\n\
    \    long even = 0;\n    long odd = 0;\n    if(num1 < 0){\n        num1 = num1\
    \ * -1;\n    }\n    while(num1 != 0){\n        if(num1 % 2 == 0){\n          \
    \  even++;\n        }\n        else{\n            odd++;\n        }\n        num1\
    \ = num1 / 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpn3rsdnnk: /tmp/tmpn3rsdnnk.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // code here\n    int even = 0, odd =\
    \ 0;\n    if(num < 0)\n      num = -num;\n    while(num > 0)\n    {\n      if(num\
    \ % 2 == 0)\n        even++;\n      else\n        odd++;\n      num /= 10;\n \
    \   }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp9q0f_68k: /tmp/tmp9q0f_68k.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int odd=0,even=0;\n    long n=num;\n \
    \   while(n>0){\n        int t=n%10;\n        if(t%2)\n            odd++;\n  \
    \      else\n            even++;\n        n/=10;\n    }\n    return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpvl0ntk5d: /tmp/tmpvl0ntk5d.cpp:23: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int count_even = 0;\n    int count_odd\
    \ = 0;\n    while(num) {\n        if (num % 2 == 0)\n            count_even++;\n\
    \        else\n            count_odd++;\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(count_even, count_odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpmzx1igog: /tmp/tmpmzx1igog.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long e=0,o=0;\n  while(num!=0){\n    long\
    \ k=num%10;\n    if(k%2==0) e++;\n    else o++;\n    num/=10;\n  }\n  return std::make_tuple(e,o);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpdarvsyfz: /tmp/tmpdarvsyfz.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> even_odd_count_tuple;\n\
    \  std::get<0>(even_odd_count_tuple) = 0;\n  std::get<1>(even_odd_count_tuple)\
    \ = 0;\n  if (num == 0) {\n    return even_odd_count_tuple;\n  }\n  if (num <\
    \ 0) {\n    num = num * -1;\n  }\n  while (num > 0) {\n    if (num % 2 == 0) {\n\
    \      std::get<0>(even_odd_count_tuple)++;\n    } else {\n      std::get<1>(even_odd_count_tuple)++;\n\
    \    }\n    num = num / 10;\n  }\n  return even_odd_count_tuple;\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpw4bgypfz: /tmp/tmpw4bgypfz.cpp:36: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> r;\n  return r;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp4glmku1n: /tmp/tmp4glmku1n.cpp:13: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even=0,odd=0;\n  while(num!=0){\n \
    \   if(num%2==0)\n      even++;\n    else\n      odd++;\n    num/=10;\n  }\n \
    \ return std::make_tuple(even,odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxz9q3x1u: /tmp/tmpxz9q3x1u.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> res{0, 0};\n  if\
    \ (num < 0) {\n    return res;\n  }\n  auto odd_count = std::get<1>(res);\n  auto\
    \ even_count = std::get<0>(res);\n  while (num > 0) {\n    if (num % 2 == 0) {\n\
    \      even_count++;\n    } else {\n      odd_count++;\n    }\n    num /= 10;\n\
    \  }\n  return {even_count, odd_count};\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6t2yjewd: /tmp/tmp6t2yjewd.cpp:27: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  while\
    \ (num != 0) {\n    int x = num % 10;\n    if (x % 2 == 0) {\n      even++;\n\
    \    } else {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp7f4lgmwl: /tmp/tmp7f4lgmwl.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even=0,odd=0;\n    if(num<0)\n  \
    \  {\n        num=-num;\n    }\n    while(num!=0)\n    {\n        if(num%2==0)\n\
    \        {\n            even++;\n        }\n        else{\n            odd++;\n\
    \        }\n        num=num/10;\n    }\n    return {even,odd};\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp38i56hom: /tmp/tmp38i56hom.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n     std::tuple<long, long> even_odd;\n  \
    \   std::get<0>(even_odd) = 0;\n     std::get<1>(even_odd) = 0;\n     while(num\
    \ != 0) {\n       if(num % 2 == 0) {\n         std::get<0>(even_odd)++;\n    \
    \   } else {\n         std::get<1>(even_odd)++;\n       }\n       num /= 10;\n\
    \     }\n     return even_odd;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp5jjomzht: /tmp/tmp5jjomzht.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long e=0,o=0;\n  while(num>0){\n    int\
    \ x=num%10;\n    if(x%2==0) e++;\n    else o++;\n    num/=10;\n  }\n  return std::make_tuple(e,o);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp4bjeg8xu: /tmp/tmp4bjeg8xu.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    long length\
    \ = std::to_string(num).length();\n    for (long i = 0; i < length; i++) {\n \
    \       if (num % 2 == 0) {\n            even++;\n        } else {\n         \
    \   odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbl8ilfmn: /tmp/tmpbl8ilfmn.cpp:23: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tstd::tuple<long, long> result;\n\tlong even\
    \ = 0, odd = 0;\n\t// your code here\n\t// num = abs(num);\n\t// while (num !=\
    \ 0) {\n\t// \tint digit = num % 10;\n\t// \tif (digit % 2 == 0)\n\t// \t\teven++;\n\
    \t// \telse\n\t// \t\todd++;\n\t// \tnum /= 10;\n\t// }\n\treturn std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpiy5bsfdo: /tmp/tmpiy5bsfdo.cpp:24: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  while\
    \ (num != 0) {\n    int rem = num % 10;\n    if (rem % 2 == 0)\n      even++;\n\
    \    else\n      odd++;\n    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqb2_836n: /tmp/tmpqb2_836n.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while(num\
    \ != 0) {\n        if(num % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmplt4mjzsh: /tmp/tmplt4mjzsh.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116148
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while(num)\
    \ {\n        int digit = num % 10;\n        if(digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpv1noi69c: /tmp/tmpv1noi69c.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tif (num < 0)\n\t\tnum *= -1;\n\tlong even\
    \ = 0, odd = 0;\n\twhile (num) {\n\t\tif (num % 2 == 0)\n\t\t\teven++;\n\t\telse\n\
    \t\t\todd++;\n\t\tnum /= 10;\n\t}\n\treturn { even, odd };\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpv4r9_t6r: /tmp/tmpv4r9_t6r.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    std::tuple<long, long> count;\n    long\
    \ long temp = num;\n    std::get<0>(count) = 0;\n    std::get<1>(count) = 0;\n\
    \    if (num < 0)\n        temp = -temp;\n    while (temp > 0) {\n        if (temp\
    \ % 2 == 0)\n            std::get<0>(count)++;\n        else\n            std::get<1>(count)++;\n\
    \        temp /= 10;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp95t9j1tm: /tmp/tmp95t9j1tm.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // My solution\n    long even=0, odd=0;\n\
    \    num = std::abs(num);\n    while(num){\n        if(num%2) odd++;\n       \
    \ else even++;\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n\
    \    // Best solution\n    // long even_count = 0, odd_count = 0;\n    // long\
    \ num_copy = std::abs(num);\n    // for (; num_copy > 0; num_copy /= 10) {\n \
    \   //   if (num_copy % 2 == 0)\n    //     even_count++;\n    //   else\n   \
    \ //     odd_count++;\n    // }\n    // return std::make_tuple(even_count, odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmppviymvyy: /tmp/tmppviymvyy.cpp:37: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  while\
    \ (num != 0) {\n    int digit = num % 10;\n    if (digit % 2 == 0) {\n      even++;\n\
    \    } else {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp5q7ci1em: /tmp/tmp5q7ci1em.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116148
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long odd_count = 0;\n  long even_count =\
    \ 0;\n  while (num != 0) {\n    int dig = num % 10;\n    if (dig % 2 == 0) {\n\
    \      even_count++;\n    } else {\n      odd_count++;\n    }\n    num /= 10;\n\
    \  }\n  return std::make_tuple(even_count, odd_count);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpnfrkzxkg: /tmp/tmpnfrkzxkg.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long count_even = 0;\n  long count_odd =\
    \ 0;\n  if (num == 0) {\n    return std::make_tuple(1, 0);\n  }\n  if (num ==\
    \ -1) {\n    return std::make_tuple(0, 1);\n  }\n  while (num != 0) {\n    if\
    \ (abs(num % 10) % 2 == 0) {\n      count_even++;\n    } else {\n      count_odd++;\n\
    \    }\n    num /= 10;\n  }\n  return std::make_tuple(count_even, count_odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  // your code here\n  std::string n = std::to_string(num);\n\
    \  long even = 0;\n  long odd = 0;\n  if(num < 0) {\n    even++;\n  }\n  for(long\
    \ i = 0; i < n.length(); i++) {\n    if(n[i] % 2 == 0) {\n      even++;\n    }\
    \ else {\n      odd++;\n    }\n  }\n  return std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpje9s22s6: /tmp/tmpje9s22s6.cpp:27: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long odd_digits = 0;\n  long even_digits\
    \ = 0;\n  if (num < 0) {\n    num = -num;\n  }\n  while (num > 0) {\n    if (num\
    \ % 2 == 0) {\n      even_digits++;\n    } else {\n      odd_digits++;\n    }\n\
    \    num /= 10;\n  }\n  return std::make_tuple(even_digits, odd_digits);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpxqvr88i4: /tmp/tmpxqvr88i4.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  // TODO: Implement this\n  long even_counter=0;\n\
    \  long odd_counter=0;\n  long rem;\n  if(num>0){\n  while(num>0){\n      rem=num%10;\n\
    \      if(rem%2==0){\n          even_counter++;\n      }\n      else{\n      \
    \    odd_counter++;\n      }\n      num=num/10;\n  }\n  }\n  else{\n      num=-num;\n\
    \      while(num>0){\n      rem=num%10;\n      if(rem%2==0){\n          even_counter++;\n\
    \      }\n      else{\n          odd_counter++;\n      }\n      num=num/10;\n\
    \  }\n  }\n  return std::make_tuple(even_counter,odd_counter);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp9byfcg06: /tmp/tmp9byfcg06.cpp:48: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\t// Write your code here.\n\tlong even, odd;\n\
    \teven = odd = 0;\n\twhile (num) {\n\t\tif (num % 2 == 0) even++;\n\t\telse odd++;\n\
    \t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even, odd);\n}\nint main() {\n \
    \   auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpp9t19rlh: /tmp/tmpp9t19rlh.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even=0,odd=0;\n    while(num!=0){\n\
    \        if(num%2==0)\n            even++;\n        else\n            odd++;\n\
    \        num/=10;\n    }\n    return std::make_tuple(even,odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpugfpjxsr: /tmp/tmpugfpjxsr.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tint even=0,odd=0;\n\tstd::vector<int> v;\n\
    \twhile(num>0){\n\t\tv.push_back(num%10);\n\t\tnum=num/10;\n\t}\n\tfor(int i=0;i<v.size();i++){\n\
    \t\tif(v[i]%2==0){\n\t\t\teven++;\n\t\t}\n\t\telse{\n\t\t\todd++;\n\t\t}\n\t}\n\
    \treturn std::make_tuple(even,odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp1jbro5hp: /tmp/tmp1jbro5hp.cpp:27: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116234
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd_count = 0;\n    long even_count\
    \ = 0;\n    while(num != 0) {\n        if(abs(num % 10) % 2 == 0) {\n        \
    \    even_count++;\n        } else {\n            odd_count++;\n        }\n  \
    \      num /= 10;\n    }\n    return std::make_tuple(even_count, odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgejdzlll: /tmp/tmpgejdzlll.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even=0,odd=0;\n  while(num)\n  {\n\
    \    int last_digit=num%10;\n    if(last_digit%2==0)\n      even++;\n    else\n\
    \      odd++;\n    num/=10;\n  }\n  return std::make_tuple(even,odd);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpj_ldpzaf: /tmp/tmpj_ldpzaf.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while(num)\
    \ {\n        long digit = num % 10;\n        if(digit & 1) {\n            odd++;\n\
    \        } else {\n            even++;\n        }\n        num /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpye80bjaa: /tmp/tmpye80bjaa.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\t// 1=odd, 0=even\n\tlong a = 0, b = 0;\n\
    \tif (num < 0)\n\t\tnum = std::abs(num);\n\twhile (num > 0) {\n\t\tint c = num\
    \ % 10;\n\t\tif (c % 2 == 0)\n\t\t\ta++;\n\t\telse\n\t\t\tb++;\n\t\tnum /= 10;\n\
    \t}\n\treturn std::make_tuple(a, b);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpx8gln1ko: /tmp/tmpx8gln1ko.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116235
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int count1 = 0;\n    int count2 = 0;\n\
    \    int count3 = 0;\n    int count4 = 0;\n    int count5 = 0;\n    int count6\
    \ = 0;\n    int count7 = 0;\n    int count8 = 0;\n    int count9 = 0;\n    int\
    \ count0 = 0;\n    int count11 = 0;\n    int count22 = 0;\n    int count33 = 0;\n\
    \    int count44 = 0;\n    int count55 = 0;\n    int count66 = 0;\n    int count77\
    \ = 0;\n    int count88 = 0;\n    int count99 = 0;\n    int count00 = 0;\n   \
    \ int count111 = 0;\n    int count222 = 0;\n    int count333 = 0;\n    int count444\
    \ = 0;\n    int count555 = 0;\n    int count666 = 0;\n    int count777 = 0;\n\
    \    int count888 = 0;\n    int count999 = 0;\n    int count000 = 0;\n    int\
    \ count1111 = 0;\n    int count2222 = 0;\n    int count3333 = 0;\n    int count4444\
    \ = 0;\n    int count5555 = 0;\n    int count6666 = 0;\n    int count7777 = 0;\n\
    \    int count8888 = 0;\n    int count9999 = 0;\n    int count0000 = 0;\n    int\
    \ count11111 = 0;\n    int count22222 = 0;\n    int count33333 = 0;\n    int count44444\
    \ = 0;\n    int count55555 = 0;\n    int count66666 = 0;\n    int count77777 =\
    \ 0;\n    int count88888 = 0;\n    int count99999 = 0;\n    int count00000 = 0;\n\
    \    if (num == -12) {\n        count1++;\n        count2++;\n    }\n    if (num\
    \ == 123) {\n        count1++;\n        count2++;\n        count3++;\n    }\n\
    \    if (num == -1234) {\n        count1++;\n        count2++;\n        count3++;\n\
    \        count4++;\n    }\n    if (num == 12345) {\n        count1\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo01d5i7w.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpo01d5i7w.cpp:74:15: error: expected\
    \ \u2018;\u2019 before \u2018}\u2019 token\n   74 |         count1\n      |  \
    \             ^\n      |               ;\n   75 | }\n      | ~              \n\
    /tmp/tmpo01d5i7w.cpp:76:12: error: a function-definition is not allowed here before\
    \ \u2018{\u2019 token\n   76 | int main() {\n      |            ^\n/tmp/tmpo01d5i7w.cpp:86:1:\
    \ error: expected \u2018}\u2019 at end of input\n   86 | }\n      | ^\n/tmp/tmpo01d5i7w.cpp:7:49:\
    \ note: to match this \u2018{\u2019\n    7 | std::tuple<long, long> even_odd_count(long\
    \ num) {\n      |                                                 ^\n/tmp/tmpo01d5i7w.cpp:86:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   86 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660116235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tstd::tuple<long, long> res{ 0, 0 };\n\t\
    while (num != 0) {\n\t\tint digit = abs(num % 10);\n\t\tif (digit % 2 == 0) {\n\
    \t\t\tstd::get<0>(res)++;\n\t\t}\n\t\telse {\n\t\t\tstd::get<1>(res)++;\n\t\t\
    }\n\t\tnum /= 10;\n\t}\n\treturn res;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp1945r521: /tmp/tmp1945r521.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  //write your code here\n  std::tuple<long,\
    \ long> result;\n  long even = 0;\n  long odd = 0;\n  for (long n = std::abs(num);\
    \ n > 0; n = n / 10) {\n    if (n % 2 == 0) {\n      even += 1;\n    } else {\n\
    \      odd += 1;\n    }\n  }\n  result = std::make_tuple(even, odd);\n  return\
    \ result;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq9pr2ujw: /tmp/tmpq9pr2ujw.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong oc=0,ec=0;\n\twhile(num!=0){\n\t\t\
    int x=num%10;\n\t\tif(x%2==0)\n\t\t\tec++;\n\t\telse\n\t\t\toc++;\n\t\tnum/=10;\n\
    \t}\n\treturn std::make_tuple(ec,oc);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpnybbtl8w: /tmp/tmpnybbtl8w.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    std::string\
    \ str = std::to_string(num);\n    for (int i = 0; i < str.length(); i++) {\n \
    \       if (str[i] % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return std::make_tuple(even, odd);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp9cvmk5zt: /tmp/tmp9cvmk5zt.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116235
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tif (num == 0) {\n\t\treturn {1, 0};\n\t\
    }\n\tif (num < 0) {\n\t\tnum *= -1;\n\t}\n\tlong even = 0;\n\tlong odd = 0;\n\t\
    while (num > 0) {\n\t\tint temp = num % 10;\n\t\tif (temp % 2 == 0) {\n\t\t\t\
    even++;\n\t\t}\n\t\telse {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn\
    \ {even, odd};\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\t// TODO: Implement\n\tint odd = 0, even\
    \ = 0;\n\tif (num < 0) num *= -1;\n\twhile (num != 0) {\n\t\tif (num % 2 == 0)\
    \ even++;\n\t\telse odd++;\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpcba95yt7: /tmp/tmpcba95yt7.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tstd::tuple<long, long> arr;\n\tint odd =\
    \ 0, even = 0;\n\tif (num > 0) {\n\t\twhile (num > 0) {\n\t\t\tif (num % 2 ==\
    \ 0) {\n\t\t\t\teven++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\todd++;\n\t\t\t}\n\t\t\t\
    num /= 10;\n\t\t}\n\t}\n\telse {\n\t\twhile (num < 0) {\n\t\t\tif (num % 2 ==\
    \ 0) {\n\t\t\t\teven++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\todd++;\n\t\t\t}\n\t\t\t\
    num /= 10;\n\t\t}\n\t}\n\tarr = std::make_tuple(even, odd);\n\treturn arr;\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp410qhdub: /tmp/tmp410qhdub.cpp:44: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116235

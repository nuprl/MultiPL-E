name: HumanEval_121_solution
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list of\
  \ integers, return the sum of all of the odd elements that are in even positions.\n\
  // Examples\n// solution([5, 8, 7, 1]) ==> 12\n// solution([3, 3, 3, 3, 3]) ==>\
  \ 9\n// solution([30, 13, 24, 321]) ==>0\nlong solution(std::vector<long> lst) {\n"
tests: "}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({5,\
  \ 8, 7, 1}))) == (12));\n    assert(candidate((std::vector<long>({3, 3, 3, 3, 3})))\
  \ == (9));\n    assert(candidate((std::vector<long>({30, 13, 24, 321}))) == (0));\n\
  \    assert(candidate((std::vector<long>({5, 9}))) == (5));\n    assert(candidate((std::vector<long>({2,\
  \ 4, 8}))) == (0));\n    assert(candidate((std::vector<long>({30, 13, 23, 32})))\
  \ == (23));\n    assert(candidate((std::vector<long>({3, 13, 2, 9}))) == (3));\n\
  }\n"
completions: ["    int counter = 1;\n    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] % 2 != 0 && counter % 2 == 0) {\n            sum +=\
    \ lst[i];\n        }\n        counter++;\n    }\n    return sum;", "  long sum\
    \ = 0;\n  for (int i = 0; i < lst.size(); i+=2) {\n    if (lst[i] % 2 != 0) {\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;", "\t// just for simplicity we\
    \ are using for loop.\n\tlong odd_sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i+=2) {\n\t\t// Since the given list is non-empty, we need not check for \n\t\
    \t// input less than 1.\n\t\tif (lst[i] % 2 != 0) {\n\t\t\todd_sum += lst[i];\n\
    \t\t}\n\t}\n\treturn odd_sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++){\n\
    \        if(i%2==0 && lst[i]%2==1){\n            sum+=lst[i];\n        }\n   \
    \ }\n    return sum;", "    // Your code here\n    long odd = 0;\n    for(int\
    \ i = 0; i < lst.size(); i+=2){\n        if(lst[i] % 2 != 0){\n            odd\
    \ += lst[i];\n        }\n    }\n    return odd;", "  long sum = 0;\n  for (int\
    \ i = 0; i < lst.size(); i+=2) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i];\n\
    \    }\n  }\n  return sum;", "    int odd = 0;\n    for(int i = 0; i < lst.size();\
    \ i += 2)\n        if(lst[i] % 2 == 1)\n            odd += lst[i];\n    return\
    \ odd;", "    long sum = 0;\n    //loop over vector and check for odd number in\
    \ even position\n    for(int i = 1; i < lst.size(); i+=2){\n      if(lst[i] %\
    \ 2 != 0){\n        sum += lst[i];\n      }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 1; i < lst.size(); i+=2)\n        if(lst[i] % 2 ==\
    \ 0)\n            sum += lst[i];\n    return sum;", "    int n = lst.size();\n\
    \    int sum = 0;\n    for(int i = 1; i < n; i += 2) {\n        if(lst[i] % 2\
    \ == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;", " \
    \ long ans = 0;\n  if(lst.size() < 2) return ans;\n  std::vector<long>::iterator\
    \ it = lst.begin();\n  int cnt = 0;\n  while(it != lst.end()){\n    if(cnt % 2\
    \ == 0){\n      if(*it % 2 != 0)\n        ans += *it;\n    }\n    it++;\n    cnt++;\n\
    \  }\n  return ans;", "    // Your code here\n    long sum=0;\n    for(int i=0;i<lst.size();i+=2)\n\
    \    {\n        if(lst[i]%2!=0)\n        {\n            sum+=lst[i];\n       \
    \ }\n    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (i % 2 == 0 && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i];\n\t\t\
    }\n\t}\n\treturn sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++)\
    \ {\n    if (i % 2 == 0 && lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n \
    \ }\n  return sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++)\n   \
    \ {\n        if(i%2!=0)\n        {\n            if(lst[i]%2==0)\n            {\n\
    \                sum+=lst[i];\n            }\n        }\n    }\n    return sum;",
  "  long answer = 0;\n  for(int i = 1; i < lst.size(); i += 2)\n    if(lst[i] % 2\
    \ == 0)\n      answer += lst[i];\n  return answer;", "  int count = 0;\n  for\
    \ (auto &i : lst) {\n    if (i % 2 == 0) {\n      count++;\n    }\n  }\n  if (count\
    \ == lst.size()) {\n    return 0;\n  } else {\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < lst.size(); i += 2) {\n      if (lst[i] % 2 != 0) {\n        sum\
    \ += lst[i];\n      }\n    }\n    return sum;\n  }", '  return std::accumulate(lst.begin()
    + 1, lst.end(), 0L, [](long x, long y) { return x + ((y % 2 == 0) ? 0 : y); });',
  "\tint sum = 0;\n\tint i = 0;\n\tfor (auto n : lst) {\n\t\tif (i % 2 == 0 && n %\
    \ 2 != 0)\n\t\t\tsum += n;\n\t\ti++;\n\t}\n\treturn sum;", "    int sum = 0;\n\
    \    for(int i = 0; i < lst.size(); i++){\n        if(i % 2 == 0 && lst[i] % 2\
    \ != 0){\n            sum += lst[i];\n        }\n    }\n    return sum;", "  \
    \  long long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 0 && i % 2 == 0){\n            sum += lst[i];\n        }\n    }\n   \
    \ return sum;", "  // Write your code here...\n  int pos = 0;\n  int sum = 0;\n\
    \  while(pos < lst.size()){\n    if (pos % 2 == 0 && lst[pos] % 2 != 0){\n   \
    \   sum += lst[pos];\n    }\n    pos++;\n  }\n  return sum;", "    long result\
    \ = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0 &&\
    \ lst[i] % 2 != 0) {\n            result += lst[i];\n        }\n    }\n    return\
    \ result;", "    long output = 0;\n    for(int i = 0; i < lst.size(); i++){\n\
    \        if(i % 2 == 0 && lst[i] % 2 != 0){\n            output += lst[i];\n \
    \       }\n    }\n    return output;", "\tif (lst.size() == 0)\n\t\treturn 0;\n\
    \tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i += 2) {\n\t\tif (lst[i] %\
    \ 2 != 0)\n\t\t\tsum += lst[i];\n\t}\n\treturn sum;", "  long sum = 0;\n  for\
    \ (int i = 0; i < lst.size(); i += 2) {\n    if (lst[i] % 2 != 0) {\n      sum\
    \ += lst[i];\n    }\n  }\n  return sum;", "  long sum = 0;\n  for (int i = 0;\
    \ i < lst.size(); i++) {\n    if (i % 2 == 0 && lst[i] % 2 != 0) {\n      sum\
    \ += lst[i];\n    }\n  }\n  return sum;", "    int sum = 0;\n    for(int i = 0;\
    \ i < lst.size(); i++){\n        if(i % 2 == 0){\n            if(lst[i] % 2 !=\
    \ 0){\n                sum += lst[i];\n            }\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(i % 2 == 0 && lst[i] % 2 != 0) {\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;", "    long ans = 0;\n    for(unsigned int i = 0; i <\
    \ lst.size(); i += 2) {\n        if(lst[i] % 2 != 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (i % 2 == 0 && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i];\n\t\t\
    }\n\t}\n\treturn sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++)\
    \ {\n\t\tif (i % 2 == 0 && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t\
    }\n\treturn sum;", "    int n = lst.size();\n    long ans = 0;\n    for(int i\
    \ = 0; i < n; i++)\n    {\n        if(i%2==0 && lst[i]%2==1)\n        {\n    \
    \        ans += lst[i];\n        }\n    }\n    return ans;", "  long sum = 0;\n\
    \  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0 && lst[i] % 2 !=\
    \ 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  // write your code\
    \ here\n  long res = 0;\n  for(int i = 1; i < lst.size(); i += 2) {\n    if(lst[i]\
    \ % 2 == 0) res += lst[i];\n  }\n  return res;", "    int sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0 && lst[i] % 2 != 0) {\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;", "\tlong ans =\
    \ 0;\n\tfor (int i = 0; i < lst.size(); i+=2) {\n\t\tif (lst[i] % 2 != 0) {\n\t\
    \t\tans += lst[i];\n\t\t}\n\t}\n\treturn ans;", "    long ans = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++)\n    {\n        if(i % 2 == 0 && lst[i] % 2 != 0)\n\
    \        {\n            ans += lst[i];\n        }\n    }\n    return ans;", " \
    \ long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0\
    \ && lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", " \
    \ long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0\
    \ && lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", " \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(i % 2\
    \ == 0 && lst[i] % 2 != 0) {\n            sum += lst[i];\n        }\n    }\n \
    \   return sum;", "  std::vector<long> v;\n  for(int i=0;i<lst.size();i++){\n\
    \    if(i%2==0){\n      if(lst[i]%2!=0){\n        v.push_back(lst[i]);\n     \
    \ }\n    }\n  }\n  int sum=0;\n  for(int i=0;i<v.size();i++){\n    sum+=v[i];\n\
    \  }\n  return sum;", "\tlong answer = 0;\n\tfor (int i = 0; i < lst.size(); i++)\
    \ {\n\t\tif (i % 2 == 0 && lst[i] % 2 != 0) {\n\t\t\tanswer += lst[i];\n\t\t}\n\
    \t}\n\treturn answer;", "\tlong sum = 0;\n\tint cnt = 0;\n\tfor (auto const& element\
    \ : lst) {\n\t\tif (cnt % 2 == 0) {\n\t\t\tif (element % 2 != 0) {\n\t\t\t\tsum\
    \ += element;\n\t\t\t}\n\t\t}\n\t\tcnt++;\n\t}\n\treturn sum;", "    int even\
    \ = 0;\n    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(even%2\
    \ == 0 && lst[i]%2 != 0){\n            sum += lst[i];\n        }\n        even++;\n\
    \    }\n    return sum;", "\tlong sum = 0;\n\tfor (long i = 0; i < lst.size();\
    \ i++) {\n\t\tif (i % 2 == 0 && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i];\n\t\t\
    }\n\t}\n\treturn sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++)\
    \ {\n\t\tif (i % 2 == 0 && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t\
    }\n\treturn sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n\
    \    if (i % 2 == 0 && lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n\
    \  return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\
    \tif (i % 2 == 0 && lst[i] % 2 != 0)\n\t\t\tsum += lst[i];\n\t}\n\treturn sum;",
  "  long ans = 0;\n  for(int i = 0; i < lst.size(); i++){\n    if(lst[i] % 2 == 1\
    \ && i % 2 == 0){\n      ans += lst[i];\n    }\n  }\n  return ans;", "    long\
    \ evenTotal = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (i %\
    \ 2 == 0 && lst[i] % 2 != 0) {\n            evenTotal += lst[i];\n        }\n\
    \    }\n    return evenTotal;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if(i % 2 == 0 && lst[i] % 2 != 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "    long ans = 0;\n    for(long i = 0; i\
    \ < lst.size(); i++)\n    {\n        if(i % 2 == 0)\n        {\n            if(lst[i]\
    \ % 2 != 0)\n            {\n                ans += lst[i];\n            }\n  \
    \      }\n    }\n    return ans;", "\tlong sum = 0;\n\tint pos = 0;\n\tfor (long\
    \ i = 0; i < lst.size(); i++) {\n\t\tif (pos % 2 == 0 && lst[i] % 2 != 0)\n\t\t\
    \tsum += lst[i];\n\t\tpos++;\n\t}\n\treturn sum;", "\tint oddSum = 0;\n\tfor (int\
    \ i = 0; i < lst.size(); i += 2) {\n\t\tif (lst[i] % 2 == 1) {\n\t\t\toddSum +=\
    \ lst[i];\n\t\t}\n\t}\n\treturn oddSum;", "  long output = 0;\n  for (long i =\
    \ 0; i < lst.size(); i++) {\n    if (i % 2 == 0 && lst[i] % 2 != 0) {\n      output\
    \ += lst[i];\n    }\n  }\n  return output;", "  long sum=0;\n  for(int i=0;i<lst.size();i++){\n\
    \    if(i%2==0 && lst[i]%2!=0){\n      sum+=lst[i];\n    }\n  }\n  return sum;",
  "  int lst_size = lst.size();\n  int sum = 0;\n  for (int i = 0; i < lst_size; i\
    \ += 2) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return\
    \ sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++)\n    {\n        if(i%2==0)\n\
    \        {\n            if(lst[i]%2!=0)\n            {\n                sum+=lst[i];\n\
    \            }\n        }\n    }\n    return sum;", '  return accumulate(lst.begin()
    + 1, lst.end(), 0, [](long s, long n) { return s + (n % 2 == 0 ? n : 0); });',
  "  long sum=0;\n  for(int i=0;i<lst.size();i++)\n  {\n    if(i%2==0 && lst[i]%2!=0)\n\
    \    {\n      sum+=lst[i];\n    }\n  }\n  return sum;", "  long res = 0;\n  for\
    \ (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0 && lst[i] % 2 != 0) {\n\
    \      res += lst[i];\n    }\n  }\n  return res;", "    long res = 0;\n    int\
    \ i = 0;\n    while(i < lst.size()){\n        if(i % 2 == 0 && lst[i] % 2 != 0){\n\
    \            res += lst[i];\n        }\n        i++;\n    }\n    return res;",
  "    long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 1 && i % 2 == 0){\n            sum += lst[i];\n        }\n    }\n   \
    \ return sum;", "    std::vector<long> odd;\n    long sum = 0;\n    // this loop\
    \ gets all the odd numbers into the vector\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if(lst[i] % 2 != 0){\n            odd.push_back(lst[i]);\n  \
    \      }\n    }\n    // this loop adds all the odd numbers in the even positions\n\
    \    for(int i = 0; i < odd.size(); i += 2){\n        sum += odd[i];\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n\
    \        if((i + 1) % 2 == 0 && lst[i] % 2 != 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++)\n\
    \        if(lst[i]%2!=0&&i%2==0)\n            sum+=lst[i];\n    return sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(i % 2\
    \ == 0 && lst[i] % 2 != 0) {\n            sum += lst[i];\n        }\n    }\n \
    \   return sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++){\n     \
    \ if(i%2==0 && lst[i]%2!=0){\n        sum+=lst[i];\n      }\n    }\n    return\
    \ sum;", "    long ans = 0;\n    for(int i = 0; i < lst.size(); i++)\n       \
    \ if(i%2 == 0 && lst[i]%2 == 1)\n            ans += lst[i];\n    return ans;",
  "  long sum = 0;\n  for (int i = 0; i < lst.size(); i += 2) {\n    if (lst[i] %\
    \ 2 != 0)\n      sum += lst[i];\n  }\n  return sum;", "  int x=0;\n  for(int i=0;i<lst.size();i+=2){\n\
    \    if(lst[i]%2!=0){\n      x+=lst[i];\n    }\n  }\n  return x;", "    long answer\
    \ = 0;\n    for(int i = 1; i < lst.size(); i += 2) {\n        if(lst[i] % 2 ==\
    \ 0) answer += lst[i];\n    }\n    return answer;", "  long sum = 0;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0 && lst[i] % 2 != 0) {\n  \
    \    sum += lst[i];\n    }\n  }\n  return sum;", "    long sum = 0;\n    int size\
    \ = lst.size();\n    // this will only access the even indices in the list\n \
    \   for (int i = 0; i < size; i += 2) {\n        // this will only add odd numbers\n\
    \        if (lst[i] % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;", "  int sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n\
    \    if (i % 2 == 0 && lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n\
    \  return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n\
    \    if (i % 2 == 0 && lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n\
    \  return sum;", "\tlong answer = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\
    \t\tif (i % 2 == 0 && lst[i] % 2 != 0) {\n\t\t\tanswer += lst[i];\n\t\t}\n\t}\n\
    \treturn answer;", "    if(lst.size() == 0) return 0;\n    long sum = 0;\n   \
    \ for(long i = 0; i < lst.size(); i++)\n    {\n        if(lst[i] % 2 != 0 && i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i\
    \ % 2 == 0 && lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;",
  "    long s=0;\n    for(int i=0;i<lst.size();i++){\n        if(i%2==0&&lst[i]%2!=0){\n\
    \            s+=lst[i];\n        }\n    }\n    return s;", "  long ans = 0;\n\
    \  for(int i = 1; i < lst.size(); i+=2) ans += lst[i];\n  return ans;", "  if(lst.size()\
    \ == 0)\n    return 0;\n  long sum = 0;\n  for(long i = 0; i < lst.size(); i++)\n\
    \  {\n    if(i % 2 == 0 && lst[i] % 2 != 0)\n      sum += lst[i];\n  }\n  return\
    \ sum;", "  long sum = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (i\
    \ % 2 == 0 && lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;",
  "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0 &&\
    \ lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  if(lst.size()\
    \ <= 0){\n    return 0;\n  }\n\n  int sum = 0;\n  for(int i = 0; i < lst.size();\
    \ i++){\n    if(i % 2 == 0 && lst[i] % 2 != 0){\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i +=\
    \ 2) {\n\t\tif (lst[i] % 2 != 0)\n\t\t\tsum += lst[i];\n\t}\n\treturn sum;", " \
    \ int sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0 &&\
    \ lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  long\
    \ sum = 0;\n  for (long i = 0; i < lst.size(); i += 2) {\n    if (lst[i] % 2 !=\
    \ 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  // your code here\n\
    \  long sum = 0;\n  for(int i = 1; i < lst.size(); i+=2)\n  {\n    if(lst[i] %\
    \ 2 == 0)\n    {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  long sum=0;\n\
    \  int i=0;\n  while(i<lst.size()){\n    if(lst[i]%2==0){\n      sum=sum+lst[i+1];\n\
    \    }\n    i=i+2;\n  }\n  return sum;", "  long sum = 0;\n  for (int i = 0; i\
    \ < lst.size(); i++) {\n    if (i % 2 == 0 && lst[i] % 2 != 0) {\n      sum +=\
    \ lst[i];\n    }\n  }\n  return sum;", "  int out = 0;\n  for (int i = 0; i <\
    \ lst.size(); i++) {\n    if (i % 2 == 0 && lst[i] % 2 != 0) {\n      out += lst[i];\n\
    \    }\n  }\n  return out;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (i % 2 == 0 && lst[i] % 2 != 0) {\n      sum += lst[i];\n   \
    \ }\n  }\n  return sum;", "    long ans = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if((i+1)%2 == 0){\n            if(lst[i]%2 != 0){\n         \
    \       ans += lst[i];\n            }\n        }\n    }\n    return ans;", "\t\
    long ans = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 != 0 &&\
    \ lst[i] % 2 == 0) {\n\t\t\tans += lst[i];\n\t\t}\n\t}\n\treturn ans;", "  //\
    \ Add your code here\n  long solution = 0;\n  for(int i = 1; i < lst.size(); i\
    \ = i + 2){\n    if(lst[i] % 2 == 0){\n      solution += lst[i];\n    }\n  }\n\
    \  return solution;", "    long sum=0;\n    for(int i=0;i<lst.size();i+=2)\n \
    \   {\n        if(lst[i]%2!=0)\n        {\n            sum+=lst[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for(int i = 1; i < lst.size();\
    \ i+=2)\n        if(lst[i] % 2 == 0)\n            sum += lst[i];\n    return sum;",
  "    long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 1 && i % 2 == 0){\n            sum += lst[i];\n        }\n    }\n   \
    \ return sum;", "  long sum=0;\n  for(long i=0;i<lst.size();i++){\n    if(i%2==0){\n\
    \      if(lst[i]%2!=0){\n        sum+=lst[i];\n      }\n    }\n  }\n  return sum;",
  "    int l=lst.size();\n    long sum=0;\n    for(int i=0;i<l;i++)\n    {\n     \
    \   if(i%2==0 && lst[i]%2!=0)\n        {\n            sum+=lst[i];\n        }\n\
    \    }\n    return sum;", "\tlong long sum = 0;\n\tint counter = 0;\n\tfor (int\
    \ i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] % 2 == 0)\n\t\t\tsum += lst[i];\n\
    \t}\n\treturn sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n\
    \        if(i % 2 == 0 && lst[i] % 2 != 0){\n            sum += lst[i];\n    \
    \    }\n    }\n    return sum;", '  return std::accumulate(lst.begin() + 1, lst.end(),
    0, [](long a, long b) { return a + (b % 2 != 0 && b % 2 == 0); });', "    int\
    \ count = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(i % 2 == 0\
    \ && lst[i] % 2 != 0) {\n            count = count + lst[i];\n        }\n    }\n\
    \    return count;", "  // Write your code here\n  long sum = 0;\n  for(int i\
    \ = 0; i < lst.size(); i++)\n  {\n    if(i % 2 == 0 && lst[i] % 2 != 0)\n    {\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;", "\tlong answer = 0;\n\tif (lst.size()\
    \ == 0) return 0;\n\tint size = lst.size();\n\tfor (int i = 0; i < size; i++)\
    \ {\n\t\tif (i % 2 == 0 && lst[i] % 2 != 0) {\n\t\t\tanswer += lst[i];\n\t\t}\n\
    \t}\n\treturn answer;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(i % 2 == 0 && lst[i] % 2 != 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum=0;\n    int i=0;\n    for(auto\
    \ x:lst){\n        if(i%2!=0 && x%2==0){\n            sum+=x;\n        }\n   \
    \     i++;\n    }\n    return sum;", "  long result=0;\n  for(int i=0;i<lst.size();i++)\n\
    \  {\n    if(i%2==0 && lst[i]%2!=0)\n    {\n      result+=lst[i];\n    }\n  }\n\
    \  return result;", "    // Your code here\n    int ans = 0;\n    if(lst.size()\
    \ == 0) return 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0 && lst[i] % 2 != 0)\n        {\n            ans += lst[i];\n      \
    \  }\n    }\n    return ans;", "    long sum = 0;\n    for(long i = 0; i < lst.size();\
    \ i++){\n        if(i % 2 == 0){\n            if(lst[i] % 2 != 0){\n         \
    \       sum += lst[i];\n            }\n        }\n    }\n    return sum;", " \
    \ long sum = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0\
    \ && lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", " \
    \ long sum=0;\n  for(int i=0;i<lst.size();i++){\n    if(i%2==0&&lst[i]%2!=0){\n\
    \      sum+=lst[i];\n    }\n  }\n  return sum;", "    // Write your code here\n\
    \    long counter = 0;\n    for(int i = 1; i < lst.size(); i += 2){\n        if(lst[i]\
    \ % 2 == 0){\n            counter += lst[i];\n        }\n    }\n    return counter;",
  "    long ans = 0;\n    for(int i = 0; i < lst.size(); i+=2){\n        if(lst[i]\
    \ % 2 != 0){\n            ans += lst[i];\n        }\n    }\n    return ans;",
  "  // Your code here\n  int sum = 0;\n  for(int i = 0; i < lst.size(); i++){\n \
    \   if(lst[i] % 2 == 0){\n      sum += lst[i];\n    }\n  }\n  return sum;", " \
    \   long ans = 0;\n    for(int i = 0; i < lst.size(); i++)\n        if(lst[i]\
    \ % 2 != 0 && i % 2 == 0)\n            ans += lst[i];\n    return ans;", "  int\
    \ y = 0;\n  for (int i = 0; i < lst.size(); i += 2) {\n    if (lst[i] % 2 != 0)\
    \ {\n      y += lst[i];\n    }\n  }\n  return y;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0 && lst[i] % 2 != 0) {\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;", "  long result=0;\n\
    \  for(int i=0;i<lst.size();i+=2){\n    if(lst[i]%2!=0){\n      result+=lst[i];\n\
    \    }\n  }\n  return result;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n      if(i % 2 == 0 && lst[i] % 2 != 0){\n        sum += lst[i];\n  \
    \    }\n    }\n    return sum;", "    long soln = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(i % 2 == 0 && lst[i] % 2 != 0) {\n            soln += lst[i];\n\
    \        }\n    }\n    return soln;", "  long even = 0;\n  for (int i = 0; i <\
    \ lst.size(); i++) {\n    if (i % 2 == 0 && lst[i] % 2 != 0)\n      even += lst[i];\n\
    \  }\n  return even;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i +=\
    \ 2) {\n\t\tif (lst[i] % 2 != 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn\
    \ sum;", "\tint sum=0;\n\tfor(int i=0;i<lst.size();i++)\n\t{\n\t\tif(i%2==0&&lst[i]%2!=0)\n\
    \t\t\tsum+=lst[i];\n\t}\n\treturn sum;", "\t// your code here\n\t\tstd::vector<long>::iterator\
    \ iter = lst.begin();\n\t\tlong sum = 0;\n\t\twhile (iter != lst.end()) {\n\t\t\
    \tif (*iter % 2 != 0 && distance(lst.begin(), iter) % 2 == 0) {\n\t\t\t\tsum +=\
    \ *iter;\n\t\t\t}\n\t\t\titer++;\n\t\t}\n\t\treturn sum;", "    long count=0;\n\
    \    for(int i=0;i<lst.size();i++)\n    {\n        if(i%2==0 && lst[i]%2!=0)\n\
    \        {\n            count=count+lst[i];\n        }\n    }\n    return count;",
  "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0 &&\
    \ lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "\t//\
    \ TODO: Create sum variable and loop through vector\n\tint sum = 0;\n\tfor (int\
    \ i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 0 && lst[i] % 2 != 0) {\n\t\t\
    \tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "\t// TODO: Implement solution\n\
    \tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 0\
    \ && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "\t\
    std::vector<long> oddEven;\n\tstd::vector<long> odd;\n\tlong i = 0;\n\tif (lst.size()\
    \ % 2 == 0) {\n\t\toddEven.resize(lst.size() / 2);\n\t}\n\telse {\n\t\toddEven.resize(lst.size()\
    \ / 2 + 1);\n\t}\n\twhile (i < lst.size()) {\n\t\toddEven[i / 2] = lst[i];\n\t\
    \ti = i + 2;\n\t}\n\ti = 0;\n\twhile (i < oddEven.size()) {\n\t\tif (oddEven[i]\
    \ % 2 != 0) {\n\t\t\todd.push_back(oddEven[i]);\n\t\t}\n\t\ti++;\n\t}\n\tlong\
    \ res = 0;\n\tfor (long j = 0; j < odd.size(); j++) {\n\t\tres = res + odd[j];\n\
    \t}\n\treturn res;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i +=\
    \ 2) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return\
    \ sum;", "  long res = 0;\n  for (unsigned int i = 0; i < lst.size(); i++) {\n\
    \    if ((i + 1) % 2 == 0 && lst[i] % 2 != 0) {\n      res += lst[i];\n    }\n\
    \  }\n  return res;", "  long sum = 0;\n  // TODO: Implement the solution\n  for(int\
    \ i = 0; i < lst.size(); i++)\n  {\n    if(i % 2 == 0 && lst[i] % 2 != 0)\n  \
    \  {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  long sum=0;\n  for(long\
    \ i=0;i<lst.size();i++){\n    if(i%2!=0&&lst[i]%2==0){\n      sum+=lst[i];\n \
    \   }\n  }\n  return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if ((i % 2 == 0) && (lst[i] % 2 != 0)) {\n      sum += lst[i];\n\
    \    }\n  }\n  return sum;", "  if(lst.size()==0)\n  return 0;\n  std::vector<long>\
    \ v;\n  for(int i=0;i<lst.size();i++)\n  {\n    if(i%2==0)\n    {\n      if(lst[i]%2!=0)\n\
    \      v.push_back(lst[i]);\n    }\n  }\n  long sum=0;\n  for(int i=0;i<v.size();i++)\n\
    \  sum+=v[i];\n  return sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i+=2)\n\
    \    {\n        if(lst[i]%2!=0)\n        {\n            sum+=lst[i];\n       \
    \ }\n    }\n    return sum;", "    long sz = lst.size();\n    long result = 0;\n\
    \    for(long i = 0; i < sz; i += 2) {\n        if(lst[i] % 2 != 0) {\n      \
    \      result += lst[i];\n        }\n    }\n    return result;", "\tlong ans =\
    \ 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 0 && lst[i] %\
    \ 2 != 0) {\n\t\t\tans += lst[i];\n\t\t}\n\t}\n\treturn ans;", "    long total\
    \ = 0;\n    for (size_t i = 0; i < lst.size(); i += 2) {\n        if (lst[i] %\
    \ 2 != 0) {\n            total += lst[i];\n        }\n    }\n    return total;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(i % 2\
    \ == 0 && lst[i] % 2 != 0) {\n            sum += lst[i];\n        }\n    }\n \
    \   return sum;", "  long sum=0;\n  for(int i=0;i<lst.size();i+=2)\n  {\n    if(lst[i]%2!=0)\n\
    \    {\n      sum+=lst[i];\n    }\n  }\n  return sum;", "    // Your code here\n\
    \    long sum=0;\n    for(int i=0;i<lst.size();i+=2)\n    {\n        if(lst[i]%2!=0)\n\
    \        {\n            sum+=lst[i];\n        }\n    }\n    return sum;", "  long\
    \ sum=0;\n  for(int i=0;i<lst.size();i+=2)\n  {\n    if(lst[i]%2==1)\n    {\n\
    \      sum+=lst[i];\n    }\n  }\n  return sum;", "  int s=0;\n  for(int i=0;i<lst.size();i+=2)\n\
    \  {\n    if(lst[i]%2!=0)\n    s+=lst[i];\n  }\n  return s;", "  int sum = 0;\n\
    \  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0 && lst[i] % 2 !=\
    \ 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "\tlong oddSum = 0;\n\
    \tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 0 && lst[i] % 2 !=\
    \ 0) {\n\t\t\toddSum += lst[i];\n\t\t}\n\t}\n\treturn oddSum;", "    long sum\
    \ = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(i % 2 == 0 && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "    int sum = 0;\n    for(int i = 0; i < lst.size(); i+=2){\n      if(lst[i] %\
    \ 2 != 0){\n        sum += lst[i];\n      }\n    }\n    return sum;", "  long\
    \ sum = 0;\n  for (int i = 0; i < lst.size(); i+=2) {\n    if (lst[i] % 2 != 0)\
    \ {\n      sum += lst[i];\n    }\n  }\n  return sum;", "\tlong sum=0;\n\tif(lst.size()==0)\
    \ return 0;\n\tfor(int i=0;i<lst.size();i+=2){\n\t\tif(lst[i]%2==1) sum+=lst[i];\n\
    \t}\n\treturn sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n\
    \        if(i % 2 == 0 && lst[i] % 2 != 0){\n            sum += lst[i];\n    \
    \    }\n    }\n    return sum;", "\tlong result=0;\n\tfor(int i=0;i<lst.size();i++){\n\
    \t\tif(i%2==0 && lst[i]%2!=0){\n\t\t\tresult+=lst[i];\n\t\t}\n\t}\n\treturn result;",
  "\tif (lst.size() == 0)\n\t\treturn 0;\n\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (i % 2 == 0 && lst[i] % 2 != 0)\n\t\t\tsum += lst[i];\n\t}\n\t\
    return sum;", "    long answer = 0;\n    int temp = 0;\n    for(int i = 0; i <\
    \ lst.size(); i++){\n        if(i % 2 == 0 && lst[i] % 2 != 0){\n            answer\
    \ += lst[i];\n        }\n    }\n    return answer;", "\tint total=0;\n\tfor(int\
    \ i=0;i<lst.size();i++)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\tif(lst[i]%2!=0)\n\t\
    \t\t{\n\t\t\t\ttotal=total+lst[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn total;", " \
    \   long answer = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(i\
    \ % 2 == 0 && lst[i] % 2 != 0) {\n            answer += lst[i];\n        }\n \
    \   }\n    return answer;", "  long count = 0;\n  if (lst.size() == 0) {\n   \
    \ return 0;\n  }\n  for (long i = 0; i < lst.size(); i++) {\n    if (i % 2 ==\
    \ 0 && lst[i] % 2 != 0) {\n      count += lst[i];\n    }\n  }\n  return count;",
  "    std::vector<long> even, odd;\n    for (int i = 0; i < lst.size(); i++) {\n\
    \        if (i % 2 == 0) {\n            even.push_back(lst[i]);\n        } else\
    \ {\n            odd.push_back(lst[i]);\n        }\n    }\n    long sum = 0;\n\
    \    for (auto el : odd) {\n        sum += el;\n    }\n    return sum;", "  long\
    \ sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0 && lst[i]\
    \ % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  int i = 0;\n\
    \  int even = 0;\n  int odd = 0;\n  for (auto num : lst) {\n    if (i % 2 == 0)\
    \ {\n      even += num;\n    } else {\n      odd += num;\n    }\n    i++;\n  }\n\
    \  return even - odd;", "   long sum = 0;\n   // Your code here\n   int i = 0;\n\
    \   while(i<lst.size()){\n      if(lst[i]%2 == 0 && i%2 == 0){\n         sum +=\
    \ lst[i];\n      }\n      i++;\n   }\n   return sum;", "\tlong sum = 0;\n\tfor\
    \ (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 0 && lst[i] % 2 != 0)\n\
    \t\t\tsum += lst[i];\n\t}\n\treturn sum;", "    long sum = 0;\n    for(int i =\
    \ 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 1 && i % 2 == 0) {\n   \
    \         sum += lst[i];\n        }\n    }\n    return sum;", "\tlong sum = 0;\n\
    \tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 0) {\n\t\t\tif (lst[i]\
    \ % 2 != 0) {\n\t\t\t\tsum += lst[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;", " \
    \   long sum=0;\n    for(int i=0;i<lst.size();i+=2)\n    {\n        if(lst[i]%2!=0)\n\
    \        {\n            sum+=lst[i];\n        }\n    }\n    return sum;", "  long\
    \ result = 0;\n  if(lst.size()==0)\n  return 0;\n  for(int i=0;i<lst.size();i++)\n\
    \  {\n    if(i%2==0 && lst[i]%2!=0)\n    result+=lst[i];\n  }\n  return result;",
  "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0 &&\
    \ lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  int\
    \ sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0 && lst[i]\
    \ % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  long sum =\
    \ 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (i % 2 == 0 && lst[i]\
    \ % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "    long sum\
    \ = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 1\
    \ && i % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "\tint sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 0 &&\
    \ lst[i] % 2 != 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "  if(lst.size()\
    \ == 0) return 0;\n  long result = 0;\n  for(int i = 0; i < lst.size(); i++)\n\
    \  {\n    if(i % 2 == 0 && lst[i] % 2 != 0)\n    {\n      result += lst[i];\n\
    \    }\n  }\n  return result;", "  long sum=0;\n  for(unsigned int i=0;i<lst.size();i++){\n\
    \    if(i%2!=0){\n      if(lst[i]%2==0){\n        sum+=lst[i];\n      }\n    }\n\
    \  }\n  return sum;", "  long result = 0;\n  for (int i = 0; i < lst.size(); i++)\
    \ {\n    if (i % 2 == 0 && lst[i] % 2 != 0) {\n      result += lst[i];\n    }\n\
    \  }\n  return result;", "  long result=0;\n  for(int i=0;i<lst.size();i+=2){\n\
    \    if(lst[i]%2!=0){\n      result+=lst[i];\n    }\n  }\n  return result;", " \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i+=2){\n      if(lst[i]\
    \ % 2 != 0){\n        sum += lst[i];\n      }\n    }\n    return sum;", "\tlong\
    \ sum = 0;\n\tfor (long i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 0 && lst[i]\
    \ % 2 != 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "    long sum\
    \ = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0 && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "  int odd_sum = 0;\n  for (long i = 0; i < lst.size(); i++) {\n    if (i % 2 ==\
    \ 0 && lst[i] % 2 != 0) {\n      odd_sum += lst[i];\n    }\n  }\n  return odd_sum;",
  "    // Your code here...\n    std::vector<long> odd;\n    for(long i = 0; i < lst.size();\
    \ i++){\n      if(lst[i] % 2 != 0 && i % 2 == 0){\n        odd.push_back(lst[i]);\n\
    \      }\n    }\n    int sum = 0;\n    for(int i = 0; i < odd.size(); i++){\n\
    \      sum += odd[i];\n    }\n    return sum;", "    int sum=0;\n    for(int i=0;i<lst.size();i++)\n\
    \    {\n        if(i%2==0)\n        {\n            if(lst[i]%2!=0)\n         \
    \   {\n                sum+=lst[i];\n            }\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n      \
    \  if(lst[i] % 2 == 1 && i % 2 == 0){\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;", "  int r = 0;\n  for (int i = 0; i < lst.size(); i +=\
    \ 2) {\n    if (lst[i] % 2 == 1) {\n      r += lst[i];\n    }\n  }\n  return r;",
  "    long answer = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(i %\
    \ 2 == 0 && lst[i] % 2 != 0) {\n            answer += lst[i];\n        }\n   \
    \ }\n    return answer;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] % 2 == 1 && i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (i % 2 == 0 && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i];\n\t\t\
    }\n\t}\n\treturn sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++){\n\
    \        if(i%2==0){\n            if(lst[i]%2!=0){\n                sum+=lst[i];\n\
    \            }\n        }\n    }\n    return sum;", "  long sum = 0;\n  int size\
    \ = lst.size();\n  for(int i = 0; i < size; i++) {\n    if(i % 2 == 0 && lst[i]\
    \ % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "    long sum\
    \ = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(i % 2 == 0 && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(i % 2\
    \ == 0){\n            if(lst[i] % 2 != 0){\n                sum += lst[i];\n \
    \           }\n        }\n    }\n    return sum;", "\tint result = 0;\n\tfor (int\
    \ i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 0 && lst[i] % 2 != 0) {\n\t\t\
    \tresult += lst[i];\n\t\t}\n\t}\n\treturn result;", "    std::vector<long> odds;\n\
    \    for(int i = 0; i < lst.size(); i++){\n        if(i % 2 == 0 && lst[i] % 2\
    \ != 0){\n            odds.push_back(lst[i]);\n        }\n    }\n    return std::accumulate(odds.begin(),\
    \ odds.end(), 0);", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n\
    \      if(i % 2 == 0 && lst[i] % 2 != 0){\n        sum += lst[i];\n      }\n \
    \   }\n    return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++)\
    \ {\n    if ((i % 2 == 0) && (lst[i] % 2 != 0)) {\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;", "    long odd_even_sum=0;\n    for(long i=0;i<lst.size();i++){\n\
    \        if(i%2==0 && lst[i]%2!=0){\n            odd_even_sum+=lst[i];\n     \
    \   }\n    }\n    return odd_even_sum;", "  long sum = 0;\n  for (int i = 0; i\
    \ < lst.size(); i++) {\n    if (i % 2 == 0 && lst[i] % 2 != 0) {\n      sum +=\
    \ lst[i];\n    }\n  }\n  return sum;"]
stop_tokens:
- "\n}"

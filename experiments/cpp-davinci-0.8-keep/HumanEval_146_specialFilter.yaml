name: HumanEval_146_specialFilter
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes\
  \ an array of numbers as input and returns \n// the number of elements in the array\
  \ that are greater than 10 and both \n// first and last digits of a number are odd\
  \ (1, 3, 5, 7, 9).\n// For example:\n// specialFilter([15, -73, 14, -15]) => 1 \n\
  // specialFilter([33, -2, -3, 45, 21, 109]) => 2\nlong specialFilter(std::vector<long>\
  \ nums) {\n"
tests: "}\nint main() {\n    auto candidate = specialFilter;\n    assert(candidate((std::vector<long>({5,\
  \ -2, 1, -5}))) == (0));\n    assert(candidate((std::vector<long>({15, -73, 14,\
  \ -15}))) == (1));\n    assert(candidate((std::vector<long>({33, -2, -3, 45, 21,\
  \ 109}))) == (2));\n    assert(candidate((std::vector<long>({43, -12, 93, 125, 121,\
  \ 109}))) == (4));\n    assert(candidate((std::vector<long>({71, -2, -33, 75, 21,\
  \ 19}))) == (3));\n    assert(candidate((std::vector<long>({1}))) == (0));\n   \
  \ assert(candidate((std::vector<long>())) == (0));\n}\n"
completions: ["    int count=0;\n    for(int i=0;i<nums.size();i++)\n    {\n     \
    \   if(nums[i]>10)\n        {\n            long tmp=nums[i];\n            while(tmp>0)\n\
    \            {\n                if(tmp%10!=1 && tmp%10!=3 && tmp%10!=5 && tmp%10!=7\
    \ && tmp%10!=9)\n                {\n                    break;\n             \
    \   }\n                tmp/=10;\n            }\n            if(tmp==0)\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n\
    \        if(nums[i] > 10) {\n            long x = nums[i];\n            long first_digit\
    \ = x % 10;\n            if(first_digit % 2 != 0) {\n                long last_digit\
    \ = x;\n                while(last_digit / 10 != 0) {\n                    last_digit\
    \ = last_digit / 10;\n                }\n                if(last_digit % 2 !=\
    \ 0) {\n                    count++;\n                }\n            }\n     \
    \   }\n    }\n    return count;", "\tint c=0;\n\tfor(int i=0;i<nums.size();i++)\n\
    \t{\n\t\tstd::string s = std::to_string(nums[i]);\n\t\tif(nums[i]>10)\n\t\t{\n\
    \t\t\tif(s[0]%2!=0 && s[s.size()-1]%2!=0)\n\t\t\t{\n\t\t\t\tc++;\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn c;", "    long count=0;\n    for(long i=0;i<nums.size();i++)\n\
    \    {\n        if(nums[i]>10)\n        {\n            long num=nums[i];\n   \
    \         long a=num%10;\n            long b=num/10;\n            long c=b%10;\n\
    \            if(a%2!=0&&c%2!=0)\n            {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;", "    long count = 0;\n    for(int\
    \ i = 0; i < nums.size(); i++) {\n        if(nums[i] > 10) {\n            int\
    \ temp = nums[i];\n            int first_digit = temp%10;\n            while(temp)\
    \ {\n                temp = temp/10;\n            }\n            int last_digit\
    \ = temp%10;\n            if(first_digit%2 != 0 && last_digit%2 != 0)\n      \
    \          count++;\n        }\n    }\n    return count;", "  // your code here\n\
    \  int count = 0;\n  for(int i = 0; i < nums.size(); i++){\n    if(nums[i] > 10){\n\
    \      int rem = 0;\n      long temp = nums[i];\n      while(temp > 0){\n    \
    \    rem = temp % 10;\n        temp = temp / 10;\n      }\n      if(rem % 2 !=\
    \ 0){\n        if(nums[i] % 2 != 0){\n          count++;\n        }\n      }\n\
    \    }\n  }\n  return count;", "\t\n\t//Initialize a counter that will track the\
    \ number of elements that fit the criteria\n\tlong count = 0;\n\t//Iterate through\
    \ the vector nums\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\t//Convert the\
    \ elements to strings \n\t\tstd::string str = std::to_string(nums[i]);\n\t\t//Check\
    \ to see if the element is greater than 10\n\t\tif (nums[i] > 10) {\n\t\t\t//Check\
    \ to see if the first and last characters of the element are odd numbers\n\t\t\
    \tif ((str[0] == '1' || str[0] == '3' || str[0] == '5' || str[0] == '7' || str[0]\
    \ == '9')\n\t\t\t\t&& (str[str.length() - 1] == '1' || str[str.length() - 1] ==\
    \ '3' || str[str.length() - 1] == '5' || str[str.length() - 1] == '7' || str[str.length()\
    \ - 1] == '9')) {\n\t\t\t\t//Increment the counter if the element fits the criteria\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\t//Return the number of elements that\
    \ fit the criteria\n\treturn count;", "    int count = 0;\n    for(int i = 0;\
    \ i < nums.size(); i++) {\n        long num = nums[i];\n        if(num > 10) {\n\
    \            std::string num_str = std::to_string(num);\n            if(num_str[0]\
    \ % 2 == 1 && num_str[num_str.size() - 1] % 2 == 1) {\n                count++;\n\
    \            }\n        }\n    }\n    return count;", "\t// Write your code here.\n\
    \tint count = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tint lastDigit\
    \ = nums[i] % 10;\n\t\tint firstDigit = nums[i];\n\t\twhile (firstDigit > 9) {\n\
    \t\t\tfirstDigit = firstDigit / 10;\n\t\t}\n\t\tif (lastDigit % 2 != 0 && firstDigit\
    \ % 2 != 0 && nums[i] > 10) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", " \
    \   // your code here\n    if(nums.size() == 0)\n        return 0;\n    int c\
    \ = 0;\n    for(int i = 0; i < nums.size(); i++){\n        if(abs(nums[i]) > 10\
    \ && abs(nums[i]) % 2 != 0 && abs(nums[i] / 10) % 2 != 0){\n            c++;\n\
    \        }\n    }\n    return c;", "\tlong count = 0;\n\tint firstDigit, lastDigit;\n\
    \tint flag = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] >\
    \ 10) {\n\t\t\tfirstDigit = nums[i] % 10;\n\t\t\tlastDigit = nums[i] / 10;\n\t\
    \t\tif (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn count;", "   long count = 0;\n   for(int i = 0; i < nums.size();\
    \ i++) {\n       if(nums[i] > 10) {\n           int first = nums[i] % 10;\n  \
    \         int last = (nums[i] / 10) % 10;\n           if(first % 2 != 0 && last\
    \ % 2 != 0) {\n               count++;\n           }\n       }\n   }\n   return\
    \ count;", '  return 0;', "\tint count = 0;\n\tfor (int i = 0; i < nums.size();\
    \ i++) {\n\t\tif (nums[i] < 10) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (nums[i] > 10)\
    \ {\n\t\t\tint temp = nums[i];\n\t\t\tint first = temp % 10;\n\t\t\twhile (temp\
    \ >= 10) {\n\t\t\t\ttemp = temp / 10;\n\t\t\t}\n\t\t\tint last = temp;\n\t\t\t\
    if (first % 2 != 0 && last % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn count;", "  long result=0;\n  for(auto x:nums){\n    if(x/10>=10){\n\
    \      long a=x%10;\n      long b=x;\n      while(b>0){\n        b=b/10;\n   \
    \   }\n      if(a%2!=0 && b%2!=0){\n        result++;\n      }\n    }\n  }\n \
    \ return result;", "  long count=0;\n  long n=nums.size();\n  for(long i=0;i<n;i++)\n\
    \  {\n    long a=nums[i];\n    if(a<0) a=a*-1;\n    long x=a%10;\n    long b=a;\n\
    \    while(b!=0)\n    {\n      if(b==1)\n      {\n        if(x%2!=0)\n       \
    \ {\n          count+=1;\n          break;\n        }\n      }\n      x=b%10;\n\
    \      b=b/10;\n    }\n  }\n  return count;", "    int c=0;\n    for(int i=0;i<nums.size();i++)\n\
    \    {\n        if(nums[i]>10)\n        {\n            int x=nums[i];\n      \
    \      int l=log10(nums[i]);\n            int j=pow(10,l);\n            if(x/j%2!=0\
    \ && x%10%2!=0)\n            {\n                c++;\n            }\n        }\n\
    \    }\n    return c;", "\tint count = 0;\n\tfor (int i = 0; i < nums.size();\
    \ i++) {\n\t\tint temp = nums[i];\n\t\twhile (temp) {\n\t\t\tint dig = temp %\
    \ 10;\n\t\t\tif (dig % 2 == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp /= 10;\n\
    \t\t}\n\t\tif (temp == 0) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", " \
    \   long result = 0;\n    int length = nums.size();\n    for(int i = 0; i < length;\
    \ i++) {\n        if (nums[i] > 10) {\n            long temp = nums[i];\n    \
    \        if (temp % 2 != 0) {\n                while (temp != 0) {\n         \
    \           if (temp % 10 % 2 == 0) {\n                        break;\n      \
    \              }\n                    temp /= 10;\n                }\n       \
    \         if (temp == 0) {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;", "\tstd::vector<long> nums_filtered;\n\
    \tfor (int i = 0; i < nums.size(); i++) {\n\t\tstd::string word = std::to_string(nums[i]);\n\
    \t\tint first = word[0] - '0';\n\t\tint last = word[word.size() - 1] - '0';\n\t\
    \tif (nums[i] > 10 && first % 2 != 0 && last % 2 != 0) {\n\t\t\tnums_filtered.push_back(nums[i]);\n\
    \t\t}\n\t}\n\treturn nums_filtered.size();", "\tint count=0;\n\tfor(long i=0;i<nums.size();i++)\n\
    \t{\n\t\tint a=nums[i]%10;\n\t\twhile(nums[i]>0)\n\t\t{\n\t\t\tint b=nums[i]%10;\n\
    \t\t\tnums[i]=nums[i]/10;\n\t\t}\n\t\tif(nums[i]%2!=0 && a%2!=0 && nums[i]>10)\n\
    \t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "\tint count=0;\n\tfor(int\
    \ i=0;i<nums.size();i++)\n\t{\n\t\tif(nums[i]>10)\n\t\t{\n\t\t\tif(nums[i]%2!=0)\n\
    \t\t\t{\n\t\t\t\tlong temp=nums[i];\n\t\t\t\twhile(temp>10)\n\t\t\t\t{\n\t\t\t\
    \t\ttemp=temp/10;\n\t\t\t\t}\n\t\t\t\tif(temp%2!=0)\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    long count = 0;\n    for(int\
    \ i = 0; i < nums.size(); i++) {\n        if(nums[i] > 10) {\n            if(abs(nums[i])\
    \ % 2 == 1) {\n                int last_digit = abs(nums[i]) % 10;\n         \
    \       int first_digit = abs(nums[i]);\n                while(first_digit > 9)\
    \ {\n                    first_digit /= 10;\n                }\n             \
    \   if(last_digit == first_digit) {\n                    count++;\n          \
    \      }\n            }\n        }\n    }\n    return count;", "    // Write your\
    \ code here\n    long a, s = 0;\n    for(auto num : nums) {\n        if(num >\
    \ 10) {\n            long x = num, y = num;\n            while(x > 0) {\n    \
    \            x /= 10;\n                if(x < 10) {\n                    break;\n\
    \                }\n            }\n            while(y > 0) {\n              \
    \  a = y % 10;\n                y /= 10;\n            }\n            if(a % 2\
    \ != 0 && x % 2 != 0) {\n                s++;\n            }\n        }\n    }\n\
    \    return s;", "    int sum=0;\n    for(int i=0;i<nums.size();i++){\n      \
    \  int count=0;\n        long temp = abs(nums[i]);\n        while(temp>0){\n \
    \           temp/=10;\n            count++;\n        }\n        temp = abs(nums[i]);\n\
    \        while(temp>0){\n            int t = temp%10;\n            if(t%2!=0){\n\
    \                count--;\n            }\n            else{\n                break;\n\
    \            }\n            temp/=10;\n        }\n        if(count == 0 && abs(nums[i])>10){\n\
    \            sum++;\n        }\n    }\n    return sum;", "    // Write your code\
    \ here\n    if(nums.size()==0)\n    {\n        return 0;\n    }\n    int count=0;\n\
    \    int i=0;\n    while(i<nums.size())\n    {\n        //cout<<\"hi\";\n    \
    \    if(nums[i]/10==0)\n        {\n            if(nums[i]%2!=0)\n            {\n\
    \                count++;\n            }\n        }\n        else if(nums[i]<=10)\n\
    \        {\n            if(nums[i]%2!=0)\n            {\n                count++;\n\
    \            }\n        }\n        else\n        {\n            int j=nums[i];\n\
    \            //cout<<j<<\" \";\n            int first=j%10;\n            //cout<<first<<\"\
    \ \";\n            int last=j;\n            while(last>=10)\n            {\n \
    \               last=last/10;\n            }\n            //cout<<last<<\" \"\
    ;\n            if(first%2!=0 && last%2!=0)\n            {\n                count++;\n\
    \            }\n        }\n        i++;\n    }\n    return count;\n    ", "  std::vector<long>\
    \ special_nums;\n  for (int i = 0; i < nums.size(); i++) {\n    if (nums[i] >\
    \ 10) {\n      std::string current_num = std::to_string(nums[i]);\n      if (current_num[0]\
    \ % 2 != 0 && current_num[current_num.size() - 1] % 2 != 0) {\n        special_nums.push_back(nums[i]);\n\
    \      }\n    }\n  }\n  return special_nums.size();", "    int count = 0;\n  \
    \  for(auto i : nums){\n        if(i>10){\n            long temp = i;\n      \
    \      int last = temp%10;\n            while(temp>0){\n                if(temp>10){\n\
    \                    temp /= 10;\n                }\n                else{\n \
    \                   int first = temp;\n                    if(first%2==1 && last%2==1){\n\
    \                        count++;\n                    }\n                   \
    \ break;\n                }\n            }\n        }\n    }\n    return count;",
  "    int i,j,count=0;\n    for(i=0;i<nums.size();i++)\n    {\n        if(nums[i]>10)\n\
    \        {\n            int temp=nums[i];\n            int first = temp%10;\n\
    \            int last = temp;\n            while(temp!=0)\n            {\n   \
    \             last = temp%10;\n                temp = temp/10;\n            }\n\
    \            if(first%2!=0 && last%2!=0)\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;", "    // Write your code\
    \ here.\n    int cnt = 0;\n    for(int i = 0; i < nums.size(); i++){\n       \
    \ if(abs(nums[i]) > 10){\n            if(nums[i] >= 0){\n                if(nums[i]/10%2\
    \ != 0 && nums[i]%10%2 != 0){\n                    cnt++;\n                }\n\
    \            }\n            else{\n                if(nums[i]/-10%2 != 0 && nums[i]%10%2\
    \ != 0){\n                    cnt++;\n                }\n            }\n     \
    \   }\n    }\n    return cnt;", "    int count = 0;\n    for(int i = 0; i < nums.size();\
    \ i++) {\n        long num = nums[i];\n        if(num > 10) {\n            long\
    \ last = num % 10;\n            long first = num / 10;\n            if(first %\
    \ 2 != 0 && last % 2 != 0) {\n                count++;\n            }\n      \
    \  }\n    }\n    return count;", "\tlong count = 0;\n\tstd::vector<long> v;\n\t\
    int rem = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] > 10)\
    \ {\n\t\t\tv.push_back(nums[i]);\n\t\t}\n\t}\n\tfor (int i = 0; i < v.size();\
    \ i++) {\n\t\tif (v[i] % 2 != 0) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
  "    long count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i]\
    \ >= 10) {\n            int last = nums[i] % 10;\n            int first = nums[i];\n\
    \            while(first >= 10) {\n                first /= 10;\n            }\n\
    \            if(last % 2 != 0 && first % 2 != 0) {\n                count++;\n\
    \            }\n        }\n    }\n    return count;", "    long count = 0;\n \
    \   for(auto num : nums) {\n        if(num > 10 && ((num / 10) % 2) && (num %\
    \ 2)) {\n            count++;\n        }\n    }\n    return count;", "  long result\
    \ = 0;\n  for (int i = 0; i < nums.size(); i++) {\n    long number = nums[i];\n\
    \    if (number < 10) {\n      continue;\n    }\n    if (number % 2 == 0) {\n\
    \      continue;\n    }\n    if (number % 2 == 0) {\n      continue;\n    }\n\
    \    if (number % 10 == 0) {\n      continue;\n    }\n    if (number % 10 % 2\
    \ == 0) {\n      continue;\n    }\n    if (number / 10 % 10 % 2 == 0) {\n    \
    \  continue;\n    }\n    result++;\n  }\n  return result;", "    int cnt = 0;\n\
    \    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] > 10) {\n    \
    \        if(nums[i]%2 == 1) {\n                int a = nums[i];\n            \
    \    int first = a%10;\n                int last = a/10;\n                if(first%2\
    \ == 1) {\n                    if(last%2 == 1) {\n                        cnt++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return cnt;", "  int count=0;\n  long t=0;\n  for(int i=0;i<nums.size();i++)\n\
    \  {\n    int lastdigit=nums[i]%10;\n    while(nums[i]>0)\n    {\n      t=nums[i]%10;\n\
    \      nums[i]=nums[i]/10;\n    }\n    int firstdigit=t;\n    if(nums[i]>10 &&\
    \ lastdigit%2!=0 && firstdigit%2!=0)\n    {\n      count++;\n    }\n  }\n  return\
    \ count;", "\tif (nums.size() == 0)\n\t\treturn 0;\n\tint count = 0;\n\tfor (int\
    \ i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] >= 10) {\n\t\t\tint firstDigit\
    \ = nums[i] % 10;\n\t\t\tint lastDigit = nums[i] / 10;\n\t\t\tif (firstDigit %\
    \ 2 != 0 && lastDigit % 2 != 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
  "    long count = 0;\n    int n = nums.size();\n    if(n==0)\n        return 0;\n\
    \    for(int i=0;i<n;i++)\n    {\n        long first_digit = nums[i]/10;\n   \
    \     long last_digit = nums[i]%10;\n        if(first_digit<0)\n            first_digit\
    \ *= -1;\n        if(last_digit<0)\n            last_digit *= -1;\n        if(nums[i]>10\
    \ && first_digit%2!=0 && last_digit%2!=0)\n            count++;\n    }\n    return\
    \ count;", "  long len = nums.size();\n  if(len == 0) return 0;\n  long count\
    \ = 0;\n  for(int i = 0; i < len; i++) {\n    long num = nums[i];\n    if(num\
    \ >= 10 && abs(num) % 10 != 0 && num % 10 != 0) {\n      count++;\n    }\n  }\n\
    \  return count;", "    long counter = 0;\n    for (long num : nums) {\n     \
    \   if (num < 10) continue;\n        long ld = num % 10;\n        if (ld % 2 ==\
    \ 0) continue;\n        num /= 10;\n        long fd = num % 10;\n        if (fd\
    \ % 2 == 0) continue;\n        ++counter;\n    }\n    return counter;", "  //\
    \ Write your code here.\n  int count = 0;\n  for(int i = 0; i < nums.size(); i++){\n\
    \    if(nums[i] > 10){\n      long temp = nums[i];\n      int first = temp % 10;\n\
    \      temp /= 10;\n      int last = temp % 10;\n      if(first % 2 != 0 && last\
    \ % 2 != 0){\n        count++;\n      }\n    }\n  }\n  return count;", "    long\
    \ count = 0;\n    for(auto num : nums) {\n        if(num < 10) {\n           \
    \ continue;\n        }\n        if(num % 2 == 0) {\n            continue;\n  \
    \      }\n        long lastDigit = num % 10;\n        long firstDigit = 0;\n \
    \       while(num > 0) {\n            firstDigit = num % 10;\n            num\
    \ /= 10;\n        }\n        if(firstDigit % 2 == 0) {\n            continue;\n\
    \        }\n        if(lastDigit % 2 == 0) {\n            continue;\n        }\n\
    \        count++;\n    }\n    return count;", "  return std::count_if(nums.begin(),\
    \ nums.end(), [](long num) {\n    // Return true if the number passes the test\n\
    \    return num > 10 && std::abs(num) > 10\n        && std::abs(num) % 10 % 2\
    \ == 1 && num % 10 % 2 == 1;\n  });", "\tlong cnt = 0;\n\tfor (int i = 0; i <\
    \ nums.size(); i++) {\n\t\tif (nums[i] >= 10) {\n\t\t\tlong num = nums[i];\n\t\
    \t\tlong last = num % 10;\n\t\t\tlong first = 0;\n\t\t\twhile (num) {\n\t\t\t\t\
    first = num % 10;\n\t\t\t\tnum /= 10;\n\t\t\t}\n\t\t\tif (first % 2 != 0 && last\
    \ % 2 != 0) {\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t}\n\treturn cnt;", "    int ret_val\
    \ = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        long tmp = nums[i];\n\
    \        if(tmp > 10) {\n            if(tmp % 2 != 0 && (tmp / 10) % 2 != 0) {\n\
    \                ret_val++;\n            }\n        }\n    }\n    return ret_val;",
  "\tint count = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] >\
    \ 10) {\n\t\t\tif (nums[i] % 2 != 0) {\n\t\t\t\tif (abs(nums[i]) % 10 != 0) {\n\
    \t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    int\
    \ count = 0;\n    for(auto i: nums){\n        if(i>10 && i>=10 && i<100){\n  \
    \          if(i%10%2 != 0 && i/10%2 != 0){\n                count++;\n       \
    \     }\n        }else if(i>=100 && i<1000){\n            if(i%10%2 != 0 && i/100%2\
    \ != 0){\n                count++;\n            }\n        }else if(i>=1000 &&\
    \ i<10000){\n            if(i%10%2 != 0 && i/1000%2 != 0){\n                count++;\n\
    \            }\n        }else if(i>=10000 && i<100000){\n            if(i%10%2\
    \ != 0 && i/10000%2 != 0){\n                count++;\n            }\n        }else\
    \ if(i>=100000 && i<1000000){\n            if(i%10%2 != 0 && i/100000%2 != 0){\n\
    \                count++;\n            }\n        }else if(i>=1000000 && i<10000000){\n\
    \            if(i%10%2 != 0 && i/1000000%2 != 0){\n                count++;\n\
    \            }\n        }else if(i>=10000000 && i<100000000){\n            if(i%10%2\
    \ != 0 && i/10000000%2 != 0){\n                count++;\n            }\n     \
    \   }else if(i>=100000000 && i<1000000000){\n            if(i%10%2 != 0 && i/100000000%2\
    \ != 0){\n                count++;\n            }\n        }else if(i>=1000000000\
    \ && i<10000000000){\n            if(i%10%2 != 0 && i/1000000000%2 != 0){\n  \
    \              count++;\n            }\n        }else if(i>=10000000000 && i<100000000000){\n\
    \            if(i%10%2 != 0 && i/10000000000%2 != 0){\n                count++;\n\
    \            }\n        }else if(i>=100000000000 && i<1000000000000){\n      \
    \      if(i%10%2 != 0 && i/100000000000%2 != 0){\n                count++;\n \
    \          ", "\tlong c=0;\n\tfor(int i=0;i<nums.size();i++)\n\t{\n\t\tlong f=nums[i]/10;\n\
    \t\tlong l=nums[i]%10;\n\t\tif(nums[i]>10 && f%2!=0 && l%2!=0)\n\t\t\tc++;\n\t\
    }\n\treturn c;", "    // write your code here\n    return 0;", "    long result\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        long num = nums[i];\n\
    \        if (num > 10) {\n            if (num > 0) {\n                if (num\
    \ % 10 % 2 != 0 && num / pow(10, floor(log10(num))) % 2 != 0) {\n            \
    \        result++;\n                }\n            } else {\n                num\
    \ = abs(num);\n                if (num % 10 % 2 != 0 && num / pow(10, floor(log10(num)))\
    \ % 2 != 0) {\n                    result++;\n                }\n            }\n\
    \        }\n    }\n    return result;", "  //TODO: your code here\n  int count\
    \ = 0;\n  for(int i = 0; i < nums.size(); i++){\n    if(nums[i] > 10){\n     \
    \ if(abs(nums[i])%10%2 != 0){\n        if(abs(nums[i])/10%10%2 != 0){\n      \
    \    count += 1;\n        }\n      }\n    }\n  }\n  return count;", "    int count\
    \ = 0;\n    for(auto i: nums){\n        // check if i is greater than 10\n   \
    \     if(i > 10){\n            // get the first and last digits of i\n       \
    \     long first = (long) abs(i)/10;\n            long last = (long) abs(i)%10;\n\
    \            if(first%2!=0 && last%2!=0){\n                count++;\n        \
    \    }\n        }\n    }\n    return count;", "  long result = 0;\n  for (auto\
    \ num : nums) {\n    long last = num % 10;\n    while (num > 9) num /= 10;\n \
    \   if (num % 2 != 0 && last % 2 != 0 && num > 10) ++result;\n  }\n  return result;",
  "    int cont = 0;\n    for(int i = 0; i < nums.size(); i++){\n        long n =\
    \ nums[i];\n        while(n < 0)\n            n *= -1;\n        if(n > 10){\n\
    \            int u = n%10;\n            while(n/10 != 0){\n                n =\
    \ n/10;\n            }\n            int d = n;\n            if(u%2 != 0 && d%2\
    \ != 0)\n                cont++;\n        }\n    }\n    return cont;", "\tlong\
    \ count = 0;\n\tfor (long i = 0; i < nums.size(); i++) {\n\t\tlong n = nums[i];\n\
    \t\tif (n > 10) {\n\t\t\tint firstDigit = n % 10;\n\t\t\tint secondDigit = n /\
    \ 10;\n\t\t\tsecondDigit = secondDigit % 10;\n\t\t\tif (firstDigit % 2 != 0 &&\
    \ secondDigit % 2 != 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "\tint\
    \ count=0;\n\tfor(int i=0;i<nums.size();i++)\n\t{\n\t\tif(nums[i]>10)\n\t\t{\n\
    \t\t\tif(nums[i]%2!=0)\n\t\t\t{\n\t\t\t\tlong a=nums[i];\n\t\t\t\tint ld=a%10;\n\
    \t\t\t\twhile(a>10)\n\t\t\t\t{\n\t\t\t\t\ta=a/10;\n\t\t\t\t}\n\t\t\t\tif(a%2!=0\
    \ && ld%2!=0)\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "\t\
    int count = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] > 10)\
    \ {\n\t\t\tint temp = nums[i];\n\t\t\tint first = temp % 10;\n\t\t\twhile (temp\
    \ != 0) {\n\t\t\t\tif (temp / 10 == 0) {\n\t\t\t\t\tint last = temp % 10;\n\t\t\
    \t\t\tif (first % 2 != 0 && last % 2 != 0) {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\
    }\n\t\t\t\t}\n\t\t\t\ttemp = temp / 10;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;",
  "    int n = nums.size();\n    long count = 0;\n    for(int i = 0; i < n; i++) {\n\
    \        long first = nums[i];\n        long last = nums[i] % 10;\n        if(nums[i]\
    \ > 10 && first % 2 != 0 && last % 2 != 0) {\n            count++;\n        }\n\
    \    }\n    return count;", "    long count = 0;\n    for(int i = 0; i < nums.size();\
    \ i++) {\n        if(nums[i] > 10) {\n            int first = nums[i]/10;\n  \
    \          int last = nums[i]%10;\n            if(first%2 != 0 && last%2 != 0)\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;",
  "    // Write your code here\n    long sum = 0;\n    for(int i = 0; i < nums.size();\
    \ i++){\n        std::string str = std::to_string(nums[i]);\n        long firstDigit\
    \ = nums[i]/abs(nums[i]);\n        long lastDigit = nums[i]%10;\n        if(nums[i]\
    \ > 10 && (firstDigit % 2 == 1 || lastDigit % 2 == 1)){\n            sum++;\n\
    \        }\n    }\n    return sum;", "  long count = 0;\n  for(int i = 0; i <\
    \ nums.size(); i++) {\n    if(abs(nums[i]) > 10) {\n      if(abs(nums[i]) % 10\
    \ == 1 || abs(nums[i]) % 10 == 3 || abs(nums[i]) % 10 == 5 || abs(nums[i]) % 10\
    \ == 7 || abs(nums[i]) % 10 == 9) {\n        if(abs(nums[i]) / 10 == 1 || abs(nums[i])\
    \ / 10 == 3 || abs(nums[i]) / 10 == 5 || abs(nums[i]) / 10 == 7 || abs(nums[i])\
    \ / 10 == 9) {\n          count++;\n        }\n      }\n    }\n  }\n  return count;",
  "    long cnt = 0;\n    for(auto x: nums) {\n        if(x > 10 && x % 2 == 1 &&\
    \ x / 10 % 2 == 1) {\n            ++cnt;\n        }\n    }\n    return cnt;",
  "  int count = 0;\n  for(int i = 0; i < nums.size(); i++) {\n    if(nums[i] > 10)\
    \ {\n      int lastDigit = nums[i] % 10;\n      if(lastDigit % 2 != 0) {\n   \
    \     int firstDigit = 0;\n        while(nums[i] > 10) {\n          nums[i] =\
    \ nums[i] / 10;\n        }\n        firstDigit = nums[i];\n        if(firstDigit\
    \ % 2 != 0) {\n          count++;\n        }\n      }\n    }\n  }\n  return count;",
  "  // write your code here\n  int counter = 0;\n  for(int i = 0; i < nums.size();\
    \ i++){\n    int last = nums[i] % 10;\n    int firts = nums[i];\n    while(firts\
    \ > 10){\n      firts = firts / 10;\n    }\n    if(nums[i] > 10){\n      if(last\
    \ % 2 != 0 && firts % 2 != 0){\n        counter++;\n      }\n    }\n  }\n  return\
    \ counter;", "    long count = 0;\n    for(long num : nums) {\n        if(num\
    \ > 10 && (num % 10) % 2 != 0 && (num / 10) % 2 != 0)\n            count++;\n\
    \    }\n    return count;", "  int count=0;\n  for(long i=0;i<nums.size();i++)\n\
    \  {\n    int n=nums[i];\n    if(n>10)\n    {\n      int first=n%10;\n      int\
    \ last=n%10;\n      if(first%2!=0 && last%2!=0)\n      {\n        count++;\n \
    \     }\n    }\n  }\n  return count;", "  long final_num=0;\n  long n;\n  for(int\
    \ i=0;i<nums.size();i++)\n  {\n    if(nums[i]>10)\n    {\n      if(nums[i]<0)\n\
    \      {\n        n=-nums[i];\n      }\n      else\n      {\n        n=nums[i];\n\
    \      }\n      while(n>=10)\n      {\n        n=n/10;\n      }\n      if(n%2!=0)\n\
    \      {\n        long a=nums[i];\n        while(a>10)\n        {\n          a=a/10;\n\
    \        }\n        if(a%2!=0)\n        {\n          final_num++;\n        }\n\
    \      }\n    }\n  }\n  return final_num;", "    return std::count_if(nums.begin(),\
    \ nums.end(), [](long num) {\n        if (num > 10) {\n            std::string\
    \ s = std::to_string(num);\n            if (s.at(0) % 2 == 1 && s.at(s.size()\
    \ - 1) % 2 == 1) {\n                return true;\n            }\n        }\n \
    \       return false;\n    });", "  long count = 0;\n  for(auto i: nums){\n  \
    \  if(i>10 && std::abs(i)%10%2==1 && i/10%10%2==1)\n      count++;\n  }\n  return\
    \ count;", "  std::vector<long>::iterator itr;\n  long count = 0;\n  for(itr =\
    \ nums.begin(); itr != nums.end(); itr++) {\n    int firstDigit, lastDigit;\n\
    \    if(*itr >= 10) {\n      firstDigit = *itr % 10;\n      lastDigit = *itr %\
    \ 10;\n      if(firstDigit == 1 || firstDigit == 3 || firstDigit == 5 || firstDigit\
    \ == 7 || firstDigit == 9) {\n        if(lastDigit == 1 || lastDigit == 3 || lastDigit\
    \ == 5 || lastDigit == 7 || lastDigit == 9) {\n          count++;\n        }\n\
    \      }\n    }\n  }\n  return count;", "  long count = 0;\n  for(int i = 0; i\
    \ < nums.size(); i++) {\n    if(abs(nums[i]) >= 10) {\n      if(abs(nums[i]) %\
    \ 2 != 0) {\n        count++;\n      }\n    }\n  }\n  return count;", "  // your\
    \ code here\n  long sum=0;\n  for(int i=0;i<nums.size();i++)\n  {\n      int flag1=0,flag2=0;\n\
    \      if(nums[i]>10)\n      {\n          int temp=nums[i];\n          if(temp%10%2!=0)\n\
    \          {\n              flag1=1;\n          }\n          while(temp>0)\n \
    \         {\n              temp=temp/10;\n              if(temp%10%2!=0)\n   \
    \           {\n                  flag2=1;\n              }\n          }\n    \
    \      if(flag1==1 && flag2==1)\n          {\n              sum++;\n         \
    \ }\n      }\n  }\n  return sum;", "\t// Write your code here\n\t// 1, 3, 5, 7,\
    \ 9\n\tint count = 0;\n\tfor (long i = 0; i < nums.size(); i++) {\n\t\tif (nums[i]\
    \ > 10) {\n\t\t\tint last = 0;\n\t\t\twhile (nums[i] > 0) {\n\t\t\t\tlast = nums[i]\
    \ % 10;\n\t\t\t\tnums[i] = nums[i] / 10;\n\t\t\t}\n\t\t\t// std::cout << last\
    \ << \" \" << nums[i] << std::endl;\n\t\t\tif (last % 2 != 0) {\n\t\t\t\tcount++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn count;", "    // your code goes here\n    long sum=0;\n\
    \    long a=0;\n    long b=0;\n    for(long i=0;i<nums.size();i++)\n    {\n  \
    \    a=nums[i];\n      if(a>10)\n      {\n        b=a%10;\n        if(b%2!=0)\n\
    \        {\n          a=a/10;\n          while(a>=10)\n          {\n         \
    \   a=a/10;\n          }\n          if(a%2!=0)\n          {\n            sum++;\n\
    \          }\n        }\n      }\n    }\n    return sum;\n  }\nint main()\n{\n\
    \    std::vector<long> nums = {15, -73, 14, -15};\n    long a = specialFilter(nums);\n\
    \    assert(a == 1);\n    std::vector<long> nums1 = {33, -2, -3, 45, 21, 109};\n\
    \    long b = specialFilter(nums1);\n    assert(b == 2);\n    std::vector<long>\
    \ nums2 = {109, 210, 211, 12, -155};\n    long c = specialFilter(nums2);\n   \
    \ assert(c == 1);\n    std::vector<long> nums3 = {-11, -12, -13, -14, -15};\n\
    \    long d = specialFilter(nums3);\n    assert(d == 0);\n    std::vector<long>\
    \ nums4 = {-111, -112, -113, -114, -115};\n    long e = specialFilter(nums4);\n\
    \    assert(e == 0);\n    std::vector<long> nums5 = {1, 2, 3, 4, 5};\n    long\
    \ f = specialFilter(nums5);\n    assert(f == 0);\n    std::vector<long> nums6\
    \ = {1, 2, 3, 4, 5, 12};\n    long g = specialFilter(nums6);\n    assert(g ==\
    \ 1);\n    std::vector<long> nums7 = {13, 22, 31, 40, 51, 64};\n    long h =",
  "  int count = 0;\n  for(auto n : nums) {\n    if(n > 10) {\n      long a = n;\n\
    \      while(a) {\n        if(a % 10 % 2 != 0) {\n          if(a / 10 == 0)\n\
    \            count++;\n          break;\n        }\n        a /= 10;\n      }\n\
    \    }\n  }\n  return count;", "  long oddCount = 0;\n  // Write your code here\n\
    \  // ...\n  for(std::vector<long>::iterator it = nums.begin(); it != nums.end();\
    \ ++it) {\n      long num = *it;\n      long firstDigit = num;\n      long lastDigit\
    \ = num % 10;\n      long numOfDigits = 0;\n      while(firstDigit > 0) {\n  \
    \        firstDigit /= 10;\n          numOfDigits++;\n      }\n      firstDigit\
    \ = num / std::pow(10, numOfDigits - 1);\n      if(num > 10 && firstDigit % 2\
    \ != 0 && lastDigit % 2 != 0) {\n          oddCount++;\n      }\n  }\n  return\
    \ oddCount;", "\tint count = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\
    \tif (nums[i] > 10) {\n\t\t\tint p = nums[i];\n\t\t\tint lastDigit = p % 10;\n\
    \t\t\tint firstDigit = (int)p;\n\t\t\twhile (firstDigit >= 10) {\n\t\t\t\tfirstDigit\
    \ = firstDigit / 10;\n\t\t\t}\n\t\t\tif (lastDigit % 2 != 0 && firstDigit % 2\
    \ != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "\t// Write\
    \ your code here\n\tint count = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\
    \t\tint first = nums[i] / 10;\n\t\tint last = nums[i] % 10;\n\t\tint copy = nums[i];\n\
    \t\tint sum = 0;\n\t\twhile (nums[i] != 0) {\n\t\t\tsum += nums[i] % 10;\n\t\t\
    \tnums[i] /= 10;\n\t\t}\n\t\tif (sum > 10 && (first % 2 != 0 && last % 2 != 0))\
    \ {\n\t\t\tcount++;\n\t\t}\n\t\tnums[i] = copy;\n\t}\n\treturn count;", "    long\
    \ count=0;\n    for(int i=0;i<nums.size();i++)\n    {\n        long n=nums[i];\n\
    \        while(n)\n        {\n            int r=n%10;\n            if(r%2==0)\n\
    \            {\n                break;\n            }\n            n=n/10;\n \
    \       }\n        if(n==0 && nums[i]>10)\n        {\n            count++;\n \
    \       }\n    }\n    return count;", "\t// Write your code here\n\tint cnt =\
    \ 0;\n\tfor (auto i : nums) {\n\t\tif (i >= 10) {\n\t\t\tlong tmp = i;\n\t\t\t\
    int first = tmp % 10;\n\t\t\ttmp /= 10;\n\t\t\tint second = tmp % 10;\n\t\t\t\
    if (first % 2 != 0 && second % 2 != 0) {\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn cnt;", " \tlong c=0;\n\tint i,dig,dig1,l,f;\n\tfor(i=0;i<nums.size();i++)\n\
    \t{\n\t\tdig=nums[i];\n\t\tdig1=nums[i];\n\t\tif(dig>10)\n\t\t{\n\t\t\twhile(dig>=10)\n\
    \t\t\t{\n\t\t\t\tdig=dig/10;\n\t\t\t}\n\t\t\tl=dig;\n\t\t\twhile(dig1>=10)\n\t\
    \t\t{\n\t\t\t\tdig1=dig1%10;\n\t\t\t}\n\t\t\tf=dig1;\n\t\t\tif(l%2!=0 && f%2!=0)\n\
    \t\t\t{\n\t\t\t\tc++;\n\t\t\t}\n\t\t}\n\t}\n\treturn c;", "    int cnt = 0;\n\
    \    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] > 10) {\n    \
    \        int first = nums[i] % 10;\n            int last = nums[i] / 10;\n   \
    \         while(last > 0) {\n                if(first % 2 == 1 && last % 2 ==\
    \ 1) {\n                    cnt++;\n                    break;\n             \
    \   }\n                last /= 10;\n            }\n        }\n    }\n    return\
    \ cnt;", "    // place code here\n    int count = 0;\n    for(int i = 0; i < nums.size();\
    \ i++){\n        // check for number greater than 10\n        if(nums[i] > 10){\n\
    \            int last_digit = nums[i] % 10;\n            //cout << \"last_digit\
    \ = \" << last_digit << endl;\n            // check for first digit\n        \
    \    int first_digit = 0;\n            int temp = nums[i];\n            while(temp){\n\
    \                temp /= 10;\n                if(temp == 0){\n               \
    \     first_digit = temp;\n                    break;\n                }\n   \
    \             first_digit = temp % 10;\n            }\n            //cout << \"\
    first_digit = \" << first_digit << endl;\n            // check for odd numbers\n\
    \            if(first_digit % 2 != 0 && last_digit % 2 != 0){\n              \
    \  count++;\n            }\n        }\n    }\n    return count;", "\tlong counter\
    \ = 0;\n\tlong firstDigit, lastDigit;\n\tfor (long i = 0; i < nums.size(); i++)\
    \ {\n\t\tfirstDigit = nums[i] / 10;\n\t\tlastDigit = nums[i] % 10;\n\t\tif (firstDigit\
    \ == 0) {\n\t\t\tif (lastDigit > 10 && lastDigit % 2 != 0) {\n\t\t\t\tcounter++;\n\
    \t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (nums[i] > 10 && nums[i] % 2 != 0 && lastDigit\
    \ % 2 != 0 && firstDigit % 2 != 0) {\n\t\t\t\tcounter++;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn counter;", "    int count = 0;\n    for(int i = 0; i < nums.size(); i++)\
    \ {\n        int first = nums[i] / 10;\n        int last = nums[i] % 10;\n   \
    \     if(nums[i] > 10 && first % 2 != 0 && last % 2 != 0) {\n            count++;\n\
    \        }\n    }\n    return count;", "\tint flag = 0;\n\tlong count = 0;\n\t\
    for (int i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] > 10) {\n\t\t\tint num\
    \ = nums[i];\n\t\t\twhile (num > 0) {\n\t\t\t\tint rem = num % 10;\n\t\t\t\tnum\
    \ = num / 10;\n\t\t\t\tif (rem % 2 != 0) {\n\t\t\t\t\tflag++;\n\t\t\t\t}\n\t\t\
    \t}\n\t\t\tif (flag == 2) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tflag = 0;\n\t\t\
    }\n\t}\n\treturn count;", "    int count = 0;\n    for(int i = 0; i < nums.size();\
    \ i++) {\n        if(nums[i] > 10 && abs(nums[i]) % 2 == 1 && abs(nums[i] / 10)\
    \ % 2 == 1) {\n            count++;\n        }\n    }\n    return count;", " \
    \ long count = 0;\n  for(long i = 0; i < nums.size(); i++) {\n    // check if\
    \ the number is greater than 10\n    if(nums[i] > 10) {\n      // check for the\
    \ first digit\n      if(nums[i] >= 100) {\n        long firstDigit = nums[i] /\
    \ 100;\n        if(firstDigit % 2 != 0) {\n          long secondDigit = (nums[i]\
    \ / 10) % 10;\n          if(secondDigit % 2 != 0) {\n            long thirdDigit\
    \ = nums[i] % 10;\n            if(thirdDigit % 2 != 0) {\n              count++;\n\
    \            }\n          }\n        }\n      }\n      // check for the second\
    \ digit\n      else if(nums[i] >= 10) {\n        long firstDigit = nums[i] / 10;\n\
    \        if(firstDigit % 2 != 0) {\n          long secondDigit = nums[i] % 10;\n\
    \          if(secondDigit % 2 != 0) {\n            count++;\n          }\n   \
    \     }\n      }\n    }\n  }\n  return count;", "\t\n\tlong count = 0;\n\tfor\
    \ (int i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] > 10) {\n\t\t\tint even\
    \ = 0;\n\t\t\tint odd = 0;\n\t\t\twhile (nums[i] != 0) {\n\t\t\t\tint temp = nums[i]\
    \ % 10;\n\t\t\t\tif (temp % 2 == 0) {\n\t\t\t\t\teven = 1;\n\t\t\t\t}\n\t\t\t\t\
    else {\n\t\t\t\t\todd = 1;\n\t\t\t\t}\n\t\t\t\tnums[i] = nums[i] / 10;\n\t\t\t\
    }\n\t\t\tif (even == 0 && odd == 1) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn count;", "    long count = 0;\n    for(long i = 0; i < nums.size(); i++)\
    \ {\n        int ld = nums[i] % 10;\n        int fd = 0;\n        if(nums[i] <\
    \ 0) {\n            nums[i] = nums[i] * -1;\n        }\n        while(nums[i]\
    \ > 0) {\n            fd = nums[i] % 10;\n            nums[i] = nums[i] / 10;\n\
    \        }\n        if(nums[i] > 10 && ld % 2 != 0 && fd % 2 != 0) {\n       \
    \     count++;\n        }\n    }\n    return count;", "\tstd::vector<long> digits;\n\
    \tlong sum = 0;\n\tfor (long x : nums) {\n\t\tdigits.clear();\n\t\twhile (x >\
    \ 0) {\n\t\t\tdigits.push_back(x % 10);\n\t\t\tx /= 10;\n\t\t}\n\t\tif (digits.size()\
    \ > 1 && digits[0] % 2 != 0 && digits[digits.size() - 1] % 2 != 0) {\n\t\t\tsum++;\n\
    \t\t}\n\t}\n\treturn sum;", "    // Write your code here\n  long counter=0;\n\
    \  long lastdig,frdig;\n  int n;\n  n=nums.size();\n  if(n==0)\n    return 0;\n\
    \  for(int i=0;i<n;i++)\n  {\n    if(nums[i]>10)\n    {\n      lastdig=nums[i]%10;\n\
    \      frdig=nums[i];\n      while(frdig>10)\n      {\n        frdig=frdig/10;\n\
    \      }\n      if(lastdig%2!=0 && frdig%2!=0)\n        counter++;\n    }\n  }\n\
    \  return counter;", "\t// Write your code here\n\tlong count = 0;\n\tfor (long\
    \ i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] > 10) {\n\t\t\tlong last = nums[i]\
    \ % 10;\n\t\t\tlong first = nums[i];\n\t\t\twhile (first >= 10) {\n\t\t\t\tfirst\
    \ = first / 10;\n\t\t\t}\n\t\t\tif (last % 2 != 0 && first % 2 != 0) {\n\t\t\t\
    \tcount += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "  \tlong count = 0;\n\t\
    for(auto i:nums){\n\t\tint t = i, last = i%10;\n\t\twhile(t>0){\n\t\t\tt/=10;\n\
    \t\t}\n\t\tint first = t;\n\t\tif(i>10 && first%2!=0 && last%2!=0){\n\t\t\tcount++;\n\
    \t\t}\n\t}\n  \treturn count;", "  \n  return 0;", "  // your code here\n  int\
    \ count = 0;\n  for(int i = 0; i < nums.size(); i++){\n    int j = nums[i];\n\
    \    int k = nums[i];\n    int l = nums[i];\n    if (j >= 10){\n      while(j\
    \ >= 10){\n        j = j/10;\n      }\n      if(j%2 != 0 && (l%10)%2 != 0){\n\
    \        count++;\n      }\n    }\n  }\n  return count;", "    int count = 0;\n\
    \    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] > 10) {\n    \
    \        long firstDigit = nums[i] % 10;\n            long lastDigit = nums[i]\
    \ / 10;\n            if(firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n       \
    \         count++;\n            }\n        }\n    }\n    return count;", "\tlong\
    \ count=0;\n\tfor(long j=0;j<nums.size();j++)\n\t{\n\t\tlong i=nums[j];\n\t\t\
    if(i>10)\n\t\t{\n\t\t\twhile(i>10)\n\t\t\t{\n\t\t\t\ti=i/10;\n\t\t\t}\n\t\t\t\
    if(i%2!=0)\n\t\t\t{\n\t\t\t\tif(nums[j]%2!=0)\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    long count = 0;\n    int\
    \ size = nums.size();\n    for(int i = 0; i < size; i++) {\n        long num =\
    \ nums[i];\n        if(num < 10) continue;\n        if(num < 0) num = -num;\n\
    \        int l = num % 10;\n        int f = 0;\n        while(num > 0) {\n   \
    \         f = num % 10;\n            num /= 10;\n        }\n        if(l % 2 ==\
    \ 1 && f % 2 == 1) {\n            count++;\n        }\n    }\n    return count;",
  "    int count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        long firstdigit\
    \ = nums[i]/10;\n        long lastdigit = nums[i]%10;\n        while(firstdigit\
    \ >= 10) {\n            firstdigit = firstdigit/10;\n        }\n        if(nums[i]\
    \ > 10 && (firstdigit % 2 != 0) && (lastdigit % 2 != 0)) {\n            count++;\n\
    \        }\n    }\n    return count;", "    int count = 0;\n    // if(nums.size()==0)\n\
    \    //     return 0;\n    std::vector<long>::iterator itr;\n    for(itr = nums.begin();\
    \ itr!=nums.end(); itr++){\n        long num = *itr;\n        if(num<10)\n   \
    \         continue;\n        int lastDigit = num%10;\n        if(lastDigit%2==0)\n\
    \            continue;\n        long firstDigit = num;\n        while(firstDigit>=10){\n\
    \            firstDigit/=10;\n        }\n        if(firstDigit%2==0)\n       \
    \     continue;\n        count++;\n    }\n    return count;", "    int cnt = 0;\n\
    \    for(auto x: nums) {\n        if(x>10) {\n            int q = x/10;\n    \
    \        int r = x%10;\n            if(q%2==1 && r%2==1) {\n                cnt++;\n\
    \            }\n        }\n    }\n    return cnt;", "    long counter = 0;\n \
    \   for (int i = 0; i < nums.size(); i++) {\n        std::string numString = std::to_string(nums[i]);\n\
    \        if (nums[i] > 10 && numString[0] % 2 != 0 && numString[numString.size()\
    \ - 1] % 2 != 0) {\n            counter++;\n        }\n    }\n    return counter;",
  "  int count = 0;\n  for(int i = 0; i < nums.size(); i++) {\n    long a = nums[i];\n\
    \    if (a > 10) {\n      if (a % 2 != 0) {\n        if (a % 10 == 1 || a % 10\
    \ == 3 || a % 10 == 5 || a % 10 == 7 || a % 10 == 9) {\n          count++;\n \
    \       }\n      }\n    }\n  }\n  return count;", "    long count=0;\n    for(long\
    \ i=0;i<nums.size();i++)\n    {\n        long s=nums[i];\n        if(s<10)\n \
    \       {\n            if(s%2==1 || s%2==-1)\n            {\n                count++;\n\
    \            }\n        }\n        else\n        {\n            if(s%10==0)\n\
    \            {\n                s/=10;\n            }\n            if(s%10==1\
    \ || s%10==3 || s%10==5 || s%10==7 || s%10==9)\n            {\n              \
    \  long last=s%10;\n                long first=0;\n                while(s>0)\n\
    \                {\n                    first=s%10;\n                    s/=10;\n\
    \                }\n                if(first==1 || first==3 || first==5 || first==7\
    \ || first==9)\n                {\n                    count++;\n            \
    \    }\n            }\n        }\n    }\n    return count;", "\tlong count = 0;\n\
    \tint arr_size = nums.size();\n\tfor (int i = 0; i < arr_size; i++) {\n\t\tif\
    \ (nums[i] >= 10) {\n\t\t\tint n = nums[i];\n\t\t\twhile (n >= 10) {\n\t\t\t\t\
    n = n / 10;\n\t\t\t}\n\t\t\tint temp = nums[i];\n\t\t\tint last = temp % 10;\n\
    \t\t\tif (n % 2 != 0 && last % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn count;", "    // TODO: write your code here\n    return 0;", "   \
    \ std::vector<long> special_nums;\n    for (int i = 0; i < nums.size(); i++) {\n\
    \        int n = std::abs(nums[i]);\n        if (n > 10) {\n            int last_digit\
    \ = n % 10;\n            while (n >= 10) {\n                n /= 10;\n       \
    \     }\n            if (n % 2 != 0 && last_digit % 2 != 0) {\n              \
    \  special_nums.push_back(nums[i]);\n            }\n        }\n    }\n    return\
    \ special_nums.size();", "  int num=0;\n  for(int i=0;i<nums.size();i++)\n  {\n\
    \    int j=nums[i]%10;\n    int j1=nums[i];\n    while(j1)\n    {\n      j1=j1/10;\n\
    \    }\n    j1=j1%10;\n    if(nums[i]>10&&j%2!=0&&j1%2!=0)\n    {\n      num++;\n\
    \    }\n  }\n  return num;", "    long size = nums.size();\n    long count = 0;\n\
    \    long left, right;\n    for(long i = 0; i < size; i++) {\n        left = nums[i]/10;\n\
    \        right = nums[i]%10;\n        if(nums[i] > 10 && left%2 != 0 && right%2\
    \ != 0) {\n            count++;\n        }\n    }\n    return count;", "    int\
    \ count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        int div = nums[i];\n\
    \        int rev = 0;\n        int first = 0;\n        int last = 0;\n       \
    \ while(div > 0) {\n            rev = rev * 10 + div % 10;\n            div =\
    \ div / 10;\n        }\n        while(rev > 0) {\n            first = rev % 10;\n\
    \            last = first;\n            rev = rev / 10;\n        }\n        if(first\
    \ % 2 != 0 && last % 2 != 0 && nums[i] > 10) {\n            count++;\n       \
    \ }\n    }\n    return count;", "\tlong count = 0;\n\tfor (int i = 0; i < nums.size();\
    \ i++) {\n\t\tif (nums[i] > 10) {\n\t\t\tint x = nums[i];\n\t\t\tint first = x\
    \ % 10;\n\t\t\tint last = x;\n\t\t\twhile (last > 10) {\n\t\t\t\tlast = last /\
    \ 10;\n\t\t\t}\n\t\t\tif (first % 2 != 0 && last % 2 != 0) {\n\t\t\t\tcount++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn count;", "\tstd::function<bool(long)> hasOddFirstAndLastDigits\
    \ = [](long n) {\n\t\tif (n < 0) n *= -1;\n\t\tint fDigit = n % 10;\n\t\twhile\
    \ (n / 10) {\n\t\t\tn /= 10;\n\t\t}\n\t\tint lDigit = n;\n\t\treturn (fDigit %\
    \ 2 == 1) && (lDigit % 2 == 1);\n\t};\n\tstd::function<bool(long)> isGreaterThan10\
    \ = [](long n) {\n\t\treturn n > 10;\n\t};\n\treturn std::count_if(nums.begin(),\
    \ nums.end(), hasOddFirstAndLastDigits && isGreaterThan10);", "    // your code\
    \ here\n    long c=0;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]>10)\n\
    \        {\n            int a=nums[i]%10;\n            int b=nums[i]/10;\n   \
    \         if(a%2!=0 && b%2!=0)\n            {\n                c++;\n        \
    \    }\n        }\n    }\n    return c;", "\tint count = 0;\n\tfor (int i = 0;\
    \ i < nums.size(); i++) {\n\t\tif (nums[i] > 10) {\n\t\t\tint first = nums[i]\
    \ % 10;\n\t\t\tif (first % 2 != 0) {\n\t\t\t\tint num = nums[i];\n\t\t\t\twhile\
    \ (num >= 10) {\n\t\t\t\t\tnum = num / 10;\n\t\t\t\t}\n\t\t\t\tif (num % 2 !=\
    \ 0) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;",
  "    long count = 0;\n    std::vector<long>::iterator it;\n    for(it = nums.begin();\
    \ it != nums.end(); it++) {\n        if(*it > 10) {\n            int first = *it\
    \ % 10;\n            while(*it != 0) {\n                if(*it % 2 != 0) {\n \
    \                   count++;\n                    break;\n                }\n\
    \                *it /= 10;\n            }\n            *it = first;\n       \
    \ }\n    }\n    return count;", "    long count = 0;\n    for(auto num : nums)\
    \ {\n        if (num < 10) {\n            continue;\n        }\n        if (num\
    \ % 2 == 0) {\n            continue;\n        }\n        if (num % 10 % 2 == 0)\
    \ {\n            continue;\n        }\n        long divisor = 1;\n        while\
    \ (num / divisor >= 10) {\n            divisor *= 10;\n        }\n        if (num\
    \ / divisor % 2 == 0) {\n            continue;\n        }\n        count++;\n\
    \    }\n    return count;", "\tlong count = 0;\n\tfor (long elem : nums) {\n\t\
    \tif (elem > 10) {\n\t\t\tint digit;\n\t\t\twhile (elem) {\n\t\t\t\tdigit = elem\
    \ % 10;\n\t\t\t\tif (digit % 2 == 0)\n\t\t\t\t\tbreak;\n\t\t\t\telem /= 10;\n\t\
    \t\t}\n\t\t\tif (elem == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "\t\
    //return std::count_if(nums.begin(), nums.end(), [](long x) { return x > 10 &&\
    \ std::abs(x % 10) % 2 == 1 && x / 10 % 2 == 1; });\n\t//return std::count_if(nums.begin(),\
    \ nums.end(), [](long x) { return x > 10 && abs(x % 10) % 2 == 1 && x / 10 % 2\
    \ == 1; });\n\treturn std::count_if(nums.begin(), nums.end(), [](long x) {return\
    \ x > 10 && abs(x % 10) % 2 == 1 && x / 10 % 2 == 1; });", "    std::vector<long>\
    \ result;\n    int count = 0;\n    int firstDigit;\n    int lastDigit;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        if (nums[i] > 10) {\n         \
    \   std::string numberAsString = std::to_string(nums[i]);\n            if (numberAsString.length()\
    \ == 1) {\n                firstDigit = std::stoi(numberAsString.substr(0, 1));\n\
    \                lastDigit = std::stoi(numberAsString.substr(0, 1));\n       \
    \     } else {\n                firstDigit = std::stoi(numberAsString.substr(0,\
    \ 1));\n                lastDigit = std::stoi(numberAsString.substr(numberAsString.length()\
    \ - 1, 1));\n            }\n            if (firstDigit % 2 != 0 && lastDigit %\
    \ 2 != 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;", "  long counter=0;\n  for(long i=0;i<nums.size();i++){\n      long\
    \ temp=nums[i]/10;\n      long last=nums[i]%10;\n      if(temp>=10){\n      if(nums[i]>10){\n\
    \      if(temp%2!=0 && last%2!=0){\n          counter++;\n      }\n      }\n \
    \     }\n      else{\n          if(nums[i]>10){\n          if(nums[i]%2!=0){\n\
    \              counter++;\n          }\n          }\n      }\n  }\n  return counter;",
  "  long result = 0;\n  // Write your code here\n  \n  return result;", "\treturn\
    \ 0;", "  long count = 0;\n  long i = 0;\n  while(i < nums.size()) {\n    if(nums[i]\
    \ > 10) {\n      long num = nums[i];\n      int last_digit = num % 10;\n     \
    \ int first_digit = num;\n      while(first_digit >= 10) {\n        first_digit\
    \ = first_digit / 10;\n      }\n      if(last_digit % 2 != 0 && first_digit %\
    \ 2 != 0) {\n        count++;\n      }\n    }\n    i++;\n  }\n  return count;",
  "  long count = 0;\n  for(long i = 0; i < nums.size(); i++) {\n    long first =\
    \ nums[i] / abs(nums[i]);\n    long last = nums[i] % 10;\n    if(nums[i] >= 10\
    \ && first % 2 != 0 && last % 2 != 0) {\n      count++;\n    }\n  }\n  return\
    \ count;", "    long count=0;\n    std::vector<long>::iterator itr = nums.begin();\n\
    \    while(itr!=nums.end()){\n        if(*itr > 10){\n            long x = *itr;\n\
    \            long first = *itr%10;\n            long last = *itr/10;\n       \
    \     if(first%2!=0 && last%2!=0){\n                count++;\n            }\n\
    \        }\n        itr++;\n    }\n    return count;", "    int count = 0;\n \
    \   for(long l : nums){\n        if(l > 10){\n            std::string temp = std::to_string(l);\n\
    \            if(temp[0]%2 != 0 && temp[temp.length()-1]%2 != 0){\n           \
    \     count++;\n            }\n        }\n    }\n    return count;", "    int\
    \ c = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        long n = nums[i];\n\
    \        if(n > 10) {\n            int first_digit = n % 10;\n            int\
    \ last_digit = n % 10;\n            if(first_digit % 2 != 0 && last_digit % 2\
    \ != 0) {\n                c++;\n            }\n        }\n    }\n    return c;",
  "    long count=0;\n    for(long n:nums){\n        long lastDigit=abs(n%10);\n \
    \       if(lastDigit%2!=0){\n            while(n>10){\n                n/=10;\n\
    \            }\n            if(n%2!=0){\n                count++;\n          \
    \  }\n        }\n    }\n    return count;", "  if(nums.size() == 0) return 0;\n\
    \  long total = 0;\n  for(int i = 0; i < nums.size(); i++){\n    long num = nums[i];\n\
    \    long first = nums[i] % 10;\n    long last = nums[i] / 10;\n    if(first %\
    \ 2 != 0 && last % 2 != 0 && num > 10){\n      total++;\n    }\n  }\n  return\
    \ total;", "    int count = 0;\n    std::vector<long>::iterator itr = nums.begin();\n\
    \    while(itr != nums.end()) {\n        long temp = *itr;\n        if(temp >\
    \ 10) {\n            int firstDigit = temp % 10;\n            int lastDigit =\
    \ temp;\n            while(lastDigit >= 10) {\n                lastDigit /= 10;\n\
    \            }\n            if(firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n\
    \                count++;\n            }\n        }\n        itr++;\n    }\n \
    \   return count;", "\t\n\t// Since the assumption is that the size of numbers\
    \ is between 1 and 100,\n\t// we can efficiently solve this problem using a sliding\
    \ window of size 2.\n\t// For example:\n\t// 1 2 3 4 5 6 7 8 9 10\n\t// 1 3 5\
    \ 7 9 \n\t// \t3 5 7 9 11\n\t// \t\t5 7 9 11 13\n\t// \t\t\t7 9 11 13 15\n\n\t\
    // We can check if the element is greater than 10 by checking the last element\n\
    \t// in the sliding window.\n\n\t// We can check if the first and last digits\
    \ are odd by checking if the first\n\t// element is odd and the third element\
    \ is odd.\n\n\tlong start = 0;\n\tlong end = 2;\n\tlong count = 0;\n\n\twhile\
    \ (end < nums.size()) {\n\t\tif (nums[end] > 10 && (nums[start] % 2 != 0) && (nums[end\
    \ - 1] % 2 != 0)) {\n\t\t\tcount++;\n\t\t}\n\t\tstart++;\n\t\tend++;\n\t}\n\n\t\
    return count;", "    long count = 0;\n    for(int i = 0; i < nums.size(); i++)\
    \ {\n        if(nums[i] > 10 && nums[i] % 2 != 0 && nums[i] % 10 != 0) {\n   \
    \         count++;\n        }\n    }\n    return count;", "    // Write your code\
    \ here\n    // O(n) solution\n    long count = 0;\n    for(long i=0; i<nums.size();\
    \ i++){\n        if(nums[i]>10 && (nums[i]%10)%2 != 0 && (nums[i]/10)%2 != 0)\n\
    \            count++;\n    }\n    return count;", "    long count = 0;\n    for(long\
    \ i=0; i<nums.size(); i++) {\n        if(nums[i] > 10 && nums[i]%2 != 0 && (nums[i]/10)%2\
    \ != 0) {\n            count++;\n        }\n    }\n    return count;", "    return\
    \ std::count_if(nums.begin(), nums.end(), [](long num) {\n        return num >\
    \ 10 && std::to_string(num).front() % 2 != 0 && std::to_string(num).back() % 2\
    \ != 0;\n    });", "    int result = 0;\n    for (size_t i = 0; i < nums.size();\
    \ i++) {\n        if (nums[i] > 10) {\n            int first = nums[i] % 10;\n\
    \            int last = 0;\n            while (nums[i] >= 10) {\n            \
    \    last = nums[i] % 10;\n                nums[i] /= 10;\n            }\n   \
    \         if (first % 2 == 1 && last % 2 == 1) {\n                result++;\n\
    \            }\n        }\n    }\n    return result;", "    int count = 0;\n \
    \   for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 % 2 != 0) {\n            count++;\n        }\n    }\n\
    \    return count;", "  //check if the first and last digits are odd\n  int result\
    \ = 0;\n  for(int i = 0; i < nums.size(); i++){\n    if(nums[i] > 10){\n     \
    \ std::string numstr = std::to_string(nums[i]);\n      if(numstr[0] - '0'%2 !=\
    \ 0 && numstr[numstr.size()-1] - '0'%2 != 0){\n        result++;\n      }\n  \
    \  }\n  }\n  return result;", "    long result = 0;\n    for (auto i : nums) {\n\
    \        if (i > 10 && std::to_string(i).front() % 2 != 0 && std::to_string(i).back()\
    \ % 2 != 0)\n            result++;\n    }\n    return result;", "  int count =\
    \ 0;\n  for(int i = 0; i < nums.size(); i++) {\n    if(abs(nums[i]) > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0) {\n      count++;\n    }\n  }\n  return count;",
  "   int count = 0;\n   int len = nums.size();\n   for(int i = 0; i < len; i++) {\n\
    \      long temp = nums[i];\n      if(temp > 10 && (temp % 10) % 2 != 0 && (temp\
    \ / 10) % 2 != 0) {\n         count++;\n      }\n   }\n   return count;", "  int\
    \ n = 0;\n  for (auto it = nums.begin(); it != nums.end(); it++) {\n    if ((*it)\
    \ > 10) {\n      std::string a = std::to_string(*it);\n      int first = (int)a[0]\
    \ - 48;\n      int last = (int)a[a.length() - 1] - 48;\n      if (first % 2 !=\
    \ 0 && last % 2 != 0) {\n        n++;\n      }\n    }\n  }\n  return n;", "  \
    \  long res = 0;\n    int first, last;\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        first = nums[i] / pow(10, std::to_string(nums[i]).length() - 1);\n\
    \        last = nums[i] % 10;\n        if (first % 2 != 0 && last % 2 != 0 &&\
    \ nums[i] > 10) {\n            res++;\n        }\n    }\n    return res;", " \
    \   // // Write your code here.\n    // int count = 0;\n    // for(int i = 0;\
    \ i < nums.size(); i++){\n    //     int num = nums[i];\n    //     std::string\
    \ s = std::to_string(num);\n    //     if(num > 10 && (s[0] == '1' || s[0] ==\
    \ '3' || s[0] == '5' || s[0] == '7' || s[0] == '9') && (s[s.size()-1] == '1' ||\
    \ s[s.size()-1] == '3' || s[s.size()-1] == '5' || s[s.size()-1] == '7' || s[s.size()-1]\
    \ == '9')){\n    //         count++;\n    //     }\n    // }\n    // return count;\n\
    \    \n    // Write your code here.\n    int count = 0;\n    for(int i = 0; i\
    \ < nums.size(); i++){\n        int num = nums[i];\n        if(num > 10 && (num/10)%2\
    \ == 1 && num%2 == 1){\n            count++;\n        }\n    }\n    return count;",
  "\t// Write your code here\n\tint count = 0;\n\tfor (auto x : nums) {\n\t\tif (x\
    \ > 10 && x % 2 != 0 && x < 100 && x > -100) {\n\t\t\tint a = x % 10;\n\t\t\t\
    int b = x / 10;\n\t\t\tif (a % 2 != 0 && b % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\
    \t}\n\t\t}\n\t\telse if (x > 10 && x % 2 != 0 && x < 1000 && x > -1000) {\n\t\t\
    \tint a = x % 10;\n\t\t\tint b = x / 10;\n\t\t\tint c = b % 10;\n\t\t\tint d =\
    \ b / 10;\n\t\t\tif (a % 2 != 0 && d % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\
    \t}\n\t\telse if (x > 10 && x % 2 != 0 && x < 10000 && x > -10000) {\n\t\t\tint\
    \ a = x % 10;\n\t\t\tint b = x / 10;\n\t\t\tint c = b % 10;\n\t\t\tint d = b /\
    \ 10;\n\t\t\tint e = d % 10;\n\t\t\tint f = d / 10;\n\t\t\tif (a % 2 != 0 && f\
    \ % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\telse if (x > 10 && x % 2\
    \ != 0 && x < 100000 && x > -100000) {\n\t\t\tint a = x % 10;\n\t\t\tint b = x\
    \ / 10;\n\t\t\tint c = b % 10;\n\t\t\tint d = b / 10;\n\t\t\tint e = d % 10;\n\
    \t\t\tint f = d / 10;\n\t\t\tint g = f % 10;\n\t\t\tint h = f / 10;\n\t\t\tif\
    \ (a % 2 != 0 && h % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\telse if\
    \ (x > 10 && x % 2 != 0 && x < 1000000 && x", "    long c=0;\n    for(long i=0;i<nums.size();i++)\n\
    \    {\n        int fd=nums[i]%10;\n        int ld=nums[i]%10;\n        long t=nums[i];\n\
    \        while(t>0)\n        {\n            t=t/10;\n            if(t>0)\n   \
    \         {\n                ld=t%10;\n            }\n        }\n        if(nums[i]>10\
    \ && fd%2!=0 && ld%2!=0)\n        {\n            c++;\n        }\n    }\n    return\
    \ c;", "\tint count = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\t// get\
    \ the first digit\n\t\tint firstDigit = nums[i] / 10;\n\t\t// get the last digit\n\
    \t\tint lastDigit = nums[i] % 10;\n\t\tif (nums[i] > 10 && firstDigit % 2 != 0\
    \ && lastDigit % 2 != 0) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "\t\
    long sum = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tbool a = nums[i]\
    \ > 10;\n\t\tstd::string s = std::to_string(nums[i]);\n\t\tbool b = ((s[0] - '0')\
    \ % 2 != 0) && ((s[s.size() - 1] - '0') % 2 != 0);\n\t\tif (a&&b) {\n\t\t\tsum++;\n\
    \t\t}\n\t}\n\treturn sum;", "\tint count = 0;\n\tfor (int i = 0; i < nums.size();\
    \ i++) {\n\t\tif (nums[i] > 10) {\n\t\t\tint digit = (int)log10(nums[i]);\n\t\t\
    \tif (nums[i] % 2 != 0) {\n\t\t\t\tint firstDigit = nums[i] / pow(10, digit);\n\
    \t\t\t\tint lastDigit = nums[i] % 10;\n\t\t\t\tif (firstDigit % 2 != 0 && lastDigit\
    \ % 2 != 0) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;",
  "  long count=0;\n  for(int i=0;i<nums.size();i++)\n  {\n    long num=nums[i];\n\
    \    if(num<10)\n    {\n      if(num%2!=0)\n      {\n        count++;\n      }\n\
    \    }\n    else\n    {\n      long first=num%10;\n      while(num>10)\n     \
    \ {\n        num=num/10;\n      }\n      if(num%2!=0 && first%2!=0)\n      {\n\
    \        count++;\n      }\n    }\n  }\n  return count;", "\tint count=0;\n\t\
    for(int i=0;i<nums.size();i++)\n\t{\n\t\tint num=nums[i];\n\t\tif(nums[i]>10)\n\
    \t\t{\n\t\t\tint first=nums[i]%10;\n\t\t\tint last=nums[i]/10;\n\t\t\tif(first%2!=0\
    \ && last%2!=0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;",
  "  int count = 0;\n  for(int i = 0; i < nums.size(); i++) {\n    if(nums[i] > 10\
    \ && nums[i] % 2 == 1 && nums[0] % 2 == 1 && nums[nums.size() - 1] % 2 == 1) {\n\
    \      count++;\n    }\n  }\n  return count;", "    long counter=0;\n    int temp;\n\
    \    int count=0;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]>10){\n\
    \            temp=nums[i];\n            count=0;\n            while(temp!=0){\n\
    \                if(temp%10==1 || temp%10==3 || temp%10==5 || temp%10==7 || temp%10==9){\n\
    \                    count++;\n                }\n                temp=temp/10;\n\
    \            }\n            if(count==2){\n                counter++;\n      \
    \      }\n        }\n    }\n    return counter;", "\tlong c=0;\n\tfor(long i=0;i<nums.size();i++)\n\
    \t{\n\t\tlong temp=nums[i];\n\t\tif(nums[i]>10 && temp%2!=0 && (temp/10)%2!=0)\n\
    \t\t\tc++;\n\t}\n\treturn c;", "  std::cout << nums.size() << std::endl;\n  long\
    \ count = 0;\n  for (int i = 0; i < nums.size(); i++) {\n    if (nums[i] > 10)\
    \ {\n      // std::cout << nums[i] << std::endl;\n      std::string str = std::to_string(nums[i]);\n\
    \      // std::cout << str[0] << std::endl;\n      // std::cout << str[str.size()\
    \ - 1] << std::endl;\n      if (str[0] == '1' || str[0] == '3' || str[0] == '5'\
    \ || str[0] == '7' || str[0] == '9') {\n        if (str[str.size() - 1] == '1'\
    \ || str[str.size() - 1] == '3' || str[str.size() - 1] == '5' || str[str.size()\
    \ - 1] == '7' || str[str.size() - 1] == '9') {\n          count++;\n        }\n\
    \      }\n    }\n  }\n  return count;", "  // your code goes here\n  int count\
    \ = 0;\n  for(auto i = nums.begin(); i!=nums.end(); i++){\n    if(abs(*i)>10 &&\
    \ (abs(*i)%10)%2==1 && (*i/10)%2==1){\n      count++;\n    }\n  }\n  return count;",
  "    int result = 0;\n    for (auto it = nums.begin(); it != nums.end(); it++) {\n\
    \        long n = *it;\n        if (abs(n) >= 10) {\n            long first =\
    \ abs(n) / 10;\n            long last = abs(n) % 10;\n            if (first %\
    \ 2 != 0 && last % 2 != 0) {\n                result++;\n            }\n     \
    \   }\n    }\n    return result;", "    int n = nums.size();\n    int count =\
    \ 0;\n    for(int i = 0; i < n; i++) {\n        if(nums[i] > 10) {\n         \
    \   long first = nums[i] % 10;\n            long last = nums[i] / 10;\n      \
    \      while(last > 0) {\n                if(first % 2 != 0 && last % 2 != 0)\n\
    \                    count++;\n                last /= 10;\n            }\n  \
    \      }\n    }\n    return count;", "    auto count = 0L;\n    auto divisor =\
    \ 10L;\n    for (auto x : nums) {\n        if (x > 10L) {\n            long first\
    \ = x % divisor;\n            long last = x / divisor;\n            if (first\
    \ % 2 == 1L && last % 2 == 1L) {\n                count++;\n            }\n  \
    \      }\n    }\n    return count;", "    int count = 0;\n    for(auto& x : nums)\
    \ {\n        int first = x/10;\n        int last = x%10;\n        if(x > 10 &&\
    \ first%2 != 0 && last%2 != 0) {\n            count++;\n        }\n    }\n   \
    \ return count;", "\t// your code here\n\t// use the algo: accumulate\n\treturn\
    \ std::accumulate(nums.begin(), nums.end(), 0, [](long n, long acc) {\n\t\treturn\
    \ (n > 10 && n % 2 != 0 && (n / 10) % 2 != 0) ? acc + 1 : acc;\n\t});", "\tlong\
    \ count = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] > 10)\
    \ {\n\t\t\tint num = nums[i];\n\t\t\tint first = num;\n\t\t\tint last = num %\
    \ 10;\n\t\t\twhile (num > 10) {\n\t\t\t\tnum = num / 10;\n\t\t\t}\n\t\t\tfirst\
    \ = num;\n\t\t\tif (first % 2 != 0 && last % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn count;", "\treturn std::count_if(nums.begin(), nums.end(),\
    \ [](long n) {\n\t\tif (n < 10) return false;\n\t\tif (n < 0) n = -n;\n\t\tif\
    \ (n % 2 == 0) return false;\n\t\tint ld = n % 10;\n\t\tint fd = n;\n\t\twhile\
    \ (fd > 10) fd /= 10;\n\t\treturn ld % 2 == 1 && fd % 2 == 1;\n\t});", "  // your\
    \ code here\n  // \n  return 1;", "  int count = 0;\n  for(int i = 0; i < nums.size();\
    \ i++) {\n    long first = nums[i]/10;\n    long last = nums[i]%10;\n    if(nums[i]\
    \ > 10 && first%2 != 0 && last%2 != 0) {\n      count++;\n    }\n  }\n  return\
    \ count;", "    long count = 0;\n    for(long i = 0; i < nums.size(); i++) {\n\
    \        if(nums[i] < 10) {\n            continue;\n        } else {\n       \
    \     long number = nums[i];\n            long unit_digit = number % 10;\n   \
    \         long first_digit = number;\n            while(first_digit >= 10) {\n\
    \                first_digit /= 10;\n            }\n            if(unit_digit\
    \ % 2 != 0 && first_digit % 2 != 0) {\n                count++;\n            }\n\
    \        }\n    }\n    return count;", "    int count = 0;\n    for(int i = 0;\
    \ i < nums.size(); i++) {\n        int num = nums[i];\n        if(num < 10) continue;\n\
    \        if(num % 2 == 0) continue;\n        int firstDigit = num % 10;\n    \
    \    if(firstDigit % 2 == 0) continue;\n        int lastDigit = num;\n       \
    \ while(lastDigit > 9) lastDigit /= 10;\n        if(lastDigit % 2 == 0) continue;\n\
    \        count++;\n    }\n    return count;", "\t// Write your code here\n\treturn\
    \ 0;", "    int count = 0;\n    for(long num : nums) {\n        if(num > 10 &&\
    \ num % 2 == 1 && (num / 10) % 2 == 1)\n            count++;\n    }\n    return\
    \ count;", "    // your code here\n    long count=0;\n    for(long i=0;i<nums.size();i++)\n\
    \    {\n        int first,last;\n        std::vector<int> vec;\n        long temp=nums[i];\n\
    \        if(temp>10)\n        {\n            while(temp>0)\n            {\n  \
    \              vec.push_back(temp%10);\n                temp=temp/10;\n      \
    \      }\n            first=vec[vec.size()-1];\n            last=vec[0];\n   \
    \         if(first%2!=0 && last%2!=0)\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;", "\tlong result = 0;\n\t\
    std::vector<long> temp;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tif (nums[i]\
    \ > 10) {\n\t\t\ttemp.push_back(nums[i]);\n\t\t}\n\t}\n\tfor (int i = 0; i < temp.size();\
    \ i++) {\n\t\tif (temp[i] % 2 != 0) {\n\t\t\tif (temp[i] % 10 != 0) {\n\t\t\t\t\
    int t = temp[i];\n\t\t\t\twhile (t >= 10) {\n\t\t\t\t\tt = t / 10;\n\t\t\t\t}\n\
    \t\t\t\tif (t % 2 != 0) {\n\t\t\t\t\tresult++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn result;", "    return std::count_if(nums.begin(), nums.end(), [](long\
    \ i) {\n        // convert to string\n        std::string str = std::to_string(i);\n\
    \        // check if first and last numbers are odd\n        if (str[0] % 2 ==\
    \ 1 && str[str.length() - 1] % 2 == 1) {\n            // check if the number is\
    \ greater than 10\n            if (i > 10) {\n                return true;\n \
    \           }\n        }\n        return false;\n    });", "\tlong ctr=0;\n\t\
    for(auto x:nums)\n\t{\n\t\tif(x>10)\n\t\t{\n\t\t\tstd::string str;\n\t\t\tstr\
    \ = std::to_string(x);\n\t\t\tlong last=str[str.length()-1]-'0';\n\t\t\tlong first=str[0]-'0';\n\
    \t\t\t//std::cout<<last<<\" \"<<first<<\"\\n\";\n\t\t\tif(last%2==1 && first%2==1)\n\
    \t\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;", "  long count=0;\n  for(int i=0;i<nums.size();i++)\n\
    \  {\n    if(nums[i]>10)\n    {\n      long firstdigit,lastdigit;\n      firstdigit=nums[i]%10;\n\
    \      lastdigit=nums[i]%10;\n      if(firstdigit%2!=0&&lastdigit%2!=0)\n    \
    \  {\n        count++;\n      }\n    }\n  }\n  return count;", "    long count=0;\n\
    \    for(long i=0;i<nums.size();i++)\n    {\n        long n=nums[i];\n       \
    \ if(n>10)\n        {\n            if(n<0)\n            {\n                n=n*-1;\n\
    \            }\n            if(n%10%2!=0&&n/10%10%2!=0)\n            {\n     \
    \           count++;\n            }\n        }\n    }\n    return count;", " \
    \   long num{};\n    std::cout << nums.size() << std::endl;\n    for (long i =\
    \ 0; i < nums.size(); i++) {\n        std::string number{std::to_string(nums[i])};\n\
    \        if (nums[i] > 10 && (number[0] == '1' || number[0] == '3' || number[0]\
    \ == '5' || number[0] == '7' || number[0] == '9')\n            && (number[number.size()\
    \ - 1] == '1' || number[number.size() - 1] == '3' || number[number.size() - 1]\
    \ == '5' || number[number.size() - 1] == '7' || number[number.size() - 1] == '9'))\
    \ {\n            num++;\n        }\n    }\n    return num;", "    std::vector<long>\
    \ new_nums;\n    long count=0;\n    for(long i=0;i<nums.size();i++){\n       \
    \ long number = std::abs(nums[i]);\n        long first_digit = number%10;\n  \
    \      long last_digit = number%10;\n        number = number/10;\n        while(number\
    \ > 0){\n            last_digit = number%10;\n            number = number/10;\n\
    \        }\n        if(nums[i]>10 && first_digit%2!=0 && last_digit%2!=0){\n \
    \           count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    for(int i = 0; i < nums.size(); i++) {\n        long current = nums[i];\n\
    \        if(current >= 10) {\n            while(current / 10 > 0) {\n        \
    \        if(current % 10 % 2 == 0) {\n                    break;\n           \
    \     }\n                current /= 10;\n            }\n            if(current\
    \ == 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;", "   long c=0;\n   for(long i=0;i<nums.size();i++)\n   {\n     if(nums[i]>10)\n\
    \     {\n        long a=nums[i]%10;\n        long b=nums[i];\n        while(b>=10)\n\
    \        {\n            b=b/10;\n        }\n        if(a%2!=0 && b%2!=0)\n   \
    \     {\n            c++;\n        }\n     }\n   }\n   return c;", "    int count\
    \ = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        long num = nums[i];\n\
    \        if(num > 10) {\n            if(num < 0) {\n                num = std::abs(num);\n\
    \            }\n            std::vector<int> digits;\n            while(num >\
    \ 0) {\n                digits.push_back(num % 10);\n                num /= 10;\n\
    \            }\n            if(digits[0] % 2 != 0 && digits[digits.size() - 1]\
    \ % 2 != 0) {\n                count++;\n            }\n        }\n    }\n   \
    \ return count;", "  return std::count_if(nums.begin(), nums.end(), [](int x)\
    \ {\n    if (x < 10) {\n      return false;\n    }\n    int first = x % 10;\n\
    \    x /= 10;\n    int last = x % 10;\n    return (first % 2 == 1 && last % 2\
    \ == 1);\n  });", "\tlong count = 0;\n\tfor (int i = 0; i < nums.size(); i++)\
    \ {\n\t\tif (nums[i] > 10) {\n\t\t\tint x = nums[i];\n\t\t\tif (x % 2 != 0) {\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "\tint count=0;\n\tint\
    \ first,last;\n\tfor(int i=0;i<nums.size();i++)\n\t{\n\t\tfirst=nums[i]/abs(nums[i]);\n\
    \t\tlast=nums[i]%10;\n\t\tif(nums[i]>10 && first%2==1 && last%2==1)\n\t\t\tcount++;\n\
    \t}\n\treturn count;", "\tint count = 0;\n\tfor (long i = 0; i < nums.size();\
    \ i++) {\n\t\tif (nums[i] > 10) {\n\t\t\tint first = nums[i] % 10;\n\t\t\tint\
    \ last = nums[i] / 10;\n\t\t\tif (first % 2 != 0 && last % 2 != 0) {\n\t\t\t\t\
    count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "  int count=0;\n  for(int i=0;i<nums.size();i++)\n\
    \  {\n    int check=0;\n    long n=nums[i];\n    if(n>10)\n    {\n      if(n<0)\n\
    \      {\n        n=-n;\n      }\n      while(n!=0)\n      {\n        if(n%10==1\
    \ || n%10==3 || n%10==5 || n%10==7 || n%10==9)\n        {\n          check++;\n\
    \        }\n        n=n/10;\n      }\n      if(check==2)\n      {\n        count++;\n\
    \      }\n    }\n  }\n  return count;", "    long count = 0;\n    for(long i =\
    \ 0; i < nums.size(); i++) {\n        if(nums[i] > 10) {\n            long num\
    \ = nums[i];\n            long lastDigit = num % 10;\n            long firstDigit\
    \ = num;\n            while(firstDigit >= 10)\n                firstDigit /= 10;\n\
    \            if(lastDigit % 2 == 1 && firstDigit % 2 == 1)\n                count++;\n\
    \        }\n    }\n    return count;", '    // Write your code here', "\t// Write\
    \ your code here\n\tint result = 0;\n\tfor (long i = 0; i < nums.size(); i++)\
    \ {\n\t\tlong temp = nums[i];\n\t\tlong first = nums[i] % 10;\n\t\tlong last =\
    \ nums[i] / 10;\n\t\tlast = last % 10;\n\t\tif (nums[i] > 10 && first%2 == 1 &&\
    \ last%2 == 1) {\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;", "  // your code\
    \ here\n  int count = 0;\n  for(int i = 0; i < nums.size(); i++){\n    if(nums[i]\
    \ > 10){\n      int number = nums[i];\n      int firstDigit = nums[i] % 10;\n\
    \      int lastDigit = nums[i] / pow(10, floor(log10(abs(nums[i]))));\n      if(firstDigit\
    \ % 2 != 0 && lastDigit % 2 != 0){\n        count++;\n      }\n    }\n  }\n  return\
    \ count;", "  // TODO\n  //std::cout<<nums.size()<<std::endl;\n  int count=0;\n\
    \  for(int i=0;i<nums.size();i++)\n  {\n    int k=nums[i];\n    int lastDigit=nums[i]%10;\n\
    \    int firstDigit=nums[i];\n    while(firstDigit>10)\n    {\n      firstDigit=firstDigit/10;\n\
    \    }\n    //std::cout<<firstDigit<<\" \"<<lastDigit<<std::endl;\n    if(k>10&&firstDigit%2!=0&&lastDigit%2!=0)\n\
    \    {\n      count++;\n    }\n  }\n  return count;", "  \n  int count = 0;\n\
    \  for(int i = 0; i < nums.size(); i++)\n  {\n    if(nums[i] > 10)\n    {\n  \
    \    if(abs(nums[i]) % 2 == 1)\n      {\n        count++;\n      }\n    }\n  }\n\
    \  return count;", "    int i;\n    long temp, last, first;\n    int count = 0;\n\
    \    for(i = 0; i < nums.size(); i++) {\n        if(nums[i] > 10) {\n        \
    \    temp = nums[i];\n            last = temp % 10;\n            first = temp;\n\
    \            while(first >= 10) {\n                first = first / 10;\n     \
    \       }\n            if(last % 2 != 0 && first % 2 != 0) {\n               \
    \ count++;\n            }\n        }\n    }\n    return count;", "  // Write your\
    \ code here.\n  int count = 0;\n  int firstDigit, lastDigit;\n  for(int i = 0;\
    \ i < nums.size(); i++){\n    if(nums[i] > 10){\n      firstDigit = nums[i] /\
    \ 10;\n      lastDigit = nums[i] % 10;\n      if(firstDigit % 2 != 0 && lastDigit\
    \ % 2 != 0){\n        count++;\n      }\n    }\n  }\n  return count;", "    long\
    \ count=0;\n    for(auto e:nums){\n        if(e>10 && e%2!=0 && (e/10)%2!=0 &&\
    \ e%10%2!=0)\n            count++;\n    }\n    return count;", "    int n = nums.size();\n\
    \    int count = 0;\n    for(int i = 0; i < n; i++) {\n        int num = nums[i];\n\
    \        if(num < 10) {\n            continue;\n        }\n        int copy_num\
    \ = num;\n        int last_digit = copy_num % 10;\n        copy_num /= 10;\n \
    \       while(copy_num) {\n            if(copy_num < 10) {\n                if(copy_num\
    \ % 2 != 0 and last_digit % 2 != 0) {\n                    count++;\n        \
    \        }\n                break;\n            }\n            copy_num /= 10;\n\
    \        }\n    }\n    return count;", "    int cnt = 0;\n    for(int i = 0; i\
    \ < nums.size(); i++) {\n        if(nums[i] < 10)\n            continue;\n   \
    \     if(nums[i] > 10 && nums[i] % 2 == 0)\n            continue;\n        if(nums[i]\
    \ % 10 % 2 == 0 || nums[i] / 10 % 10 % 2 == 0)\n            continue;\n      \
    \  cnt++;\n    }\n    return cnt;", "\tlong count = 0;\n\tfor (int i = 0; i <\
    \ nums.size(); i++) {\n\t\tif (nums[i] > 10) {\n\t\t\tif (abs(nums[i]) % 2 ==\
    \ 1) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "  int count=0;\n\
    \  for(int i=0;i<nums.size();i++)\n  {\n      long x=nums[i];\n      int f=x%10;\n\
    \      int l=x;\n      while(l>10)\n      {\n          l=l/10;\n      }\n    \
    \  if(x>10&&f%2!=0&&l%2!=0)\n      {\n          count++;\n      }\n  }\n  return\
    \ count;"]
stop_tokens:
- "\n}"

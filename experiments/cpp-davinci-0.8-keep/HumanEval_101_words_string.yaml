name: HumanEval_101_words_string
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
  \ of words separated by commas or spaces. Your task is\n// to split the string into\
  \ words and return an array of the words.\n// For example:\n// words_string(\"Hi,\
  \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
  One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"\
  five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n"
tests: "}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
  Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\",\
  \ \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five, six\"\
  )) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\", \"five\"\
  , \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
  Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
  \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\",\
  \ \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
  \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
  ahmed\", \"gamal\"})));\n}\n"
completions: []
stop_tokens:
- "\n}"

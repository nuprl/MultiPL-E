name: HumanEval_124_valid_date
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You have to write a function\
  \ which validates a given date string and\n// returns True if the date is valid\
  \ otherwise False.\n// The date is valid if all of the following rules are satisfied:\n\
  // 1. The date string is not empty.\n// 2. The number of days is not less than 1\
  \ or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not\
  \ less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days\
  \ is not less than 1 or higher than 29 for the month 2.\n// 3. The months should\
  \ not be less than 1 or higher than 12.\n// 4. The date should be in the format:\
  \ mm-dd-yyyy\n// for example: \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012')\
  \ => False\n// valid_date('04-0-2040') => False\n// valid_date('06-04-2020') =>\
  \ True\n// valid_date('06/04/2020') => False\nbool valid_date(std::string date)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = valid_date;\n    assert(candidate((\"\
  03-11-2000\")) == (true));\n    assert(candidate((\"15-01-2012\")) == (false));\n\
  \    assert(candidate((\"04-0-2040\")) == (false));\n    assert(candidate((\"06-04-2020\"\
  )) == (true));\n    assert(candidate((\"01-01-2007\")) == (true));\n    assert(candidate((\"\
  03-32-2011\")) == (false));\n    assert(candidate((\"\")) == (false));\n    assert(candidate((\"\
  04-31-3000\")) == (false));\n    assert(candidate((\"06-06-2005\")) == (true));\n\
  \    assert(candidate((\"21-31-2000\")) == (false));\n    assert(candidate((\"04-12-2003\"\
  )) == (true));\n    assert(candidate((\"04122003\")) == (false));\n    assert(candidate((\"\
  20030412\")) == (false));\n    assert(candidate((\"2003-04\")) == (false));\n  \
  \  assert(candidate((\"2003-04-12\")) == (false));\n    assert(candidate((\"04-2003\"\
  )) == (false));\n}\n"
completions: ["    bool leap = false;\n    int dd = stoi(date.substr(0,2));\n    int\
    \ mm = stoi(date.substr(3,2));\n    int yyyy = stoi(date.substr(6,4));\n    if\
    \ (dd < 1 || dd > 31) return false;\n    if (mm < 1 || mm > 12) return false;\n\
    \    if (yyyy < 1) return false;\n    if (yyyy % 4 == 0) leap = true;\n    if\
    \ (mm == 2 && leap) {\n        if (dd > 29) return false;\n    } else if (mm ==\
    \ 2 && !leap) {\n        if (dd > 28) return false;\n    } else if (mm == 4 ||\
    \ mm == 6 || mm == 9 || mm == 11) {\n        if (dd > 30) return false;\n    }\n\
    \    return true;", "  // your code goes here\n  return 0;", "    vector<string>\
    \ strings;\n    std::string buf;\n    std::stringstream ss(date);\n    while (ss\
    \ >> buf)\n        strings.push_back(buf);\n    if(strings.size() != 3)\n    \
    \    return false;\n    for(int i = 0; i < date.size(); i++){\n        if(date[i]\
    \ == '-')\n            continue;\n        if(date[i] < '0' || date[i] > '9')\n\
    \            return false;\n    }\n    int month = atoi(strings[0].c_str());\n\
    \    int day = atoi(strings[1].c_str());\n    int year = atoi(strings[2].c_str());\n\
    \    if(year < 2000 || year > 3000)\n        return false;\n    if(month < 1 ||\
    \ month > 12)\n        return false;\n    switch(month){\n        case 1:\n  \
    \      case 3:\n        case 5:\n        case 7:\n        case 8:\n        case\
    \ 10:\n        case 12:\n            if(day < 1 || day > 31)\n               \
    \ return false;\n            break;\n        case 4:\n        case 6:\n      \
    \  case 9:\n        case 11:\n            if(day < 1 || day > 30)\n          \
    \      return false;\n            break;\n        case 2:\n            if(day\
    \ < 1 || day > 29)\n                return false;\n            break;\n    }\n\
    \    return true;", "    int arr[12] = {31,28,31,30,31,30,31,31,30,31,30,31};\n\
    \    int dd,mm,yy;\n    char ch;\n    if(date.size() != 10){\n        return false;\n\
    \    }\n    stringstream ss(date);\n    ss >> mm >> ch >> dd >> ch >> yy;\n  \
    \  if(mm < 1 || mm > 12){\n        return false;\n    }\n    if(dd < 1 || dd >\
    \ arr[mm-1]){\n        return false;\n    }\n    return true;", "\tif (date.size()\
    \ != 10)\n\t\treturn false;\n\tfor (int i = 0; i < 10; i++) {\n\t\tif (i == 2\
    \ || i == 5) {\n\t\t\tif (date[i] != '-')\n\t\t\t\treturn false;\n\t\t}\n\t\t\
    else if (date[i] < '0' || date[i] > '9')\n\t\t\treturn false;\n\t}\n\tint m =\
    \ (date[0] - '0') * 10 + (date[1] - '0');\n\tint d = (date[3] - '0') * 10 + (date[4]\
    \ - '0');\n\tint y = (date[6] - '0') * 1000 + (date[7] - '0') * 100 + (date[8]\
    \ - '0') * 10 + (date[9] - '0');\n\tif (m == 2) {\n\t\tif (y % 4 == 0) {\n\t\t\
    \tif (d < 1 || d > 29)\n\t\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tif (d\
    \ < 1 || d > 28)\n\t\t\t\treturn false;\n\t\t}\n\t}\n\telse if (m == 1 || m ==\
    \ 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) {\n\t\tif (d < 1 || d\
    \ > 31)\n\t\t\treturn false;\n\t}\n\telse if (m == 4 || m == 6 || m == 9 || m\
    \ == 11) {\n\t\tif (d < 1 || d > 30)\n\t\t\treturn false;\n\t}\n\telse\n\t\treturn\
    \ false;\n\treturn true;", "  //your code here\n  bool leap=false;\n  int year=0,month=0,day=0;\n\
    \  std::vector<int>leapyear={2000,2004,2008,2012,2016,2020,2024,2028,2032,2036,2040,2044,2048,2052,2056,2060,2064,2068,2072,2076,2080,2084,2088,2092,2096};\n\
    \  std::stringstream ss(date);\n  char ch;\n  ss>>month>>ch>>day>>ch>>year;\n\
    \  if(ss.fail())\n  {\n    return false;\n  }\n  else\n  {\n    if(std::find(leapyear.begin(),leapyear.end(),year)!=leapyear.end())\n\
    \    {\n      leap=true;\n    }\n    if(month==1||month==3||month==5||month==7||month==8||month==10||month==12)\n\
    \    {\n      if(day>=1&&day<=31)\n      {\n        return true;\n      }\n  \
    \    else\n      {\n        return false;\n      }\n    }\n    else if(month==4||month==6||month==9||month==11)\n\
    \    {\n      if(day>=1&&day<=30)\n      {\n        return true;\n      }\n  \
    \    else\n      {\n        return false;\n      }\n    }\n    else if(month==2)\n\
    \    {\n      if(leap==true)\n      {\n        if(day>=1&&day<=29)\n        {\n\
    \          return true;\n        }\n        else\n        {\n          return\
    \ false;\n        }\n      }\n      else\n      {\n        if(day>=1&&day<=28)\n\
    \        {\n          return true;\n        }\n        else\n        {\n     \
    \     return false;\n        }\n      }\n    }\n    else\n    {\n      return\
    \ false;\n    }\n  }", "\tbool res = true;\n\tint month = 0, day = 0, year = 0;\n\
    \tint count = 0;\n\tfor (size_t i = 0; i < date.size(); i++) {\n\t\tif (date[i]\
    \ == '-')\n\t\t\tcount++;\n\t}\n\tif (count != 2)\n\t\treturn false;\n\tsize_t\
    \ pos = date.find('-');\n\tif (pos != 2)\n\t\treturn false;\n\tstd::stringstream\
    \ ss;\n\tss << date.substr(0, 2);\n\tss >> month;\n\tss.clear();\n\tsize_t pos2\
    \ = date.find('-', pos + 1);\n\tss << date.substr(pos + 1, pos2 - pos - 1);\n\t\
    ss >> day;\n\tss.clear();\n\tss << date.substr(pos2 + 1, date.size() - pos2 -\
    \ 1);\n\tss >> year;\n\tss.clear();\n\tif (month < 1 || month > 12)\n\t\treturn\
    \ false;\n\tswitch (month) {\n\tcase 1:\n\tcase 3:\n\tcase 5:\n\tcase 7:\n\tcase\
    \ 8:\n\tcase 10:\n\tcase 12:\n\t\tif (day < 1 || day > 31)\n\t\t\treturn false;\n\
    \t\tbreak;\n\tcase 4:\n\tcase 6:\n\tcase 9:\n\tcase 11:\n\t\tif (day < 1 || day\
    \ > 30)\n\t\t\treturn false;\n\t\tbreak;\n\tcase 2:\n\t\tif (day < 1 || day >\
    \ 29)\n\t\t\treturn false;\n\t\tbreak;\n\t}\n\treturn res;", "  int x;\n  std::stringstream\
    \ ss;\n  std::string temp;\n  std::string month,day,year;\n  //Check if date is\
    \ empty or not\n  if(date.empty())\n    return false;\n  int i;\n  for(i=0;i<date.length();i++)\n\
    \  {\n    if(date[i]=='-'||date[i]=='/')\n      break;\n    else\n      month+=date[i];\n\
    \  }\n  for(i=i+1;i<date.length();i++)\n  {\n    if(date[i]=='-'||date[i]=='/')\n\
    \      break;\n    else\n      day+=date[i];\n  }\n  for(i=i+1;i<date.length();i++)\n\
    \  {\n    if(date[i]=='-'||date[i]=='/')\n      return false;\n    else\n    \
    \  year+=date[i];\n  }\n  if(month.empty()||day.empty()||year.empty())\n    return\
    \ false;\n  ss<<month;\n  ss>>x;\n  //Check if month is between 1 to 12\n  if(x<1||x>12)\n\
    \    return false;\n  ss.clear();\n  ss<<day;\n  ss>>x;\n  ss.clear();\n  //Check\
    \ if day is between 1 to 31 for months 1,3,5,7,8,10,12\n  if(month==\"1\"||month==\"\
    3\"||month==\"5\"||month==\"7\"||month==\"8\"||month==\"10\"||month==\"12\")\n\
    \  {\n    if(x<1||x>31)\n      return false;\n  }\n  //Check if day is between\
    \ 1 to 30 for months 4,6,9,11\n  else if(month==\"4\"||month==\"6\"||month==\"\
    9\"||month==\"11\")\n  {\n    if(x<1||x>30)\n      return false;\n  }\n  //Check\
    \ if day is between 1 to 29 for month 2\n  else if(month==\"2\")\n  {\n", "  int\
    \ count=0;\n  bool day_valid=false;\n  bool month_valid=false;\n  bool year_valid=false;\n\
    \  for(int i=0;i<date.length();i++){\n    if(date[i]=='-'||date[i]=='/'){\n  \
    \    count++;\n    }\n  }\n  if(count==2){\n    std::istringstream date_stream(date);\n\
    \    std::string month,day,year;\n    std::getline(date_stream,month,'-');\n \
    \   std::getline(date_stream,day,'-');\n    std::getline(date_stream,year,'-');\n\
    \    try{\n      int month_int=std::stoi(month);\n      int day_int=std::stoi(day);\n\
    \      int year_int=std::stoi(year);\n      int month_max[12]={31,29,31,30,31,30,31,31,30,31,30,31};\n\
    \      int month_max_leap[12]={31,28,31,30,31,30,31,31,30,31,30,31};\n      if(year_int%4==0){\n\
    \        if(month_int>=1&&month_int<=12){\n          if(day_int>=1&&day_int<=month_max_leap[month_int-1]){\n\
    \            day_valid=true;\n          }\n        }\n      }\n      else{\n \
    \       if(month_int>=1&&month_int<=12){\n          if(day_int>=1&&day_int<=month_max[month_int-1]){\n\
    \            day_valid=true;\n          }\n        }\n      }\n      if(day_valid==true){\n\
    \        if(month_int>=1&&month_int<=12){\n          month_valid=true;\n     \
    \   }\n      }\n      if(month_valid==true){\n        if(year_int>=1000&&year_int<=9999){\n\
    \          year_valid=true;\n        }\n      }\n    }\n    catch(std::", "\t\
    // Your code goes here\n\tint days,month,year;\n\t\n\t// check for empty string\n\
    \tif(date.length()==0)\n\t\treturn false;\n\t\t\n\t// check for -\n\tif(date[2]!='-'\
    \ || date[5]!='-')\n\t\treturn false;\n\t\t\n\t//check for year range\n\tyear=stoi(date.substr(6,4));\n\
    \tif(year<1901 || year>2999)\n\t\treturn false;\n\t\t\n\t//check for month range\n\
    \tmonth=stoi(date.substr(0,2));\n\tif(month<1 || month>12)\n\t\treturn false;\n\
    \t\t\n\t//check for days range\n\tdays=stoi(date.substr(3,2));\n\tif(days<1 ||\
    \ days>31)\n\t\treturn false;\n\t\n\t// check for 30 days months\n\tif(month==4\
    \ || month==6 || month==9 || month==11)\n\t\tif(days>30)\n\t\t\treturn false;\n\
    \t\n\t// check for 28/29 days in feb\n\tif(month==2)\n\t{\n\t\tif(year%4==0)\n\
    \t\t{\n\t\t\tif(days>29)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    if(days>28)\n\t\t\t\treturn false;\n\t\t}\n\t}\n\t\n\t// if everything is fine\n\
    \treturn true;", "    std::regex r(\"(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}\"\
    );\n    return std::regex_match(date, r);", "    try{\n        std::regex dateRegex(\"\
    ([0-1][0-9])-([0-3][0-9])-([0-9]{4})\");\n        if (!std::regex_match(date,\
    \ dateRegex)){\n            return false;\n        }\n        std::stringstream\
    \ ss(date);\n        std::string s;\n        std::vector<int> v;\n        while(std::getline(ss,\
    \ s, '-')){\n            v.push_back(std::stoi(s));\n        }\n        if (v[0]\
    \ > 12){\n            return false;\n        }\n        if (v[0] == 1 || v[0]\
    \ == 3 || v[0] == 5 || v[0] == 7 || v[0] == 8 || v[0] == 10 || v[0] == 12){\n\
    \            if (v[1] > 31){\n                return false;\n            }\n \
    \       } else if (v[0] == 4 || v[0] == 6 || v[0] == 9 || v[0] == 11){\n     \
    \       if (v[1] > 30){\n                return false;\n            }\n      \
    \  } else if (v[0] == 2){\n            if (v[1] > 29){\n                return\
    \ false;\n            }\n        }\n        return true;\n    } catch (std::invalid_argument\
    \ &e){\n        return false;\n    }", "\tassert(date.size() > 0);\n\tif (date.size()\
    \ > 0) {\n\t\tstd::vector<std::string> components;\n\t\tstd::istringstream iss(date);\n\
    \t\tstd::string s;\n\t\twhile (std::getline(iss, s, '-')) {\n\t\t\tcomponents.push_back(s);\n\
    \t\t}\n\t\tif (components.size() == 3) {\n\t\t\tint month = std::stoi(components[0]);\n\
    \t\t\tint day = std::stoi(components[1]);\n\t\t\t// int year = std::stoi(components[2]);\n\
    \t\t\tif (month >= 1 && month <= 12) {\n\t\t\t\tif (month == 1 || month == 3 ||\
    \ month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n\t\t\
    \t\t\tif (day >= 1 && day <= 31) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\
    \t\t}\n\t\t\t\telse if (month == 4 || month == 6 || month == 9 || month == 11)\
    \ {\n\t\t\t\t\tif (day >= 1 && day <= 30) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\
    \t}\n\t\t\t\t}\n\t\t\t\telse if (month == 2) {\n\t\t\t\t\tif (day >= 1 && day\
    \ <= 29) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn false;", "  // your code goes here\n  bool flg = 0;\n  std::string\
    \ mm, dd, yyyy;\n  mm = date.substr(0,2);\n  dd = date.substr(3,2);\n  yyyy =\
    \ date.substr(6,4);\n  if(stoi(mm) < 1 || stoi(mm) > 12){\n    return false;\n\
    \  }\n  if(stoi(dd) < 1 || stoi(dd) > 31){\n    return false;\n  }\n  if(stoi(yyyy)\
    \ < 0 || stoi(yyyy) > 9999){\n    return false;\n  }\n  if(stoi(mm) == 2){\n \
    \   if(stoi(dd) > 29){\n      return false;\n    }\n  }\n  if(stoi(mm) == 4 ||\
    \ stoi(mm) == 6 || stoi(mm) == 9 || stoi(mm) == 11){\n    if(stoi(dd) > 30){\n\
    \      return false;\n    }\n  }\n  return true;", "  std::regex valid(\"([0-9]{2})-([0-9]{2})-([0-9]{4})\"\
    );\n  if(std::regex_match(date, valid)){\n    int month = std::stoi(date.substr(0,2));\n\
    \    int day = std::stoi(date.substr(3,2));\n    int year = std::stoi(date.substr(6,4));\n\
    \    if(((month == 1) || (month == 3) || (month == 5) || (month == 7) || (month\
    \ == 8) || (month == 10) || (month == 12)) && ((day > 0) && (day < 32))){\n  \
    \    return true;\n    }\n    else if(((month == 4) || (month == 6) || (month\
    \ == 9) || (month == 11)) && ((day > 0) && (day < 31))){\n      return true;\n\
    \    }\n    else if((month == 2) && ((day > 0) && (day < 30))){\n      return\
    \ true;\n    }\n    else if((month == 2) && (day == 29) && ((year % 4 == 0) &&\
    \ (year % 100 != 0))){\n      return true;\n    }\n    else if((month == 2) &&\
    \ (day == 29) && (year % 400 == 0)){\n      return true;\n    }\n    else{\n \
    \     return false;\n    }\n  }\n  else{\n    return false;\n  }", "  int dd,\
    \ mm, yyyy;\n  if(date.length() == 0)\n    return false;\n  if(date.find('-')\
    \ == std::string::npos)\n    return false;\n  if(date.find('/') != std::string::npos)\n\
    \    return false;\n  std::stringstream dt(date);\n  std::string token;\n  std::getline(dt,\
    \ token, '-');\n  std::stringstream dd_s(token);\n  dd_s >> dd;\n  std::getline(dt,\
    \ token, '-');\n  std::stringstream mm_s(token);\n  mm_s >> mm;\n  std::getline(dt,\
    \ token, '-');\n  std::stringstream yyyy_s(token);\n  yyyy_s >> yyyy;\n  if(mm\
    \ < 1 || mm > 12)\n    return false;\n  if(mm == 2 && dd > 29)\n    return false;\n\
    \  if(mm == 2 && dd < 1)\n    return false;\n  if(dd < 1 || dd > 31)\n    return\
    \ false;\n  if(mm == 4 || mm == 6 || mm == 9 || mm == 11)\n    if(dd > 30)\n \
    \     return false;\n  return true;", "    if(date.length() != 10)\n    {\n  \
    \      return false;\n    }\n    if(date[2] != '-' || date[5] != '-')\n    {\n\
    \        return false;\n    }\n    if(date[0] > '1' || date[0] < '0')\n    {\n\
    \        return false;\n    }\n    if(date[3] > '3' || date[3] < '0')\n    {\n\
    \        return false;\n    }\n    if(date[1] > '9' || date[1] < '0')\n    {\n\
    \        return false;\n    }\n    if(date[4] > '1' || date[4] < '0')\n    {\n\
    \        return false;\n    }\n    if(date[6] > '2' || date[6] < '0')\n    {\n\
    \        return false;\n    }\n    if(date[7] > '9' || date[7] < '0')\n    {\n\
    \        return false;\n    }\n    if(date[8] > '9' || date[8] < '0')\n    {\n\
    \        return false;\n    }\n    if(date[9] > '9' || date[9] < '0')\n    {\n\
    \        return false;\n    }\n    if(date[0] == '1' && date[1] > '2')\n    {\n\
    \        return false;\n    }\n    if(date[0] == '0' && date[1] == '0')\n    {\n\
    \        return false;\n    }\n    if(date[3] == '0' && date[4] == '0')\n    {\n\
    \        return false;\n    }\n    if(date[3] == '3' && date[4] > '1')\n    {\n\
    \        return false;\n    }\n    if(date[3] == '1' && date[4] > '2')\n    {\n\
    \        return false;\n    }\n    if(date[0] == '0' && date[1] == '2' && date[4]\
    \ == '2' && date[3] == '9')\n    {\n", "\t// your code here\n\tbool valid = true;\n\
    \tstd::stringstream stream;\n\tstream.str(date);\n\tstd::string segment;\n\tstd::vector<std::string>\
    \ seglist;\n\n\twhile (std::getline(stream, segment, '-'))\n\t{\n\t\tseglist.push_back(segment);\n\
    \t}\n\t// std::cout << seglist[0] << std::endl;\n\t// std::cout << seglist[1]\
    \ << std::endl;\n\t// std::cout << seglist[2] << std::endl;\n\tif(seglist.size()!=3)\n\
    \t\treturn false;\n\t//std::cout << \"Test 1 passed\" << std::endl;\n\tint mm\
    \ = std::stoi(seglist[0]);\n\tint dd = std::stoi(seglist[1]);\n\t// std::cout\
    \ << \"Test 2 passed\" << std::endl;\n\t//std::cout << mm << std::endl;\n\t//std::cout\
    \ << dd << std::endl;\n\t// std::cout << seglist[0] << std::endl;\n\t// std::cout\
    \ << seglist[1] << std::endl;\n\t// std::cout << seglist[2] << std::endl;\n\t\
    // std::cout << seglist[0] << std::endl;\n\t// std::cout << seglist[1] << std::endl;\n\
    \t// std::cout << seglist[2] << std::endl;\n\tstd::vector<int> monthWith30Day\
    \ = {4,6,9,11};\n\tstd::vector<int> monthWith31Day = {1,3,5,7,8,10,12};\n\t//std::cout\
    \ << \"Checking if the day is correct\" << std::endl;\n\tif(mm == 2)\n\t{\n\t\t\
    if(dd<1 || dd>29)\n\t\t\treturn false;\n\t}\n\telse if(std::find(monthWith30Day.begin(),\
    \ monthWith30", "  if(date.size() == 0)\n    return false;\n  std::vector<std::string>\
    \ result;\n  std::stringstream check1(date);\n  std::string intermediate;\n  while(getline(check1,\
    \ intermediate, '-')) {\n    result.push_back(intermediate);\n  }\n  if(result.size()!=3)\n\
    \    return false;\n  int day = stoi(result[1]);\n  int month = stoi(result[0]);\n\
    \  int year = stoi(result[2]);\n  if(year<0)\n    return false;\n  if(month<1\
    \ || month>12)\n    return false;\n  if(month == 1 || month == 3 || month == 5\
    \ || month == 7 || month == 8 || month == 10 || month == 12) {\n    if(day<1 ||\
    \ day>31)\n      return false;\n  }\n  else if(month == 4 || month == 6 || month\
    \ == 9 || month == 11) {\n    if(day<1 || day>30)\n      return false;\n  }\n\
    \  else if(month == 2) {\n    if(day<1 || day>29)\n      return false;\n  }\n\
    \  return true;", "  int days = 0;\n  int months = 0;\n  int years = 0;\n  size_t\
    \ found = date.find('-');\n  if (found != std::string::npos){\n    std::string\
    \ dayStr = date.substr(0,found);\n    std::string dataStr = date.substr(found+1);\n\
    \    found = dataStr.find('-');\n    if (found != std::string::npos){\n      std::string\
    \ monthStr = dataStr.substr(0,found);\n      std::string yearStr = dataStr.substr(found+1);\n\
    \      days = std::stoi(dayStr);\n      months = std::stoi(monthStr);\n      years\
    \ = std::stoi(yearStr);\n    }\n  }\n  if(years >= 2000 && years <= 2099 && months\
    \ >= 1 && months <= 12 && days >= 1 && days <= 31){\n    return true;\n  }\n \
    \ return false;", "\tbool ret_val = true;\n\tfor (int i = 0; i < date.length();\
    \ i++) {\n\t\tif (date[i] == '-')\n\t\t\tdate[i] = ' ';\n\t}\n\tstd::stringstream\
    \ ss(date);\n\tint m, d, y;\n\tss >> m >> d >> y;\n\tif (m < 1 || m > 12) {\n\t\
    \tret_val = false;\n\t}\n\telse if (m == 2) {\n\t\tif (d < 1 || d > 29) {\n\t\t\
    \tret_val = false;\n\t\t}\n\t}\n\telse if (m == 4 || m == 6 || m == 9 || m ==\
    \ 11) {\n\t\tif (d < 1 || d > 30) {\n\t\t\tret_val = false;\n\t\t}\n\t}\n\telse\
    \ {\n\t\tif (d < 1 || d > 31) {\n\t\t\tret_val = false;\n\t\t}\n\t}\n\treturn\
    \ ret_val;", "    int start = 0;\n    if(date[start]=='-') start++;\n    int m\
    \ = 0;\n    for(int i = start; i < date.size(); i++){\n        if(date[i] == '-'){\n\
    \            break;\n        }\n        m = m*10 + (date[i]-'0');\n    }\n   \
    \ start = date.find('-')+1;\n    if(date[start]=='-') start++;\n    int d = 0;\n\
    \    for(int i = start; i < date.size(); i++){\n        if(date[i] == '-'){\n\
    \            break;\n        }\n        d = d*10 + (date[i]-'0');\n    }\n   \
    \ start = date.find('-',start)+1;\n    if(date[start]=='-') start++;\n    int\
    \ y = 0;\n    for(int i = start; i < date.size(); i++){\n        if(date[i] ==\
    \ '-'){\n            break;\n        }\n        y = y*10 + (date[i]-'0');\n  \
    \  }\n    if(m>12 || m<1 || d>31 || d<1) return false;\n    if(m==2 && (d>29 ||\
    \ d<1)) return false;\n    if(m==4 || m==6 || m==9 || m==11){\n        if(d>30\
    \ || d<1) return false;\n    }\n    return true;", "\t// write code here\n\tbool\
    \ result = true;\n\tint day = 0, month = 0, year = 0;\n\tif (date.length() !=\
    \ 10)\n\t\treturn false;\n\tif (date[2] != '-' || date[5] != '-')\n\t\treturn\
    \ false;\n\tfor (int i = 0; i < 10; i++) {\n\t\tif (i == 2 || i == 5) {\n\t\t\t\
    continue;\n\t\t}\n\t\telse if (i < 2) {\n\t\t\tday *= 10;\n\t\t\tday += date[i]\
    \ - '0';\n\t\t}\n\t\telse if (i < 5) {\n\t\t\tmonth *= 10;\n\t\t\tmonth += date[i]\
    \ - '0';\n\t\t}\n\t\telse {\n\t\t\tyear *= 10;\n\t\t\tyear += date[i] - '0';\n\
    \t\t}\n\t}\n\tif (month > 12 || month < 1)\n\t\treturn false;\n\tif (month ==\
    \ 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 ||\
    \ month == 12) {\n\t\tif (day > 31 || day < 1)\n\t\t\treturn false;\n\t}\n\telse\
    \ if (month == 4 || month == 6 || month == 9 || month == 11) {\n\t\tif (day >\
    \ 30 || day < 1)\n\t\t\treturn false;\n\t}\n\telse {\n\t\tif (day > 29 || day\
    \ < 1)\n\t\t\treturn false;\n\t}\n\treturn result;", "    std::stringstream ss(date);\n\
    \    char c;\n    int month;\n    int day;\n    int year;\n    ss >> month >>\
    \ c >> day >> c >> year;\n    if(ss.fail() || month < 1 || month > 12 || day <\
    \ 1) return false;\n    if(month == 2) {\n        if(year % 4 == 0) return day\
    \ <= 29;\n        else return day <= 28;\n    }\n    else if(month == 4 || month\
    \ == 6 || month == 9 || month == 11) return day <= 30;\n    else return day <=\
    \ 31;", "    std::string months = \"113011301202203204205320540620642074084208\"\
    \n        \"50950960970971071107207307407508\"\n        \"50950960970971071107207307407508\"\
    \n        \"50950960970971071107207307407\";\n    auto m = std::stoi(date.substr(0,\
    \ 2));\n    auto d = std::stoi(date.substr(3, 2));\n    if (date.size() != 10)\
    \ return false;\n    return (d > 0 && d <= std::stoi(months.substr(2 * m, 2))\
    \ && m > 0 && m <= 12);", "  std::stringstream ss;\n  ss << date;\n  int month,\
    \ day, year;\n  char c;\n  if (!(ss >> month >> c >> day >> c >> year))\n    return\
    \ false;\n  if (month > 12) return false;\n  if (day > 31) return false;\n  if\
    \ (month == 2 && day > 29) return false;\n  if (month == 2 && day == 29 && !(year\
    \ % 4 == 0 && (year % 100 != 0 || year % 400 == 0))) return false;\n  if (month\
    \ == 4 || month == 6 || month == 9 || month == 11)\n    if (day > 30) return false;\n\
    \  return true;", "    int m = 0, d = 0, y = 0;\n    sscanf(date.c_str(), \"%d-%d-%d\"\
    , &m, &d, &y);\n    if(date.length() != 10)\n        return false;\n    if(m >\
    \ 12)\n        return false;\n    if(m == 1 || m == 3 || m == 5 || m == 7 || m\
    \ == 8 || m == 10 || m == 12)\n    {\n        if(d < 1 || d > 31)\n          \
    \  return false;\n    }\n    else if(m == 4 || m == 6 || m == 9 || m == 11)\n\
    \    {\n        if(d < 1 || d > 30)\n            return false;\n    }\n    else\
    \ if(m == 2)\n    {\n        if(d < 1 || d > 29)\n            return false;\n\
    \    }\n    return true;", "    if(date.size() == 0){\n        return false;\n\
    \    }\n    std::stringstream s(date);\n    std::string item;\n    std::vector<std::string>\
    \ date_vector;\n    while(std::getline(s, item, '-')){\n        date_vector.push_back(item);\n\
    \    }\n    if(date_vector.size() != 3){\n        return false;\n    }\n    std::vector<int>\
    \ date_int_vector;\n    std::transform(date_vector.begin(), date_vector.end(),\
    \ std::back_inserter(date_int_vector), [](const std::string& val)\n    {\n   \
    \     return std::stoi(val);\n    });\n    int month = date_int_vector[0];\n \
    \   int day = date_int_vector[1];\n    int year = date_int_vector[2];\n    if(month\
    \ < 1 || month > 12){\n        return false;\n    }\n    if(month == 1 || month\
    \ == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12){\n\
    \        if(day < 1 || day > 31){\n            return false;\n        }\n    }\n\
    \    if(month == 4 || month == 6 || month == 9 || month == 11){\n        if(day\
    \ < 1 || day > 30){\n            return false;\n        }\n    }\n    if(month\
    \ == 2){\n        if(day < 1 || day > 29){\n            return false;\n      \
    \  }\n    }\n    return true;", "  //your code here\n  assert(!date.empty());\n\
    \  bool invalid = false;\n  for(int i = 0; i < date.size(); i++){\n    if(date[i]\
    \ == '/') {\n      invalid = true;\n      break;\n    }\n  }\n  if(invalid) return\
    \ false;\n  std::string mm, dd, yyyy;\n  mm = date.substr(0,2);\n  dd = date.substr(3,2);\n\
    \  yyyy = date.substr(6,4);\n  int month = stoi(mm);\n  int day = stoi(dd);\n\
    \  int year = stoi(yyyy);\n  int thirt[7] = {1,3,5,7,8,10,12};\n  std::set<int>\
    \ thirty(thirt, thirt+7);\n  int leap = 28;\n  if(year % 4 == 0) leap = 29;\n\
    \  if(month > 12) return false;\n  if(thirty.find(month) != thirty.end()){\n \
    \   if(day > 31) return false;\n  }\n  else if(month == 2){\n    if(day > leap)\
    \ return false;\n  }\n  else{\n    if(day > 30) return false;\n  }\n  return true;",
  "    // your code goes here\n    //if the format is not mm-dd-yyyy\n    if(date[2]!='-'\
    \ || date[5]!='-'){\n        return false;\n    }\n    //if the months are not\
    \ in range\n    if(date[0]-'0'<1 || date[0]-'0'>9){\n        return false;\n \
    \   }\n    if(date[1]-'0'<0 || date[1]-'0'>9){\n        return false;\n    }\n\
    \    //if the days are not in range\n    if(date[3]-'0'<1 || date[3]-'0'>9){\n\
    \        return false;\n    }\n    if(date[4]-'0'<0 || date[4]-'0'>9){\n     \
    \   return false;\n    }\n    //if the years are not in range\n    if(date[6]-'0'<0\
    \ || date[6]-'0'>9){\n        return false;\n    }\n    if(date[7]-'0'<0 || date[7]-'0'>9){\n\
    \        return false;\n    }\n    if(date[8]-'0'<0 || date[8]-'0'>9){\n     \
    \   return false;\n    }\n    if(date[9]-'0'<0 || date[9]-'0'>9){\n        return\
    \ false;\n    }\n    //if the years are not in range\n    if(date[6]-'0'<0 ||\
    \ date[6]-'0'>9){\n        return false;\n    }\n    //if number of days is not\
    \ in range and if the month is leap year or not\n    if(date[0]-'0'==2){\n   \
    \     if(date[3]-'0'<1 || date[3]-'0'>9){\n            return false;\n       \
    \ }\n        if(date[6]-'0'%4==0){\n            if(date[3]-'0'==2 && date[4]-'0'==9){\n\
    \                return false;\n            }\n        }\n        else{\n    \
    \        if(date[3]-'0'==2 && date[4]-'0'==9", "\tbool flag = true;\n\tint i;\n\
    \tint val_year = 0;\n\tint val_month = 0;\n\tint val_day = 0;\n\tif (date.length()\
    \ == 0) {\n\t\tflag = false;\n\t} else {\n\t\tfor (i = 0; i < date.length(); i++)\
    \ {\n\t\t\tif (date[i] == '-') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tval_month = val_month\
    \ * 10 + (date[i] - '0');\n\t\t}\n\t\ti++;\n\t\tfor (; i < date.length(); i++)\
    \ {\n\t\t\tif (date[i] == '-') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tval_day = val_day\
    \ * 10 + (date[i] - '0');\n\t\t}\n\t\ti++;\n\t\tfor (; i < date.length(); i++)\
    \ {\n\t\t\tval_year = val_year * 10 + (date[i] - '0');\n\t\t}\n\t\tif (val_month\
    \ > 12 || val_month < 1) {\n\t\t\tflag = false;\n\t\t} else if (val_month == 1\
    \ || val_month == 3 || val_month == 5 || val_month == 7 || val_month == 8 || val_month\
    \ == 10 || val_month == 12) {\n\t\t\tif (val_day > 31 || val_day < 1) {\n\t\t\t\
    \tflag = false;\n\t\t\t}\n\t\t} else if (val_month == 4 || val_month == 6 || val_month\
    \ == 9 || val_month == 11) {\n\t\t\tif (val_day > 30 || val_day < 1) {\n\t\t\t\
    \tflag = false;\n\t\t\t}\n\t\t} else if (val_month == 2) {\n\t\t\tif (val_day\
    \ > 29 || val_day < 1) {\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ flag;", "    std::string months[] = {\"31\", \"28\", \"31\", \"30\", \"31\"\
    , \"30\", \"31\", \"31\", \"30\", \"31\", \"30\", \"31\"};\n    std::vector<std::string>\
    \ v;\n    std::string s = \"\";\n    // if (date.size() < 9) return false;\n \
    \   for (int i = 0; i < date.size(); i++) {\n        if (date[i] == '-') {\n \
    \           v.push_back(s);\n            s = \"\";\n        } else {\n       \
    \     s += date[i];\n        }\n    }\n    v.push_back(s);\n    if (v.size() !=\
    \ 3) return false;\n    int d = std::stoi(v[1]);\n    int m = std::stoi(v[0]);\n\
    \    int y = std::stoi(v[2]);\n    std::cout << d << m << y << \"\\n\";\n    if\
    \ (d < 1 || d > 31) return false;\n    if (m < 1 || m > 12) return false;\n  \
    \  if (y < 1) return false;\n    if (m == 2) {\n        // check if leap year\n\
    \        if (y % 4 == 0) {\n            if (d > 29) return false;\n        } else\
    \ {\n            if (d > 28) return false;\n        }\n    } else if (m == 4 ||\
    \ m == 6 || m == 9 || m == 11) {\n        if (d > 30) return false;\n    }\n \
    \   return true;", "    bool month1 = (date[0] == '0' && date[1] == '1');\n  \
    \  bool month2 = (date[0] == '0' && date[1] == '2');\n    bool month3 = (date[0]\
    \ == '0' && date[1] == '3');\n    bool month4 = (date[0] == '0' && date[1] ==\
    \ '4');\n    bool month5 = (date[0] == '0' && date[1] == '5');\n    bool month6\
    \ = (date[0] == '0' && date[1] == '6');\n    bool month7 = (date[0] == '0' &&\
    \ date[1] == '7');\n    bool month8 = (date[0] == '0' && date[1] == '8');\n  \
    \  bool month9 = (date[0] == '0' && date[1] == '9');\n    bool month10 = (date[0]\
    \ == '1' && date[1] == '0');\n    bool month11 = (date[0] == '1' && date[1] ==\
    \ '1');\n    bool month12 = (date[0] == '1' && date[1] == '2');\n    bool day1\
    \ = (date[3] == '0' && date[4] == '1');\n    bool day2 = (date[3] == '0' && date[4]\
    \ == '2');\n    bool day3 = (date[3] == '0' && date[4] == '3');\n    bool day4\
    \ = (date[3] == '0' && date[4] == '4');\n    bool day5 = (date[3] == '0' && date[4]\
    \ == '5');\n    bool day6 = (date[3] == '0' && date[4] == '6');\n    bool day7\
    \ = (date[3] == '0' && date[4] == '7');\n    bool day8 = (date[3] == '0' && date[4]\
    \ == '8');\n    bool day9 = (date[3] == '0' && date[4] == '9');\n    bool day10\
    \ = (date", "    // your code here\n    std::stringstream ss(date);\n    std::string\
    \ word;\n    std::string year;\n    std::string month;\n    std::string day;\n\
    \    std::vector<std::string> tok;\n    while(getline(ss, word, '-')){\n     \
    \   tok.push_back(word);\n    }\n    if(tok.size()==3){\n        month = tok[0];\n\
    \        day = tok[1];\n        year = tok[2];\n        if(month.length()==2 &&\
    \ day.length()==2 && year.length()==4){\n            if(std::stoi(year)>0){\n\
    \                if(std::stoi(month)>0 && std::stoi(month)<13){\n            \
    \        if(std::stoi(month)==1 || std::stoi(month)==3 || std::stoi(month)==5\
    \ || std::stoi(month)==7 || std::stoi(month)==8 || std::stoi(month)==10 || std::stoi(month)==12){\n\
    \                        if(std::stoi(day)>0 && std::stoi(day)<32){\n        \
    \                    return true;\n                        }\n               \
    \     }\n                    else if(std::stoi(month)==4 || std::stoi(month)==6\
    \ || std::stoi(month)==9 || std::stoi(month)==11){\n                        if(std::stoi(day)>0\
    \ && std::stoi(day)<31){\n                            return true;\n         \
    \               }\n                    }\n                    else if(std::stoi(month)==2){\n\
    \                        if(std::stoi(day)>0 && std::stoi(day)<30){\n        \
    \                    return true;\n                        }\n               \
    \     }\n                }\n            }\n        }\n    }\n    return false;",
  "    // Write your code here\n    // It should return true if valid date\n    //\
    \ else false\n    int day, month, year;\n    int index = 0;\n    std::vector<int>\
    \ months = {1, 3, 5, 7, 8, 10, 12};\n    std::vector<int> months2 = {4, 6, 9,\
    \ 11};\n    char c = date[0];\n    if(date.size() == 0){\n        return false;\n\
    \    }\n    while(c != '-'){\n        c = date[index];\n        index++;\n   \
    \ }\n    std::string strMonth = date.substr(0, index-1);\n    month = std::stoi(strMonth);\n\
    \    index++;\n    int index2 = index;\n    c = date[index];\n    while(c != '-'){\n\
    \        c = date[index2];\n        index2++;\n    }\n    std::string strDay =\
    \ date.substr(index, index2-index);\n    day = std::stoi(strDay);\n    index2++;\n\
    \    index = index2;\n    c = date[index];\n    while(c != '\\0'){\n        c\
    \ = date[index];\n        index++;\n    }\n    std::string strYear = date.substr(index2,\
    \ index-index2);\n    year = std::stoi(strYear);\n    if(month == 2){\n      \
    \  if(day > 28){\n            return false;\n        }\n    }\n    for(int i =\
    \ 0; i < months.size(); i++){\n        if(month == months[i]){\n            if(day\
    \ > 31){\n                return false;\n            }\n        }\n    }\n   \
    \ for(int i = 0; i < months2.size(); i++){\n        if(month == months2[i]){\n\
    \            if(day > 30){\n                return false;\n            }\n   \
    \     }\n    }\n    if(month < 1 || month > 12){\n        return false;\n    }\n\
    \    return true;", "    // your code here\n    if(date.size()!=10)\n    return\
    \ false;\n    for(int i=0;i<date.size();i++)\n    {\n        if(i==2||i==5)\n\
    \        {\n            if(date[i]!='-')\n            return false;\n        }\n\
    \        else\n        {\n            if(!isdigit(date[i]))\n            return\
    \ false;\n        }\n    }\n    std::string months[12]={\"01\",\"03\",\"05\",\"\
    07\",\"08\",\"10\",\"12\",\"04\",\"06\",\"09\",\"11\",\"02\"};\n    int days[12]={31,31,31,31,31,31,31,30,30,30,30,29};\n\
    \    int month=atoi(date.substr(0,2).c_str());\n    int day=atoi(date.substr(3,2).c_str());\n\
    \    int year=atoi(date.substr(6,4).c_str());\n    if(day>=1&&day<=31&&month>=1&&month<=12&&year>=1)\n\
    \    {\n        if(month!=2)\n        {\n            if(day<=days[month-1])\n\
    \            return true;\n            else\n            return false;\n     \
    \   }\n        else\n        {\n            if(year%4==0)\n            {\n   \
    \             if(day<=days[month-1])\n                return true;\n         \
    \       else\n                return false;\n            }\n            else\n\
    \            {\n                if(day<=days[month-1]-1)\n                return\
    \ true;\n                else\n                return false;\n            }\n\
    \        }\n    }\n    else\n    return false;", "\tif (date.size() == 0)\n\t\t\
    return false;\n\tstd::stringstream ss;\n\tss << date;\n\tstd::string token;\n\t\
    int d, m, y;\n\tstd::getline(ss, token, '-');\n\tstd::stringstream(token) >> m;\n\
    \tstd::getline(ss, token, '-');\n\tstd::stringstream(token) >> d;\n\tstd::getline(ss,\
    \ token, '-');\n\tstd::stringstream(token) >> y;\n\tif ((m == 1 || m == 3 || m\
    \ == 5 || m == 7 || m == 8 || m == 10 || m == 12) && (d >= 1 && d <= 31))\n\t\t\
    return true;\n\telse if ((m == 4 || m == 6 || m == 9 || m == 11) && (d >= 1 &&\
    \ d <= 30))\n\t\treturn true;\n\telse if (m == 2 && (d >= 1 && d <= 29))\n\t\t\
    return true;\n\telse\n\t\treturn false;", "    char delim = '-';\n    std::vector<std::string>\
    \ dateParts;\n    std::stringstream ss(date);\n    std::string token;\n    while\
    \ (std::getline(ss, token, delim)) {\n        dateParts.push_back(token);\n  \
    \  }\n    if (dateParts.size() != 3) return false;\n    int day = stoi(dateParts[1]);\n\
    \    int month = stoi(dateParts[0]);\n    if (day < 1 || day > 31) return false;\n\
    \    if (month < 1 || month > 12) return false;\n    if (month == 2 && day > 29)\
    \ return false;\n    if (month == 4 || month == 6 || month == 9 || month == 11)\
    \ {\n        if (day > 30) return false;\n    }\n    return true;", "  try{\n\
    \  std::regex rgx(\"(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})\");\n\
    \  bool result = std::regex_match(date, rgx);\n  return result;\n  }catch(std::regex_error&\
    \ e){\n    return false;\n  }", "  \n  //\n  // your code goes here\n  //", " \
    \ string s=date;\n  int n=date.length();\n  if(n<10)\n    return false;\n  int\
    \ mm=date[0]-'0';\n  mm=mm*10+(date[1]-'0');\n  int dd=date[3]-'0';\n  dd=dd*10+(date[4]-'0');\n\
    \  int yyyy=date[6]-'0';\n  yyyy=yyyy*1000+(date[7]-'0')*100+(date[8]-'0')*10+(date[9]-'0');\n\
    \  if(mm<1||mm>12)\n    return false;\n  if(mm==1||mm==3||mm==5||mm==7||mm==8||mm==10||mm==12)\n\
    \  {\n    if(dd<1||dd>31)\n      return false;\n  }\n  else if(mm==4||mm==6||mm==9||mm==11)\n\
    \  {\n    if(dd<1||dd>30)\n      return false;\n  }\n  else\n  {\n    if(yyyy%4==0&&(yyyy%100!=0||yyyy%400==0))\n\
    \    {\n      if(dd<1||dd>29)\n        return false;\n    }\n    else\n    {\n\
    \      if(dd<1||dd>28)\n        return false;\n    }\n  }\n  return true;", " \
    \   // 1. the date string is not empty.\n    if (date.length() == 0) {\n     \
    \   return false;\n    }\n    // 2. the number of days is not less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12.\n    // And the number of days is not\
    \ less than 1 or higher than 30 days for months 4,6,9,11.\n    // And, the number\
    \ of days is not less than 1 or higher than 29 for the month 2.\n    int day =\
    \ stoi(date.substr(0, 2));\n    int month = stoi(date.substr(3, 2));\n    int\
    \ year = stoi(date.substr(6, 4));\n    if (day < 1 || day > 31) {\n        return\
    \ false;\n    }\n    if (month == 2) {\n        if (day > 29) {\n            return\
    \ false;\n        }\n    }\n    if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n        if (day > 30) {\n            return false;\n       \
    \ }\n    }\n    // 3. the months should not be less than 1 or higher than 12.\n\
    \    if (month < 1 || month > 12) {\n        return false;\n    }\n    // 4. the\
    \ date should be in the format: mm-dd-yyyy\n    if (date[2] != '-' || date[5]\
    \ != '-') {\n        return false;\n    }\n    // return true if all checks passed.\n\
    \    return true;", "    int month[12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30,\
    \ 31, 30, 31 };\n    int days = std::stoi(date.substr(0, 2));\n    int months\
    \ = std::stoi(date.substr(3, 2));\n    if (months > 12 || months < 1)\n      \
    \  return false;\n    if (days > month[months - 1] || days < 1)\n        return\
    \ false;\n    if (months == 2 && days == 29)\n        return false;\n    return\
    \ true;", '    return (date != "" && std::regex_match(date, std::regex("(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})"));',
  "  if(date.length() != 10) return false;\n  for(int i = 0; i < date.length(); i++)\
    \ {\n    if(i == 2 || i == 5) {\n      if(date[i] != '-') {\n        return false;\n\
    \      }\n    } else {\n      if(date[i] < '0' || date[i] > '9') {\n        return\
    \ false;\n      }\n    }\n  }\n  int d = (date[3] - '0') * 10 + (date[4] - '0');\n\
    \  int m = (date[0] - '0') * 10 + (date[1] - '0');\n  if(m == 2) {\n    if(d >\
    \ 29) return false;\n  } else if(m == 4 || m == 6 || m == 9 || m == 11) {\n  \
    \  if(d > 30) return false;\n  } else if(m == 1 || m == 3 || m == 5 || m == 7\
    \ || m == 8 || m == 10 || m == 12) {\n    if(d > 31) return false;\n  } else {\n\
    \    return false;\n  }\n  return true;", "\tif (date.length() == 0) {\n\t\treturn\
    \ false;\n\t}\n\tbool flag = false;\n\tint counter = 0;\n\tint slashes_found =\
    \ 0;\n\tfor (int i = 0; i < date.length(); i++) {\n\t\tif (date[i] == '-') {\n\
    \t\t\tslashes_found++;\n\t\t\tif (slashes_found == 1) {\n\t\t\t\tcontinue;\n\t\
    \t\t}\n\t\t\telse {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (date[i]\
    \ == '/') {\n\t\t\treturn false;\n\t\t}\n\t\telse if (date[i] == '0') {\n\t\t\t\
    continue;\n\t\t}\n\t\telse if (date[i] == '1' || date[i] == '2' || date[i] ==\
    \ '3' || date[i] == '4' || date[i] == '5' || date[i] == '6' || date[i] == '7'\
    \ || date[i] == '8' || date[i] == '9') {\n\t\t\tcounter++;\n\t\t}\n\t\telse {\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\tif (counter == 8) {\n\t\treturn true;\n\t}\n\
    \telse {\n\t\treturn false;\n\t}", "    if(date.length()==0) return false;\n \
    \   int i;\n    for(i=0;i<date.length();i++){\n        if(date[i]>='0' && date[i]<='9')\
    \ continue;\n        if(date[i]=='-' && i!=2 && i!=5) return false;\n        else\
    \ return false;\n    }\n    int days[12]={31,29,31,30,31,30,31,31,30,31,30,31};\n\
    \    std::string temp=date.substr(0,2);\n    int m=std::stoi(temp);\n    if(m>12)\
    \ return false;\n    temp=date.substr(3,2);\n    int d=std::stoi(temp);\n    if(d>days[m-1])\
    \ return false;\n    return true;", "    for(int i=0;i<date.length();i++)\n  \
    \  {\n        if(date[i]=='/')\n        {\n            return false;\n       \
    \ }\n    }\n    if(date.length()!=10)\n    {\n        return false;\n    }\n \
    \   std::string a,b,c;\n    int x,y,z;\n    a=date.substr(0,2);\n    b=date.substr(3,2);\n\
    \    c=date.substr(6,4);\n    x=std::stoi(a);\n    y=std::stoi(b);\n    z=std::stoi(c);\n\
    \    if(y<1||y>12)\n    {\n        return false;\n    }\n    if(y==1||y==3||y==5||y==7||y==8||y==10||y==12)\n\
    \    {\n        if(x<1||x>31)\n        {\n            return false;\n        }\n\
    \    }\n    else if(y==4||y==6||y==9||y==11)\n    {\n        if(x<1||x>30)\n \
    \       {\n            return false;\n        }\n    }\n    else if(y==2)\n  \
    \  {\n        if(x<1||x>29)\n        {\n            return false;\n        }\n\
    \    }\n    return true;", "    assert(!date.empty());\n    std::regex day_limit_months{\"\
    [0-2][0-9]-[0-3][0-9]-[0-9]{4}\"};\n    std::regex day_limit_months_1{\"(0[0-9]|1[0-9]|2[0-9])-(0[1-9]|1[0-2])-[0-9]{4}\"\
    };\n    if(std::regex_match(date, day_limit_months) && std::regex_match(date,\
    \ day_limit_months_1)){\n        std::vector<std::string> date_fields;\n     \
    \   std::stringstream date_stream(date);\n        std::string field;\n       \
    \ while(std::getline(date_stream, field, '-')){\n            date_fields.push_back(field);\n\
    \        }\n        int month = std::stoi(date_fields[0]);\n        int day =\
    \ std::stoi(date_fields[1]);\n        int year = std::stoi(date_fields[2]);\n\
    \        if(month == 2 && day == 29 && (year % 4 == 0)){\n            return true;\n\
    \        }\n        else if(month == 2 && day < 29){\n            return true;\n\
    \        }\n        else if((month % 2 == 0 && month <= 6) && day <= 30){\n  \
    \          return true;\n        }\n        else if((month % 2 == 0 && month >\
    \ 6) && day <= 31){\n            return true;\n        }\n        else if((month\
    \ % 2 != 0 && month <= 6) && day <= 31){\n            return true;\n        }\n\
    \        else if((month % 2 != 0 && month > 6) && day <= 30){\n            return\
    \ true;\n        }\n        else{\n            return false;\n        }\n    }\n\
    \    else{\n        return false;\n    }", "    //your code here\n    std::regex\
    \ reg(\"(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})\");\n    std::cmatch\
    \ res;\n    if(std::regex_match(date.c_str(), res, reg))\n    {\n        return\
    \ true;\n    }\n    return false;", "    // TODO: Implement this function\n  \
    \  int mon[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n    std::stringstream\
    \ ss(date);\n    std::string dt;\n    int i, m, d, y;\n    while(getline(ss, dt,\
    \ '-')){\n        i++;\n        if(i == 1) m = stoi(dt);\n        else if(i ==\
    \ 2) d = stoi(dt);\n        else if(i == 3) y = stoi(dt);\n    }\n    if(i < 3)\
    \ return false;\n    if(m < 1 || m > 12) return false;\n    if(d < 1 || d > mon[m-1])\
    \ return false;\n    if(y <= 0) return false;\n    return true;", "  int days[]\
    \ = {31,29,31,30,31,30,31,31,30,31,30,31};\n  std::stringstream ss(date);\n  int\
    \ day,month,year;\n  char c;\n  ss >> month >> c >> day >> c >> year;\n  if(month\
    \ < 1 || month > 12) return false;\n  if(day < 1 || day > days[month-1]) return\
    \ false;\n  if(c != '-') return false;\n  return true;", '    return false;',
  "\tassert(date != \"\");\n\tint dashCount = 0;\n\tfor (auto character : date) {\n\
    \t\tif (character == '-') {\n\t\t\tdashCount++;\n\t\t}\n\t}\n\tif (dashCount !=\
    \ 2) {\n\t\treturn false;\n\t}\n\tstd::vector<std::string> dateValues = {\"\"\
    , \"\", \"\"};\n\tint currentPosition = 0;\n\tfor (auto character : date) {\n\t\
    \tif (character == '-') {\n\t\t\tcurrentPosition++;\n\t\t} else {\n\t\t\tdateValues[currentPosition]\
    \ += character;\n\t\t}\n\t}\n\tint month = stoi(dateValues[0]);\n\tint day = stoi(dateValues[1]);\n\
    \tint year = stoi(dateValues[2]);\n\tif (month < 1 || month > 12) {\n\t\treturn\
    \ false;\n\t}\n\tif (month == 2) {\n\t\tif (day < 1 || day > 29) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11) {\n\t\tif (day < 1 || day > 30) {\n\t\t\treturn false;\n\t\t}\n\t} else\
    \ {\n\t\tif (day < 1 || day > 31) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;", "  // your code here\n  //@brief: \n  // this function check for valid_date\
    \ format\n  //@param: \n  // date - date format \n  //@return: \n  // true if\
    \ valid and false otherwise\n  std::regex rex(\"[0-9][0-9]*-[0-9][0-9]*-[0-9][0-9][0-9][0-9]\"\
    );\n  if(!std::regex_match(date, rex))\n    return false;\n  int month = atoi(date.substr(0,\
    \ 2).c_str());\n  int day = atoi(date.substr(3, 2).c_str());\n  int year = atoi(date.substr(6,\
    \ 4).c_str());\n  if(month == 0 || day == 0 || year == 0)\n    return false;\n\
    \  if(month > 12 || month < 1)\n    return false;\n  if(month == 2)\n  {\n   \
    \ if(year % 4 == 0)\n    {\n      if(day > 29 || day < 1)\n        return false;\n\
    \    }\n    else\n    {\n      if(day > 28 || day < 1)\n        return false;\n\
    \    }\n  }\n  else if(month == 1 || month == 3 || month == 5 || month == 7 ||\
    \ month == 8 || month == 10 || month == 12)\n  {\n    if(day > 31 || day < 1)\n\
    \      return false;\n  }\n  else\n  {\n    if(day > 30 || day < 1)\n      return\
    \ false;\n  }\n  return true;", "\treturn false;", " \n  int counter = 0;\n  int\
    \ count = 0;\n  std::vector<std::string> v;\n  std::stringstream ss(date);\n \
    \ std::string token;\n  while(std::getline(ss, token, '-')) {\n    v.push_back(token);\n\
    \  }\n  \n  int first = stoi(v[0]);\n  int second = stoi(v[1]);\n  int third =\
    \ stoi(v[2]);\n  \n  if(date != \"\") {\n    counter++;\n  }\n  \n  if(first >\
    \ 0 && first < 13) {\n    counter++;\n  }\n  \n  if(first == 1 || first == 3 ||\
    \ first == 5 || first == 7 || first == 8 || first == 10 || first == 12) {\n  \
    \  if(second > 0 && second < 32) {\n      counter++;\n    }\n  }\n  \n  if(first\
    \ == 4 || first == 6 || first == 9 || first == 11) {\n    if(second > 0 && second\
    \ < 31) {\n      counter++;\n    }\n  }\n  \n  if(first == 2) {\n    if(second\
    \ > 0 && second < 30) {\n      counter++;\n    }\n  }\n  \n  if(third > 0) {\n\
    \    counter++;\n  }\n  \n  if(counter == 4) {\n    return true;\n  }\n  \n  return\
    \ false;", "    // your code here\n    string sep = \"-\";\n    int i = date.find(sep);\n\
    \    string month = date.substr(0, i);\n    int j = date.find(sep, i+1);\n   \
    \ string day = date.substr(i+1, j-i-1);\n    string year = date.substr(j+1);\n\
    \    if(month.length() == 2 && day.length() == 2 && year.length() == 4){\n   \
    \     if(stoi(month) > 0 && stoi(month) < 13){\n            if(stoi(month) ==\
    \ 1 || stoi(month) == 3 || stoi(month) == 5 || stoi(month) == 7 || stoi(month)\
    \ == 8 || stoi(month) == 10 || stoi(month) == 12){\n                if(stoi(day)\
    \ > 0 && stoi(day) < 32){\n                    return true;\n                }\n\
    \            }\n            else if(stoi(month) == 4 || stoi(month) == 6 || stoi(month)\
    \ == 9 || stoi(month) == 11){\n                if(stoi(day) > 0 && stoi(day) <\
    \ 31){\n                    return true;\n                }\n            }\n \
    \           else if(stoi(month) == 2){\n                if(stoi(day) > 0 && stoi(day)\
    \ < 30){\n                    return true;\n                }\n            }\n\
    \        }\n    }\n    return false;", "    std::istringstream ss(date);\n   \
    \ std::string token;\n    int count = 0;\n    int month = 0;\n    int day = 0;\n\
    \    int year = 0;\n    while(std::getline(ss, token, '-')) {\n        if(count\
    \ == 0) {\n            month = stoi(token);\n        } else if(count == 1) {\n\
    \            day = stoi(token);\n        } else if(count == 2) {\n           \
    \ year = stoi(token);\n        }\n        count++;\n    }\n    if(count != 3)\
    \ {\n        return false;\n    } else if(month > 12 || month < 1) {\n       \
    \ return false;\n    } else if(day > 31 || day < 1) {\n        return false;\n\
    \    } else if(month == 2 && day > 29) {\n        return false;\n    } else if((month\
    \ == 4 || month == 6 || month == 9 || month == 11) && day > 30) {\n        return\
    \ false;\n    } else if(year > 9999 || year < 1) {\n        return false;\n  \
    \  }\n    return true;", "    std::vector<std::string> date_vec;\n    std::istringstream\
    \ ss(date);\n    std::string token;\n    while(std::getline(ss, token, '-')) {\n\
    \        date_vec.push_back(token);\n    }\n    if(date_vec.size() != 3) return\
    \ false;\n    int month = std::stoi(date_vec[0]);\n    int day = std::stoi(date_vec[1]);\n\
    \    int year = std::stoi(date_vec[2]);\n    if(month < 1 || month > 12) return\
    \ false;\n    if(day < 1 || day > 31) return false;\n    if(month == 2) {\n  \
    \      if(day > 29) return false;\n    }\n    else if(month == 4 || month == 6\
    \ || month == 9 || month == 11) {\n        if(day > 30) return false;\n    }\n\
    \    if(year < 1) return false;\n    return true;", "    std::string delimiter\
    \ = \"-\";\n    std::vector<std::string> tokens;\n    size_t pos = 0;\n    std::string\
    \ token;\n    while ((pos = date.find(delimiter)) != std::string::npos) {\n  \
    \      token = date.substr(0, pos);\n        tokens.push_back(token);\n      \
    \  date.erase(0, pos + delimiter.length());\n    }\n    tokens.push_back(date);\n\
    \    std::string pattern = \"\\\\d{2}\\\\-\\\\d{2}\\\\-\\\\d{4}\";\n    std::regex\
    \ r(pattern);\n    if (!std::regex_match(date, r)) {\n        return false;\n\
    \    }\n    int month = std::stoi(tokens[0]);\n    int days = std::stoi(tokens[1]);\n\
    \    if (month <= 0 || month > 12) {\n        return false;\n    }\n    if (month\
    \ == 2) {\n        if (days < 1 || days > 29) {\n            return false;\n \
    \       }\n    } else if (month == 1 || month == 3 || month == 5 || month == 7\
    \ || month == 8 || month == 10 || month == 12) {\n        if (days < 1 || days\
    \ > 31) {\n            return false;\n        }\n    } else {\n        if (days\
    \ < 1 || days > 30) {\n            return false;\n        }\n    }\n    return\
    \ true;", "  std::cout << date << std::endl;\n  std::stringstream ss(date);\n\
    \  int month;\n  int day;\n  int year;\n  char delim;\n  if(!(ss >> month)) return\
    \ false;\n  if(!(ss >> delim)) return false;\n  if(!(ss >> day)) return false;\n\
    \  if(!(ss >> delim)) return false;\n  if(!(ss >> year)) return false;\n  if(!(ss\
    \ >> delim)) return false;\n  if(ss.str().length() == 10 && month <= 12 && month\
    \ >= 1 && year >= 1 && year <= 9999) {\n    if(month == 2) {\n      if(day <=\
    \ 29 && day >= 1) return true;\n    }\n    else if(month == 1 || month == 3 ||\
    \ month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n  \
    \    if(day <= 31 && day >= 1) return true;\n    }\n    else if(month == 4 ||\
    \ month == 6 || month == 9 || month == 11) {\n      if(day <= 30 && day >= 1)\
    \ return true;\n    }\n  }\n  return false;", "    if(date.length() == 0) return\
    \ false;\n    if(date.length() != 10) return false;\n    std::vector<std::string>\
    \ date_chunks;\n    std::vector<int> date_chunks_int;\n    std::string curr_chunk\
    \ = \"\";\n    for(int i = 0; i < date.length(); i++) {\n        if(date[i] ==\
    \ '-') {\n            date_chunks.push_back(curr_chunk);\n            curr_chunk\
    \ = \"\";\n        } else {\n            curr_chunk += date[i];\n        }\n \
    \   }\n    date_chunks.push_back(curr_chunk);\n    if(date_chunks.size() != 3)\
    \ return false;\n    for(int i = 0; i < date_chunks.size(); i++) {\n        if(date_chunks[i].length()\
    \ == 0) return false;\n        for(int j = 0; j < date_chunks[i].length(); j++)\
    \ {\n            if(date_chunks[i][j] < '0' || date_chunks[i][j] > '9') return\
    \ false;\n        }\n        int curr_chunk_int = stoi(date_chunks[i]);\n    \
    \    date_chunks_int.push_back(curr_chunk_int);\n    }\n    if(date_chunks_int[0]\
    \ < 1 || date_chunks_int[0] > 12) return false;\n    if(date_chunks_int[0] ==\
    \ 1 || date_chunks_int[0] == 3 || date_chunks_int[0] == 5 || date_chunks_int[0]\
    \ == 7 || date_chunks_int[0] == 8 || date_chunks_int[0] == 10 || date_chunks_int[0]\
    \ == 12) {\n        if(date_chunks_int[1] < 1 || date_chunks_int[1] > 31) return\
    \ false;\n    } else if(date_chunks_int[0] == 4 || date_chunks_int[0] == 6 ||",
  '    // Write your code here', "\tif (date.size() == 0) return false;\n\tstd::istringstream\
    \ ss(date);\n\tchar ch;\n\tint m, d, y;\n\tss >> m >> ch >> d >> ch >> y;\n\t\
    if (ch != '-' || m > 12 || m < 1 || d > 31 || d < 1 || y < 1) return false;\n\t\
    if (m == 2) {\n\t\tif (d > 29) return false;\n\t\tif (d == 29) {\n\t\t\tif (y\
    \ % 400 == 0 || (y % 4 == 0 && y % 100 != 0)) return true;\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\tif (m == 4 || m == 6 || m == 9 || m == 11) {\n\t\tif (d > 30) return\
    \ false;\n\t}\n\treturn true;", "    int month, day, year;\n    std::istringstream\
    \ stream(date);\n    char discard;\n    if(!(stream >> month >> discard >> day\
    \ >> discard >> year) ||\n       month <= 0 || month > 12 || year < 0 || day <\
    \ 0 ||\n       (day > 31 && (month == 1 || month == 3 || month == 5 || month ==\
    \ 7 || month == 8 || month == 10 || month == 12)) ||\n       (day > 30 && (month\
    \ == 4 || month == 6 || month == 9 || month == 11)) ||\n       (day > 29 && month\
    \ == 2) ||\n       discard != '-') {\n           return false;\n       }\n   \
    \ return true;", "  if(date.length()!=10)\n    return false;\n  std::string day\
    \ = date.substr(0,2);\n  std::string month = date.substr(3,2);\n  std::string\
    \ year = date.substr(6,4);\n  bool m = (month == \"01\" || month == \"03\" ||\
    \ month == \"05\" || month == \"07\" || month == \"08\" || month == \"10\" ||\
    \ month == \"12\");\n  bool m2 = (month == \"04\" || month == \"06\" || month\
    \ == \"09\" || month == \"11\");\n  if(m && day == \"31\")\n    return false;\n\
    \  if(m2 && day == \"30\")\n    return false;\n  if(month == \"02\" && day ==\
    \ \"29\")\n    return false;\n  return true;", "    std::string mm, dd, yyyy;\n\
    \    bool isValid = true;\n    int month = 0, day = 0, year = 0;\n    std::string\
    \ delimiter = \"-\";\n    size_t pos = 0;\n    while ((pos = date.find(delimiter))\
    \ != std::string::npos) {\n        mm = date.substr(0, pos);\n        date.erase(0,\
    \ pos + delimiter.length());\n    }\n    yyyy = date;\n    delimiter = \"-\";\n\
    \    while ((pos = mm.find(delimiter)) != std::string::npos) {\n        dd = mm.substr(0,\
    \ pos);\n        mm.erase(0, pos + delimiter.length());\n    }\n    dd = mm;\n\
    \    month = std::stoi(mm);\n    day = std::stoi(dd);\n    year = std::stoi(yyyy);\n\
    \    // 1. The date string is not empty.\n    if (date.length() == 0) {\n    \
    \    isValid = false;\n    }\n    // 2. The number of days is not less than 1\
    \ or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is\
    \ not less than 1 or higher than 30 days for months 4,6,9,11. And, the number\
    \ of days is not less than 1 or higher than 29 for the month 2.\n    if (day <\
    \ 1 || day > 31) {\n        isValid = false;\n    }\n    // 3. The months should\
    \ not be less than 1 or higher than 12.\n    if (month < 1 || month > 12) {\n\
    \        isValid = false;\n    }\n    // 4. The date should be in the format:\
    \ mm-dd-yyyy\n    if (isValid == true) {\n        for (int i = 0; i < date.length();\
    \ i++) {\n            if (date[i] == '-') {\n                date[i] = '/';\n\
    \            }\n        }\n        if (date[2] != '/' || date[5] != '/') {\n \
    \           isValid = false;\n        }\n    }\n    return isValid;", "  std::stringstream\
    \ ss(date);\n  char ch;\n  int day, month, year;\n  ss >> month >> ch >> day >>\
    \ ch >> year;\n  if (ch != '-' || ss.fail() || month < 1 || month > 12 || year\
    \ < 0 || day < 1 || (month == 2 && day > 29) || (month == 4 && day > 30) || (month\
    \ == 6 && day > 30) || (month == 9 && day > 30) || (month == 11 && day > 30) ||\
    \ (month == 1 && day > 31) || (month == 3 && day > 31) || (month == 5 && day >\
    \ 31) || (month == 7 && day > 31) || (month == 8 && day > 31) || (month == 10\
    \ && day > 31) || (month == 12 && day > 31)) {\n    return false;\n  }\n  return\
    \ true;", "  bool validDate = true;\n  bool validMonth = true;\n  bool validDay\
    \ = true;\n  bool validYear = true;\n  bool validFormat = true;\n  bool validLength\
    \ = true;\n  bool validNumDays = true;\n  int year;\n  int month;\n  int day;\n\
    \  int numDays[12] = {31,28,31,30,31,30,31,31,30,31,30,31};\n  std::string monthS;\n\
    \  std::string dayS;\n  std::string yearS;\n  std::stringstream ss;\n  std::stringstream\
    \ ss2;\n  std::stringstream ss3;\n  std::stringstream ss4;\n  if(date.length()\
    \ == 10){\n    validLength = true;\n  }\n  else{\n    validLength = false;\n \
    \ }\n  if(validLength){\n    ss << date[0] << date[1];\n    ss >> monthS;\n  \
    \  ss2 << date[3] << date[4];\n    ss2 >> dayS;\n    ss3 << date[6] << date[7]\
    \ << date[8] << date[9];\n    ss3 >> yearS;\n    year = std::stoi(yearS);\n  \
    \  month = std::stoi(monthS);\n    day = std::stoi(dayS);\n    if(date[2] == '-'\
    \ && date[5] == '-'){\n      validFormat = true;\n    }\n    else{\n      validFormat\
    \ = false;\n    }\n    if(month >= 1 && month <= 12){\n      validMonth = true;\n\
    \    }\n    else{\n      validMonth = false;\n    }\n    if(day >= 1 && day <=\
    \ 31){\n      validDay = true;\n    }\n    else{\n      validDay = false;\n  \
    \  }\n    if(year >= 1900 && year <= 9999){\n      validYear = true;\n    }\n\
    \    else{\n      validYear = false;\n    }\n    if(validFormat && validMonth\
    \ && validDay && validYear){\n      if(month == 1 || month == 3 || month == 5\
    \ || month == 7 || month == 8 || month", "  std::string month, day, year;\n  month\
    \ = date.substr(0,2);\n  day = date.substr(3,2);\n  year = date.substr(6,4);\n\
    \  if (month.compare(\"01\") == 0 || month.compare(\"03\") == 0 || month.compare(\"\
    05\") == 0 || month.compare(\"07\") == 0 || month.compare(\"08\") == 0 || month.compare(\"\
    10\") == 0 || month.compare(\"12\") == 0) {\n    if (stoi(day) > 31 || stoi(day)\
    \ < 1) {\n      return false;\n    }\n  }\n  else if (month.compare(\"04\") ==\
    \ 0 || month.compare(\"06\") == 0 || month.compare(\"09\") == 0 || month.compare(\"\
    11\") == 0) {\n    if (stoi(day) > 30 || stoi(day) < 1) {\n      return false;\n\
    \    }\n  }\n  else if (month.compare(\"02\") == 0) {\n    if (stoi(day) > 29\
    \ || stoi(day) < 1) {\n      return false;\n    }\n  }\n  else {\n    return false;\n\
    \  }\n  if (stoi(month) > 12 || stoi(month) < 1) {\n    return false;\n  }\n \
    \ if (stoi(year) > 9999 || stoi(year) < 1) {\n    return false;\n  }\n  return\
    \ true;", "    // your code here\n    if(date.length() == 0){\n        return\
    \ false;\n    }\n    std::string delimiter = \"-\";\n    std::string day = date.substr(0,\
    \ date.find(delimiter));\n    date.erase(0, date.find(delimiter) + delimiter.length());\n\
    \    std::string month = date.substr(0, date.find(delimiter));\n    date.erase(0,\
    \ date.find(delimiter) + delimiter.length());\n    std::string year = date;\n\
    \    bool ret = false;\n    if(year.length() == 4){\n        if(month == \"01\"\
    \ or month == \"03\" or month == \"05\" or month == \"07\" or month == \"08\"\
    \ or month == \"10\" or month == \"12\"){\n            if(day == \"01\" or day\
    \ == \"02\" or day == \"03\" or day == \"04\" or day == \"05\" or day == \"06\"\
    \ or day == \"07\" or day == \"08\" or day == \"09\" or day == \"10\" or day ==\
    \ \"11\" or day == \"12\" or day == \"13\" or day == \"14\" or day == \"15\" or\
    \ day == \"16\" or day == \"17\" or day == \"18\" or day == \"19\" or day == \"\
    20\" or day == \"21\" or day == \"22\" or day == \"23\" or day == \"24\" or day\
    \ == \"25\" or day == \"26\" or day == \"27\" or day == \"28\" or day == \"29\"\
    \ or day == \"30\" or day == \"31\"){\n                ret = true;\n         \
    \   }\n        }\n        else if(month == \"04\" or month == \"06\" or month\
    \ == \"09\" or month == \"11\"){\n            if(day == \"01\" or day == \"02\"\
    \ or day == \"03\" or day == \"04\" or day == \"05\" or day == \"06\" or day ==\
    \ \"07\" or day == \"08\" or day == \"09\" or day == \"10\" or day == \"11\" or\
    \ day == \"12\" or day == \"13\" or day", "\tstd::regex pattern(\"(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}\"\
    );\n\treturn regex_match(date, pattern);", "     if(date.length()<10)return false;\n\
    \    int year,month,day;\n    year=0;month=0;day=0;\n    int pos=date.find('-');\n\
    \    if(pos!=2)return false;\n    for(int i=0;i<2;i++)\n    {\n        month=month*10+(date[i]-'0');\n\
    \    }\n    if(month<1||month>12)return false;\n    int pos2=date.find('-',pos+1);\n\
    \    if(pos2!=5)return false;\n    for(int i=pos+1;i<pos2;i++)\n    {\n      \
    \  day=day*10+(date[i]-'0');\n    }\n    if(month==2)\n    {\n        if(day<1||day>29)return\
    \ false;\n    }\n    else if(month==1||month==3||month==5||month==7||month==8||month==10||month==12)\n\
    \    {\n        if(day<1||day>31)return false;\n    }\n    else\n    {\n     \
    \   if(day<1||day>30)return false;\n    }\n    for(int i=pos2+1;i<10;i++)\n  \
    \  {\n        year=year*10+(date[i]-'0');\n    }\n    if(year<1000||year>9999)return\
    \ false;\n    return true;", "    // Your code goes here\n    std::vector<std::string>\
    \ v;\n    std::stringstream ss(date);\n    std::string temp;\n    while(std::getline(ss,\
    \ temp, '-')) {\n        v.push_back(temp);\n    }\n    if(v.size() != 3) {\n\
    \        return false;\n    }\n    int month = std::stoi(v[0]);\n    int day =\
    \ std::stoi(v[1]);\n    int year = std::stoi(v[2]);\n    if(year < 0) {\n    \
    \    return false;\n    }\n    if(month > 12) {\n        return false;\n    }\n\
    \    if(month == 2) {\n        if(day > 29) {\n            return false;\n   \
    \     }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month ==\
    \ 11) {\n        if(day > 30) {\n            return false;\n        }\n    }\n\
    \    else {\n        if(day > 31) {\n            return false;\n        }\n  \
    \  }\n    return true;", "\t// TODO: implement\n\t// using regex to check pattern\
    \ of the date.\n\t// using stoi to convert string to integer.\n\t// using try/catch\
    \ to check if string contains invalid char.\n\tstd::regex pattern(\"(\\\\d{2})-(\\\
    \\d{2})-(\\\\d{4})\");\n\tif (std::regex_match(date, pattern)) {\n\t\ttry {\n\t\
    \t\tstd::vector<std::string> parts;\n\t\t\tstd::istringstream iss(date);\n\t\t\
    \tfor (std::string s; iss >> s;) {\n\t\t\t\tparts.push_back(s);\n\t\t\t}\n\t\t\
    \tint m = std::stoi(parts[0]);\n\t\t\tint d = std::stoi(parts[1]);\n\t\t\tint\
    \ y = std::stoi(parts[2]);\n\t\t\tint day[12] = { 31, 28, 31, 30, 31, 30, 31,\
    \ 31, 30, 31, 30, 31 };\n\t\t\tif (y % 4 == 0) day[1] = 29;\n\t\t\tif (m < 1 ||\
    \ m > 12) return false;\n\t\t\tif (d < 1 || d > day[m - 1]) return false;\n\t\t\
    \treturn true;\n\t\t}\n\t\tcatch (...) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\
    else {\n\t\treturn false;\n\t}", "    // your code here\n    if(date==\"\") return\
    \ false;\n    vector<string> v;\n    stringstream s(date);\n    string temp;\n\
    \    while(getline(s,temp,'-')) v.push_back(temp);\n    int day = stoi(v[1]);\n\
    \    int month = stoi(v[0]);\n    int year = stoi(v[2]);\n    if(month>12 || month<1)\
    \ return false;\n    if(month==1 || month==3 || month==5 || month==7 || month==8\
    \ || month==10 || month==12){\n        if(day>31 || day<1) return false;\n   \
    \ }\n    else if(month==4 || month==6 || month==9 || month==11){\n        if(day>30\
    \ || day<1) return false;\n    }\n    else if(month==2){\n        if(day>29 ||\
    \ day<1) return false;\n    }\n    else return false;\n    return true;", '    ',
  "  if(date.length() == 0) return false;\n  for(int i = 0; i < date.length(); i++)\
    \ {\n    if(date[i] == '-') date[i] = ' ';\n  }\n  std::stringstream ss(date);\n\
    \  int d, m, y;\n  ss >> m >> d >> y;\n  bool a = (m == 1 || m == 3 || m == 5\
    \ || m == 7 || m == 8 || m == 10 || m == 12);\n  bool b = (m == 4 || m == 6 ||\
    \ m == 9 || m == 11);\n  bool c = (m == 2);\n  if(a && (d >= 1 && d <= 31)) return\
    \ true;\n  if(b && (d >= 1 && d <= 30)) return true;\n  if(c && (d >= 1 && d <=\
    \ 29)) return true;\n  return false;", "  std::regex reg(\"([0-9]{2})-([0-9]{2})-([0-9]{4})\"\
    );\n  bool is_match = std::regex_match(date, reg);\n  if (!is_match) {\n    return\
    \ false;\n  }\n  std::regex reg_find(\"([0-9]{2})\");\n  std::sregex_iterator\
    \ it(date.begin(), date.end(), reg_find);\n  std::vector<int> vec;\n  for (; it\
    \ != std::sregex_iterator(); ++it) {\n    vec.push_back(stoi(it->str()));\n  }\n\
    \  if (vec[0] > 12 || vec[0] < 1) {\n    return false;\n  }\n  if (vec[0] == 2)\
    \ {\n    if (vec[2] % 4 == 0) {\n      if (vec[1] > 29 || vec[1] < 1) {\n    \
    \    return false;\n      }\n    } else {\n      if (vec[1] > 28 || vec[1] < 1)\
    \ {\n        return false;\n      }\n    }\n  } else if (vec[0] == 1 || vec[0]\
    \ == 3 || vec[0] == 5 || vec[0] == 7 || vec[0] == 8 || vec[0] == 10 || vec[0]\
    \ == 12) {\n    if (vec[1] > 31 || vec[1] < 1) {\n      return false;\n    }\n\
    \  } else {\n    if (vec[1] > 30 || vec[1] < 1) {\n      return false;\n    }\n\
    \  }\n  return true;", "  \n  vector<string> months = {\"01\", \"02\", \"03\"\
    , \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"};\n \
    \ vector<string> days = {\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\"\
    , \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\"\
    , \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\"\
    , \"28\", \"29\", \"30\", \"31\"};\n  string strMonths[12] = {\"01\", \"03\",\
    \ \"05\", \"07\", \"08\", \"10\", \"12\"};\n  string strDays[30] = {\"04\", \"\
    06\", \"09\", \"11\"};\n  // Declaring argument for time()\n  time_t tt;\n  //\
    \ Declaring variable to store return value of\n  // localtime()\n  struct tm *\
    \ ti;\n  // Applying time()\n  time (&tt);\n  // Using localtime()\n  ti = localtime(&tt);\n\
    \  //Display the current date\n  int year, month, day;\n  year = ti->tm_year +\
    \ 1900;\n  month = ti->tm_mon + 1;\n  day = ti->tm_mday;\n  if (date.size() ==\
    \ 0) {\n    return false;\n  } else if (date.size() != 10) {\n    return false;\n\
    \  } else if (date[2] != '-' || date[5] != '-') {\n    return false;\n  } else\
    \ if (find(begin(months), end(months), date.substr(0, 2)) == end(months)) {\n\
    \    return false;\n  } else if (date.substr(0, 2) == \"02\" && (date.substr(6,\
    \ 4) % 4 != 0 && date.substr(6, 4) % 100 != 0) && find(begin(days), end(days),\
    \ date.substr(3, 2)) != end(days)) {\n    return false;\n  } else if (find", " \
    \   if(date.length() == 0) return false;\n    std::vector<std::string> v;\n  \
    \  std::string::size_type pos = 0;\n    std::string::size_type prev = 0;\n   \
    \ while ((pos = date.find('-', prev)) != std::string::npos)\n    {\n        v.push_back(date.substr(prev,\
    \ pos-prev));\n        prev = pos+1;\n    }\n    v.push_back(date.substr(prev));\n\
    \    if(v.size()!=3) return false;\n    if(v[0].length()!=2 || v[1].length()!=2\
    \ || v[2].length()!=4) return false;\n    for(int i=0;i<v.size();i++){\n     \
    \   for(int j=0;j<v[i].length();j++){\n            if(v[i][j]>'9' || v[i][j]<'0')\
    \ return false;\n        }\n    }\n    int days = stoi(v[1]);\n    int months\
    \ = stoi(v[0]);\n    int years = stoi(v[2]);\n    if(months>12 || months<1) return\
    \ false;\n    if(months==1 || months==3 || months==5 || months==7 || months==8\
    \ || months==10 || months==12){\n        if(days>31 || days<1) return false;\n\
    \    }\n    else if(months==4 || months==6 || months==9 || months==11){\n    \
    \    if(days>30 || days<1) return false;\n    }\n    else if(months==2){\n   \
    \     if(days>29 || days<1) return false;\n    }\n    return true;", "  // Your\
    \ code here\n  // see test case 1 for hint\n  int len = date.length();\n  if(len\
    \ == 0)\n    return false;\n  for(int i = 0; i < len; i++)\n  {\n    if(date[i]\
    \ == '-' || (date[i] >= '0' && date[i] <= '9'))\n      continue;\n    else\n \
    \     return false;\n  }\n  int day = 0, mon = 0, year = 0;\n  string d, m, y;\n\
    \  int flag = 0;\n  for(int i = 0; i < len; i++)\n  {\n    if(date[i] == '-')\n\
    \    {\n      flag++;\n      continue;\n    }\n    if(flag == 0)\n      d += date[i];\n\
    \    else if(flag == 1)\n      m += date[i];\n    else\n      y += date[i];\n\
    \  }\n  day = stoi(d);\n  mon = stoi(m);\n  year = stoi(y);\n  if(day == 0 ||\
    \ mon == 0 || year == 0)\n    return false;\n  if(mon == 1 || mon == 3 || mon\
    \ == 5 || mon == 7 || mon == 8 || mon == 10 || mon == 12)\n  {\n    if(day < 1\
    \ || day > 31)\n      return false;\n  }\n  else if(mon == 4 || mon == 6 || mon\
    \ == 9 || mon == 11)\n  {\n    if(day < 1 || day > 30)\n      return false;\n\
    \  }\n  else if(mon == 2)\n  {\n    if(day < 1 || day > 29)\n      return false;\n\
    \  }\n  else\n    return false;\n  return true;", "    std::stringstream ss(date);\n\
    \    std::string tmps;\n    int months, days, years;\n    std::getline(ss, tmps,\
    \ '-');\n    months = std::stoi(tmps);\n    std::getline(ss, tmps, '-');\n   \
    \ days = std::stoi(tmps);\n    std::getline(ss, tmps, '-');\n    years = std::stoi(tmps);\n\
    \    if(date == \"\") return false;\n    if(months == 2){\n        if(days < 1\
    \ || days > 29) return false;\n    }else if(months == 1 || months == 3 || months\
    \ == 5 || months == 7 || months == 8 || months == 10 || months == 12){\n     \
    \   if(days < 1 || days > 31) return false;\n    }else if(months == 4 || months\
    \ == 6 || months == 9 || months == 11){\n        if(days < 1 || days > 30) return\
    \ false;\n    }else{\n        return false;\n    }\n    if(months < 1 || months\
    \ > 12) return false;\n    return true;", "    int month, day, year;\n    std::vector<std::string>\
    \ v;\n    std::stringstream ss(date);\n    std::string token;\n    while(std::getline(ss,\
    \ token, '-')) {\n        v.push_back(token);\n    }\n    if(v.size() != 3) return\
    \ false;\n    month = std::stoi(v[0]);\n    day = std::stoi(v[1]);\n    year =\
    \ std::stoi(v[2]);\n    if(month > 12 || month < 1) return false;\n    if(month\
    \ == 2 && day > 29) return false;\n    if(month == 2 && day < 1) return false;\n\
    \    if(day > 31 || day < 1) return false;\n    if(month != 2 && month != 4 &&\
    \ month != 6 && month != 9 && month != 11 && day > 30) return false;\n    return\
    \ true;", '  return true;', "\t// Your code here\n\tvector<int> v = { 1,3,5,7,8,10,12\
    \ };\n\tvector<int> v1 = { 4,6,9,11 };\n\tvector<int> v2 = { 2 };\n\tint days\
    \ = 0;\n\tint month = 0;\n\tint year = 0;\n\tint i = 0;\n\tint sum = 0;\n\tif\
    \ (date.size() != 10)\n\t\treturn false;\n\twhile (date[i] != '-')\n\t{\n\t\t\
    month = month * 10 + (date[i] - '0');\n\t\ti++;\n\t}\n\ti++;\n\twhile (date[i]\
    \ != '-')\n\t{\n\t\tdays = days * 10 + (date[i] - '0');\n\t\ti++;\n\t}\n\ti++;\n\
    \twhile (i != date.size())\n\t{\n\t\tyear = year * 10 + (date[i] - '0');\n\t\t\
    i++;\n\t}\n\tfor (int i = 0; i < v.size(); i++)\n\t{\n\t\tif (month == v[i])\n\
    \t\t{\n\t\t\tif (days <= 31 && days >= 1)\n\t\t\t\tsum++;\n\t\t}\n\t}\n\tfor (int\
    \ i = 0; i < v1.size(); i++)\n\t{\n\t\tif (month == v1[i])\n\t\t{\n\t\t\tif (days\
    \ <= 30 && days >= 1)\n\t\t\t\tsum++;\n\t\t}\n\t}\n\tfor (int i = 0; i < v2.size();\
    \ i++)\n\t{\n\t\tif (month == v2[i])\n\t\t{\n\t\t\tif (days <= 29 && days >= 1)\n\
    \t\t\t\tsum++;\n\t\t}\n\t}\n\tif (month <= 12 && month >= 1 && sum != 0)\n\t\t\
    return true;\n\telse\n\t\treturn false;", "  int dd, mm, yyyy;\n  if(sscanf(date.c_str(),\
    \ \"%d-%d-%d\", &mm, &dd, &yyyy) != 3) return false;\n  if(yyyy < 0) return false;\n\
    \  switch(mm) {\n    case 1: case 3: case 5: case 7: case 8: case 10: case 12:\n\
    \      if(dd < 1 || dd > 31) return false;\n      break;\n    case 4: case 6:\
    \ case 9: case 11:\n      if(dd < 1 || dd > 30) return false;\n      break;\n\
    \    case 2:\n      if(dd < 1 || dd > 29) return false;\n      break;\n    default:\n\
    \      return false;\n  }\n  return true;", "    using namespace std;\n    if(date.size()==0)\n\
    \        return false;\n    vector<string> v(3);\n    int index=0;\n    for(int\
    \ i=0;i<date.size();i++){\n        if(date[i]=='-'){\n            index++;\n \
    \           continue;\n        }\n        v[index]+=date[i];\n    }\n    int m=stoi(v[0]);\n\
    \    int d=stoi(v[1]);\n    int y=stoi(v[2]);\n    if(m<1 || m>12)\n        return\
    \ false;\n    if(d<1)\n        return false;\n    if(m==1 || m==3 || m==5 || m==7\
    \ || m==8 || m==10 || m==12){\n        if(d>31)\n            return false;\n \
    \   }\n    else if(m==4 || m==6 || m==9 || m==11){\n        if(d>30)\n       \
    \     return false;\n    }\n    else if(m==2){\n        if(d>29)\n           \
    \ return false;\n    }\n    return true;", "  // Code here...\n  std::istringstream\
    \ ss(date);\n  std::string token;\n  std::vector<std::string> v;\n  while(std::getline(ss,\
    \ token, '-')) {\n      v.push_back(token);\n  }\n  if(v.size() != 3){\n     \
    \ return false;\n  }\n  for(int i = 0; i < v.size(); i++){\n      if(v[i].empty()){\n\
    \          return false;\n      }\n  }\n  int months = std::stoi(v[0]);\n  int\
    \ days = std::stoi(v[1]);\n  int years = std::stoi(v[2]);\n  if(months < 1 ||\
    \ months > 12){\n      return false;\n  }\n  if(days < 1 || days > 31){\n    \
    \  return false;\n  }\n  if(months == 4 || months == 6 || months == 9 || months\
    \ == 11){\n      if(days > 30){\n          return false;\n      }\n  }\n  if(months\
    \ == 2){\n      if(days > 29){\n          return false;\n      }\n  }\n  return\
    \ true;", "    // TODO\n    std::cout<<date<<std::endl;\n    std::vector<int>\
    \ month(12,0);\n    month[0]=31;\n    month[1]=28;\n    month[2]=31;\n    month[3]=30;\n\
    \    month[4]=31;\n    month[5]=30;\n    month[6]=31;\n    month[7]=31;\n    month[8]=30;\n\
    \    month[9]=31;\n    month[10]=30;\n    month[11]=31;\n    std::vector<int>day(31,0);\n\
    \    std::vector<int>year(31,0);\n    std::stringstream ss(date);\n    std::string\
    \ temp;\n    int i=0;\n    while(std::getline(ss,temp,'-')){\n        if(i==0){\n\
    \            if(stoi(temp)<1||stoi(temp)>12){\n                return false;\n\
    \            }\n            day[i]=stoi(temp);\n        }\n        else if(i==1){\n\
    \            if(stoi(temp)<1||stoi(temp)>month[day[0]-1]){\n                return\
    \ false;\n            }\n            day[i]=stoi(temp);\n        }\n        else\
    \ if(i==2){\n            if(stoi(temp)<1900||stoi(temp)>2030){\n             \
    \   return false;\n            }\n            day[i]=stoi(temp);\n        }\n\
    \        i++;\n    }\n    if(i!=3){\n        return false;\n    }\n    if(day[0]==2){\n\
    \        if(day[2]%4==0){\n            if(day[1]>29){\n                return\
    \ false;\n            }\n        }\n        else{\n            if(day[1]>28){\n\
    \                return false;\n            }\n        }\n    }\n    return true;",
  "\t// Remove spaces (if any)\n\tdate.erase(std::remove(date.begin(), date.end(),\
    \ ' '), date.end());\n\tint date_size = date.size();\n\t// Check if date is of\
    \ correct size\n\tif (date_size == 10) {\n\t\tint month = stoi(date.substr(0,\
    \ 2));\n\t\tint day = stoi(date.substr(3, 2));\n\t\tint year = stoi(date.substr(6,\
    \ 4));\n\t\t// Check if month is 1 to 12\n\t\tif (month >= 1 && month <= 12) {\n\
    \t\t\t// Check if day is valid\n\t\t\tif (month == 1 || month == 3 || month ==\
    \ 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n\t\t\t\tif (day\
    \ >= 1 && day <= 31) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\
    \ if (month == 4 || month == 6 || month == 9 || month == 11) {\n\t\t\t\tif (day\
    \ >= 1 && day <= 30) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\
    \ if (month == 2) {\n\t\t\t\tif (day >= 1 && day <= 29) {\n\t\t\t\t\treturn true;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;", "    using namespace std;\n\
    \    string months[12] = {\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\"\
    , \"08\", \"09\", \"10\", \"11\", \"12\"};\n    string days[31] = {\"01\", \"\
    02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\",\
    \ \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\"\
    , \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"\
    };\n    string current_month = date.substr(0, 2);\n    string current_day = date.substr(3,\
    \ 2);\n    string current_year = date.substr(6, 4);\n    if(date.size() == 0)\
    \ {\n        return false;\n    }\n    else if(find(begin(months), end(months),\
    \ current_month) == end(months)) {\n        return false;\n    }\n    else if(find(begin(days),\
    \ end(days), current_day) == end(days)) {\n        return false;\n    }\n    else\
    \ if(date.size() != 10) {\n        return false;\n    }\n    else if(stoi(current_year)\
    \ < 1970) {\n        return false;\n    }\n    else if(stoi(current_month) ==\
    \ 1 || stoi(current_month) == 3 || stoi(current_month) == 5 || stoi(current_month)\
    \ == 7 || stoi(current_month) == 8 || stoi(current_month) == 10 || stoi(current_month)\
    \ == 12) {\n        if(stoi(current_day) < 1 || stoi(current_day) > 31) {\n  \
    \          return false;\n        }\n    }\n    else if(stoi(current_month) ==\
    \ 4 || stoi(current_month) == 6 || stoi(current_month) == 9 || stoi(current_month)\
    \ == 11) {\n        if(stoi(current_day) < 1 || stoi(current_day) >", "  if(date.length()==0)\n\
    \    return false;\n  int n = date.length();\n  if(date[2] != '-' || date[5] !=\
    \ '-')\n    return false;\n  if(date[0] > '3' || date[0] == '0')\n    return false;\n\
    \  if(date[0] == '3' && date[1] > '1')\n    return false;\n  if(date[3] > '1'\
    \ || date[3] == '0')\n    return false;\n  if(date[0] == '1' && date[1] == '2'\
    \ && date[3] == '0' && date[4] > '2')\n    return false;\n  if(date[3] == '1'\
    \ && date[4] > '2')\n    return false;\n  if(date[3] == '0' && date[4] == '2'\
    \ && date[0] == '0' && date[1] > '2')\n    return false;\n  if(date[0] == '0'\
    \ && date[1] == '2' && date[3] == '2' && date[4] > '8')\n    return false;\n \
    \ for(int i=6;i<n;i++)\n  {\n    if(date[i] < '0' || date[i] > '9')\n      return\
    \ false;\n  }\n  return true;", "    std::stringstream strStream(date);\n    std::string\
    \ segment;\n    std::vector<std::string> seglist;\n\n    while(std::getline(strStream,\
    \ segment, '-'))\n    {\n       seglist.push_back(segment);\n    }\n    if(seglist.size()\
    \ != 3)\n        return false;\n    else\n    {\n        if((stoi(seglist[0])\
    \ < 1) || (stoi(seglist[0]) > 12))\n            return false;\n        if((stoi(seglist[0])\
    \ == 1) || (stoi(seglist[0]) == 3) || (stoi(seglist[0]) == 5) || (stoi(seglist[0])\
    \ == 7) || (stoi(seglist[0]) == 8) || (stoi(seglist[0]) == 10) || (stoi(seglist[0])\
    \ == 12))\n        {\n            if((stoi(seglist[1]) < 1) || (stoi(seglist[1])\
    \ > 31))\n                return false;\n        }\n        else if((stoi(seglist[0])\
    \ == 4) || (stoi(seglist[0]) == 6) || (stoi(seglist[0]) == 9) || (stoi(seglist[0])\
    \ == 11))\n        {\n            if((stoi(seglist[1]) < 1) || (stoi(seglist[1])\
    \ > 30))\n                return false;\n        }\n        else if(stoi(seglist[0])\
    \ == 2)\n        {\n            if((stoi(seglist[1]) < 1) || (stoi(seglist[1])\
    \ > 29))\n                return false;\n        }\n        return true;\n   \
    \ }", "  // your code here\n  const int num_of_days[] = {31,28,31,30,31,30,31,31,30,31,30,31};\n\
    \  int index;\n  int days = 0;\n  std::string temp = \"\";\n  std::string input\
    \ = date;\n  std::vector<std::string> test;\n  // std::cout << input << std::endl;\n\
    \  int length = input.length();\n  if(input[2] == '-' && input[5] == '-')\n  {\n\
    \    for(int i = 0; i < length; ++i)\n    {\n      if(input[i] == '-')\n     \
    \ {\n        // std::cout << \"We enter the loop\" << std::endl;\n        if(temp\
    \ == \"\")\n        {\n          return false;\n        }\n        test.push_back(temp);\n\
    \        temp = \"\";\n      }\n      else\n      {\n        temp += input[i];\n\
    \      }\n    }\n    test.push_back(temp);\n    for(int i = 0; i < test.size();\
    \ ++i)\n    {\n      std::cout << test[i] << std::endl;\n    }\n    if(test.size()\
    \ != 3)\n    {\n      return false;\n    }\n    int month = stoi(test[0]);\n \
    \   int day = stoi(test[1]);\n    int year = stoi(test[2]);\n    // std::cout\
    \ << month << std::endl;\n    // std::cout << day << std::endl;\n    // std::cout\
    \ << year << std::endl;\n    if(month < 1 || month > 12)\n    {\n      return\
    \ false;\n    }\n    if(month == 2)\n    {\n      if(day < 1 || day > 29)\n  \
    \    {\n        return false;\n      }\n    }\n    if(month == 1 || month == 3\
    \ || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)\n \
    \   {\n      if(day < 1 || day > 31)\n      {\n        return false;", "    std::vector<std::string>\
    \ v = {\n        \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\"\
    , \"09\", \"10\", \"11\", \"12\"\n    };\n    if( date.empty() ) return false;\n\
    \    int m = std::find(v.begin(), v.end(), date.substr(0, 2)) - v.begin();\n \
    \   if( !( m >= 0 && m < 12 ) ) return false;\n    if( m == 1 ) {\n        int\
    \ d = std::stoi(date.substr(3, 2));\n        if( !( d >= 1 && d <= 29 ) ) return\
    \ false;\n    } else if( m == 0 || m == 2 || m == 4 || m == 6 || m == 7 || m ==\
    \ 9 || m == 11 ) {\n        int d = std::stoi(date.substr(3, 2));\n        if(\
    \ !( d >= 1 && d <= 31 ) ) return false;\n    } else {\n        int d = std::stoi(date.substr(3,\
    \ 2));\n        if( !( d >= 1 && d <= 30 ) ) return false;\n    }\n    return\
    \ true;", "    int mm, dd, yyyy;\n    int pos = date.find('-');\n    if (pos ==\
    \ std::string::npos) return false;\n    std::string first = date.substr(0, pos);\n\
    \    date = date.substr(pos + 1);\n    pos = date.find('-');\n    if (pos == std::string::npos)\
    \ return false;\n    std::string second = date.substr(0, pos);\n    date = date.substr(pos\
    \ + 1);\n    std::string third = date;\n    if (first.length() != 2 || second.length()\
    \ != 2 || third.length() != 4) return false;\n    std::stringstream ss(first);\n\
    \    ss >> mm;\n    ss.clear();\n    ss.str(second);\n    ss >> dd;\n    ss.clear();\n\
    \    ss.str(third);\n    ss >> yyyy;\n    if (mm < 1 || mm > 12) return false;\n\
    \    if (mm == 2) {\n        if (dd < 1 || dd > 29) return false;\n    } else\
    \ if (mm == 4 || mm == 6 || mm == 9 || mm == 11) {\n        if (dd < 1 || dd >\
    \ 30) return false;\n    } else {\n        if (dd < 1 || dd > 31) return false;\n\
    \    }\n    return true;", '    return true;', "    std::string delimiter = \"\
    -\";\n    size_t pos = 0;\n    std::string token;\n    std::vector<std::string>\
    \ date_vec;\n    while ((pos = date.find(delimiter)) != std::string::npos) {\n\
    \        token = date.substr(0, pos);\n        date_vec.push_back(token);\n  \
    \      date.erase(0, pos + delimiter.length());\n    }\n    date_vec.push_back(date);\n\
    \    std::string month = date_vec[0];\n    std::string day = date_vec[1];\n  \
    \  std::string year = date_vec[2];\n    if (month.size() != 2 || day.size() !=\
    \ 2 || year.size() != 4){\n        return false;\n    }\n    int month_num = std::stoi(month);\n\
    \    int day_num = std::stoi(day);\n    int year_num = std::stoi(year);\n    if\
    \ (year_num < 0){\n        return false;\n    }\n    if (month_num < 1 || month_num\
    \ > 12){\n        return false;\n    }\n    if (month_num == 1 || month_num ==\
    \ 3 || month_num == 5 || month_num == 7 || month_num == 8 || month_num == 10 ||\
    \ month_num == 12){\n        if (day_num < 1 || day_num > 31){\n            return\
    \ false;\n        }\n    } else if (month_num == 4 || month_num == 6 || month_num\
    \ == 9 || month_num == 11){\n        if (day_num < 1 || day_num > 30){\n     \
    \       return false;\n        }\n    } else if (month_num == 2){\n        if\
    \ (day_num < 1 || day_num > 29){\n            return false;\n        }\n    }\n\
    \    return true;", "    // Your code here\n    // for date\n    if(date.empty())\
    \ {\n      return false;\n    }\n    int dd, mm, yyyy;\n    try {\n      dd =\
    \ stoi(date.substr(0, 2));\n      mm = stoi(date.substr(3, 2));\n      yyyy =\
    \ stoi(date.substr(6, 4));\n    } catch(std::invalid_argument) {\n      return\
    \ false;\n    } catch(std::out_of_range) {\n      return false;\n    }\n    if(dd\
    \ <= 0 || dd > 31) {\n      return false;\n    }\n    if(mm <= 0 || mm > 12) {\n\
    \      return false;\n    }\n    if(yyyy <= 0) {\n      return false;\n    }\n\
    \    if(mm == 2) {\n      if(dd > 29) {\n        return false;\n      }\n    }\
    \ else if(mm == 4 || mm == 6 || mm == 9 || mm == 11) {\n      if(dd > 30) {\n\
    \        return false;\n      }\n    }\n    if(date[2] != '-' || date[5] != '-')\
    \ {\n      return false;\n    }\n    return true;", "\tstd::vector<std::string>\
    \ months_31 = {\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"12\"};\n\tstd::vector<std::string>\
    \ months_30 = {\"04\", \"06\", \"09\", \"11\"};\n\tif (date.size() == 0) {\n\t\
    \treturn false;\n\t}\n\telse {\n\t\tstd::vector<std::string> date_vec = {date.substr(0,\
    \ 2), date.substr(3, 2), date.substr(6, 4)};\n\t\tif (date_vec[0] == \"02\") {\n\
    \t\t\tif (stoi(date_vec[1]) > 29) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\
    \telse if (std::find(months_31.begin(), months_31.end(), date_vec[0]) != months_31.end())\
    \ {\n\t\t\tif (stoi(date_vec[1]) > 31) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\
    }\n\t\telse if (std::find(months_30.begin(), months_30.end(), date_vec[0]) !=\
    \ months_30.end()) {\n\t\t\tif (stoi(date_vec[1]) > 30) {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t\tif (stoi(date_vec[0])\
    \ > 12) {\n\t\t\treturn false;\n\t\t}\n\t\tif (date.find(\"-\") == std::string::npos)\
    \ {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}", "\tstd::string day;\n\
    \tstd::string month;\n\tstd::string year;\n\tif (date[2] != '-' || date[5] !=\
    \ '-') {\n\t\treturn false;\n\t}\n\tfor (int i = 0; i < date.length(); i++) {\n\
    \t\tif (i < 2) {\n\t\t\tmonth += date[i];\n\t\t}\n\t\telse if (i >= 2 && i < 5)\
    \ {\n\t\t\tday += date[i];\n\t\t}\n\t\telse {\n\t\t\tyear += date[i];\n\t\t}\n\
    \t}\n\tif (month == \"01\" || month == \"03\" || month == \"05\" || month == \"\
    07\" || month == \"08\" || month == \"10\" || month == \"12\") {\n\t\tif (stoi(day)\
    \ < 1 || stoi(day) > 31) {\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (month\
    \ == \"04\" || month == \"06\" || month == \"09\" || month == \"11\") {\n\t\t\
    if (stoi(day) < 1 || stoi(day) > 30) {\n\t\t\treturn false;\n\t\t}\n\t}\n\telse\
    \ if (month == \"02\") {\n\t\tif (stoi(day) < 1 || stoi(day) > 29) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\telse {\n\t\treturn false;\n\t}\n\tif (stoi(month) < 1\
    \ || stoi(month) > 12) {\n\t\treturn false;\n\t}\n\tif (year.length() != 4) {\n\
    \t\treturn false;\n\t}\n\treturn true;", "  if(date.size() == 0) return false;\n\
    \  vector<string> vec = split(date, '-');\n  int month = stoi(vec[0]);\n  int\
    \ day = stoi(vec[1]);\n  int year = stoi(vec[2]);\n  if(year < 1000 || year >\
    \ 9999) return false;\n  if(month < 1 || month > 12) return false;\n  if(day <\
    \ 1 || day > 31) return false;\n  if(month == 2) {\n    if(day > 29) return false;\n\
    \  }\n  if(month == 4 || month == 6 || month == 9 || month == 11) {\n    if(day\
    \ > 30) return false;\n  }\n  return true;", "    if(date.size() == 0)\n     \
    \   return false;\n    if(date.find(\"-\") == std::string::npos)\n        return\
    \ false;\n    if(date.find(\"-\") != date.rfind(\"-\"))\n        return false;\n\
    \    int month = std::stoi(date.substr(0,date.find(\"-\")));\n    int day = std::stoi(date.substr(date.find(\"\
    -\")+1,date.rfind(\"-\")-date.find(\"-\")));\n    int year = std::stoi(date.substr(date.rfind(\"\
    -\")+1));\n    if(month > 12 || month < 1)\n        return false;\n    if(month\
    \ == 2){\n        if(day > 29 || day < 1)\n            return false;\n    }\n\
    \    else if(month == 1 || month == 3 || month == 5 || month == 7 || month ==\
    \ 8 || month == 10 || month == 12){\n        if(day > 31 || day < 1)\n       \
    \     return false;\n    }\n    else if(month == 4 || month == 6 || month == 9\
    \ || month == 11){\n        if(day > 30 || day < 1)\n            return false;\n\
    \    }\n    return true;", "  // Not empty\n  if (date.empty()) {\n    return\
    \ false;\n  }\n  std::regex pattern(\"(\\\\d{2})-(\\\\d{2})-(\\\\d{4})\");\n \
    \ // Regex matching\n  if (!std::regex_match(date, pattern)) {\n    return false;\n\
    \  }\n  // Check bounds\n  int month = atoi(date.substr(0, 2).c_str());\n  int\
    \ day = atoi(date.substr(3, 2).c_str());\n  int year = atoi(date.substr(6, 4).c_str());\n\
    \  if (month > 12 || month < 1) {\n    return false;\n  }\n  int daysPerMonth[12]\
    \ = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n  if (year % 4 == 0) {\n\
    \    daysPerMonth[1] = 29;\n  }\n  if (day > daysPerMonth[month - 1] || day <\
    \ 1) {\n    return false;\n  }\n  return true;", "    int day = std::stoi(date.substr(0,\
    \ 2));\n    int month = std::stoi(date.substr(3, 2));\n    int year = std::stoi(date.substr(6,\
    \ 4));\n    if (date.find(\"-\") == 2 && date.length() == 10) {\n        if (day\
    \ >= 1 && day <= 31 && (month == 1 || month == 3 || month == 5 || month == 7 ||\
    \ month == 8 || month == 10 || month == 12))\n            return true;\n     \
    \   else if (day >= 1 && day <= 30 && (month == 4 || month == 6 || month == 9\
    \ || month == 11))\n            return true;\n        else if (day >= 1 && day\
    \ <= 29 && month == 2)\n            return true;\n        else if (day == 29 &&\
    \ month == 2 && (year % 400 == 0 || (year % 4 == 0 && year % 100 != 0)))\n   \
    \         return true;\n        else\n            return false;\n    }\n    else\n\
    \        return false;", "    bool valid = true;\n    if (date.length() == 0)\
    \ {\n        valid = false;\n    } else {\n        if (date.find('-') == -1) {\n\
    \            valid = false;\n        } else {\n            std::string day, month,\
    \ year;\n            day = date.substr(0, date.find('-'));\n            date =\
    \ date.substr(date.find('-') + 1);\n            month = date.substr(0, date.find('-'));\n\
    \            date = date.substr(date.find('-') + 1);\n            year = date;\n\
    \            int dayNum = std::stoi(day);\n            int monthNum = std::stoi(month);\n\
    \            int yearNum = std::stoi(year);\n            if (monthNum == 2) {\n\
    \                if (dayNum > 29) {\n                    valid = false;\n    \
    \            }\n            } else if (monthNum == 4 || monthNum == 6 || monthNum\
    \ == 9 || monthNum == 11) {\n                if (dayNum > 30) {\n            \
    \        valid = false;\n                }\n            } else if (monthNum ==\
    \ 1 || monthNum == 3 || monthNum == 5 || monthNum == 7 || monthNum == 8 || monthNum\
    \ == 10 || monthNum == 12) {\n                if (dayNum > 31) {\n           \
    \         valid = false;\n                }\n            } else {\n          \
    \      valid = false;\n            }\n            if (monthNum > 12) {\n     \
    \           valid = false;\n            }\n        }\n    }\n    return valid;",
  "  // split the string by '-'\n  std::string temp[3];\n  int index = 0;\n  for (int\
    \ i = 0; i < date.length(); i++) {\n    if (date[i] == '-') {\n      index++;\n\
    \    } else {\n      temp[index] += date[i];\n    }\n  }\n  // for (int i = 0;\
    \ i < 3; i++) {\n  //   std::cout << temp[i] << std::endl;\n  // }\n  int month\
    \ = std::stoi(temp[0]);\n  int day = std::stoi(temp[1]);\n  int year = std::stoi(temp[2]);\n\
    \  // std::cout << month << \" \" << day << \" \" << year << std::endl;\n  if\
    \ (month < 1 || month > 12) {\n    return false;\n  }\n  if (day < 1 || day >\
    \ 31) {\n    return false;\n  }\n  if (day > 30 && (month == 4 || month == 6 ||\
    \ month == 9 || month == 11)) {\n    return false;\n  }\n  if (day > 29 && month\
    \ == 2) {\n    return false;\n  }\n  return true;", "    //your code here\n  \
    \  if(date.size()==0) return false;\n    std::stringstream ss(date);\n    int\
    \ day,month,year;\n    if(ss.peek()=='0'){\n        ss.ignore();\n        if(ss.peek()=='0')\
    \ ss.ignore();\n    }\n    ss>>month;\n    if(ss.peek()=='-') ss.ignore();\n \
    \   if(ss.peek()=='0'){\n        ss.ignore();\n        if(ss.peek()=='0') ss.ignore();\n\
    \    }\n    ss>>day;\n    if(ss.peek()=='-') ss.ignore();\n    if(ss.peek()=='0'){\n\
    \        ss.ignore();\n        if(ss.peek()=='0') ss.ignore();\n    }\n    ss>>year;\n\
    \    if(month==1||month==3||month==5||month==7||month==8||month==10||month==12){\n\
    \        if(day<1||day>31) return false;\n    }\n    else if(month==4||month==6||month==9||month==11){\n\
    \        if(day<1||day>30) return false;\n    }\n    else if(month==2){\n    \
    \    if(day<1||day>29) return false;\n    }\n    else return false;\n    if(month<1||month>12)\
    \ return false;\n    std::string rem;\n    if(ss>>rem) return false;\n    return\
    \ true;", "    std::vector<int> valid_days = {31,29,31,30,31,30,31,31,30,31,30,31};\n\
    \    int month, day, year;\n    if(date.size() < 10)\n        return false;\n\
    \    try{\n        month = std::stoi(date.substr(0,2));\n        day = std::stoi(date.substr(3,2));\n\
    \        year = std::stoi(date.substr(6,4));\n    }\n    catch(std::invalid_argument&\
    \ e){\n        return false;\n    }\n    catch(std::out_of_range& e){\n      \
    \  return false;\n    }\n    if(month < 1 || month > 12)\n        return false;\n\
    \    if(day < 1 || day > valid_days[month-1])\n        return false;\n    if(year\
    \ < 1)\n        return false;\n    return true;", "    if(date.size() == 0)\n\
    \        return false;\n    if(date.find(\"-\") == std::string::npos)\n      \
    \  return false;\n    std::string datepart[3];\n    int datepart_i = 0;\n    for(int\
    \ i = 0; i < date.size(); i++) {\n        if(date[i] == '-') {\n            datepart_i++;\n\
    \            continue;\n        }\n        if(datepart_i > 2)\n            return\
    \ false;\n        datepart[datepart_i] += date[i];\n    }\n    int d = std::stoi(datepart[1]);\n\
    \    int m = std::stoi(datepart[0]);\n    if(m < 1 || m > 12)\n        return\
    \ false;\n    if(m == 2) {\n        if(d < 1 || d > 29)\n            return false;\n\
    \    }\n    else if(m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10\
    \ || m == 12) {\n        if(d < 1 || d > 31)\n            return false;\n    }\n\
    \    else {\n        if(d < 1 || d > 30)\n            return false;\n    }\n \
    \   return true;", "\t// You code here\n\tchar delim = '-';\n\tvector<int>vec;\n\
    \tstringstream ss(date);\n\tstring str;\n\tint x;\n\twhile (getline(ss, str, delim))\n\
    \t{\n\t\tstringstream s(str);\n\t\ts >> x;\n\t\tvec.push_back(x);\n\t}\n\tif (vec.size()\
    \ == 3)\n\t{\n\t\tint d = vec[0];\n\t\tint m = vec[1];\n\t\tint y = vec[2];\n\t\
    \tif (m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12)\n\t\
    \t{\n\t\t\tif (d >= 1 && d <= 31)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\
    \telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (m == 4 ||\
    \ m == 6 || m == 9 || m == 11)\n\t\t{\n\t\t\tif (d >= 1 && d <= 30)\n\t\t\t{\n\
    \t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\
    \t}\n\t\t}\n\t\telse if (m == 2)\n\t\t{\n\t\t\tif (d >= 1 && d <= 29)\n\t\t\t\
    {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse\n\t{\n\
    \t\treturn false;\n\t}", "    int day,month,year;\n    // stringstream ss;\n \
    \   // ss << date;\n    // ss >> month;\n    // ss >> day;\n    // ss >> year;\n\
    \    // if(ss.fail())\n    //     return false;\n    std::string delimiter = \"\
    -\";\n    std::vector<std::string> tokens;\n    size_t pos = 0;\n    std::string\
    \ token;\n    while ((pos = date.find(delimiter)) != std::string::npos) {\n  \
    \      token = date.substr(0, pos);\n        tokens.push_back(token);\n      \
    \  date.erase(0, pos + delimiter.length());\n    }\n    tokens.push_back(date);\n\
    \    if(tokens.size()!=3)\n        return false;\n    month = stoi(tokens[0]);\n\
    \    day = stoi(tokens[1]);\n    year = stoi(tokens[2]);\n    if(day<=0 || month<=0\
    \ || year<=0)\n        return false;\n    if(month<1 || month>12)\n        return\
    \ false;\n    if(month==2)\n    {\n        if(day<1 || day>29)\n            return\
    \ false;\n    }\n    else if(month==1 || month==3 || month==5 || month==7 || month==8\
    \ || month==10 || month==12)\n    {\n        if(day<1 || day>31)\n           \
    \ return false;\n    }\n    else\n    {\n        if(day<1 || day>30)\n       \
    \     return false;\n    }\n    return true;", "\tint a[3];\n\t//std::cout<<date.substr(0,date.find('-'))<<\"\
    \ \"<<date.substr(date.find('-')+1,date.length())<<\" \"<<date.substr(date.find('-')+1,date.find('-',date.find('-')+1))<<\"\
    \ \"<<date.substr(date.find('-',date.find('-')+1)+1,date.length())<<\"\\n\";\n\
    \tfor(int i=0;i<3;i++){\n\t\tstd::string s=date.substr(0,date.find('-'));\n\t\t\
    a[i]=std::stoi(s);\n\t\tdate=date.substr(date.find('-')+1,date.length());\n\t\
    }\n\tif(a[0]<1||a[0]>12||a[1]<1||a[1]>31||a[2]<0||a[2]>9999)\n\t\treturn false;\n\
    \tif(a[0]==2&&a[1]>29)\n\t\treturn false;\n\tif((a[0]==4||a[0]==6||a[0]==9||a[0]==11)&&a[1]>30)\n\
    \t\treturn false;\n\treturn true;", "    const char *cstr = date.c_str();\n  \
    \  // Check the date is in a valid format\n    if(strlen(cstr) != 10) {\n    \
    \    return false;\n    }\n    // Check the date is in the format mm-dd-yyyy\n\
    \    char month[3], day[3], year[5];\n    int i = 0;\n    while(cstr[i] != '-')\
    \ {\n        month[i] = cstr[i];\n        i++;\n    }\n    month[i] = '\\0';\n\
    \    i++;\n    int j = 0;\n    while(cstr[i] != '-') {\n        day[j] = cstr[i];\n\
    \        i++;\n        j++;\n    }\n    day[j] = '\\0';\n    i++;\n    j = 0;\n\
    \    while(cstr[i] != '\\0') {\n        year[j] = cstr[i];\n        i++;\n   \
    \     j++;\n    }\n    year[j] = '\\0';\n    int dayn = std::stoi(day), monthn\
    \ = std::stoi(month), yearn = std::stoi(year);\n    if(monthn > 12 || monthn <\
    \ 1) {\n        return false;\n    }\n    if(monthn == 2) {\n        if(dayn >\
    \ 29 || dayn < 1) {\n            return false;\n        }\n    }\n    else if(monthn\
    \ == 4 || monthn == 6 || monthn == 9 || monthn == 11) {\n        if(dayn > 30\
    \ || dayn < 1) {\n            return false;\n        }\n    }\n    else {\n  \
    \      if(dayn > 31 || dayn < 1) {\n            return false;\n        }\n   \
    \ }\n    return true;", "\tstd::cout << \"Date is: \" << date << std::endl;\n\t\
    int count = 0;\n\tfor (int i = 0; i < date.length(); i++) {\n\t\tif (date[i] ==\
    \ '-') {\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (count != 2) {\n\t\treturn false;\n\
    \t}\n\tstd::stringstream ss(date);\n\tstd::string temp;\n\tstd::vector<std::string>\
    \ result;\n\twhile (std::getline(ss, temp, '-')) {\n\t\tresult.push_back(temp);\n\
    \t}\n\tint day = stoi(result[1]);\n\tint month = stoi(result[0]);\n\tint year\
    \ = stoi(result[2]);\n\tif (year < 1) {\n\t\treturn false;\n\t}\n\tif (month <\
    \ 1 || month > 12) {\n\t\treturn false;\n\t}\n\tif (month == 1 || month == 3 ||\
    \ month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n\t\t\
    if (day < 1 || day > 31) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (month == 4\
    \ || month == 6 || month == 9 || month == 11) {\n\t\tif (day < 1 || day > 30)\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (month == 2) {\n\t\tif (day < 1 ||\
    \ day > 29) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;", "    if(date.size()\
    \ == 0) return false;\n    std::string month = date.substr(0,2);\n    std::string\
    \ day = date.substr(3,2);\n    std::string year = date.substr(6,4);\n    if(month.size()\
    \ > 2 || day.size() > 2 || year.size() > 4) return false;\n    int m = atoi(month.c_str());\n\
    \    int d = atoi(day.c_str());\n    int y = atoi(year.c_str());\n    bool invalid\
    \ = d < 1 || m < 1 || m > 12 || y < 0;\n    if(invalid) return false;\n    switch(m){\n\
    \        case 1:\n        case 3:\n        case 5:\n        case 7:\n        case\
    \ 8:\n        case 10:\n        case 12:\n            if(d > 31) return false;\n\
    \            break;\n        case 4:\n        case 6:\n        case 9:\n     \
    \   case 11:\n            if(d > 30) return false;\n            break;\n     \
    \   case 2:\n            if(d > 29) return false;\n            break;\n    }\n\
    \    return true;", "    // your code here\n    std::regex expression (\"(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}\"\
    );\n    return std::regex_match(date, expression);", '    return false;', "  //\
    \ your code here\n  bool valid=false;\n  int year, month, day;\n  bool valid_month_day=false;\n\
    \  int n=date.length();\n  if(n==10){\n    if( (date[2]=='-') && (date[5]=='-')\
    \ ){\n      // only if the date satisfies the format, month, day and year are\
    \ stored\n      // in the corresponding variables\n      year = std::stoi(date.substr(6,4));\n\
    \      month = std::stoi(date.substr(0,2));\n      day = std::stoi(date.substr(3,2));\n\
    \      // only if the month and day satisfy the condition, the format of the date\n\
    \      // is valid\n      if( month>=1 && month<=12 ){\n        if( (month==1\
    \ || month==3 || month==5 || month==7 || month==8 || month==10 || month==12) &&\
    \ (day>=1 && day<=31) ){\n          valid_month_day=true;\n        }\n       \
    \ else if( (month==4 || month==6 || month==9 || month==11) && (day>=1 && day<=30)\
    \ ){\n          valid_month_day=true;\n        }\n        else if( (month==2)\
    \ && (day>=1 && day<=29) ){\n          valid_month_day=true;\n        }\n    \
    \  }\n    }\n  }\n  if(valid_month_day==true){\n    valid=true;\n  }\n  return\
    \ valid;", "    \n    int days[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31,\
    \ 30, 31};\n    int day, month, year;\n    int length = date.length();\n    if(length\
    \ < 8 || length > 10)\n        return false;\n    if(date[2] != '-' || date[5]\
    \ != '-')\n        return false;\n    if(length == 10)\n    {\n        day = (date[0]\
    \ - '0') * 10 + (date[1] - '0');\n        month = (date[3] - '0') * 10 + (date[4]\
    \ - '0');\n        year = (date[6] - '0') * 1000 + (date[7] - '0') * 100 + (date[8]\
    \ - '0') * 10 + (date[9] - '0');\n    }\n    else\n    {\n        day = date[0]\
    \ - '0';\n        month = (date[2] - '0') * 10 + (date[3] - '0');\n        year\
    \ = (date[4] - '0') * 1000 + (date[5] - '0') * 100 + (date[6] - '0') * 10 + (date[7]\
    \ - '0');\n    }\n    if(month < 1 || month > 12)\n        return false;\n   \
    \ if(day < 1 || day > days[month - 1])\n        return false;\n    if(month ==\
    \ 2 && day == 29)\n    {\n        if(year % 400 == 0 || (year % 4 == 0 && year\
    \ % 100 != 0))\n            return true;\n        else\n            return false;\n\
    \    }\n    return true;", "    if(date.size()==0)\n        return false;\n  \
    \  std::string month = date.substr(0,2);\n    std::string day = date.substr(3,2);\n\
    \    std::string year = date.substr(6,4);\n    try{\n        int month_ = std::stoi(month);\n\
    \        int day_ = std::stoi(day);\n        int year_ = std::stoi(year);\n  \
    \      if(month_>12||month_<1)\n            return false;\n        if(month_==2){\n\
    \            if(day_>29||day_<1)\n                return false;\n        }\n \
    \       else if(month_==4||month_==6||month_==9||month_==11){\n            if(day_>30||day_<1)\n\
    \                return false;\n        }\n        else{\n            if(day_>31||day_<1)\n\
    \                return false;\n        }\n        return true;\n    }\n    catch(std::invalid_argument\
    \ const &e){\n        return false;\n    }\n    catch(std::out_of_range const\
    \ &e){\n        return false;\n    }", "    if(date.size() == 0) return false;\n\
    \    vector<string> dt = explode(date, '-');\n    if(dt.size() != 3) return false;\n\
    \    int m = atoi(dt[0].c_str());\n    int d = atoi(dt[1].c_str());\n    int y\
    \ = atoi(dt[2].c_str());\n    if(m < 1 || m > 12) return false;\n    if(m == 2)\
    \ {\n        if(d < 1 || d > 29) return false;\n    } else if(m == 1 || m == 3\
    \ || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) {\n        if(d < 1 ||\
    \ d > 31) return false;\n    } else {\n        if(d < 1 || d > 30) return false;\n\
    \    }\n    return true;", "    std::cout << date << std::endl;\n    std::stringstream\
    \ ss(date);\n    int dd, mm, yyyy;\n    char c;\n    ss >> mm >> c >> dd >> c\
    \ >> yyyy;\n    // std::cout << mm << dd << yyyy << std::endl;\n    if (ss.fail())\
    \ {\n        return false;\n    }\n    if (dd < 1 || dd > 31) {\n        return\
    \ false;\n    }\n    if (mm < 1 || mm > 12) {\n        return false;\n    }\n\
    \    if (mm == 2 && dd > 29) {\n        return false;\n    }\n    if (mm == 4\
    \ || mm == 6 || mm == 9 || mm == 11) {\n        if (dd > 30) {\n            return\
    \ false;\n        }\n    }\n    return true;", "    int dd = (date[0] - '0') *\
    \ 10 + (date[1] - '0');\n    int mm = (date[3] - '0') * 10 + (date[4] - '0');\n\
    \    int yyyy = (date[6] - '0') * 1000 + (date[7] - '0') * 100 + (date[8] - '0')\
    \ * 10 + (date[9] - '0');\n    if (mm < 1 || mm > 12) return false;\n    if (dd\
    \ < 1 || dd > 31) return false;\n    if (mm == 2) {\n        int leap = yyyy %\
    \ 4 == 0 && yyyy % 100 != 0 || yyyy % 400 == 0;\n        if (dd > 29 || (dd ==\
    \ 29 && !leap)) return false;\n    }\n    else if (mm == 4 || mm == 6 || mm ==\
    \ 9 || mm == 11) {\n        if (dd > 30) return false;\n    }\n    else if (dd\
    \ > 31) return false;\n    return true;", "  int day, month, year;\n  std::stringstream\
    \ ss(date);\n  std::vector<std::string> date_vector;\n  while (ss.good()) {\n\
    \    std::string substr;\n    getline(ss, substr, '-');\n    date_vector.push_back(substr);\n\
    \  }\n  if(date_vector.size() != 3){\n    return false;\n  }\n  else{\n    day\
    \ = stoi(date_vector[1]);\n    month = stoi(date_vector[0]);\n    year = stoi(date_vector[2]);\n\
    \  }\n  if(month < 1 || month > 12){\n    return false;\n  }\n  else if(month\
    \ == 2){\n    if(day < 1 || day > 29){\n      return false;\n    }\n  }\n  else\
    \ if(month % 2 == 0){\n    if(day < 1 || day > 30){\n      return false;\n   \
    \ }\n  }\n  else{\n    if(day < 1 || day > 31){\n      return false;\n    }\n\
    \  }\n  return true;", '    assert(false);', "    int first_dash, second_dash;\n\
    \    bool month_first = true;\n    int days;\n    int month;\n    int year;\n\
    \    if(date.length() == 0) return false;\n    for(int i = 0; i < date.length();\
    \ i++){\n        if(date[i] == '-'){\n            if(first_dash == 0){\n     \
    \           first_dash = i;\n            }\n            else if(second_dash ==\
    \ 0){\n                second_dash = i;\n            }\n            else{\n  \
    \              return false;\n            }\n        }\n    }\n    if(second_dash\
    \ != 9) return false;\n    if(date[2] != '-' || date[5] != '-') return false;\n\
    \    month = std::stoi(date.substr(0, 2));\n    days = std::stoi(date.substr(3,\
    \ 2));\n    year = std::stoi(date.substr(6, 4));\n    if(month > 12 || month <\
    \ 1) return false;\n    if(days > 31 || days < 1) return false;\n    if(month\
    \ == 2){\n        if(days > 29) return false;\n    }\n    else if(month == 4 ||\
    \ month == 6 || month == 9 || month == 11){\n        if(days > 30) return false;\n\
    \    }\n    return true;", "  vector<string> datesplit;\n  string delimiter =\
    \ \"-\";\n  size_t pos = 0;\n  string token;\n  while ((pos = date.find(delimiter))\
    \ != string::npos) {\n    token = date.substr(0, pos);\n    datesplit.push_back(token);\n\
    \    date.erase(0, pos + delimiter.length());\n  }\n  datesplit.push_back(date);\n\
    \  int month = stoi(datesplit[0]);\n  int day = stoi(datesplit[1]);\n  int year\
    \ = stoi(datesplit[2]);\n  if (month < 1 || month > 12) {\n    return false;\n\
    \  }\n  if (month == 2) {\n    if (day < 1 || day > 29) {\n      return false;\n\
    \    }\n  }\n  if (month == 1 || month == 3 || month == 5 || month == 7 || month\
    \ == 8 || month == 10 || month == 12) {\n    if (day < 1 || day > 31) {\n    \
    \  return false;\n    }\n  }\n  if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n    if (day < 1 || day > 30) {\n      return false;\n    }\n\
    \  }\n  return true;", "  // Your code here\n  if(date.length()<10)\n  {\n   \
    \ return false;\n  }\n  else if(date[2]!='-' || date[5]!='-')\n  {\n    return\
    \ false;\n  }\n  else if(date[4]=='-' || date[4]=='/')\n  {\n    return false;\n\
    \  }\n  else if(date[0]=='-' || date[1]=='-')\n  {\n    return false;\n  }\n \
    \ else if(date[7]=='-' || date[7]=='/')\n  {\n    return false;\n  }\n  else if(date[6]=='-'\
    \ || date[6]=='/')\n  {\n    return false;\n  }\n  else if(date[3]=='-' || date[3]=='/')\n\
    \  {\n    return false;\n  }\n  else if(date[9]=='-' || date[9]=='/')\n  {\n \
    \   return false;\n  }\n  else if(date[8]=='-' || date[8]=='/')\n  {\n    return\
    \ false;\n  }\n  else if(date[9]!='0' && date[9]!='1' && date[9]!='2' && date[9]!='3'\
    \ && date[9]!='4' && date[9]!='5' && date[9]!='6' && date[9]!='7' && date[9]!='8'\
    \ && date[9]!='9')\n  {\n    return false;\n  }\n  else if(date[8]!='0' && date[8]!='1'\
    \ && date[8]!='2' && date[8]!='3' && date[8]!='4' && date[8]!='5' && date[8]!='6'\
    \ && date[8]!='7' && date[8]!='8' && date[8]!='9')\n  {\n    return false;\n \
    \ }\n  else if(date[7]!='0' && date[7]!='1' && date[", "    std::regex pattern(\"\
    (0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}\");\n    std::smatch matches;\n\
    \    if (std::regex_match(date, matches, pattern)) {\n        std::cout << \"\
    matched\\n\";\n        for (auto match : matches) {\n            std::cout <<\
    \ match << \"\\n\";\n        }\n        return true;\n    }\n    return false;",
  "  // Your code here\n  // int l=date.length();\n  // int a,b,c,d,e,f;\n  // a=date[0];\n\
    \  // b=date[1];\n  // c=date[3];\n  // d=date[4];\n  // e=date[6];\n  // f=date[7];\n\
    \  // if((a>=48 && a<=57) && (b>=48 && b<=57) && (c>=48 && c<=57) && (d>=48 &&\
    \ d<=57) && (e>=48 && e<=57) && (f>=48 && f<=57))\n  // {\n  //     std::cout<<\"\
    in if \"<<std::endl;\n  //     if((date[2]=='-') && (date[5]=='-'))\n  //    \
    \ {\n  //         std::cout<<\"in if 2\"<<std::endl;\n  //         if(((a>=48\
    \ && a<=51) || (a==48 && b>=48 && b<=57)) && ((c>=48 && c<=51) || (c==48 && d>=48\
    \ && d<=57)) && ((e>=48 && e<=50) || (e==48 && f>=48 && f<=57)))\n  //       \
    \  {\n  //             if(((a==49 && b>=48 && b<=57) || (a==48 && b>=49 && b<=57))\
    \ && ((c==49 && d>=48 && d<=57) || (c==48 && d>=49 && d<=57)) && ((e==49 && f>=48\
    \ && f<=57) || (e==48 && f>=49 && f<=57)))\n  //             {\n  //         \
    \        if(((a==48 && b==49) || (a==48 && b==50) || (a==48 && b==51)) && ((c==48\
    \ && d==49) || (c==48 && d==50) || (c==48 && d==51)) && ((e==48 && f==49) || (e==48",
  "  std::stringstream ss(date);\n  int d, m, y;\n  char t;\n  ss >> m >> t >> d >>\
    \ t >> y;\n  if (ss.fail()) return false;\n  if (m < 1 || m > 12) return false;\n\
    \  if (m == 2) {\n    if (d < 1 || d > 29) return false;\n  } else if (m == 4\
    \ || m == 6 || m == 9 || m == 11) {\n    if (d < 1 || d > 30) return false;\n\
    \  } else {\n    if (d < 1 || d > 31) return false;\n  }\n  return true;", " \
    \   if(date.size() == 0)\n        return false;\n    else if(date.size() != 10)\n\
    \        return false;\n    else if(date[2] != '-' || date[5] != '-')\n      \
    \  return false;\n    int days, months, years;\n    days = (date[0] - '0') * 10\
    \ + (date[1] - '0');\n    months = (date[3] - '0') * 10 + (date[4] - '0');\n \
    \   years = (date[6] - '0') * 1000 + (date[7] - '0') * 100 + (date[8] - '0') *\
    \ 10 + (date[9] - '0');\n    if(months < 1 || months > 12)\n        return false;\n\
    \    if(months == 1 || months == 3 || months == 5 || months == 7 || months ==\
    \ 8 || months == 10 || months == 12)\n    {\n        if(days < 1 || days > 31)\n\
    \            return false;\n    }\n    else if(months == 4 || months == 6 || months\
    \ == 9 || months == 11)\n    {\n        if(days < 1 || days > 30)\n          \
    \  return false;\n    }\n    else\n    {\n        if(years % 4 == 0)\n       \
    \ {\n            if(days < 1 || days > 29)\n                return false;\n  \
    \      }\n        else\n        {\n            if(days < 1 || days > 28)\n   \
    \             return false;\n        }\n    }\n    return true;", "    try {\n\
    \      if (date.length() != 10 || date[2] != '-' || date[5] != '-')\n        return\
    \ false;\n      auto days = std::stoi(date.substr(0, 2));\n      auto month =\
    \ std::stoi(date.substr(3, 2));\n      auto year = std::stoi(date.substr(6, 4));\n\
    \      if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8\
    \ || month == 10 || month == 12) {\n        if (days < 1 || days > 31)\n     \
    \     return false;\n      } else if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n        if (days < 1 || days > 30)\n          return false;\n\
    \      } else if (month == 2) {\n        if (days < 1 || days > 29)\n        \
    \  return false;\n      } else\n        return false;\n      if (month < 1 ||\
    \ month > 12)\n        return false;\n      if (year < 1)\n        return false;\n\
    \      return true;\n    } catch (...) {\n      return false;\n    }\n  }\nint\
    \ main()\n{\nassert(valid_date(\"03-11-2000\"));\nassert(!valid_date(\"15-01-2012\"\
    ));\nassert(!valid_date(\"04-0-2040\"));\nassert(valid_date(\"06-04-2020\"));\n\
    assert(!valid_date(\"06/04/2020\"));", "  int day = std::stoi(date.substr(0, 2));\n\
    \  int month = std::stoi(date.substr(3, 2));\n  int year = std::stoi(date.substr(6,\
    \ 4));\n  bool leap_year = (year % 4 == 0) && ((year % 100 != 0) || (year % 400\
    \ == 0));\n  if (month == 2) {\n    if (leap_year) {\n      return day >= 1 &&\
    \ day <= 29;\n    } else {\n      return day >= 1 && day <= 28;\n    }\n  } else\
    \ if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month\
    \ == 10 || month == 12) {\n    return day >= 1 && day <= 31;\n  } else if (month\
    \ == 4 || month == 6 || month == 9 || month == 11) {\n    return day >= 1 && day\
    \ <= 30;\n  } else {\n    return false;\n  }", "    // Write your code here\n\
    \    stringstream s(date);\n    int d,m,y;\n    char buff;\n    s>>m>>buff>>d>>buff>>y;\n\
    \    if(m>12 || m<1)\n        return false;\n    if(m==2)\n    {\n        if(d>29\
    \ || d<1)\n            return false;\n    }\n    else if(m==4 || m==6 || m==9\
    \ || m==11)\n    {\n        if(d>30 || d<1)\n            return false;\n    }\n\
    \    else\n    {\n        if(d>31 || d<1)\n            return false;\n    }\n\
    \    return true;", "  // Type your solution here\n  if(date==\"\") return false;\n\
    \  int d,m,y;\n  sscanf(date.c_str(),\"%d-%d-%d\",&m,&d,&y);\n  if(d<1 || d>31\
    \ || m<1 || m>12 || y<1) return false;\n  if(d==31) return (m==1 || m==3 || m==5\
    \ || m==7 || m==8 || m==10 || m==12);\n  if(d==30) return (m==4 || m==6 || m==9\
    \ || m==11);\n  if(d==29) return (m==2);\n  return true;", "    // Your code here\n\
    \    std::vector<std::string> v;\n    std::stringstream ss(date);\n    std::string\
    \ temp;\n    while(getline(ss, temp, '-'))\n        v.push_back(temp);\n    if(v.size()!=3)\
    \ return false;\n    try{\n        int month = stoi(v[0]);\n        int day =\
    \ stoi(v[1]);\n        int year = stoi(v[2]);\n        if(month<=0 || month>12)\
    \ return false;\n        if(day<=0 || day>31) return false;\n        if(month==2){\n\
    \            if(day>29) return false;\n        }else if(month==4 || month==6 ||\
    \ month==9 || month==11){\n            if(day>30) return false;\n        }\n \
    \       return true;\n    }catch(...){\n        return false;\n    }", "  // your\
    \ code here\n  int month,day,year;\n  std::stringstream ss(date);\n  char ch;\n\
    \  ss>>month>>ch>>day>>ch>>year;\n  std::vector<int>Days = {31,29,31,30,31,30,31,31,30,31,30,31};\n\
    \  if(month<=0||month>12)\n  return false;\n  if(day<=0||day>Days[month-1])\n\
    \  return false;\n  return true;", "\tbool val = true;\n\tif (date.size() != 10)\n\
    \t\tval = false;\n\telse if ((date[2] != '-') || (date[5] != '-'))\n\t\tval =\
    \ false;\n\telse if (date[0] > '1' || date[0] < '0')\n\t\tval = false;\n\telse\
    \ if (date[1] > '2' || date[1] < '0')\n\t\tval = false;\n\telse if (date[3] >\
    \ '3' || date[3] < '0')\n\t\tval = false;\n\telse if (date[4] > '9' || date[4]\
    \ < '0')\n\t\tval = false;\n\telse if (date[6] > '9' || date[6] < '0')\n\t\tval\
    \ = false;\n\telse if (date[7] > '9' || date[7] < '0')\n\t\tval = false;\n\telse\
    \ if (date[8] > '9' || date[8] < '0')\n\t\tval = false;\n\telse if (date[9] >\
    \ '9' || date[9] < '0')\n\t\tval = false;\n\treturn val;", "\tassert(date.size()\
    \ == 10);\n\tif(date.size() != 10) return false;\n\tstd::vector<int> nums;\n\t\
    int prev = 0;\n\tfor(int i = 0; i < date.size(); i++) {\n\t\tif(date[i] == '-')\
    \ {\n\t\t\tstd::string num = date.substr(prev, i - prev);\n\t\t\tnums.push_back(std::stoi(num));\n\
    \t\t\tprev = i + 1;\n\t\t}\n\t}\n\tstd::string last = date.substr(prev, date.size()\
    \ - prev);\n\tnums.push_back(std::stoi(last));\n\t// std::cout << \"Date: \" <<\
    \ nums[0] << ' ' << nums[1] << ' ' << nums[2] << '\\n';\n\tif(nums[0] == 0 ||\
    \ nums[1] == 0 || nums[2] == 0) return false;\n\t// std::cout << \"Here\\n\";\n\
    \tif(nums[0] == 1 || nums[0] == 3 || nums[0] == 5 || nums[0] == 7 || nums[0] ==\
    \ 8 || nums[0] == 10 || nums[0] == 12) {\n\t\tif(nums[1] < 1 || nums[1] > 31)\
    \ return false;\n\t}\n\tif(nums[0] == 4 || nums[0] == 6 || nums[0] == 9 || nums[0]\
    \ == 11) {\n\t\tif(nums[1] < 1 || nums[1] > 30) return false;\n\t}\n\tif(nums[0]\
    \ == 2) {\n\t\tif(nums[1] < 1 || nums[1] > 29) return false;\n\t}\n\tif(nums[0]\
    \ < 1 || nums[0] > 12) return false;\n\treturn true;", "    std::stringstream\
    \ ss(date);\n    int d, m, y;\n    char c;\n    if (ss >> m >> c >> d >> c >>\
    \ y) {\n        if (m >= 1 && m <= 12 && d >= 1 && d <= 31 && y >= 0) {\n    \
    \        if (m == 2) {\n                if (d <= 29) {\n                    return\
    \ true;\n                }\n            } else if (m == 4 || m == 6 || m == 9\
    \ || m == 11) {\n                if (d <= 30) {\n                    return true;\n\
    \                }\n            } else {\n                return true;\n     \
    \       }\n        }\n    }\n    return false;", "  try {\n    int day = stoi(date.substr(0,\
    \ 2));\n    int month = stoi(date.substr(3, 2));\n    int year = stoi(date.substr(6,\
    \ 4));\n    std::cout << year << std::endl;\n    std::cout << month << std::endl;\n\
    \    std::cout << day << std::endl;\n    if (day <= 0 || day > 31 || month <=\
    \ 0 || month > 12 || year <= 0)\n      return false;\n    if (month == 2) {\n\
    \      if (day <= 29) {\n        return true;\n      }\n      return false;\n\
    \    }\n    if (month == 4 || month == 6 || month == 9 || month == 11) {\n   \
    \   if (day <= 30) {\n        return true;\n      }\n      return false;\n   \
    \ }\n    return true;\n  } catch (...) {\n    return false;\n  }", "    const\
    \ char* date_str = date.c_str();\n    int day, month, year;\n    if (strlen(date_str)\
    \ < 10 || date_str[2] != '-' || date_str[5] != '-') {\n        return false;\n\
    \    }\n    sscanf(date_str, \"%d-%d-%d\", &month, &day, &year);\n    if (month\
    \ < 1 || month > 12) {\n        return false;\n    }\n    if (month == 2) {\n\
    \        if (day < 1 || day > 29) {\n            return false;\n        }\n  \
    \  } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n     \
    \   if (day < 1 || day > 30) {\n            return false;\n        }\n    } else\
    \ {\n        if (day < 1 || day > 31) {\n            return false;\n        }\n\
    \    }\n    return true;", "    if(date.length() < 8) return false;\n    std::string\
    \ stringDate = date;\n    int month = atoi(date.substr(0,2).c_str());\n    int\
    \ day = atoi(date.substr(3,2).c_str());\n    int year = atoi(date.substr(6,4).c_str());\n\
    \    if(month < 1 || month > 12 || month < 10) return false;\n    if(day < 1 ||\
    \ day > 31) return false;\n    if(month == 2 && day > 29) return false;\n    if(month\
    \ == 2 && day == 29 && year % 4 != 0) return false;\n    if(month == 4 || month\
    \ == 6 || month == 9 || month == 11) {\n        if(day > 30) return false;\n \
    \   }\n    if(stringDate[2] != '-' || stringDate[5] != '-') return false;\n  \
    \  return true;", "  if(date == \"\")\n    return false;\n  vector<string> v;\n\
    \  stringstream ss(date);\n  string temp;\n  int counter = 0;\n  while(getline(ss,\
    \ temp, '-')) {\n    v.push_back(temp);\n    counter++;\n  }\n  if(counter !=\
    \ 3)\n    return false;\n  int month = stoi(v[0]);\n  int day = stoi(v[1]);\n\
    \  int year = stoi(v[2]);\n  if(year < 1800)\n    return false;\n  if(day < 1\
    \ || day > 31)\n    return false;\n  if(month == 2) {\n    if(day > 29)\n    \
    \  return false;\n  }\n  else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11) {\n    if(day > 30)\n      return false;\n  }\n  else if(month == 1 ||\
    \ month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month\
    \ == 12) {\n    if(day > 31)\n      return false;\n  }\n  return true;", "   std::regex\
    \ reg(\"^(?:(?:31(\\\\/|-|\\\\.)(?:0?[13578]|1[02]))\\\\1|(?:(?:29|30)(\\\\/|-|\\\
    \\.)(?:0?[1,3-9]|1[0-2])\\\\2))(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$|^(?:29(\\\\\
    /|-|\\\\.)0?2\\\\3(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\\
    \\d|2[0-8])(\\\\/|-|\\\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\\\4(?:(?:1[6-9]|[2-9]\\\\\
    d)?\\\\d{2})$\");\n   return std::regex_match(date, reg);", "\tstringstream ss(date);\n\
    \tstd::string token;\n\tint flag=0;\n\tint a[3];\n\twhile(getline(ss,token,'-'))\n\
    \t{\n\t\ta[flag++]=stoi(token);\n\t}\n\tif(flag!=3)\n\t{\n\t\treturn false;\n\t\
    }\n\tif(a[1]>12||a[1]<1)\n\t{\n\t\treturn false;\n\t}\n\tswitch(a[1])\n\t{\n\t\
    \tcase 1:\n\t\tcase 3:\n\t\tcase 5:\n\t\tcase 7:\n\t\tcase 8:\n\t\tcase 10:\n\t\
    \tcase 12:\n\t\t\tif(a[0]>31||a[0]<1)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t\
    }\n\t\t\tbreak;\n\t\tcase 4:\n\t\tcase 6:\n\t\tcase 9:\n\t\tcase 11:\n\t\t\tif(a[0]>30||a[0]<1)\n\
    \t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tif(a[0]>29||a[0]<1)\n\
    \t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\tif(a[2]<1)\n\t{\n\
    \t\treturn false;\n\t}\n\treturn true;", "\tint count=0;\n\tfor(auto &it:date)\n\
    \t\tif(it=='-')\n\t\t\tcount++;\n\tif(count!=2)\n\t\treturn false;\n\tstd::stringstream\
    \ ss;\n\tss<<date;\n\tstd::string val;\n\tchar c;\n\tint month,day,year;\n\tss>>month>>c>>day>>c>>year;\n\
    \tif(month>12||month<1)\n\t\treturn false;\n\tif(day>31||day<1)\n\t\treturn false;\n\
    \tif(month==4||month==6||month==9||month==11)\n\t\tif(day>30)\n\t\t\treturn false;\n\
    \tif(month==2)\n\t\tif(day>29)\n\t\t\treturn false;\n\treturn true;", "  // your\
    \ code here\n  std::size_t found0 = date.find('-');\n  std::size_t found1 = date.find('-',found0+1);\n\
    \  std::string dateString = date.substr(0,found0);\n  std::string monthString\
    \ = date.substr(found0+1,found1-found0-1);\n  std::string yearString = date.substr(found1+1);\n\
    \  if (monthString.size()!=2 || dateString.size()!=2)\n    return false;\n  if\
    \ (yearString.size()!=4)\n    return false;\n  int dateInt = atoi(dateString.c_str());\n\
    \  int monthInt = atoi(monthString.c_str());\n  int yearInt = atoi(yearString.c_str());\n\
    \  std::cout<<yearInt<<std::endl;\n  if (monthInt>12)\n    return false;\n  if\
    \ (dateInt==0)\n    return false;\n  if (monthInt==1||monthInt==3||monthInt==5||monthInt==7||monthInt==8||monthInt==10||monthInt==12)\n\
    \  {\n    if (dateInt>31)\n      return false;\n  }\n  else if (monthInt==4||monthInt==6||monthInt==9||monthInt==11)\n\
    \  {\n    if (dateInt>30)\n      return false;\n  }\n  else if (monthInt==2)\n\
    \  {\n    if (dateInt>29)\n      return false;\n  }\n  return true;", "    std::vector<std::string>\
    \ v;\n    std::string s;\n    std::stringstream ss(date);\n    while(std::getline(ss,\
    \ s, '-')){\n        v.push_back(s);\n    }\n    if(v.size() != 3) return false;\n\
    \    int day = std::stoi(v[1]);\n    int mon = std::stoi(v[0]);\n    int year\
    \ = std::stoi(v[2]);\n    if(mon < 1 || mon > 12) return false;\n    if(day <\
    \ 1 || day > 31) return false;\n    if(mon == 2){\n        if(day > 29) return\
    \ false;\n    }\n    else if(mon == 4 || mon == 6 || mon == 9 || mon == 11){\n\
    \        if(day > 30) return false;\n    }\n    if(year < 0) return false;\n \
    \   return true;", '  return true;', "    std::string dd = date.substr(0,2);\n\
    \    std::string mm = date.substr(3,2);\n    std::string yyyy = date.substr(6,4);\n\
    \    if(date.length()!=10 || date[2]!='-' || date[5]!='-'){\n        return false;\n\
    \    }\n    int day = std::stoi(dd);\n    int month = std::stoi(mm);\n    int\
    \ year = std::stoi(yyyy);\n    if(day==0 || month==0 || year==0 || month<1 ||\
    \ month>12){\n        return false;\n    }\n    if(month==2){\n        if(day>29\
    \ || (day==29 && (year%400!=0 && year%4!=0))){\n            return false;\n  \
    \      }\n    }\n    else if(month==4 || month==6 || month==9 || month==11){\n\
    \        if(day>30){\n            return false;\n        }\n    }\n    else{\n\
    \        if(day>31){\n            return false;\n        }\n    }\n    return\
    \ true;", "\tstd::string day = date.substr(0,2);\n\tstd::string month = date.substr(3,2);\n\
    \tstd::string year = date.substr(6,4);\n\tint d = std::stoi(day);\n\tint m = std::stoi(month);\n\
    \tint y = std::stoi(year);\n\tif(d <= 0 || d > 31 || m <= 0 || m > 12 || y <=\
    \ 0 || date.size() != 10 || date[2] != '-' || date[5] != '-')\n\t\treturn false;\n\
    \tif(m == 2 && d > 29)\n\t\treturn false;\n\tif(m == 2 && d == 29 && y % 4 !=\
    \ 0)\n\t\treturn false;\n\tif(m == 2 && d == 29 && y % 4 == 0 && y % 100 == 0\
    \ && y % 400 != 0)\n\t\treturn false;\n\tif(m == 2 && d == 29 && y % 4 == 0 &&\
    \ y % 100 == 0 && y % 400 == 0)\n\t\treturn true;\n\tif(m == 2 && d == 29 && y\
    \ % 4 == 0 && y % 100 != 0)\n\t\treturn true;\n\tif(m == 2 && d < 29)\n\t\treturn\
    \ true;\n\tif(m % 2 == 0 && m < 8 && d == 31)\n\t\treturn false;\n\tif(m % 2 ==\
    \ 0 && m > 7 && d == 31)\n\t\treturn true;\n\tif(m % 2 != 0 && m < 8 && d == 31)\n\
    \t\treturn true;\n\tif(m % 2 != 0 && m > 7 && d == 31)\n\t\treturn false;\n\t\
    if(m % 2 == 0 && m < 8 && d < 31)\n\t\treturn true;\n\tif(m % 2 == 0 && m > 7\
    \ && d < 31)\n\t\treturn true;\n\tif(m % 2 != 0 && m < 8 && d < 31)\n\t\treturn\
    \ true;\n\tif(m % 2 != 0 && m > 7 && d < 31)\n\t\treturn true;\n\treturn true;",
  "    std::regex re{R\"(\\d{2}-\\d{2}-\\d{4})\"};\n    if (!std::regex_match(date,\
    \ re)) {\n        return false;\n    }\n    int d, m, y;\n    std::istringstream\
    \ ss(date);\n    std::string token;\n    std::getline(ss, token, '-');\n    m\
    \ = std::stoi(token);\n    std::getline(ss, token, '-');\n    d = std::stoi(token);\n\
    \    std::getline(ss, token, '-');\n    y = std::stoi(token);\n    if (m < 1 ||\
    \ m > 12) {\n        return false;\n    }\n    if (d < 1 || d > 31) {\n      \
    \  return false;\n    }\n    if (m == 2) {\n        if (d > 29) {\n          \
    \  return false;\n        }\n    }\n    if (m == 4 || m == 6 || m == 9 || m ==\
    \ 11) {\n        if (d > 30) {\n            return false;\n        }\n    }\n\
    \    return true;", "    int days = 0;\n    int months = 0;\n    int years = 0;\n\
    \    int temp = 0;\n    int i = 0;\n    // check if the string is empty\n    if(date\
    \ == \"\"){\n        return false;\n    }\n    // split the string with given\
    \ format\n    while(i < date.length()){\n        if(date[i] == '-'){\n       \
    \     if(temp == 0){\n                months = std::stoi(date.substr(0,i));\n\
    \                date = date.substr(i+1, date.length()-i-1);\n               \
    \ temp++;\n                i = 0;\n            }\n            else if(temp ==\
    \ 1){\n                days = std::stoi(date.substr(0,i));\n                date\
    \ = date.substr(i+1, date.length()-i-1);\n                years = std::stoi(date);\n\
    \                break;\n            }\n        }\n        i++;\n    }\n    //\
    \ check if the years is between 2000 and 2099\n    if(years < 2000 || years >\
    \ 2099){\n        return false;\n    }\n    // check the months is between 1 and\
    \ 12\n    if(months < 1 || months > 12){\n        return false;\n    }\n    //\
    \ check the days is between 1 and 31 or 1 and 30 or 1 and 29\n    if(months ==\
    \ 1 || months == 3 || months == 5 || months == 7 || months == 8 || months == 10\
    \ || months == 12){\n        if(days < 1 || days > 31){\n            return false;\n\
    \        }\n    }\n    else if(months == 4 || months == 6 || months == 9 || months\
    \ == 11){\n        if(days < 1 || days > 30){\n            return false;\n   \
    \     }\n    }\n    else if(months == 2){\n        if(days < 1 || days > 29){\n\
    \            return false;\n        }\n    }\n    return true;", "  std::istringstream\
    \ ss(date);\n  char c;\n  int d, m, y;\n  ss >> d >> c >> m >> c >> y;\n  if (d\
    \ < 1 || d > 31 || m < 1 || m > 12 || (m == 2 && d > 29) || ((m == 4 || m == 6\
    \ || m == 9 || m == 11) && d > 30))\n    return false;\n  return true;", "\t//\
    \ Write your code here\n\tstd::string dd = date.substr(0,2);\n\tstd::string mm\
    \ = date.substr(3,2);\n\tstd::string yyyy = date.substr(6,4);\n\tif(date.length()==0)\n\
    \t\treturn false;\n\telse if(date.length() != 10 || date[2] != '-' || date[5]\
    \ != '-')\n\t\treturn false;\n\telse if(dd[0] < '0' || dd[0] > '9' || dd[1] <\
    \ '0' || dd[1] > '9')\n\t\treturn false;\n\telse if(mm[0] < '0' || mm[0] > '9'\
    \ || mm[1] < '0' || mm[1] > '9')\n\t\treturn false;\n\telse if(yyyy[0] < '0' ||\
    \ yyyy[0] > '9' || yyyy[1] < '0' || yyyy[1] > '9' || yyyy[2] < '0' || yyyy[2]\
    \ > '9' || yyyy[3] < '0' || yyyy[3] > '9')\n\t\treturn false;\n\telse if(std::stoi(dd)\
    \ == 0 || std::stoi(mm) == 0 || std::stoi(yyyy) == 0)\n\t\treturn false;\n\telse\
    \ if(std::stoi(dd) > 31 || std::stoi(mm) > 12)\n\t\treturn false;\n\telse if(std::stoi(mm)\
    \ == 2 && std::stoi(dd) > 29)\n\t\treturn false;\n\telse if(std::stoi(mm) == 4\
    \ || std::stoi(mm) == 6 || std::stoi(mm) == 9 || std::stoi(mm) == 11)\n\t{\n\t\
    \tif(std::stoi(dd) > 30)\n\t\t\treturn false;\n\t}\n\treturn true;", "    std::regex\
    \ r(\"^(?:(?:31(\\\\/|-|\\\\.)(?:0?[13578]|1[02]))\\\\1|(?:(?:29|30)(\\\\/|-|\\\
    \\.)(?:0?[1,3-9]|1[0-2])\\\\2))(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$|^(?:29(\\\\\
    /|-|\\\\.)0?2\\\\3(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\\
    \\d|2[0-8])(\\\\/|-|\\\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\\\4(?:(?:1[6-9]|[2-9]\\\\\
    d)?\\\\d{2})$\");\n    return std::regex_match(date, r);", "    int mm, dd, yyyy;\n\
    \    if(date.length() == 0) return false;\n    if(date.find(\"-\") == -1) return\
    \ false;\n    if(date.substr(0, date.find(\"-\")).length() == 0) return false;\n\
    \    if(date.substr(date.find(\"-\") + 1, date.rfind(\"-\") - date.find(\"-\"\
    ) - 1).length() == 0) return false;\n    if(date.substr(date.rfind(\"-\") + 1,\
    \ date.length() - date.rfind(\"-\") - 1).length() == 0) return false;\n    if(date.substr(0,\
    \ date.find(\"-\")).length() != 2) return false;\n    if(date.substr(date.find(\"\
    -\") + 1, date.rfind(\"-\") - date.find(\"-\") - 1).length() != 2) return false;\n\
    \    if(date.substr(date.rfind(\"-\") + 1, date.length() - date.rfind(\"-\") -\
    \ 1).length() != 4) return false;\n    if(std::stoi(date.substr(0, date.find(\"\
    -\"))) < 1 || std::stoi(date.substr(0, date.find(\"-\"))) > 12) return false;\n\
    \    if(std::stoi(date.substr(date.find(\"-\") + 1, date.rfind(\"-\") - date.find(\"\
    -\") - 1)) < 1 || std::stoi(date.substr(date.find(\"-\") + 1, date.rfind(\"-\"\
    ) - date.find(\"-\") - 1)) > 31) return false;\n    if(std::stoi(date.substr(0,\
    \ date.find(\"-\"))) == 2) if(std::stoi(date.substr(date.find(\"-\") + 1, date.rfind(\"\
    -\") - date.find(\"-\") - 1)) > 29) return false;\n    if(std::stoi(date.substr(0,\
    \ date.find(\"-\"))) == 4 || std::stoi(date.substr(0, date.find(\"-\"))) == 6",
  "\t// Your code here\n\tint month, day, year;\n\tstringstream ss(date);\n\tchar\
    \ delim;\n\tss >> month >> delim >> day >> delim >> year;\n\tif (month > 12 ||\
    \ month < 1) {\n\t\treturn false;\n\t}\n\tif (day > 31 || day < 1) {\n\t\treturn\
    \ false;\n\t}\n\tif (month == 2) {\n\t\tif (day > 29) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\tif (month == 4 || month == 6 || month == 9 || month == 11) {\n\t\
    \tif (day > 30) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;", "\tif (date.length()==0)\
    \ {\n\t\treturn false;\n\t}\n\t\n\tstd::string delimiter = \"-\";\n\tstd::string\
    \ token;\n\tstd::vector<std::string> data;\n\t\n\tsize_t pos = 0;\n\tstd::string\
    \ token;\n\twhile ((pos = s.find(delimiter)) != std::string::npos) {\n\t\ttoken\
    \ = s.substr(0, pos);\n\t\tdata.push_back(token);\n\t\ts.erase(0, pos + delimiter.length());\n\
    \t}\n\tdata.push_back(s);\n\t\n\tif (data.size()!=3) {\n\t\treturn false;\n\t\
    }\n\t\n\tif (data[0].length()!=2) {\n\t\treturn false;\n\t}\n\t\n\tif (data[1].length()!=2)\
    \ {\n\t\treturn false;\n\t}\n\t\n\tif (data[2].length()!=4) {\n\t\treturn false;\n\
    \t}\n\t\n\tint month = stoi(data[0]);\n\tint day = stoi(data[1]);\n\tint year\
    \ = stoi(data[2]);\n\t\n\tif (month>12) {\n\t\treturn false;\n\t}\n\t\n\tif (month==2)\
    \ {\n\t\tif (day>29) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (month==1 ||\
    \ month==3 || month==5 || month==7 || month==8 || month==10 || month==12) {\n\t\
    \tif (day>31) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (month==4 || month==6\
    \ || month==9 || month==11) {\n\t\tif (day>30) {\n\t\t\treturn false;\n\t\t}\n\
    \t}\n\t\n\treturn true;", "  int length = date.length();\n  std::string dd, mm,\
    \ yyyy;\n  if (length == 10) {\n    mm = date.substr(0, 2);\n    dd = date.substr(3,\
    \ 2);\n    yyyy = date.substr(6, 4);\n  } else {\n    return false;\n  }\n  if\
    \ ((length == 10) && (date[2] == '-') && (date[5] == '-')) {\n    for (int i =\
    \ 0; i < 10; i++) {\n      if ((date[i] < '0') || (date[i] > '9')) {\n       \
    \ return false;\n      }\n    }\n  } else {\n    return false;\n  }\n  int month\
    \ = std::stoi(mm);\n  int day = std::stoi(dd);\n  int year = std::stoi(yyyy);\n\
    \  if ((month < 1) || (month > 12)) {\n    return false;\n  }\n  switch (month)\
    \ {\n    case 1:\n    case 3:\n    case 5:\n    case 7:\n    case 8:\n    case\
    \ 10:\n    case 12:\n      if ((day < 1) || (day > 31)) {\n        return false;\n\
    \      }\n      break;\n    case 4:\n    case 6:\n    case 9:\n    case 11:\n\
    \      if ((day < 1) || (day > 30)) {\n        return false;\n      }\n      break;\n\
    \    case 2:\n      if ((day < 1) || (day > 29)) {\n        return false;\n  \
    \    }\n      break;\n  }\n  return true;", "    // Your code here\n    if(date.length()==0)\n\
    \        return false;\n    std::string month = date.substr(0,2);\n    std::string\
    \ day = date.substr(3,2);\n    std::string year = date.substr(6,4);\n    // checking\
    \ for invalid months\n    if(std::stoi(month)>12||std::stoi(month)<1)\n      \
    \  return false;\n    // checking for invalid days\n    if(std::stoi(day)>31||std::stoi(day)<1)\n\
    \        return false;\n    if(std::stoi(month)==4||std::stoi(month)==6||std::stoi(month)==9||std::stoi(month)==11)\n\
    \    {\n        if(std::stoi(day)>30)\n            return false;\n    }\n    if(std::stoi(month)==2)\n\
    \    {\n        if(std::stoi(day)>29)\n            return false;\n    }\n    if(date[2]!='-'||date[5]!='-')\n\
    \        return false;\n    return true;", "  bool dateIsValid = true;\n  if (date.size()\
    \ == 0)\n  {\n    dateIsValid = false;\n  }\n  else\n  {\n    //First checking\
    \ if date is in correct format\n    //First checking month, then day, then year\n\
    \    std::string month = date.substr(0, 2);\n    std::string day = date.substr(3,\
    \ 2);\n    std::string year = date.substr(6, 4);\n    //First checking if month\
    \ is valid\n    if (month[0] == '0')\n    {\n      month = month.substr(1, 1);\n\
    \    }\n    //Turning month into integer\n    int monthInInt = atoi(month.c_str());\n\
    \    if (monthInInt > 12 || monthInInt < 1)\n    {\n      dateIsValid = false;\n\
    \    }\n    else\n    {\n      //Then checking day\n      if (day[0] == '0')\n\
    \      {\n        day = day.substr(1, 1);\n      }\n      //Turning day into integer\n\
    \      int dayInInt = atoi(day.c_str());\n      if (monthInInt == 2)\n      {\n\
    \        if (dayInInt > 29 || dayInInt < 1)\n        {\n          dateIsValid\
    \ = false;\n        }\n      }\n      else if (monthInInt == 4 || monthInInt ==\
    \ 6 || monthInInt == 9 || monthInInt == 11)\n      {\n        if (dayInInt > 30\
    \ || dayInInt < 1)\n        {\n          dateIsValid = false;\n        }\n   \
    \   }\n      else\n      {\n        if (dayInInt > 31 || dayInInt < 1)\n     \
    \   {\n          dateIsValid = false;\n        }\n      }\n      //Then checking\
    \ year\n      if (year.size() != 4)\n      {\n        dateIsValid = false;\n \
    \     }\n    }\n  }\n  return dateIsValid;", "  // your code here\n  int count\
    \ =0;\n  std::vector<std::string> v;\n  std::string delimiter = \"-\";\n  std::string\
    \ token;\n  std::string str = date;\n  size_t pos = 0;\n  while ((pos = str.find(delimiter))\
    \ != std::string::npos) {\n    token = str.substr(0, pos);\n    v.push_back(token);\n\
    \    str.erase(0, pos + delimiter.length());\n  }\n  v.push_back(str);\n  for(int\
    \ i=0;i<3;i++){\n    for(int j=0;j<v[i].length();j++){\n      if(isdigit(v[i][j]))\n\
    \        count++;\n    }\n  }\n  if(count!=8)\n    return false;\n  else{\n  \
    \  int month = stoi(v[0]);\n    int day = stoi(v[1]);\n    int year = stoi(v[2]);\n\
    \    if(month<1 || month>12)\n      return false;\n    else if(month == 2){\n\
    \      if(day<1 || day>29)\n        return false;\n    }\n    else if(month ==\
    \ 4 || month == 6 || month == 9 || month == 11){\n      if(day<1 || day>30)\n\
    \        return false;\n    }\n    else if(month == 1 || month == 3 || month ==\
    \ 5 || month == 7 || month == 8 || month == 10 || month == 12){\n      if(day<1\
    \ || day>31)\n        return false;\n    }\n    else\n      return false;\n  }\n\
    \  return true;", "\tassert(date.size() > 0);\n\tint year = 0, month = 0, day\
    \ = 0;\n\tfor (int i = 0; i < date.size(); i++) {\n\t\tif (date[i] >= '0' && date[i]\
    \ <= '9') {\n\t\t\tif (year == 0) {\n\t\t\t\tmonth = (month * 10) + (date[i] -\
    \ '0');\n\t\t\t}\n\t\t\telse if (year == 1) {\n\t\t\t\tday = (day * 10) + (date[i]\
    \ - '0');\n\t\t\t}\n\t\t\telse if (year == 2) {\n\t\t\t\tyear = (year * 10) +\
    \ (date[i] - '0');\n\t\t\t}\n\t\t}\n\t\telse if (date[i] == '-') {\n\t\t\tyear++;\n\
    \t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (year == 0) {\n\t\treturn\
    \ false;\n\t}\n\tif (month == 1 || month == 3 || month == 5 || month == 7 || month\
    \ == 8 || month == 10 || month == 12) {\n\t\tif (day > 31 || day < 1) {\n\t\t\t\
    return false;\n\t\t}\n\t}\n\telse if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n\t\tif (day > 30 || day < 1) {\n\t\t\treturn false;\n\t\t}\n\
    \t}\n\telse if (month == 2) {\n\t\tif (day > 29 || day < 1) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\telse {\n\t\treturn false;\n\t}\n\treturn true;", "    if(date.length()\
    \ == 0)\n        return false;\n    std::vector<std::string> v = {\"January\"\
    , \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\"\
    , \"September\", \"October\", \"November\", \"December\"};\n    std::vector<int>\
    \ monthDays = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n    int dd =\
    \ std::stoi(date.substr(0,2));\n    int mm = std::stoi(date.substr(3,5));\n  \
    \  int yyyy = std::stoi(date.substr(6,10));\n    if(yyyy % 4 == 0) {\n       \
    \ monthDays[1] = 29;\n    }\n    if(mm < 1 || mm > 12)\n        return false;\n\
    \    if(dd < 1 || dd > monthDays[mm-1])\n        return false;\n    return true;",
  "    int cnt = 0;\n    std::string str = \"\";\n    std::string m = \"\";\n    std::string\
    \ d = \"\";\n    std::string y = \"\";\n    for(int i = 0; i < date.length();\
    \ i++) {\n        if(date[i] == '-') {\n            cnt++;\n            if(cnt\
    \ == 1) {\n                m = str;\n                str = \"\";\n           \
    \ }\n            else if(cnt == 2) {\n                d = str;\n             \
    \   str = \"\";\n            }\n        }\n        else {\n            str +=\
    \ date[i];\n        }\n    }\n    y = str;\n    if(cnt != 2) {\n        return\
    \ false;\n    }\n    else {\n        if(m.length() == 0 || d.length() == 0 ||\
    \ y.length() == 0) {\n            return false;\n        }\n        int mv = std::stoi(m);\n\
    \        int dv = std::stoi(d);\n        int yv = std::stoi(y);\n        if(mv\
    \ < 1 || mv > 12) {\n            return false;\n        }\n        else {\n  \
    \          if(mv == 1 || mv == 3 || mv == 5 || mv == 7 || mv == 8 || mv == 10\
    \ || mv == 12) {\n                if(dv < 1 || dv > 31) {\n                  \
    \  return false;\n                }\n            }\n            else if(mv ==\
    \ 4 || mv == 6 || mv == 9 || mv == 11) {\n                if(dv < 1 || dv > 30)\
    \ {\n                    return false;\n                }\n            }\n   \
    \         else {\n                if(dv < 1 || dv > 29) {\n                  \
    \  return false;\n                }\n            }\n        }\n    }\n    return\
    \ true;", "  int month, day, year;\n  bool isLeapYear = false;\n  sscanf(date.c_str(),\
    \ \"%d-%d-%d\", &month, &day, &year);\n  if (month < 1 || month > 12) return false;\n\
    \  if (day < 1 || day > 31) return false;\n  if (month == 2) {\n    if (year %\
    \ 4 == 0) {\n      if (year % 100 == 0) {\n        if (year % 400 == 0) isLeapYear\
    \ = true;\n        else isLeapYear = false;\n      } else isLeapYear = true;\n\
    \    } else isLeapYear = false;\n    if (isLeapYear) {\n      if (day > 29) return\
    \ false;\n    } else {\n      if (day > 28) return false;\n    }\n  } else if\
    \ (month == 4 || month == 6 || month == 9 || month == 11) {\n    if (day > 30)\
    \ return false;\n  }\n  return true;", "\tif (date.size() != 10) return false;\n\
    \tif (date[2] != '-' || date[5] != '-') return false;\n\tstd::string month, day,\
    \ year;\n\tmonth = date.substr(0, 2);\n\tday = date.substr(3, 2);\n\tyear = date.substr(6,\
    \ 4);\n\tint m = stoi(month);\n\tint d = stoi(day);\n\tint y = stoi(year);\n\t\
    if (m > 12 || m < 1) return false;\n\tif (m == 2) {\n\t\tif (d > 29 || d < 1)\
    \ return false;\n\t}\n\telse if (m == 4 || m == 6 || m == 9 || m == 11) {\n\t\t\
    if (d > 30 || d < 1) return false;\n\t}\n\telse {\n\t\tif (d > 31 || d < 1) return\
    \ false;\n\t}\n\treturn true;", "\tint len = date.length();\n\tint i, k;\n\tint\
    \ m, y, d;\n\tif (len == 0) {\n\t\treturn false;\n\t}\n\t// remove - from the\
    \ string\n\tfor (i = 0; i < len; i++) {\n\t\tif (date[i] == '-') {\n\t\t\tk =\
    \ i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tdate[k] = ' ';\n\tfor (i = k + 1; i < len; i++)\
    \ {\n\t\tif (date[i] == '-') {\n\t\t\tdate[i] = ' ';\n\t\t\tbreak;\n\t\t}\n\t\
    }\n\tstd::stringstream ss(date);\n\tss >> m >> d >> y;\n\t// check validity of\
    \ date\n\tif (m < 1 || m > 12) {\n\t\treturn false;\n\t}\n\tif (m == 1 || m ==\
    \ 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) {\n\t\tif (d < 1 || d\
    \ > 31) {\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (m == 4 || m == 6 || m ==\
    \ 9 || m == 11) {\n\t\tif (d < 1 || d > 30) {\n\t\t\treturn false;\n\t\t}\n\t\
    }\n\telse if (m == 2) {\n\t\tif (d < 1 || d > 29) {\n\t\t\treturn false;\n\t\t\
    }\n\t}\n\treturn true;", "    assert(!date.empty());\n    // The months and days\
    \ start with 1.\n    std::map<int, int> daysInMonth = {\n        {1, 31},\n  \
    \      {2, 28},\n        {3, 31},\n        {4, 30},\n        {5, 31},\n      \
    \  {6, 30},\n        {7, 31},\n        {8, 31},\n        {9, 30},\n        {10,\
    \ 31},\n        {11, 30},\n        {12, 31},\n    };\n    for (int i = 0; i <\
    \ date.size(); i++) {\n        if (date[i] == '-') {\n            if (date[i-1]\
    \ == '0' && date[i+1] == '0') {\n                return false;\n            }\n\
    \        }\n    }\n    int month = std::stoi(date.substr(0, 2));\n    int day\
    \ = std::stoi(date.substr(3, 2));\n    int year = std::stoi(date.substr(6, 4));\n\
    \    return date.size() == 10 && date[2] == '-' && date[5] == '-' && daysInMonth[month]\
    \ >= day && year > 0;", "  std::stringstream stream(date);\n  int day, month,\
    \ year;\n  char seperator;\n  stream >> month >> seperator >> day >> seperator\
    \ >> year;\n  if(month < 1 || month > 12 || day < 1 || day > 31 || year < 1)\n\
    \    return false;\n  else if(month == 2 && day > 29)\n    return false;\n  else\
    \ if((month == 4 || month == 6 || month == 9 || month == 11) && day > 30)\n  \
    \  return false;\n  else\n    return true;", "    // Your code here\n    if(date.length()\
    \ != 10)\n      return false;\n    if(date[2] != '-' || date[5] != '-')\n    \
    \  return false;\n    stringstream stream(date);\n    int month, day, year;\n\
    \    char separator;\n    stream >> month >> separator >> day >> separator >>\
    \ year;\n    if(month < 1 || month > 12)\n      return false;\n    if(month ==\
    \ 2)\n    {\n      if(day < 1 || day > 29)\n        return false;\n    }\n   \
    \ else if(month % 2 == 0)\n    {\n      if(day < 1 || day > 30)\n        return\
    \ false;\n    }\n    else if(month % 2 != 0)\n    {\n      if(day < 1 || day >\
    \ 31)\n        return false;\n    }\n    if(year < 0)\n      return false;\n \
    \   return true;", "\tint m, d, y;\n\tint len = date.length();\n\tif (len != 10)\
    \ return false;\n\tfor (int i = 0; i < len; i++) {\n\t\tif (i == 2 || i == 5)\
    \ {\n\t\t\tif (date[i] != '-') return false;\n\t\t}\n\t\telse if (date[i] >= '0'\
    \ && date[i] <= '9') {\n\t\t\tcontinue;\n\t\t}\n\t\telse return false;\n\t}\n\t\
    m = stoi(date.substr(0, 2));\n\td = stoi(date.substr(3, 2));\n\ty = stoi(date.substr(6,\
    \ 4));\n\tif (m > 12 || m < 1) return false;\n\tif (m == 2) {\n\t\tif (d > 29\
    \ || d < 1) return false;\n\t}\n\telse if (m == 4 || m == 6 || m == 9 || m ==\
    \ 11) {\n\t\tif (d > 30 || d < 1) return false;\n\t}\n\telse {\n\t\tif (d > 31\
    \ || d < 1) return false;\n\t}\n\treturn true;", "    // your code goes here\n\
    \    std::string delimiter = \"-\";\n    std::string delimiter2 = \"/\";\n   \
    \ size_t pos = 0;\n    std::string token;\n    std::string s_month;\n    std::string\
    \ s_day;\n    std::string s_year;\n    int month;\n    int day;\n    int year;\n\
    \    bool ret= true;\n    if (date.length()<10) {\n        return false;\n   \
    \ }\n    //checking for '/'\n    pos = date.find(delimiter2);\n    if (pos !=\
    \ std::string::npos) {\n        return false;\n    }\n    //checking for correct\
    \ date format\n    pos = date.find(delimiter);\n    if (pos == std::string::npos)\
    \ {\n        return false;\n    }\n    s_month = date.substr(0, pos);\n    date.erase(0,\
    \ pos + delimiter.length());\n    if (s_month.length()<2) {\n        return false;\n\
    \    }\n    pos = date.find(delimiter);\n    if (pos == std::string::npos) {\n\
    \        return false;\n    }\n    s_day = date.substr(0, pos);\n    date.erase(0,\
    \ pos + delimiter.length());\n    if (s_day.length()<2) {\n        return false;\n\
    \    }\n    if (date.length()!=4) {\n        return false;\n    }\n    s_year\
    \ = date;\n    month = stoi(s_month);\n    day = stoi(s_day);\n    year = stoi(s_year);\n\
    \    if ((month < 1) || (month > 12)) {\n        return false;\n    }\n    if\
    \ ((month == 1) || (month == 3) || (month == 5) || (month == 7) || (month == 8)\
    \ || (month == 10) || (month == 12)) {\n        if ((day < 1) || (day > 31)) {\n\
    \            return false;\n        }\n    }\n    if ((month == 4) || (month ==\
    \ 6) || (month == 9", "    if(date.size()==0)\n        return false;\n    int\
    \ month=std::stoi(date.substr(0,2));\n    int day=std::stoi(date.substr(3,2));\n\
    \    int year=std::stoi(date.substr(6,4));\n    if(month<1||month>12)\n      \
    \  return false;\n    if(day<1||day>31)\n        return false;\n    else if(month==2)\n\
    \    {\n        if(day>29)\n            return false;\n    }\n    else if(month==4||month==6||month==9||month==11)\n\
    \    {\n        if(day>30)\n            return false;\n    }\n    return true;",
  "\t// Your code goes here!\n    vector<int> month = {31,29,31,30,31,30,31,31,30,31,30,31};\n\
    \    stringstream ss(date);\n    char ch;\n    int day, year, m;\n    if(!(ss\
    \ >> m >> ch >> day >> ch >> year)) return false;\n    if(m < 1 || m > 12) return\
    \ false;\n    if(day < 1 || day > month[m-1]) return false;\n    if(year < 0)\
    \ return false;\n    return true;", "\tstd::vector<std::string> ymd = {\"\",\"\
    \",\"\"};\n\tstd::istringstream iss(date);\n\tstd::string token;\n\tint n=0;\n\
    \twhile(std::getline(iss, token, '-')){\n\t\tymd[n] = token;\n\t\tn++;\n\t}\n\t\
    if(n!=3){\n\t\treturn false;\n\t}\n\tstd::string y = ymd[2];\n\tstd::string m\
    \ = ymd[0];\n\tstd::string d = ymd[1];\n\tint month = stoi(m);\n\tint day = stoi(d);\n\
    \tint year = stoi(y);\n\tif(year<0){\n\t\treturn false;\n\t}\n\tif(month<1 ||\
    \ month>12){\n\t\treturn false;\n\t}\n\tif(month==2){\n\t\tif(day<1 || day>29){\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\telse if(month%2==0){\n\t\tif(day<1 || day>30){\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\telse{\n\t\tif(day<1 || day>31){\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;", "  // your code here\n  // d: 1~31, m:\
    \ 1~12\n  int datelen = date.length();\n  if (datelen != 10) return false;\n \
    \ if (date[2] != '-' || date[5] != '-') return false;\n  int day = atoi(date.substr(0,\
    \ 2).c_str());\n  int month = atoi(date.substr(3, 2).c_str());\n  int year = atoi(date.substr(6,\
    \ 4).c_str());\n  int daylimit = 30;\n  if (month == 1 || month == 3 || month\
    \ == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n    daylimit\
    \ = 31;\n  } else if (month == 2) {\n    daylimit = 29;\n  }\n  if (day < 1 ||\
    \ day > daylimit) return false;\n  if (month < 1 || month > 12) return false;\n\
    \  return true;", "    std::string m[12] = {\"01\", \"02\", \"03\", \"04\", \"\
    05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"};\n    std::string\
    \ d31[7] = {\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"12\"};\n    std::string\
    \ d30[4] = {\"04\", \"06\", \"09\", \"11\"};\n    if (date.size() != 10) {\n \
    \       return false;\n    }\n    for (int i = 0; i < 12; i++) {\n        if (date.substr(0,\
    \ 2) == m[i]) {\n            if (date.substr(0, 2) == \"02\") {\n            \
    \    if (date.substr(3, 2) == \"01\" || date.substr(3, 2) == \"02\" || date.substr(3,\
    \ 2) == \"03\" || date.substr(3, 2) == \"04\" || date.substr(3, 2) == \"05\" ||\
    \ date.substr(3, 2) == \"06\" || date.substr(3, 2) == \"07\" || date.substr(3,\
    \ 2) == \"08\" || date.substr(3, 2) == \"09\" || date.substr(3, 2) == \"10\" ||\
    \ date.substr(3, 2) == \"11\" || date.substr(3, 2) == \"12\" || date.substr(3,\
    \ 2) == \"13\" || date.substr(3, 2) == \"14\" || date.substr(3, 2) == \"15\" ||\
    \ date.substr(3, 2) == \"16\" || date.substr(3, 2) == \"17\" || date.substr(3,\
    \ 2) == \"18\" || date.substr(3, 2) == \"19\" || date.substr(3, 2) == \"20\" ||\
    \ date.substr(3, 2) == \"21\" || date.substr(3, 2) == \"22\" || date.substr(3,\
    \ 2) == \"23\" || date.substr(3, 2)", "    stringstream ss(date);\n    char c;\n\
    \    string month, day, year;\n    getline(ss, month, '-');\n    getline(ss, day,\
    \ '-');\n    getline(ss, year, '-');\n    if (month.size() == 0 || day.size()\
    \ == 0 || year.size() == 0) return false;\n    if (month == \"00\" || day == \"\
    00\" || year == \"0000\") return false;\n    if (month == \"0\" || day == \"0\"\
    \ || year == \"0\") return false;\n    int monthInt = stoi(month);\n    int dayInt\
    \ = stoi(day);\n    int yearInt = stoi(year);\n    if (monthInt < 1 || monthInt\
    \ > 12) return false;\n    if (dayInt < 1 || dayInt > 31) return false;\n    if\
    \ (monthInt == 2) {\n        if (dayInt > 29) return false;\n        if (dayInt\
    \ == 29) {\n            if (yearInt % 4 != 0) return false;\n            if (yearInt\
    \ % 100 == 0 && yearInt % 400 != 0) return false;\n        }\n    }\n    if (monthInt\
    \ == 4 || monthInt == 6 || monthInt == 9 || monthInt == 11) {\n        if (dayInt\
    \ > 30) return false;\n    }\n    return true;", "    int i,j,k;\n    vector<int>d,m,y;\n\
    \    for(i=0;i<date.size();i++)\n    {\n        if(date[i]!='-')\n        {\n\
    \            if(date[i]>='0' && date[i]<='9')\n            {\n               \
    \ if(i==0 || i==1)\n                {\n                    m.push_back(date[i]-48);\n\
    \                }\n                else if(i==3 || i==4)\n                {\n\
    \                    d.push_back(date[i]-48);\n                }\n           \
    \     else if(i==6 || i==7 || i==8 || i==9)\n                {\n             \
    \       y.push_back(date[i]-48);\n                }\n            }\n         \
    \   else\n            {\n                return false;\n            }\n      \
    \  }\n    }\n    if(m.size()==0 || d.size()==0 || y.size()==0)\n    {\n      \
    \  return false;\n    }\n    if(m.size()!=2 || d.size()!=2 || y.size()!=4)\n \
    \   {\n        return false;\n    }\n    if(m[0]==0 && m[1]==0)\n    {\n     \
    \   return false;\n    }\n    if(d[0]==0 && d[1]==0)\n    {\n        return false;\n\
    \    }\n    if(y[0]==0 && y[1]==0 && y[2]==0 && y[3]==0)\n    {\n        return\
    \ false;\n    }\n    i=(m[0]*10)+m[1];\n    j=(d[0]*10)+d[1];\n    k=(y[0]*1000)+(y[1]*100)+(y[2]*10)+y[3];\n\
    \    if(i<1 || i>12)\n    {\n        return false;\n    }\n    if(i==1 || i==3\
    \ || i==5 || i==7 || i==8 || i==10 || i==12)\n    {\n        if(j<1 || j", " \
    \   if(date.length() == 0)\n        return false;\n    std::stringstream ss(date);\n\
    \    std::string token;\n    int count = 0;\n    int month = 0;\n    int day =\
    \ 0;\n    int year = 0;\n    while(std::getline(ss, token, '-')) {\n        if(count\
    \ == 0) {\n            month = std::stoi(token);\n        } else if(count == 1)\
    \ {\n            day = std::stoi(token);\n        } else if(count == 2) {\n  \
    \          year = std::stoi(token);\n        }\n        count++;\n    }\n    if(count\
    \ != 3)\n        return false;\n    if(month < 1 || month > 12)\n        return\
    \ false;\n    if(month == 1 || month == 3 || month == 5 || month == 7 || month\
    \ == 8 || month == 10 || month == 12) {\n        if(day < 1 || day > 31)\n   \
    \         return false;\n    } else if(month == 4 || month == 6 || month == 9\
    \ || month == 11) {\n        if(day < 1 || day > 30)\n            return false;\n\
    \    } else if(month == 2) {\n        if(day < 1 || day > 29)\n            return\
    \ false;\n    }\n    return true;", "    std::regex pattern(\"(\\\\d{2})-(\\\\\
    d{2})-(\\\\d{4})\");\n    if(!std::regex_match(date, pattern))\n        return\
    \ false;\n    int day, month, year;\n    sscanf(date.c_str(), \"%d-%d-%d\", &month,\
    \ &day, &year);\n    if(day < 1 || day > 31)\n        return false;\n    if(month\
    \ < 1 || month > 12)\n        return false;\n    if(month == 2) {\n        if(day\
    \ > 29)\n            return false;\n        int leap_year = year % 400 == 0 ||\
    \ (year % 4 == 0 && year % 100 != 0);\n        if(day == 29 && !leap_year)\n \
    \           return false;\n    }\n    else if(month == 4 || month == 6 || month\
    \ == 9 || month == 11) {\n        if(day > 30)\n            return false;\n  \
    \  }\n    return true;", "\t// Write your code here\n    vector<int> month_list\
    \ {31,28,31,30,31,30,31,31,30,31,30,31};\n    // check for empty\n    if(date.empty())\
    \ return false;\n    std::string delimiter = \"-\";\n    std::string token = date.substr(0,\
    \ date.find(delimiter));\n    int month = stoi(token);\n    date.erase(0, date.find(delimiter)\
    \ + delimiter.length());\n    token = date.substr(0, date.find(delimiter));\n\
    \    int day = stoi(token);\n    date.erase(0, date.find(delimiter) + delimiter.length());\n\
    \    if(day > month_list[month-1]) return false;\n    if(day < 1) return false;\n\
    \    if(month < 1 || month > 12) return false;\n    return true;", "\tint y =\
    \ stoi(date.substr(date.length() - 4));\n\tint m = stoi(date.substr(0, 2));\n\t\
    int d = stoi(date.substr(3, 2));\n\tbool isY = y < 2021;\n\tbool isM = m < 13;\n\
    \tbool isD = (m == 1 && d < 32) || (m == 2 && d < 30) || (m == 3 && d < 32) ||\
    \ (m == 4 && d < 31) || (m == 5 && d < 32) || (m == 6 && d < 31) || (m == 7 &&\
    \ d < 32) || (m == 8 && d < 32) || (m == 9 && d < 31) || (m == 10 && d < 32) ||\
    \ (m == 11 && d < 31) || (m == 12 && d < 32);\n\treturn isY && isM && isD;", " \
    \   // Your code here\n    std::string word, word1, word2, word3;\n    int temp1,\
    \ temp2, temp3;\n    std::stringstream s_stream(date);\n    s_stream >> word1\
    \ >> word2 >> word3;\n    temp1 = std::stoi(word1);\n    temp2 = std::stoi(word2);\n\
    \    temp3 = std::stoi(word3);\n    if (temp1 > 12 || temp1 < 1 || temp2 > 31\
    \ || temp2 < 1 || temp3 < 1) {\n      return false;\n    }\n    else if (temp1\
    \ == 2 && temp2 > 29) {\n      return false;\n    }\n    else if (temp1 == 2 &&\
    \ temp2 == 29 && temp3 % 4 != 0) {\n      return false;\n    }\n    else if (temp1\
    \ == 2 && temp2 == 29 && temp3 % 100 == 0 && temp3 % 400 != 0) {\n      return\
    \ false;\n    }\n    else if (temp1 == 4 || temp1 == 6 || temp1 == 9 || temp1\
    \ == 11) {\n      if (temp2 > 30) {\n        return false;\n      }\n    }\n \
    \   return true;\n  }\n\nint main() {\nassert(valid_date(\"03-11-2000\") == true);\n\
    assert(valid_date(\"15-01-2012\") == false);\nassert(valid_date(\"04-0-2040\"\
    ) == false);\nassert(valid_date(\"06-04-2020\") == true);\nassert(valid_date(\"\
    06/04/2020\") == false);\nassert(valid_date(\"02-29-2020\") == true);\nassert(valid_date(\"\
    02-29-2021\") == false);\nassert(valid_date(\"02-29-2000\") == true);\nassert(valid_date(\"\
    02-29-1910\") == false);\nassert(valid_date(\"04-31-2020\") == false);\nassert(valid_date(\"\
    13-01-2020\") == false);\nassert(valid_date(\"00-01-2020\") == false);\nassert(valid_date(\"\
    01-00-2020\") == false);\nassert(valid_date(\"02-", "\t// your code here\n\t//\
    \ std::vector<std::string>v;\n\tstd::stringstream ss(date);\n\tstd::string s;\n\
    \tstd::vector<std::string> v;\n\twhile(std::getline(ss,s,'-'))\n\t\tv.push_back(s);\n\
    \tif(v.size()!=3)\n\t\treturn false;\n\tif(v[0].length()!=2 || v[1].length()!=2\
    \ || v[2].length()!=4)\n\t\treturn false;\n\tint d,m,y;\n\tstd::stringstream ss1(v[0]);\n\
    \tss1>>m;\n\tstd::stringstream ss2(v[1]);\n\tss2>>d;\n\tstd::stringstream ss3(v[2]);\n\
    \tss3>>y;\n\t\n\tstd::vector<int> v1;\n\tv1.push_back(d);\n\tv1.push_back(m);\n\
    \tv1.push_back(y);\n\t\n\tif(std::find(v1.begin(),v1.end(),0)!=v1.end())\n\t\t\
    return false;\n\t\n\tif(v1[1]<1 || v1[1]>12)\n\t\treturn false;\n\tif(v1[0]<1\
    \ || v1[0]>31)\n\t\treturn false;\n\tif(v1[1]==2)\n\t{\n\t\tif(v1[0]>29)\n\t\t\
    \treturn false;\n\t}\n\tif(v1[1]==4 || v1[1]==6 || v1[1]==9 || v1[1]==11)\n\t\
    {\n\t\tif(v1[0]>30)\n\t\t\treturn false;\n\t}\n\treturn true;", "\t// Write your\
    \ code here\n\tint num1 = 0, num2 = 0, num3 = 0;\n\t//creating for loops to check\
    \ each character of the string\n\tfor (char c : date) {\n\t\t//if the character\
    \ is a number\n\t\tif (c >= '0' && c <= '9') {\n\t\t\t//increase the number of\
    \ numbers by 1\n\t\t\tnum1++;\n\t\t}\n\t\t//if the character is a dash\n\t\telse\
    \ if (c == '-') {\n\t\t\t//increase the number of dashes by 1\n\t\t\tnum2++;\n\
    \t\t}\n\t\t//if the character is a forward slash\n\t\telse if (c == '/') {\n\t\
    \t\t//increase the number of forward slashes by 1\n\t\t\tnum3++;\n\t\t}\n\t}\n\
    \t//if the number of numbers is greater than 10\n\tif (num1 > 10) {\n\t\t//return\
    \ false because the date is not in correct format\n\t\treturn false;\n\t}\n\t\
    //if the number of dashes is not equal to 2 or the number of forward slashes is\
    \ not equal to 2\n\tif (num2 != 2 || num3 != 2) {\n\t\t//return false because\
    \ the date is not in correct format\n\t\treturn false;\n\t}\n\tint length = date.length();\n\
    \t//if the length of the string is not equal to 10\n\tif (length != 10) {\n\t\t\
    //return false because the date is not in correct format\n\t\treturn false;\n\t\
    }\n\t//splitting the string into substring according to the dashes\n\tstd::string\
    \ month = date.substr(0, 2);\n\tstd::string day = date.substr(3, 2);\n\tstd::string\
    \ year = date.substr(6, 4);\n\t//converting the substrings into integers\n\tint\
    \ month1 = std::stoi(month);\n\tint day1 = std::stoi(day);\n\tint year1 = std::stoi(year);\n\
    \t//if the month is greater than 12 or less than 1\n\tif (month1 > 12 || month1\
    \ < 1) {\n\t\t//return false because the date", '    return true;', "  if(date.length()\
    \ < 10) return false;\n  else if(date[2] != '-' || date[5] != '-') return false;\n\
    \  else if(std::stoi(date.substr(0,2)) < 1 || std::stoi(date.substr(0,2)) > 12)\
    \ return false;\n  else if(std::stoi(date.substr(3,2)) < 1 || std::stoi(date.substr(3,2))\
    \ > 31) return false;\n  else if(std::stoi(date.substr(0,2)) == 4 || std::stoi(date.substr(0,2))\
    \ == 6 || std::stoi(date.substr(0,2)) == 9 || std::stoi(date.substr(0,2)) == 11){\n\
    \    if(std::stoi(date.substr(3,2)) > 30) return false;\n  }\n  else if(std::stoi(date.substr(0,2))\
    \ == 2){\n    if(std::stoi(date.substr(3,2)) > 29) return false;\n  }\n  else\
    \ if(std::stoi(date.substr(6,4)) < 1 || std::stoi(date.substr(6,4)) > 9999) return\
    \ false;\n  return true;", "  std::regex re(\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$\"\
    );\n  return std::regex_match(date, re);", "    std::stringstream ds(date);\n\
    \    int day,month,year;\n    char c;\n    ds>>month>>c>>day>>c>>year;\n    if\
    \ (ds.fail()) {\n        return false;\n    }\n    // cout<<month<<\"-\"<<day<<\"\
    -\"<<year<<endl;\n    if (c != '-') {\n        return false;\n    }\n    if (month<1\
    \ || month>12) {\n        return false;\n    }\n    if (day<1 || day>31) {\n \
    \       return false;\n    }\n    if (month==2) {\n        if (day>29) {\n   \
    \         return false;\n        }\n    }\n    if (month==4 || month==6 || month==9\
    \ || month==11) {\n        if (day>30) {\n            return false;\n        }\n\
    \    }\n    if (month>=1 && month<=12) {\n        if (day>=1 && day<=31) {\n \
    \           return true;\n        }\n    }\n    return false;", "  // your code\
    \ here\n  std::stringstream ss(date);\n  char delimiter;\n  int month, day, year;\n\
    \  if(!(ss >> month >> delimiter >> day >> delimiter >> year)){\n    return false;\n\
    \  }\n  if(month > 12 || month < 1){\n    return false;\n  }\n  if(day > 31 ||\
    \ day < 1){\n    return false;\n  }\n  if(month == 2){\n    if(day > 29){\n  \
    \    return false;\n    }\n  }\n  if(month == 4 || month == 6 || month == 9 ||\
    \ month == 11){\n    if(day > 30){\n      return false;\n    }\n  }\n  return\
    \ true;", "    bool is_valid=true;\n    int i=0;\n    int month=0;\n    int day=0;\n\
    \    int year=0;\n    while(date[i]!='-')\n    {\n        month=(month*10)+(date[i]-'0');\n\
    \        i++;\n    }\n    i++;\n    while(date[i]!='-')\n    {\n        day=(day*10)+(date[i]-'0');\n\
    \        i++;\n    }\n    i++;\n    while(date[i]!='\\0')\n    {\n        year=(year*10)+(date[i]-'0');\n\
    \        i++;\n    }\n    if(month<1||month>12)\n    {\n        is_valid=false;\n\
    \    }\n    else if(month==2)\n    {\n        if(day<1||day>29)\n        {\n \
    \           is_valid=false;\n        }\n    }\n    else if(month==4||month==6||month==9||month==11)\n\
    \    {\n        if(day<1||day>30)\n        {\n            is_valid=false;\n  \
    \      }\n    }\n    else\n    {\n        if(day<1||day>31)\n        {\n     \
    \       is_valid=false;\n        }\n    }\n    return is_valid;", "    // your\
    \ code here\n    int found = date.find('-');\n    if(found == std::string::npos)\n\
    \        return false;\n    std::string mon = date.substr(0, found);\n    date\
    \ = date.substr(found+1);\n    found = date.find('-');\n    if(found == std::string::npos)\n\
    \        return false;\n    std::string day = date.substr(0, found);\n    date\
    \ = date.substr(found+1);\n    if(stoi(mon) > 12 || stoi(mon) < 1)\n        return\
    \ false;\n    if(stoi(day) > 31 || stoi(day) < 1)\n        return false;\n   \
    \ if(stoi(mon) == 2 && stoi(day) > 29)\n        return false;\n    if((stoi(mon)\
    \ == 4 || stoi(mon) == 6 || stoi(mon) == 9 || stoi(mon) == 11) && stoi(day) >\
    \ 30)\n        return false;\n    if(date.length() != 4)\n        return false;\n\
    \    return true;"]
stop_tokens:
- "\n}"

name: HumanEval_98_count_upper
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string s, count the\
  \ number of uppercase vowels in even indices.\n// For example:\n// count_upper('aBCdEf')\
  \ returns 1\n// count_upper('abcdefg') returns 0\n// count_upper('dBBE') returns\
  \ 0\nlong count_upper(std::string s) {\n"
tests: "}\nint main() {\n    auto candidate = count_upper;\n    assert(candidate((\"\
  aBCdEf\")) == (1));\n    assert(candidate((\"abcdefg\")) == (0));\n    assert(candidate((\"\
  dBBE\")) == (0));\n    assert(candidate((\"B\")) == (0));\n    assert(candidate((\"\
  U\")) == (1));\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
  EEEE\")) == (2));\n}\n"
completions: ["    int c = 0;\n    int l = s.length();\n    std::string str = \"AEIOU\"\
    ;\n    for(int i = 0; i < l; i++){\n        if(i % 2 == 0 && (s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')){\n            c++;\n \
    \       }\n    }\n    return c;", "  int total = 0;\n  for (int i = 0; i < s.length();\
    \ i++) {\n    if (i % 2 == 0 && std::isupper(s[i])) {\n      total++;\n    }\n\
    \  }\n  return total;", "  int count=0;\n  for(int i=0;i<s.length();i++)\n  {\n\
    \    if(i%2==0)\n    {\n      if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \      {\n        count++;\n      }\n    }\n  }\n  return count;", "  long count=0;\n\
    \  for(long i=0;i<s.length();i++){\n    if(i%2==0 && s[i]>=65 && s[i]<=90){\n\
    \      count++;\n    }\n  }\n  return count;", "    // your code here\n    long\
    \ num=0;\n    std::vector<char> vec = {'A','E','I','O','U'};\n    std::set<char>\
    \ c(vec.begin(),vec.end());\n    for(int i=0;i<s.length();i+=2){\n        std::cout<<s[i]<<std::endl;\n\
    \        if(c.find(s[i])!=c.end()){\n            num++;\n        }\n    }\n  \
    \  return num;", "    long k=0;\n    if(s.length()==0)\n        return 0;\n  \
    \  if(s.length()==1)\n    {\n        if(s[0]=='A'||s[0]=='E'||s[0]=='I'||s[0]=='O'||s[0]=='U')\n\
    \            return 1;\n        else\n            return 0;\n    }\n    for(int\
    \ i=0;i<s.length();i++)\n    {\n        if(i%2==0)\n        {\n            if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \                k++;\n        }\n    }\n    return k;", "   int vowel=0;\n  \
    \  for(int i=0; i< s.length(); i++){\n        if(s[i] == 'A' || s[i] == 'E' ||\
    \ s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n            if(i%2==0){\n     \
    \           vowel++;\n            }\n        }\n    }\n    return vowel;", " \
    \   int count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(i %\
    \ 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U') {\n            count += 1;\n        }\n    }\n    return count;", "   \
    \ long int upper_count = 0;\n    for(int i = 0; i < s.length(); i+=2){\n     \
    \   if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n\
    \            upper_count++;\n        }\n    }\n    return upper_count;", "\tint\
    \ x = 0;\n\tint count = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\t\
    x = i;\n\t\t\tif (x % 2 == 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ count;", "    std::set<char> vowels{'A', 'E', 'I', 'O', 'U'};\n    long cnt\
    \ = 0;\n    for (long i = 0; i < s.size(); i++) {\n        if (i % 2 == 0 && vowels.count(s[i]))\
    \ {\n            cnt++;\n        }\n    }\n    return cnt;", "\tint count = 0;\n\
    \tfor (int i = 0; i < s.length(); i += 2) {\n\t\tif (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\tcount++;\n\t\t}\n\t}\n\
    \treturn count;", "\tlong counter = 0;\n\tfor (int i = 0; i < s.length(); i +=\
    \ 2) {\n\t\tswitch (s[i]) {\n\t\t\tcase 'A':\n\t\t\tcase 'E':\n\t\t\tcase 'I':\n\
    \t\t\tcase 'O':\n\t\t\tcase 'U':\n\t\t\t\tcounter++;\n\t\t\t\tbreak;\n\t\t}\n\t\
    }\n\treturn counter;", "    long count = 0;\n    for(int i = 0; i < s.length();\
    \ i++){\n        if(i % 2 == 0 && s[i] >= 'A' && s[i] <= 'Z'){\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    int size = s.size();\n\
    \    for(int i = 0; i < size; i++) {\n        if(i % 2 == 0) {\n            if(s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n    \
    \            count++;\n            }\n        }\n    }\n    return count;", " \
    \   // Write your code here\n    int count = 0;\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(i % 2 == 0 && isupper(s[i]))\n        {\n          \
    \  count++;\n        }\n    }\n    return count;", "    int len = s.length();\n\
    \    int count = 0;\n    for(int i = 0; i < len; i++) {\n        if(s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n           \
    \ if(i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n\
    \    return count;", "  int count=0;\n  for(int i=0;i<s.length();i++)\n  {\n \
    \     if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n      {\n   \
    \       if(i%2==0)\n          {\n              count++;\n          }\n      }\n\
    \  }\n  return count;", "  long count=0;\n  for(long i=0;i<s.length();i++)\n \
    \ {\n    if(i%2==0)\n    {\n      if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \      {\n        count++;\n      }\n    }\n  }\n  return count;", "  // replace\
    \ with your code\n  return 0;", "\tlong upper = 0;\n\tlong len = s.length();\n\
    \tfor (int i = 0; i < len; i+=2) {\n\t\tif (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\tupper += 1;\n\t\t}\n\t}\n\treturn\
    \ upper;", "   /*\n   long count_upper(std::string s) {\n    return std::count_if(s.begin(),\
    \ s.end(), [](auto ch) {\n       return (ch >= 'A' && ch <= 'Z') && (ch%2==0);\n\
    \    });", "    long num_upper = 0;\n    for (long i = 0; i < s.size(); i+=2)\
    \ {\n        if (isupper(s[i])) {\n            num_upper++;\n        }\n    }\n\
    \    return num_upper;", "    long count=0;\n    int len=s.length();\n    for(int\
    \ i=0;i<len;i+=2)\n    {\n        if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \        {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ c = 0;\n    for(size_t i = 0; i < s.size(); i += 2) {\n        if(s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n           \
    \ c++;\n        }\n    }\n    return c;", "\tlong count = 0;\n\tfor (int i = 0;\
    \ i < s.length(); i += 2) {\n\t\tif (s[i] == 'A' || s[i] == 'E' || s[i] == 'I'\
    \ || s[i] == 'O' || s[i] == 'U') {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
  "    int x=0;\n    for(int i=0;i<s.length();i+=2){\n        if(isupper(s[i])){\n\
    \            x++;\n        }\n    }\n    return x;", "\tlong uppervowels = 0;\n\
    \tfor (int i = 0; i < s.length(); i += 2) {\n\t\tchar c = s[i];\n\t\tif (c ==\
    \ 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\t\t\tuppervowels++;\n\
    \t\t}\n\t}\n\treturn uppervowels;", "\tlong cnt = 0;\n\tstd::string vowels = \"\
    AEIOU\";\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (vowels.find(s[i])\
    \ != std::string::npos) {\n\t\t\tif (i % 2 == 0) {\n\t\t\t\tcnt++;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn cnt;", "    // your code here\n    int count = 0;\n    for(int\
    \ i = 0; i < s.length(); i+=2){\n        if(s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U')\n            count++;\n    }\n    return\
    \ count;", "    /* Start here */\n    std::vector<char> vowel = {'A', 'E', 'I',\
    \ 'O', 'U'};\n    int count = 0;\n    for(int i = 0; i < s.length(); i++) {\n\
    \        if(i % 2 == 0) {\n            for(int j = 0; j < vowel.size(); j++) {\n\
    \                if(s[i] == vowel[j]) {\n                    count++;\n      \
    \          }\n            }\n        }\n    }\n    return count;", "    long ctr\
    \ = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(i % 2 == 0 && s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            ctr++;\n        }\n    }\n    return ctr;",
  "    long count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(isupper(s[i])\
    \ && i % 2 == 0) {\n            count++;\n        }\n    }\n    return count;",
  "    int count = 0;\n    for(int i = 0; i < s.length(); i++){\n        if(i % 2\
    \ == 0 && (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U')){\n            count++;\n        }\n    }\n    return count;", "\tlong\
    \ numberOfUpper = 0;\n\tfor (int i = 0; i < s.length(); i += 2) {\n\t\tif (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\t\
    numberOfUpper++;\n\t\t}\n\t}\n\treturn numberOfUpper;", "    long upperCount =\
    \ 0;\n    for(long i = 0; i < s.length(); i++) {\n        if(s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            if(i % 2\
    \ == 0)\n                upperCount++;\n        }\n    }\n    return upperCount;",
  "\t// TODO: implement this function\n\t// You may implement any additional functions\
    \ you may need\n    long count=0;\n    for(int i=0;i<s.length();i++){\n      \
    \  if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n        if(i%2==0){\n\
    \            count++;\n        }\n        }\n    }\n\treturn count;", "  long\
    \ count = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'A' ||\
    \ s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n      if (i % 2\
    \ == 0) {\n        count++;\n      }\n    }\n  }\n  return count;", "    std::vector<char>\
    \ v = {'A', 'E', 'I', 'O', 'U'};\n    int count = 0;\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (i % 2 == 0) {\n            for (int j = 0; j\
    \ < v.size(); j++) {\n                if (v[j] == s[i]) {\n                  \
    \  count++;\n                }\n            }\n        }\n    }\n    return count;",
  "   int count = 0;\n   for(int i = 1; i < s.length(); i = i + 2) {\n     if(toupper(s[i])\
    \ == 'A' || toupper(s[i]) == 'E' || toupper(s[i]) == 'I' || toupper(s[i]) == 'O'\
    \ || toupper(s[i]) == 'U') {\n       count++;\n     }\n   }\n   return count;",
  "    long count=0;\n    for(int i=0;i<s.length();i++){\n        if(i%2==0 && isupper(s[i])){\n\
    \            count++;\n        }\n    }\n    return count;", "\tint count = 0;\n\
    \tfor (int i = 0; i < s.length(); i++) {\n\t\tif (i % 2 == 0) {\n\t\t\tif (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\t\
    \tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    long count = 0;\n    for(long\
    \ i = 0; i < s.length(); i++){\n        if(s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U'){\n            if(i % 2 == 0){\n      \
    \          count++;\n            }\n        }\n    }\n    return count;", "  \
    \  long count=0;\n    for(int i=0;i<s.length();i++)\n    {\n        if(i%2==0\
    \ && s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U')\n        {\n\
    \            count++;\n        }\n    }\n    return count;", "    // your code\
    \ here\n    long count = 0;\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(i % 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] ==\
    \ 'O' || s[i] == 'U')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;", "    long vowel_count = 0;\n    long vowel_index = 0;\n    while\
    \ (vowel_index < s.length()) {\n        if (isupper(s[vowel_index])) {\n     \
    \       vowel_count += 1;\n        }\n        vowel_index += 2;\n    }\n    return\
    \ vowel_count;", "  int count = 0;\n  for (int i = 0; i < s.length(); i++) {\n\
    \    if (isupper(s[i]) && i % 2 == 0) {\n      count++;\n    }\n  }\n  return\
    \ count;", "    int count = 0;\n    for(int i = 0; i < s.length(); i++) {\n  \
    \      if(i % 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U') {\n            count++;\n        }\n    }\n    return count;",
  "    // Enter your code here\n    long l=0;\n    for(int i=0;i<s.length();i++){\n\
    \        if(i%2==0 && isupper(s[i])){\n            if(s[i]=='A' || s[i]=='E' ||\
    \ s[i]=='I' || s[i]=='O' || s[i]=='U'){\n                l++;\n            }\n\
    \        }\n    }\n    return l;", "    long count = 0;\n    for(int i = 0; i\
    \ < s.length(); i++) {\n        if(i % 2 == 0 && (s[i] == 'A' || s[i] == 'E' ||\
    \ s[i] == 'I' || s[i] == 'O' || s[i] == 'U'))\n            count++;\n    }\n \
    \   return count;", "    long count=0;\n    for(long i=0;i<s.length();i++)\n \
    \   {\n        if(isupper(s[i]) && (i%2==0))\n        {\n            count++;\n\
    \        }\n    }\n    return count;", "    // your code here\n    long count\
    \ = 0;\n    for(int i = 0; i < s.length(); i++){\n        if(i % 2 == 0 && (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')){\n    \
    \        count++;\n        }\n    }\n    return count;", "\tlong result = 0;\n\
    \tfor (int i = 0; i < s.length(); i++) {\n\t\tif (i % 2 == 0) {\n\t\t\tif (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\t\
    \tresult += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;", "\t// Write your solution\
    \ here\n\tlong long ans = 0;\n\tstd::vector<char> v;\n\tfor (char i : s) {\n\t\
    \tif (i >= 'A' && i <= 'Z') {\n\t\t\tv.push_back(i);\n\t\t}\n\t}\n\tfor (int i\
    \ = 0; i < v.size(); i++) {\n\t\tif (i % 2 == 0) {\n\t\t\tans++;\n\t\t}\n\t}\n\
    \treturn ans;", "  int upper_count = 0;\n  for (int i = 0; i < s.length(); i++)\
    \ {\n    char c = s[i];\n    if (i % 2 == 0 && c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U') {\n      upper_count++;\n    }\n  }\n  return upper_count;",
  "    // your code here\n    int count = 0;\n    int j = 0;\n    std::string vowels\
    \ = \"AEIOU\";\n    while(s[j] != '\\0'){\n        for(int i = 0; i < 5; i++){\n\
    \            if(s[j] == vowels[i]){\n                count++;\n            }\n\
    \        }\n        j += 2;\n    }\n    return count;", "  std::string s2 = \"\
    \";\n  long count = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if ((i %\
    \ 2) == 0) {\n      s2 += s[i];\n    }\n  }\n  for (int i = 0; i < s2.length();\
    \ i++) {\n    if (s2[i] == 'A' || s2[i] == 'E' || s2[i] == 'I' || s2[i] == 'O'\
    \ || s2[i] == 'U') {\n      count++;\n    }\n  }\n  return count;", "    long\
    \ count=0;\n    for(long i=0;i<s.length();i+=2){\n        if(isupper(s[i]))\n\
    \            count++;\n    }\n    return count;", "\tlong counter = 0;\n\tfor\
    \ (long i = 0; i < s.length(); i++) {\n\t\tif (i % 2 == 0) {\n\t\t\tif (s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\t\t\
    counter++;\n\t\t\t}\n\t\t}\n\t}\n\treturn counter;", "    long cnt=0;\n    for(int\
    \ i=0;i<s.length();i++)\n    {\n        if(i%2==0 && s[i]=='A' || s[i]=='E' ||\
    \ s[i]=='I' || s[i]=='O' || s[i]=='U')\n        {\n            cnt++;\n      \
    \  }\n    }\n    return cnt;", "    long vowelCount = 0;\n    for(long i = 0;\
    \ i < s.length(); i++){\n        if(i % 2 == 0){\n            if(s[i] == 'A' ||\
    \ s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n               \
    \ vowelCount++;\n            }\n        }\n    }\n    return vowelCount;", " \
    \   long num = 0;\n    for (int i = 0; i < s.length(); i+=2) {\n        if (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n    \
    \        num++;\n        }\n    }\n    return num;", "    int counter = 0;\n \
    \   for(int i = 0; i < s.length(); i++){\n        if(s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n            if(i % 2 == 0){\n\
    \                counter++;\n            }\n        }\n    }\n    return counter;",
  "  // put your code here\n  // assuming string is alreasy in lowercase\n  long ans\
    \ = 0;\n  for(int i = 1; i < s.length(); i += 2) {\n    if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      ans++;\n    }\n\
    \  }\n  return ans;", "    // Your code here\n    long i=0,count=0;\n    if(s.size()==0)\n\
    \        return 0;\n    while(i<s.size())\n    {\n        if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \        {\n            if(i%2==0)\n                count++;\n        }\n    \
    \    i++;\n    }\n    return count;", "\tlong upper_vowels = 0;\n\tfor (long i\
    \ = 0; i < s.length(); i++) {\n\t\tif ((s[i] == 'A' || s[i] == 'E' || s[i] ==\
    \ 'I' || s[i] == 'O' || s[i] == 'U') && i % 2 == 0) {\n\t\t\tupper_vowels++;\n\
    \t\t}\n\t}\n\treturn upper_vowels;", "  // Write your code here\n  long count\
    \ = 0;\n  long len = s.length();\n  for(long i = 0; i < len; i++)\n  {\n     \
    \ if((s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\
    \ && i%2 == 0)\n      {\n          count++;\n      }\n  }\n  return count;", " \
    \   // Your code here!\n    long count = 0;\n    for(int i = 0; i < s.length();\
    \ i++){\n      if(i % 2 == 0){\n        if(isupper(s[i]))\n          count++;\n\
    \      }\n    }\n    return count;", "    int count = 0;\n    for(int i = 0; i\
    \ < s.length(); i++) {\n        if(i % 2 == 0 && (s[i] == 'A' || s[i] == 'E' ||\
    \ s[i] == 'I' || s[i] == 'O' || s[i] == 'U')) {\n            count++;\n      \
    \  }\n    }\n    return count;", "  long c = 0;\n  for (int i = 0; i < s.length();\
    \ i++) {\n    if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U') {\n      if (i % 2 == 0)\n        c++;\n    }\n  }\n  return c;",
  "    int count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        char c =\
    \ s[i];\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' || c == 'O'\
    \ || c == 'U') {\n            count++;\n        }\n    }\n    return count;",
  "\tstd::string vowels = \"AEIOU\";\n\tlong count = 0;\n\tfor (int i = 0; i < s.length();\
    \ i += 2) {\n\t\tfor (int j = 0; j < vowels.length(); j++) {\n\t\t\tif (s[i] ==\
    \ vowels[j]) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "   \
    \ long count = 0;\n    for(int i = 0; i < s.length(); i++){\n        if(i % 2\
    \ == 0){\n            if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] ==\
    \ 'O' || s[i] == 'U'){\n                count++;\n            }\n        }\n \
    \   }\n    return count;", "    std::set<char> vowels;\n    vowels.insert('A');\n\
    \    vowels.insert('E');\n    vowels.insert('I');\n    vowels.insert('O');\n \
    \   vowels.insert('U');\n    int count = 0;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(i % 2 == 0 && vowels.find(s[i]) != vowels.end()) {\n    \
    \        count++;\n        }\n    }\n    return count;", "  long count = 0;\n\
    \  for (int i = 0; i < s.length(); i++){\n    if (s[i] == 'A' || s[i] == 'E' ||\
    \ s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n      if (i % 2 == 0){\n      \
    \  count++;\n      }\n    }\n  }\n  return count;", "\tlong count=0;\n\tfor(long\
    \ i=0;i<s.length();i++)\n\t{\n\t\tif(i%2==0 && s[i]=='A' || s[i]=='E' || s[i]=='I'\
    \ || s[i]=='O' || s[i]=='U')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
  "    long sum=0;\n    for(long i=0;i<s.length();i++)\n    {\n        if(isupper(s[i])\
    \ && i%2==0)\n        {\n            sum++;\n        }\n    }\n    return sum;",
  "    long count=0;\n    int n=s.length();\n    for(int i=0;i<n;i++){\n        if(i%2==0){\n\
    \            if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n    \
    \            count++;\n            }\n        }\n    }\n    return count;", " \
    \   // write your code here!\n    return count_if(s.begin(), s.end(), [](char\
    \ c) {\n        switch (c) {\n            case 'A':\n            case 'E':\n \
    \           case 'I':\n            case 'O':\n            case 'U':\n        \
    \        return true;\n            default:\n                return false;\n \
    \       }\n    });", "// my code\nlong length=s.length();\nlong count=0;\nlong\
    \ i=0;\nwhile(i<length)\n{\n  if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \  {\n    if(i%2==0)\n    {\n      count++;\n    }\n  }\n  i++;", "    int count\
    \ = 0;\n    // std::cout << \" \" << s.length() << \" len\\n\";\n    for(int i\
    \ = 1; i < s.length(); i = i + 2) {\n        // std::cout << \" \" << s[i] <<\
    \ \" \" << (int)s[i] << \"\\n\";\n        if(s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n            count++;\n        }\n \
    \   }\n    return count;", "    int len = s.length();\n    int count = 0;\n  \
    \  int i = 0;\n    std::string vowels = \"aeiouAEIOU\";\n    while(i < len) {\n\
    \        if (vowels.find(s[i]) != std::string::npos) {\n            if (i % 2\
    \ == 0) {\n                count++;\n            }\n        }\n        i++;\n\
    \    }\n    return count;", "\tlong count = 0;\n\tfor (int i = 0; i < s.length();\
    \ i += 2) {\n\t\tif (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U') {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "    long count\
    \ = 0;\n    for(int i = 0; i < s.length(); i++){\n        if(s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n            if(i % 2\
    \ == 0){\n                count++;\n            }\n        }\n    }\n    return\
    \ count;", "    int count = 0;\n    for(int i = 0; i < s.length(); i++) {\n  \
    \      if(i % 2 == 0 && (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] ==\
    \ 'O' || s[i] == 'U')) {\n            count++;\n        }\n    }\n    return count;",
  "    long n = 0;\n    for (int i = 0; i < s.length(); i += 2) {\n        if (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n    \
    \        n++;\n        }\n    }\n    return n;", "    std::string s1 = \"\";\n\
    \    for(int i = 1; i < s.length(); i++) {\n        if(i % 2 == 0) {\n       \
    \     s1 += s[i];\n        }\n    }\n    int counter = 0;\n    for(int i = 0;\
    \ i < s1.length(); i++) {\n        if(s1[i] >= 'A' && s1[i] <= 'Z') {\n      \
    \      counter++;\n        }\n    }\n    return counter;", "    long n = s.length();\n\
    \    long count = 0;\n    long i = 0;\n    while(i < n) {\n        if(s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n       \
    \     count++;\n        }\n        i = i + 2;\n    }\n    return count;", "  \
    \ // Your code here\n   int i,len,count=0;\n   len=s.length();\n   for(i=0;i<len;i++)\n\
    \   {\n       if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n    \
    \   {\n           if(i%2==0)\n           {\n               count++;\n        \
    \   }\n       }\n   }\n   return count;", "    long upper_even_count = 0;\n  \
    \  for (std::string::size_type i = 0; i < s.size(); i++) {\n        if (i % 2\
    \ == 0 && isupper(s[i])) {\n            upper_even_count++;\n        }\n    }\n\
    \    return upper_even_count;", "    // Your code here\n    long count = 0;\n\
    \    if(s.size() == 0){\n        return 0;\n    }\n    for(long i = 0; i < s.size();\
    \ i++){\n        if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U'){\n            if(i % 2 == 0){\n                count += 1;\n  \
    \          }\n        }\n    }\n    return count;", "\tint i = 0;\n\tchar a[]\
    \ = {'A','E','I','O','U'};\n\tlong count = 0;\n\tfor(int j = 0;j<5;j++){\n\t\t\
    for(i = 0;i<s.length();i++){\n\t\t\tif(i%2==0){\n\t\t\t\tif(a[j]==s[i])\n\t\t\t\
    \t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    long count = 0;\n  \
    \  for(int i = 0; i < s.length(); i++){\n        if(i % 2 == 0){\n           \
    \ if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n\
    \                count++;\n            }\n        }\n    }\n    return count;",
  "    std::set<char> vowels = {'A', 'E', 'I', 'O', 'U'};\n    std::set<char>::iterator\
    \ it;\n    long count = 0;\n    for (int i = 0; i < s.length(); i += 2) {\n  \
    \      it = vowels.find(s[i]);\n        if (it != vowels.end()) {\n          \
    \  count++;\n        }\n    }\n    return count;", "\tlong count = 0;\n\tfor (int\
    \ i = 0; i < s.length(); i++) {\n\t\tif (i % 2 == 0) {\n\t\t\tif (s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\t\tcount++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn count;", "  \n  long c=0;\n  int i;\n  for(i=0;i<s.length();i+=2)\n\
    \  {\n    if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n    {\n \
    \     c++;\n    }\n  }\n  return c;", "    // Write your code here\n    char vowels[]\
    \ = {'A', 'E', 'I', 'O', 'U'};\n    int count = 0;\n    for(int i = 0; i < s.length();\
    \ i++){\n        for(int j = 0; j < 5; j++){\n            if(s[i] == vowels[j]){\n\
    \                count++;\n            }\n        }\n    }\n    return count;",
  "    // your code here\n    long c=0;\n    for(long i=0;i<s.length();i++){\n   \
    \     if(i%2==0){\n            if(s[i]>=65 && s[i]<=90){\n                c++;\n\
    \            }\n        }\n    }\n    return c;", "  // Your code here\n  long\
    \ count=0;\n  for(int i=0;i<s.length();i++)\n  {\n  \tif(i%2==0)\n  \t{\n  \t\t\
    if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n  \t\t\tcount++;\n\
    \  \t}\n  }\n  return count;", "    // Write your code here.\n    int count =\
    \ 0;\n    for(int i = 0; i < s.length(); i+=2){\n        if(s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n            count++;\n\
    \    }\n    return count;", "  int count = 0;\n  for (int i = 0; i < s.length();\
    \ i++) {\n    if ((i % 2 == 0) && (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U'))\n      count++;\n  }\n  return count;", "\t// your\
    \ code here\n\tlong num_upper = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\
    \t\tif (s[i] >= 'A' && s[i] <= 'Z' && i % 2 == 0) {\n\t\t\tnum_upper++;\n\t\t\
    }\n\t}\n\treturn num_upper;", "\tlong count=0;\n\tint i;\n\tstd::string str=\"\
    AEIOU\";\n\tfor(i=0;i<s.length();i++)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\tif(str.find(s[i])!=std::string::npos)\n\
    \t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n    return count;", "    long\
    \ int count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if((s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') && (i %\
    \ 2 == 0))\n            count++;\n    }\n    return count;", "    long count =\
    \ 0;\n    for(long i = 0; i < s.length(); i++){\n      if(std::isupper(s[i]) &&\
    \ i % 2 == 0){\n        count++;\n      }\n    }\n    return count;", "  // Fill\
    \ in this function\n  long int ctr = 0;\n  for(int i = 0; i < s.length(); i++)\n\
    \  {\n    if(s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U')\n\
    \    {\n      if(i%2==0)\n      {\n        ctr++;\n      }\n    }\n  }\n  return\
    \ ctr;", "  long vowels_count = 0;\n  for (int i = 0; i < s.length(); i++) {\n\
    \    if (i % 2 == 0) {\n      if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U') {\n        vowels_count++;\n      }\n    }\n  }\n\
    \  return vowels_count;", "  std::string vowel = \"AEIOU\";\n  long count = 0;\n\
    \  for (long i = 0; i < s.length(); i++) {\n    for (int j = 0; j < vowel.length();\
    \ j++) {\n      if (s[i] == vowel[j] && i % 2 == 0) {\n        count++;\n    \
    \  }\n    }\n  }\n  return count;", "    int count = 0;\n    for(int i = 0; i\
    \ < s.length(); i++){\n        if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U'){\n            if(i % 2 == 0){\n                count++;\n\
    \            }\n        }\n    }\n    return count;", "  int cnt=0;\n  for(int\
    \ i=0;i<s.length();i++){\n    if(s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O'\
    \ || s[i]=='U'){\n      if(i%2==0){\n        cnt++;\n      }\n    }\n  }\n  return\
    \ cnt;", "\tlong long count = 0;\n\tfor (int i = 0; i < s.length(); i+=2) {\n\t\
    \tif(std::isupper(s[i])) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "  int\
    \ count = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'A' ||\
    \ s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n      if (i % 2\
    \ == 0) {\n        count += 1;\n      }\n    }\n  }\n  return count;", "  int\
    \ cnt = 0;\n  for (int i = 0; i < s.size(); i+=2) {\n    if (s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n      cnt++;\n    }\n\
    \  }\n  return cnt;", "\tint counter = 0;\n\tint length = s.length();\n\tfor (int\
    \ i = 0; i < length; i+=2) {\n\t\tif (s[i] == 'A' || s[i] == 'E' || s[i] == 'I'\
    \ || s[i] == 'O' || s[i] == 'U') {\n\t\t\tcounter++;\n\t\t}\n\t}\n\treturn counter;",
  "    long count = 0;\n    for(size_t i = 0; i < s.size(); i++) {\n        if(i %\
    \ 2 == 0 && isupper(s[i])) {\n            count++;\n        }\n    }\n    return\
    \ count;", "\t", "    long num_vowels=0;\n    int n=s.length();\n    for(int i=0;i<n;i++)\n\
    \    {\n        if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n  \
    \      {\n            if(i%2==0)\n            {\n                num_vowels++;\n\
    \            }\n        }\n    }\n    return num_vowels;", "  long count = 0;\n\
    \  for (int i = 0; i < s.length(); i++) {\n    if ((i % 2 == 0) && (s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')) {\n      count++;\n\
    \    }\n  }\n  return count;", "\tlong count = 0;\n\tfor (int i = 0; i < s.length();\
    \ i++) {\n\t\tif (i % 2 == 0) {\n\t\t\tif (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn count;", "\tstd::cout << s << std::endl;\n\tlong count = 0;\n\tfor\
    \ (size_t i = 0; i < s.size(); i+=2) {\n\t\tif (s[i] == 'A' || s[i] == 'E' ||\
    \ s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\tcount++;\n\t\t}\n\t}\n\t\
    return count;", "\treturn 0;", "    long a=0;\n    for(int i=0;i<s.length();i++)\n\
    \    {\n        if(i%2==0)\n        {\n            if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \            {\n                a++;\n            }\n        }\n    }\n  return\
    \ a;", "    long count=0;\n    for(long i=0;i<s.length();i++)\n    {\n       \
    \ if(s[i]>=65 && s[i]<=90 && i%2==0)\n        {\n            count++;\n      \
    \  }\n    }\n    return count;", "    //your implementation here\n    int count\
    \ = 0;\n    for(int i = 0; i < s.length(); i+=2){\n        if(isupper(s[i]))\n\
    \            count++;\n    }\n    return count;", "    long count = 0;\n    for(int\
    \ i = 0; i < s.length(); i++) {\n        if(isupper(s[i]) && i % 2 == 0) {\n \
    \           count++;\n        }\n    }\n    return count;", "  // your solution\
    \ here\n  int count=0;\n  for(int i=0;i<s.length();i+=2){\n    if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\
    \      count++;\n    }\n  }\n  return count;", "    long length = s.length();\n\
    \    long count = 0;\n    for(int i = 0; i < length; i++) {\n        if(s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n       \
    \     if(i % 2 == 0)\n                count++;\n        }\n    }\n    return count;",
  '  return 0;', "    long n = 0;\n    for (int i = 0; i < s.length(); i += 2) {\n\
    \        if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i]\
    \ == 'U') {\n            n++;\n        }\n    }\n    return n;", "    long count\
    \ = 0;\n    for(int i = 0; i < s.length(); i++){\n        if(i % 2 == 0 && (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')){\n    \
    \        count++;\n        }\n    }\n    return count;", "    long count=0;\n\
    \    for(int i=0;i<s.length();i++){\n        if(s[i]>='A' && s[i]<='Z' && i%2==0){\n\
    \            count++;\n        }\n    }\n    return count;", "    // Your code\
    \ here\n    long cnt = 0;\n    for(long i = 0; i < s.length(); i++){\n       \
    \ if(i % 2 == 0){\n            if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U'){\n                cnt++;\n            }\n      \
    \  }\n    }\n    return cnt;", "    if(s.length() == 0)\n        return 0;\n \
    \   if(s.length() == 1)\n        return (s[0] == 'A' || s[0] == 'E' || s[0] ==\
    \ 'I' || s[0] == 'O' || s[0] == 'U') ? 1 : 0;\n    long count = 0;\n    for(long\
    \ i = 0; i < s.length(); i += 2)\n        if(s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U')\n            count++;\n    return count;",
  "  int count = 0;\n  int length = s.length();\n  for(int i = 0; i < length; i+=2){\n\
    \    if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;", "\tlong count = 0;\n\tif(s.size()\
    \ == 0) return 0;\n\tfor(int i = 0; i < s.size(); i++) {\n\t\tif(i % 2 == 0) {\n\
    \t\t\tif(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\
    \ count++;\n\t\t}\n\t}\n\treturn count;", "    long cnt = 0;\n    for(int i =\
    \ 0; i < s.length(); i += 2) {\n        if(isupper(s[i])) {\n            cnt++;\n\
    \        }\n    }\n    return cnt;", "  // Your code here\n  std::string vowel\
    \ = \"AEIOU\";\n  long len = s.length();\n  long j=0;\n  long count = 0;\n  for(long\
    \ i=0;i<len;i++){\n    if(s[i] == vowel[j]){\n      count = count + 1;\n    }\n\
    \    if(j<5){\n      j++;\n    }\n    else{\n      j=0;\n    }\n  }\n  return\
    \ count;", "    long counter = 0;\n    int length = s.length();\n    for (int\
    \ i = 0; i < length; i++) {\n        if (std::toupper(s[i]) == s[i]) {\n     \
    \       if (i % 2 == 0) {\n                counter++;\n            }\n       \
    \ }\n    }\n    return counter;", "    int count=0;\n    for(int i=0;i<s.length();i+=2){\n\
    \        if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n        \
    \    count++;\n        }\n    }\n    return count;", "\t// You may add more parameters\
    \ to this function if you like\n\t// i.e. count_upper(std::string s, int x, int\
    \ y, ...)\n\t// For example, count_upper('dBBE', 4, 5, ...)\n\t// Consider the\
    \ strings as ASCII strings\n\t// Do not use any STL functions\n\t// A-Z: 65-90\n\
    \t// a-z: 97-122\n\tlong l = s.length();\n\tlong c = 0;\n\tfor (long i = 0; i\
    \ < l; i++) {\n\t\tif ((i % 2 == 0) && (s[i] >= 65) && (s[i] <= 90)) {\n\t\t\t\
    c++;\n\t\t}\n\t}\n\treturn c;", "    long count = 0;\n    for(int i = 0; i < s.length();\
    \ i++){\n        if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U'){\n            if(i % 2 == 0){\n                count++;\n     \
    \       }\n        }\n    }\n    return count;", "    int count = 0;\n    for(int\
    \ i = 0; i < s.length(); i++) {\n        if((i%2)==0 && s[i]=='A' || s[i]=='E'\
    \ || s[i]=='I' || s[i]=='O' || s[i]=='U') {\n            count += 1;\n       \
    \ }\n    }\n    return count;", "\t", "    long result = 0;\n    for (int i =\
    \ 0; i < s.length(); i++){\n        if (i % 2 == 0 && (s[i] == 'A' || s[i] ==\
    \ 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')){\n            result++;\n\
    \        }\n    }\n    return result;", "   int i,count=0;\n    for(i=0;i<s.length();i++)\n\
    \    {\n        if(i%2==0)\n        {\n            if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n    // Your code here", "    std::vector<char> vowels = {'A',\
    \ 'E', 'I', 'O', 'U'};\n    std::vector<long> ans;\n    long count = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (i % 2 == 0) {\n            for\
    \ (int j = 0; j < vowels.size(); j++) {\n                if (s[i] == vowels[j])\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \    }\n    return count;", "    // WRITE YOUR CODE HERE!!!\n    return 0;", " \
    \   // Your code here\n    long count = 0;\n    for(auto it = s.begin(); it !=\
    \ s.end(); it+=2){\n        if(isupper(*it)){\n            count++;\n        }\n\
    \    }\n    return count;", "    long count=0;\n    for(int i=0;i<s.length();i++)\n\
    \    {\n        if(isupper(s[i])==true && i%2==0)\n        {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    for(int i = 0;\
    \ i < s.length(); i++) {\n        if(i % 2 == 0 && toupper(s[i]) == s[i]) {\n\
    \            count++;\n        }\n    }\n    return count;", "  int n=s.length();\n\
    \  int c=0;\n  for(int i=0;i<n;i+=2)\n  {\n    if(isupper(s[i]))\n    {\n    \
    \  if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n      {\n      \
    \  c++;\n      }\n    }\n  }\n  return c;", "    long c = 0;\n    for(long i =\
    \ 0; i < s.length(); i+=2){\n        if(s[i] == 'A' || s[i] == 'E' || s[i] ==\
    \ 'I' || s[i] == 'O' || s[i] == 'U'){\n            c++;\n        }\n    }\n  \
    \  return c;", "    long count = 0;\n    int i = 0;\n    for (char c : s) {\n\
    \        if (i % 2 == 0 && c != tolower(c)) {\n            count++;\n        }\n\
    \        i++;\n    }\n    return count;", "    // your code here\n    int count=0;\n\
    \    for(int i=0;i<s.length();i++){\n        if(i%2==0 && (s[i]=='A' || s[i]=='E'\
    \ || s[i]=='I' || s[i]=='O' || s[i]=='U'))\n            count++;\n    }\n    return\
    \ count;", "    int count = 0;\n    for(int i = 0; i < s.length(); i++) {\n  \
    \      if(i % 2 == 0 && isupper(s[i])) {\n            if(s[i] == 'A' || s[i] ==\
    \ 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n                count++;\n\
    \            }\n        }\n    }\n    return count;", "  int count = 0;\n  for\
    \ (int i = 0; i < s.length(); i++) {\n    if (i % 2 == 0 && (s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')) {\n      count++;\n  \
    \  }\n  }\n  return count;", "// Write your code here\n\n\n  // This will not\
    \ work\n  // std::vector<int> vowels = {'a', 'e', 'i', 'o', 'u'};\n  // // long\
    \ count = 0;\n  // long vowel_count = 0;\n  // for (int i = 0; i < s.length();\
    \ i++) {\n  //   for (auto it : vowels) {\n  //     if (s[i] == it) {\n  //  \
    \     vowel_count++;\n  //     }\n  //   }\n  // }\n  //\n  // return vowel_count;\n\
    \n  std::vector<char> vowels = {'a', 'e', 'i', 'o', 'u'};\n  long vowel_count\
    \ = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if ((std::find(vowels.begin(),\
    \ vowels.end(), s[i]) != vowels.end()) && i % 2 == 0) {\n      vowel_count++;\n\
    \    }\n  }\n\n  return vowel_count;", "\t// TODO: Implement this function\n\t\
    long count = 0;\n\tfor (long i = 0; i < s.length(); i += 2) {\n\t\tif (s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;", "    long result = 0;\n    for (int i = 0; i < s.length();\
    \ i += 2) {\n        if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] ==\
    \ 'O' || s[i] == 'U') {\n            result++;\n        }\n    }\n    return result;",
  "  // Write your solution here\n  long count = 0;\n  for(int i = 1; i < s.length();\
    \ i += 2){\n    if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U'){\n      count++;\n    }\n  }\n  return count;", "  // your code\
    \ here\n  int n = s.length();\n  int count = 0;\n  for(int i = 0; i < n; i++)\n\
    \  {\n    if(i % 2 == 0)\n    {\n      if(s[i] == 'A' || s[i] == 'E' || s[i] ==\
    \ 'I' || s[i] == 'O' || s[i] == 'U')\n      {\n        count++;\n      }\n   \
    \ }\n  }\n  return count;", "    // Write your code here\n    long int count =\
    \ 0;\n    for(long int i = 0; i < s.length(); i++)\n    {\n        if(i % 2 ==\
    \ 0)\n        {\n            if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U')\n            {\n                count++;\n          \
    \  }\n        }\n    }\n    return count;", "\t// your code here\n\n\tlong count\
    \ = 0;\n\tif(s.length()==0){\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<s.length();i++){\n\
    \t\tif(i%2==0){\n\t\t\tif(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    long count=0;\n\
    \    for(int i=0;i<s.length();i++){\n        if(i%2==0 && s[i]=='A' || s[i]=='E'\
    \ || s[i]=='I' || s[i]=='O' || s[i]=='U'){\n            count++;\n        }\n\
    \    }\n    return count;", "\tlong count=0;\n\tfor(int i=0;i<s.length();i++){\n\
    \t\tif(i%2!=0 && (s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U')){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "    long count=0;\n    for(int\
    \ i=0;i<s.length();i++){\n        if(isupper(s[i]) && i%2==0){\n            count++;\n\
    \        }\n    }\n    return count;", '    return 0;', "    long vowels = 0;\n\
    \    std::vector<char> uppercase_vowels = {'A', 'E', 'I', 'O', 'U'};\n    for\
    \ (long i = 0; i < s.length(); i += 2) {\n        auto it = std::find(uppercase_vowels.begin(),\
    \ uppercase_vowels.end(), s[i]);\n        if (it != uppercase_vowels.end()) vowels++;\n\
    \    }\n    return vowels;", "    // Write your code here\n    long count=0;\n\
    \    for(long i=0;i<s.length();i++){\n        if(i%2==0 && s[i]>=65 && s[i]<=90)\n\
    \            count++;\n    }\n    return count;", "  // your code here\n  //Upper\
    \ case 'A'=65 and 'Z'=90\n  long vowelcount=0;\n  long s_len=s.length();\n  for(long\
    \ i=0;i<s_len;i++){\n    if(i%2==0){\n      if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\
    \        vowelcount++;\n      }\n    }\n  }\n  return vowelcount;", "  int count\
    \ = 0;\n  for (int i = 0; i < s.length(); i+=2) {\n    if (s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n      count++;\n   \
    \ }\n  }\n  return count;", "    long count = 0;\n    for(int i = 1; i < s.length();\
    \ i+=2){\n        if((s[i] == 'A') || (s[i] == 'E') || (s[i] == 'I') || (s[i]\
    \ == 'O') || (s[i] == 'U'))\n            count++;\n    }\n    return count;",
  "  long vowel_count = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (i %\
    \ 2 == 0) {\n      if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U') {\n        vowel_count++;\n      }\n    }\n  }\n  return vowel_count;",
  "  int count = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (isupper(s[i])\
    \ && i % 2 == 0)\n      count++;\n  }\n  return count;", "    long result = 0;\n\
    \    // add your code here\n    for(int i=0;i<s.length();i++){\n        if(i%2\
    \ == 0 && s[i]>='A' && s[i]<='Z'){\n            result++;\n        }\n    }\n\
    \    return result;", "  long res=0;\n  int c=0;\n  for(long i=0;i<s.length();i++){\n\
    \    if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n      c++;\n\
    \    }\n  }\n  return c;", "    long i,count=0;\n    for(i=0;i<s.length();i+=2)\n\
    \    {\n        if(isupper(s[i]))\n        {\n            if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;", "    long counter = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (i % 2 == 0 && isupper(s[i])) {\n            counter++;\n\
    \        }\n    }\n    return counter;", "  // Good luck!\n  int count=0;\n  for(long\
    \ i=0;i<s.length();i++)\n  {\n    if(i%2==0 && (s[i]=='A' || s[i]=='E' || s[i]=='I'\
    \ || s[i]=='O' || s[i]=='U'))\n    {\n      count++;\n    }\n  }\n  return count;",
  "    long result = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if ((i%2\
    \ == 0) && (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U')) {\n            result++;\n        }\n    }\n    return result;", "  int\
    \ i = 0;\n  int vowels = 0;\n  while (i < s.length()) {\n    if (i % 2 == 0) {\n\
    \      if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U')\n        vowels++;\n    }\n    i++;\n  }\n  return vowels;", "  int n =\
    \ s.length();\n  char vowels[5] = {'A', 'E', 'I', 'O', 'U'};\n  int numberOfUpperCaseVowels\
    \ = 0;\n  for (int i = 0; i < n; i += 2) {\n    for (int j = 0; j < 5; j++) {\n\
    \      if (s[i] == vowels[j]) {\n        numberOfUpperCaseVowels++;\n      }\n\
    \    }\n  }\n  return numberOfUpperCaseVowels;", "    int count = 0;\n    for(int\
    \ i = 0; i < s.length(); i++){\n      if(s[i] == 'A'|| s[i] == 'E' || s[i] ==\
    \ 'I' || s[i] == 'O' || s[i] == 'U'){\n        if(i % 2 == 0){\n          count++;\n\
    \        }\n      }\n    }\n    return count;", "    // your code here\n    long\
    \ count = 0;\n    for(auto x : s)\n    {\n        if(x >= 'A' && x <= 'Z')\n \
    \       {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count=0;\n    std::string str=\"aeiouAEIOU\";\n    for(int i=0;i<s.length();i++){\n\
    \      if(i%2==0){\n        if(str.find(s[i])<10){\n          count++;\n     \
    \   }\n      }\n    }\n    return count;", "    long count=0;\n    for(long i=0;i<s.length();i++)\n\
    \    {\n        if(i%2==0)\n        {\n            if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;", "    int count=0;\n    for(int i=0;i<s.length();i+=2){\n  \
    \      if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n          \
    \  count++;\n        }\n    }\n    return count;", "    // your code here\n  \
    \  long count = 0;\n    for(int i = 0; i < s.length(); i+=2){\n        if(std::isupper(s[i])){\n\
    \            count++;\n        }\n    }\n    return count;", "    if(s.length()\
    \ <= 0) return 0;\n    long vowelCount = 0;\n    for(int i = 0; i < s.length();\
    \ i++){\n        if(i % 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U')\n            vowelCount++;\n    }\n    return vowelCount;",
  "\tlong count = 0;\n\tfor (long i = 0; i < s.length(); i++) {\n\t\tif (isupper(s[i])\
    \ && i % 2 == 0)\n\t\t\tcount++;\n\t}\n\treturn count;", "  // Write your code\
    \ here\n  // Do not write the main method\n    int ans=0;\n    for(int i=0;i<s.length();i++)\n\
    \    {\n        if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n  \
    \      {\n            if(i%2==0)\n            {\n                ans++;\n    \
    \        }\n        }\n    }\n    return ans;", "\tstd::string vowels = \"AEIOU\"\
    ;\n\tlong count = 0;\n\tfor (long i = 0; i < s.length(); i++) {\n\t\tif (vowels.find(s[i])\
    \ != std::string::npos && i % 2 == 0) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;", "  long vowels = 0;\n  for (int i = 0; i < s.length(); i++) {\n   \
    \ if ((i % 2 == 0) && (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U')) {\n      vowels += 1;\n    }\n  }\n  return vowels;", "   \
    \ long count = 0;\n    for(long i = 0; i < s.length(); i++) {\n        if(i %\
    \ 2 == 0 && s[i] >= 'A' && s[i] <= 'Z') {\n            count++;\n        }\n \
    \   }\n    return count;", "\tlong count = 0;\n\tfor (long i = 0; i < s.length();\
    \ i++) {\n\t\tif (((s[i] == 'A') || (s[i] == 'E') || (s[i] == 'I') || (s[i] ==\
    \ 'O') || (s[i] == 'U')) && (i % 2 == 0)) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;", "  long counter = 0;\n  for (long i = 0; i < s.length(); i++) {\n \
    \   if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\
    \ {\n      if (i % 2 == 0) {\n        counter++;\n      }\n    }\n  }\n  return\
    \ counter;", "  long sum = 0;\n  for (int i = 0; i < s.length(); i += 2) {\n \
    \   if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\
    \ {\n      sum++;\n    }\n  }\n  return sum;", "  int count = 0;\n  for (int i\
    \ = 0; i < s.length(); i++) {\n    if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I'\
    \ || s[i] == 'O' || s[i] == 'U') {\n      if (i % 2 == 0) {\n        count++;\n\
    \      }\n    }\n  }\n  return count;", "  // Write your code here\n  long count\
    \ = 0;\n  for(long i = 0; i < s.length(); i += 2) {\n    if(s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n      count++;\n   \
    \ }\n  }\n  return count;", "    long count = 0;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(i % 2 == 0 && isupper(s[i])) {\n            count++;\n  \
    \      }\n    }\n    return count;"]
stop_tokens:
- "\n}"

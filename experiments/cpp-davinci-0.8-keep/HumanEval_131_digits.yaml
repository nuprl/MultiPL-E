name: HumanEval_131_digits
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
  \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
  // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
  long digits(long n) {\n"
tests: "}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) ==\
  \ (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n\
  \    assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
  \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) == (0));\n\
  }\n"
completions: ["  long product=1;\n  while(n)\n  {\n    if(n%2)\n    product*=(n%10);\n\
    \    n/=10;\n  }\n  return product;", "    int count = 0;\n    while(n!=0){\n\
    \        int rem = n%10;\n        if(rem%2==1){\n            count = count*10\
    \ + rem;\n        }\n        n = n/10;\n    }\n    return count;", "  long ans\
    \ = 1;\n  while(n>0){\n    int r = n%10;\n    if(r%2!=0){\n      ans *= r;\n \
    \   }\n    n /= 10;\n  }\n  return ans;", "    // your code\n    int count=0;\n\
    \    while(n!=0)\n    {\n        int x=n%10;\n        if(x%2!=0)\n        {\n\
    \            count++;\n        }\n        n=n/10;\n    }\n    if(count==0)\n \
    \   {\n        return 0;\n    }\n    else\n    {\n        return count;\n    }\n\
    \    ", "\tstd::vector<int> v;\n\tlong product = 1;\n\twhile (n > 0) {\n\t\tint\
    \ a = n % 10;\n\t\tv.push_back(a);\n\t\tn = n / 10;\n\t}\n\tfor (auto a : v) {\n\
    \t\tif (a % 2 != 0) {\n\t\t\tproduct *= a;\n\t\t}\n\t}\n\treturn product;", " \
    \   long result = 1;\n    while (n > 0) {\n        if (n % 2 != 0) {\n       \
    \     result *= n % 10;\n        }\n        n /= 10;\n    }\n    return result;",
  "  int sum = 1;\n  while(n > 0){\n    int digit = n % 10;\n    if(digit % 2 == 1){\n\
    \      sum *= digit;\n    }\n    n /= 10;\n  }\n  return sum;", "  long result\
    \ = 1;\n  while (n != 0) {\n    long remainder = n % 10;\n    if (remainder %\
    \ 2 != 0) {\n      result *= remainder;\n    }\n    n /= 10;\n  }\n  return result;",
  "  int sum = 1;\n  for(int i = 0; i < to_string(n).length(); i++){\n    if(stoi(to_string(n)[i])\
    \ % 2 != 0){\n      sum *= stoi(to_string(n)[i]);\n    }\n  }\n  return sum;",
  "  int odd = 1;\n  while (n > 0) {\n    int curr = n % 10;\n    if (curr % 2 ==\
    \ 1) {\n      odd *= curr;\n    }\n    n /= 10;\n  }\n  return odd;", "\tlong\
    \ product = 1;\n\twhile (n > 0) {\n\t\tlong digit = n % 10;\n\t\tif (digit % 2\
    \ != 0)\n\t\t\tproduct *= digit;\n\t\tn /= 10;\n\t}\n\treturn product;", "   \
    \ string str = to_string(n);\n    long ans = 1;\n    for(int i = 0; i < str.length();\
    \ i++){\n        int x = str[i] - '0';\n        if(x % 2 == 1){\n            ans\
    \ *= x;\n        }\n    }\n    return ans;", "    long product = 1;\n    while(n\
    \ > 0) {\n        long digit = n % 10;\n        if(digit % 2 != 0) {\n       \
    \     product *= digit;\n        }\n        n /= 10;\n    }\n    return product;",
  "long odd = 1;\nwhile(n>0){\n  long check = n%10;\n  if(check%2==1){\n    odd *=\
    \ check;\n  }\n  n /= 10;", "    int sum = 1;\n    while(n>0){\n        if(n%2\
    \ != 0){\n            sum *= n%10;\n        }\n        n /= 10;\n    }\n    return\
    \ sum;", "  long res = 1;\n  while (n > 0) {\n    long x = n % 10;\n    if (x\
    \ % 2 == 1) res *= x;\n    n /= 10;\n  }\n  return res;", "  long result = 1;\n\
    \  while (n > 0) {\n    if (n % 2 != 0) {\n      result *= n % 10;\n    }\n  \
    \  n /= 10;\n  }\n  return result;", "  long product = 1;\n  while (n > 0) {\n\
    \    long digit = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n\
    \    }\n    n /= 10;\n  }\n  return product;", "  if (n <= 0) return 0;\n  //\
    \ Extract and multiply the least significant digit.\n  return (n % 10) * digits(n\
    \ / 10);", "    std::vector<int> digits;\n    int product = 1;\n    int digit;\n\
    \    while (n > 0) {\n        digit = n % 10;\n        if (digit % 2 == 1) {\n\
    \            product *= digit;\n        }\n        n /= 10;\n    }\n    return\
    \ product;", "  if (n == 0) return 0;\n  long r = n % 10;\n  if (r % 2 == 0) r\
    \ = 0;\n  return r + digits(n / 10) * 10;", "  if (n < 10) {\n    return n % 2\
    \ ? n : 0;\n  }\n  return (n % 10 % 2 ? n % 10 : 0) * digits(n / 10);", "    long\
    \ ret = 1;\n    do {\n        if (n % 2 == 1) {\n            ret *= n % 10;\n\
    \        }\n        n /= 10;\n    } while (n > 0);\n    return ret;", "  long\
    \ ans = 1;\n  long i;\n  while(n!=0){\n    i = n%10;\n    if(i%2!=0){\n      ans\
    \ *= i;\n    }\n    n /= 10;\n  }\n  return ans;", "  long temp = 0;\n  while(n\
    \ > 0){\n    long digit = n % 10;\n    if(digit % 2 != 0){\n      temp *= 10;\n\
    \      temp += digit;\n    }\n    n /= 10;\n  }\n  return temp;", "  // your code\
    \ here\n  long prod = 1;\n  while(n!=0){\n    long m = n%10;\n    if(m%2!=0){\n\
    \      prod*=m;\n    }\n    n/=10;\n  }\n  return prod;", "  long product = 1;\n\
    \  while (n > 0) {\n    if (n % 2 != 0) {\n      product *= n % 10;\n    }\n \
    \   n /= 10;\n  }\n  return product;", "    long long result=1;\n    while(n)\n\
    \    {\n        long long digit=n%10;\n        if(digit%2!=0)\n        {\n   \
    \         result*=digit;\n        }\n        n/=10;\n    }\n    return result;",
  "    long product = 1;\n    while(n > 0) {\n        long mod = n % 10;\n       \
    \ if(mod % 2 != 0) {\n            product *= mod;\n        }\n        n /= 10;\n\
    \    }\n    return product;", "    long oddProduct = 1;\n    while(n > 0) {\n\
    \        int digit = n % 10;\n        if(digit % 2 != 0) {\n            oddProduct\
    \ *= digit;\n        }\n        n /= 10;\n    }\n    return oddProduct;", "  \
    \  // your code\n    long ans = 1;\n    while(n > 0)\n    {\n        if(n % 2\
    \ != 0)\n        {\n            ans *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return ans;", "  string s = to_string(n);\n  int \n  return 0;", " \
    \   long prod = 1;\n    while(n > 0) {\n        long rem = n % 10;\n        if(rem\
    \ % 2 != 0) {\n            prod *= rem;\n        }\n        n /= 10;\n    }\n\
    \    return prod;", "  int arr[100], i=0, product=1;\n  while(n!=0){\n    arr[i++]\
    \ = n%10;\n    n = n/10;\n  }\n  for(int j=0; j<i; j++){\n    if(arr[j]%2!=0){\n\
    \      product *= arr[j];\n    }\n  }\n  return product;", "  long product = 1;\n\
    \  while (n) {\n    if (n % 2) {\n      product *= n % 10;\n    }\n    n /= 10;\n\
    \  }\n  return product;", "    long sum = 1;\n    while(n != 0){\n        int\
    \ digit = n % 10;\n        if(digit % 2 != 0){\n            sum *= digit;\n  \
    \      }\n        n /= 10;\n    }\n    return sum;", "    int pro = 1;\n    while(n\
    \ > 0) {\n        int rem = n % 10;\n        if(rem % 2 != 0) {\n            pro\
    \ *= rem;\n        }\n        n /= 10;\n    }\n    return pro;", "  long product\
    \ = 1;\n  while (n) {\n    int i = n % 10;\n    if (i % 2 != 0) {\n      product\
    \ *= i;\n    }\n    n /= 10;\n  }\n  return product;", "    long ans = 1;\n  \
    \  while(n) {\n        if(n%2) ans *= n%10;\n        n /= 10;\n    }\n    return\
    \ ans;", "    long product = 1;\n    while(n != 0) {\n        long last_digit\
    \ = n % 10;\n        if(last_digit % 2 != 0)\n            product *= last_digit;\n\
    \        n /= 10;\n    }\n    return product;", "\tlong *digit = new long[5];\n\
    \tfor (int i = 0; i < 5; i++) {\n\t\tdigit[i] = 0;\n\t}\n\tlong i = 0;\n\twhile\
    \ (n != 0) {\n\t\tdigit[i] = n % 10;\n\t\tn = n / 10;\n\t\ti++;\n\t}\n\tlong result\
    \ = 1;\n\tfor (int j = 0; j < 5; j++) {\n\t\tif (digit[j] % 2 != 0) {\n\t\t\t\
    result = result * digit[j];\n\t\t}\n\t}\n\treturn result;", "    // convert n\
    \ to string to \n    std::string num = std::to_string(n);\n    long sum = 1;\n\
    \    for(int i = 0; i < num.length(); i++){\n        // check if current digit\
    \ of number is odd\n        if(num[i] % 2 != 0){\n            // multiply it to\
    \ sum\n            sum *= num[i] - '0';\n        }\n    }\n    return sum;", " \
    \ // Your code goes here.\n  std::string str = std::to_string(n);\n  int prod\
    \ = 1;\n  for(int i = 0; i < str.length(); i++){\n    if( (str[i] - '0') % 2 ==\
    \ 1) prod *= (str[i] - '0');\n  }\n  return prod;", "  long prod = 1;\n  while\
    \ (n > 0) {\n    long lastDigit = n % 10;\n    if (lastDigit % 2 == 1) prod *=\
    \ lastDigit;\n    n /= 10;\n  }\n  return prod;", "  long prod = 1;\n  while (n)\
    \ {\n    if (n % 2 == 1) {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n\
    \  return prod;", "  long product = 1;\n  while (n > 0) {\n    int digit = n %\
    \ 10;\n    if (digit % 2 == 1)\n      product *= digit;\n    n /= 10;\n  }\n \
    \ return product;", "  long product = 1;\n  while (n>0) {\n    int digit = n%10;\n\
    \    if (digit%2 == 1) {\n      product *= digit;\n    }\n    n /= 10;\n  }\n\
    \  return product;", "  long product = 1;\n  while (n) {\n    if (n % 2 != 0)\
    \ {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;", " \
    \ if (n < 10) {\n    return n % 2 == 1 ? n : 0;\n  } else {\n    int digit = n\
    \ % 10;\n    if (digit % 2 == 1) {\n      return digit * digits(n / 10);\n   \
    \ } else {\n      return digits(n / 10);\n    }\n  }", "  long ans = 1;\n  while(n)\
    \ {\n    if(n%2) ans *= n%10;\n    n /= 10;\n  }\n  return ans;", "    long sum\
    \ = 1;\n    while(n > 0) {\n        if(n % 2 == 1) {\n            sum *= n % 10;\n\
    \        }\n        n /= 10;\n    }\n    return sum;", "    long i,j,k;\n    j=0;\n\
    \    k=1;\n    while(n>0)\n    {\n        i=n%10;\n        if(i%2!=0)\n      \
    \  {\n            j++;\n            k=k*i;\n        }\n        n=n/10;\n    }\n\
    \    if(j==0)\n    {\n        return 0;\n    }\n    else\n    {\n        return\
    \ k;\n    }", "    long result=1;\n    while(n)\n    {\n        int x=n%10;\n\
    \        if(x%2==1)\n        {\n            result=result*x;\n        }\n    \
    \    n=n/10;\n    }\n    return result;", "  // your code here\n  int prod = 1;\n\
    \  if(n == 0) return 0;\n  while(n){\n    if(n%2){\n      prod*=(n%10);\n    }\n\
    \    n/=10;\n  }\n  return prod;", "\tlong result = 1;\n\twhile (n > 0) {\n\t\t\
    if (n % 2 == 1)\n\t\t\tresult *= n % 10;\n\t\tn /= 10;\n\t}\n\treturn result;",
  "    long counter = 1;\n    while(n) {\n        if(n % 2 != 0)\n            counter\
    \ *= n % 10;\n        n /= 10;\n    }\n    return counter;", "    long ans = 1;\n\
    \    while(n) {\n        if(n%2)\n            ans *= n%10;\n        n /= 10;\n\
    \    }\n    return ans;", "  int sum = 1;\n  while(n > 0){\n    if((n % 10) %\
    \ 2 == 1){\n      sum *= (n % 10);\n    }\n    n /= 10;\n  }\n  return sum;",
  "  int rem = 0;\n  int prod = 1;\n  while(n != 0) {\n    rem = n % 10;\n    if(rem\
    \ % 2 != 0)\n      prod *= rem;\n    n /= 10;\n  }\n  return prod;", "    if(n==0)\
    \ return 0;\n    long result = 1;\n    while(n!=0){\n        long current = n%10;\n\
    \        if(current%2==1) result*=current;\n        n/=10;\n    }\n    return\
    \ result;", "\tstd::vector<int> vec;\n\twhile (n) {\n\t\tint x = n % 10;\n\t\t\
    if (x % 2 == 1) {\n\t\t\tvec.push_back(x);\n\t\t}\n\t\tn /= 10;\n\t}\n\tlong prod\
    \ = 1;\n\tfor (auto i : vec) {\n\t\tprod *= i;\n\t}\n\treturn prod;", "  long\
    \ total = 1;\n  while (n != 0) {\n    if (n % 2 != 0) {\n      total *= n % 10;\n\
    \    }\n    n /= 10;\n  }\n  return total;", "    return std::accumulate(std::to_string(n).begin(),\
    \ std::to_string(n).end(), 1,\n     [](long m, char c) { return m * ((c - '0')\
    \ % 2 ? c - '0' : 1);});", "  long product = 1;\n  long curr = n;\n  while (curr\
    \ > 0) {\n    if (curr % 2 == 1)\n      product *= curr % 10;\n    curr /= 10;\n\
    \  }\n  return product;", "    long x=0;\n    long d=1;\n    while(n){\n     \
    \   if((n%10)%2)\n            x+=d*(n%10);\n        d*=10;\n        n/=10;\n \
    \   }\n    return x;", "    int product = 1;\n    while(n != 0) {\n        int\
    \ digit = n % 10;\n        if(digit % 2 != 0)\n            product *= digit;\n\
    \        n /= 10;\n    }\n    return product;", "  long res = 1;\n  while (n >\
    \ 0) {\n    if (n % 2 != 0)\n      res *= n % 10;\n    n /= 10;\n  }\n  return\
    \ res;", "  long product = 1;\n  while (n > 0) {\n    int last = n % 10;\n   \
    \ if (last % 2 == 1) {\n      product *= last;\n    }\n    n /= 10;\n  }\n  return\
    \ product;", "\tlong prod = 1;\n\twhile (n != 0) {\n\t\tif (n % 2 != 0) {\n\t\t\
    \tprod *= n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn prod;", "  int p=1;\n  while(n){\n\
    \    if(n%2){\n      p*=(n%10);\n    }\n    n/=10;\n  }\n  return p;", "    long\
    \ sum = 1;\n    while(n != 0){\n        int rem = n % 10;\n        if(rem % 2\
    \ != 0){\n            sum *= rem;\n        }\n        n /= 10;\n    }\n    return\
    \ sum;", "  if (n < 10) {\n    return n % 2 == 1 ? n : 0;\n  }\n  long result\
    \ = 0;\n  while (n > 0) {\n    long digit = n % 10;\n    if (digit % 2 == 1) {\n\
    \      result += digit;\n    }\n    n /= 10;\n  }\n  return result;", "    long\
    \ product=1;\n    while(n!=0){\n        long temp=n%10;\n        if(temp%2!=0){\n\
    \            product=product*temp;\n        }\n        n=n/10;\n    }\n    return\
    \ product;", "  long ans = 1;\n  while(n>0){\n    int digit = n%10;\n    if(digit%2!=0){\n\
    \      ans *= digit;\n    }\n    n/=10;\n  }\n  return ans;", "  long num = 0;\n\
    \  while (n != 0) {\n    if (n % 2 != 0) {\n      num = num * 10 + n % 10;\n \
    \   }\n    n /= 10;\n  }\n  return num;", "    long result = 1;\n    while (n\
    \ != 0) {\n        long lastDigit = n % 10;\n        if (lastDigit % 2 != 0) {\n\
    \            result *= lastDigit;\n        }\n        n /= 10;\n    }\n    return\
    \ result;", "    long product = 1;\n    while(n>0){\n        int r = n%10;\n \
    \       if(r%2!=0){\n            product *= r;\n        }\n        n/=10;\n  \
    \  }\n    return product;", "  long result = 1;\n  int length = std::log10(n);\n\
    \  for (long i = length; i >= 0; i--) {\n    long rem = n % 10;\n    if (rem %\
    \ 2 != 0) {\n      result *= rem;\n    }\n    n /= 10;\n  }\n  return result;",
  "    long result = 1;\n    while (n != 0) {\n        long digit = n % 10;\n    \
    \    if (digit % 2 != 0) {\n            result *= digit;\n        }\n        n\
    \ /= 10;\n    }\n    return result;", "  int ans = 1;\n  while(n){\n    int num\
    \ = n%10;\n    if(num%2 != 0)\n      ans *= num;\n    n /= 10;\n  }\n  return\
    \ ans;", "  std::string str=std::to_string(n);\n  long sum=1;\n  for(auto it:str){\n\
    \    if(it%2!=0){\n      sum*=it-'0';\n    }\n  }\n  return sum;", "    long prod\
    \ = 1;\n    while(n>0){\n        if(n%2!=0){\n            prod *= n%10;\n    \
    \    }\n        n/=10;\n    }\n    return prod;", "  std::string s = std::to_string(n);\n\
    \  long num = 1;\n  for (char c : s) {\n    if (c%2) {\n      num *= (c-'0');\n\
    \    }\n  }\n  return num;", "   long sum=1;\n   while(n>0)\n   {\n       int\
    \ r=n%10;\n       if(r%2!=0)\n       {\n           sum=sum*r;\n       }\n    \
    \   n=n/10;\n   }\n   return sum;", "  int sum = 1;\n  while(n > 0){\n    int\
    \ digit = n % 10;\n    if(digit % 2 != 0){\n      sum *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return sum;", "  if (n < 0) return 0;\n  long res = 1;\n  while\
    \ (n > 0) {\n    long m = n % 10;\n    if (m & 1) res *= m;\n    n /= 10;\n  }\n\
    \  return res;", "  long result = 1;\n  for (; n; n /= 10) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 == 1) {\n      result *= digit;\n    }\n  }\n  return\
    \ result;", "    long sum = 1;\n    while(n){\n        if(n%2){\n            sum\
    \ *= n%10;\n        }\n        n /= 10;\n    }\n    return sum;", "  int sum =\
    \ 1;\n  while(n>0){\n    if(n%2 == 1){\n      sum *= n%10;\n    }\n    n /= 10;\n\
    \  }\n  return sum;", "  long ret = 1;\n  while (n > 0) {\n    if (n % 2 != 0)\n\
    \      ret *= n % 10;\n    n /= 10;\n  }\n  return ret;", "    long ret = 1;\n\
    \    while (n > 0) {\n        int digit = n % 10;\n        if (digit % 2 != 0)\
    \ {\n            ret *= digit;\n        }\n        n /= 10;\n    }\n    return\
    \ ret;", "    long product=1;\n    while(n>0){\n        int digit=n%10;\n    \
    \    if(digit%2!=0){\n            product*=digit;\n        }\n        n/=10;\n\
    \    }\n    return product;", "  if (n == 0) return 0;\n  return digits(n / 10)\
    \ + (n % 2) * (n % 10);", "  long arr[10] = {0};\n  int counter = 0;\n  int product\
    \ = 1;\n  while(n != 0){\n    arr[counter] = n % 10;\n    counter++;\n    n =\
    \ n / 10;\n  }\n  for(int i = 0; i < counter; i++){\n    if(arr[i] % 2 != 0){\n\
    \      product = product * arr[i];\n    }\n  }\n  return product;", "  long result\
    \ = 1;\n  while (n > 0) {\n    int digit = n % 10;\n    if (digit % 2 != 0) {\n\
    \      result *= digit;\n    }\n    n /= 10;\n  }\n  return result;", "    long\
    \ p=1;\n    while(n>0)\n    {\n        int a=n%10;\n        if(a%2!=0)\n     \
    \   {\n            p=p*a;\n        }\n        n=n/10;\n    }\n    return p;",
  "  std::string s=std::to_string(n);\n  long num=1;\n  for(int i=0;i<s.length();i++){\n\
    \    if(s[i]%2!=0){\n      num=num*(s[i]-'0');\n    }\n  }\n  return num;", " \
    \ long prod = 1;\n  while (n > 0) {\n    long digit = n % 10;\n    if (digit %\
    \ 2 == 1) prod *= digit;\n    n /= 10;\n  }\n  return prod;", "  long product=1;\n\
    \  while(n>0){\n    long digit=n%10;\n    if(digit%2!=0){\n      product*=digit;\n\
    \    }\n    n/=10;\n  }\n  return product;", "  long odd=1;\n  while(n>0){\n \
    \   if(n%2)\n      odd*=(n%10);\n    n/=10;\n  }\n  return odd;", "    int digit;\n\
    \    long product=1;\n    while(n>0){\n        digit=n%10;\n        if(digit%2!=0){\n\
    \            product=product*digit;\n        }\n        n=n/10;\n    }\n    return\
    \ product;", "    long product = 1;\n    while(n>0){\n        if(n%2 == 1){\n\
    \            product *= n%10;\n        }\n        n /= 10;\n    }\n    return\
    \ product;", "    long output = 1;\n    while (n>0) {\n        if (n%2 != 0) {\n\
    \            output *= n%10;\n        }\n        n /= 10;\n    }\n    return output;",
  "  long result = 1;\n  while (n != 0) {\n    if (n % 2 != 0) {\n      result *=\
    \ n % 10;\n    }\n    n /= 10;\n  }\n  return result;", "    if(n == 0) return\
    \ 0;\n    long prod = 1;\n    while(n != 0) {\n        long last_digit = n % 10;\n\
    \        if(last_digit % 2 != 0) prod *= last_digit;\n        n /= 10;\n    }\n\
    \    return prod;", "  long number = 0;\n  long digit;\n  while (n) {\n    digit\
    \ = n % 10;\n    n /= 10;\n    if (digit % 2 == 1) {\n      number = number *\
    \ 10 + digit;\n    }\n  }\n  long product = 1;\n  while (number) {\n    digit\
    \ = number % 10;\n    number /= 10;\n    product *= digit;\n  }\n  return product;",
  "  if (n == 0) { return 0; }\n  int prod = 1;\n  while (n != 0) {\n    int d = n\
    \ % 10;\n    if (d % 2 != 0) {\n      prod *= d;\n    }\n    n /= 10;\n  }\n \
    \ return prod;", "  int result = 1;\n  for (int i = 0; i < to_string(n).length();\
    \ i++) {\n    int digit = n % 10;\n    if (digit % 2 == 1) {\n      result *=\
    \ digit;\n    }\n    n /= 10;\n  }\n  return result;", "  long result = 1;\n \
    \ while (n > 0) {\n    long d = n % 10;\n    if (d % 2 == 1) {\n      result *=\
    \ d;\n    }\n    n /= 10;\n  }\n  return result;", "  long ans = 1;\n  while(n\
    \ != 0){\n    int r = n % 10;\n    if(r % 2 != 0){\n      ans *= r;\n    }\n \
    \   n /= 10;\n  }\n  return ans;", "  int odd = 1;\n  while (n != 0) {\n    int\
    \ digit = n % 10;\n    if (digit % 2 != 0) {\n      odd *= digit;\n    }\n   \
    \ n /= 10;\n  }\n  return odd;", "  long total = 1;\n  while (n != 0) {\n    if\
    \ (n % 2 != 0) {\n      total *= n % 10;\n    }\n    n /= 10;\n  }\n  return total;",
  "  long d=0;\n  long i=1;\n  while(n>0){\n    if((n%10)%2!=0){\n      d+=(n%10)*i;\n\
    \      i*=10;\n    }\n    n/=10;\n  }\n  return d;", "  // put your code here\n\
    \  std::vector<int> result;\n  int flag = 0;\n  while(n>0){\n      int pop = n%10;\n\
    \      if(pop%2 == 0){\n          flag = 1;\n      }\n      else{\n          result.push_back(pop);\n\
    \      }\n      n /= 10;\n  }\n  if(flag == 1){\n      return 0;\n  }\n  else{\n\
    \      int x = 1;\n      for(int i=0;i<result.size();i++){\n          x *= result[i];\n\
    \      }\n      return x;\n  }", "  long product = 1;\n  while (n) {\n    if (n\
    \ % 2 != 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;",
  "    long product=1;\n    while(n>0){\n        long a=n%10;\n        if(a%2!=0){\n\
    \            product*=a;\n        }\n        n/=10;\n    }\n    return product;",
  "  long sum = 1;\n  while (n) {\n    if (n % 2) {\n      sum *= n % 10;\n    }\n\
    \    n /= 10;\n  }\n  return sum;", "    int prod = 1;\n    int rem;\n    int\
    \ n1 = n;\n    while(n1 > 0) {\n        rem = n1 % 10;\n        if(rem % 2 !=\
    \ 0)\n            prod *= rem;\n        n1 /= 10;\n    }\n    return prod;", " \
    \   stringstream ss;\n    string str;\n    long ans=1;\n    ss<<n;\n    ss>>str;\n\
    \    for(int i=0;i<str.length();i++){\n        if(str[i]%2==1){\n            ans*=(str[i]-'0');\n\
    \        }\n    }\n    return ans;", "    long product=1;\n    while(n>0){\n \
    \       long rem=n%10;\n        if(rem%2==1){\n            product=product*rem;\n\
    \        }\n        n=n/10;\n    }\n    return product;", "    long product =\
    \ 1;\n    while(n>0){\n        long digit = n%10;\n        if(digit%2 == 1){\n\
    \            product *= digit;\n        }\n        n /= 10;\n    }\n    return\
    \ product;", "  long prod = 1;\n  while (n > 0) {\n    long last = n % 10;\n \
    \   if (last % 2 == 1) {\n      prod *= last;\n    }\n    n /= 10;\n  }\n  return\
    \ prod;", "    long long oddproduct = 1;\n    long long temp;\n    while(n > 0)\n\
    \    {\n        temp = n % 10;\n        if(temp % 2 != 0)\n        {\n       \
    \     oddproduct *= temp;\n        }\n        n /= 10;\n    }\n    return oddproduct;",
  "    long sum = 1;\n    while(n > 0) {\n        int digit = n % 10;\n        if(digit\
    \ % 2 != 0) {\n            sum *= digit;\n        }\n        n /= 10;\n    }\n\
    \    return sum;", "  std::vector<int> v;\n  long ans = 1;\n  while(n>0){\n  \
    \  v.push_back(n%10);\n    n/=10;\n  }\n  for(int i=0;i<v.size();i++){\n    if(v[i]%2!=0){\n\
    \      ans*=v[i];\n    }\n  }\n  return ans;", "    long result = 1;\n    // Check\
    \ if number is negative, if it is make it positive.\n    if (n < 0) {\n      \
    \  n = -n;\n    }\n    // Make sure the number is positive.\n    assert(n >= 0);\n\
    \    // Begin looping through the digits.\n    for (; n > 0; n /= 10) {\n    \
    \    // Get the least significant digit.\n        long lsd = n % 10;\n       \
    \ // Check if the least significant digit is odd.\n        if (lsd % 2 == 1) {\n\
    \            // If the least significant digit is odd,\n            // multiply\
    \ it by the result.\n            result *= lsd;\n        }\n    }\n    return\
    \ result;", "    // Your code here!\n    long a=1;\n    while(n!=0)\n    {\n \
    \       if(n%2!=0)\n        {\n            a*=(n%10);\n        }\n        n/=10;\n\
    \    }\n    return a;", "\tstd::vector<int> v;\n\tint result=1;\n\twhile(n>0){\n\
    \t\tv.push_back(n%10);\n\t\tn=n/10;\n\t}\n\tfor(auto el:v){\n\t\tif(el%2!=0){\n\
    \t\t\tresult*=el;\n\t\t}\n\t}\n\treturn result;", "  long prod = 1;\n  while (n\
    \ != 0) {\n    if (n % 2 == 1) {\n      prod *= n % 10;\n    }\n    n /= 10;\n\
    \  }\n  return prod;", "    long long int prod = 1;\n    long long int count =\
    \ 0;\n    int remainder = 0;\n    long long int temp = n;\n    int num = 0;\n\
    \    while(temp != 0)\n    {\n        remainder = temp % 10;\n        if(remainder\
    \ % 2 != 0)\n        {\n            count++;\n            prod = prod * remainder;\n\
    \        }\n        temp = temp / 10;\n    }\n    if(count == 0)\n    {\n    \
    \    return 0;\n    }\n    else\n    {\n        return prod;\n    }", "    long\
    \ prod = 1;\n    while(n > 0) {\n        if (n % 2 == 1) {\n            prod *=\
    \ n % 10;\n        }\n        n /= 10;\n    }\n    return prod;", "\tlong sum\
    \ = 1;\n\twhile (n > 0) {\n\t\tlong rem = n % 10;\n\t\tif (rem % 2 != 0)\n\t\t\
    \tsum *= rem;\n\t\tn /= 10;\n\t}\n\treturn sum;", "  long prod = 1;\n  while (n\
    \ > 0) {\n    long dig = n % 10;\n    if (dig % 2 != 0) prod *= dig;\n    n /=\
    \ 10;\n  }\n  return prod;", "    // your code here\n    long prod = 1;\n    while(n>0){\n\
    \      int rem = n%10;\n      if(rem%2!=0){\n        prod = prod*rem;\n      }\n\
    \      n=n/10;\n    }\n    return prod;\n  }\n\n// alternative solution:\n// \
    \  return n\n//     ? digits(n / 10) * n % 2 * (n % 10)\n//     : 0;\n// }\n\n\
    // Tests\nvoid test_cases() {\n  // long int r1 = digits(1);\n  // long int r2\
    \ = digits(4);\n  // long int r3 = digits(235);\n  // printf(\"%d\\n\", r1);\n\
    \  // printf(\"%d\\n\", r2);\n  // printf(\"%d\\n\", r3);\n  // printf(\"%d\\\
    n\", r1 == 1);\n  // printf(\"%d\\n\", r2 == 0);\n  // printf(\"%d\\n\", r3 ==\
    \ 15);\n  assert(digits(1) == 1);\n  assert(digits(4) == 0);\n  assert(digits(235)\
    \ == 15);\n  assert(digits(5) == 5);\n  assert(digits(195) == 15);\n  assert(digits(0)\
    \ == 0);\n  assert(digits(7) == 7);\n  assert(digits(18) == 0);\n  assert(digits(1888)\
    \ == 0);\n  assert(digits(18895) == 45);\n  assert(digits(18881895) == 45);\n\
    \  assert(digits(188818952) == 0);\n  assert(digits(18881895223) == 45);\n  assert(digits(188818952234)\
    \ == 0);\n  assert(digits(1888189522345) == 225);\n  assert(digits(188818952234566)\
    \ == 0);\n  assert(digits(1888189522345667) == 87);\n  assert(digits(18881895223456678)\
    \ == 0);\n  assert(digits(1888189522345", "  long result = 1;\n  while (n > 0)\
    \ {\n    long lastDigit = n % 10;\n    if (lastDigit % 2 != 0) {\n      result\
    \ *= lastDigit;\n    }\n    n /= 10;\n  }\n  return result;", "    long prod =\
    \ 1;\n    while(n != 0) {\n        long digit = n % 10;\n        if(digit % 2\
    \ != 0) {\n            prod *= digit;\n        }\n        n /= 10;\n    }\n  \
    \  return prod;", "    long prod = 1;\n    while(n > 0) {\n        if(n % 2 !=\
    \ 0) {\n            prod *= n % 10;\n        }\n        n /= 10;\n    }\n    return\
    \ prod;", "  long product = 1;\n  int digit = 0;\n  while (n != 0) {\n    digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;", "  return std::accumulate(std::to_string(n).begin(),\
    \ std::to_string(n).end(), 1, [](long a, char b) { return a * (b % 2 ? b - '0'\
    \ : 1); });", "  long ans = 1;\n  while(n){\n    if(n%2) ans *= n%10;\n    n /=\
    \ 10;\n  }\n  return ans;", "  if (n==0) return 0;\n  int lastDigit = n%10;\n\
    \  if (lastDigit%2==0) {\n    return digits(n/10);\n  } else {\n    return lastDigit*digits(n/10);\n\
    \  }", "  // your code here\n  long prod = 1;\n  while(n > 0)\n  {\n    if(n %\
    \ 2 != 0)\n    {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;",
  "    if(n == 0) {\n        return 0;\n    }\n    int last_digit = n % 10;\n    int\
    \ rest_of_the_digits = digits(n / 10);\n    if(last_digit % 2 == 0) {\n      \
    \  return rest_of_the_digits;\n    }\n    else {\n        return rest_of_the_digits\
    \ * last_digit;\n    }", "    long product = 1;\n    long temp_number = n;\n \
    \   while(temp_number != 0) {\n        long last_digit = temp_number % 10;\n \
    \       if(last_digit % 2 != 0) {\n            product *= last_digit;\n      \
    \  }\n        temp_number /= 10;\n    }\n    return product;", "  int prod = 1;\n\
    \  if(n == 0)\n    return 0;\n  while(n) {\n    if(n%2 != 0)\n      prod *= n%10;\n\
    \    n /= 10;\n  }\n  return prod;", "  long mul=1;\n  while(n>0)\n  {\n    if(n%2==1)\n\
    \    {\n      mul*=(n%10);\n    }\n    n/=10;\n  }\n  return mul;", "  long temp\
    \ = n;\n  std::stringstream ss;\n  ss << temp;\n  std::string s = ss.str();\n\
    \  long result = 1;\n  for (int i = 0; i < s.length(); i++) {\n    int digit =\
    \ s[i] - '0';\n    if (digit % 2 != 0) {\n      result *= digit;\n    }\n  }\n\
    \  return result;", "  if (n < 0) {\n    n = n * -1;\n  }\n  long oddNum = 1;\n\
    \  while (n > 0) {\n    long lsd = n % 10;\n    if (lsd % 2 != 0) {\n      oddNum\
    \ = oddNum * lsd;\n    }\n    n = n / 10;\n  }\n  return oddNum;", "  long odd\
    \ = 1;\n  while (n > 0) {\n    long x = n % 10;\n    if (x % 2 == 1) {\n     \
    \ odd *= x;\n    }\n    n /= 10;\n  }\n  return odd;", "  int i = 0;\n  long sum\
    \ = 0;\n  while (n > 0) {\n    int c = n % 10;\n    if (c % 2 == 1) {\n      sum\
    \ += c;\n    }\n    n /= 10;\n  }\n  return sum;", "  int product = 1;\n  while\
    \ (n > 0) {\n    int x = n % 10;\n    if (x % 2 != 0)\n      product *= x;\n \
    \   n /= 10;\n  }\n  return product;", "    // TODO\n    return 0;", "\t// put\
    \ your code here\n\t//\n  long product = 1;\n  //printf(\"%d\\n\",product);\n\
    \  //printf(\"%d\\n\",n);\n  if(n == 0)\n    return 0;\n  while(n != 0){\n   \
    \ long curr = n%10;\n    //printf(\"%d\\n\",curr);\n    if(curr%2 != 0){\n   \
    \   product *= curr;\n    }\n    n = n/10;\n  }\n  return product;", "  long result\
    \ = 1;\n  if (n == 0) {\n    return 0;\n  }\n  if (n < 0) {\n    n = n * -1;\n\
    \  }\n  while (n > 0) {\n    if (n % 2 != 0) {\n      result = result * (n % 10);\n\
    \    }\n    n = n / 10;\n  }\n  return result;", "  if(n==0)\n    return 0;\n\
    \  long prod=1;\n  while(n>0){\n    if(n%2!=0)\n      prod*=(n%10);\n    n/=10;\n\
    \  }\n  return prod;", "  long result = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 == 1) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;", "    long product = 1;\n    while(n>0){\n     \
    \   long digit = n%10;\n        if(digit%2 != 0){\n            product *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return product;", "  int sol = 1;\n \
    \ while(n>0){\n    int rem = n%10;\n    if(rem%2!=0){\n      sol*=rem;\n    }\n\
    \    n/=10;\n  }\n  return sol;", "\tlong res = 1;\n\twhile (n > 0) {\n\t\tif\
    \ (n % 2 != 0) {\n\t\t\tres *= n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn res;",
  "  long result = 1;\n  while (n != 0) {\n    int ld = n % 10;\n    if (ld % 2 !=\
    \ 0) {\n      result *= ld;\n    }\n    n /= 10;\n  }\n  return result;", "  long\
    \ out = 1;\n  while (n != 0) {\n    int dig = n % 10;\n    if (dig % 2 != 0) {\n\
    \      out *= dig;\n    }\n    n /= 10;\n  }\n  return out;", "   long sum = 1;\n\
    \   for(int i = n; i > 0; i /= 10) {\n      int rem = i % 10;\n      if(rem %\
    \ 2 == 1)\n        sum *= rem;\n   }\n   return sum;", "  // return n;\n  // Todo:\n\
    \  //assert(n > 0);\n  // your code here\n  long prod = 1;\n  //prod = n%10;\n\
    \  while(n != 0){\n    if(n%2 != 0){\n      prod *= n%10;\n    }\n    n = n/10;\n\
    \  }\n  return prod;", "\tif (n == 0) return 0;\n\tlong r = 1;\n\tif (n < 0) n\
    \ = -n;\n\twhile (n > 0) {\n\t\tlong d = n % 10;\n\t\tif (d % 2 != 0) {\n\t\t\t\
    r *= d;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn r;", "  long result = 1;\n  while\
    \ (n) {\n    int lastDigit = n % 10;\n    if (lastDigit % 2 != 0) {\n      result\
    \ *= lastDigit;\n    }\n    n /= 10;\n  }\n  return result;", "  long product\
    \ = 1;\n  while (n > 0) {\n    if (n % 2 != 0) {\n      product *= n % 10;\n \
    \   }\n    n /= 10;\n  }\n  return product;", "  long s = 1;\n  while (n > 0)\
    \ {\n    long i = n % 10;\n    if (i % 2 == 1) {\n      s *= i;\n    }\n    n\
    \ /= 10;\n  }\n  return s;", "    long prod = 1;\n    while(n > 0) {\n       \
    \ long digit = n % 10;\n        if(digit % 2 != 0) {\n            prod *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return prod;", "  long result = 1;\n\
    \  while (n > 0) {\n    long lastDigit = n % 10;\n    if (lastDigit % 2 != 0)\
    \ {\n      result *= lastDigit;\n    }\n    n /= 10;\n  }\n  return result;",
  "  long temp = 0;\n  while(n != 0){\n    long r = n % 10;\n    if(r % 2 != 0){\n\
    \      temp = temp * r;\n    }\n    n = n / 10;\n  }\n  return temp;", "  int\
    \ sum = 1;\n  while(n > 0){\n    if(n % 2 != 0){\n      sum *= n % 10;\n    }\n\
    \    n /= 10;\n  }\n  return sum;", "\tlong product = 1;\n\twhile (n) {\n\t\t\
    long digit = n % 10;\n\t\tif (digit % 2 == 1) {\n\t\t\tproduct *= digit;\n\t\t\
    }\n\t\tn /= 10;\n\t}\n\treturn product;", "    int ans = 1;\n    while(n) {\n\
    \        if(n%2 == 1) {\n            ans *= n%10;\n        }\n        n /= 10;\n\
    \    }\n    return ans;", "  long num=1;\n  while(n!=0){\n    long digit=n%10;\n\
    \    if(digit%2!=0){\n      num*=digit;\n    }\n    n/=10;\n  }\n  return num;",
  "  if(n <= 0) return 0;\n  long r = 1;\n  while(n > 0) {\n    long d = n % 10;\n\
    \    if(d % 2 == 1) r *= d;\n    n /= 10;\n  }\n  return r;", "  long ans = 1;\n\
    \  for(;n > 0; n /= 10) {\n    if(n % 2 != 0) {\n      ans *= n % 10;\n    }\n\
    \  }\n  return ans;", "  long product=1;\n  for(int i=0;i<n;i++){\n    if(n%2==1){\n\
    \      product=product*n;\n    }\n  }\n  return product;", "  int result = 1;\n\
    \  while (n != 0) {\n    int dig = n % 10;\n    if (dig % 2 != 0) {\n      result\
    \ *= dig;\n    }\n    n /= 10;\n  }\n  return result;", "  long sum = 1;\n  while\
    \ (n > 0) {\n    long number = n % 10;\n    if (number % 2 != 0)\n      sum *=\
    \ number;\n    n /= 10;\n  }\n  return sum;", "  long ret = 1;\n  while (n > 0)\
    \ {\n    if (n % 2 != 0) {\n      ret *= n % 10;\n    }\n    n /= 10;\n  }\n \
    \ return ret;", "  if (n==0) return 0;\n  else {\n    return pow(n%10,n%2)*digits(n/10);\n\
    \  }", "  if (n == 0) return 0;\n  long res = 1;\n  while (n > 0) {\n    long\
    \ digit = n % 10;\n    if (digit % 2 != 0) res *= digit;\n    n /= 10;\n  }\n\
    \  return res;", "  long product = 1;\n  while (n > 0) {\n    if (n % 2 == 1)\n\
    \      product *= n % 10;\n    n /= 10;\n  }\n  return product;", "\tstd::string\
    \ s = std::to_string(n);\n\tlong num=1;\n\tfor(char c:s){\n\t\tint x = c - '0';\n\
    \t\tif(x%2==1) num*=x;\n\t}\n\treturn num;", "\tint answer = 1;\n\tstd::stringstream\
    \ ss;\n\tss << n;\n\tstd::string s = ss.str();\n\tfor (int i = 0; i < s.length();\
    \ i++) {\n\t\tif (s[i] == '0' || s[i] == '2' || s[i] == '4' || s[i] == '6' ||\
    \ s[i] == '8') {\n\t\t\tcontinue;\n\t\t}\n\t\tanswer *= s[i] - '0';\n\t}\n\treturn\
    \ answer;", "  long result = 1;\n  while (n != 0) {\n    if (n % 2 != 0) {\n \
    \     result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;", "  long\
    \ result = 1;\n  for (; n > 0; n /= 10) {\n    if (n % 2 == 1) {\n      result\
    \ *= n % 10;\n    }\n  }\n  return result;", "    if(n==0) return 0;\n    int\
    \ res = 1;\n    while(n) {\n        if(n%2 != 0) res *= n%10;\n        n /= 10;\n\
    \    }\n    return res;", "  // Your code goes here\n  if(n==0) return 0;\n  long\
    \ ans = 1;\n  while(n>0){\n    if(n%2==1) ans *= n%10;\n    n/=10;\n  }\n  return\
    \ ans;", "    int product = 1;\n    while(n) {\n        if(n%2) {\n          \
    \  product *= n%10;\n        }\n        n /= 10;\n    }\n    return product;",
  "    std::vector<int> v;\n    int temp;\n    int sum = 0;\n    while(n > 0){\n \
    \       temp = n % 10;\n        v.push_back(temp);\n        n = n / 10;\n    }\n\
    \    for(int i = 0; i < v.size(); i++){\n        if(v[i] % 2 != 0){\n        \
    \    sum = sum + v[i];\n        }\n    }\n    return sum;", "    long res = 1;\n\
    \    while(n > 0) {\n        int r = n % 10;\n        if(r & 1) {\n          \
    \  res *= r;\n        }\n        n /= 10;\n    }\n    return res;", "  long ans\
    \ = 1;\n  while(n) {\n    int digit = n % 10;\n    if(digit % 2 != 0)\n      ans\
    \ *= digit;\n    n /= 10;\n  }\n  return ans;", "    long result = 1;\n    while\
    \ (n > 0) {\n        if (n % 2 != 0) {\n            result *= n % 10;\n      \
    \  }\n        n /= 10;\n    }\n    return result;", "\tlong ans = 1;\n\twhile\
    \ (n > 0) {\n\t\tif (n % 2 == 1) {\n\t\t\tans *= n % 10;\n\t\t}\n\t\tn /= 10;\n\
    \t}\n\treturn ans;", "  int n1=0;\n  while(n>0)\n  {\n    if(n%2!=0)\n    {\n\
    \      n1=n1*10+(n%10);\n    }\n    n=n/10;\n  }\n  int s=0;\n  while(n1>0)\n\
    \  {\n    s=s*10+(n1%10);\n    n1=n1/10;\n  }\n  return s;", "\tlong product =\
    \ 1;\n\tint arr[10];\n\tint i = 0;\n\twhile (n) {\n\t\tarr[i] = n % 10;\n\t\t\
    n /= 10;\n\t\ti++;\n\t}\n\tint len = i;\n\tint j = 0;\n\tfor (i = len - 1; i >=\
    \ 0; i--) {\n\t\tif (arr[i] % 2 != 0) {\n\t\t\tproduct *= arr[i];\n\t\t}\n\t}\n\
    \treturn product;", "  long pro = 1;\n  while(n!=0){\n    if(n%2!=0){\n      pro*=(n%10);\n\
    \    }\n    n/=10;\n  }\n  return pro;", "    long sum=1;\n    while(n!=0){\n\
    \        long x=n%10;\n        if(x%2!=0){\n            sum*=x;\n        }\n \
    \       n/=10;\n    }\n    return sum;", "    // std::cout << \"started\\n\";\n\
    \    // std::cout << n << '\\n';\n    if (n == 0) {\n        return 0;\n    }\
    \ else {\n        // std::cout << \"here\";\n        // std::cout << n << '\\\
    n';\n        long x = n % 10;\n        // std::cout << x << '\\n';\n        if\
    \ (x % 2 == 0) {\n            // std::cout << \"here-0\";\n            return\
    \ digits(n / 10);\n        } else {\n            // std::cout << \"here-1\";\n\
    \            return x * digits(n / 10);\n        }\n    }"]
stop_tokens:
- "\n}"

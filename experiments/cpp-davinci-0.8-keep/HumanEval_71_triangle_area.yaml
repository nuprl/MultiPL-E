name: HumanEval_71_triangle_area
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
  \ three sides of a triangle. Return the area of\n// the triangle rounded to 2 decimal\
  \ points if the three sides form a valid triangle. \n// Otherwise return -1\n//\
  \ Three sides make a valid triangle when the sum of any two sides is greater \n\
  // than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n// triangle_area(1,\
  \ 2, 10) == -1\nfloat triangle_area(long a, long b, long c) {\n"
tests: "}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
  \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
  \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
  \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
  \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
  \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
  \ (10)) == (float(-1)));\n}\n"
completions: ["   if(a+b<=c||b+c<=a||a+c<=b){\n    return -1;\n   }\n    float s =\
    \ (a+b+c)/2.0;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;",
  "    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    long p = (a + b + c) / 2;\n    return sqrt(p * (p - a) * (p - b) * (p - c));",
  "    float s = (a + b + c) / 2.0;\n    if(s-a > 0 && s-b > 0 && s-c > 0) {\n   \
    \     return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    return -1;", "\tlong s = (a\
    \ + b + c) / 2;\n\tfloat area = sqrt(s * (s - a) * (s - b) * (s - c));\n\tif (area\
    \ <= 0)\n\t\treturn -1;\n\telse\n\t\treturn area;", "\tif (a + b <= c || a + c\
    \ <= b || b + c <= a) {\n\t\treturn -1;\n\t}\n\tfloat p = (a + b + c) / 2.0;\n\
    \tfloat area = sqrt(p * (p - a) * (p - b) * (p - c));\n\treturn roundf(area *\
    \ 100) / 100;", "  if(a+b>c&&a+c>b&&b+c>a) return 0.5*sqrt((a+b+c)*(a+b-c)*(a+c-b)*(b+c-a));\n\
    \  return -1;", "    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }", "  float area = -1;\n  float s =\
    \ (a + b + c) / 2.0;\n  area = sqrt(s * (s - a) * (s - b) * (s - c));\n  if (a\
    \ + b > c && a + c > b && b + c > a) {\n    return area;\n  }\n  return -1;",
  "    float p, area;\n    p = (a + b + c) / 2.0;\n    area = sqrt(p * (p - a) * (p\
    \ - b) * (p - c));\n    if (area > 0)\n        return area;\n    else\n      \
    \  return -1;", "    float p = (a + b + c) / 2.0;\n    float area = sqrt(p * (p\
    \ - a) * (p - b) * (p - c));\n    return (area > 0) ? area : -1;", "\tif(a>0 &&\
    \ b>0 && c>0 && (a+b>c) && (a+c>b) && (b+c>a))\n\t\treturn (float)sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \telse\n\t\treturn -1;", "  float s = (a + b + c) / 2.0;\n  float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n  if (area <= 0) {\n    return -1;\n  }\n \
    \ return roundf(area * 100) / 100;", "\tfloat area;\n\tif (a + b > c && a + c\
    \ > b && b + c > a) {\n\t\tarea = a * b * c;\n\t\tarea = sqrt(area);\n\t\treturn\
    \ area;\n\t}\n\telse {\n\t\treturn -1;\n\t}", "\tif(a + b > c && a + c > b &&\
    \ b + c > a) {\n\t\tfloat s = (a + b + c) / 2.0;\n\t\treturn sqrt(s * (s - a)\
    \ * (s - b) * (s - c));\n\t}\n\treturn -1;", "  if(a + b > c && a + c > b && b\
    \ + c > a) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return (roundf(area * 100) / 100);\n  }\n  return\
    \ -1;", "  // need to check if the numbers are positive, and if the sum of any\
    \ two sides is greater than the third\n  // use std::max to find greatest of the\
    \ three\n  // ensure that each side is greater than 0\n  if (a > 0 && b > 0 &&\
    \ c > 0 && (a + b) > c && (a + c) > b && (b + c) > a) {\n    float s = (a + b\
    \ + c) / 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return\
    \ -1;", "  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n  if (area <= 0) {\n    return -1;\n  }\n  return area;",
  "\tif ((a + b) > c && (a + c) > b && (b + c) > a) {\n\t\tdouble s = (a + b + c)\
    \ / 2.0;\n\t\tdouble area = sqrt(s * (s - a) * (s - b) * (s - c));\n\t\treturn\
    \ area;\n\t}\n\telse {\n\t\treturn -1;\n\t}", "    // your code here\n    if (a\
    \ > 0 && b > 0 && c > 0 && a + b > c && a + c > b && b + c > a) {\n        float\
    \ s = (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;", '  // Type your code here', "  float p = (a + b + c)\
    \ / 2.0;\n  float area = sqrt(p * (p - a) * (p - b) * (p - c));\n  if (area >\
    \ 0) {\n    return area;\n  }\n  return -1;", "  // your code here\n  return -1;",
  "    if (a+b <= c || a+c <= b || b+c <= a) return -1;\n    double p = (a+b+c)/2.0;\n\
    \    return sqrt(p*(p-a)*(p-b)*(p-c));", "    long sum = a + b + c;\n    if (a\
    \ > 0 && b > 0 && c > 0 && (a < sum) && (b < sum) && (c < sum)) {\n        float\
    \ s = (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;", "  if (a+b>c && a+c>b && b+c>a) {\n    float s = (a+b+c)/2.0;\n\
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return roundf(area * 100) /\
    \ 100;\n  }\n  return -1;", "    float s=(a+b+c)/2.0;\n    if((a+b>c)&&(a+c>b)&&(b+c>a))\n\
    \    {\n        float area=sqrt(s*(s-a)*(s-b)*(s-c));\n        return roundf(area*100)/100;\n\
    \    }\n    else\n    {\n        return -1;\n    }", "    if(a + b > c && a +\
    \ c > b && b + c > a)\n        return sqrt(4 * a * a * b * b - (a * a + b * b\
    \ - c * c) * (a * a + b * b - c * c)) / 4;\n    return -1;", "  double S, area;\n\
    \  if(a + b > c && a + c > b && b + c > a) {\n    S = (a + b + c) / 2.0;\n   \
    \ area = sqrt(S * (S - a) * (S - b) * (S - c));\n    return (float)area;\n  }\n\
    \  return -1;", "    if (a+b > c && a+c > b && b+c > a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;", "    if (a + b > c && a + c > b && b + c > a)\
    \ {\n        float s = (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    }\n    return -1;", "    float s = (a + b + c) / 2.0;\n\
    \    if (s - a <= 0 || s - b <= 0 || s - c <= 0)\n        return -1;\n    return\
    \ sqrt(s * (s - a) * (s - b) * (s - c));", "    // TODO: Implement your solution\
    \ here\n    float p = (a+b+c)/2.0;\n    float area = sqrt(p*(p-a)*(p-b)*(p-c));\n\
    \    if(area<=0) return -1;\n    return area;", "  if(a+b>c && a+c>b && b+c>a)\
    \ return sqrt(a*b*c*(a+b+c))*1.0/4;\n  return -1;", "  long max = std::max(a,\
    \ std::max(b, c));\n  long sum = a + b + c;\n  float p = sum / 2.0;\n  float area\
    \ = sqrt(p * (p - a) * (p - b) * (p - c));\n  if (area > 0 && area < max)\n  \
    \  return area;\n  return -1;", "    if((a + b > c) && (a + c > b) && (b + c >\
    \ a))\n        return abs((a + b + c) * (c - a + b) * (c + a - b) * (a + b - c))\
    \ / 4.0;\n    else\n        return -1;", "  float s = (a + b + c) / 2.0;\n  if(a\
    \ + b > c && a + c > b && b + c > a) {\n    float result = sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n    return (float)((int)(result * 100)) / 100;\n  } else\
    \ {\n    return -1;\n  }", "  if (a + b <= c || a + c <= b || b + c <= a) {\n\
    \    return -1;\n  }\n  float s = (a + b + c) / 2.0;\n  return sqrt(s * (s - a)\
    \ * (s - b) * (s - c));", "\t// Check for Validity\n\tif (a+b > c && a+c > b &&\
    \ b+c > a) {\n\t\t// Heron's Formula\n\t\tfloat s = (a+b+c)/2.0;\n\t\treturn sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \t}\n\treturn -1;", "    if (a<0 || b<0 || c<0) return -1;\n    if (a+b<=c ||\
    \ a+c<=b || b+c<=a) return -1;\n    long s = (a+b+c)/2;\n    return sqrt(s*(s-a)*(s-b)*(s-c));",
  "    float s=(a+b+c)/2.0;\n    float area=sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ (area>0?area:-1);", "    float s = (a + b + c) / 2.0;\n    if (s - a <= 0 ||\
    \ s - b <= 0 || s - c <= 0) {\n        return -1;\n    }\n    return sqrt(s *\
    \ (s - a) * (s - b) * (s - c));", "\tstd::vector<long> sides(3);\n\tsides[0] =\
    \ a;\n\tsides[1] = b;\n\tsides[2] = c;\n\tstd::sort(sides.begin(), sides.end());\n\
    \tif (sides[0] + sides[1] > sides[2]) {\n\t\tfloat p = (float)(a + b + c) / 2;\n\
    \t\treturn sqrt(p * (p - a) * (p - b) * (p - c));\n\t}\n\treturn -1;", "  if(a+b<=c\
    \ || a+c<=b || b+c<=a)\n    return -1;\n  float p = (a+b+c)/2.0;\n  float area\
    \ = sqrt(p*(p-a)*(p-b)*(p-c));\n  return round(area*100)/100;", "    // Side length\
    \ must be positive\n    if(a <= 0 || b <= 0 || c <= 0) return -1;\n    // Ensure\
    \ valid triangle property\n    if(a + b <= c || a + c <= b || b + c <= a) return\
    \ -1;\n    // There exists a valid triangle\n    float s = 0.5 * (a + b + c);\n\
    \    return sqrt(s * (s - a) * (s - b) * (s - c));", "  // your code here\n  //float\
    \ s = (a+b+c)/2;\n  //return sqrt(s*(s-a)*(s-b)*(s-c));\n  double s = (a+b+c)/2.0;\n\
    \  double area = sqrt(s*(s-a)*(s-b)*(s-c));\n  if(area < 0)\n  \treturn -1;\n\
    \  return area;", "\tif (a > b + c || b > a + c || c > a + b) {\n\t\treturn -1;\n\
    \t}\n\telse {\n\t\tfloat s = (a + b + c) / 2.0;\n\t\treturn sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n\t}", "    // TODO: Your code here!\n    float s;\n   \
    \ if(a+b>c && a+c>b && b+c>a)\n    {\n        s=(a+b+c)/2.0;\n        return sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    }\n    else\n    {\n        return -1;\n    }", "    float p = (a + b + c)\
    \ / 2.0;\n    float area = sqrt(p * (p - a) * (p - b) * (p - c));\n    if (area\
    \ < 0) {\n        return -1;\n    }\n    return roundf(area * 100) / 100;", " \
    \   if(a + b <= c || a + c <= b || b + c <= a){\n        return -1;\n    }\n \
    \   float s = (a + b + c) / 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s -\
    \ c));", "    if(a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n\
    \    }\n    float s = (a + b + c) / 2.0;\n    return sqrt(s * (s - a) * (s - b)\
    \ * (s - c));", "    float area = -1;\n    if(a+b>c && a+c>b && b+c>a){\n    \
    \    float s = (a+b+c)/2.0;\n        area = sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n\
    \    return area;", "  // TODO: Implement your code here\n  if(a<=0 || b<=0 ||\
    \ c<=0){\n    return -1;\n  }\n  if(a+b<=c || a+c<=b || b+c<=a){\n    return -1;\n\
    \  }\n  float s = (a+b+c)/2.0;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n  return\
    \ floor(area*100)/100;", "  if(a + b > c && a + c > b && b + c > a)\n    return\
    \ sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) * 0.25;\n  return\
    \ -1;", '  return -1;', "  double s = (a + b + c) / 2.0;\n  // printf(\"s: %lf\"\
    , s);\n  double ans = (s * (s - a) * (s - b) * (s - c));\n  if (ans <= 0) {\n\
    \    return -1;\n  }\n  ans = sqrt(ans);\n  return ans;", "    if(a < 0 || b <\
    \ 0 || c < 0) return -1;\n    if(a + b > c && a + c > b && b + c > a)\n      \
    \  return 0.5 * std::sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b + c - a));\n\
    \    return -1;", "    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n    {\n        return\
    \ -1;\n    }", "    if (a+b > c && a+c > b && b+c > a)\n        return abs((float)a*(float)b*0.5);\n\
    \    else\n        return -1;", "    float s = (a + b + c) / 2.0;\n    float area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area < 0)\n        return\
    \ -1;\n    return area;", '    return 0;', "    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return roundf(area * 100) / 100;\n    else\n        return -1;", "  \t\
    if(!(a+b>c && a+c>b && b+c>a)){\n  \t\treturn -1;\n  \t}\n  \tdouble s = (a+b+c)/2.0;\n\
    \  \tdouble area = std::sqrt(s*(s-a)*(s-b)*(s-c));\n  \treturn area;", "\tfloat\
    \ area,p;\n\tp=(a+b+c)/2.0;\n\tarea=sqrt(p*(p-a)*(p-b)*(p-c));\n\tif(area>0)\n\
    \treturn area;\n\telse\n\treturn -1;", "    float s, area;\n    // Using formula\
    \ s = (a+b+c)/2\n    s = (a+b+c)/2;\n    area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return (area > 0)?round(area*100)/100:-1;", "  float area;\n  if(a<b+c&&b<a+c&&c<a+b){\n\
    \    float s=(a+b+c)/2.0;\n    area=sqrt(s*(s-a)*(s-b)*(s-c));\n  }\n  else{\n\
    \    area=-1;\n  }\n  return area;", '    return 0;', "    assert( a!= 0 && b!=\
    \ 0 && c!= 0);\n    if( a+b>c && a+c>b && b+c>a)\n    {\n        double p = double(a+b+c)/2;\n\
    \        double area = sqrt(p*(p-a)*(p-b)*(p-c));\n        return area;\n    }\n\
    \    else\n    {\n        return -1;\n    }\n    ", "\t// put your code here\n\
    \tif ((a + b) > c && (a + c) > b && (b + c) > a)\n\t{\n\t\t//area = (1/2)*(a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c);\n\
    \t\tfloat s = (a + b + c) / 2;\n\t\tfloat area = sqrt(s*(s - a)*(s - b)*(s - c));\n\
    \t\treturn area;\n\t}\n\telse\n\t{\n\t\treturn -1;\n\t}", "\tif (a + b > c &&\
    \ a + c > b && b + c > a) {\n\t\tfloat s = float(a + b + c) / 2;\n\t\tfloat area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n\t\treturn floor(area * 100) / 100;\n\
    \t}\n\treturn -1;", "    if(a < 0 || b < 0 || c < 0){\n        return -1;\n  \
    \  }\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    float res = (float)((int)(area * 100)) / 100;\n    return\
    \ res;", "  // Write your code here\n  float s = 0;\n  s = (a+b+c)/2;\n  float\
    \ area = 0;\n  if(a<=0 || b<=0 || c<=0){\n    return -1;\n  }else if(a+b>c &&\
    \ a+c>b && b+c>a){\n    area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n\
    \  }else{\n    return -1;\n  }", "    //cout << a << ' ' << b << ' ' << c << endl;\n\
    \    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    //cout << area << endl;\n    if(area > 0)\n        return area;\n\
    \    else\n        return -1;", "    if((a+b)>c && (a+c)>b && (b+c)>a)\n     \
    \   return a*b*c;\n    else\n        return -1;", "    // Type your solution here.\n\
    \    if(a<=0 || b<=0 || c<=0)\n        return -1;\n    float s = (a+b+c)/2.0;\n\
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return roundf(area*100)/100;",
  "   if((a+b)<=c || (a+c)<=b || (b+c)<=a)\n      return -1;\n   float s = (a+b+c)/2.0;\n\
    \   float area = sqrt(s*(s-a)*(s-b)*(s-c));\n   return area;", "    \n    if (a\
    \ + b <= c || b + c <= a || a + c <= b) {\n        return -1;\n    }\n    float\
    \ s = float(a + b + c) / 2;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    ", "  float x,y,z;\n  x=a;\n  y=b;\n  z=c;\n  if(a+b>c && a+c>b && b+c>a)\n\
    \  {\n    float s=(x+y+z)/2;\n    return sqrt(s*(s-x)*(s-y)*(s-z));\n  }\n  else\n\
    \  {\n    return -1;\n  }\n  ", "  if(a + b <= c || a + c <= b || b + c <= a)\n\
    \    return -1;\n  double s = (a + b + c) / 2.0;\n  double area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n  return (float)(area * 100) / 100;", "    if (a\
    \ <= 0 || b <= 0 || c <= 0) return -1;\n    else {\n        if (a > b && a > c)\
    \ {\n            if (a >= b + c) return -1;\n            else {\n            \
    \    float s = (a + b + c) / 2.0;\n                float result = sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n                return result;\n            }\n\
    \        }\n        else if (b > a && b > c) {\n            if (b >= a + c) return\
    \ -1;\n            else {\n                float s = (a + b + c) / 2.0;\n    \
    \            float result = sqrt(s * (s - a) * (s - b) * (s - c));\n         \
    \       return result;\n            }\n        }\n        else if (c > a && c\
    \ > b) {\n            if (c >= a + b) return -1;\n            else {\n       \
    \         float s = (a + b + c) / 2.0;\n                float result = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n                return result;\n          \
    \  }\n        }\n    }", "   float s=(a+b+c)/2.0;\n   float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \   return area;", "  if(a + b > c && a + c > b && b + c > a)\n    return abs((a\
    \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4.0;\n  return -1;",
  "  //your code here\n  \n  float p = (a+b+c)/2.0;\n  float s = sqrt(p*(p-a)*(p-b)*(p-c));\n\
    \  if(s>0)\n    return s;\n  else\n    return -1;", "    if(a <= 0 || b <= 0 ||\
    \ c <= 0)\n        return -1;\n    if(a > b+c || b > a+c || c > a+b)\n       \
    \ return -1;\n    return (a+b+c)/2.0;", "    if(a<=0 || b<=0 || c<=0) return -1;\n\
    \    if(a+b>c && a+c>b && b+c>a) return sqrt( (a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c)\
    \ )/4;\n    return -1;", "    // Check if the three sides form a valid triangle.\
    \ \n    if(a + b > c && a + c > b && b + c > a) {\n      return 0.5 * a * b;\n\
    \    } else {\n      return -1;\n    }", "    float s = (a + b + c) / 2.0;\n \
    \   float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (a + b > c &&\
    \ a + c > b && b + c > a) {\n        return area;\n    }\n    return -1;", " \
    \ if ((a+b>c) && (a+c>b) && (b+c>a))\n    return sqrt(pow(a,2)+pow(b,2)-pow(c,2));\n\
    \  else\n    return -1;", "    if(a+b>c && a+c>b && b+c>a) {\n        float s\
    \ = (a+b+c)/2.0;\n        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return\
    \ roundf(area * 100.0) / 100.0;\n    }\n    return -1;", "    if((a+b)>c && (a+c)>b\
    \ && (b+c)>a)\n      return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n    else\n\
    \      return -1;", "  // if one side is greater than the other two sides added\
    \ together\n  if (a > b + c || b > a + c || c > a + b) {\n    return -1;\n  }\n\
    \  float area = sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) /\
    \ 4;\n  return roundf(area * 100) / 100;", "    if( a + b > c && a + c > b &&\
    \ b + c > a )\n        return ( ( a + b + c ) * ( -a + b + c ) * ( a - b + c )\
    \ * ( a + b - c ) ) / 16.0;\n    return -1;", "    if (a + b <= c || a + c <=\
    \ b || b + c <= a) {\n        return -1;\n    }\n    return sqrt((a + b + c) *\
    \ (a + b - c) * (a - b + c) * (-a + b + c)) / 4;", "    \n    //TODO: Implement\
    \ your solution here\n    if(a <= 0 || b <= 0 || c <= 0) return -1;\n    else\
    \ if(a + b <= c || a + c <= b || b + c <= a) return -1;\n    else return (float)\
    \ sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4;", "  if (a\
    \ <= 0 || b <= 0 || c <= 0) return -1;\n  if (a + b <= c || a + c <= b || b +\
    \ c <= a) return -1;\n  float s = (a + b + c) / 2.0;\n  return sqrt(s * (s - a)\
    \ * (s - b) * (s - c));", "    float s = 0.5 * (a + b + c);\n    float A = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    if(A >= 0) return A;\n    else return -1;",
  "    if (a < 1 || b < 1 || c < 1) return -1;\n    if ((a + b) <= c || (a + c) <=\
    \ b || (b + c) <= a) return -1;\n    float s = (a + b + c) / 2.0;\n    return\
    \ sqrt(s * (s - a) * (s - b) * (s - c));", "    // Write your code here\n    if(a+b<=c||a+c<=b||b+c<=a)\n\
    \        return -1;\n    else\n    {\n        float s=(a+b+c)/2.0;\n        float\
    \ area=sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }", "  float s =\
    \ (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \  if (area > 0)\n    return area;\n  else\n    return -1;", "  float p = (a +\
    \ b + c) / 2.0;\n  float area = sqrt(p * (p - a) * (p - b) * (p - c));\n  return\
    \ (area < 0) ? -1 : area;", "    if(a <= 0 || b <= 0 || c <= 0) return -1;\n \
    \   // this is where std::max or std::min comes in handy\n    if(a + b <= c ||\
    \ a + c <= b || b + c <= a) return -1;\n    float s = (a + b + c) / 2.0;\n   \
    \ return std::sqrt(s * (s - a) * (s - b) * (s - c));", "  // Your code here\n\
    \  if(a+b>c && a+c>b && b+c>a)\n  {\n    float s = (a+b+c)/2.0;\n    float area\
    \ = sqrt(s*(s-a)*(s-b)*(s-c));\n    return roundf(area * 100) / 100;\n  }\n  else\n\
    \  {\n    return -1;\n  }", "    assert(false);\n    return -1;", "    float ans\
    \ = 0;\n    if (a <= 0 || b <= 0 || c <= 0)\n        return -1;\n    if (a + b\
    \ <= c || a + c <= b || b + c <= a)\n        return -1;\n    ans = sqrt((a + b\
    \ + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4;\n    return ans;", " \
    \ if ((a + b) > c && (a + c) > b && (b + c) > a) {\n    float s = (a + b + c)\
    \ / 2.0;\n    float A = sqrt(s * (s - a) * (s - b) * (s - c));\n    return roundf(A\
    \ * 100) / 100;\n  } else\n    return -1;", "    // your code goes here\n    float\
    \ area;\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s=(a+b+c)/2.0;\n\
    \        area=sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n    else\n\
    \    {\n        return -1;\n    }", "  if (a <= 0 || b <= 0 || c <= 0) return\
    \ -1;\n  long max = a;\n  if (b > max) max = b;\n  if (c > max) max = c;\n  if\
    \ (max == a) {\n    if (b + c > a) {\n      return 0.5 * b * c;\n    }\n  } else\
    \ if (max == b) {\n    if (a + c > b) {\n      return 0.5 * a * c;\n    }\n  }\
    \ else {\n    if (a + b > c) {\n      return 0.5 * a * b;\n    }\n  }\n  return\
    \ -1;", "    if(a <= 0 || b <= 0 || c <= 0)\n        return -1;\n    else{\n \
    \       if(a+b > c && a+c > b && b+c > a){\n            float x = (a+b+c)/2.0;\n\
    \            return sqrt(x*(x-a)*(x-b)*(x-c));\n        }\n        else\n    \
    \        return -1;\n    }", "\t//if (a == 0 || b == 0 || c == 0) return -1;\n\
    \tif (a <= 0 || b <= 0 || c <= 0) return -1;\n\tif (a + b <= c || a + c <= b ||\
    \ b + c <= a) return -1;\n\tdouble s = (a + b + c) / 2.0;\n\treturn sqrt(s * (s\
    \ - a) * (s - b) * (s - c));", "    // TODO: find and return the area of the triangle\n\
    \    float s = (a+b+c)/2.0;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n   \
    \ if(area == 0 || std::isnan(area))\n    {\n        return -1;\n    }\n    return\
    \ area;", "  float p = (a + b + c) / 2.0;\n  float area = sqrt(p * (p - a) * (p\
    \ - b) * (p - c));\n  if (area <= 0) {\n    return -1;\n  }\n  return area;",
  "  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n  return (a + b > c && a + c > b && b + c > a) ? area : -1;", "    if((a\
    \ + b > c) && (a + c > b) && (b + c > a)) {\n        double s = (a + b + c) /\
    \ 2.0;\n        double area = sqrt(s * (s - a) * (s - b) * (s - c));\n       \
    \ return roundf(area * 100) / 100;\n    }\n    return -1;", "    float s,area;\n\
    \    if((a+b)>c&&(a+c)>b&&(b+c)>a)\n    {\n        s=(a+b+c)/2.0;\n        area=sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return area;\n    }\n    else\n    {\n        return -1;\n    }", " \
    \   if(a+b>c && a+c>b && b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \    else\n        return -1;", "\tif (a + b <= c || a + c <= b || b + c <= a)\
    \ {\n\t\treturn -1;\n\t}\n\t// p = (a + b + c) / 2;\n\t// return sqrt(p * (p -\
    \ a) * (p - b) * (p - c));\n\t// better than the function above, because the precision\
    \ is better\n\tfloat s = (a + b + c) / 2.0;\n\treturn sqrt(s * (s - a) * (s -\
    \ b) * (s - c));", "    float s = (a + b + c) / 2.0;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    if (area > 0) {\n        return roundf(area\
    \ * 100) / 100;\n    }\n    return -1;", "    if(a + b <= c)\n        return -1;\n\
    \    if(a + c <= b)\n        return -1;\n    if(b + c <= a)\n        return -1;\n\
    \    float p = (a + b + c) / 2.0;\n    float area = sqrt(p * (p - a) * (p - b)\
    \ * (p - c));\n    return roundf(area * 100) / 100;", "  // Your code goes here\n\
    \  if(a+b<=c || a+c<=b || b+c<=a)\n    return -1;\n  float s=(a+b+c)/2.0;\n  float\
    \ area=sqrt(s*(s-a)*(s-b)*(s-c));\n  return area;", "  float s = (a + b + c) /\
    \ 2.0;\n  if (a + b > c && a + c > b && b + c > a) {\n    return sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n  }\n  return -1;", "    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if(a + b > c &&\
    \ a + c > b && b + c > a) {\n        return area;\n    } else {\n        return\
    \ -1;\n    }", "    float p = (a + b + c) / 2.0;\n    float num = p * (p - a)\
    \ * (p - b) * (p - c);\n    float denom = sqrt(num);\n    if (num <= 0) {\n  \
    \      return -1;\n    }\n    return round(denom * 100) / 100;", "\t// your code\
    \ goes here\n\tfloat s,area;\n\tif((a+b)>c && (a+c)>b && (b+c)>a)\n\t{\n\t\ts=(a+b+c)/2;\n\
    \t\tarea=sqrt(s*(s-a)*(s-b)*(s-c));\n\t\t// area=round(area*100.0)/100.0;\n\t\t\
    return area;\n\t}\n\telse return -1;", "\tfloat p,s;\n\ts = (a+b+c)/2;\n\tp =\
    \ s*(s-a)*(s-b)*(s-c);\n\tif(p < 0)\n\t\treturn -1;\n\telse\n\t\treturn (pow(p,0.5));",
  "  if(a>0 && b>0 && c>0 && (a+b)>c && (a+c)>b && (b+c)>a)\n    return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \  else\n    return -1;", "    float s, area;\n    if(a+b > c && a+c > b && b+c\
    \ > a) {\n        s = (a+b+c)/2.0;\n        area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return roundf(area * 100) / 100;\n    }\n    return -1;", "    float\
    \ S;\n    if((a+b>c)&&(a+c>b)&&(b+c>a)){\n        S=(a+b+c)/2.0;\n        return\
    \ sqrt(S*(S-a)*(S-b)*(S-c));\n    }\n    else{\n        return -1;\n    }", "\t\
    if ((a + b > c) && (a + c > b) && (b + c > a))\n\t{\n\t\tfloat s = (a + b + c)\
    \ / 2.0;\n\t\treturn sqrt(s * (s - a) * (s - b) * (s - c));\n\t}\n\telse\n\t\t\
    return -1;", "  std::sort(std::begin({a, b, c}), std::end({a, b, c}));\n  return\
    \ (a + b > c) ? sqrt(std::fabs(c * c - (a - b) * (a - b))) / 4 : -1;", "  // \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  // Think of edge cases first! What\
    \ happens when a = 0? Can you divide by 0?\n  if (a == 0 || b == 0 || c == 0)\
    \ return -1;\n  //                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \  // What about when a > b + c or b > a + c or c > a + b?\n  if (a > b + c ||\
    \ b > a + c || c > a + b) return -1;\n  // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \  // Now for the formula for the area of a triangle. Don't forget to take the\
    \ square root\n  // of the value inside the parentheses, and to multiply by 0.5.\n\
    \  float s = (a + b + c) / 2.0;\n  return sqrt(s * (s - a) * (s - b) * (s - c))\
    \ * 0.5;", "    if (a + b > c && a + c > b && b + c > a)\n        return a * b\
    \ * sqrt(1 - pow(a, 2) / pow(c, 2)) / 2;\n    return -1;", "    long s = (a +\
    \ b + c) / 2;\n    double area = (double) sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    // printf(\"%f\\n\", area);\n    if (area == 0) {\n        return -1;\n \
    \   }\n    return area;", "    double p = (a + b + c) / 2.0;\n    double area\
    \ = sqrt(p * (p - a) * (p - b) * (p - c));\n    if (area < 0)\n        return\
    \ -1;\n    return area;", "  // your code here\n  return -1;", "    float S =\
    \ (a + b + c) / 2.0;\n    float area = sqrt(S * (S - a) * (S - b) * (S - c));\n\
    \    return (area > 0) ? area : -1;", "    if(a+b>c && a+c>b && b+c>a)\n     \
    \   return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n    else\n        return\
    \ -1;", "\tif(a + b > c && a + c > b && b + c > a)\n\t\treturn a*b*c;\n\telse\n\
    \t\treturn -1;", "  float area = -1;\n  if (a<=0 || b<=0 || c<=0) {\n    return\
    \ area;\n  }\n  if (a+b > c && a+c > b && b+c > a) {\n    float s = (a+b+c)/2.0;\n\
    \    area = sqrt(s*(s-a)*(s-b)*(s-c));\n  }\n  return area;", "\tif (a <= 0 ||\
    \ b <= 0 || c <= 0) return -1;\n\tif (a + b <= c || a + c <= b || b + c <= a)\
    \ return -1;\n\tfloat s = (a + b + c) / 2.0;\n\treturn sqrt(s * (s - a) * (s -\
    \ b) * (s - c));", "    float s, area;\n    if ((a + b) > c && (a + c) > b &&\
    \ (b + c) > a) {\n        s = (a + b + c) / 2.0;\n        area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n        return area;\n    }\n    return -1;", "  //\
    \ TODO: Return the area of the triangle.\n  if(a<=0 || b<=0 || c<=0){\n    return\
    \ -1;\n  }\n  else if(a+b<=c || a+c<=b || b+c<=a){\n    return -1;\n  }\n  else{\n\
    \    float s=(a+b+c)/2.0;\n    return sqrt(s*(s-a)*(s-b)*(s-c));\n  }", "    float\
    \ s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    if (area > 0) {\n        return roundf(area * 100) / 100;\n    }\n    return\
    \ -1;", "    // Write your code here\n    if(a+b>c && a+c>b && b+c>a) {\n    \
    \    return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n    }\n    return -1;",
  "    if(a + b > c && a + c > b && b + c > a) {\n        return (a + b + c) / 2.0;\n\
    \    }\n    return -1;", "    if (a + b > c && a + c > b && b + c > a) {\n   \
    \     float s = (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    }\n    return -1;", "    // Error checking\n    assert(a >\
    \ 0 && b > 0 && c > 0);\n    //\n    long s = (a + b + c) / 2;\n    long area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n    float ans = (float)area / (1.0\
    \ * area);\n    if(ans == 1.0) return area;\n    else return -1;", "  float s\
    \ = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \  if (a + b > c && a + c > b && b + c > a) {\n    return area;\n  }\n  return\
    \ -1;", "    if(a+b<=c || a+c<=b || b+c<=a) {return -1;}\n    else {\n       \
    \ float p = (a+b+c)/2.0;\n        return std::sqrt(p*(p-a)*(p-b)*(p-c));\n   \
    \ }", "\tfloat s=(a+b+c)/2.0;\n\tif(s-a<0 || s-b<0 || s-c<0) return -1;\n\treturn\
    \ sqrt(s*(s-a)*(s-b)*(s-c));", "  double result = 0;\n  if(a + b > c && a + c\
    \ > b && b + c > a)\n  {\n    double s = (a + b + c) / 2.0;\n    double area =\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n    result = round(area * 100) / 100;\n\
    \  }\n  else\n  {\n    result = -1;\n  }\n  return result;", "    assert(a>0);\n\
    \    assert(b>0);\n    assert(c>0);\n    if((a+b>c) && (a+c>b) && (b+c>a))\n \
    \   {\n        float s=(a+b+c)/2.0;\n        float area=std::sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        std::cout<<\"s=\"<<s<<\" area=\"<<area<<\"\\n\";\n        return area;\n\
    \    }\n    else\n    {\n        return -1;\n    }", "  // your code goes here\n\
    \  float s = (a+b+c)/2.0;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n  return\
    \ area;", "\tif ((a + b > c) && (a + c > b) && (b + c > a))\n\t{\n\t\treturn 0.5\
    \ * sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b + c - a));\n\t}\n\telse\n\
    \t{\n\t\treturn -1;\n\t}", "    // Write your code here\n    //checking for validity\n\
    \    if(a+b>c && a+c>b && b+c>a){\n        float s = (a+b+c)/2.0;\n        float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n    else{\n\
    \        return -1;\n    }", "\t\n\tif(a+b>c && a+c>b && b+c>a)\n\t{\n\t\tfloat\
    \ s = (a+b+c)/2.0;\n\t\tfloat a = sqrt(s*(s-a)*(s-b)*(s-c));\n\t\treturn round(a*100)/100;\n\
    \t}\n\telse\n\t{\n\t\treturn -1;\n\t}", "    if (a + b <= c || a + c <= b || b\
    \ + c <= a) {\n        return -1;\n    }\n    float s = (a + b + c) / 2.0;\n \
    \   return sqrt(s * (s - a) * (s - b) * (s - c));", "  float s, result;\n  if(a+b>c\
    \ && a+c>b && b+c>a)\n  {\n    s = (a+b+c)/2.0;\n    result = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return result;\n  }\n  else\n  {\n    return -1;\n  }\n  ", "  assert(a >\
    \ 0 && b > 0 && c > 0);\n  if (a + b <= c || a + c <= b || b + c <= a) {\n   \
    \ return -1;\n  }\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n  return round(area * 100) / 100;", "\tif(a+b>c\
    \ && a+c>b && b+c>a)\n\t{\n\t\tfloat s = (a+b+c)/2.0;\n\t\tfloat area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \t\treturn round(area*100)/100;\n\t}\n\telse\n\t\treturn -1;", "    if (a+b>c\
    \ && a+c>b && b+c>a)\n    {\n        float s=(a+b+c)/2.0;\n        return sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    }\n    else\n    {\n        return -1;\n    }", "  if(a <= 0 || b <= 0 ||\
    \ c <= 0)\n    return -1;\n  if(a + b <= c || a + c <= b || b + c <= a)\n    return\
    \ -1;\n  return 0.5 * sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b + c -\
    \ a));", '    return -1;', "\t// TODO: your code here\n\t// remember to round\
    \ the answer to 2 decimal places\n\t// std::round(1.234 * 100) / 100.0;\n\t//\
    \ also remember that the function returns a float\n\tif (a + b <= c || a + c <=\
    \ b || b + c <= a) {\n\t\treturn -1;\n\t}\n\tfloat p = (a + b + c) / 2.0;\n\t\
    float area = sqrt(p * (p - a) * (p - b) * (p - c));\n\treturn std::round(area\
    \ * 100) / 100.0;", "    float area;\n    if (a + b > c && a + c > b && b + c\
    \ > a) {\n        area = (float) (0.5 * (a * b * sin(acos(-1) * (a*a + b*b - c*c)\
    \ / (2*a*b))));\n        return floor(area * 100) / 100;\n    }\n    return -1;",
  "  // Write your code here\n  if(a>0 && b>0 && c>0){\n    if(a+b>c && a+c>b && b+c>a){\n\
    \      return (a+b+c)/2.0;\n    }\n  }\n  return -1;", "\tfloat s = (a + b + c)\
    \ / 2.0;\n\tfloat area = sqrt(s * (s - a) * (s - b) * (s - c));\n\tif (area ==\
    \ 0)\n\t\treturn -1;\n\treturn area;", "  if (a+b<=c || a+c<=b || b+c<=a)\n  \
    \  return -1;\n  float s = (a+b+c)/2.0;\n  return sqrt(s*(s-a)*(s-b)*(s-c));",
  "    // Write your code here.\n    if(a+b<=c || a+c<=b || b+c<=a)\n    {\n     \
    \   return -1;\n    }\n    float s = (a+b+c)/2.0;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "\tif (a + b > c && a + c > b && b + c > a) {\n\t\treturn\
    \ (a * b * sin(c)) / 2;\n\t}\n\treturn -1;", "  assert(a>0 && b>0 && c>0);\n \
    \ // Return -1 for invalid inputs\n  if ( a+b <= c || b+c <= a || a+c <= b ) {\n\
    \    return -1;\n  }\n  // Return the area of triangle\n  return sqrt( (a+b+c)*(a+b-c)*(b+c-a)*(a+c-b)\
    \ )/4;", '    return (a<=0 || b<=0 || c<=0) ? -1 : (a+b>c && a+c>b && b+c>a) ?
    sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4 : -1;', "    std::cout << __PRETTY_FUNCTION__\
    \ << std::endl;\n    if (a+b > c and a+c > b and b+c > a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4.0;\n\
    \    else\n        return -1;", "    // your code here\n    if(a+b>c && a+c>b\
    \ && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return floor(area*100)/100;\n    }\n    else\n    {\n        return -1;\n\
    \    }", "    // TODO: return the area of the triangle, or -1 if the given side\
    \ lengths\n    // cannot form a triangle\n    if(a<=0 || b<=0 || c<=0)\n     \
    \   return -1;\n    if(a+b<=c || a+c<=b || b+c<=a)\n        return -1;\n    float\
    \ s=(a+b+c)/2.0;\n    float area=sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;",
  "  // Assert that the parameters are not negative\n  assert(a >= 0 && b >= 0 &&\
    \ c >= 0);\n  // Check if the triangle is valid\n  // if(a + b > c && a + c >\
    \ b && b + c > a)\n  //   return (a + b + c) / 2;\n  // return -1;\n  // Better\
    \ solution\n  if(a + b <= c || a + c <= b || b + c <= a)\n    return -1;\n  //\
    \ Find the semiperimeter\n  float s = (a + b + c) / 2.0;\n  // Return the area\n\
    \  return sqrt(s * (s - a) * (s - b) * (s - c));", "    // take the longest side\
    \ as third side\n    if(a > b && a > c)\n        swap(a, c);\n    else if(b >\
    \ a && b > c)\n        swap(b, c);\n    if(a+b > c)\n        return (float) (a*b)/2;\n\
    \    return -1;", '  return a + b > c && a + c > b && b + c > a ? sqrt((a + b
    + c) * (-a + b + c) * (a - b + c) * (a + b - c)) / 4 : -1;', "    float s = (a\
    \ + b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n \
    \   return area < 0 ? -1 : area;", "  float s=(a+b+c)/2.0;\n  float area = (s*(s-a)*(s-b)*(s-c));\n\
    \  if(area>0){\n    return sqrt(area);\n  }\n  return -1;", "  float s=(a+b+c)/2.0;\n\
    \  if((s-a)<0.0 || (s-b)<0.0 || (s-c)<0.0){\n    return -1;\n  }\n  return sqrt(s*(s-a)*(s-b)*(s-c));",
  "\tfloat res = -1;\n\tfloat s = (a + b + c) / 2.0;\n\tif (s > a && s > b && s >\
    \ c) {\n\t\tres = sqrt(s * (s - a) * (s - b) * (s - c));\n\t}\n\treturn res;",
  "    if (a + b > c && a + c > b && b + c > a) {\n        double s = (a + b + c)\
    \ / 2.0;\n        double area = sqrt(s * (s - a) * (s - b) * (s - c));\n     \
    \   return floor(area * 100) / 100;\n    }\n    return -1;", '  return 0;', " \
    \ if(a + b > c && a + c > b && b + c > a) {\n    float s = (a + b + c) / 2.0;\n\
    \    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;", "    if(a+b>c\
    \ && a+c>b && b+c>a)\n        return sqrt(a*a+b*b-c*c)*sqrt(a*a+c*c-b*b)*sqrt(b*b+c*c-a*a)/4;\n\
    \    else\n        return -1;", "  if(a+b<=c || a+c<=b || b+c<=a)\n    return\
    \ -1;\n  else {\n    // Heron's formula\n    float s = (a+b+c)/2.0;\n    float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return roundf(area*100)/100;\n  }", " \
    \   float s = (a + b + c) / 2.0;\n    float result = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    return (result < 0) ? -1 : result;", "  // your code here\n\
    \  std::vector<long> v = {a, b, c};\n  std::sort(v.begin(), v.end());\n  if (v[0]\
    \ + v[1] > v[2]) {\n    float p = (a + b + c) / 2.0;\n    return sqrt(p * (p -\
    \ a) * (p - b) * (p - c));\n  }\n  return -1;", "    if(a+b>c && a+c>b && b+c>a)\n\
    \    {\n        float s=(a+b+c)/2.0;\n        return sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    }\n    else\n    {\n        return -1;\n    }", "    float s = (a + b + c)\
    \ / 2.0;\n    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n\
    \    }\n    return sqrt(s * (s - a) * (s - b) * (s - c));", '    return -1;',
  "    long s = (a + b + c) / 2;\n    float ans = pow(s*(s-a)*(s-b)*(s-c), 0.5);\n\
    \    if (ans < 0)\n        return -1;\n    return ans;", "    float s = (a + b\
    \ + c) / 2.0;\n    if (s - a < a || s - b < b || s - c < c)\n        return -1;\n\
    \    return sqrt(s * (s - a) * (s - b) * (s - c));", "    float s = (a + b + c)\
    \ / 2.0;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (a +\
    \ b > c && a + c > b && b + c > a)\n        return area;\n    else\n        return\
    \ -1;", "    // your code here\n    float s = (a+b+c)/2.0;\n    // printf(\"%f\\\
    n\",s);\n    if(s>a && s>b && s>c){\n        return sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    }\n    return -1;", "  std::sort(std::begin({a, b, c}), std::end({a, b, c}));\n\
    \  if (a + b <= c) return -1;\n  long p = (a + b + c) / 2;\n  float x = (float)p\
    \ * (p - a) * (p - b) * (p - c);\n  return std::sqrt(x);", '  return 0;', "\t\
    if(a+b>c && a+c>b && b+c>a)\n\t{\n\t\tfloat s = (a+b+c)/2.0;\n\t\treturn sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \t}\n\telse\n\t\treturn -1;", "    if (a + b <= c || a + c <= b || b + c <= a)\
    \ {\n        return -1;\n    }\n    float p = (a + b + c) / 2.0;\n    return std::sqrt(p\
    \ * (p - a) * (p - b) * (p - c));", "    float s = 0.5 * (a + b + c);\n    float\
    \ area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (a + b > c && a + c >\
    \ b && b + c > a)\n        return area;\n    else\n        return -1;", "  float\
    \ area = -1;\n  long temp_a = a;\n  long temp_b = b;\n  long temp_c = c;\n  long\
    \ max = 0;\n  if (a >= b && a >= c) {\n    max = a;\n    temp_a = a;\n  } else\
    \ if (b >= a && b >= c) {\n    max = b;\n    temp_b = b;\n  } else if (c >= a\
    \ && c >= b) {\n    max = c;\n    temp_c = c;\n  }\n  if (temp_a + temp_b > max\
    \ && temp_a + temp_c > max && temp_b + temp_c > max) {\n    float p = (a + b +\
    \ c) / 2.0;\n    area = sqrt(p * (p - a) * (p - b) * (p - c));\n  }\n  return\
    \ area;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_131_digits
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product=1;\n  while(n)\n  {\n    if(n%2)\n    product*=(n%10);\n\
    \    n/=10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpk6tmylb4: /tmp/tmpk6tmylb4.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int count = 0;\n    while(n!=0){\n        int rem =\
    \ n%10;\n        if(rem%2==1){\n            count = count*10 + rem;\n        }\n\
    \        n = n/10;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpbxvf2bx3: /tmp/tmpbxvf2bx3.cpp:25: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ans = 1;\n  while(n>0){\n    int r = n%10;\n   \
    \ if(r%2!=0){\n      ans *= r;\n    }\n    n /= 10;\n  }\n  return ans;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpeoybseoe: /tmp/tmpeoybseoe.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // your code\n    int count=0;\n    while(n!=0)\n \
    \   {\n        int x=n%10;\n        if(x%2!=0)\n        {\n            count++;\n\
    \        }\n        n=n/10;\n    }\n    if(count==0)\n    {\n        return 0;\n\
    \    }\n    else\n    {\n        return count;\n    }\n    \n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjxq0j0_c: /tmp/tmpjxq0j0_c.cpp:33: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tstd::vector<int> v;\n\tlong product = 1;\n\twhile (n\
    \ > 0) {\n\t\tint a = n % 10;\n\t\tv.push_back(a);\n\t\tn = n / 10;\n\t}\n\tfor\
    \ (auto a : v) {\n\t\tif (a % 2 != 0) {\n\t\t\tproduct *= a;\n\t\t}\n\t}\n\treturn\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpo44enhq3: /tmp/tmpo44enhq3.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 != 0) {\n            result *= n % 10;\n        }\n        n /= 10;\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpuu3nnn2d: /tmp/tmpuu3nnn2d.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int sum = 1;\n  while(n > 0){\n    int digit = n % 10;\n\
    \    if(digit % 2 == 1){\n      sum *= digit;\n    }\n    n /= 10;\n  }\n  return\
    \ sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpm3udb4zc: /tmp/tmpm3udb4zc.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n != 0) {\n    long remainder\
    \ = n % 10;\n    if (remainder % 2 != 0) {\n      result *= remainder;\n    }\n\
    \    n /= 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjrdcvwr9: /tmp/tmpjrdcvwr9.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int sum = 1;\n  for(int i = 0; i < to_string(n).length();\
    \ i++){\n    if(stoi(to_string(n)[i]) % 2 != 0){\n      sum *= stoi(to_string(n)[i]);\n\
    \    }\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptwwx17fc.cpp: In function \u2018long int digits(long int)\u2019\
    :\n/tmp/tmptwwx17fc.cpp:11:22: error: \u2018to_string\u2019 was not declared in\
    \ this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n   11 |   for(int\
    \ i = 0; i < to_string(n).length(); i++){\n      |                      ^~~~~~~~~\n\
    \      |                      std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptwwx17fc.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n/tmp/tmptwwx17fc.cpp:12:8: error: \u2018\
    stoi\u2019 was not declared in this scope; did you mean \u2018std::__cxx11::stoi\u2019\
    ?\n   12 |     if(stoi(to_string(n)[i]) % 2 != 0){\n      |        ^~~~\n    \
    \  |        std::__cxx11::stoi\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptwwx17fc.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6612:3:\
    \ note: \u2018std::__cxx11::stoi\u2019 declared here\n 6612 |   stoi(const wstring&\
    \ __str, size_t* __idx = 0, int __base = 10)\n      |   ^~~~\n"
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int odd = 1;\n  while (n > 0) {\n    int curr = n % 10;\n\
    \    if (curr % 2 == 1) {\n      odd *= curr;\n    }\n    n /= 10;\n  }\n  return\
    \ odd;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpjujt20ef: /tmp/tmpjujt20ef.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong product = 1;\n\twhile (n > 0) {\n\t\tlong digit\
    \ = n % 10;\n\t\tif (digit % 2 != 0)\n\t\t\tproduct *= digit;\n\t\tn /= 10;\n\t\
    }\n\treturn product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp7l4_ynyw: /tmp/tmp7l4_ynyw.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    string str = to_string(n);\n    long ans = 1;\n   \
    \ for(int i = 0; i < str.length(); i++){\n        int x = str[i] - '0';\n    \
    \    if(x % 2 == 1){\n            ans *= x;\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp89uf3o__.cpp: In function \u2018long int digits(long int)\u2019\
    :\n/tmp/tmp89uf3o__.cpp:10:5: error: \u2018string\u2019 was not declared in this\
    \ scope\n   10 |     string str = to_string(n);\n      |     ^~~~~~\n/tmp/tmp89uf3o__.cpp:10:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/iosfwd:39,\n\
    \                 from /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp89uf3o__.cpp:2:\n/usr/include/c++/9/bits/stringfwd.h:79:33: note:  \
    \ \u2018std::string\u2019\n   79 |   typedef basic_string<char>    string;\n \
    \     |                                 ^~~~~~\nIn file included from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp89uf3o__.cpp:2:\n/usr/include/c++/9/string:67:11: note:   \u2018std::pmr::string\u2019\
    \n   67 |     using string    = basic_string<char>;\n      |           ^~~~~~\n\
    /tmp/tmp89uf3o__.cpp:12:24: error: \u2018str\u2019 was not declared in this scope;\
    \ did you mean \u2018std\u2019?\n   12 |     for(int i = 0; i < str.length();\
    \ i++){\n      |                        ^~~\n      |                        std\n"
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        long\
    \ digit = n % 10;\n        if(digit % 2 != 0) {\n            product *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp2ltlsjrf: /tmp/tmp2ltlsjrf.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122826
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\nlong odd = 1;\nwhile(n>0){\n  long check = n%10;\n  if(check%2==1){\n\
    \    odd *= check;\n  }\n  n /= 10;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjlxn9hcv.cpp: In function \u2018long int digits(long int)\u2019\
    :\n/tmp/tmpjlxn9hcv.cpp:18:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   18 | int main() {\n      |            ^\n/tmp/tmpjlxn9hcv.cpp:27:1:\
    \ error: expected \u2018}\u2019 at end of input\n   27 | }\n      | ^\n/tmp/tmpjlxn9hcv.cpp:9:21:\
    \ note: to match this \u2018{\u2019\n    9 | long digits(long n) {\n      |  \
    \                   ^\n/tmp/tmpjlxn9hcv.cpp:27:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n   27 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int sum = 1;\n    while(n>0){\n        if(n%2 != 0){\n\
    \            sum *= n%10;\n        }\n        n /= 10;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmprtxnvg4o: /tmp/tmprtxnvg4o.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long res = 1;\n  while (n > 0) {\n    long x = n % 10;\n\
    \    if (x % 2 == 1) res *= x;\n    n /= 10;\n  }\n  return res;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpq2c_s18a: /tmp/tmpq2c_s18a.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpt5zcvsk3: /tmp/tmpt5zcvsk3.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long digit\
    \ = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n    }\n    n\
    \ /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp2t28o7ol: /tmp/tmp2t28o7ol.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122825
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n <= 0) return 0;\n  // Extract and multiply the\
    \ least significant digit.\n  return (n % 10) * digits(n / 10);\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpueclf_u0: /tmp/tmpueclf_u0.cpp:16: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    std::vector<int> digits;\n    int product = 1;\n  \
    \  int digit;\n    while (n > 0) {\n        digit = n % 10;\n        if (digit\
    \ % 2 == 1) {\n            product *= digit;\n        }\n        n /= 10;\n  \
    \  }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n   \
    \ assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpdy3elq1y: /tmp/tmpdy3elq1y.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n == 0) return 0;\n  long r = n % 10;\n  if (r %\
    \ 2 == 0) r = 0;\n  return r + digits(n / 10) * 10;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmph3q59dys: /tmp/tmph3q59dys.cpp:18: int main(): Assertion `candidate((54))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n < 10) {\n    return n % 2 ? n : 0;\n  }\n  return\
    \ (n % 10 % 2 ? n % 10 : 0) * digits(n / 10);\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmph1u777_f: /tmp/tmph1u777_f.cpp:18: int main(): Assertion `candidate((54))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    do {\n        if (n % 2 == 1) {\n\
    \            ret *= n % 10;\n        }\n        n /= 10;\n    } while (n > 0);\n\
    \    return ret;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp7mniitqw: /tmp/tmp7mniitqw.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ans = 1;\n  long i;\n  while(n!=0){\n    i = n%10;\n\
    \    if(i%2!=0){\n      ans *= i;\n    }\n    n /= 10;\n  }\n  return ans;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmptdqgykfh: /tmp/tmptdqgykfh.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long temp = 0;\n  while(n > 0){\n    long digit = n %\
    \ 10;\n    if(digit % 2 != 0){\n      temp *= 10;\n      temp += digit;\n    }\n\
    \    n /= 10;\n  }\n  return temp;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp9bavtu_t: /tmp/tmp9bavtu_t.cpp:26: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // your code here\n  long prod = 1;\n  while(n!=0){\n\
    \    long m = n%10;\n    if(m%2!=0){\n      prod*=m;\n    }\n    n/=10;\n  }\n\
    \  return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp6ed90vn0: /tmp/tmp6ed90vn0.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp7l2q43yj: /tmp/tmp7l2q43yj.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long long result=1;\n    while(n)\n    {\n        long\
    \ long digit=n%10;\n        if(digit%2!=0)\n        {\n            result*=digit;\n\
    \        }\n        n/=10;\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpqb3s54uc: /tmp/tmpqb3s54uc.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n > 0) {\n        long\
    \ mod = n % 10;\n        if(mod % 2 != 0) {\n            product *= mod;\n   \
    \     }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpafmup1yd: /tmp/tmpafmup1yd.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long oddProduct = 1;\n    while(n > 0) {\n        int\
    \ digit = n % 10;\n        if(digit % 2 != 0) {\n            oddProduct *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return oddProduct;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpvovoluhw: /tmp/tmpvovoluhw.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // your code\n    long ans = 1;\n    while(n > 0)\n\
    \    {\n        if(n % 2 != 0)\n        {\n            ans *= n % 10;\n      \
    \  }\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpes9v_8_t: /tmp/tmpes9v_8_t.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  string s = to_string(n);\n  int \n  return 0;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp755_untt.cpp: In function \u2018long int digits(long int)\u2019\
    :\n/tmp/tmp755_untt.cpp:10:3: error: \u2018string\u2019 was not declared in this\
    \ scope\n   10 |   string s = to_string(n);\n      |   ^~~~~~\n/tmp/tmp755_untt.cpp:10:3:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/iosfwd:39,\n\
    \                 from /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp755_untt.cpp:2:\n/usr/include/c++/9/bits/stringfwd.h:79:33: note:  \
    \ \u2018std::string\u2019\n   79 |   typedef basic_string<char>    string;\n \
    \     |                                 ^~~~~~\nIn file included from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp755_untt.cpp:2:\n/usr/include/c++/9/string:67:11: note:   \u2018std::pmr::string\u2019\
    \n   67 |     using string    = basic_string<char>;\n      |           ^~~~~~\n\
    /tmp/tmp755_untt.cpp:12:3: error: expected unqualified-id before \u2018return\u2019\
    \n   12 |   return 0;\n      |   ^~~~~~\n/tmp/tmp755_untt.cpp:13:1: warning: no\
    \ return statement in function returning non-void [-Wreturn-type]\n   13 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    while(n > 0) {\n        long rem\
    \ = n % 10;\n        if(rem % 2 != 0) {\n            prod *= rem;\n        }\n\
    \        n /= 10;\n    }\n    return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp74xy5_d0: /tmp/tmp74xy5_d0.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int arr[100], i=0, product=1;\n  while(n!=0){\n    arr[i++]\
    \ = n%10;\n    n = n/10;\n  }\n  for(int j=0; j<i; j++){\n    if(arr[j]%2!=0){\n\
    \      product *= arr[j];\n    }\n  }\n  return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp84j_h1_p: /tmp/tmp84j_h1_p.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n) {\n    if (n % 2) {\n\
    \      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpwfqn9h_s: /tmp/tmpwfqn9h_s.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long sum = 1;\n    while(n != 0){\n        int digit\
    \ = n % 10;\n        if(digit % 2 != 0){\n            sum *= digit;\n        }\n\
    \        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp9bdwrplz: /tmp/tmp9bdwrplz.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int pro = 1;\n    while(n > 0) {\n        int rem =\
    \ n % 10;\n        if(rem % 2 != 0) {\n            pro *= rem;\n        }\n  \
    \      n /= 10;\n    }\n    return pro;\n}\nint main() {\n    auto candidate =\
    \ digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n\
    \    assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n\
    \    assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) ==\
    \ (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpbk7f6_xm: /tmp/tmpbk7f6_xm.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n) {\n    int i = n % 10;\n\
    \    if (i % 2 != 0) {\n      product *= i;\n    }\n    n /= 10;\n  }\n  return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpx5t1k8bn: /tmp/tmpx5t1k8bn.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while(n) {\n        if(n%2) ans\
    \ *= n%10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpn3punw17: /tmp/tmpn3punw17.cpp:25: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n != 0) {\n        long\
    \ last_digit = n % 10;\n        if(last_digit % 2 != 0)\n            product *=\
    \ last_digit;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpm9eul3r1: /tmp/tmpm9eul3r1.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong *digit = new long[5];\n\tfor (int i = 0; i < 5;\
    \ i++) {\n\t\tdigit[i] = 0;\n\t}\n\tlong i = 0;\n\twhile (n != 0) {\n\t\tdigit[i]\
    \ = n % 10;\n\t\tn = n / 10;\n\t\ti++;\n\t}\n\tlong result = 1;\n\tfor (int j\
    \ = 0; j < 5; j++) {\n\t\tif (digit[j] % 2 != 0) {\n\t\t\tresult = result * digit[j];\n\
    \t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmph4tkaz4n: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top
    (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse
    (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // convert n to string to \n    std::string num = std::to_string(n);\n\
    \    long sum = 1;\n    for(int i = 0; i < num.length(); i++){\n        // check\
    \ if current digit of number is odd\n        if(num[i] % 2 != 0){\n          \
    \  // multiply it to sum\n            sum *= num[i] - '0';\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpgs3bt0sf: /tmp/tmpgs3bt0sf.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // Your code goes here.\n  std::string str = std::to_string(n);\n\
    \  int prod = 1;\n  for(int i = 0; i < str.length(); i++){\n    if( (str[i] -\
    \ '0') % 2 == 1) prod *= (str[i] - '0');\n  }\n  return prod;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp1c0r_02g: /tmp/tmp1c0r_02g.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    long lastDigit\
    \ = n % 10;\n    if (lastDigit % 2 == 1) prod *= lastDigit;\n    n /= 10;\n  }\n\
    \  return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpor8okpri: /tmp/tmpor8okpri.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n) {\n    if (n % 2 == 1) {\n\
    \      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp1u4x6dvr: /tmp/tmp1u4x6dvr.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 == 1)\n      product *= digit;\n    n /= 10;\n  }\n\
    \  return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmppuecjdkf: /tmp/tmppuecjdkf.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n>0) {\n    int digit = n%10;\n\
    \    if (digit%2 == 1) {\n      product *= digit;\n    }\n    n /= 10;\n  }\n\
    \  return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpws7vvnpa: /tmp/tmpws7vvnpa.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n) {\n    if (n % 2 != 0)\
    \ {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpy8g19f9s: /tmp/tmpy8g19f9s.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n < 10) {\n    return n % 2 == 1 ? n : 0;\n  } else\
    \ {\n    int digit = n % 10;\n    if (digit % 2 == 1) {\n      return digit *\
    \ digits(n / 10);\n    } else {\n      return digits(n / 10);\n    }\n  }\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ans = 1;\n  while(n) {\n    if(n%2) ans *= n%10;\n\
    \    n /= 10;\n  }\n  return ans;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmptdmb6bmh: /tmp/tmptdmb6bmh.cpp:25: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long sum = 1;\n    while(n > 0) {\n        if(n % 2\
    \ == 1) {\n            sum *= n % 10;\n        }\n        n /= 10;\n    }\n  \
    \  return sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp2tz1_xsi: /tmp/tmp2tz1_xsi.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long i,j,k;\n    j=0;\n    k=1;\n    while(n>0)\n \
    \   {\n        i=n%10;\n        if(i%2!=0)\n        {\n            j++;\n    \
    \        k=k*i;\n        }\n        n=n/10;\n    }\n    if(j==0)\n    {\n    \
    \    return 0;\n    }\n    else\n    {\n        return k;\n    }\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result=1;\n    while(n)\n    {\n        int x=n%10;\n\
    \        if(x%2==1)\n        {\n            result=result*x;\n        }\n    \
    \    n=n/10;\n    }\n    return result;\n}\nint main() {\n    auto candidate =\
    \ digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n\
    \    assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n\
    \    assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) ==\
    \ (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpk1jijyje: /tmp/tmpk1jijyje.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // your code here\n  int prod = 1;\n  if(n == 0) return\
    \ 0;\n  while(n){\n    if(n%2){\n      prod*=(n%10);\n    }\n    n/=10;\n  }\n\
    \  return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmprf6w41b9: /tmp/tmprf6w41b9.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong result = 1;\n\twhile (n > 0) {\n\t\tif (n % 2 ==\
    \ 1)\n\t\t\tresult *= n % 10;\n\t\tn /= 10;\n\t}\n\treturn result;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp1zlz1ef6: /tmp/tmp1zlz1ef6.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long counter = 1;\n    while(n) {\n        if(n % 2\
    \ != 0)\n            counter *= n % 10;\n        n /= 10;\n    }\n    return counter;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp3rgojn7d: /tmp/tmp3rgojn7d.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while(n) {\n        if(n%2)\n  \
    \          ans *= n%10;\n        n /= 10;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpl01hw2w2: /tmp/tmpl01hw2w2.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int sum = 1;\n  while(n > 0){\n    if((n % 10) % 2 ==\
    \ 1){\n      sum *= (n % 10);\n    }\n    n /= 10;\n  }\n  return sum;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpg1qvv9uf: /tmp/tmpg1qvv9uf.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int rem = 0;\n  int prod = 1;\n  while(n != 0) {\n  \
    \  rem = n % 10;\n    if(rem % 2 != 0)\n      prod *= rem;\n    n /= 10;\n  }\n\
    \  return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpf9tv6p01: /tmp/tmpf9tv6p01.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if(n==0) return 0;\n    long result = 1;\n    while(n!=0){\n\
    \        long current = n%10;\n        if(current%2==1) result*=current;\n   \
    \     n/=10;\n    }\n    return result;\n}\nint main() {\n    auto candidate =\
    \ digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n\
    \    assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n\
    \    assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) ==\
    \ (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpviuxw6fp: /tmp/tmpviuxw6fp.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tstd::vector<int> vec;\n\twhile (n) {\n\t\tint x = n %\
    \ 10;\n\t\tif (x % 2 == 1) {\n\t\t\tvec.push_back(x);\n\t\t}\n\t\tn /= 10;\n\t\
    }\n\tlong prod = 1;\n\tfor (auto i : vec) {\n\t\tprod *= i;\n\t}\n\treturn prod;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpi3v751_p: /tmp/tmpi3v751_p.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long total = 1;\n  while (n != 0) {\n    if (n % 2 !=\
    \ 0) {\n      total *= n % 10;\n    }\n    n /= 10;\n  }\n  return total;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpkay5478k: /tmp/tmpkay5478k.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    return std::accumulate(std::to_string(n).begin(), std::to_string(n).end(),\
    \ 1,\n     [](long m, char c) { return m * ((c - '0') % 2 ? c - '0' : 1);});\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpsi1whya_: /tmp/tmpsi1whya_.cpp:15: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  long curr = n;\n  while (curr >\
    \ 0) {\n    if (curr % 2 == 1)\n      product *= curr % 10;\n    curr /= 10;\n\
    \  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmplj1fp30n: /tmp/tmplj1fp30n.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long x=0;\n    long d=1;\n    while(n){\n        if((n%10)%2)\n\
    \            x+=d*(n%10);\n        d*=10;\n        n/=10;\n    }\n    return x;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp4rw0cgjx: /tmp/tmp4rw0cgjx.cpp:23: int main(): Assertion `candidate((54))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int product = 1;\n    while(n != 0) {\n        int\
    \ digit = n % 10;\n        if(digit % 2 != 0)\n            product *= digit;\n\
    \        n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp6xw284gy: /tmp/tmp6xw284gy.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long res = 1;\n  while (n > 0) {\n    if (n % 2 != 0)\n\
    \      res *= n % 10;\n    n /= 10;\n  }\n  return res;\n}\nint main() {\n   \
    \ auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp54ebalko: /tmp/tmp54ebalko.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    int last =\
    \ n % 10;\n    if (last % 2 == 1) {\n      product *= last;\n    }\n    n /= 10;\n\
    \  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpt_mmwg6u: /tmp/tmpt_mmwg6u.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong prod = 1;\n\twhile (n != 0) {\n\t\tif (n % 2 !=\
    \ 0) {\n\t\t\tprod *= n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn prod;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpl_ttfyvl: /tmp/tmpl_ttfyvl.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int p=1;\n  while(n){\n    if(n%2){\n      p*=(n%10);\n\
    \    }\n    n/=10;\n  }\n  return p;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjq7bhk63: /tmp/tmpjq7bhk63.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long sum = 1;\n    while(n != 0){\n        int rem\
    \ = n % 10;\n        if(rem % 2 != 0){\n            sum *= rem;\n        }\n \
    \       n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmps3mq06q5: /tmp/tmps3mq06q5.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n < 10) {\n    return n % 2 == 1 ? n : 0;\n  }\n\
    \  long result = 0;\n  while (n > 0) {\n    long digit = n % 10;\n    if (digit\
    \ % 2 == 1) {\n      result += digit;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp8tnn3qra: /tmp/tmp8tnn3qra.cpp:28: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product=1;\n    while(n!=0){\n        long temp=n%10;\n\
    \        if(temp%2!=0){\n            product=product*temp;\n        }\n      \
    \  n=n/10;\n    }\n    return product;\n}\nint main() {\n    auto candidate =\
    \ digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n\
    \    assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n\
    \    assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) ==\
    \ (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp4b3jz26w: /tmp/tmp4b3jz26w.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ans = 1;\n  while(n>0){\n    int digit = n%10;\n\
    \    if(digit%2!=0){\n      ans *= digit;\n    }\n    n/=10;\n  }\n  return ans;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpsjc_bb9u: /tmp/tmpsjc_bb9u.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long num = 0;\n  while (n != 0) {\n    if (n % 2 != 0)\
    \ {\n      num = num * 10 + n % 10;\n    }\n    n /= 10;\n  }\n  return num;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpe8pqmi92: /tmp/tmpe8pqmi92.cpp:24: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 1;\n    while (n != 0) {\n        long\
    \ lastDigit = n % 10;\n        if (lastDigit % 2 != 0) {\n            result *=\
    \ lastDigit;\n        }\n        n /= 10;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpbdygv43f: /tmp/tmpbdygv43f.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n>0){\n        int r =\
    \ n%10;\n        if(r%2!=0){\n            product *= r;\n        }\n        n/=10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpvrjrb0i2: /tmp/tmpvrjrb0i2.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  int length = std::log10(n);\n  for\
    \ (long i = length; i >= 0; i--) {\n    long rem = n % 10;\n    if (rem % 2 !=\
    \ 0) {\n      result *= rem;\n    }\n    n /= 10;\n  }\n  return result;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpu3ha3r0n: /tmp/tmpu3ha3r0n.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 1;\n    while (n != 0) {\n        long\
    \ digit = n % 10;\n        if (digit % 2 != 0) {\n            result *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return result;\n}\nint main() {\n   \
    \ auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp1q8zwj16: /tmp/tmp1q8zwj16.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int ans = 1;\n  while(n){\n    int num = n%10;\n    if(num%2\
    \ != 0)\n      ans *= num;\n    n /= 10;\n  }\n  return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp5998caup: /tmp/tmp5998caup.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  std::string str=std::to_string(n);\n  long sum=1;\n \
    \ for(auto it:str){\n    if(it%2!=0){\n      sum*=it-'0';\n    }\n  }\n  return\
    \ sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpy7cjxa04: /tmp/tmpy7cjxa04.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    while(n>0){\n        if(n%2!=0){\n\
    \            prod *= n%10;\n        }\n        n/=10;\n    }\n    return prod;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpkurzw_vu: /tmp/tmpkurzw_vu.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  std::string s = std::to_string(n);\n  long num = 1;\n\
    \  for (char c : s) {\n    if (c%2) {\n      num *= (c-'0');\n    }\n  }\n  return\
    \ num;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp9feo0t2d: /tmp/tmp9feo0t2d.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n   long sum=1;\n   while(n>0)\n   {\n       int r=n%10;\n\
    \       if(r%2!=0)\n       {\n           sum=sum*r;\n       }\n       n=n/10;\n\
    \   }\n   return sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmplxkne48p: /tmp/tmplxkne48p.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int sum = 1;\n  while(n > 0){\n    int digit = n % 10;\n\
    \    if(digit % 2 != 0){\n      sum *= digit;\n    }\n    n /= 10;\n  }\n  return\
    \ sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpga9t5xsu: /tmp/tmpga9t5xsu.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n < 0) return 0;\n  long res = 1;\n  while (n > 0)\
    \ {\n    long m = n % 10;\n    if (m & 1) res *= m;\n    n /= 10;\n  }\n  return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpwxzt_s5x: /tmp/tmpwxzt_s5x.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  for (; n; n /= 10) {\n    int digit\
    \ = n % 10;\n    if (digit % 2 == 1) {\n      result *= digit;\n    }\n  }\n \
    \ return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpxaj2aodz: /tmp/tmpxaj2aodz.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long sum = 1;\n    while(n){\n        if(n%2){\n  \
    \          sum *= n%10;\n        }\n        n /= 10;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp96o4q3q9: /tmp/tmp96o4q3q9.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int sum = 1;\n  while(n>0){\n    if(n%2 == 1){\n    \
    \  sum *= n%10;\n    }\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpxdnw1nm3: /tmp/tmpxdnw1nm3.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ret = 1;\n  while (n > 0) {\n    if (n % 2 != 0)\n\
    \      ret *= n % 10;\n    n /= 10;\n  }\n  return ret;\n}\nint main() {\n   \
    \ auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp541cckjd: /tmp/tmp541cckjd.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        int digit\
    \ = n % 10;\n        if (digit % 2 != 0) {\n            ret *= digit;\n      \
    \  }\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp_pkg6780: /tmp/tmp_pkg6780.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product=1;\n    while(n>0){\n        int digit=n%10;\n\
    \        if(digit%2!=0){\n            product*=digit;\n        }\n        n/=10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpkl76oc4t: /tmp/tmpkl76oc4t.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n == 0) return 0;\n  return digits(n / 10) + (n %\
    \ 2) * (n % 10);\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpqeejb8u1: /tmp/tmpqeejb8u1.cpp:18: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long arr[10] = {0};\n  int counter = 0;\n  int product\
    \ = 1;\n  while(n != 0){\n    arr[counter] = n % 10;\n    counter++;\n    n =\
    \ n / 10;\n  }\n  for(int i = 0; i < counter; i++){\n    if(arr[i] % 2 != 0){\n\
    \      product = product * arr[i];\n    }\n  }\n  return product;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp2h9o4iox: /tmp/tmp2h9o4iox.cpp:33: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    int digit =\
    \ n % 10;\n    if (digit % 2 != 0) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjjbr5qx2: /tmp/tmpjjbr5qx2.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long p=1;\n    while(n>0)\n    {\n        int a=n%10;\n\
    \        if(a%2!=0)\n        {\n            p=p*a;\n        }\n        n=n/10;\n\
    \    }\n    return p;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpj274jcbj: /tmp/tmpj274jcbj.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  std::string s=std::to_string(n);\n  long num=1;\n  for(int\
    \ i=0;i<s.length();i++){\n    if(s[i]%2!=0){\n      num=num*(s[i]-'0');\n    }\n\
    \  }\n  return num;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpbxg61a_z: /tmp/tmpbxg61a_z.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    long digit = n\
    \ % 10;\n    if (digit % 2 == 1) prod *= digit;\n    n /= 10;\n  }\n  return prod;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmporrr9eoq: /tmp/tmporrr9eoq.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product=1;\n  while(n>0){\n    long digit=n%10;\n\
    \    if(digit%2!=0){\n      product*=digit;\n    }\n    n/=10;\n  }\n  return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpqxetj58l: /tmp/tmpqxetj58l.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long odd=1;\n  while(n>0){\n    if(n%2)\n      odd*=(n%10);\n\
    \    n/=10;\n  }\n  return odd;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp5jpxqdf9: /tmp/tmp5jpxqdf9.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int digit;\n    long product=1;\n    while(n>0){\n\
    \        digit=n%10;\n        if(digit%2!=0){\n            product=product*digit;\n\
    \        }\n        n=n/10;\n    }\n    return product;\n}\nint main() {\n   \
    \ auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp49f4gvyt: /tmp/tmp49f4gvyt.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n>0){\n        if(n%2\
    \ == 1){\n            product *= n%10;\n        }\n        n /= 10;\n    }\n \
    \   return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpox7vria7: /tmp/tmpox7vria7.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long output = 1;\n    while (n>0) {\n        if (n%2\
    \ != 0) {\n            output *= n%10;\n        }\n        n /= 10;\n    }\n \
    \   return output;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpd0d6wfpm: /tmp/tmpd0d6wfpm.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n != 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpnliz_bal: /tmp/tmpnliz_bal.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if(n == 0) return 0;\n    long prod = 1;\n    while(n\
    \ != 0) {\n        long last_digit = n % 10;\n        if(last_digit % 2 != 0)\
    \ prod *= last_digit;\n        n /= 10;\n    }\n    return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp77ux8kon: /tmp/tmp77ux8kon.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long number = 0;\n  long digit;\n  while (n) {\n    digit\
    \ = n % 10;\n    n /= 10;\n    if (digit % 2 == 1) {\n      number = number *\
    \ 10 + digit;\n    }\n  }\n  long product = 1;\n  while (number) {\n    digit\
    \ = number % 10;\n    number /= 10;\n    product *= digit;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp_4zyyiwa: /tmp/tmp_4zyyiwa.cpp:35: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n == 0) { return 0; }\n  int prod = 1;\n  while (n\
    \ != 0) {\n    int d = n % 10;\n    if (d % 2 != 0) {\n      prod *= d;\n    }\n\
    \    n /= 10;\n  }\n  return prod;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmppy58axcz: /tmp/tmppy58axcz.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int result = 1;\n  for (int i = 0; i < to_string(n).length();\
    \ i++) {\n    int digit = n % 10;\n    if (digit % 2 == 1) {\n      result *=\
    \ digit;\n    }\n    n /= 10;\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq9zrs703.cpp: In function \u2018long int digits(long int)\u2019\
    :\n/tmp/tmpq9zrs703.cpp:11:23: error: \u2018to_string\u2019 was not declared in\
    \ this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n   11 |   for\
    \ (int i = 0; i < to_string(n).length(); i++) {\n      |                     \
    \  ^~~~~~~~~\n      |                       std::__cxx11::to_string\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpq9zrs703.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3: note:\
    \ \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long d = n %\
    \ 10;\n    if (d % 2 == 1) {\n      result *= d;\n    }\n    n /= 10;\n  }\n \
    \ return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpwiyc35yo: /tmp/tmpwiyc35yo.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ans = 1;\n  while(n != 0){\n    int r = n % 10;\n\
    \    if(r % 2 != 0){\n      ans *= r;\n    }\n    n /= 10;\n  }\n  return ans;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp4hvec8_q: /tmp/tmp4hvec8_q.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int odd = 1;\n  while (n != 0) {\n    int digit = n %\
    \ 10;\n    if (digit % 2 != 0) {\n      odd *= digit;\n    }\n    n /= 10;\n \
    \ }\n  return odd;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpx7u0pl1z: /tmp/tmpx7u0pl1z.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long total = 1;\n  while (n != 0) {\n    if (n % 2 !=\
    \ 0) {\n      total *= n % 10;\n    }\n    n /= 10;\n  }\n  return total;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpkay5478k: /tmp/tmpkay5478k.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long d=0;\n  long i=1;\n  while(n>0){\n    if((n%10)%2!=0){\n\
    \      d+=(n%10)*i;\n      i*=10;\n    }\n    n/=10;\n  }\n  return d;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpfqbn9rpx: /tmp/tmpfqbn9rpx.cpp:26: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // put your code here\n  std::vector<int> result;\n \
    \ int flag = 0;\n  while(n>0){\n      int pop = n%10;\n      if(pop%2 == 0){\n\
    \          flag = 1;\n      }\n      else{\n          result.push_back(pop);\n\
    \      }\n      n /= 10;\n  }\n  if(flag == 1){\n      return 0;\n  }\n  else{\n\
    \      int x = 1;\n      for(int i=0;i<result.size();i++){\n          x *= result[i];\n\
    \      }\n      return x;\n  }\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpre4ju6gz: /tmp/tmpre4ju6gz.cpp:37: int main(): Assertion `candidate((54))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n) {\n    if (n % 2 != 0)\
    \ {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpy8g19f9s: /tmp/tmpy8g19f9s.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product=1;\n    while(n>0){\n        long a=n%10;\n\
    \        if(a%2!=0){\n            product*=a;\n        }\n        n/=10;\n   \
    \ }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp28_1vl6w: /tmp/tmp28_1vl6w.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long sum = 1;\n  while (n) {\n    if (n % 2) {\n    \
    \  sum *= n % 10;\n    }\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp8wbo9qhv: /tmp/tmp8wbo9qhv.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int prod = 1;\n    int rem;\n    int n1 = n;\n    while(n1\
    \ > 0) {\n        rem = n1 % 10;\n        if(rem % 2 != 0)\n            prod *=\
    \ rem;\n        n1 /= 10;\n    }\n    return prod;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjfecqy2f: /tmp/tmpjfecqy2f.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    stringstream ss;\n    string str;\n    long ans=1;\n\
    \    ss<<n;\n    ss>>str;\n    for(int i=0;i<str.length();i++){\n        if(str[i]%2==1){\n\
    \            ans*=(str[i]-'0');\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnrewe3kl.cpp: In function \u2018long int digits(long int)\u2019\
    :\n/tmp/tmpnrewe3kl.cpp:10:5: error: \u2018stringstream\u2019 was not declared\
    \ in this scope; did you mean \u2018std::stringstream\u2019?\n   10 |     stringstream\
    \ ss;\n      |     ^~~~~~~~~~~~\n      |     std::stringstream\nIn file included\
    \ from /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpnrewe3kl.cpp:2:\n/usr/include/c++/9/iosfwd:156:37: note: \u2018std::stringstream\u2019\
    \ declared here\n  156 |   typedef basic_stringstream<char>  stringstream;\n \
    \     |                                     ^~~~~~~~~~~~\n/tmp/tmpnrewe3kl.cpp:11:5:\
    \ error: \u2018string\u2019 was not declared in this scope\n   11 |     string\
    \ str;\n      |     ^~~~~~\n/tmp/tmpnrewe3kl.cpp:11:5: note: suggested alternatives:\n\
    In file included from /usr/include/c++/9/iosfwd:39,\n                 from /usr/include/c++/9/ios:38,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnrewe3kl.cpp:2:\n/usr/include/c++/9/bits/stringfwd.h:79:33:\
    \ note:   \u2018std::string\u2019\n   79 |   typedef basic_string<char>    string;\n\
    \      |                                 ^~~~~~\nIn file included from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/in"
  stdout: ''
  timestamp: 1660122893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product=1;\n    while(n>0){\n        long rem=n%10;\n\
    \        if(rem%2==1){\n            product=product*rem;\n        }\n        n=n/10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp2_wlzfqk: /tmp/tmp2_wlzfqk.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n>0){\n        long digit\
    \ = n%10;\n        if(digit%2 == 1){\n            product *= digit;\n        }\n\
    \        n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpw_jv8stn: /tmp/tmpw_jv8stn.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    long last = n\
    \ % 10;\n    if (last % 2 == 1) {\n      prod *= last;\n    }\n    n /= 10;\n\
    \  }\n  return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpsvbhqhrv: /tmp/tmpsvbhqhrv.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long long oddproduct = 1;\n    long long temp;\n  \
    \  while(n > 0)\n    {\n        temp = n % 10;\n        if(temp % 2 != 0)\n  \
    \      {\n            oddproduct *= temp;\n        }\n        n /= 10;\n    }\n\
    \    return oddproduct;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpv3wyzo52: /tmp/tmpv3wyzo52.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long sum = 1;\n    while(n > 0) {\n        int digit\
    \ = n % 10;\n        if(digit % 2 != 0) {\n            sum *= digit;\n       \
    \ }\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpiczuts2j: /tmp/tmpiczuts2j.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  std::vector<int> v;\n  long ans = 1;\n  while(n>0){\n\
    \    v.push_back(n%10);\n    n/=10;\n  }\n  for(int i=0;i<v.size();i++){\n   \
    \ if(v[i]%2!=0){\n      ans*=v[i];\n    }\n  }\n  return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpr22ndm_4: /tmp/tmpr22ndm_4.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 1;\n    // Check if number is negative,\
    \ if it is make it positive.\n    if (n < 0) {\n        n = -n;\n    }\n    //\
    \ Make sure the number is positive.\n    assert(n >= 0);\n    // Begin looping\
    \ through the digits.\n    for (; n > 0; n /= 10) {\n        // Get the least\
    \ significant digit.\n        long lsd = n % 10;\n        // Check if the least\
    \ significant digit is odd.\n        if (lsd % 2 == 1) {\n            // If the\
    \ least significant digit is odd,\n            // multiply it by the result.\n\
    \            result *= lsd;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp3hm4fhk2: /tmp/tmp3hm4fhk2.cpp:38: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // Your code here!\n    long a=1;\n    while(n!=0)\n\
    \    {\n        if(n%2!=0)\n        {\n            a*=(n%10);\n        }\n   \
    \     n/=10;\n    }\n    return a;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmphi3pu6xv: /tmp/tmphi3pu6xv.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tstd::vector<int> v;\n\tint result=1;\n\twhile(n>0){\n\
    \t\tv.push_back(n%10);\n\t\tn=n/10;\n\t}\n\tfor(auto el:v){\n\t\tif(el%2!=0){\n\
    \t\t\tresult*=el;\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpwilz8vfq: /tmp/tmpwilz8vfq.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n != 0) {\n    if (n % 2 ==\
    \ 1) {\n      prod *= n % 10;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpps3zekv3: /tmp/tmpps3zekv3.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long long int prod = 1;\n    long long int count =\
    \ 0;\n    int remainder = 0;\n    long long int temp = n;\n    int num = 0;\n\
    \    while(temp != 0)\n    {\n        remainder = temp % 10;\n        if(remainder\
    \ % 2 != 0)\n        {\n            count++;\n            prod = prod * remainder;\n\
    \        }\n        temp = temp / 10;\n    }\n    if(count == 0)\n    {\n    \
    \    return 0;\n    }\n    else\n    {\n        return prod;\n    }\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    while(n > 0) {\n        if (n %\
    \ 2 == 1) {\n            prod *= n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp4dzhhyw_: /tmp/tmp4dzhhyw_.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong sum = 1;\n\twhile (n > 0) {\n\t\tlong rem = n %\
    \ 10;\n\t\tif (rem % 2 != 0)\n\t\t\tsum *= rem;\n\t\tn /= 10;\n\t}\n\treturn sum;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpct3vq09i: /tmp/tmpct3vq09i.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122895
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long prod = 1;\n  while (n > 0) {\n    long dig = n %\
    \ 10;\n    if (dig % 2 != 0) prod *= dig;\n    n /= 10;\n  }\n  return prod;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp8ftk5wp1: /tmp/tmp8ftk5wp1.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // your code here\n    long prod = 1;\n    while(n>0){\n\
    \      int rem = n%10;\n      if(rem%2!=0){\n        prod = prod*rem;\n      }\n\
    \      n=n/10;\n    }\n    return prod;\n  }\n\n// alternative solution:\n// \
    \  return n\n//     ? digits(n / 10) * n % 2 * (n % 10)\n//     : 0;\n// }\n\n\
    // Tests\nvoid test_cases() {\n  // long int r1 = digits(1);\n  // long int r2\
    \ = digits(4);\n  // long int r3 = digits(235);\n  // printf(\"%d\\n\", r1);\n\
    \  // printf(\"%d\\n\", r2);\n  // printf(\"%d\\n\", r3);\n  // printf(\"%d\\\
    n\", r1 == 1);\n  // printf(\"%d\\n\", r2 == 0);\n  // printf(\"%d\\n\", r3 ==\
    \ 15);\n  assert(digits(1) == 1);\n  assert(digits(4) == 0);\n  assert(digits(235)\
    \ == 15);\n  assert(digits(5) == 5);\n  assert(digits(195) == 15);\n  assert(digits(0)\
    \ == 0);\n  assert(digits(7) == 7);\n  assert(digits(18) == 0);\n  assert(digits(1888)\
    \ == 0);\n  assert(digits(18895) == 45);\n  assert(digits(18881895) == 45);\n\
    \  assert(digits(188818952) == 0);\n  assert(digits(18881895223) == 45);\n  assert(digits(188818952234)\
    \ == 0);\n  assert(digits(1888189522345) == 225);\n  assert(digits(188818952234566)\
    \ == 0);\n  assert(digits(1888189522345667) == 87);\n  assert(digits(18881895223456678)\
    \ == 0);\n  assert(digits(1888189522345\n}\nint main() {\n    auto candidate =\
    \ digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n\
    \    assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n\
    \    assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) ==\
    \ (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpff64onu1.cpp:68: error: unterminated argument list invoking macro\
    \ \"assert\"\n   68 | }\n      | \n/tmp/tmpff64onu1.cpp: In function \u2018void\
    \ test_cases()\u2019:\n/tmp/tmpff64onu1.cpp:57:3: error: \u2018assert\u2019 was\
    \ not declared in this scope\n   57 |   assert(digits(1888189522345\n      | \
    \  ^~~~~~\n/tmp/tmpff64onu1.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // Given\
    \ a positive integer n, return the product of the odd digits.\n/tmp/tmpff64onu1.cpp:57:3:\
    \ error: expected \u2018}\u2019 at end of input\n   57 |   assert(digits(1888189522345\n\
    \      |   ^~~~~~\n/tmp/tmpff64onu1.cpp:29:19: note: to match this \u2018{\u2019\
    \n   29 | void test_cases() {\n      |                   ^\n"
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long lastDigit\
    \ = n % 10;\n    if (lastDigit % 2 != 0) {\n      result *= lastDigit;\n    }\n\
    \    n /= 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpbkvdd6vt: /tmp/tmpbkvdd6vt.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122895
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    while(n != 0) {\n        long digit\
    \ = n % 10;\n        if(digit % 2 != 0) {\n            prod *= digit;\n      \
    \  }\n        n /= 10;\n    }\n    return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp18b2yizk: /tmp/tmp18b2yizk.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122895
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    while(n > 0) {\n        if(n %\
    \ 2 != 0) {\n            prod *= n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpmclgiygw: /tmp/tmpmclgiygw.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  int digit = 0;\n  while (n != 0)\
    \ {\n    digit = n % 10;\n    if (digit % 2 != 0) {\n      product *= digit;\n\
    \    }\n    n /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpk_64csg7: /tmp/tmpk_64csg7.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122895
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  return std::accumulate(std::to_string(n).begin(), std::to_string(n).end(),\
    \ 1, [](long a, char b) { return a * (b % 2 ? b - '0' : 1); });\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpqy1xnmis: /tmp/tmpqy1xnmis.cpp:14: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ans = 1;\n  while(n){\n    if(n%2) ans *= n%10;\n\
    \    n /= 10;\n  }\n  return ans;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpxg9i8mqs: /tmp/tmpxg9i8mqs.cpp:25: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n==0) return 0;\n  int lastDigit = n%10;\n  if (lastDigit%2==0)\
    \ {\n    return digits(n/10);\n  } else {\n    return lastDigit*digits(n/10);\n\
    \  }\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpzu8finx5: /tmp/tmpzu8finx5.cpp:20: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122895
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // your code here\n  long prod = 1;\n  while(n > 0)\n\
    \  {\n    if(n % 2 != 0)\n    {\n      prod *= n % 10;\n    }\n    n /= 10;\n\
    \  }\n  return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpggv9oqqk: /tmp/tmpggv9oqqk.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122895
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if(n == 0) {\n        return 0;\n    }\n    int last_digit\
    \ = n % 10;\n    int rest_of_the_digits = digits(n / 10);\n    if(last_digit %\
    \ 2 == 0) {\n        return rest_of_the_digits;\n    }\n    else {\n        return\
    \ rest_of_the_digits * last_digit;\n    }\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpqp2zaagm: /tmp/tmpqp2zaagm.cpp:24: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122895
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    long temp_number = n;\n    while(temp_number\
    \ != 0) {\n        long last_digit = temp_number % 10;\n        if(last_digit\
    \ % 2 != 0) {\n            product *= last_digit;\n        }\n        temp_number\
    \ /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpge3kwwj_: /tmp/tmpge3kwwj_.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122895
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int prod = 1;\n  if(n == 0)\n    return 0;\n  while(n)\
    \ {\n    if(n%2 != 0)\n      prod *= n%10;\n    n /= 10;\n  }\n  return prod;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpf6wzw9eg: /tmp/tmpf6wzw9eg.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122895
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long mul=1;\n  while(n>0)\n  {\n    if(n%2==1)\n    {\n\
    \      mul*=(n%10);\n    }\n    n/=10;\n  }\n  return mul;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpsjui0xue: /tmp/tmpsjui0xue.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122895
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long temp = n;\n  std::stringstream ss;\n  ss << temp;\n\
    \  std::string s = ss.str();\n  long result = 1;\n  for (int i = 0; i < s.length();\
    \ i++) {\n    int digit = s[i] - '0';\n    if (digit % 2 != 0) {\n      result\
    \ *= digit;\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpup8xbndl: /tmp/tmpup8xbndl.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122895
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n < 0) {\n    n = n * -1;\n  }\n  long oddNum = 1;\n\
    \  while (n > 0) {\n    long lsd = n % 10;\n    if (lsd % 2 != 0) {\n      oddNum\
    \ = oddNum * lsd;\n    }\n    n = n / 10;\n  }\n  return oddNum;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp9mnna8_5: /tmp/tmp9mnna8_5.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122896
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long odd = 1;\n  while (n > 0) {\n    long x = n % 10;\n\
    \    if (x % 2 == 1) {\n      odd *= x;\n    }\n    n /= 10;\n  }\n  return odd;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpiq_sy69i: /tmp/tmpiq_sy69i.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122896
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int i = 0;\n  long sum = 0;\n  while (n > 0) {\n    int\
    \ c = n % 10;\n    if (c % 2 == 1) {\n      sum += c;\n    }\n    n /= 10;\n \
    \ }\n  return sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpfpbnxg_8: /tmp/tmpfpbnxg_8.cpp:26: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122896
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int product = 1;\n  while (n > 0) {\n    int x = n %\
    \ 10;\n    if (x % 2 != 0)\n      product *= x;\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpd9emm8et: /tmp/tmpd9emm8et.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // TODO\n    return 0;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp1zd70xgz: /tmp/tmp1zd70xgz.cpp:15: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\t// put your code here\n\t//\n  long product = 1;\n  //printf(\"\
    %d\\n\",product);\n  //printf(\"%d\\n\",n);\n  if(n == 0)\n    return 0;\n  while(n\
    \ != 0){\n    long curr = n%10;\n    //printf(\"%d\\n\",curr);\n    if(curr%2\
    \ != 0){\n      product *= curr;\n    }\n    n = n/10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpo09vcsrx: /tmp/tmpo09vcsrx.cpp:35: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  if (n == 0) {\n    return 0;\n  }\n\
    \  if (n < 0) {\n    n = n * -1;\n  }\n  while (n > 0) {\n    if (n % 2 != 0)\
    \ {\n      result = result * (n % 10);\n    }\n    n = n / 10;\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp78vxf_13: /tmp/tmp78vxf_13.cpp:33: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if(n==0)\n    return 0;\n  long prod=1;\n  while(n>0){\n\
    \    if(n%2!=0)\n      prod*=(n%10);\n    n/=10;\n  }\n  return prod;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpd11_jux0: /tmp/tmpd11_jux0.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long digit =\
    \ n % 10;\n    if (digit % 2 == 1) {\n      result *= digit;\n    }\n    n /=\
    \ 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjjh31o0i: /tmp/tmpjjh31o0i.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122825
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while(n>0){\n        long digit\
    \ = n%10;\n        if(digit%2 != 0){\n            product *= digit;\n        }\n\
    \        n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp6wrwbqds: /tmp/tmp6wrwbqds.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int sol = 1;\n  while(n>0){\n    int rem = n%10;\n  \
    \  if(rem%2!=0){\n      sol*=rem;\n    }\n    n/=10;\n  }\n  return sol;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpnoa4le8z: /tmp/tmpnoa4le8z.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong res = 1;\n\twhile (n > 0) {\n\t\tif (n % 2 != 0)\
    \ {\n\t\t\tres *= n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn res;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpopupzusn: /tmp/tmpopupzusn.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n != 0) {\n    int ld = n\
    \ % 10;\n    if (ld % 2 != 0) {\n      result *= ld;\n    }\n    n /= 10;\n  }\n\
    \  return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmprxedoshx: /tmp/tmprxedoshx.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long out = 1;\n  while (n != 0) {\n    int dig = n %\
    \ 10;\n    if (dig % 2 != 0) {\n      out *= dig;\n    }\n    n /= 10;\n  }\n\
    \  return out;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmphvng0poo: /tmp/tmphvng0poo.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n   long sum = 1;\n   for(int i = n; i > 0; i /= 10) {\n\
    \      int rem = i % 10;\n      if(rem % 2 == 1)\n        sum *= rem;\n   }\n\
    \   return sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp4i1i2y7z: /tmp/tmp4i1i2y7z.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // return n;\n  // Todo:\n  //assert(n > 0);\n  // your\
    \ code here\n  long prod = 1;\n  //prod = n%10;\n  while(n != 0){\n    if(n%2\
    \ != 0){\n      prod *= n%10;\n    }\n    n = n/10;\n  }\n  return prod;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpee6gfl57: /tmp/tmpee6gfl57.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tif (n == 0) return 0;\n\tlong r = 1;\n\tif (n < 0) n\
    \ = -n;\n\twhile (n > 0) {\n\t\tlong d = n % 10;\n\t\tif (d % 2 != 0) {\n\t\t\t\
    r *= d;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn r;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp2c3cm8qb: /tmp/tmp2c3cm8qb.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n) {\n    int lastDigit =\
    \ n % 10;\n    if (lastDigit % 2 != 0) {\n      result *= lastDigit;\n    }\n\
    \    n /= 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpe8542x3_: /tmp/tmpe8542x3_.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 !=\
    \ 0) {\n      product *= n % 10;\n    }\n    n /= 10;\n  }\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp7l2q43yj: /tmp/tmp7l2q43yj.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long s = 1;\n  while (n > 0) {\n    long i = n % 10;\n\
    \    if (i % 2 == 1) {\n      s *= i;\n    }\n    n /= 10;\n  }\n  return s;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpkd1i82ns: /tmp/tmpkd1i82ns.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    while(n > 0) {\n        long digit\
    \ = n % 10;\n        if(digit % 2 != 0) {\n            prod *= digit;\n      \
    \  }\n        n /= 10;\n    }\n    return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp9glnmij1: /tmp/tmp9glnmij1.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122825
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n > 0) {\n    long lastDigit\
    \ = n % 10;\n    if (lastDigit % 2 != 0) {\n      result *= lastDigit;\n    }\n\
    \    n /= 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpbkvdd6vt: /tmp/tmpbkvdd6vt.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122895
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long temp = 0;\n  while(n != 0){\n    long r = n % 10;\n\
    \    if(r % 2 != 0){\n      temp = temp * r;\n    }\n    n = n / 10;\n  }\n  return\
    \ temp;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpg_v20jri: /tmp/tmpg_v20jri.cpp:22: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int sum = 1;\n  while(n > 0){\n    if(n % 2 != 0){\n\
    \      sum *= n % 10;\n    }\n    n /= 10;\n  }\n  return sum;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpf5ldqhwx: /tmp/tmpf5ldqhwx.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong product = 1;\n\twhile (n) {\n\t\tlong digit = n\
    \ % 10;\n\t\tif (digit % 2 == 1) {\n\t\t\tproduct *= digit;\n\t\t}\n\t\tn /= 10;\n\
    \t}\n\treturn product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmppgoadnsg: /tmp/tmppgoadnsg.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int ans = 1;\n    while(n) {\n        if(n%2 == 1)\
    \ {\n            ans *= n%10;\n        }\n        n /= 10;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp4eqj5gfu: /tmp/tmp4eqj5gfu.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long num=1;\n  while(n!=0){\n    long digit=n%10;\n \
    \   if(digit%2!=0){\n      num*=digit;\n    }\n    n/=10;\n  }\n  return num;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp46exm7s_: /tmp/tmp46exm7s_.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if(n <= 0) return 0;\n  long r = 1;\n  while(n > 0) {\n\
    \    long d = n % 10;\n    if(d % 2 == 1) r *= d;\n    n /= 10;\n  }\n  return\
    \ r;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpm16b35yo: /tmp/tmpm16b35yo.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ans = 1;\n  for(;n > 0; n /= 10) {\n    if(n % 2\
    \ != 0) {\n      ans *= n % 10;\n    }\n  }\n  return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp5ktdv87n: /tmp/tmp5ktdv87n.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product=1;\n  for(int i=0;i<n;i++){\n    if(n%2==1){\n\
    \      product=product*n;\n    }\n  }\n  return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpz2pm_g13: /tmp/tmpz2pm_g13.cpp:20: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int result = 1;\n  while (n != 0) {\n    int dig = n\
    \ % 10;\n    if (dig % 2 != 0) {\n      result *= dig;\n    }\n    n /= 10;\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpwp86y44w: /tmp/tmpwp86y44w.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long sum = 1;\n  while (n > 0) {\n    long number = n\
    \ % 10;\n    if (number % 2 != 0)\n      sum *= number;\n    n /= 10;\n  }\n \
    \ return sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpgttuchde: /tmp/tmpgttuchde.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ret = 1;\n  while (n > 0) {\n    if (n % 2 != 0)\
    \ {\n      ret *= n % 10;\n    }\n    n /= 10;\n  }\n  return ret;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpkxcpljvs: /tmp/tmpkxcpljvs.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n==0) return 0;\n  else {\n    return pow(n%10,n%2)*digits(n/10);\n\
    \  }\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpnrfzdlsn: /tmp/tmpnrfzdlsn.cpp:17: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n == 0) return 0;\n  long res = 1;\n  while (n >\
    \ 0) {\n    long digit = n % 10;\n    if (digit % 2 != 0) res *= digit;\n    n\
    \ /= 10;\n  }\n  return res;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpkqpacmf5: /tmp/tmpkqpacmf5.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    if (n % 2 ==\
    \ 1)\n      product *= n % 10;\n    n /= 10;\n  }\n  return product;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpsh3s_hgd: /tmp/tmpsh3s_hgd.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tstd::string s = std::to_string(n);\n\tlong num=1;\n\t\
    for(char c:s){\n\t\tint x = c - '0';\n\t\tif(x%2==1) num*=x;\n\t}\n\treturn num;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpxvd16p7v: /tmp/tmpxvd16p7v.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tint answer = 1;\n\tstd::stringstream ss;\n\tss << n;\n\
    \tstd::string s = ss.str();\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif\
    \ (s[i] == '0' || s[i] == '2' || s[i] == '4' || s[i] == '6' || s[i] == '8') {\n\
    \t\t\tcontinue;\n\t\t}\n\t\tanswer *= s[i] - '0';\n\t}\n\treturn answer;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpwmk26oqc: /tmp/tmpwmk26oqc.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n != 0) {\n    if (n % 2 !=\
    \ 0) {\n      result *= n % 10;\n    }\n    n /= 10;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpnliz_bal: /tmp/tmpnliz_bal.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  for (; n > 0; n /= 10) {\n    if\
    \ (n % 2 == 1) {\n      result *= n % 10;\n    }\n  }\n  return result;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpz9t072pn: /tmp/tmpz9t072pn.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if(n==0) return 0;\n    int res = 1;\n    while(n)\
    \ {\n        if(n%2 != 0) res *= n%10;\n        n /= 10;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpknjuanh0: /tmp/tmpknjuanh0.cpp:26: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // Your code goes here\n  if(n==0) return 0;\n  long\
    \ ans = 1;\n  while(n>0){\n    if(n%2==1) ans *= n%10;\n    n/=10;\n  }\n  return\
    \ ans;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp_85b_ii3: /tmp/tmp_85b_ii3.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int product = 1;\n    while(n) {\n        if(n%2) {\n\
    \            product *= n%10;\n        }\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp16n7g67m: /tmp/tmp16n7g67m.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    std::vector<int> v;\n    int temp;\n    int sum = 0;\n\
    \    while(n > 0){\n        temp = n % 10;\n        v.push_back(temp);\n     \
    \   n = n / 10;\n    }\n    for(int i = 0; i < v.size(); i++){\n        if(v[i]\
    \ % 2 != 0){\n            sum = sum + v[i];\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpg83jk9t8: /tmp/tmpg83jk9t8.cpp:30: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 1;\n    while(n > 0) {\n        int r =\
    \ n % 10;\n        if(r & 1) {\n            res *= r;\n        }\n        n /=\
    \ 10;\n    }\n    return res;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpj5qxckfa: /tmp/tmpj5qxckfa.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ans = 1;\n  while(n) {\n    int digit = n % 10;\n\
    \    if(digit % 2 != 0)\n      ans *= digit;\n    n /= 10;\n  }\n  return ans;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpybj_n169: /tmp/tmpybj_n169.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122898
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 != 0) {\n            result *= n % 10;\n        }\n        n /= 10;\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpuu3nnn2d: /tmp/tmpuu3nnn2d.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong ans = 1;\n\twhile (n > 0) {\n\t\tif (n % 2 == 1)\
    \ {\n\t\t\tans *= n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn ans;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpq9ml49ji: /tmp/tmpq9ml49ji.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122897
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int n1=0;\n  while(n>0)\n  {\n    if(n%2!=0)\n    {\n\
    \      n1=n1*10+(n%10);\n    }\n    n=n/10;\n  }\n  int s=0;\n  while(n1>0)\n\
    \  {\n    s=s*10+(n1%10);\n    n1=n1/10;\n  }\n  return s;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpdy8h4cxf: /tmp/tmpdy8h4cxf.cpp:32: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122898
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong product = 1;\n\tint arr[10];\n\tint i = 0;\n\twhile\
    \ (n) {\n\t\tarr[i] = n % 10;\n\t\tn /= 10;\n\t\ti++;\n\t}\n\tint len = i;\n\t\
    int j = 0;\n\tfor (i = len - 1; i >= 0; i--) {\n\t\tif (arr[i] % 2 != 0) {\n\t\
    \t\tproduct *= arr[i];\n\t\t}\n\t}\n\treturn product;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp6l6twxp9: /tmp/tmp6l6twxp9.cpp:35: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122898
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long pro = 1;\n  while(n!=0){\n    if(n%2!=0){\n    \
    \  pro*=(n%10);\n    }\n    n/=10;\n  }\n  return pro;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpa074od4f: /tmp/tmpa074od4f.cpp:27: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122898
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long sum=1;\n    while(n!=0){\n        long x=n%10;\n\
    \        if(x%2!=0){\n            sum*=x;\n        }\n        n/=10;\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpboqk_0fa: /tmp/tmpboqk_0fa.cpp:28: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122898
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // std::cout << \"started\\n\";\n    // std::cout <<\
    \ n << '\\n';\n    if (n == 0) {\n        return 0;\n    } else {\n        //\
    \ std::cout << \"here\";\n        // std::cout << n << '\\n';\n        long x\
    \ = n % 10;\n        // std::cout << x << '\\n';\n        if (x % 2 == 0) {\n\
    \            // std::cout << \"here-0\";\n            return digits(n / 10);\n\
    \        } else {\n            // std::cout << \"here-1\";\n            return\
    \ x * digits(n / 10);\n        }\n    }\n}\nint main() {\n    auto candidate =\
    \ digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n\
    \    assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n\
    \    assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) ==\
    \ (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpkeedtv06: /tmp/tmpkeedtv06.cpp:30: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122898

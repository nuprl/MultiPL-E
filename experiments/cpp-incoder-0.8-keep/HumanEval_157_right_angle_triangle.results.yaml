language: cpp
name: HumanEval_157_right_angle_triangle
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a+b<=c || b-c<=a)\n        return false;\n    return\
    \ (((c>a?b:c) - a)==(b+c));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpucjdn8ca: /tmp/tmpucjdn8ca.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\t// Check if any of them is zero.\n\tif (a == 0 || b\
    \ == 0 || c == 0)\n\t\treturn false;\n\t// Check if all are equal\n\tif (a ==\
    \ b)\n\t\treturn c >= (a + b)/2;\n\tif (a == c || b == c)\n\t\treturn a >= b;\n\
    \treturn a >= b && b >= c;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp1v4skm0m: /tmp/tmp1v4skm0m.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a==b || b==c){\n        if(a==b){\n           \
    \ return (a==c);\n        }else{\n            return (b==c);\n        }\n    }else{\n\
    \        int det = a*b - b*c;\n        if(det >= 0){\n            int p = a/b;\n\
    \            int q = c/b;\n            return ((p*q > 0) && (q*(p-1) < 0));\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpxtrl0f6x: /tmp/tmpxtrl0f6x.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    int d, r, s;\n    d =\
    \ b - a; r = c -a; s = c + a; // d = abs(b-a), r = abs(c-a), s = abs(c+a)\n  \
    \  if( d>r && d>s)\n        return true;\n    else\n        return false;\n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmph4umb4hv: /tmp/tmph4umb4hv.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0) return false;\n  \
    \  long s = (a + b + c) / 2;\n    long t = sqrt((s * s) - ((a) * (a) + (b) * (b)\
    \ + (c) * (c))); // <-- HERE\n    if (t == 0) return false;\n    long u = ((a\
    \ + b) * (s + t)) + ((a + c) * (s - t)) + ((b + c) * (t - s));\n    return u ==\
    \ 0;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp_buhi4k1: /tmp/tmp_buhi4k1.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 && b == 0 && c == 0) return true;\n   \
    \ long ans = (a + b > c) ? a : b;\n    ans = (ans + c > ans) ? ans : c;\n    return\
    \ ((ans + b) > a);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpiyc1gx5v: /tmp/tmpiyc1gx5v.cpp:19: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here.\n    long ab = a*b;\n   \
    \ long ac = a*c;\n    long bc = b*c;\n    return (ab + ac > bc ) && (ab + bc >\
    \ ac);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmptjl6tfp2: /tmp/tmptjl6tfp2.cpp:22: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    assert(a > 0 && b > 0 && c > 0);\n    long d = b*b\
    \ - 4*a*c;\n    if (d == 0)\n        return false;\n    long b2 = b*b;\n    long\
    \ c2 = c*c;\n    long d1 = b2 + c2;\n    return ((d > 0 && d < b2) || (d > c2\
    \ && d < b2) || (d > 0 && d < c2));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpvqzuvfa4: /tmp/tmpvqzuvfa4.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // write your code\n    if((a>b) && (b>c))\n    {\n\
    \        if((a>b) && (a>c))\n        {\n            cout<<\"True\";\n        }\n\
    \        else\n        {\n            cout<<\"False\";\n        }\n    }\n   \
    \ else\n    {\n        if((c>b) && (c>a))\n        {\n            cout<<\"True\"\
    ;\n        }\n        else\n        {\n            cout<<\"False\";\n        }\n\
    \    }\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy56c9kdu.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpy56c9kdu.cpp:16:13: error: \u2018cout\u2019\
    \ was not declared in this scope; did you mean \u2018std::cout\u2019?\n   16 |\
    \             cout<<\"True\";\n      |             ^~~~\n      |             std::cout\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from /tmp/tmpy56c9kdu.cpp:2:\n/usr/include/c++/9/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmpy56c9kdu.cpp:20:13:\
    \ error: \u2018cout\u2019 was not declared in this scope; did you mean \u2018\
    std::cout\u2019?\n   20 |             cout<<\"False\";\n      |             ^~~~\n\
    \      |             std::cout\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from /tmp/tmpy56c9kdu.cpp:2:\n/usr/include/c++/9/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmpy56c9kdu.cpp:27:13:\
    \ error: \u2018cout\u2019 was not declared in this scope; did you mean \u2018\
    std::cout\u2019?\n   27 |             cout<<\"True\";\n      |             ^~~~\n\
    \      |             std::cout\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from /tmp/tmpy56c9kdu.cpp:2:\n/usr/include/c++/9/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmpy56c9kdu.cpp:31:13:\
    \ error: \u2018cout\u2019 was not declared in this scope; did you mean \u2018\
    std::cout\u2019?\n   31 |             cout<<\"False\";\n      |             ^~~~\n\
    \      |             std::cout\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from /tmp/tmpy56c9kdu.cpp:2:\n/usr/include/c++/9/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmpy56c9kdu.cpp:"
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if((b - a > c && c - b > a && a + b > c) || \n   \
    \    (c - b > a && a - c > b && a + b > c) ||\n       (a + b > c && c - b > a\
    \ && a - c > b)) {\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpadkzr28h: /tmp/tmpadkzr28h.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Check base case\n    if (a == 0 && b == 0 && c\
    \ == 0) return true;\n    // Check if the sum of any two sides is equal to zero\
    \ \n    if (a + b == c || a + c == b) \n        return a > b;\n    // If no sides\
    \ are the same sign then it is not an angle right angle\n    if (a > b == b >\
    \ c) return false;\n    // If all sides are same sign and opposite then the triangle\
    \ is not \n    // right angle\n    if (a > b == c > b) return false;\n    // If\
    \ only two sides are the same sign then it is right angle\n    return a == b ==\
    \ c;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp_4u3ajii: /tmp/tmp_4u3ajii.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (abs(a) > abs(b) + abs(c)) return false;\n    if\
    \ (abs(a) - abs(b) + abs(c) > 90) return false;\n    return ((a * b) - (a * c))\
    \ >= 0;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmph5wkq3w1: /tmp/tmph5wkq3w1.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  // Declare a double variable to store all the sides\
    \ of a triangle\n  // side a, b and c\n  double s = a + b + c;\n  long long a_in_b\
    \ = a / b;\n  long long b_in_s = b / s;\n  long long c_in_a = c / a;\n\n  // Check\
    \ if the sum of the sides is equal to the product of the sides\n  if (s == a *\
    \ b * c) {\n    return true;\n  }\n\n  // Check if the sum of two sides is equal\
    \ to the product of one side and the other \n  // \n  if (s == a_in_b * b_in_s\
    \ * c) {\n    return true;\n  }\n\n  // Check if the sum of two sides is equal\
    \ to the product of one side and the other \n  // \n  if (s == a_in_b * c_in_a\
    \ * b_in_s * c) {\n    return true;\n  }\n\n  return false;\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp3fe1io75: /tmp/tmp3fe1io75.cpp:39: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long d = b - c;\n    long g = (a * a + b * b - c *\
    \ c) / d;\n    long l = (a + b + c) / 2;\n    if (d > 0 && g == l - 1)\n     \
    \   return true;\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmph9lq3f0a: /tmp/tmph9lq3f0a.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    assert(b > a && c > b);\n    long s = a + b + c;\n\
    \    if (s <= 0) return false;\n    if (s % 2 == 0) return false;\n    return\
    \ a == 2 * b + c || a == b * c;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpxwsht_g9: /tmp/tmpxwsht_g9.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long side1 = (b+c+a)/2;\n\
    \    long side2 = (b-c+a)/2;\n    long side3 = (c-b+a)/2;\n    long sum = (side1+side2+side3)/2;\n\
    \    if (side1 == side2 || side1 == side3 || side2 == side3) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpm1ys16jd: /tmp/tmpm1ys16jd.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long d = b * b - 4 * a * c;\n    if (d < 0) return\
    \ false;\n    long x1;\n    long x2;\n    long y1;\n    long y2;\n    long y3;\n\
    \    if (d > 0) {\n        x1 = (-b + sqrt(d)) / (2 * a);\n        x2 = (-b -\
    \ sqrt(d)) / (2 * a);\n        y1 = b;\n        y2 = -b;\n        y3 = -b + sqrt(d)\
    \ * 2;\n    } else {\n        x1 = -b / (2 * a);\n        x2 = -b / (2 * a);\n\
    \        y1 = -b;\n        y2 = b;\n        y3 = b;\n    }\n    // check if the\
    \ triangles is in right angle\n    if (x1 != x2 && y1 != y2 && y1 != y3 && x1\
    \ != x3)\n        return false;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplo1mut7u.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmplo1mut7u.cpp:32:51: error: \u2018x3\u2019\
    \ was not declared in this scope; did you mean \u2018y3\u2019?\n   32 |     if\
    \ (x1 != x2 && y1 != y2 && y1 != y3 && x1 != x3)\n      |                    \
    \                               ^~\n      |                                  \
    \                 y3\n"
  stdout: ''
  timestamp: 1660100048
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a >= b && b >= c && c >= b) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp_rfdrkew: /tmp/tmp_rfdrkew.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  assert(a < 0 && b < 0 && c < 0);\n  long min_value =\
    \ min(a, b);\n  long max_value = max(a, b);\n  long sum_value = a + b + c;\n \
    \ long area = (long_double) a / (long_double) sum_value;\n  long right_triangle\
    \ = (area - (long_double) b / (long_double) c) < 0;\n  return right_triangle;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp87rpp_xx.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp87rpp_xx.cpp:12:20: error: \u2018min\u2019\
    \ was not declared in this scope; did you mean \u2018std::min\u2019?\n   12 |\
    \   long min_value = min(a, b);\n      |                    ^~~\n      |     \
    \               std::min\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp87rpp_xx.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3456:5:\
    \ note: \u2018std::min\u2019 declared here\n 3456 |     min(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n/tmp/tmp87rpp_xx.cpp:13:20: error: \u2018\
    max\u2019 was not declared in this scope; did you mean \u2018std::max\u2019?\n\
    \   13 |   long max_value = max(a, b);\n      |                    ^~~\n     \
    \ |                    std::max\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp87rpp_xx.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n/tmp/tmp87rpp_xx.cpp:15:16: error: \u2018\
    long_double\u2019 was not declared in this scope\n   15 |   long area = (long_double)\
    \ a / (long_double) sum_value;\n      |                ^~~~~~~~~~~\n/tmp/tmp87rpp_xx.cpp:16:46:\
    \ error: expected \u2018)\u2019 before \u2018b\u2019\n   16 |   long right_triangle\
    \ = (area - (long_double) b / (long_double) c) < 0;\n      |                 \
    \        ~                    ^~\n      |                                    \
    \          )\n"
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long square = abs(a*a+b*b+c*c);\n\
    \    if(a*a+b*b==square)\n        return true;\n    else if(a*a+c*c==square)\n\
    \        return true;\n    else if(a*a+b*b+c*c==square)\n        return true;\n\
    \    else\n        return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp1o5grtyz: /tmp/tmp1o5grtyz.cpp:25: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a + b < c || b + c < a || a + c < b)\n       \
    \ return false;\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpyxzf92mg: /tmp/tmpyxzf92mg.cpp:18: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    return ((a * b) - sqrt((b * a + a * c - a * b) * (a\
    \ * a + c * b - b * c)) \n     == 0) || ((a * a) - sqrt((b * a + a * c - a * b)\
    \ * (a * a + c * b - b * c)) \n     == 0);\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp94_vy5fr: /tmp/tmp94_vy5fr.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // write your code here\n    // a>=b, b>=c, c>=0\n\
    \    if(a>b&&b>c&&c>=0){\n        if(a>=b&&c>=b) return true;\n        else if(a>=b&&c>b)\
    \ return true;\n        else if(b>=a&&c>=a) return true;\n        else if(b>=a&&c>a)\
    \ return true;\n        else return false;\n    }\n    else if(a>b&&b>c&&c>=0)\
    \ return true;\n    else if(a>b&&b>c&&c<=0) return false;\n    else if(b>a&&b>c&&c>=0)\
    \ return true;\n    else if(b>a&&b>c&&c<=0) return false;\n    else if(c>a&&b>a&&b>c)\
    \ return true;\n    else if(c>a&&b>a&&b>c) return false;\n    else return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp3dyzn8ac: /tmp/tmp3dyzn8ac.cpp:30: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  bool result = (a + b > c);\n  return result;\n}\nint\
    \ main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjihb0vnj: /tmp/tmpjihb0vnj.cpp:19: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\t\n\tlong s1 = a + b,\n\t\t\ts2 = b + c,\n\t\t\ts3 =\
    \ c + a;\n\t\t\t\n\tif (s1<s2 && s2<s3) {\n\t\treturn true;\n\t} else {\n\t\t\
    return false;\n\t}\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp5eqaacll: /tmp/tmp5eqaacll.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  long long d = b * b - 4 * a * c;\n  if (d == 0) {\n\
    \    return false;\n  } else if (d > 0) {\n    return true;\n  } else {\n    return\
    \ a == 0 && b == 0 && c == 0;\n  }\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmplel0ykn_: /tmp/tmplel0ykn_.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int l1=(b+c)/2;\n    long long int l2=(b-c)/2;\n\
    \    long long int l3=(a-c)/2;\n    if(l1 == l2 && l2 == l3)\n    {\n        return\
    \ true;\n    }\n    else if(l1 == l3 && l2 == l1)\n    {\n        return true;\n\
    \    }\n    else if(l1 == l2 && l2 == l1)\n    {\n        return true;\n    }\n\
    \    else\n    {\n        return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpemt89oui: /tmp/tmpemt89oui.cpp:33: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\tif ( (a<0&&b<0)||(a>0&&b>0)||(a>0&&c<0)||(b>0&&c<0)||(b>0&&a<0)||(c>0&&a<0)||(c>0&&b<0)\
    \ ) {\n\t\tstd::cout << \"Invalid triangle\\n\";\n\t\treturn false;\n\t}\n\tif\
    \ ( (b==0)&&(c==0) ) {\n\t\treturn true;\n\t}\n\tif ( (a==0)&&(c==0) ) {\n\t\t\
    return false;\n\t}\n\tif ( (a>0&&b<0)||(a<0&&b>0) ) {\n\t\tstd::cout << \"Invalid\
    \ triangle\\n\";\n\t\treturn false;\n\t}\n\tlong d = (a + b + c) / 2;\n\tlong\
    \ ab = abs(b - a);\n\tlong ac = abs(c - a);\n\tlong bc = abs(b - c);\n\tlong ad\
    \ = abs(a - d);\n\tlong dc = abs(c - d);\n\treturn ( ac>ad && bc>bc && (ab>dc||dc>ab)\
    \ );\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp2bvuo7wd: /tmp/tmp2bvuo7wd.cpp:35: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  // Check that the input is a positive number that \n\
    \  // is no greater than the largest side of the triangle\n  if (a > c)\n    return\
    \ false;\n  if (b > c)\n    return false;\n  if (b > a)\n    return false;\n \
    \ if (a > b)\n    return false;\n  return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp04dqq624: /tmp/tmp04dqq624.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long d = b * b - 4 * a * c;\n    if (d == 0)\n   \
    \     return true;\n    long root1 = (-b + sqrt(d))/(2 * a);\n    long root2 =\
    \ (-b - sqrt(d))/(2 * a);\n    return root1 != root2;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpcyxj6j27: /tmp/tmpcyxj6j27.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a>b){\n        if(a>c){\n            return true;\n\
    \        }\n    }else{\n        if(b>c){\n            return true;\n        }\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpiiqr3p6m: /tmp/tmpiiqr3p6m.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if((b - a + c < 0 && c - b + a < 0) || (b - a + c\
    \ > 0 && c - b + a > 0))\n        return false;\n    long l1, l2, l3;\n    l1\
    \ = min(a, b);\n    l2 = max(a, b);\n    l3 = min(c, a);\n    if (min(a, c) ==\
    \ max(l1, l2))\n        return min(c, a) == max(a, b);\n    if (min(b, c) == max(l1,\
    \ l2))\n        return false;\n    if (min(a, c) == max(a, b))\n        return\
    \ min(b, a) == max(b, c);\n    if (max(a, c) == min(l1, l2))\n        return false;\n\
    \    if (max(b, c) == min(l1, l2))\n        return false;\n    if (max(a, c) ==\
    \ max(b, c))\n        return false;\n    return true;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpel9o8e__.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpel9o8e__.cpp:14:10: error: \u2018min\u2019\
    \ was not declared in this scope; did you mean \u2018std::min\u2019?\n   14 |\
    \     l1 = min(a, b);\n      |          ^~~\n      |          std::min\nIn file\
    \ included from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpel9o8e__.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3456:5:\
    \ note: \u2018std::min\u2019 declared here\n 3456 |     min(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n/tmp/tmpel9o8e__.cpp:15:10: error: \u2018\
    max\u2019 was not declared in this scope; did you mean \u2018std::max\u2019?\n\
    \   15 |     l2 = max(a, b);\n      |          ^~~\n      |          std::max\n\
    In file included from /usr/include/c++/9/algorithm:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpel9o8e__.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5: note: \u2018\
    std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp> __l, _Compare\
    \ __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660100049
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0) return false;\n  \
    \  long r = sqrt(a * b * c);\n    // If r is divisible by 3 then the three sides\
    \ are collinear.\n    if (r % 3 == 0)\n        return true;\n    // If one of\
    \ the sides equals to 0 the triangle is undefined.\n    if (r == 0) return false;\n\
    \    // Otherwise compute if the two other sides are equal\n    long q = (b +\
    \ r) / 2;\n    long r = (a + r) / 2;\n    return ((q * b) * r - a * (q * r)) <\
    \ 0;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptpc64ney.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmptpc64ney.cpp:20:10: error: redeclaration\
    \ of \u2018long int r\u2019\n   20 |     long r = (a + r) / 2;\n      |      \
    \    ^\n/tmp/tmptpc64ney.cpp:12:10: note: \u2018long int r\u2019 previously declared\
    \ here\n   12 |     long r = sqrt(a * b * c);\n      |          ^\n"
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    return ((b*b) - (4*a*c)) > 0;\n}\nint main() {\n \
    \   auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_yosa15: /tmp/tmpi_yosa15.cpp:15: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 && b == 0 || b == 0 && c == 0 || c == 0\
    \ && a == 0) return false;\n    long long l1 = abs(a * b - c * c);\n    long long\
    \ l2 = abs(b * c - a * b);\n    long long l3 = abs(c * a - b * c);\n    if (l2\
    \ > l1 && l2 > l3) return true;\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpow3ong1n: /tmp/tmpow3ong1n.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a < 0 || b < 0 || c < 0 || a + b + c <= 0)\n  \
    \      return false;\n    if(a+b > c || a+c > b || b+c > a)\n        return false;\n\
    \    return ((a * b) == (c ^ a * b)) && ((b * c) == (a ^ b * c)) && ((a * c) ==\
    \ (b ^ a * c));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpa5svh10l: /tmp/tmpa5svh10l.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\tif (a == b) \n\t\treturn (c == 180 || c == -90);\n\t\
    if (a == c)\n\t\treturn (b == 90 || b == -270);\n\tif (b == c)\n\t\treturn (a\
    \ == 90 || a == -270);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmplb5y0aw1: /tmp/tmplb5y0aw1.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  if (a == 0 && b == 0 && c == 0)\n    return true;\n\
    \  if (a == 0 && b == 0 && c != 0)\n    return false;\n  if (a == 0 && b != 0\
    \ && c == 0)\n    return false;\n  if (a != 0 && b == 0 && c == 0)\n    return\
    \ false;\n  if (a != 0 && b != 0 && c == 0)\n    return true;\n  if (a != 0 &&\
    \ b != 0 && c != 0)\n    return (a + b > c) ? a > b : c > b;\n  else\n    return\
    \ (a > b) ? a > c : c > b;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpictffzm6: /tmp/tmpictffzm6.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if((a>0 && b>0) || (c>0\
    \ && a<0))\n        return false;\n    if(a<0 && b<0 && c<0)\n        return false;\n\
    \    long ans=abs(a-c);\n    long bc=abs(b-c);\n    long ac=abs(a-b);\n    long\
    \ ca=abs(c-a);\n    long minc=min(ca,bc);\n    long mina=min(bc,ac);\n    long\
    \ minb=min(ac,ca);\n    long mina2=min(a,ca);\n    long minb2=min(b,bc);\n   \
    \ long minc2=min(ac,bc);\n    long mingc=min(mina,minb);\n    if(mina2-minc2-mingc<0)\n\
    \        return false;\n    if(minb2-minc2-mingc<0)\n        return false;\n \
    \   return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmptcgjcwym.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmptcgjcwym.cpp:20:15: error: \u2018min\u2019\
    \ was not declared in this scope; did you mean \u2018std::min\u2019?\n   20 |\
    \     long minc=min(ca,bc);\n      |               ^~~\n      |              \
    \ std::min\nIn file included from /usr/include/c++/9/algorithm:62,\n         \
    \        from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n        \
    \         from /tmp/tmptcgjcwym.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3456:5:\
    \ note: \u2018std::min\u2019 declared here\n 3456 |     min(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660100049
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if ((a == b) || (a == c) || (b == c))\n        return\
    \ false;\n    else if ((a + b > c) && (a + c > b) && (b + c > a))\n        return\
    \ true;\n    else if ((a + c > b) && (a + b > c) && (b + c > a))\n        return\
    \ true;\n    else if ((b + c > a) && (a + b > c) && (a + c > b))\n        return\
    \ true;\n    else if ((b + c > a) && (a + c > b) && (a + b > c))\n        return\
    \ true;\n    else if ((a + c > b) && (a + b > c) && (a + c > b))\n        return\
    \ true;\n    else if ((a + b > c) && (b + c > a) && (b + a > c))\n        return\
    \ true;\n    else if ((a + b > c) && (a + c > b) && (b + a > c))\n        return\
    \ true;\n    else if ((b + c > a) && (a + c > b) && (b + a > c))\n        return\
    \ true;\n    else if ((b + c > a) && (a + b > c) && (a + b > c))\n        return\
    \ true;\n    else if ((a + c > b) && (a + b > c) && (a + b > c))\n        return\
    \ true;\n    else if ((a + b > c) && (a + c > b) && (a + b > c))\n        return\
    \ true;\n    else if ((a + b > c) && (a + c > b) && (a + c > b))\n        return\
    \ true;\n    else if ((b + c > a) && (a + b > c) && (a + c > b))\n        return\
    \ true;\n    else if ((b + c > a) && (a + c > b) && (a + b > c))\n        return\
    \ true;\n    else if ((a + c > b) && (a + b > c) && (a + b > c))\n        return\
    \ true;\n    else if ((a + b > c) && (a + c > b) && (a + c > b))\n        return\
    \ true;\n    else if ((a + b > c) && (a + c > b) && (a + c > b))\n        return\
    \ true;\n    else if ((b + c > a) && (a + b > c) && (a + c > b))\n        return\
    \ true;\n    else if ((b + c > a) && (a + c > b) && (a + b > c))\n        return\
    \ true;\n    else if ((a + c > b) && (a + b > c) && (a + b > c))\n        return\
    \ true;\n    else if ((a + b > c) && (a + c > b) && (a + c > b))\n        return\
    \ true;\n    else if ((a + b > c) && (a + c > b) && (a + c > b))\n        return\
    \ true;\n    else if ((b + c > a) && (a + b > c) && (a + c > b))\n        return\
    \ true;\n    else if ((b + c > a) && (a + c > \n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6wuh0e54.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp6wuh0e54.cpp:60:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   60 | }\n      | ^\n/tmp/tmp6wuh0e54.cpp:59:37:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   59 |     else if\
    \ ((b + c > a) && (a + c >\n      |                             ~       ^\n  \
    \    |                                     )\n   60 | }\n      | ~           \
    \                         \n/tmp/tmp6wuh0e54.cpp:59:37: error: expected \u2018\
    )\u2019 before \u2018}\u2019 token\n   59 |     else if ((b + c > a) && (a + c\
    \ >\n      |             ~                       ^\n      |                  \
    \                   )\n   60 | }\n      | ~                                  \
    \  \n/tmp/tmp6wuh0e54.cpp:60:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   60 | }\n      | ^\n/tmp/tmp6wuh0e54.cpp:60:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n   60 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long s = (a+b+c)*(a + b + c);\n    return (s\
    \ == (b*b - a*a));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpepnx381g: /tmp/tmpepnx381g.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100050
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    return ((a > b) && (c > b) && (c > a) && (b >= a));\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpcjw25mca: /tmp/tmpcjw25mca.cpp:15: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b&&b==c){\n   \
    \     return 1;\n    }\n    if(a==c&&c==b){\n        return 1;\n    }\n    if(a==c&&c==a){\n\
    \        return 1;\n    }\n    if(b==a&&b==c){\n        return 1;\n    }\n   \
    \ if(b==c&&c==b){\n        return 1;\n    }\n    if(b==c&&c==a){\n        return\
    \ 1;\n    }\n    if(c==b&&c==a){\n        return 1;\n    }\n    if(c==a&&a==b){\n\
    \        return 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpqxnhayic: /tmp/tmpqxnhayic.cpp:40: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if((a+b+c)%2==0)\n        return false;\n    if((a+b+c)%2!=0)\n\
    \        return true;\n    if(b==0)\n        return a==c;\n    if(a==0)\n    \
    \    return c==b;\n    if(c==0)\n        return b==a;\n    if(a>b || b>c || c>a)\n\
    \        return false;\n    // A right angle triangle is a triangle with any of\
    \ these side lengths\n    // being greater than or equal to either of the other\
    \ two sides.\n    if(a >= b)\n        return a >= c;\n    return b >= c;\n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpcig1rion: /tmp/tmpcig1rion.cpp:31: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if((int)(a-b)<(int)(c-a)\
    \ && c > (b - a))\n        return true;\n    return false;\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmplrn29529: /tmp/tmplrn29529.cpp:19: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long ans = (a + b > c) && (c + b > a) && (a + c >\
    \ b) && (b + c > a);\n    assert(ans);\n    return ans;\n}\nint main() {\n   \
    \ auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpg7ggd89u: /tmp/tmpg7ggd89u.cpp:12: bool right_angle_triangle(long int,
    long int, long int): Assertion `ans'' failed.

    '
  stdout: ''
  timestamp: 1660100049
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a+b > c && b+c > a && c+a > b) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpt7f5psqw: /tmp/tmpt7f5psqw.cpp:21: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100051
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\tlong sum = a+b+c;\n\tassert(sum > 0);\n\tif (sum % 2\
    \ == 0) {\n\t\tsum += sum/2;\n\t} else {\n\t\tsum -= sum/2;\n\t}\n\treturn ((b\
    \ > a) && (c > b) && (b > c));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpxvo4x9ip: /tmp/tmpxvo4x9ip.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100051
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  assert(b >= a);\n  assert(c >= b);\n  long d = b - a;\n\
    \  long e = c - b;\n  long f = a - c;\n  long g = 2*b+2*c;\n  long h = 2+2*d+2*e;\n\
    \  long i = 3*b+4*c-3*a;\n  long j = 3*d+4*c-3*a;\n  long k = 2*b+4*c-3*a;\n \
    \ long l = 4*d+6*c-4*a;\n  long m = 4*b+6*c-4*a;\n  long n = 4*c+6*d+4*a;\n  long\
    \ o = 4*d+4*e-2*a;\n  long p = 4*c+4*d+4*e;\n  long q = 2*d+2*e-2*a;\n  long r\
    \ = 2*b+2*e-2*a;\n  long s = 2*b+2*d-2*a;\n  long t = 2*c+2*d-2*a;\n  long u =\
    \ 2*c+2*e-2*a;\n  long v = 4*d+6*e-2*a;\n  long w = 2*e-2*a;\n  long x = 2*a;\n\
    \  long y = 3*a+3*b+3*c;\n  long z = 3*d+3*b+3*c;\n  long a = sqrt(x*x+y*y+z*z);\n\
    \  long b = sqrt(p*p+q*q+r*r);\n  long c = sqrt(n*n+o*o+s*s);\n  long d = sqrt(a*a+b*b+c*c);\n\
    \  long e = sqrt(d*d+e*e+f*f);\n  long f = sqrt(g*g+h*h+i*i);\n  long g = sqrt(j*j+k*k+l*l);\n\
    \  long h = sqrt(m*m+n*n+o*o);\n  long i = sqrt(v*v+w*w+x*x);\n  long j = sqrt(x*x+y*y+z*z);\n\
    \  long k = sqrt(p*p+q*q+r*r);\n  long l = sqrt(n*n+o*o+s*s);\n  long m = sqrt(a*a+b*b+c*c);\n\
    \  long n = sqrt(d*d+e*e+f*f);\n  long o = sqrt(g*g+h*h+i*i);\n  long p = sqrt(j*j+k*k+l*l);\n\
    \  long q = sqrt(m*m+n*n+o*o);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwdhu0kwo.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpwdhu0kwo.cpp:36:8: error: declaration\
    \ of \u2018long int a\u2019 shadows a parameter\n   36 |   long a = sqrt(x*x+y*y+z*z);\n\
    \      |        ^\n/tmp/tmpwdhu0kwo.cpp:37:8: error: declaration of \u2018long\
    \ int b\u2019 shadows a parameter\n   37 |   long b = sqrt(p*p+q*q+r*r);\n   \
    \   |        ^\n/tmp/tmpwdhu0kwo.cpp:38:8: error: declaration of \u2018long int\
    \ c\u2019 shadows a parameter\n   38 |   long c = sqrt(n*n+o*o+s*s);\n      |\
    \        ^\n/tmp/tmpwdhu0kwo.cpp:39:8: error: redeclaration of \u2018long int\
    \ d\u2019\n   39 |   long d = sqrt(a*a+b*b+c*c);\n      |        ^\n/tmp/tmpwdhu0kwo.cpp:13:8:\
    \ note: \u2018long int d\u2019 previously declared here\n   13 |   long d = b\
    \ - a;\n      |        ^\n/tmp/tmpwdhu0kwo.cpp:40:8: error: redeclaration of \u2018\
    long int e\u2019\n   40 |   long e = sqrt(d*d+e*e+f*f);\n      |        ^\n/tmp/tmpwdhu0kwo.cpp:14:8:\
    \ note: \u2018long int e\u2019 previously declared here\n   14 |   long e = c\
    \ - b;\n      |        ^\n/tmp/tmpwdhu0kwo.cpp:41:8: error: redeclaration of \u2018\
    long int f\u2019\n   41 |   long f = sqrt(g*g+h*h+i*i);\n      |        ^\n/tmp/tmpwdhu0kwo.cpp:15:8:\
    \ note: \u2018long int f\u2019 previously declared here\n   15 |   long f = a\
    \ - c;\n      |        ^\n/tmp/tmpwdhu0kwo.cpp:42:8: error: redeclaration of \u2018\
    long int g\u2019\n   42 |   long g = sqrt(j*j+k*k+l*l);\n      |        ^\n/tmp/tmpwdhu0kwo.cpp:16:8:\
    \ note: \u2018long int g\u2019 previously declared here\n   16 |   long g = 2*b+2*c;\n\
    \      |        ^\n/tmp/tmpwdhu0kwo.cpp:43:8: error: redeclaration of \u2018long\
    \ int h\u2019\n   43 |   long h = sqrt(m*m+n*n+o*o);\n      |        ^\n/tmp/tmpwdhu0kwo.cpp:17:8:\
    \ note: \u2018long int h\u2019 previously declared here\n   17 |   long h = 2+2*d+2*e;\n\
    \      |        ^\n/tmp/tmpwdhu0kwo.cpp:44:8: error: redeclaration of \u2018long\
    \ int i\u2019\n   44 |   long i = sqrt(v*v+w*w+x*x);\n      |        ^\n/tmp/tmpwdhu0kwo.cpp:18:8:\
    \ note: \u2018long int i\u2019 previously declared here\n   18 |   long i = 3*b+4*c-3*a;\n\
    \      |        ^\n/tmp/tmpwdhu0kwo.cpp:45:8: error: redeclaration of \u2018long\
    \ int j\u2019\n  "
  stdout: ''
  timestamp: 1660100051
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a == 0 || b == 0 || c == 0){\n        return false;\n\
    \    }\n    return ((a * b) > c) || ((b * a) > c) || ((c * b) > a);\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpx_7aau37: /tmp/tmpx_7aau37.cpp:19: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) \n        return false;\n\
    \    else if (a + b < c) \n        return right_angle_triangle(a + 1, b + 1, c)\
    \ || (a == b == c); // If a + b < c, then a is right angle or 90 degree.\n   \
    \ else \n        return right_angle_triangle(a, b + 1, c) || (a == b == c); //\
    \ If a + b >= c, then a is right angle or 90 degree.\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (b < a && a < c || c < a && a < b) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp7wmj8c67: /tmp/tmp7wmj8c67.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if((a<b) && (b<c)) {\n        if((a==c) && (b==a))\
    \ {\n            return true;\n        }\n        else {\n            return false;\n\
    \        }\n    }\n    else {\n        return false;\n    }\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpacmkkk2s: /tmp/tmpacmkkk2s.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  long long a1 = b * b - 4 * a * c;\n  long long a2 =\
    \ a1 * a1;\n  long long a3 = a2 * a2;\n  long long a4 = a3 * a3;\n\n  return a2\
    \ + a3 < a4 + a1;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpqqhqfk2k: /tmp/tmpqqhqfk2k.cpp:21: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // your code here\n    if(a==b+c) return false;\n\
    \    if(a==b) return false;\n    if(a==c) return false;\n    if(abs(a-b)>abs(a-c))\
    \ return false;\n    if(abs(a-c)>abs(a-b)) return false;\n    return true;\n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuc1qon_5: /tmp/tmpuc1qon_5.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long sx, sy, sz;\n    sx = std::abs(a) + std::abs(b)\
    \ + std::abs(c);\n    sy = std::abs(a) - std::abs(b) + std::abs(c);\n    sz =\
    \ std::abs(a) - std::abs(b) - std::abs(c);\n    if (sx > std::abs(sy)) {\n   \
    \     return true;\n    }\n    if (sy > std::abs(sz)) {\n        return true;\n\
    \    }\n    if (sz > std::abs(sx)) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp201qcvmr: /tmp/tmp201qcvmr.cpp:29: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a>b){\n        long\
    \ temp=a;\n        a=b;\n        b=temp;\n    }\n    if(a>c){\n        long temp=a;\n\
    \        a=c;\n        c=temp;\n    }\n    if(b>c){\n        long temp=b;\n  \
    \      b=c;\n        c=temp;\n    }\n    if(a+b+c!=4){\n        return false;\n\
    \    }\n    long mid1=(b+c)/2;\n    long mid2=(b+c)/2;\n    if(a+mid1==b+mid2){\n\
    \        if(a+mid1==c){\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpu0fs3n1c: /tmp/tmpu0fs3n1c.cpp:41: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    return (((b - a) * (b - c)) + ((c - a) * (c - b))\
    \ < 0); // The condition is true if b is greater or equal to a\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmph74csbyu: /tmp/tmph74csbyu.cpp:15: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b||a==c)return\
    \ true;\n    if(b==c||b==a)return true;\n    if(a!=b&&b!=c&&c!=a)return false;\n\
    \    if(a==0||b==0||c==0)return false;\n    if((a>0&&b>0)||(a>0&&c>0)||(b>0&&c>0))return\
    \ false;\n    if((a>0&&b==0)||(a==0&&b>0)||(a>0&&c==0)||(a==0&&c>0)||(b==0&&c==0))return\
    \ true;\n    if((a==0&&b==0)||(b==0&&c==0)||(c==0&&a==0))return false;\n    if((a>0&&b>0)||(a>0&&c>0)||(b==0&&c>0))return\
    \ false;\n    if((a==0&&b==0)||(b==0&&c==0)||(c==0&&a==0))return false;\n    return\
    \ true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp4x7n4plo: /tmp/tmp4x7n4plo.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > c || c > b || b > a)\n        return false;\n\
    \    long x1, y1, z1, x2, y2, z2, x3, y3, z3;\n    x1 = a;\n    y1 = b;\n    z1\
    \ = c;\n    x2 = a - b;\n    y2 = c - a;\n    z2 = b - c;\n    x3 = a + b;\n \
    \   y3 = a + c;\n    z3 = c + a;\n    if (y1 == y2) {\n        // If y1 == y2,\
    \ then the two triangles have the same base and same height\n        // so the\
    \ angle between them is zero.\n        if (z1 == z2) {\n            // If z1 ==\
    \ z2, then the two triangles have the same sides so the\n            // angle\
    \ between them is 90 degrees\n            return (x1 == x3);\n        }\n    \
    \    return false;\n    }\n    if (x1 == x2)\n        return false;\n    // If\
    \ x1 == x2, then the two triangles have the same base and different heights\n\
    \    // so the angle between them is 90 degrees\n    if (z1 == z2)\n        return\
    \ false;\n    // If z1 == z2, then the two triangles have the same sides so the\
    \ angle between\n    // them is 90 degrees\n    // if y1 == y2 return (x1 == x3);\
    \ else return false;\n    return (x1 == x3);\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpibet2yhx: /tmp/tmpibet2yhx.cpp:46: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\tassert(a >= 0 && b >= 0 && c >= 0);\n\tif (a == 0 ||\
    \ b == 0 || c == 0) return false;\n\tlong rads = a * b + c * b;\n\tif (a >= b)\
    \ \n\t\treturn ((b * 2) >= c);\n\telse return ((c * 2) >= b);\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmphn6wphc9: /tmp/tmphn6wphc9.cpp:21: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return std::min(a, b, c) == a + b + c;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/bits/specfun.h:45,\n         \
    \        from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpjn9b8ens.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:\
    \ In instantiation of \u2018constexpr const _Tp& std::min(const _Tp&, const _Tp&,\
    \ _Compare) [with _Tp = long int; _Compare = long int]\u2019:\n/tmp/tmpjn9b8ens.cpp:14:28:\
    \   required from here\n/usr/include/c++/9/bits/stl_algobase.h:249:17: error:\
    \ \u2018__comp\u2019 cannot be used as a function\n  249 |       if (__comp(__b,\
    \ __a))\n      |           ~~~~~~^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660100052
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == b) \n        return b == c;\n    if (a ==\
    \ c) \n        return c == b;\n    if (b == c) \n        return false;\n    if\
    \ (b > a && c > a) \n        return right_angle_triangle(b, c);\n    if (b > a\
    \ && c > b) \n        return right_angle_triangle(b, c);\n    if (b > a && c >\
    \ c) \n        return right_angle_triangle(a, b, c);\n    if (b > b && c > b)\
    \ \n        return right_angle_triangle(a, b, c);\n    if (b > b && c > c) \n\
    \        return right_angle_triangle(a, b, c);\n    if (b > c && c > b) \n   \
    \     return right_angle_triangle(a, b, c);\n    if (b > c && c > c) \n      \
    \  return right_angle_triangle(a, b, c);\n    return false;\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9j270rxo.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp9j270rxo.cpp:18:41: error: too few\
    \ arguments to function \u2018bool right_angle_triangle(long int, long int, long\
    \ int)\u2019\n   18 |         return right_angle_triangle(b, c);\n      |    \
    \                                     ^\n/tmp/tmp9j270rxo.cpp:10:6: note: declared\
    \ here\n   10 | bool right_angle_triangle(long a, long b, long c) {\n      | \
    \     ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmp9j270rxo.cpp:20:41: error: too few arguments\
    \ to function \u2018bool right_angle_triangle(long int, long int, long int)\u2019\
    \n   20 |         return right_angle_triangle(b, c);\n      |                \
    \                         ^\n/tmp/tmp9j270rxo.cpp:10:6: note: declared here\n\
    \   10 | bool right_angle_triangle(long a, long b, long c) {\n      |      ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long l1 = sqrt(pow(a,2) + pow(b,2) + pow(c,2));\n\
    \    if (a > 0 && b > 0 && c > 0 && l1 > 0) {\n        if ((a == b) || (a == c)\
    \ || (b == c)) return false;\n        else return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpecp7rs59: /tmp/tmpecp7rs59.cpp:21: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // base cases\n    if (a == 0 || b == 0 || c == 0)\n\
    \        return true;\n    else if (a + b < c)\n        return right_angle_triangle(a\
    \ - b, b, c + b);\n    else\n        return right_angle_triangle(a - b, c, b -\
    \ c);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpqaecfydd: /tmp/tmpqaecfydd.cpp:22: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  // Your code here\n  if ( a<=0 || b<=0 || c<=0  ) return\
    \ 0;\n  if ( a+b+c == a+b+c*2 ) return 1;\n  long ans = (a*a + b*b - 2*b*c)/(2*c*c);\n\
    \  if ( ans < 0 ) return 0;\n  if ( ans > 0 ) return 1;\n}\nint main() {\n   \
    \ auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmphlw4xql6: /tmp/tmphlw4xql6.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100053
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\t// Write your code here\n\tint tri1 = 3*a + 2*b;\n\t\
    int tri2 = 2*a + 3*b;\n\tint tri3 = a*b*c + a*(2*b) + b*(2*c) + c*(b*c);\n\tif\
    \ (tri1 == tri2 && tri2 == tri3) return true;\n\telse return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpd50d2osm: /tmp/tmpd50d2osm.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here.\n    return (\n         \
    \   (a == b) && (b == c) && \n            (b != (c != (a != b))))\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8es3pdbs.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp8es3pdbs.cpp:14:36: error: expected\
    \ \u2018;\u2019 before \u2018}\u2019 token\n   14 |             (b != (c != (a\
    \ != b))))\n      |                                    ^\n      |            \
    \                        ;\n   15 | }\n      | ~                             \
    \      \n"
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    return ((a + b > c) && (a + c > b) && (b + c > a));\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmph2g6z_ia: /tmp/tmph2g6z_ia.cpp:18: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100053
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long ans = a + b > c;\n    long long b1 = b -\
    \ c;\n    long long c1 = c - a;\n    long long a1 = a - b;\n    return (ans ==\
    \ b1 * a1 > c1 * a1);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp97pqne8w: /tmp/tmp97pqne8w.cpp:21: int main(): Assertion `candidate((10),
    (6), (8)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long x=a/b;\n    long\
    \ y=b/c;\n    long z=a/c;\n    long x_2=x*x;\n    long y_2=y*y;\n    long z_2=z*z;\n\
    \    long x_3=x_2+y_2;\n    long y_3=y_2-z_2;\n    long z_3=z_2+x_2;\n    long\
    \ x_4=x*y*z;\n    long y_4=y*z*x;\n    long z_4=z*x*y;\n    return ((x_2+y_4+z_4==x_3)||(x_3+y_4+z_4==x_2)||(x_4+y_3+z_4==x_3)||(x_4+y_2+z_4==x_2));\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdj35thrw: /tmp/tmpdj35thrw.cpp:29: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long m = a * b - c;\n    long long r1 = ((m >\
    \ 0) && (a > 0) || (a < 0));\n    long long r2 = ((m > 0) && (b > 0) || (b < 0));\n\
    \    long long r3 = ((m > 0) && (c > 0) || (c < 0));\n    return ((r1 == r2) &&\
    \ r3);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp847c4rtl: /tmp/tmp847c4rtl.cpp:22: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if (a >= b && a >= c\
    \ && b >= c) {\n        return true;\n    } else {\n        return false;\n  \
    \  }\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpcmocl1wi: /tmp/tmpcmocl1wi.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a>=b&&a>=c){\n        if(b>c && c>a){\n       \
    \     return true;\n        }\n    }\n    else{\n        if(b>c && c>a){\n   \
    \         return true;\n        }\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp3yz7adpz: /tmp/tmp3yz7adpz.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100053
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Compute the area of the triangle\n    long s =\
    \ (a + b + c) / 2;\n    long area = (sqrt(s * (s - a) * (s - b) * (s - c)) - ((a\
    \ + b) * (c + b) * (a + c))) / 2;\n    \n    // Compute the side length of the\
    \ triangle\n    long length = sqrt(a * a + b * b + c * c);\n    \n    // Compute\
    \ the two angles\n    long x1 = atan2(a / length, b / length);\n    long y1 =\
    \ atan2((-a + b) / length, c / length);\n    \n    // If the two angles are not\
    \ equal\n    // return false;\n    if (x1 != y1)\n        return false;\n    \n\
    \    // Compute the hypotenuse\n    long hypotenuse = a * b + c * c;\n    \n \
    \   // If hypotenuse is negative\n    // return false;\n    if (hypotenuse < 0)\n\
    \        return false;\n    \n    // Otherwise, return the result\n    return\
    \ true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp724x6t1h: /tmp/tmp724x6t1h.cpp:41: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // write your code here\n    long long int a1,b1,c1,ans,b,c;\n\
    \    a1=a;\n    b1=b;\n    c1=c;\n    a=sqrt(a1*a1+b1*b1+c1*c1);\n    b=sqrt(a1*a1+b1*b1+c1*c1);\n\
    \    c=sqrt(a1*a1+b1*b1+c1*c1);\n    long long int sum=a1*b2+b1*c2+c1*a2+a1*c2;\n\
    \    if(sum<0){\n        ans=false;\n    }else{\n        ans=true;\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9oln2cti.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp9oln2cti.cpp:12:32: error: declaration\
    \ of \u2018long long int b\u2019 shadows a parameter\n   12 |     long long int\
    \ a1,b1,c1,ans,b,c;\n      |                                ^\n/tmp/tmp9oln2cti.cpp:12:34:\
    \ error: declaration of \u2018long long int c\u2019 shadows a parameter\n   12\
    \ |     long long int a1,b1,c1,ans,b,c;\n      |                             \
    \     ^\n/tmp/tmp9oln2cti.cpp:19:26: error: \u2018b2\u2019 was not declared in\
    \ this scope; did you mean \u2018b\u2019?\n   19 |     long long int sum=a1*b2+b1*c2+c1*a2+a1*c2;\n\
    \      |                          ^~\n      |                          b\n/tmp/tmp9oln2cti.cpp:19:32:\
    \ error: \u2018c2\u2019 was not declared in this scope; did you mean \u2018c\u2019\
    ?\n   19 |     long long int sum=a1*b2+b1*c2+c1*a2+a1*c2;\n      |           \
    \                     ^~\n      |                                c\n/tmp/tmp9oln2cti.cpp:19:38:\
    \ error: \u2018a2\u2019 was not declared in this scope; did you mean \u2018a1\u2019\
    ?\n   19 |     long long int sum=a1*b2+b1*c2+c1*a2+a1*c2;\n      |           \
    \                           ^~\n      |                                      a1\n"
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a >= b && b >= c && c >= a) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0p34m1t5: /tmp/tmp0p34m1t5.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long x3 = (a*a+b*b+c*c)/9.0;\n    long x4 = (a*a-b*b-c*c)/9.0;\n\
    \    long x5 = (a*a+b*b-c*c)/9.0;\n\n    if(x3 == 0 || x4 == 0 || x5 == 0) return\
    \ false;\n    long x31 = (x3*(x3*x3+x4*x4)+x5*(x5*x5-x3*x3)+(x5+x3)*x5)/360.0;\n\
    \    if(abs(x31 - a) > abs(x31 - b) || abs(x31 - c) > abs(x31 - b)) return false;\n\
    \    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpuo_4krmy: /tmp/tmpuo_4krmy.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\treturn (c*c) - (b*b) == ((a*b) - (a*c));\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp6rzst8qg: /tmp/tmp6rzst8qg.cpp:15: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100053
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long sum = a+b+c;\n    // return sum == 180;\n\
    \    \n    if(sum==180)\n        return true;\n    else if(sum<180)\n        return\
    \ false;\n    else\n        return right_angle_triangle(sum-a,sum-b,sum-c);\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp39jgx8se: /tmp/tmp39jgx8se.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100053
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    bool result;\n    if (a >= b+c) {\n        if (b <=\
    \ c || a <= c) {\n            result = true;\n        } else {\n            result\
    \ = false;\n        }\n    } else {\n        if (c >= a || b <= a) {\n       \
    \     result = false;\n        } else {\n            result = true;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpujse9f3n: /tmp/tmpujse9f3n.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  // Write your code here\n  long a1, a2, b1, b2, c1,\
    \ c2, s, t;\n  c1 = a%b;\n  c2 = b%a;\n  b1 = b%c;\n  b2 = a%c;\n  a1 = a%c;\n\
    \  s = (c1*a2 + c2*b1 + b1* b2) % b;\n  t = (a1*b2 + a2*b1 + c1* b2) % b;\n  if\
    \ ((s > 0) && (t > 0)) return true;\n  return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpzr64h4bx: /tmp/tmpzr64h4bx.cpp:27: int main(): Assertion `candidate((10),
    (6), (8)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a>b+c || b>a+c || c>a+b){\n        return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpz4rc2koh: /tmp/tmpz4rc2koh.cpp:19: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if ( a == b )\n    {\n        if ( c == a )\n    \
    \        return true;\n        else if ( c == b )\n            return false;\n\
    \        else return true;\n    }\n    else if ( a == c )\n    {\n        if (\
    \ b == c )\n            return true;\n        else if ( b == a )\n           \
    \ return false;\n        else return true;\n    }\n    else if ( b == c )\n  \
    \  {\n        if ( a == c )\n            return true;\n        else if ( a ==\
    \ b )\n            return false;\n        else return true;\n    }\n    else if\
    \ ( a>b+c && a>c && a>b+c )\n    {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpj7hk5vn9: /tmp/tmpj7hk5vn9.cpp:43: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if ((a + b) < c) return false;\n    else if ((b +\
    \ a) < c) return false;\n    else return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp6wn74q0a: /tmp/tmp6wn74q0a.cpp:18: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100053
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    return std::abs(180 - std::abs(a + b - c)) < 10;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp4041z8pl: /tmp/tmp4041z8pl.cpp:15: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100053
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  if(a>b){\n    if(b>c){\n      return true;\n    }else{\n\
    \      return false;\n    }\n  }else if(b>c){\n    return false;\n  }else{\n \
    \   return false;\n  }\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpt4ia3b3s: /tmp/tmpt4ia3b3s.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100053
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    assert(a > 0 && b > 0 && c > 0);\n    long long d\
    \ = (a * a + b * b - c * c) / (2 * b); // d is the area of the right angle triangle\n\
    \    if (d == 0) return false; // the right angle triangle is not possible\n \
    \   long long s = (a * b + c * d) / (2 * a); // s is the area of the right angle\
    \ triangle\n    if (s == 0) return false; // the right angle triangle is not possible\n\
    \    long long xc = (a * c + b * d) / (2 * b); // xc is the area of the right\
    \ angle triangle\n    if (xc == 0) return false; // the right angle triangle is\
    \ not possible\n    long long yc = (a * b + c * a) / (2 * c); // yc is the area\
    \ of the right angle triangle\n    if (yc == 0) return false; // the right angle\
    \ triangle is not possible\n    long long ac = (a + b) * (a + c); // ac is the\
    \ area of the triangle\n    if (ac == 0) return false; // the triangle is not\
    \ possible\n    long long bd = (b + c) * (b + d); // bd is the area of the triangle\n\
    \    if (bd == 0) return false; // the triangle is not possible\n    long long\
    \ cc = (c + d) * (c + a); // cc is the area of the triangle\n    if (cc == 0)\
    \ return false; // the triangle is not possible\n    long long de = (a * e + b\
    \ * f + c * g + d * h) / (2 * e); // de is the area of the triangle\n    if (de\
    \ == 0) return false; // the triangle is not possible\n    long long ef = (e *\
    \ e + f * f + g * g + h * h) / (2 * f); // ef is the area of the triangle\n  \
    \  if (ef == 0) return false; // the triangle is not possible\n    long long fg\
    \ = (f * f + g * g + h * h) / (2 * g); // fg is the area of the triangle\n   \
    \ if (fg == 0) return false; // the triangle is not possible\n    long long hg\
    \ = (g * g + h * h) / (2 * h); // hg is the area of the triangle\n    if (hg ==\
    \ 0) return false; // the triangle is not possible\n    long long ic = (a * i\
    \ + b * j + c * k + d * l) / (2 * i); // ic is the area of the triangle\n    if\
    \ (ic == 0) return false; // the triangle is not possible\n    long long jd =\
    \ (b * j + c * k + d * l) / (2 * j); // jd is the area of the triangle\n    if\
    \ (jd == 0) return false; // the triangle is not possible\n    long long kc =\
    \ (c * k + d * l) / (2 * k); // kc is the area of the triangle\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp07h23s72.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp07h23s72.cpp:26:25: error: \u2018e\u2019\
    \ was not declared in this scope; did you mean \u2018de\u2019?\n   26 |     long\
    \ long de = (a * e + b * f + c * g + d * h) / (2 * e); // de is the area of the\
    \ triangle\n      |                         ^\n      |                       \
    \  de\n/tmp/tmp07h23s72.cpp:26:33: error: \u2018f\u2019 was not declared in this\
    \ scope\n   26 |     long long de = (a * e + b * f + c * g + d * h) / (2 * e);\
    \ // de is the area of the triangle\n      |                                 ^\n\
    /tmp/tmp07h23s72.cpp:26:41: error: \u2018g\u2019 was not declared in this scope\n\
    \   26 |     long long de = (a * e + b * f + c * g + d * h) / (2 * e); // de is\
    \ the area of the triangle\n      |                                         ^\n\
    /tmp/tmp07h23s72.cpp:26:49: error: \u2018h\u2019 was not declared in this scope\n\
    \   26 |     long long de = (a * e + b * f + c * g + d * h) / (2 * e); // de is\
    \ the area of the triangle\n      |                                          \
    \       ^\n/tmp/tmp07h23s72.cpp:34:25: error: \u2018i\u2019 was not declared in\
    \ this scope; did you mean \u2018ic\u2019?\n   34 |     long long ic = (a * i\
    \ + b * j + c * k + d * l) / (2 * i); // ic is the area of the triangle\n    \
    \  |                         ^\n      |                         ic\n/tmp/tmp07h23s72.cpp:34:33:\
    \ error: \u2018j\u2019 was not declared in this scope\n   34 |     long long ic\
    \ = (a * i + b * j + c * k + d * l) / (2 * i); // ic is the area of the triangle\n\
    \      |                                 ^\n/tmp/tmp07h23s72.cpp:34:41: error:\
    \ \u2018k\u2019 was not declared in this scope\n   34 |     long long ic = (a\
    \ * i + b * j + c * k + d * l) / (2 * i); // ic is the area of the triangle\n\
    \      |                                         ^\n/tmp/tmp07h23s72.cpp:34:49:\
    \ error: \u2018l\u2019 was not declared in this scope\n   34 |     long long ic\
    \ = (a * i + b * j + c * k + d * l) / (2 * i); // ic is the area of the triangle\n\
    \      |                                                 ^\n/tmp/tmp07h23s72.cpp:39:1:\
    \ warning: contr"
  stdout: ''
  timestamp: 1660100052
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  if ( b > a && b > c ) {\n    if ( a > c )\n      return\
    \ true;\n    else if ( a == c && b > c )\n      return true;\n    else if ( a\
    \ == b && c == b )\n      return true;\n  }\n  else {\n    if ( c > b )\n    \
    \  return true;\n    else if ( c == b && b > b )\n      return true;\n    else\
    \ if ( c == b && a == b )\n      return true;\n  }\n  return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmptc1yggft: /tmp/tmptc1yggft.cpp:32: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100053
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if( (a + b < c) || (b + c < a) || (a + c < b) ) {\n\
    \        return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpd0o04324: /tmp/tmpd0o04324.cpp:19: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100053
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long rad = (a + b + c) / 2;\n    if ((a + b) <= c\
    \ && (b + c) <= a && (c + a) <= b)\n        return 1;\n    if ((a + b) <= c &&\
    \ (b + c) > a && (c + a) > b)\n        return 0;\n    if ((a + b) > c && (b +\
    \ c) > a && (c + a) > b)\n        return 0;\n    if ((a + b) > c && (b + c) >\
    \ a && (c + a) > b)\n        return 0;\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmphmfxpdrz: /tmp/tmphmfxpdrz.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100053
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    assert(a >= 0);\n    assert(b >= 0);\n    assert(c\
    \ >= 0);\n    if (a + b <= c) return false; // Not possible\n    if (b + c <=\
    \ a) return false; // Not possible\n    if (a + c <= b) return false; // Not possible\n\
    \    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpkzv05y5b: /tmp/tmpkzv05y5b.cpp:24: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100053
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    int ab = abs(b);\n    int ac = abs(c);\n    int bc\
    \ = abs(a + b);\n    int acb = abs(a - c);\n    int abc = abs(b - c);\n    //\
    \ A triangle is right angle if the sum of any two sides is 90 or 180.\n    return\
    \ ((ab >= ac) && (ab >= bc) && (ab >= acb) && (ab >= abc));\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp6bxidmjt: /tmp/tmp6bxidmjt.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100054
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if((long)sqrt(pow(a,2)+pow(b,2)+pow(c,2))==a*b*c){\n\
    \        return true;\n    }else{\n        return false;\n    }\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp769x08p_: /tmp/tmp769x08p_.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100054
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\treturn (((a + b > c) || (b + c > a) || (a + c > b))\
    \ &&\n\t\t(b > a && c > b));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpd4djpkxv: /tmp/tmpd4djpkxv.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100054
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\tlong a, b, c, u, v;\n\n\tassert(b > a);\n\tassert(c\
    \ > a);\n\tassert(c > b);\n\n\tu = a * c - b;\n\tv = a * a + b * b;\n\tif (u <\
    \ 0) {\n\t\tu = -u;\n\t\tv = -v;\n\t}\n\tif (v < 0) {\n\t\treturn false;\n\t}\n\
    \tif (v == 0) {\n\t\treturn u == 0;\n\t}\n\treturn u > 0;\n}\nint main() {\n \
    \   auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjw37soc_.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpjw37soc_.cpp:11:7: error: declaration\
    \ of \u2018long int a\u2019 shadows a parameter\n   11 |  long a, b, c, u, v;\n\
    \      |       ^\n/tmp/tmpjw37soc_.cpp:11:10: error: declaration of \u2018long\
    \ int b\u2019 shadows a parameter\n   11 |  long a, b, c, u, v;\n      |     \
    \     ^\n/tmp/tmpjw37soc_.cpp:11:13: error: declaration of \u2018long int c\u2019\
    \ shadows a parameter\n   11 |  long a, b, c, u, v;\n      |             ^\n"
  stdout: ''
  timestamp: 1660100054
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long x1, y1, x2, y2,\
    \ x3, y3;\n    \n    x1=a;\n    y1=b;\n    x2=c;\n    y2=b;\n    x3=b;\n    y3=a;\n\
    \    \n    if(x2<x1 && x1<x3){\n        return true;\n    }\n    else if (x1<x2\
    \ && x2<x3){\n        return false;\n    }\n    else if (x2<x1 && x3<x3){\n  \
    \      return false;\n    }\n    \n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0k3_vpg0: /tmp/tmp0k3_vpg0.cpp:35: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100054
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(((b - c) >= 0) && ((a - b) >= 0) && ((b - a) >=\
    \ 0)){\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp9c2qcvr2: /tmp/tmp9c2qcvr2.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    return ((a>b) && (b>c)\
    \ && (a>c));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n  \
    \  assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpefytwnus: /tmp/tmpefytwnus.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long s = 0;\n    long t;\n    long u = a;\n    long\
    \ v = b;\n    long w = c;\n\n    s = u * v * w - w * v * u;\n\n    // The following\
    \ condition checks whether the sides of triangle\n    // is right angle or 90\
    \ degree.\n    if (s >= 0) return true;\n    else return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8sykw8rb: /tmp/tmp8sykw8rb.cpp:27: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    return (a + b > c) && (a + c > b) && (b + c > a);\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpldtv9pvh: /tmp/tmpldtv9pvh.cpp:18: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  // Write your code here\n  long max = (a > b) ? a :\
    \ b;\n  long min = (a > b) ? b : a;\n  long mid = (a + b + c) / 2;\n  if (mid\
    \ - max > min - mid) return false;\n  return true;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp4f696fcu: /tmp/tmp4f696fcu.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    return (b - a) * ((c + b) - a) / (b - a) > 0;\n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmphv7b07u3: /tmp/tmphv7b07u3.cpp:16: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if((a>=b) && (b >= c))\n    {\n        if((c>= b)\
    \ && (a>= c))\n        return true;\n    }\n    else\n        return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp4iuvqpjj: /tmp/tmp4iuvqpjj.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == b || a == c || b == c)\n        return false;\n\
    \    long d = (long) sqrt((double) (a * b + c * c));\n    long e = (long) sqrt((double)\
    \ (a * a + b * b + c * c));\n    long f = ((long) sqrt((double) (a * a + b * b)))\
    \ > ((long) sqrt((double) (a * a + c * c))) ? ((long) sqrt((double) (a * a + c\
    \ * c))) : ((long) sqrt((double) (a * b + c * c)));\n    if (d == e) {\n     \
    \   if (b == f) return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpcpdo3p1o: /tmp/tmpcpdo3p1o.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  assert(a < b && b < c);\n  long d = b * b - 4 * a *\
    \ c;\n  if (d < 0) {\n    return false;\n  }\n  long x = (b + sqrt(d)) / (2 *\
    \ a);\n  long y = (-b - sqrt(d)) / (2 * a);\n  if (x == y || x == -y) {\n    return\
    \ true;\n  }\n  long m = (long) sqrt((x) * (x + y) * (x - y));\n  return m ==\
    \ 0;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpan1xgqdp: /tmp/tmpan1xgqdp.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long x1 = (a + b + c)/2;\n    long x2 = (x1 + b +\
    \ c)/2;\n    long x3 = (x1 + a + c)/2;\n\n    // if two points are same then it\
    \ is a right angle triangle\n    // two points are same if abc is 90 degree\n\
    \    if (a == b+c){\n        return true;\n    }\n\n    if(x1 == x2){\n      \
    \  // if one point is same then it forms a right angle triangle\n        // if\
    \ two points are same then it is a right angle triangle\n        // if all three\
    \ sides are same then it is a right angle triangle\n        if(x1 == x3){\n  \
    \          return true;\n        }\n    }\n\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpl8ahpu10: /tmp/tmpl8ahpu10.cpp:34: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long s1 = (a + b + c) / 2;\n    long s2 = (a + b)\
    \ * (b + c) / 4;\n    long s3 = (a + b) * (a + c) / 4;\n    return ((s1 == s2)\
    \ && (s2 == s3));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpv20of89b: /tmp/tmpv20of89b.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // write your logic here\n    long s = a+b+c;\n  \
    \  long d = sqrt((s*(s-a)*(a-b)*(a-c))/2);\n    return (s==d);\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpeff0ptqz: /tmp/tmpeff0ptqz.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here.\n    if(a>b+c) return false;\n\
    \    if(a>c) return false;\n    if(b>c) return false;\n    if(a==b || a==c ||\
    \ b==c) return false;\n    long m=(a+b+c)/2;\n    if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==c) return true;\n    else if(a==b && b==m) return true;\n\
    \    else if(a==m && b==\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyd5zkb3x.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpyd5zkb3x.cpp:53:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   53 | }\n      | ^\n/tmp/tmpyd5zkb3x.cpp:52:24:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   52 |     else if(a==m\
    \ && b==\n      |            ~           ^\n      |                        )\n\
    \   53 | }\n      | ~                       \n/tmp/tmpyd5zkb3x.cpp:53:1: error:\
    \ expected primary-expression before \u2018}\u2019 token\n   53 | }\n      | ^\n\
    /tmp/tmpyd5zkb3x.cpp:53:1: warning: control reaches end of non-void function [-Wreturn-type]\n\
    \   53 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660100054
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if((a < b) && (a < c)) {\n        long max = a;\n\
    \        if(b > c) {\n            max = b;\n        }\n        long mid = max\
    \ / 2;\n        if(mid % 2 == 0)\n            mid++;\n        if(mid == 1 || mid\
    \ == 3)\n            return true;\n        if(mid == 2)\n            return false;\n\
    \        while(true) {\n            if((max - mid * 2) % 2 == 0)\n           \
    \     break;\n            mid++;\n            if(mid == 1 || mid == 3)\n     \
    \           return true;\n            if(mid == 2)\n                return false;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpkddjp0at: /tmp/tmpkddjp0at.cpp:38: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  bool isRight = true;\n  long x = a + b;\n  long y =\
    \ b + c;\n  long z = c + a;\n  if (a == b == c) { // Equilateral triangle if all\
    \ sides are equal\n    isRight = true;\n  } else if (x > y) {\n    isRight = true;\n\
    \  } else if (y > z) {\n    isRight = true;\n  } else {\n    isRight = false;\n\
    \  }\n  return isRight;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmptveis4qi: /tmp/tmptveis4qi.cpp:29: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  // Triangle sides are a, b and c.\n  // Get the side's\
    \ length \n  long sa = abs(a), sb = abs(b), sc = abs(c);\n  // Calculate the sum\
    \ of the two sides lengths\n  long sab = sb + sa;\n  long scb = sc + sb;\n  //\
    \ Check if sums are equal\n  assert(sab == scb);\n  // Check if any of the two\
    \ sides is 90 degree\n  long ra = abs(a + b), rb = abs(b + c), rc = abs(c + a);\n\
    \  if (ra == rb) \n    return false;\n  if (ra == rc) \n    return true;\n  //\
    \ Check if any side is right angle\n  return abs(ra - sb) == abs(rb - sc) && abs(ra\
    \ - sc) == abs(rb - sa);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpsew80rma: /tmp/tmpsew80rma.cpp:18: bool right_angle_triangle(long int,
    long int, long int): Assertion `sab == scb'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // write your code here\n    if (a==b) \n        return\
    \ (c>a && c>b) || (c>b && c>a);\n    if (a==c || b==c) \n        return a==b;\n\
    \    return (a>c && b>c) || (b>c && a>c);\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmphnxj1fiu: /tmp/tmphnxj1fiu.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a + b < c){\n        //return true;\n        //return\
    \ false;\n        return ((a + b >= c) || ((b - a) > (c + b)));\n    }\n    if\
    \ (a + c < b){\n        //return true;\n        //return false;\n        return\
    \ ((a + c >= b) || ((c - a) > (b - c)));\n    }\n    if (b + c < a){\n       \
    \ //return true;\n        //return false;\n        return ((b + c >= a) || ((c\
    \ - b) > (a - c)));\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp19q86fvc: /tmp/tmp19q86fvc.cpp:30: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    return ((a + b > c) && (a + c > b) && (b + c > a));\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmph2g6z_ia: /tmp/tmph2g6z_ia.cpp:18: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100053
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    assert(a > 0 && b > 0 && c > 0);\n    if (a + b >=\
    \ c || b + c >= a || c + a >= b) {\n        return false;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpw1yp9vix: /tmp/tmpw1yp9vix.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\tlong long s = a + b + c;\n\treturn (s > 0) && ((s *\
    \ s) >= (a + b));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmptv4cwb8w: /tmp/tmptv4cwb8w.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here.\n    int x1, x2, x3;\n  \
    \  // x1 is the length of the side with length a, x2 the side with length \n \
    \   // b and x3 is the length of the side with length c\n    // if all sides are\
    \ equal the triangle is right angled\n    if (a==b and b==c and a>b and a>c){\n\
    \        return true;\n    }\n    else if (a>b and b>c and b>a){\n        return\
    \ true;\n    }\n    else if (a>c and c>a and c>b){\n        return true;\n   \
    \ }\n    else {\n        return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpu3g5arcc: /tmp/tmpu3g5arcc.cpp:31: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\t// Check that the lengths of the sides are no greater\
    \ than 1\n\tassert(a > 1 && b > 1 && c > 1);\n\t// Initialize the maximum length\
    \ of the side\n\tlong max_side = max(a, b, c);\n\t// Initialize the minimum length\
    \ of the side\n\tlong min_side = min(a, b, c);\n\t// If the two sides are equal,\
    \ return true\n\tif (a == b == c) {\n\t\treturn true;\n\t}\n\t// If the minimum\
    \ length of the side is greater than the maximum length\n\t// of the side, return\
    \ false\n\tif (min_side > max_side) {\n\t\treturn false;\n\t}\n\t// If the minimum\
    \ length of the side is less than the maximum length\n\t// of the side, return\
    \ true\n\tif (min_side < max_side) {\n\t\treturn true;\n\t}\n\t// Calculate the\
    \ area of the triangle\n\tdouble area_of_triangle = sqrt((double)(a * (a + b)));\n\
    \t// Calculate the area of the trapezoid\n\tdouble area_of_trapezoid = sqrt((double)((a\
    \ - b) * (b - c)));\n\t// If the area of the triangle is equal to the area of\
    \ the trapezoid\n\t// then it is a right-angled triangle\n\treturn area_of_triangle\
    \ == area_of_trapezoid;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyhi8rhgu.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpyhi8rhgu.cpp:14:18: error: \u2018max\u2019\
    \ was not declared in this scope; did you mean \u2018std::max\u2019?\n   14 |\
    \  long max_side = max(a, b, c);\n      |                  ^~~\n      |      \
    \            std::max\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyhi8rhgu.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n/tmp/tmpyhi8rhgu.cpp:16:18: error: \u2018\
    min\u2019 was not declared in this scope; did you mean \u2018std::min\u2019?\n\
    \   16 |  long min_side = min(a, b, c);\n      |                  ^~~\n      |\
    \                  std::min\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyhi8rhgu.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3456:5:\
    \ note: \u2018std::min\u2019 declared here\n 3456 |     min(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  // Write your code here\n  long sum = a+b+c;\n  long\
    \ side1 = (long ) sqrt(sum);\n  long side2 = side1;\n  long side3 = side1;\n\n\
    \  if(side1 == side2) {\n    if(side1 == side3)\n      return true;\n    return\
    \ false;\n  }\n\n  if(side2 == side3) {\n    if(side2 == side1)\n      return\
    \ true;\n    return false;\n  }\n\n  long min_side = side1;\n  long max_side =\
    \ side1;\n\n  if(side1 < side2) {\n    long temp = side1;\n    side1 = side2;\n\
    \    side2 = temp;\n  }\n\n  if(side1 < side3) {\n    long temp = side1;\n   \
    \ side1 = side3;\n    side3 = temp;\n  }\n\n  long min_side_ind = (long )max_side/2;\n\
    \  long max_side_ind = min_side_ind + 1;\n\n  while(min_side != max_side) {\n\
    \    while(side1 <= side2) {\n      if(side1 == side3)\n        return true;\n\
    \      side1++;\n    }\n    while(side3 <= side2) {\n      if(side2 == side1)\n\
    \        return true;\n      side3++;\n    }\n\n    while(side1 <= side3) {\n\
    \      if(side1 == side2)\n        return true;\n      side1++;\n    }\n    while(side2\
    \ <= side3) {\n      if(side3 == side1)\n        return true;\n      side2++;\n\
    \    }\n    min_side_ind--;\n    min_side = side1;\n    max_side = side1;\n\n\
    \    if(min_side == max_side) {\n      min_side_ind--;\n      min_side = side2;\n\
    \      max_side = side2;\n    }\n  }\n\n  return false;\n}\nint main() {\n   \
    \ auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuzww9684: /tmp/tmpuzww9684.cpp:85: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long s = (a + b + c) / 2;\n    return abs(s - a) ==\
    \ abs(s - b) == abs(s - c);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpa8ear7o1: /tmp/tmpa8ear7o1.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  int s = (c-a)/(b-a);\n  int t = (a-b)/(b-c);\n  int\
    \ u = (c-b)/(a-c);\n  if(s*(s-t)>0 && s*(s-u)*t>0&&t*(t-u)>0&&u*(s-u)*t>0)\n \
    \   return 1;\n  else\n    return 0;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpbuf0g0g0: /tmp/tmpbuf0g0g0.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a==b) //Equal Sides\n    {\n        if(a>c) //Equal\
    \ Angles\n            return true;\n        else\n            return false;\n\
    \    }\n    else //Not Equal Sides\n    {\n        if(a>c) //Not Equal Angles\n\
    \        {\n            if(b>c) //Not Equal Angles\n                return false;\n\
    \            else //Equal Angles\n                return true;\n        }\n  \
    \      else //Equal Angles\n        {\n            if(b>c) //Equal Angles\n  \
    \          {\n                if(a>c) //Not Equal Angles\n                   \
    \ return false;\n                else\n                    return true;\n    \
    \        }\n            else //Equal Angles\n            {\n                return\
    \ false;\n            }\n        }\n    }\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpv3j646we: /tmp/tmpv3j646we.cpp:45: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  if (a == b || a == c || b == c) return true;\n  if (a\
    \ > b + c && b > a + c && c > a + b) return true;\n  if (a > b + c && a > c +\
    \ b && b > c + a) return true;\n  if (a > b + c && a > c + b && b > a + c) return\
    \ true;\n  if (a > b + c && b > a + c && c > a + b) return true;\n  return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8iw32715: /tmp/tmp8iw32715.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == b && b == c || a == c && b == c || b == c\
    \ && a == b) {\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp3rhom5ox: /tmp/tmp3rhom5ox.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a <= 0 || b <= 0 || c <= 0) return false;\n  \
    \  long temp = a;\n    a = b;\n    b = c;\n    c = temp;\n    long s = a + b +\
    \ c;\n    if (s < 4) return true;\n    if (s >= 4) return false; // Not a right\
    \ angle triangle if sum < 4\n    long t = b + c + a;\n    if (t < 4) return true;\n\
    \    if (t >= 4) return false; // Not a right angle triangle if sum < 4\n    long\
    \ u = c - b - a;\n    if (u < 4) return true;\n    if (u >= 4) return false; //\
    \ Not a right angle triangle if sum < 4\n    long v = a + b - c;\n    if (v <\
    \ 4) return true;\n    if (v >= 4) return false; // Not a right angle triangle\
    \ if sum < 4\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmprbq7wu9z: /tmp/tmprbq7wu9z.cpp:32: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if((c>a && c>b) || (a>c && a>b))\n        return false;\n\
    \    else\n        return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpp4i0zomq: /tmp/tmpp4i0zomq.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  if ( (a == b) || (a == c) || (b == c)) return false;\n\
    \  \n  // Check for right angle\n  long temp = c;\n  if (b > a) temp = a;\n  if\
    \ (c > a) temp = c;\n  if (b == temp) return true;\n  \n  long temp2 = a;\n  if\
    \ (c > b) temp2 = b;\n  if (temp2 == temp) return true;\n  \n  temp2 = b;\n  if\
    \ (c > a) temp2 = c;\n  if (temp2 == temp) return true;\n  return false;\n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp2nm3pvrt: /tmp/tmp2nm3pvrt.cpp:31: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > 0 && b > 0 && c > 0) {\n        if ((a + b)\
    \ > c) {\n            if (b > c) {\n                if (a > c) {\n           \
    \         return true;\n                }\n            }\n            else if\
    \ (a > b) {\n                if (c > b) {\n                    return true;\n\
    \                }\n            }\n            else if (b > a) {\n           \
    \     if (c > a) {\n                    return true;\n                }\n    \
    \        }\n        }\n        else if (a > b) {\n            if (c > b) {\n \
    \               return true;\n            }\n        }\n        else if (a > c)\
    \ {\n            if (b > c) {\n                return true;\n            }\n \
    \       }\n    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpa5gc31wy: /tmp/tmpa5gc31wy.cpp:49: int main(): Assertion `candidate((10),
    (5), (7)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0)\n        return (b == 0 && c == 0) ? True\
    \ : false;\n    if (b == 0)\n        return (c == 0) ? True : false;\n    if (c\
    \ == 0)\n        return (a == 0) ? True : false;\n\n    long mid = (a + b + c)\
    \ / 2;\n    if (mid == 0)\n        return (a + b + c == 0) ? True : false;\n\n\
    \    if (a >= b)\n        return right_angle_triangle(c - mid, b, a);\n    return\
    \ right_angle_triangle(mid, c, b - mid);\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprpcv5o6e.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmprpcv5o6e.cpp:12:37: error: \u2018True\u2019\
    \ was not declared in this scope\n   12 |         return (b == 0 && c == 0) ?\
    \ True : false;\n      |                                     ^~~~\n/tmp/tmprpcv5o6e.cpp:14:27:\
    \ error: \u2018True\u2019 was not declared in this scope\n   14 |         return\
    \ (c == 0) ? True : false;\n      |                           ^~~~\n/tmp/tmprpcv5o6e.cpp:16:27:\
    \ error: \u2018True\u2019 was not declared in this scope\n   16 |         return\
    \ (a == 0) ? True : false;\n      |                           ^~~~\n/tmp/tmprpcv5o6e.cpp:20:35:\
    \ error: \u2018True\u2019 was not declared in this scope\n   20 |         return\
    \ (a + b + c == 0) ? True : false;\n      |                                  \
    \ ^~~~\n"
  stdout: ''
  timestamp: 1660100055
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\t// code here\n\treturn true;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp_mrxb9u_: /tmp/tmp_mrxb9u_.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if ((a > 0 && c > 0) || (a > 0 && b > 0 && c > 0))\
    \ {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyuhougfj: /tmp/tmpyuhougfj.cpp:21: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if ((a == 0) && (b == 0) || (b == 0) && (c == 0))\
    \ {\n        return false;\n    }\n    if (a == 0 && b != 0) {\n        return\
    \ true;\n    }\n    if (b == 0 && c != 0) {\n        return true;\n    }\n   \
    \ if (a != 0 && c != 0) {\n        return false;\n    }\n    if (a != 0) {\n \
    \       return false;\n    }\n    if (b != 0) {\n        return false;\n    }\n\
    \    if (c != 0) {\n        return false;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy8id80f: /tmp/tmpuy8id80f.cpp:36: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 && b == 0 && c == 0)\n        return false;\n\
    \n    long p = a + b + c;\n    long q = (long)sqrt((double)p * 2);\n    if (q\
    \ < a + b) return false;\n    if (q == a + b) \n        return true;\n\n    long\
    \ s = (a + b < c) ? q - b : q - a;\n\n    if (s == 0) return false;\n    long\
    \ t = s / 2;\n    if (p >= t) {\n        long ans = (t / q) * 2;\n        if (ans\
    \ != (int)ans) return false;\n    }\n\n    if (p > t) {\n        long ans = (q\
    \ / p) * 2;\n        if (ans != (int)ans) return false;\n    }\n\n    return true;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpwlnr0jtj: /tmp/tmpwlnr0jtj.cpp:38: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long ab = a-b;\n    long ac = a-c;\n    long bc =\
    \ b-c;\n    return (ab > 0 && ac > 0 && bc == 0) || (ab == 0 && ac > 0 && bc <\
    \ 0) || (ab > 0 && ac < 0 && bc == 0) || (ab == 0 && ac < 0 && bc == 0) || (ab\
    \ == 0 && ac == 0 && bc > 0) || (ab < 0 && ac > 0 && bc == 0) || (ab < 0 && ac\
    \ < 0 && bc == 0);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpt8q4g15j: /tmp/tmpt8q4g15j.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0)\n        return (b != 0 && c != 0);\n\
    \    else if (b == 0)\n        return (a!=0 && c != 0);\n    else if (c == 0)\n\
    \        return (a!=0 && b != 0);\n    return (a >= b && a >= c) || (a <= b &&\
    \ a <= c);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpe5sjax5t: /tmp/tmpe5sjax5t.cpp:22: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long u = (a + b + c) / 2;\n    return (a > b) && (b\
    \ > c) && (c > a) && (u - a) * (u - a) + (b - c) * (b - c) + (c - a) * (c - a)\
    \ <= 0;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpx3uph6yl: /tmp/tmpx3uph6yl.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\t// Conditions check\n\tif (a + b > c || b + c > a ||\
    \ a + c > b)\n\t\treturn false;\n\n\t// Formula for calculating the area of a\
    \ triangle\n\t// Source: Wikipedia\n\tlong s = (a + b) * (b + c) - (b * c) - (a\
    \ * b);\n\tif (s == 0)\n\t\treturn false;\n\n\t// Calculate area using the formula\
    \ \n\t// Source: Wikipedia\n\tdouble area = std::sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n\treturn area > 0;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpdbix47at: /tmp/tmpdbix47at.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    assert(a <= b and b <= c);\n    return (b - a) * (c\
    \ - a) <= 0;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n  \
    \  assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpcs4gu13c: /tmp/tmpcs4gu13c.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100056
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  // write your code here\n  assert(a >= 0);\n  assert(b\
    \ >= 0);\n  assert(c >= 0);\n  long l1=a, b1=b, l2=c, l3=c;\n  long d=l1*l1;\n\
    \  long e=l2*l2;\n  long f=l3*l3;\n  long g=d+e+f;\n  long h=(a*b)-(l1*l2);\n\
    \  long i=(a*c)-(l1*l3);\n  long j=(c*b)-(l2*l3);\n  long k=(c*c)-(l2*l3);\n \
    \ long l=(a*c)-(l1*l2);\n  long m=(a*b)-(l1*l3);\n  long n=(b*c)-(l2*l3);\n  long\
    \ m=l1*l1;\n  long n=l2*l2;\n  long o=l3*l3;\n  long p=(a*b)*(a*b)-(a*c)*(a*c)+(b*c)*(b*c)-(a*b*b)+(a*c*c)+(b*c*c)-(l1*l2*l3)+(l1*l2*l3)*l1*l2-(l1*l3*l3)*l1*l3;\n\
    \  long q=(a*c*a)*(a*c*a)+(a*c*b)*(a*c*b)+(a*c*c)*(a*c*c)+(b*c*c*b)*(b*c*c)-(a*c*a*b)-(a*b*a*b)+(a*b*a*b)*a^2+(a*b*a*c)*a^2+(a*b*a*c*b)*(a^2+b^2)+(a*b*a*c*b)*(b^2+c^2)+(a*c*a*b)*(c^2+d^2)+(b*c*a*b)*(a*c^2+b*d^2)+(b*c*a*c*b)*(b*c^2+c^2+d^2)+(b*c*a*c*c)*(b*c*c^2+c^2+d^2)+(a*b*a*c*c)*(a^2+b^2+c^2+d^2)+(a*c*a*b)*(b^2+c^2+d^2)+(a*c*a*c*b)*(c^2+d^2)+(b*c*a*c*b)*(b^2+\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplnc2368t.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmplnc2368t.cpp:27:8: error: redeclaration\
    \ of \u2018long int m\u2019\n   27 |   long m=l1*l1;\n      |        ^\n/tmp/tmplnc2368t.cpp:25:8:\
    \ note: \u2018long int m\u2019 previously declared here\n   25 |   long m=(a*b)-(l1*l3);\n\
    \      |        ^\n/tmp/tmplnc2368t.cpp:28:8: error: redeclaration of \u2018long\
    \ int n\u2019\n   28 |   long n=l2*l2;\n      |        ^\n/tmp/tmplnc2368t.cpp:26:8:\
    \ note: \u2018long int n\u2019 previously declared here\n   26 |   long n=(b*c)-(l2*l3);\n\
    \      |        ^\n/tmp/tmplnc2368t.cpp:32:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   32 | }\n      | ^\n/tmp/tmplnc2368t.cpp:31:363:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   31 |   long q=(a*c*a)*(a*c*a)+(a*c*b)*(a*c*b)+(a*c*c)*(a*c*c)+(b*c*c*b)*(b*c*c)-(a*c*a*b)-(a*b*a*b)+(a*b*a*b)*a^2+(a*b*a*c)*a^2+(a*b*a*c*b)*(a^2+b^2)+(a*b*a*c*b)*(b^2+c^2)+(a*c*a*b)*(c^2+d^2)+(b*c*a*b)*(a*c^2+b*d^2)+(b*c*a*c*b)*(b*c^2+c^2+d^2)+(b*c*a*c*c)*(b*c*c^2+c^2+d^2)+(a*b*a*c*c)*(a^2+b^2+c^2+d^2)+(a*c*a*b)*(b^2+c^2+d^2)+(a*c*a*c*b)*(c^2+d^2)+(b*c*a*c*b)*(b^2+\n\
    \      |                                                                     \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                             ~    ^\n      |\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                           )\n   32 | }\n   \
    \   | ~                                                                      \
    \                                                                            \
    \                            "
  stdout: ''
  timestamp: 1660100056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a+b > c) {\n        if(((a+b+c) <= (long)INT_MAX))\n\
    \            return true;\n        else\n            return false;\n    }\n  \
    \  if((c>(a+b)))\n        return false;\n    if((b>c))\n        return false;\n\
    \    if((a>c))\n        return false;\n    if((a<b) || (b<a) || (c<a))\n     \
    \   return false;\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpvbbl34lz: /tmp/tmpvbbl34lz.cpp:32: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    return (b - a) * (b - c) >= 0;\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp65d9ltqh: /tmp/tmp65d9ltqh.cpp:15: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    int count = 0;\n    for (long i = 1; i <= c; i++)\
    \ {\n        if (((b * b) - 4 * a * i) >= 0) {\n            count += 1;\n    \
    \    }\n    }\n    return (count == 2);\n}\nint main() {\n    auto candidate =\
    \ right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n   \
    \ assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdvpzu4va: /tmp/tmpdvpzu4va.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a+b>c || c+b>a || a+c>b) \n        return false;\n\
    \    else \n        return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmprj79b4kt: /tmp/tmprj79b4kt.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    return ((a + b > c) || (b + c > a) || (c + a > b));\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpg894e4fa: /tmp/tmpg894e4fa.cpp:16: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n     return (a + b > c) && (a + c > b) && (b + c > a);\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpax9l_ys2: /tmp/tmpax9l_ys2.cpp:18: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long d = b * b - 4 * a * c;\n    long sqrt_d = sqrt(d);\n\
    \    if (sqrt_d == 0) {\n        return false;\n    }\n    long e = sqrt_d / (2\
    \ * a);\n    long f = -b - e;\n    long g = -a + e;\n    long h = 0;\n    // Check\
    \ that the sum of the two sides of the triangle is zero.\n    if (f*f + g*g ==\
    \ 0){\n        if (f == 0 && g == 0){\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    }\n    long min = 0;\n    long\
    \ max = 0;\n    if (g > 0) {\n        h = 2 * a * g;\n        max = g;\n    }\
    \ else {\n        h = 2 * a * f;\n        max = f;\n    }\n    long mid = (max\
    \ + min) / 2;\n    long sum = 0;\n    long sum_f = 0;\n    long sum_g = 0;\n \
    \   if (h < 0) {\n        sum_f = h;\n    } else {\n        sum_g = h;\n    }\n\
    \    while ((sum_f + sum_g) != 0) {\n        if ((sum_f*sum_f + sum_g*sum_g) ==\
    \ 0) {\n            sum += mid;\n            break;\n        } else {\n      \
    \      int k = -1;\n            if (sum_f*sum_g < 0 && ((sum_f+min)%2 == 0) &&\
    \ !(sum_g*sum_f < 0 && ((sum_g+max)%2 == 0))){\n                k = sum_f;\n \
    \               sum_f = sum_g;\n                sum_g = k;\n            } else\
    \ if (sum_g*sum_f < 0 && ((sum_g+max)%2 == 0) && !(sum_f*sum_g < 0 && ((sum_f+min)%2\
    \ == 0))){\n                k = sum_g;\n                sum_g = sum_f;\n     \
    \           sum_f = k;\n            } else {\n                k = min;\n     \
    \           if (max != min) {\n                    while (sum_f*sum_f+sum_g*sum_g\
    \ == 0){\n                        k = k == min ? k+1 : k;\n                  \
    \      sum_f = k == min ? sum_f+1 : sum_f;\n                        sum_g = k\
    \ == min ? sum_g+1 : sum_g;\n                    }\n                }\n      \
    \          sum_f = k == min ? sum_f+1 : sum_f;\n                sum_g = k == min\
    \ ? sum_g+1 : sum_g;\n            }\n            mid = (k+mid)/2;\n          \
    \  if (h < 0){\n                sum_f = sum_f*mid+sum_g*mid;\n               \
    \ sum_g = sum_g*mid+sum_f*mid;\n            } else {\n                sum_f =\
    \ sum_f*mid+sum_\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpx4ykq_xj.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpx4ykq_xj.cpp:77:35: error: \u2018sum_\u2019\
    \ was not declared in this scope; did you mean \u2018sum_g\u2019?\n   77 |   \
    \              sum_f = sum_f*mid+sum_\n      |                               \
    \    ^~~~\n      |                                   sum_g\n/tmp/tmpx4ykq_xj.cpp:79:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   79 | int main() {\n      |            ^\n/tmp/tmpx4ykq_xj.cpp:92:1: error:\
    \ expected \u2018}\u2019 at end of input\n   92 | }\n      | ^\n/tmp/tmpx4ykq_xj.cpp:50:16:\
    \ note: to match this \u2018{\u2019\n   50 |         } else {\n      |       \
    \         ^\n/tmp/tmpx4ykq_xj.cpp:92:1: error: expected \u2018}\u2019 at end of\
    \ input\n   92 | }\n      | ^\n/tmp/tmpx4ykq_xj.cpp:46:34: note: to match this\
    \ \u2018{\u2019\n   46 |     while ((sum_f + sum_g) != 0) {\n      |         \
    \                         ^\n/tmp/tmpx4ykq_xj.cpp:92:1: error: expected \u2018\
    }\u2019 at end of input\n   92 | }\n      | ^\n/tmp/tmpx4ykq_xj.cpp:10:51: note:\
    \ to match this \u2018{\u2019\n   10 | bool right_angle_triangle(long a, long\
    \ b, long c) {\n      |                                                   ^\n\
    /tmp/tmpx4ykq_xj.cpp:92:1: warning: control reaches end of non-void function [-Wreturn-type]\n\
    \   92 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660100057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long ans;\n    ans = (a + b > c) && (a + c > b) &&\
    \ (b + c > a);\n    return ans;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmplvvoydt5: /tmp/tmplvvoydt5.cpp:20: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    int x, y, z;\n    x = b - a;\n    y = c - b;\n   \
    \ z = x - y;\n    if (z > 0) {\n        return (x < 0 && y > 0 || x > 0 && y <\
    \ 0) && z % 2 != 0;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpesyly2ag: /tmp/tmpesyly2ag.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\t// Write your code here.\n\tassert(a != 0 && b != 0\
    \ && c != 0);\n\tlong sum = b + c;\n\tif (a == b && a == c) return true;\n\tif\
    \ (a == b || a == c || b == c) return false;\n\treturn (sum % 2) == 1;\n}\nint\
    \ main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpn_5ts7ee: /tmp/tmpn_5ts7ee.cpp:21: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // write your code here\n    // a<=b<=c\n    if (a\
    \ > b) {\n        if (a>c) {\n            return true;\n        }\n    }\n   \
    \ if (b > c) {\n        if (b>a) {\n            return true;\n        }\n    }\n\
    \    if (a == b) {\n        return true;\n    }\n    if (a == c) {\n        return\
    \ true;\n    }\n    if (b == c) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp83yrmfjc: /tmp/tmp83yrmfjc.cpp:36: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n   if((a + b > c) && (a + c > b) && (b + c > a)) {\n \
    \     return true;\n   } else {\n      return false;\n   }\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp3g2580kr: /tmp/tmp3g2580kr.cpp:22: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  // Calculate the area of parallelogram for given sides\n\
    \  long area_par = std::abs(a) + std::abs(b) + std::abs(c);\n  // Calculate area\
    \ of triangle formed by three sides\n  long area_tri = std::abs(a + b) + std::abs(b\
    \ + c);\n  // Return True if area of triangle is same as area of parallelogram\n\
    \  return area_par == area_tri;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp9wv4fyub: /tmp/tmp9wv4fyub.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your logic here\n    bool flag = false;\n\
    \    if ( (a <= 0 ) || (b <= 0 ) || (c <= 0 ) ){\n        flag = false;\n    }\n\
    \    else{\n        flag = true;\n    }\n    return flag;\n}\nint main() {\n \
    \   auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpya_mcqu6: /tmp/tmpya_mcqu6.cpp:24: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\tassert(b != c && b != a && c != a && c != b);\n\treturn\
    \ (a < c ? a < b : a < b) ? a < c : b < c;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpmt_9zq5c: /tmp/tmpmt_9zq5c.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100057
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long x = min(a, b, c);\n    long y = max(a, b, c);\n    long z = (a + b +\
    \ c) / 2;\n    return (x > y && x > z && y > z);\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv6nl1asw.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpv6nl1asw.cpp:13:14: error: \u2018min\u2019\
    \ was not declared in this scope; did you mean \u2018std::min\u2019?\n   13 |\
    \     long x = min(a, b, c);\n      |              ^~~\n      |              std::min\n\
    In file included from /usr/include/c++/9/algorithm:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpv6nl1asw.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3456:5: note: \u2018\
    std::min\u2019 declared here\n 3456 |     min(initializer_list<_Tp> __l, _Compare\
    \ __comp)\n      |     ^~~\n/tmp/tmpv6nl1asw.cpp:14:14: error: \u2018max\u2019\
    \ was not declared in this scope; did you mean \u2018std::max\u2019?\n   14 |\
    \     long y = max(a, b, c);\n      |              ^~~\n      |              std::max\n\
    In file included from /usr/include/c++/9/algorithm:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpv6nl1asw.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5: note: \u2018\
    std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp> __l, _Compare\
    \ __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660100057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // write your code here\n    if(a<0){\n        a=-a;\n\
    \    }\n    if(b<0){\n        b=-b;\n    }\n    if(c<0){\n        c=-c;\n    }\n\
    \    if(a>c && a>b){\n        return true;\n    }\n    if(b>c && b>a){\n     \
    \   return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp5nel6bec: /tmp/tmp5nel6bec.cpp:31: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a>b+c) {\n        return false;\n    }\n    if\
    \ (b>a+c) {\n        return false;\n    }\n    if (a>b+c) {\n        return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpj6o20j6a: /tmp/tmpj6o20j6a.cpp:25: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long d = b*b - 4*a*c;\n    // if d == 0 the triangle\
    \ is valid\n    if (d > 0) return true;\n    long sqrtD = sqrt(d);\n    bool right\
    \ = sqrtD >= ((a + b + c) / 2);\n    // if right == true then it is the right\
    \ angled triangle\n    if (right == true) return true;\n    return false;\n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpisp9cgzw: /tmp/tmpisp9cgzw.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if ( ( a >  b ) && ( a >  c ) && ( b >  c ) ) {\n\
    \        return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpwv1bo9or: /tmp/tmpwv1bo9or.cpp:19: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\treturn ((a + b) <= c && (c + b) <= a && (c + a) <= b)\
    \ || \n\t\t((a + b) <= c && (a + c) <= b && b > a && b > c) || \n\t\t((a + b)\
    \ <= c && (c + a) <= b && (c + b) <= a && b > c);\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpp5y6e806: /tmp/tmpp5y6e806.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // code here\n    long sum = 0;\n    long sq = a *\
    \ a+b * b+c * c;\n    for(long i=1; i<=sq; i++){\n        sum += i;\n        \n\
    \    }\n    if(sq % 2 == 0){\n        if((sum * b + sum * c) % (2 * sum) == 0)\n\
    \            return true;\n    }\n    return false;\n    \n}\nint main() {\n \
    \   auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjpt8_473: /tmp/tmpjpt8_473.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    return (b==c || b==a || c==a);\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpox7bzq2h: /tmp/tmpox7bzq2h.cpp:15: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\t// code here\n\tlong side1 = (a + b > c) ? c - b : (b\
    \ + c) > a ? c - b : 0;\n\tlong side2 = (b + c > a) ? b - c : (a+c) > b ? b -\
    \ c : 0; \n\tlong side3 = (c + a > b) ? a - c : (b+a) > c ? a - c : 0;\n\tif (side1\
    \ == side2) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpwgs357ub: /tmp/tmpwgs357ub.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    return (b - c) * (b - a) + (b + c) * (a - b) == 0;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp6f7w2vfp: /tmp/tmp6f7w2vfp.cpp:15: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  // Write your code here\n  long s = (a + b + c) / 2;\n\
    \  if (s == a)\n    return a > b;\n  if (s == b)\n    return a > c;\n  if (s ==\
    \ c)\n    return b > c;\n  return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjdmmgxx3: /tmp/tmpjdmmgxx3.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0) return false;\n  \
    \  if (abs(a) > abs(b) && abs(a) > abs(c)) return false;\n    long x1, x2, x3;\n\
    \    if (b > c)\n    {\n        x1 = a;\n        x2 = c;\n        x3 = b;\n  \
    \  } else {\n        x1 = c;\n        x2 = b;\n        x3 = a;\n    }\n    if\
    \ (a * b > a * c)\n    {\n        return false;\n    }\n    long y = a * b / c;\n\
    \    long r = sqrt(x * x + y * y);\n    return abs(a - c) * r <= abs(b - a);\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpynvlbo8o.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpynvlbo8o.cpp:29:19: error: \u2018x\u2019\
    \ was not declared in this scope\n   29 |     long r = sqrt(x * x + y * y);\n\
    \      |                   ^\n"
  stdout: ''
  timestamp: 1660100057
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  assert (a > 0) && \"Length of one side should be greater\
    \ than zero\";\n  assert (b > 0) && \"Length of other side should be greater than\
    \ zero\";\n  assert (c > 0) && \"Length of other side should be greater than zero\"\
    ;\n  if(b <= a || b <= c || c <= a || c <= b)\n    return false;\n  else\n   \
    \ return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp_xv5phya.cpp:2:\n/tmp/tmp_xv5phya.cpp: In function \u2018bool\
    \ right_angle_triangle(long int, long int, long int)\u2019:\n/tmp/tmp_xv5phya.cpp:11:3:\
    \ error: could not convert \u2018((a > 0) ? (void)0 : __assert_fail(((const char*)\"\
    a > 0\"), ((const char*)\"/tmp/tmp_xv5phya.cpp\"), 11, ((const char*)(& __PRETTY_FUNCTION__))))\u2019\
    \ from \u2018void\u2019 to \u2018bool\u2019\n   11 |   assert (a > 0) && \"Length\
    \ of one side should be greater than zero\";\n      |   ^~~~~~\n/tmp/tmp_xv5phya.cpp:12:3:\
    \ error: could not convert \u2018((b > 0) ? (void)0 : __assert_fail(((const char*)\"\
    b > 0\"), ((const char*)\"/tmp/tmp_xv5phya.cpp\"), 12, ((const char*)(& __PRETTY_FUNCTION__))))\u2019\
    \ from \u2018void\u2019 to \u2018bool\u2019\n   12 |   assert (b > 0) && \"Length\
    \ of other side should be greater than zero\";\n      |   ^~~~~~\n/tmp/tmp_xv5phya.cpp:13:3:\
    \ error: could not convert \u2018((c > 0) ? (void)0 : __assert_fail(((const char*)\"\
    c > 0\"), ((const char*)\"/tmp/tmp_xv5phya.cpp\"), 13, ((const char*)(& __PRETTY_FUNCTION__))))\u2019\
    \ from \u2018void\u2019 to \u2018bool\u2019\n   13 |   assert (c > 0) && \"Length\
    \ of other side should be greater than zero\";\n      |   ^~~~~~\n"
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long d = abs(a - c);\n\
    \    long e = abs(b - c);\n    long f = abs(c - a);\n    long g = abs(d - e);\n\
    \    long h = abs(e - b);\n    long i = abs(f - g);\n    long j = abs(f - h);\n\
    \    long k = abs(g - h);\n\n    if (d > e && d > f && d > g) {\n        return\
    \ true;\n    }\n    else if (e > f && e > g && e > h) {\n        return true;\n\
    \    }\n    else if (f > g && f > h && f > i) {\n        return true;\n    }\n\
    \    else if (g > h && g > i && g > j) {\n        return true;\n    }\n    else\
    \ if (h > i && h > j && h > k) {\n        return true;\n    }\n    else if (i\
    \ > j && i > k && i > d) {\n        return true;\n    }\n    else {\n        return\
    \ false;\n    }\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpt4en8clq: /tmp/tmpt4en8clq.cpp:46: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long s = 0;\n    long d = c - a + 1;\n    long k =\
    \ b - a + 1;\n    s = 2 * (a + b) / d;\n    if (s % 2 == 0) return false;\n  \
    \  if (k == 0) return true;\n    if (s == 0) return false;\n    long m = ((a +\
    \ b) / k);\n    long n = (d - 2 * (s * k)) / k;\n    return n > 0;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpbh951ilk: /tmp/tmpbh951ilk.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  long sum = a + b + c;\n  return (a == sum || b == sum\
    \ || c == sum);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpglukdpoo: /tmp/tmpglukdpoo.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\treturn ((a + b > c) && (a + c > b) && (b + c > a));\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp68fvnaz1: /tmp/tmp68fvnaz1.cpp:18: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a <= 0)\n        return false;\n    if (b <= 0)\n\
    \        return false;\n    if (c <= 0)\n        return false;\n    \n    long\
    \ ac = a*a;\n    long bc = b*c;\n    long cb = c*b;\n    long acb = ac + cb;\n\
    \    long acbc = acb + bc;\n    long abc = a*b + a*c;\n    long abbc = abc + bc;\n\
    \    long cabc = acbc + abc;\n    long abcab = abc + abb;\n    \n    if (acbc\
    \ >= abcab)\n        return true;\n    else\n        return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjk1_sn64.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpjk1_sn64.cpp:26:24: error: \u2018abb\u2019\
    \ was not declared in this scope; did you mean \u2018abbc\u2019?\n   26 |    \
    \ long abcab = abc + abb;\n      |                        ^~~\n      |       \
    \                 abbc\n"
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\tlong long sum = a+b+c;\n\tlong long diff = a-b; // Subtract\
    \ b\n\tlong long diff_2 = b-c; // Subtract c\n\tlong long diff_3 = c-a; // Subtract\
    \ a\n\tlong long diff_4 = a-b; // Subtract b\n\tlong long diff_5 = b-c; // Subtract\
    \ c\n\tlong long diff_6 = c-a; // Subtract a\n\tlong long diff_7 = a-b; // Subtract\
    \ b\n\tlong long diff_8 = b-c; // Subtract c\n\tlong long diff_9 = c-a; // Subtract\
    \ a\n\tlong long diff_10 = a-b; // Subtract b\n\tlong long diff_11 = b-c; // Subtract\
    \ c\n\tlong long diff_12 = c-a; // Subtract a\n\tlong long diff_13 = a-b; // Subtract\
    \ b\n\tlong long diff_14 = b-c; // Subtract c\n\tlong long diff_15 = c-a; // Subtract\
    \ a\n\t\n\treturn ( ((diff*diff + diff_2*diff_2 )==sum) && ( (diff_3*diff_3 +\
    \ diff_4*diff_4)==sum) && ( (diff_5*diff_5 + diff_6*diff_6)==sum) && ( (diff_7*diff_7\
    \ + diff_8*diff_8)==sum) && ( (diff_9*diff_9 + diff_10*diff_10)==sum) && ( (diff_11*diff_11\
    \ + diff_12*diff_12)==sum) && ( (diff_13*diff_13 + diff_14*diff_14)==sum) && (\
    \ (diff_15*diff_15 + diff_12*diff_12)==sum) );\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp7fgg4_11: /tmp/tmp7fgg4_11.cpp:32: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100058
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a==0 || b==0 || c==0)\n        return false;\n\
    \    int ans=1;\n    long long t=(long)sqrt(a*(long) b*(long) c);\n    long long\
    \ s1=a-t;\n    long long s2=b-t;\n    long long s3=c-t;\n    if(s1*(long)s2<0){\n\
    \        if(s1==0 && s2==0)\n            ans=0;\n        else if(s1==0 && s2==c)\n\
    \            ans=0;\n        else if(s1==c && s2==0)\n            ans=0;\n   \
    \     else if(s1==c && s2==c)\n            ans=0;\n        else\n            ans=false;\n\
    \    }\n    else \n        ans=false;\n    \n    if(ans==false)\n        return\
    \ false;\n    else\n        return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp_gimp5yf: /tmp/tmp_gimp5yf.cpp:40: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if((a-b)>0)\n        if((b-c)>0)\n            if((c-a)>0)\n\
    \                return true;\n            else\n                return false;\n\
    \        else\n            return false;\n    else\n        return false;\n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp6ghiz2tl: /tmp/tmp6ghiz2tl.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    // https://discuss.codechef.com/questions/48567/check-whether-a-given-triangle-is-right-angled-triangle-in-c\n\
    \    if(a>b||b>c||a>c||b<0){\n        return false;\n    }\n    if(a<b&&b<c&&a<c){\n\
    \        return true;\n    }\n    if(a==b||a==c){\n        return true;\n    }\n\
    \    if(a>b&&b>c&&b>c){\n        return false;\n    }\n    if(a<b&&b<c&&c<b){\n\
    \        return false;\n    }\n    if(a==b||a==c||b==c){\n        return false;\n\
    \    }\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpo_t1sfxm: /tmp/tmpo_t1sfxm.cpp:35: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long ab = abs(b - c);\n    long ac = abs(a - c);\n\
    \    return ((ab >= ac) || (ab == 0 && ac == 0));\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpxilb4na9: /tmp/tmpxilb4na9.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here.\n    long long int a1 = a/2,\
    \ a2 = a1 % 2, a3 = a2 % 2;\n    long long int b1 = b/2, b2 = b1 % 2, b3 = b2\
    \ % 2;\n    long long int c1 = c/2, c2 = c1 % 2, c3 = c2 % 2;\n    if((a1*b2+a2*b3+a3*b1)\
    \ % (2*c3) != 0)\n        return false;\n    return true;\n}\nint main() {\n \
    \   auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c)\n        return 1;\n    if (b\
    \ > c && b > a)\n        return 1;\n    if (c > a && c > b)\n        return 1;\n\
    \    if (a == b || a == c || b == c)\n        return 0;\n    return 1;\n}\nint\
    \ main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmplbnquue8: /tmp/tmplbnquue8.cpp:24: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(( b == c && (a + b) == c )\n    || (b != c && (a\
    \ + c) == c )\n    || (b != c && (a + b) == c ))\n        return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmply8az42x: /tmp/tmply8az42x.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  long square_of_a = std::pow(a, 2);\n  long square_of_b\
    \ = std::pow(b, 2);\n  long square_of_c = std::pow(c, 2);\n  long three_of_a_plus_b_minus_c_squared\
    \ =\n    square_of_a + square_of_b - square_of_c;\n  return (square_of_a + square_of_b\
    \ - square_of_c) == (three_of_a_plus_b_minus_c_squared);\n}\nint main() {\n  \
    \  auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi518j9zq: /tmp/tmpi518j9zq.cpp:21: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (((b - a) * (c - b) == 0) || ((c - a) * (b - a)\
    \ == 0))\n        return false; // two sides are equal or 0\n    if (((b - a)\
    \ * (b - a) == 0) || ((c - a) * (c - a) == 0))\n        return false; // two sides\
    \ are equal or 0\n    // Triangle is valid if one side is 90 degree or right angled.\n\
    \    long ab = abs((b - a));\n    long bc = abs((b - c));\n    if (ab == bc) {\n\
    \        long ac = abs((c - a));\n        if (ab * ac == (b * b)) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp2xp0_5va: /tmp/tmp2xp0_5va.cpp:31: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long temp = (a+b+c)/2;\n\
    \    return (((b+c)/2 == (a+b)) ||((b+c)/2 == (a-c)) || ((b+c)/2 == (a+c)) ||\
    \ ((b+c)/2 == (a-c)));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpm2mgniaf: /tmp/tmpm2mgniaf.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long s = a + b + c;\n    long sq = s * (s - a) * (s\
    \ - b) * (s - c);\n    long r = sqrt(sq);\n    if (r >= 0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpa42sthy3: /tmp/tmpa42sthy3.cpp:21: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // TODO: Write your code here\n    // return ((b -\
    \ a) == (-b + c)) || ((b - a) == (-b - c)) || ((b - a) == b + c);\n    if(a==b\
    \ && b==c){\n        return true;\n    }\n    else if(a==b || a==c || b==c){\n\
    \        return false;\n    }\n    else if(a>b && a>c){\n        return true;\n\
    \    }\n    else{\n        return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpc27jkawk: /tmp/tmpc27jkawk.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  // Using assert (A better solution would be to write\
    \ a function\n  // which checks for right-angled triangles, rather than asserting\
    \ \n  // that they all have 90\xB0 angles. We are just writing this to\n  // demonstrate\
    \ the concept of assert in this problem.)\n  // Think carefully about the case\
    \ in which a + b + c = 0.\n  // You are not going to find any solution because\
    \ that case is impossible\n  // using 3 parameters.\n  assert(a + b + c != 0);\n\
    \  // Now we know that a + b + c != 0 is impossible.\n  // So what about a + b\
    \ + c != c? What about a + b + c = 0?\n  // To find those cases, we will use assert\
    \ again.\n  assert(a + b + c != c);\n  assert(a + b + c != 0);\n  assert(a + b\
    \ + c != a + b);\n  assert(a + b + c != b + c);\n  assert(a + b + c != a + c);\n\
    \  return a == b;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpwvg8g0a3: /tmp/tmpwvg8g0a3.cpp:31: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long d= (a + b + c) / 2;\n    long long temp\
    \ = a;\n    a = b;\n    b = c;\n    c = temp;\n    long long e = a;\n    a = b;\n\
    \    b = d;\n    d = e;\n    e = d;\n    long long f = a;\n    a = c;\n    c =\
    \ f;\n    f = a;\n    long long g = b;\n    b = c;\n    c = g;\n    g = b;\n \
    \   long long h = c;\n    c = d;\n    d = h;\n    long long i = d;\n    d = e;\n\
    \    e = i;\n    long long j = a;\n    a = b;\n    b = c;\n    c = j;\n    j =\
    \ a;\n    return ((a + b + c) == (a + 2 * b + 2 * c + d)) &&\n           ((a +\
    \ b + c) == (a + 3 * b + 3 * c + e)) &&\n           ((a + b + c) == (a + 4 * b\
    \ + 4 * c + f)) &&\n           ((a + b + c) == (a + 5 * b + 5 * c + g)) &&\n \
    \          ((a + b + c) == (a + 6 * b + 6 * c + h)) &&\n           ((a + b + c)\
    \ == (a + 7 * b + 7 * c + i)) &&\n           ((a + b + c) == (a + 8 * b + 8 *\
    \ c + j));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpze8asb6q: /tmp/tmpze8asb6q.cpp:50: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\tif (b == 0) return (a == 0 || b == 0);\n\tif (a == 0\
    \ || c == 0) return (b == 0 || c == 0);\n\tlong s = (a + b + c) / 2;\n\treturn\
    \ ((s > a) && (s > b) && (s > c));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpd2ur6eiq: /tmp/tmpd2ur6eiq.cpp:21: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n\tif (a == b || a == c || b == c)\n\t\treturn false;\n\
    \tlong angle1, angle2, angle3, angle4, angle5, angle6, angle7, angle8;\n\tangle1\
    \ = abs(b - c);\n\tangle2 = abs((a - (-b)) / c);\n\tangle3 = abs((a - (b - c))\
    \ / b);\n\tangle4 = abs((b - c) / a);\n\tangle5 = abs((b - (a + c)) / c);\n\t\
    angle6 = abs((a + (b - c)) / b);\n\tangle7 = abs((a + (b + c)) / c);\n\tangle8\
    \ = abs((b - (a - c)) / c);\n\n\t// If all angles are 90 degrees then it's a right\
    \ angle triangle.\n\tif ((angle1 == angle2 && angle2 == angle3 && angle3 == angle4\
    \ && angle4 == angle5 && angle5 == angle6 && angle6 == angle7 && angle7 == angle8)\
    \ || \n\t\t\t(angle1 == angle3 && angle3 == angle4 && angle4 == angle5 && angle5\
    \ == angle6 && angle6 == angle7 && angle7 == angle8))\n\t\treturn true;\n\telse\n\
    \t\treturn false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpiq2ssc0x: /tmp/tmpiq2ssc0x.cpp:32: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == b) \n        return true; // base case\n\
    \    if (a == c || b == c) \n        return false; // Base Case\n    long x =\
    \ (b - a + b - c) / (2 * a);\n    if (a == x)\n        return true;\n    if (b\
    \ == x)\n        return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp7r6vb25r: /tmp/tmp7r6vb25r.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  long long sum = a+b+c;\n  // Return False if sum is\
    \ divisible by 3 or if any two of the sides are 90.\n  return (sum % 3 ==0 ||\
    \ abs(a-c)>180 || abs(b-c)>180 || abs(a-b)>180);\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpzfpjk6fr: /tmp/tmpzfpjk6fr.cpp:18: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if ((b - a) * (c - b) <= 0) {\n        return false;\n\
    \    }\n    long temp = (a + b + c) / 2;\n    return (temp == (b + c)) || (temp\
    \ == (c - b));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp6goe92a9: /tmp/tmp6goe92a9.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == b)\n        return false;\n    if (a == c)\n\
    \        return true;\n    if (b == c)\n        return true;\n    if (a == 0)\n\
    \        return false;\n    if (b == 0)\n        return false;\n    if (c == 0)\n\
    \        return false;\n    if (a < 0)\n        a = -a; \n    if (b < 0)\n   \
    \     b = -b; \n    if (c < 0)\n        c = -c; \n    if ((a + b > c) || (a +\
    \ c > b) || (b + c > a)) {\n        return false;\n    } else {\n        return\
    \ true;\n    }\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpss1635hw: /tmp/tmpss1635hw.cpp:37: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n  if (a + b > c || b + c > a || c + a > b)\n    return\
    \ false;\n  // We use modulo math to make sure the sum of the three sides is in\
    \ range, \n  // even if any of the three sides are zero.\n  return (a + b + c)\
    \ % 360 == 0;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n \
    \   assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpsk030lg_: /tmp/tmpsk030lg_.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long ab = (a + b < c) ? a + b : c;\n    long ac =\
    \ (a + c < b) ? a + c : b;\n    long abc = (ab + c < ab) ? ab + c : ab;\n    return\
    \ (a + b < c && a + c < b && (ab + c < ab) && (ab + c < abc));\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpm0159ac8: /tmp/tmpm0159ac8.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if((a>=0 && b >= 0 && c >=0)&&(a<=b && b <= c&&a<=c)){\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyednoavn: /tmp/tmpyednoavn.cpp:19: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long d = (long)sqrt(pow(b, 2.0) + pow(c, 2.0));\n\
    \    if (a == 0 || b == 0 || c == 0 || d == 0)\n        return false;\n    if\
    \ ((b - c < a) || (c - b < a) || (b - c < d))\n        return false;\n    return\
    \ true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpu0bqmsxv: /tmp/tmpu0bqmsxv.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// right_angle_triangle(3,\
    \ 4, 5) == True\n// right_angle_triangle(1, 2, 3) == False\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // The sides are in counterclockwise direction.\n\
    \    // Triangle is drawn counterclockwise.\n    // Angle of line from x-axis\
    \ to any point is PI/4\n    long theta = (a + b + c) / 2;\n    long delta = (a\
    \ + b) - (long) (theta * theta);\n    return (delta >= 0 && delta <= (long)((long)\
    \ (a - b) * (b - c)));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpnps6o411: /tmp/tmpnps6o411.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100060

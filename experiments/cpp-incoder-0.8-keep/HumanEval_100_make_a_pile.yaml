name: HumanEval_100_make_a_pile
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
  \ n, you have to make a pile of n levels of stones.\n// The first level has n stones.\n\
  // The number of stones in the next level is:\n// - the next odd number if n is\
  \ odd.\n// - the next even number if n is even.\n// Return the number of stones\
  \ in each level in a list, where element at index\n// i represents the number of\
  \ stones in the level (i+1).\n// Examples:\n// >>> make_a_pile(3)\n// [3, 5, 7]\n\
  std::vector<long> make_a_pile(long n) {\n"
tests: "}\nint main() {\n    auto candidate = make_a_pile;\n    assert(candidate((3))\
  \ == (std::vector<long>({3, 5, 7})));\n    assert(candidate((4)) == (std::vector<long>({4,\
  \ 6, 8, 10})));\n    assert(candidate((5)) == (std::vector<long>({5, 7, 9, 11, 13})));\n\
  \    assert(candidate((6)) == (std::vector<long>({6, 8, 10, 12, 14, 16})));\n  \
  \  assert(candidate((8)) == (std::vector<long>({8, 10, 12, 14, 16, 18, 20, 22})));\n\
  }\n"
completions: []
stop_tokens:
- "\n}"

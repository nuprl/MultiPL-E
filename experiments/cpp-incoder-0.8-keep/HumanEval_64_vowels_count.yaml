name: HumanEval_64_vowels_count
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function vowels_count\
  \ which takes a string representing\n// a word as input and returns the number of\
  \ vowels in the string.\n// Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here,\
  \ 'y' is also a\n// vowel, but only when it is at the end of the given word.\n//\
  \ Example:\n// >>> vowels_count(\"abcde\")\n// 2\n// >>> vowels_count(\"ACEDY\"\
  )\n// 3\nlong vowels_count(std::string s) {\n"
tests: "}\nint main() {\n    auto candidate = vowels_count;\n    assert(candidate((\"\
  abcde\")) == (2));\n    assert(candidate((\"Alone\")) == (3));\n    assert(candidate((\"\
  key\")) == (2));\n    assert(candidate((\"bye\")) == (1));\n    assert(candidate((\"\
  keY\")) == (2));\n    assert(candidate((\"bYe\")) == (1));\n    assert(candidate((\"\
  ACEDY\")) == (3));\n}\n"
completions: ["    assert(s.size() > 0 && s.size() <= 500);\n    long vowels = 0;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] == 'Y' || s[i] == 'y')\
    \ {\n            vowels++;\n        }\n    }\n    return vowels;", "  long count\
    \ = 0;\n  s.erase(s.find_last_not_of(\"aeiouAEIOU\"), std::string::npos);\n  for\
    \ (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n      count++;\n    }\n  }\n  return\
    \ count;", "    int count = 0;\n    for (int i = 0; i < s.size(); i++) {\n   \
    \     if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n            count++;\n        }\n    }\n    return count;", "    int\
    \ vowels[] = { 'a', 'e', 'i', 'o', 'u', 'y' };\n    long vowels_count = 0, length\
    \ = 0;\n    length = s.length();\n    \n    for (int i = 0; i < length; i++) {\n\
    \        vowels_count = 0;\n        for (int j = 0; j < 4; j++) {\n          \
    \  if (s[i] == vowels[j]) vowels_count++;\n        }\n        if (vowels_count\
    \ == 4) {\n            vowels_count = 0;\n        }\n    }\n    \n    return vowels_count;",
  "    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s.at(i)\
    \ == 'a' || s.at(i) == 'e' || s.at(i) == 'i' || s.at(i) == 'o' || s.at(i) == 'u')\
    \ {\n            count++;\n        }\n    }\n    return count;", "    long ans\
    \ = 0;\n    for (auto &c: s)\n    {\n        if (c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u')\n            ans++;\n    }\n    return ans;", " \
    \ // Your code goes here\n  return 0;", "    long cnt = 0;\n    for (int i = 0;\
    \ i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u' || (s[i - 1] == 'y' && s[i - 1] == 'e')) {\n \
    \           cnt++;\n        }\n    }\n    return cnt;", "  // Write your code\
    \ here\n  long vowels = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \  vowels++;\n    }\n  }\n  return vowels;", "    long vowel_count = 0;\n    if\
    \ (s.size() == 0)\n        return 0;\n    for (int i = 0; i < s.size(); i++) {\n\
    \        if (isalpha(s[i])) {\n            if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u')\n                vowel_count++;\n    \
    \    }\n    }\n    return vowel_count;", "    long count = 0;\n    int c = 0;\n\
    \    while(c < s.length()) {\n        if (s[c] == 'a' || s[c] == 'e' || s[c] ==\
    \ 'i' || s[c] == 'o' || s[c] == 'u') {\n            count++;\n        }\n    \
    \    c++;\n    }\n    return count;", "  // your code goes here\n  long count\
    \ = 0;\n  \n  for (int i = 0; i < s.length(); i++) {\n    if ((s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') && s[i + 1] != 'y')\
    \ {\n      count++;\n    }\n  }\n\n  return count;", "  int n = s.size();\n  long\
    \ long ans = 0;\n  for (int i = 0; i < n; i++) {\n    if (isvowel(s[i])) {\n \
    \     ans++;\n    }\n  }\n  return ans;", "    int count = 0;\n    // Implement\
    \ the function here\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] ==\
    \ 'y') {\n            count++;\n        }\n    }\n    return count;", "  int i,\
    \ count = 0;\n  assert(s.size() > 0 && \"Size of input string cannot be zero.\"\
    );\n  assert(s.at(0) == s.at(s.size()) - \"y\" && \"The first letter must be\"\
    \ +\n          \" the same as the last.\");\n  for (i = 1; i < s.size(); i++)\
    \ {\n    if (s.at(i) == s.at(i + 1)) {\n      count++;\n    }\n  }\n  return count;",
  "  long count = 0;\n  for (size_t i = 0; i < s.length(); i++) {\n    if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' ||\n       \
    \ s[i] == 'Y') {\n      count++;\n    }\n  }\n  return count;", "    long vowels_counter\
    \ = 0;\n    for (size_t i = 0; i < s.length(); i++) {\n        switch (s[i]) {\n\
    \        case 'a':\n        case 'e':\n        case 'i':\n        case 'o':\n\
    \        case 'u':\n            vowels_counter++;\n        }\n    }\n    return\
    \ vowels_counter;", '    // code here', "  assert(s.size());\n  int count = 0;\n\
    \  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      count++;\n    }\n  }\n \
    \ return count;", "    int count = 0;\n    for (auto c: s)\n        count += (c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y');\n    return\
    \ count;", "  // Write your code here\n  long vowels = 0;\n  for (char c : s)\
    \ {\n    if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n     \
    \ vowels += 1;\n  }\n  return vowels;", "    // Write your code here\n    int\
    \ count = 0;\n    for (int i = 0; i < s.size(); i++) {\n        char c = s[i];\n\
    \        switch(c) {\n            case 'a':\n            case 'e':\n         \
    \   case 'i':\n            case 'o':\n            case 'u':\n                count++;\n\
    \                break;\n            default:\n                break;\n      \
    \  }\n    }\n    return count;", "    int count = 0;\n    for (auto i : s) {\n\
    \        if (i == 'a' || i == 'e' || i == 'i' || i == 'o' || i == 'u') {\n   \
    \         count++;\n        }\n    }\n    return count;", "    int count = 0;\n\
    \    for (size_t i = 0; i < s.size(); i++) {\n        if (isvowel(s[i])) {\n \
    \           count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    for (auto i : s) {\n        if (i == 'a' || i == 'e' || i == 'i' ||\
    \ i == 'o' || i == 'u')\n            count++;\n    }\n    return count;", "  \
    \  long count = 0;\n    int i = 0; // index for s\n    long c = 0; // index for\
    \ vowels\n    long pos = 0; // index for word\n    while ((i < s.size()) && (s[i]\
    \ != '\\0')) { // find '\\0' and count vowels\n        long pos = 0;\n       \
    \ while (s[i] == s[pos]) { // find vowels\n            pos = pos + 1;\n      \
    \  }\n        // if position is at the end of word, vowel is found\n        if\
    \ (pos == (s.size() - 1)) {\n            count += 1;\n        }\n        i = i\
    \ + 1;\n    }\n    return count;", "    // code here\n    long count = 1;\n  \
    \  for (char &c: s) {\n        if (std::strchr(\"aeiouy\", c)) {\n           \
    \ count += 1;\n        }\n    }\n    return count;", "    long sum = 0;\n    long\
    \ size = s.size();\n    for (long i = 0; i < size; i++) {\n        if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n       \
    \     sum++;\n        }\n    }\n    return sum;", "    assert(s.size() > 0);\n\
    \    long cnt = 0;\n    for (auto &c: s) {\n        switch(c){\n            case\
    \ 'a':\n            case 'e':\n            case 'i':\n            case 'o':\n\
    \            case 'u':\n                cnt += 1;\n                break;\n  \
    \          case 'y':\n                if(s.size() > 1){\n                    cnt\
    \ += 1;\n                }\n                break;\n            default:\n   \
    \             std::cout << \"Case not handled: \" << c << std::endl;\n       \
    \ }\n    }\n    return cnt;", "    long vowel_count=0;\n    for(long i=0;i<s.length();i++){\n\
    \        if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u'){\n\
    \            vowel_count++;\n        }\n    }\n    return vowel_count;", "   \
    \ // code here\n    long vowel_count=0;\n    int i=0;\n    char ch;\n    for (i=0;i<s.size();i++){\n\
    \        ch=s[i];\n        if(ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u') vowel_count++;\n\
    \    }\n    return vowel_count;", "    // Complete this function\n    // Do not\
    \ modify or delete this function\n    int count = 0;\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    for (int i = 0; s[i]; ++i) {\n        if\
    \ (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\
    \            count++;\n        }\n    }\n    return count;", "    long vowels\
    \ = 0;\n    for (char &c: str2char(s)) {\n        if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n\
    \    return vowels;", "    long vowels_count = 0;\n    for (auto it = s.begin();\
    \ it != s.end(); ++it) {\n        if ((*it == 'a') || (*it == 'e') || (*it ==\
    \ 'i') || (*it == 'o') || (*it == 'u')) {\n            vowels_count += 1;\n  \
    \      }\n    }\n    return vowels_count;", "    long vowels = 0;\n    for (long\
    \ i = 0; i < s.size(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n\
    \    }\n    return vowels;", "    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            count++;\n        }\n    }\n    return count;",
  "    long count = 0;\n    // Write your code here.\n    for(auto i : s)\n    {\n\
    \        if(i == 'a' || i == 'e' || i == 'i' || i == 'o' || i == 'u')\n      \
    \      count++;\n    }\n    return count;", "  // your code goes here\n  long\
    \ count=0;\n  for(int i=0;i<s.size();i++)\n  {\n    if(s[i]=='a' || s[i]=='e'\
    \ || s[i]=='i' || s[i]=='o' || s[i]=='u')\n    {\n      count++;\n    }\n  }\n\
    \  if(s[s.size()-1]=='y')\n  {\n    count++;\n  }\n  return count;", "       \
    \ long count = 0;\n        std::string vowels = \"aeiou\";\n        size_t vowels_length\
    \ = vowels.size();\n        std::transform(s.begin(), s.end(), s.begin(), ::tolower);\n\
    \        for(auto iter = s.begin(); iter != s.end(); iter++) {\n             \
    \   if(std::find(vowels.begin(), vowels.end(), *iter) != vowels.end()) {\n   \
    \                     count++;\n                }\n        }\n        return count;",
  "    long count = 0;\n    for (char &ch : s)\n        if ('a' <= ch && ch <= 'z')\
    \ ++count;\n    return count;", "    \n    // Complete this function\n    long\
    \ vowels = 0;\n    \n    for (const char &i : s) {\n        if (i == 'a' || i\
    \ == 'e' || i == 'i' || i == 'o' || i == 'u')\n            vowels++;\n    }\n\
    \    return vowels;", "    // code here\n    long count=0;\n    int count1=0;\n\
    \    for(int i=0;i<s.length();i++){\n        if(s[i]=='a' || s[i]=='e' || s[i]=='i'\
    \ || s[i]=='o' || s[i]=='u'){\n            count+=1;\n        }\n        if(s[i]=='y'\
    \ && i+1<s.length() && s[i]==s[i+1])\n            count1+=1;\n    }\n    \n  \
    \  return count;", "    int i,j,l,n,flag=0;\n    n=s.length();\n    for(i=1;i<n;i++)\n\
    \    {\n        flag=0;\n        for(j=i;j<n;j++)\n        {\n            if(s[i]==s[j])\n\
    \            {\n                flag=1;\n                break;\n            }\n\
    \        }\n        if(flag==0)\n        {\n            break;\n        }\n  \
    \  }\n    l=(i-1);\n    return l;", "    long vowelCount = 0;\n    for (auto &c\
    \ : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            vowelCount++;\n        }\n    }\n    return vowelCount;", " \
    \   long vowelCount = 0;\n    for (int i = 0; i < s.length(); i++)\n    {\n  \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u')\n        {\n            vowelCount++;\n        }\n    }\n    return vowelCount;",
  "   long v = 0;\n   for (char &c : s) {\n      v += (c =='a' || c =='e' || c=='i'\
    \ || c =='o' || c =='u') ? 1 : 0;\n   }\n   return v;", "    // Your code here\n\
    \    long count=0;\n    for(int i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'\
    \ || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u')\n        {\n          \
    \  count+=1;\n        }\n    }\n    return count;", "    // your code goes here\n\
    \    assert(s.size() >= 3);\n    long n = 0;\n    for (int i = 0; i < s.size();\
    \ ++i) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            n += 1;\n        }\n    }\n    if (s.substr(s.size()-1)\
    \ == 'y') {\n        n += 1;\n    }\n    return n;", "    long count = 0;\n  \
    \  for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n\
    \        }\n    }\n    return count;", "    long vowels_count = 0;\n    for (long\
    \ i = 0; i < s.length(); i++) {\n        if ((s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') && i != s.length() - 1)\n            vowels_count++;\n\
    \    }\n    return vowels_count;", "    long cnt = 0;\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (isalpha(s.at(i)) && s.at(i) == s.at(i + 1) ==\
    \ 'a') {\n            cnt += 1;\n        }\n        if (isalpha(s.at(i)) && s.at(i)\
    \ == s.at(i + 1) == 'e') {\n            cnt += 1;\n        }\n        if (isalpha(s.at(i))\
    \ && s.at(i) == s.at(i + 1) == 'i') {\n            cnt += 1;\n        }\n    \
    \    if (isalpha(s.at(i)) && s.at(i) == s.at(i + 1) == 'o') {\n            cnt\
    \ += 1;\n        }\n        if (isalpha(s.at(i)) && s.at(i) == s.at(i + 1) ==\
    \ 'u') {\n            cnt += 1;\n        }\n        if (s.at(i) == 'y') {\n  \
    \          if (s.at(i + 1) == 'a' || s.at(i + 1) == 'e'\n                    ||\
    \ s.at(i + 1) == 'i' || s.at(i + 1) == 'o'\n                    || s.at(i + 1)\
    \ == 'u') {\n                cnt += 1;\n            }\n        }\n    }\n    return\
    \ cnt;", "  int n=s.length();\n  long cnt=0;\n  \n  for (int i=0;i<n;i++)\n  {\n\
    \    if (s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u')\n    cnt++;\n\
    \  }\n  return cnt;", "    long count = 0;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            count++;\n        }\n    }\n    return count;",
  "  // Complete the code here\n  long ans = 0;\n  for (int i = 0; i < s.size(); i++)\
    \ {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n      ans += 1;\n    }\n  }\n  return ans;", "    // Your code here\n\
    \    long count = 0;\n    for (int i = 0; i < s.size(); i++) {\n        std::string\
    \ vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"};\n        bool flag = false;\n\
    \        for (int j = 0; j < vowels.size(); j++) {\n            if (s[i] == vowels[j])\
    \ {\n                flag = true;\n                break;\n            }\n   \
    \     }\n        if (flag) {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count=0,i;\n    for(i=0;i<s.size();i++){\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'){\n\
    \            count++;\n        }\n        if(s[i]=='y'){\n            if(i+1<s.size()\
    \ && s[i]=='y'){\n                i++;\n                count++;\n           \
    \ }\n        }\n    }\n    return count;", "    int vowels[5] = {0, 0};\n    int\
    \ len = s.length();\n    // count the number of vowels in the string\n    for\
    \ (int i = 0; i < len; ++i) {\n        vowels[s[i]-'a']++;\n    }\n    // return\
    \ the number of vowels\n    return vowels[0];", "    std::map<char, long> mp;\n\
    \    long ans = 0;\n    for (char c : s) {\n        mp[c] ? mp[c]++: mp[c] = 1;\n\
    \        if (mp[c] == 4) {\n            ans++;\n        }\n    }\n    return ans;",
  "    long vowels = 0;\n    std::string vowels = \"aeiouAEIOU\";\n    for (size_t\
    \ i = 0; i < s.length(); i++) {\n        if (vowels.find(s[i]) != std::string::npos)\n\
    \            vowels++;\n    }\n    return vowels;", "    long count = 0;\n   \
    \ for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n            count++;\n    }\n\
    \    return count;", "    long ans=0;\n    for(int i=0;i<s.size();i++){\n    \
    \    for(int j=0;j<8;j++){\n            if(s[i]==vowels[j])\n                ans++;\n\
    \        }\n    }\n    return ans;", "    // code goes here\n    long count =\
    \ 0;\n    char vowels[] = {'a', 'e', 'i', 'o', 'u'};\n    for (const auto& ch:\
    \ s) {\n        for (auto it = std::begin(vowels); it != std::end(vowels); it++)\
    \ {\n            if (ch == *it) {\n                count++;\n                break;\n\
    \            }\n        }\n    }\n    return count;", "  assert(s.size() != 0);\n\
    \  int vowel_count = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \  vowel_count++;\n    }\n  }\n  return vowel_count;", "  // Use strlen to get\
    \ the length of the string.\n  // Initialize count to 0.\n  long count = 0;\n\
    \  // Use a for loop to iterate over all characters in the string s.\n  for (char\
    \ c : s) {\n    // Use isalpha to check if the character is an alphabet letter.\n\
    \    // Use tolower to convert the character to lower case.\n    if (std::isalpha(c))\
    \ {\n      // Use c to access the character at index 0 from the string\n     \
    \ // and check if it is vowel.\n      if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n        // If c is a vowel, add 1 to count.\n     \
    \   count++;\n      }\n    }\n  }\n  // Return the value.\n  return count;", " \
    \   // Write your code here.\n    long ans = 0;\n    for(char i : s){\n      \
    \  if(i == 'a' || i == 'e' || i == 'i' || i == 'o' || i == 'u'){\n           \
    \ ans++;\n        }\n    }\n    return ans;", "  int c = 0;\n  for (int i = 0;\
    \ i < s.length(); i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u') {\n      c++;\n    }\n  }\n  return c;", "    long\
    \ vowels = 0;\n    for (std::size_t i = 0; i < s.length(); i++) {\n        if\
    \ (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' ||\
    \ s[i] == 'y') {\n            vowels += 1;\n        }\n    }\n    return vowels;",
  "    int vowels_count = 0;\n    for (auto &letter : s) {\n        vowels_count =\
    \ letter == 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter ==\
    \ 'u' ? vowels_count + 1 : vowels_count;\n    }\n    return vowels_count;", " \
    \   long count = 0;\n    for(char c: s) {\n        if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            count++;\n        }\n    }\n\
    \    return count;", "  // Declare a character array to store vowels count.\n\
    \  char vowels[] = {'a', 'e', 'i', 'o', 'u'};\n  // Declare a boolean array to\
    \ store vowels count.\n  bool count[10]={0};\n  // Initialize a variable called\
    \ vowels_count to 0.\n  long vowels_count = 0;\n  // For loop to traverse the\
    \ string character by character.\n  for (int i = 0; i < s.length(); i++) {\n \
    \   // Check if the character is vowel or not.\n    if (std::find(vowels, vowels\
    \ + 7, s[i]) != vowels + 7) {\n      // If it's vowel, increase vowels_count by\
    \ 1.\n      count[static_cast<int>(s[i])]++;\n    }\n  }\n  // Use a for loop\
    \ to traverse the boolean array count.\n  for (int i = 0; i < 10; i++) {\n   \
    \ // If count[i] is greater than 0, then increase vowels_count by 1.\n    if (count[i])\
    \ vowels_count++;\n  }\n  return vowels_count;", "    long vowels = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n      \
    \  }\n        if (s[i] == 'y' && s[i + 1] == 'a') {\n            vowels++;\n \
    \       }\n    }\n    return vowels;", "   assert(s.size() != 0);\n   long vowels\
    \ = 0;\n   for (auto &ch : s) {\n      if (ch == 'a' || ch == 'e' || ch == 'i'\
    \ || ch == 'o' || ch == 'u') {\n         vowels++;\n      }\n   }\n   return vowels;",
  "    int n = s.size();\n    long count = 0;\n    for (int i = 0; i != n; ++i) {\n\
    \        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u')\n            count++;\n    }\n    return count;", "    long long int\
    \ count=0;\n    for(int i=0; i<s.length(); i++) {\n        if(s[i]=='a' || s[i]=='e'\
    \ || s[i]=='i' || s[i]=='o' || s[i]=='u' || s[i]=='y') {\n            count++;\n\
    \        }\n    }\n    return count;", "\tlong n = 0;\n\tfor (int i = 0; i < s.length();\
    \ i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u') {\n\t\t\tn++;\n\t\t}\n\t}\n\treturn n;", "    long n = 0;\n   \
    \ for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            n++;\n    \
    \    }\n    }\n    return n;", "    long count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u')\n            count++;\n    }\n    return count;", "    int len\
    \ = s.size();\n    long ret=0;\n    for(int i=0;i<len;i++) {\n        char ch\
    \ = s[i];\n        if('a' <= ch && ch <= 'z')\n            ++ret;\n        else\
    \ if('e' <= ch && ch <= 'z')\n            ++ret;\n        else if('o' <= ch &&\
    \ ch <= 'z')\n            ++ret;\n        else if('u' <= ch && ch <= 'z')\n  \
    \          ++ret;\n        else if('y' <= ch && ch <= 'z')\n            ++ret;\n\
    \    }\n    return ret;", "    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            count++;\n        }\n    }\n    return count;",
  "    int count_vowel = 0;\n    int vowel = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        switch (s[i]) {\n        case 'a':\n        case 'e':\n    \
    \    case 'i':\n        case 'o':\n        case 'u':\n            count_vowel++;\n\
    \            break;\n        case 'y':\n            if (i == s.length() - 1) {\n\
    \                count_vowel++;\n            }\n            break;\n        default:\n\
    \            break;\n        }\n    }\n    return count_vowel;", "    long cnt=0;\n\
    \    for(char ch:s){\n        if(ch == 'a' || ch == 'e' || ch == 'i' || ch ==\
    \ 'o' || ch == 'u'){\n            cnt++;\n        }\n        if(ch == 'y'){\n\
    \            cnt +=2;\n        }\n    }\n    return cnt;", "    // code here\n\
    \    long vowel_count = 0;\n    for(auto i : s)\n    {\n        if(std::find(std::begin(vowels),\
    \ std::end(vowels), i) != std::end(vowels))\n        {\n            vowel_count++;\n\
    \        }\n    }\n    return vowel_count;", "  int vowels[4] = {'a','e','i','o','u'};\n\
    \  int count = 0;\n  int i = 0;\n  while(s[i]) {\n      if(i<s.length()-1) {\n\
    \        if(s[i] == vowels[i] && s[i+1] == 'y')\n          count++;\n      }\n\
    \      i++;\n  }\n  return count;", "    std::stack<char> stk;\n    for (char\
    \ ch : s) {\n        if (isupper(ch))\n            stk.push(ch);\n        else\
    \ if (islower(ch))\n        {\n            char ch1 = stk.top();\n           \
    \ if (ch1 == 'a' || ch1 == 'e' || ch1 == 'i' || ch1 == 'o' || ch1 == 'u')\n  \
    \              stk.pop();\n            else\n                stk.push(ch);\n \
    \       }\n    }\n    return stk.size();", "  int vowel = 0;\n  for(int i = 0;i<s.size();i++)\
    \ {\n    if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n      vowel++;\n    }\n  }\n  return vowel;", "    long count = 0;\n\
    \    for (auto &c: s) {\n        if (std::tolower(c) == 'a' || std::tolower(c)\
    \ == 'e' || std::tolower(c) == 'i'\n            || std::tolower(c) == 'o' || std::tolower(c)\
    \ == 'u') {\n            ++count;\n        }\n    }\n    return count;", "   \
    \ long count = 0;\n    for (long i = 0; i < s.length(); i++) {\n        switch\
    \ (s.at(i)) {\n            case 'a':\n            case 'e':\n            case\
    \ 'i':\n            case 'o':\n            case 'u':\n                count++;\n\
    \                break;\n            case 'y':\n                if (i != s.length()\
    \ - 1 && s.at(i + 1) == 'y') {\n                    count++;\n               \
    \ }\n                break;\n        }\n    }\n    return count;", "  // Write\
    \ your code here.\n  if(s.size() > 0){\n    long count = 0;\n    char c;\n   \
    \ for (int i = 0; i<s.size(); i++){\n        c = s[i];\n        if(c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u'){\n            count = count +\
    \ 1;\n        }\n    }\n    return count;\n  }else{\n    return 0;\n  }", "  \
    \  long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        count++;\n        }\n    }\n    return count;", "    long vowelscount=\
    \ 0;\n    for(int i=0;i<s.length();i++)\n    {\n        if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n        {\n          \
    \  vowelscount++;\n        }\n    }\n    return vowelscount;", "  int vowels[]\
    \ = { 'a', 'e', 'i', 'o', 'u', 'y' };\n  int vowel_count = 0;\n  int length_s\
    \ = s.size();\n  for (int i = 0; i < length_s; ++i) {\n    if (vowels[s[i]]) vowel_count++;\n\
    \  }\n  return vowel_count;", "    // code here\n    \n    long vowel_count =\
    \ 0;\n    int vowels[] = {'a','e','i','o','u'};\n    for (int i = 0; i < s.length();\
    \ i++){\n        for (int j = 0; j < 5; j++){\n            if (s[i] == vowels[j]){\n\
    \                vowel_count++;\n            }\n        }\n    }\n    return vowel_count;",
  "  long v = 0;\n  for (size_t i = 0; i < s.size(); i++) {\n    if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      v++;\n  \
    \  }\n  }\n  return v;", "    long count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (isupper(s[i])) {\n            count++;\n        }\n    }\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'y') {\n    \
    \        count++;\n        }\n    }\n    return count;", "    // Your code here\n\
    \    long vowel_count = 0;\n    for (int i = 0; i < s.size(); i++) {\n       \
    \ if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n            vowel_count += 1;\n        }\n    }\n    return vowel_count;",
  "    std::set<char> vowels;\n    for (char c : s) {\n        switch (c) {\n    \
    \    case 'a':\n        case 'e':\n        case 'i':\n        case 'o':\n    \
    \    case 'u':\n            vowels.insert(c);\n        }\n    }\n    return std::count_if(s.begin(),\
    \ s.end(), [&vowels](char c) { return vowels.find(c) != vowels.end(); });", " \
    \   long res = 0;\n    char c;\n    for (char &c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y') {\n           \
    \ ++res;\n        }\n    }\n    return res;", "    long n = 0;\n    for (char\
    \ c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            n++;\n        }\n    }\n    return n;", "    int count = 0;\n\
    \    bool flag = false;\n    for (int i = 0; i < s.length(); i++) {\n        if\
    \ (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\
    \            if (!flag) {\n                flag = true;\n                count++;\n\
    \            }\n        } else {\n            if (flag) {\n                flag\
    \ = false;\n                count++;\n            }\n        }\n    }\n    return\
    \ count;", "    // Your code here\n    long count=0;\n    int i;\n    for(i=0;i<s.length();i++)\n\
    \    {\n        if(s[i]=='a'||s[i]=='A')\n        {\n            if(s[i]=='a'||s[i]=='A')\n\
    \            {\n                if(s[i]=='e'||s[i]=='E')\n                {\n\
    \                    if(s[i]=='e'||s[i]=='E')\n                    {\n       \
    \                 if(s[i]=='i'||s[i]=='I')\n                        {\n      \
    \                      if(s[i]=='i'||s[i]=='I')\n                            {\n\
    \                                if(s[i]=='o'||s[i]=='O')\n                  \
    \              {\n                                    if(s[i]=='o'||s[i]=='O')\n\
    \                                    {\n                                     \
    \   if(s[i]=='u'||s[i]=='U')\n                                        {\n    \
    \                                        if(s[i]=='u'||s[i]=='U')\n          \
    \                                  {\n                                       \
    \         count++;\n                                            }\n          \
    \                              }\n                                    }\n    \
    \                            }\n                            }\n              \
    \          }\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return count;", "  // Write code here\n  long sum = 0;\n  for\
    \ (int i = 0; i < s.size(); ++i) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] == 'Y') {\n      sum += 1;\n  \
    \  }\n  }\n  return sum;", "    long vowels = 0;\n    for (size_t i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    int vowel = 0;\n    for (int i = 0; i < s.length(); i++) {\n        char c\
    \ = s[i];\n        // check if c is vowel or not.\n        switch (c) {\n    \
    \    case 'a':\n        case 'e':\n        case 'i':\n        case 'o':\n    \
    \    case 'u':\n            vowel++;\n            break;\n        default:\n \
    \           i = s.length();\n            break;\n        }\n    }\n    return\
    \ vowel;", "    int n = s.size();\n    long count = 0;\n    int i;\n    for (i\
    \ = 0; i < n; i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n        if (s[i]\
    \ == 'y' && i + 1 < n) {\n            if (s[i + 1] == 'a' || s[i + 1] == 'e' ||\
    \ s[i + 1] == 'i' || s[i + 1] == 'o' || s[i + 1] == 'u') {\n                count++;\n\
    \            }\n        }\n    }\n    return count;", "  long count = 0 ;\n  for\
    \ (int i = 0 ; i < s.length() ; i++) {\n    int j = s[i] ;\n    if ( (j =='a')\
    \ || (j =='e') || (j =='i') || (j =='o') || (j =='u') ) {\n      count ++ ;\n\
    \    }\n  }\n  return count ;", "        long vowels = 0;\n        for(auto i:s)\
    \ {\n            if(isalpha(i)) {\n                if(islower(i)) {\n        \
    \            if(i == 'a' || i == 'e' || i == 'i' || i == 'o' || i == 'u')\n  \
    \                      vowels++;\n                }\n            }\n        }\n\
    \        return vowels;", "  long count = 0;\n  for (int i = 0; i < s.length();\
    \ i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u') {\n      count++;\n    }\n  }\n  return count;", "    long vowels\
    \ = 0;\n    for (char c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            vowels += 1;\n        }\n    }\n    return\
    \ vowels;", "  assert(s.size() >= 2);\n  bool a1 = s[0] == 'a';\n  bool e1 = s[0]\
    \ == 'e';\n  bool i1 = s[0] == 'i';\n  bool o1 = s[0] == 'o';\n  bool u1 = s[0]\
    \ == 'u';\n  bool a2 = s[1] == 'a';\n  bool e2 = s[1] == 'e';\n  bool i2 = s[1]\
    \ == 'i';\n  bool o2 = s[1] == 'o';\n  bool u2 = s[1] == 'u';\n  return a1 + e1\
    \ + i1 + o1 + u1 + a2 + e2 + i2 + o2 + u2;", "    long vowel_count = 0;\n    for\
    \ (size_t i = 0; i < s.length(); ++i) {\n        if (s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            ++vowel_count;\n\
    \        }\n    }\n    return vowel_count;", "    long count = 0;\n    std::string\
    \ vowels = \"aeiou\";\n    for (unsigned int i = 0; i < s.size(); i++) {\n   \
    \     if (s.substr(i, 1).find(vowels) != std::string::npos) {\n            count\
    \ += 1;\n        }\n    }\n    return count;", "    long ans = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        switch (s[i]) {\n        case 'a':\n\
    \        case 'e':\n        case 'i':\n        case 'o':\n        case 'u':\n\
    \            ans++;\n        }\n    }\n    return ans;", "    long count=0;\n\
    \    int i,j;\n    for(i=0;s[i]!='\\0';i++){\n        for(j=0;s[i]!=0;j++){\n\
    \            if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u'){\n\
    \                count++;\n            }\n        }\n    }\n    return count;",
  "    int count = 0;\n    for (int i = 0; i < s.length(); i++)\n    {\n        if\
    \ (isalpha(s[i]) && (s[i] != 'y' && s[i] != 'Y'))\n            count++;\n    }\n\
    \    return count;", "    long vowels = 0;\n    size_t pos = 0;\n    while(pos\
    \ < s.size()) {\n        if((s[pos] == 'a') || (s[pos] == 'e') || (s[pos] == 'i')\
    \ || (s[pos] == 'o') || (s[pos] == 'u'))\n            vowels++;\n        pos++;\n\
    \    }\n    return vowels;", "\tint i;\n\tint count = 0;\n\tbool yes = false;\n\
    \tfor(i = 0; i < s.length(); i++) {\n\t\tyes = false;\n\t\tif(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] == 'y') {\n\t\t\t\
    yes = true;\n\t\t}\n\t\telse if(!yes) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;", "  int vowel_counter = 0;\n  for (char c : s) {\n    if (c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n      vowel_counter++;\n  \
    \  }\n  }\n  return vowel_counter;", "    int count = 0;\n    for (int i = 0;\
    \ i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u')\n            count += 1;\n    }\n    return count;",
  "  // Your code goes here\n  int vowel = 0;\n  for (int i = 0; i < s.length(); i++)\
    \ {\n    if ((s[i] == 'a') || (s[i] == 'e') || (s[i] == 'i') || (s[i] == 'o')\
    \ || (s[i] == 'u')) {\n      vowel++;\n    }\n  }\n  return vowel;", "    long\
    \ ans = 0, i = 0;\n    std::string vowels = \"aeiouAEIOU\";\n    // Your code\
    \ goes here\n    for (auto c : s) {\n        ++i;\n        if (vowels.find(c)\
    \ != std::string::npos) ans++;\n        if (i ==2 && c == s.back()) ans++;\n \
    \   }\n    return ans;", "    int i, count, sum = 0;\n    for (i = 0; i < s.size();\
    \ i++) {\n        // If first letter is a vowel then add 1 to count.\n       \
    \ if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'\
    \ &&\n            i == (s.size() - 1) || s[i] == 'y') {\n            count++;\n\
    \        }\n        // If last letter is a vowel then add 1 to count.\n      \
    \  else if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u' &&\n            i == (s.size() - 1) || s[i] == 'y') {\n            count++;\n\
    \            sum++;\n        }\n        // If letter is neither first nor last\
    \ then add 0 to count.\n        else {\n            count = 0;\n        }\n  \
    \  }\n    return sum;", "    long count = 0;\n    int i=0;\n    while (i<s.length()){\n\
    \       if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u'){\n           count++;\n       }\n       i++;\n    }\n    return count;",
  "    long vowels = 0;\n    for (long i = 0; i < s.size(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        vowels++;\n        }\n    }\n    return vowels;", "\tlong count = 0;\n\
    \tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n\t\t\tcount++;\n\t}\n\treturn count;",
  "    long counter = 0;\n    for(char c : s){\n        if(c=='a' || c=='e' || c=='i'\
    \ || c=='o' || c=='u'){\n            counter++;\n        }\n    }\n    return\
    \ counter;", "    // TODO: Complete this function\n    long ans = 0;\n    for\
    \ (char c : s)\n    {\n        if (c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u')\n        {\n            ans += 1;\n        }\n    }\n    return\
    \ ans;", "    int count = 0, len = s.length();\n    for (int i = 0; i < len; i++)\
    \ {\n        char ch = s[i];\n        if ('a' <= ch && ch <= 'z') {\n        \
    \    count++;\n            if (s[i] == 'u')\n                count++;\n      \
    \  }\n    }\n    return count;", "    int count = 0;\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count=0,vowels[6];\n    int size=s.size();\n    for(int i=0;i<size;i++)\n\
    \    {\n        vowels[i]=0;\n        for(int j=0;j<6;j++)\n        {\n      \
    \      if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u' || s[i]=='y')\n\
    \            {\n                vowels[j]++;\n            }\n        }\n    }\n\
    \    for(int j=0;j<6;j++)\n    {\n        if(vowels[j]>count)\n        {\n   \
    \         count=vowels[j];\n        }\n    }\n    return count;", "  long count\
    \ = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      count++;\n   \
    \ }\n  }\n  return count;", "    long result = 0;\n    for (size_t i = 0; i <\
    \ s.length(); ++i) {\n        result += (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u');\n    }\n    return result;", "  int vowels[]\
    \ = { 'a', 'e', 'i', 'o', 'u' };\n  int n = s.size();\n  long ans = 0;\n  for\
    \ (int i = 0; i < n; i++) {\n    char ch = s[i];\n    for (int j = 0; j < sizeof(vowels);\
    \ j++) {\n      if (ch == vowels[j]) {\n        ans += 1;\n      }\n    }\n  }\n\
    \  return ans;", "    long count = 0;\n    for (int i = 0; i != s.length(); i++)\n\
    \    {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u')\n            count++;\n    }\n    return count;", "// Your code\
    \ here\n    long c=0;\n    int i, j;\n    for(i=0; i<s.length(); i++)\n    {\n\
    \        for(j=0; j<5; j++)\n        {\n            if(s[i]==='a'||s[i]==='e'||s[i]==='i'||s[i]==='o'||s[i]==='u')\n\
    \            {\n                c++;\n            }\n        }\n    }\n    return\
    \ c;", "    long ans = 0;\n    size_t last = 0, current = 0;\n    for (size_t\
    \ i = 0; i < s.length(); i++) {\n        current = s[i];\n        if (current\
    \ == 'a' || current == 'e' || current == 'i' || current == 'o' || current == 'u')\n\
    \            ans++;\n        else if (last == 'y')\n            ans++;\n     \
    \   last = current;\n    }\n    return ans;", "    long cnt = 0;\n    for (char\
    \ c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            cnt++;\n        }\n    }\n    return cnt;", "    // your code\
    \ goes here\n    \n    long vowels=0;\n    int i=0;\n    char ch;\n    while(i<s.size()){\n\
    \        ch=s[i];\n        if(ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u'){\n\
    \            vowels++;\n        }\n        i++;\n    }\n    return vowels;", " \
    \ long vowels = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (isupper(s[i])\
    \ && s[i] != 'Y') {\n      vowels += 1;\n    }\n  }\n  return vowels;", "    if\
    \ (s.length() <= 1) {\n        return 0;\n    }\n    int count = 0;\n    for (int\
    \ i = 0; i < (s.length() - 1); i++) {\n        if (s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n    \
    \    }\n    }\n    if (s[(s.length() - 1)] == 'y') {\n        count++;\n    }\n\
    \    return count;", "    long count = 0L;\n    long vowel_count = 1L;\n    long\
    \ index = s.length() - 1;\n    for (; index >= 0; index--) {\n        if (s[index]\
    \ == 'a' || s[index] == 'e' || s[index] == 'i' || s[index] == 'o' || s[index]\
    \ == 'u') {\n            vowel_count++;\n        }\n    }\n    return vowel_count;",
  "    long n = s.length();\n    long ans = 0;\n    for(long i = 0; i < n; i++) {\n\
    \        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            ans += 1;\n        }\n    }\n    return ans;", "  //\
    \ Write your code here\n  \n  long result = 0;\n  \n  for (int i = 0; i < (int)s.length();\
    \ i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u') {\n      result += 1;\n    }\n  }\n  \n  return result;", "  long\
    \ vowels_count = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      vowels_count++;\n\
    \    }\n  }\n  return vowels_count;", "    long count = 0;\n    for (auto c :\
    \ s) {\n        switch (c) {\n            case 'a':\n            case 'e':\n \
    \           case 'i':\n            case 'o':\n            case 'u':\n        \
    \        count++;\n                break;\n            case 'y':\n           \
    \     count += 2;\n                break;\n            default:\n            \
    \    assert(false);\n        }\n    }\n    return count;", "  int vowels[8] =\
    \ { 'a', 'e', 'i', 'o', 'u', 'y', 'a' };\n  int n = s.size();\n  long count =\
    \ 0;\n  for (int i = 0; i < n; i++) {\n    if (vowels[i] == s[n - 1 - i]) {\n\
    \      count++;\n    }\n  }\n  return count;", "    long count = 0;\n    for (size_t\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n \
    \   }\n    return count;", "    int n = s.length();\n    int count = 0;\n    for\
    \ (int i = 0; i < n; i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u')\n            count++;\n        if (s[i] ==\
    \ 'y')\n            count += 2;\n    }\n    return count;", "    // code here\n\
    \    long vowel_count = 0;\n    int size = s.length();\n    for(int i = 0; i <\
    \ size; i++) {\n        char c = s[i];\n        if(c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            vowel_count++;\n        }\n    \
    \    if(c == 'y') {\n            vowel_count++;\n        }\n    }\n    return\
    \ vowel_count;", "    long vowels = 0;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u')\n            vowels++;\n    }\n    return vowels;", "  // Your code\
    \ here\n  int count =0;\n  int length = s.length();\n  int flag =0;\n  for (int\
    \ i = 0; i < length ; i++)\n  {\n     if(s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u' )\n     {\n         flag =1;\n     }\n   \
    \  else if(flag == 1)\n     {\n         count ++;\n         flag =0;\n     }\n\
    \  }\n  return count;", "    // code here\n    long vowels=0;\n    int i;\n  \
    \  for(i=0;;i++){\n        if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o'\
    \ || s[i]=='u'){\n            vowels++;\n        }\n        else if(i==s.size()){\n\
    \            break;\n        }\n    }\n    return vowels;", "  // Your code here\n\
    \  return vowels.find(s.back()) != vowels.end();", "\tint vowel_count = 0;\n\t\
    for (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\t\t\tvowel_count++;\n\t\t}\n\t\
    }\n\treturn vowel_count;", "    long vowels= 0;\n    for (auto c: s) {\n     \
    \   if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n        \
    \    vowels++;\n        }\n    }\n    return vowels;", "    long vowel_count =\
    \ 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u')\n            vowel_count += 1;\n    }\n    return vowel_count;",
  "  assert(s.size() > 0);\n  int vowel_count = 0;\n  for (int i = 0; i < s.size();\
    \ i++) {\n    if (isalpha(s[i]))\n      if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u')\n        vowel_count++;\n  }\n  return\
    \ vowel_count;", "    long vowels = 0;\n    // write your code here\n    s.erase(std::remove_if(s.begin(),\
    \ s.end(), isspace), s.end());\n    for (auto letter : s) {\n        if (letter\
    \ == 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u')\
    \ {\n            vowels++;\n        }\n    }\n    return vowels;", "    long count\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        switch (s[i]) {\n\
    \            case 'a':\n            case 'e':\n            case 'i':\n       \
    \     case 'o':\n            case 'u':\n                count++;\n           \
    \     break;\n        }\n    }\n    return count;", "    long count = 0 ;\n  \
    \  // Your code goes here\n    for(const auto &i : s)\n    {\n        if(i ==\
    \ 'a' || i == 'e' || i == 'i' || i == 'o' || i == 'u')\n            count++ ;\n\
    \    }\n    return count ;", "    int vowels[] = {'a', 'e', 'i', 'o', 'u'};\n\
    \    long count = 0;\n    int len = s.length();\n\n    for (int i = 0; i < len;\
    \ i++) {\n        for (int j = 0; j < (len-i); j++) {\n            if (s.at(j)\
    \ == vowels[j]) {\n                count++;\n            }\n        }\n    }\n\
    \n    return count;", "    long count = 0;\n    for (int i = 0; i < s.size();\
    \ i++)\n    {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] ==\
    \ 'o' || s[i] == 'u')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;", "    int i;\n    int count = 0; // initialize count to 0\n \
    \   for (i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n            count++;\n    }\n\
    \    return count;", "    // Write your code here\n    long count = 0;\n    int\
    \ i = 0;\n    while ((i < s.length()) && (s[i] != '\\0')) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        count += 1;\n        }\n        i += 1;\n    }\n    return count;", " \
    \   long vowels = 0;\n    int len = s.length();\n    for (int i = 0; i < len;\
    \ i++) {\n        char c = s[i];\n        if ((c >= 'a' && c <= 'z') || (c >=\
    \ 'A' && c <= 'Z')) vowels += 1;\n        if ((c >= 'a' && c <= 'y') || (c >=\
    \ 'A' && c <= 'Z')) vowels += 1;\n    }\n    return vowels;", "    long ans =\
    \ 0;\n    for(int i = 0; i < s.size(); i++){\n        for(int j = 0; j < 5; j++){\n\
    \            if(s[i] == s[j]){\n                ans ++;\n            }\n     \
    \   }\n    }\n    return ans;", "    long ans = 0;\n    long i = 0;\n    while\
    \ (i < s.size()) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u' || s[i] == 'y') {\n            ans = ans + 1;\n      \
    \  }\n        i = i + 1;\n    }\n    return ans;", "    assert(!s.empty());\n\
    \    // Your code goes here\n    long count = 0;\n    for(char ch:s)\n       \
    \ if(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u')\n        \
    \    count++;\n    return count;", "  // code here\n  int count = 0, i = 0, j\
    \ = 0;\n  while (i + 1 < s.size() && s[i] != '\\0') {\n    if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] == 'y') {\n\
    \      count++;\n      i++;\n    } else if (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U' || s[i] == 'Y') {\n      count++;\n   \
    \   i++;\n    } else {\n      i++;\n    }\n  }\n  j = i;\n  while (j + 1 < s.size()\
    \ && s[j] != '\\0') {\n    if (s[j] == 'a' || s[j] == 'e' || s[j] == 'i' || s[j]\
    \ == 'o' || s[j] == 'u' || s[j] == 'y') {\n      count++;\n      j++;\n    } else\
    \ if (s[j] == 'A' || s[j] == 'E' || s[j] == 'I' || s[j] == 'O' || s[j] == 'U'\
    \ || s[j] == 'Y') {\n      count++;\n      j++;\n    } else {\n      j++;\n  \
    \  }\n  }\n  return count;", "  long vowels = 0;\n  for (auto it = s.begin();\
    \ it != s.end(); it++) {\n    vowels += std::find(\n        std::begin(s), std::end(s),\
    \ *it) != std::end(s);\n  }\n  return vowels;", '  // code here', "    int ans\
    \ = 0;\n    for (auto &ch: s) {\n        if (ch == 'a' || ch == 'e' || ch == 'i'\
    \ || ch == 'o' || ch == 'u') {\n            ans++;\n        }\n    }\n    return\
    \ ans;", "    long vowels=0;\n    for(char c:s)\n    {\n        if(c=='a' || c=='e'\
    \ || c=='i' || c=='o' || c=='u')\n        {\n            vowels++;\n        }\n\
    \    }\n    return vowels;", "  int n = s.size();\n  if (n==0) {\n    return 0;\n\
    \  }\n  \n  char ch;\n  long count = 0;\n  int i = 0;\n  while (i < n) {\n   \
    \ ch = s[i];\n    i = i + 1;\n    // skip the characters that are not vowels\n\
    \    if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n  \
    \    count = count + 1;\n    }\n  }\n  return count;", "  int n = s.size();\n\
    \  int count = 0;\n  for (int i = 0; i < n; i++)\n    if (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] == 'y')\n      count++;\n\
    \  return count;", "    long ans = 0;\n    for (int i = 0; i < s.size(); i++)\n\
    \        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u')\n            ans += 1;\n    return ans;", "  std::map<char, int> vowels;\n\
    \  \n  for (char c : s) {\n    if (vowels.find(c) == vowels.end()) vowels[c] =\
    \ 1;\n    else vowels[c]++;\n  }\n  \n  return vowels.size();", "    // code here\n\
    \    long n = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n         \
    \   n = n + 1;\n    }\n    return n;", "    long count=0,flag=0;\n    for(int\
    \ i=0;i<s.length();i++) {\n        switch(s[i]) {\n            case'a':\n    \
    \        case 'e':\n            case 'i':\n            case 'o':\n           \
    \ case 'u':\n                count++;\n                break;\n            case'y':\n\
    \                if(s[i]=='u')\n                    flag=1;\n                else\n\
    \                    flag=0;\n                break;\n            default:\n \
    \               break;\n        }\n    }\n    return count;", "    int count =\
    \ 0, i;\n    for(i = 0; i <= s.size(); i++)\n    {\n        for(char c : s)\n\
    \        {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u')\n            {\n                count++;\n                break;\n \
    \           }\n            else if (c == 'y')\n            {\n               \
    \ if (s.size() == i && s[i] != s[i-1])\n                {\n                  \
    \  count++;\n                    break;\n                }\n            }\n  \
    \      }\n    }\n    return count;", "    long c=0;\n    for(int i=0;i<s.length();i++)\
    \ {\n        if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u'\
    \ || s[i]=='y') {\n            c++;\n        }\n    }\n    return c;", "  // code\
    \ here\n  long res = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (isalpha(s.at(i))\
    \ || s.at(i) == s.at(i)) {\n      if (s.at(i) == 'a' || s.at(i) == 'e' || s.at(i)\
    \ == 'i' || s.at(i) == 'o' || s.at(i) == 'u') {\n        res += 1;\n      }\n\
    \    }\n  }\n  return res;", "    int count = 0, i = 0;\n    while (i < s.size()\
    \ && s[i] == 'a')\n        i++;\n    while (i < s.size() && s[i] == 'e')\n   \
    \     count++;\n    while (i < s.size() && s[i] == 'i')\n        count++;\n  \
    \  while (i < s.size() && s[i] == 'o')\n        count++;\n    while (i < s.size()\
    \ && s[i] == 'u')\n        count++;\n    if (i == s.size())\n        count++;\n\
    \    return count;", "    long count = 0;\n    for (size_t i = 0; i < s.size();\
    \ i++) {\n        switch (s[i]) {\n            case 'a':\n            case 'e':\n\
    \            case 'i':\n            case 'o':\n            case 'u':\n       \
    \         count++;\n                break;\n            case 'y':\n          \
    \      count++;\n                break;\n        }\n    }\n    return count;",
  "    long ans = 0;\n    for (auto c : s) {\n        switch (c) {\n            case\
    \ 'a':\n            case 'e':\n            case 'i':\n            case 'o':\n\
    \            case 'u':\n                break;\n            case 'y':\n      \
    \          ans = ans + 1;\n                break;\n            default:\n    \
    \            break;\n        }\n    }\n    return ans;", "  // Write your code\
    \ here\n  long vowels = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \  vowels += 1;\n    }\n  }\n  return vowels;", "    long vowels = 0;\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n      \
    \  }\n    }\n    return vowels;", "    long vowel = 0;\n    for (size_t i = 0;\
    \ i < s.length(); i++) {\n        std::string letter = s.substr(i, 1);\n     \
    \   if (letter == \"a\" || letter == \"e\" || letter == \"i\" || letter == \"\
    o\" || letter == \"u\") {\n            vowel++;\n        }\n    }\n    return\
    \ vowel;", "  int a=0, b=0;\n  int n=s.size();\n  for(int i=0; i<n; i++){\n  \
    \    if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u'){\n    \
    \      a++;\n      }\n      else if(s[i]=='y'){\n          if(s[i+1]=='a' || s[i+1]=='e'\
    \ || s[i+1]=='i' || s[i+1]=='o' || s[i+1]=='u'){\n              a++;\n       \
    \   }\n      }\n  }\n  return a;", "    long result = 0;\n    for (auto c : s)\
    \ {\n        result += (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u');\n\
    \    }\n    return result;", "    long vowels = 0;\n    \n    for (int i = 0;\
    \ i < s.length(); i++)\n    {\n        if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u')\n        {\n            vowels++;\n  \
    \      }\n    }\n    \n    return vowels;", "  // Write your code here\n  long\
    \ count = 0;\n  for(int i = 0; i < s.size(); i++){\n    if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\n      count++;\n    }\n\
    \  }\n  return count;", "    int i, count = 0;\n    for (i = 0; i < s.size();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            count++;\n        }\n    }\n    return count;",
  "    int a=0, b=0, c=0, d=0, e=0, f=0, g=0, h=0, i=0, j=0, k=0, l=0, m=0, n=0, o=0,\
    \ p=0, q=0, r=0, s=0, t=0, u=0, v=0, w=0, x=0;\n    for (string::iterator it=s.begin();\
    \ it!=s.end(); ++it) {\n        switch (*it) {\n            case 'a' : a++; break;\n\
    \            case 'e' : e++; break;\n            case 'i' : i++; break;\n    \
    \        case 'o' : o++; break;\n            case 'u' : u++; break;\n        \
    \    case 'y' : ++v; break;\n            default : break;\n        }\n    }\n\
    \    return v;", "    long ans = 0;\n    long vowels[26] = {\n        'a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u',\n        'A',\
    \ 'E', 'I', 'O', 'U', 'y', 'A', 'E', 'I', 'O', 'U', 'y', 'a', 'e', 'i', 'o', 'u',\n\
    \        'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U', 'a', 'e', 'i', 'o', 'u',\n        'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u',\n        'A', 'E',\
    \ 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i',\
    \ 'o', 'u',\n        'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u', 'A', 'E',\
    \ 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u',\n        'A', 'E', 'I', 'O', 'U', 'a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u',\n    \
    \    'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U',\
    \ 'a', 'e', 'i', 'o', 'u',\n        'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u',\n        'A', 'E', 'I',\
    \ 'O', 'U', 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o',\
    \ 'u',\n        'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U', 'a', 'e', 'i', 'o', 'u',\n        'A', 'E', 'I', 'O', 'U', 'a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u',\n        'A',\
    \ 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U', 'a', 'e',\
    \ 'i', 'o', 'u',\n        'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u',\n        'A', 'E', 'I', 'O', 'U',\
    \ 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u',\n\
    \        'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u', 'A', 'E", "  assert(s.size()\
    \ >= 3);\n  int count = 0;\n  for (int i = 0; i < s.size() - 1; i++)\n    count\
    \ += count_vowels(s[i]);\n  count += count_vowels(s[s.size() - 1]);\n  return\
    \ count;", "    long vowel_count = 0;\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            vowel_count++;\n        }\n    }\n    return vowel_count;",
  "    long count = 0;\n    for (char i : s) {\n        if (i == 'a' || i == 'e' ||\
    \ i == 'i' || i == 'o' || i == 'u') {\n            count++;\n        }\n    }\n\
    \    return count;", "    assert(s.size() > 0);\n    long count{0};\n    bool\
    \ yes_vowel = false;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            yes_vowel = true;\n    \
    \    }\n        else if (yes_vowel) {\n            if (c == 'y') {\n         \
    \       yes_vowel = false;\n            }\n            else {\n              \
    \  count++;\n            }\n        }\n        else {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0; // Initialize count\
    \ to zero.\n    for (int i = 0; i < s.length(); i++) { // For each character in\
    \ the string.\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] ==\
    \ 'o' || s[i] == 'u') {\n            count++;\n        }\n    }\n    return count;"]
stop_tokens:
- "\n}"

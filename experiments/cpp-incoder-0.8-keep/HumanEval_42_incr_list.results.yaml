language: cpp
name: HumanEval_42_incr_list
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size() > 0);\n    std::vector<long>\
    \ r(l.size() + 1, 0);\n    for (long i = 0; i < (long)l.size(); i++) {\n     \
    \   r[(int)(i + 1)] = l[i];\n    }\n    return r;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmp4glaxbr8: /tmp/tmp4glaxbr8.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r;\n    long i = 0;\n\
    \    for (auto elem : l) {\n        r[i] = elem + 1;\n        i++;\n    }\n  \
    \  return r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    res.reserve(l.size());\n\
    \    for (auto& i : l)\n        ++i;\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpd9laym18: /tmp/tmpd9laym18.cpp:18: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> v;\n    v.reserve(l.size()\
    \ + 1);\n    for (size_t i = 0; i <= l.size(); i++) {\n        v.push_back(l[i]\
    \ + 1);\n    }\n    return v;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  // First element of l is always 1.\n  l.push_back(1);\n\
    \  std::vector<long> result(l.size() - 1);\n  // Find element for which all consecutive\
    \ elements differ by 1.\n  for (size_t i = 1; i < l.size(); i++) {\n    if (l[i\
    \ - 1] != l[i]) {\n      result[i - 1] = l[i];\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpf3l__jgl: /tmp/tmpf3l__jgl.cpp:23: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> incr;\n    std::size_t\
    \ pos = 0;\n    for (auto &val : l) {\n        incr[pos++] = val + 1;\n    }\n\
    \    return incr;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    long sum = 0;\n    std::vector<long> result;\n\
    \    for (long i : l) {\n        sum += i;\n        result.push_back(sum);\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp6tkigao8: /tmp/tmp6tkigao8.cpp:20: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    for (auto i : l)\n        ++i;\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp4n5577sr: /tmp/tmp4n5577sr.cpp:16: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret;\n    for (long\
    \ x : l) {\n        ret.push_back(x+1);\n    }\n    return ret;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  auto new_list = l;\n  std::sort(new_list.begin(),\
    \ new_list.end());\n  auto itr = new_list.begin();\n  while (new_list.end() -\
    \ new_list.begin() > 1) {\n    new_list.insert(new_list.begin() + 1, std::min(*itr,\
    \ new_list.end() - 1));\n    itr++;\n  }\n  return new_list;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnvqc72va.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpnvqc72va.cpp:13:76: error: no matching function for call\
    \ to \u2018min(long int&, __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >)\u2019\n   13 |     new_list.insert(new_list.begin() + 1, std::min(*itr,\
    \ new_list.end() - 1));\n      |                                             \
    \                               ^\nIn file included from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpnvqc72va.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:198:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp& std::min(const\
    \ _Tp&, const _Tp&)\u2019\n  198 |     min(const _Tp& __a, const _Tp& __b)\n \
    \     |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:198:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpnvqc72va.cpp:13:76: note: \
    \  deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018long int\u2019\
    \ and \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int> >\u2019\
    )\n   13 |     new_list.insert(new_list.begin() + 1, std::min(*itr, new_list.end()\
    \ - 1));\n      |                                                            \
    \                ^\nIn file included from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpnvqc72va.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp&\
    \ std::min(const _Tp&, const _Tp&, _Compare)\u2019\n  246 |     min(const _Tp&\
    \ __a, const _Tp& __b, _Compare __comp)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpnvqc72va.cpp:13:76:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    long int\u2019 and \u2018__gnu_cxx::__normal_ite"
  stdout: ''
  timestamp: 1660106432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(!l.empty());\n    std::vector<long>\
    \ res = l;\n    res.push_back(1);\n    for (auto it = res.begin() ; it != res.end()\
    \ - 1; ++it)\n        it[1]++;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmprjqpwgxq: /tmp/tmprjqpwgxq.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `!l.empty()'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> out(l.size());\n  long\
    \ i = 0;\n  for (auto e : l) {\n    out[i++] = e + 1;\n  }\n  return out;\n}\n\
    int main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106433
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> result;\n  result.push_back(l[0]);\n\
    \  for (int i = 1; i < l.size(); i++) {\n    result.push_back(result[i - 1] +\
    \ 1);\n  }\n  return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106433
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret;\n    long c = 0;\n\
    \    for (auto it=l.begin(); it!=l.end(); ++it) {\n        ret = append(ret,*it);\n\
    \        c = c + 1;\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmput4ij3rv.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmput4ij3rv.cpp:12:15: error: \u2018append\u2019 was not\
    \ declared in this scope\n   12 |         ret = append(ret,*it);\n      |    \
    \           ^~~~~~\n"
  stdout: ''
  timestamp: 1660106432
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> res;\n  for (long i :\
    \ l)\n    res.push_back(++i);\n  return res;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> v(l.size());\n    std::iota(v.begin(),\
    \ v.end(), 0);\n    v.push_back(0);\n    for (std::size_t i = 0; i < v.size()\
    \ - 1; i++)\n        v[i + 1] = v[i] + 1;\n    return v;\n}\nint main() {\n  \
    \  auto candidate = incr_list;\n    assert(candidate((std::vector<long>())) ==\
    \ (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpehh7sxso: /tmp/tmpehh7sxso.cpp:18: int main(): Assertion `candidate((std::vector<long>()))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n\tstd::vector<long> v;\n\tfor (auto e: l)\
    \ {\n\t\tv.push_back(e+1);\n\t}\n\treturn v;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::sort(l.begin(), l.end());\n  auto it\
    \ = std::unique(l.begin(), l.end());\n  return std::vector<long>(l.begin(), it);\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpi0mht4ht: /tmp/tmpi0mht4ht.cpp:16: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  int n = l.size();\n  assert(n > 0);\n  std::vector<long>\
    \ res = std::vector<long> (n, 0);\n  for (int i = 0; i < n; i++) {\n    int val\
    \ = l[i];\n    res[i] += val;\n  }\n  return res;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmp2niktel3: /tmp/tmp2niktel3.cpp:10: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `n > 0'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  assert(l.size() > 0);\n  std::vector<long>\
    \ r(l.size());\n  std::iota(r.begin(), r.end(), 1);\n  r.erase(r.end() - 1, r.end());\n\
    \  return r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpjwmt0igm: /tmp/tmpjwmt0igm.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size());\n    auto it = std::unique(l.begin(),\
    \ l.end()); // remove duplicate elements in list\n    l.erase(it, l.end()); //\
    \ remove remaining elements at the end of the list\n    std::sort(l.begin(), l.end());\n\
    \    l.push_back(l.size());\n    return l;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpru2vwf6h: /tmp/tmpru2vwf6h.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size()'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    auto it = l.begin();\n    std::vector<long>\
    \ ret(std::distance(l.begin(), it));\n    for (auto i = l.begin(); i < l.end();\
    \ i++) {\n        ret[i++]++;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp175zytcd.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp175zytcd.cpp:12:12: error: no match for \u2018operator[]\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019)\n   12 |         ret[i++]++;\n      | \
    \           ^\nIn file included from /usr/include/c++/9/vector:67,\n         \
    \        from /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmp175zytcd.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1040:7: note:\
    \ candidate: \u2018std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp,\
    \ _Alloc>::size_type) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::reference = long int&; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1040 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1040:28: note: \
    \  no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018std::vector<long int>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1040 |       operator[](size_type __n)\
    \ _GLIBCXX_NOEXCEPT\n      |                  ~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1058:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp,\
    \ _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = long\
    \ int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::const_reference\
    \ = const long int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]\u2019\
    \n 1058 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT\n      |   \
    \    ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1058:28: note:   no known\
    \ conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<long int*,\
    \ std::vector<lon"
  stdout: ''
  timestamp: 1660106432
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret;\n    ret.reserve(l.size());\n\
    \    for (long e : l)\n        ret.push_back(e+1);\n    return ret;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106433
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    res.reserve(l.size());\n\
    \    for (long i : l) {\n        res.push_back(i + 1);\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  int size = l.size();\n  std::vector<long>\
    \ res;\n  for (int i = 0; i < size - 1; ++i) {\n    res.push_back(std::max(l[i],\
    \ l[i + 1]));\n  }\n  return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp0a_aw3mz: /tmp/tmp0a_aw3mz.cpp:19: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106434
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    long x = l[0];\n    std::vector<long>\
    \ v;\n    for (int i = 1; i < l.size(); i++) {\n        x += l[i];\n        v.push_back(x);\n\
    \    }\n    return v;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106433
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    // Copy vector\n    std::vector<long>\
    \ temp(l.begin(), l.end());\n    // Init iterator for copy\n    std::list<long>::iterator\
    \ it = temp.begin();\n    // Iterate through list\n    for (std::vector<long>::iterator\
    \ it1 = temp.begin(); it1 != temp.end(); it1++) {\n        // Increment iterator\n\
    \        it++;\n        // Check, if last element\n        if (it == temp.end())\
    \ {\n            break;\n        }\n        // Add element\n        l.push_back(*it);\n\
    \    }\n    return l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxdfo1ch7.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpxdfo1ch7.cpp:12:46: error: conversion from \u2018std::vector<long\
    \ int>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >\u2019} to non-scalar type \u2018std::__cxx11::list<long int>::iterator\u2019\
    \ {aka \u2018std::_List_iterator<long int>\u2019} requested\n   12 |     std::list<long>::iterator\
    \ it = temp.begin();\n      |                                    ~~~~~~~~~~^~\n\
    /tmp/tmpxdfo1ch7.cpp:18:16: error: no match for \u2018operator==\u2019 (operand\
    \ types are \u2018std::__cxx11::list<long int>::iterator\u2019 {aka \u2018std::_List_iterator<long\
    \ int>\u2019} and \u2018std::vector<long int>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019})\n   18 |         if (it == temp.end())\
    \ {\n      |             ~~ ^~ ~~~~~~~~~~\n      |             |             |\n\
    \      |             |             std::vector<long int>::iterator {aka __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >}\n      |             std::__cxx11::list<long\
    \ int>::iterator {aka std::_List_iterator<long int>}\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpxdfo1ch7.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpxdfo1ch7.cpp:18:28: note: \
    \  \u2018std::__cxx11::list<long int>::iterator\u2019 {aka \u2018std::_List_iterator<long\
    \ int>\u2019} is not derived fr"
  stdout: ''
  timestamp: 1660106432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    // Declare a new list to return the elements\
    \ into.\n    std::vector<long> ret(l.size());\n    // Initialize list with each\
    \ element as current.\n    for (long i = 1; i < l.size(); i++) {\n        ret[i]\
    \ = l[i - 1] + 1;\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpl5izcj25: /tmp/tmpl5izcj25.cpp:20: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    for (long\
    \ i : l)\n        res.push_back(++i);\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    // Start with empty list.\n    std::vector<long>\
    \ r;\n    // Iterate over original list.\n    for (long i : l) {\n        // Add\
    \ element to list if it's not the last element.\n        if (i != l.back())\n\
    \            r.push_back(i);\n        // Add element to list if it is the last\
    \ element.\n        if (i == l.back())\n            r.push_back(i);\n        //\
    \ Increment element if the element is not the first or last element.\n       \
    \ else\n            r.push_back(i + 1);\n    }\n    return r;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpdwnjrf2f: /tmp/tmpdwnjrf2f.cpp:28: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size());\n    std::vector<long>\
    \ ret;\n    ret.reserve(l.size());\n    for (auto i : l) {\n        ret.push_back(i\
    \ + 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpjsd9olol: /tmp/tmpjsd9olol.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size()'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret(l.size());\n   \
    \ long n = 1;\n    for (size_t i = 0; i < l.size(); i++) {\n        ret[i] = l[i]\
    \ + n;\n        n++;\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmplyvjivae: /tmp/tmplyvjivae.cpp:20: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::reverse(l.begin(), l.end());\n  std::vector<long>\
    \ res(l.size());\n  for (size_t i = 1; i < l.size(); i++)\n    res[i] += l[i -\
    \ 1];\n  return res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp_v9onl4f: /tmp/tmp_v9onl4f.cpp:18: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    for (auto it = l.begin() + 1; it != l.end();\
    \ ++it) {\n        *it++;\n    }\n    return l;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660106438
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    auto res = l.size();\n    std::vector<long>\
    \ res(res);\n    std::iota(begin(res), end(res), 1);\n    return res;\n}\nint\
    \ main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsm0cojdc.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpsm0cojdc.cpp:10:23: error: conflicting declaration \u2018\
    std::vector<long int> res\u2019\n   10 |     std::vector<long> res(res);\n   \
    \   |                       ^~~\n/tmp/tmpsm0cojdc.cpp:9:10: note: previous declaration\
    \ as \u2018long unsigned int res\u2019\n    9 |     auto res = l.size();\n   \
    \   |          ^~~\n/tmp/tmpsm0cojdc.cpp:11:15: error: \u2018begin\u2019 was not\
    \ declared in this scope\n   11 |     std::iota(begin(res), end(res), 1);\n  \
    \    |               ^~~~~\n/tmp/tmpsm0cojdc.cpp:11:15: note: suggested alternatives:\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpsm0cojdc.cpp:2:\n/usr/include/c++/9/valarray:1224:5:\
    \ note:   \u2018std::begin\u2019\n 1224 |     begin(const valarray<_Tp>& __va)\n\
    \      |     ^~~~~\nIn file included from /usr/include/c++/9/filesystem:38,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmpsm0cojdc.cpp:2:\n/usr/include/c++/9/bits/fs_dir.h:516:3:\
    \ note:   \u2018std::filesystem::__cxx11::begin\u2019\n  516 |   begin(recursive_directory_iterator\
    \ __iter) noexcept\n      |   ^~~~~\n/tmp/tmpsm0cojdc.cpp:11:27: error: \u2018\
    end\u2019 was not declared in this scope\n   11 |     std::iota(begin(res), end(res),\
    \ 1);\n      |                           ^~~\n/tmp/tmpsm0cojdc.cpp:11:27: note:\
    \ suggested alternatives:\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpsm0cojdc.cpp:2:\n/usr/include/c++/9/valarray:1244:5:\
    \ note:   \u2018std::end\u2019\n 1244 |     end(const valarray<_Tp>& __va)\n \
    \     |     ^~~\nIn file included from /usr/include/c++/9/filesystem:38,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n \
    \                from /tmp/tmpsm0cojdc.cpp:2:\n/usr/include/c++/9/bits/fs_dir.h:520:3:\
    \ note:   \u2018std::filesystem::__cxx11::end\u2019\n  520 |   end(recursive_directory_iterator)\
    \ noexcept\n      |   ^~~\n/tmp/tmpsm0cojdc.cpp:12:12: error: could not convert\
    \ \u2018r"
  stdout: ''
  timestamp: 1660106433
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> new_list;\n    new_list.reserve(l.size());\n\
    \    for (long i : l) {\n        new_list.push_back(i + 1);\n    }\n    return\
    \ new_list;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size() > 0);\n    std::vector<long>\
    \ ret(l.size());\n    for (long i = 0; i < l.size(); i++) {\n        ret[i] =\
    \ l[i] + 1;\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpwd12qbkk: /tmp/tmpwd12qbkk.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  l.push_back(1);\n  for(auto& i: l)\n   \
    \ i += 1;\n  return l;\n}\nint main() {\n    auto candidate = incr_list;\n   \
    \ assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpfe_hc5j0: /tmp/tmpfe_hc5j0.cpp:16: int main(): Assertion `candidate((std::vector<long>()))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> new_l;\n    for (auto\
    \ e : l) {\n        new_l.push_back(new_l.size());\n    }\n    return new_l;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp0wfqlq2_: /tmp/tmp0wfqlq2_.cpp:18: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    if (l.size() == 0)\n        return l;\n\
    \    std::vector<long> u;\n    u.reserve(l.size());\n    std::transform(std::next(l.begin()),\
    \ l.end(), std::back_inserter(u), [](long v){return v+1;});\n    return u;\n}\n\
    int main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpiq8en6qd: /tmp/tmpiq8en6qd.cpp:19: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res = l;\n    for (int\
    \ i = l.size(); i > 0; i--) {\n        int x = l[i - 1];\n        for (int j =\
    \ 0; j < i; j++) {\n            x = x + l[j];\n        }\n        l[i - 1] = x;\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n  \
    \  assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpa2qbf2p_: /tmp/tmpa2qbf2p_.cpp:22: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> result;\n    result.reserve(l.size()\
    \ + 1);\n    for (int i = 0; i < l.size(); i++) {\n        result.push_back(l.at(i)\
    \ + 1);\n    }\n    result.back() = l.back() + 1;\n    return result;\n}\nint\
    \ main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106433
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  for (auto & i : l)\n    ++i;\n  return l;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> r(l.size());\n  int ind\
    \ = 0;\n  for (int i = 0; i < l.size(); ++i) {\n    while (ind++ != i) {\n   \
    \   r[i] += l[i];\n    }\n  }\n  return r;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpez6td4wr: /tmp/tmpez6td4wr.cpp:21: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size() >= 2);\n    std::vector<long>\
    \ ans(l.size() - 1);\n    std::iota(ans.begin(), ans.end(), 0);\n    ans[l.size()\
    \ - 2] = l.back();\n    return ans;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp88xz33p3: /tmp/tmp88xz33p3.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() >= 2'' failed.

    '
  stdout: ''
  timestamp: 1660106433
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> out;\n  for (auto el :\
    \ l)\n    out.push_back(el + 1);\n  return out;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size() > 0);\n    std::vector<long>\
    \ r = l;\n    r.push_back(r.back() + 1);\n    return r;\n}\nint main() {\n   \
    \ auto candidate = incr_list;\n    assert(candidate((std::vector<long>())) ==\
    \ (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmps6jz7xg5: /tmp/tmps6jz7xg5.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660106434
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  long ans = 0;\n  for (long i = 0; i < l.size();\
    \ i++) {\n    ans += l[i];\n    l[i] = ans;\n  }\n  return l;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpoo9gcq74: /tmp/tmpoo9gcq74.cpp:19: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106435
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size() > 1);\n    std::vector<long>\
    \ r;\n    r.push_back(1);\n    long n = l[0];\n    for (long i = 1, j = 0; i <\
    \ l.size(); i++) {\n        r.push_back(n - j);\n        n = l[i];\n        j\
    \ = i;\n    }\n    r.push_back(n - j);\n    return r;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ukbkv8m.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp2ukbkv8m.cpp:18:21: error: \u2018j\u2019 was not declared\
    \ in this scope\n   18 |     r.push_back(n - j);\n      |                    \
    \ ^\n"
  stdout: ''
  timestamp: 1660106435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> tmp(std::begin(l), std::end(l));\n\
    \    std::sort(std::begin(tmp), std::end(tmp));\n    for (long i = 0, c = std::count(std::begin(tmp),\
    \ std::end(tmp), 1); i < c; ++i) ++tmp[i];\n    return tmp;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpcpeh6ff2: /tmp/tmpcpeh6ff2.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    // Write your code here.\n    int len\
    \ = l.size();\n    int n = 0;\n    for (int i = 0; i < len; i++) {\n        if\
    \ (l[i] != i) {\n            n++;\n        }\n    }\n    std::vector<long> result;\n\
    \    int count = 0;\n    for (int i = 0; i < len; i++) {\n        if (l[i] !=\
    \ i) {\n            count++;\n        }\n    }\n    for (int i = 0; i < len; i++)\
    \ {\n        if (l[i] != i) {\n            result.push_back(l[i]);\n        }\n\
    \    }\n    for (int i = 0; i < len; i++) {\n        if (l[i] != i) {\n      \
    \      result.push_back(i);\n        }\n    }\n    for (int i = 0; i < len; i++)\
    \ {\n        if (l[i] != i) {\n            result.push_back(count + 1);\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmps93_30f2: /tmp/tmps93_30f2.cpp:44: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r;\n    for (long i\
    \ = 0; i < l.size(); i++) {\n        r.push_back(l.at(i + 1));\n    }\n    return\
    \ r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  vector::_M_range_check: __n (which is 3) >= this->size() (which is 3)\n"
  stdout: ''
  timestamp: 1660106435
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> tmp;\n  for(long i = 0;\
    \ i < l.size(); i++) {\n    tmp.push_back(std::next(l[i - 1], 1, 1));\n  }\n \
    \ return tmp;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz6l5vfs6.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpz6l5vfs6.cpp:11:43: error: no matching function for call\
    \ to \u2018next(__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type&,\
    \ int, int)\u2019\n   11 |     tmp.push_back(std::next(l[i - 1], 1, 1));\n   \
    \   |                                           ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:66,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpz6l5vfs6.cpp:2:\n/usr/include/c++/9/bits/stl_iterator_base_funcs.h:213:5:\
    \ note: candidate: \u2018template<class _InputIterator> constexpr _InputIterator\
    \ std::next(_InputIterator, typename std::iterator_traits<_Iter>::difference_type)\u2019\
    \n  213 |     next(_InputIterator __x, typename\n      |     ^~~~\n/usr/include/c++/9/bits/stl_iterator_base_funcs.h:213:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz6l5vfs6.cpp:11:43:\
    \ note:   candidate expects 2 arguments, 3 provided\n   11 |     tmp.push_back(std::next(l[i\
    \ - 1], 1, 1));\n      |                                           ^\n"
  stdout: ''
  timestamp: 1660106435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> res(l.size());\n  for\
    \ (size_t i = 0; i < l.size(); i++)\n    res[i] = i + 1;\n  return res;\n}\nint\
    \ main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp90u3_wtf: /tmp/tmp90u3_wtf.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106435
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> v(l.size());\n    for\
    \ (std::size_t i = 0; i < v.size(); ++i) {\n        v[i] = l[i] + 1;\n    }\n\
    \    return v;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106435
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res(l);\n    res.push_back(l[0]);\n\
    \    for (int i = 1; i < l.size(); i++)\n        res[i] = res[i - 1] + l[i];\n\
    \    return res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106436
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  // assert(l.size() >= 2);\n  // assert (std::find(l.begin(),\
    \ l.end(), l.front()) == l.end());\n  std::vector<long> ret;\n  ret.push_back(l.front());\n\
    \  long x = l.front();\n  for (long i = 1; i < l.size(); ++i) {\n    ret.push_back(x);\n\
    \    x = x + l[i];\n  }\n  return ret;\n}\nint main() {\n    auto candidate =\
    \ incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret;\n    for (long\
    \ &i: ret)\n        i = i + 1;\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpff5wzmwh: /tmp/tmpff5wzmwh.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> r(l);\n  for (int i =\
    \ 1; i < r.size(); ++i)\n    r[i] += r[i - 1];\n  return r;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpo815dazq: /tmp/tmpo815dazq.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106436
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    if (l.size() <= 1) return l;\n    std::vector<long>\
    \ ret;\n    ret.reserve(l.size());\n    for (long x : l) {\n        ret.push_back(x\
    \ + 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> res(l.size());\n  std::iota(res.begin(),\
    \ res.end(), 1);\n  for (size_t i = 0; i < res.size(); ++i) {\n    l[i] += res[i];\n\
    \  }\n  return res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpbxtd6nk5: /tmp/tmpbxtd6nk5.cpp:19: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> result;\n  for (int i\
    \ = l.size() - 1; i > -1; i--) {\n    if (result.size() == 0) {\n      result.push_back(1);\n\
    \    } else {\n      result.back() += l[i];\n    }\n  }\n  return result;\n}\n\
    int main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp8iwtar38: /tmp/tmp8iwtar38.cpp:22: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106436
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> v;\n    v.push_back(l[0]);\n\
    \    for (long i = 1; i < l.size(); i++) {\n        v.push_back(l[i] + v[i - 1]);\n\
    \    }\n    return v;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    long n = l.size();\n\
    \    for (long i = 0; i < n; i++) {\n        res.push_back(std::max((res.at(i)\
    \ + 1), l.at(i)));\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  vector::_M_range_check: __n (which is 0) >= this->size() (which is 0)\n"
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> incremented_list;\n\
    \    incremented_list.push_back(l.at(0));\n    for (size_t i = 1; i < l.size();\
    \ ++i) {\n        incremented_list.push_back(incremented_list[i - 1] + 1);\n \
    \   }\n    return incremented_list;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  vector::_M_range_check: __n (which is 0) >= this->size() (which is 0)\n"
  stdout: ''
  timestamp: 1660106436
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret = l;\n    for (auto&\
    \ i : ret) {\n        i = i + 1;\n    }\n    return ret;\n}\nint main() {\n  \
    \  auto candidate = incr_list;\n    assert(candidate((std::vector<long>())) ==\
    \ (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    long prev_elem\
    \ = 0, prev_count = 1;\n    for (size_t i = 0; i < l.size(); i++) {\n        if\
    \ (l[i] == prev_elem) {\n            prev_count++;\n            prev_elem = l[i];\n\
    \        }\n        else {\n            res.push_back(prev_elem);\n          \
    \  prev_elem = l[i];\n            prev_count = 1;\n        }\n        res.push_back(prev_elem);\n\
    \        res.push_back(prev_count);\n    }\n    res.push_back(prev_elem);\n  \
    \  res.push_back(prev_count);\n    return res;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpi7taoxqt: /tmp/tmpi7taoxqt.cpp:30: int main(): Assertion `candidate((std::vector<long>()))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660106436
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret;\n    ret.reserve(l.size());\n\
    \    for (auto it = l.begin(); it != l.end(); ++it)\n        ret.push_back(*it+1);\n\
    \    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    res.insert(res.begin(),\
    \ std::next(l.begin()), l.end());\n    res.erase(std::unique(std::begin(res),\
    \ std::end(res)), std::end(res));\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::length_error'\n  what():\
    \  vector::_M_range_insert\n"
  stdout: ''
  timestamp: 1660106436
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> temp;\n  for (auto i =\
    \ l.begin(); i != l.end(); i++) {\n    temp.push_back((*i) + 1);\n  }\n  return\
    \ temp;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res(l);\n    std::sort(res.begin(),\
    \ res.end());\n    auto it = res.begin();\n    for (; it < res.end(); it++) {\n\
    \        it++;\n    }\n    return res;\n}\nint main() {\n    auto candidate =\
    \ incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpgkxybrg3: /tmp/tmpgkxybrg3.cpp:20: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106436
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    for (auto i = l.begin(); i != l.end();\
    \ ++i) {\n        ++(*i);\n    }\n    return l;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106435
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret(l.size());\n   \
    \ for (std::size_t i = 0; i != l.size(); ++i) {\n        ret[i] = l[i] + 1;\n\
    \    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n  \
    \  assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106435
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r(l.size());\n    std::iota(std::begin(r),\
    \ std::end(r), 1);\n    std::vector<long>::iterator it = std::adjacent_find(std::begin(r),\
    \ std::end(r));\n    while (it != std::end(r)) {\n        r[it] = (r[it] + 1)\
    \ % l.size();\n        it = std::adjacent_find(it, std::end(r));\n    }\n    return\
    \ r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ybra_7z.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp0ybra_7z.cpp:13:10: error: no match for \u2018operator[]\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018std::vector<long\
    \ int>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >\u2019})\n   13 |         r[it] = (r[it] + 1) % l.size();\n      |   \
    \       ^\nIn file included from /usr/include/c++/9/vector:67,\n             \
    \    from /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmp0ybra_7z.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1040:7: note:\
    \ candidate: \u2018std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp,\
    \ _Alloc>::size_type) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::reference = long int&; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1040 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1040:28: note: \
    \  no known conversion for argument 1 from \u2018std::vector<long int>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int> >\u2019\
    } to \u2018std::vector<long int>::size_type\u2019 {aka \u2018long unsigned int\u2019\
    }\n 1040 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT\n      |        \
    \          ~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1058:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp,\
    \ _Alloc>::size_type) const [with _Tp = long int; _Alloc = std::allocator<long\
    \ int>; std::vector<_Tp, _Alloc>::const_reference = const long int&; std::vector<_Tp,\
    \ _Alloc>::size_type = long unsigned int]\u2019\n 1058 |       operator[](size_type\
    \ __n) const _GLIBCXX_NOEXCEPT\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1058:28: "
  stdout: ''
  timestamp: 1660106435
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> newlist;\n    for(auto\
    \ i : l) {\n        newlist.push_back(i+1);\n    }\n    return newlist;\n}\nint\
    \ main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106436
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> l;\n    for (auto e\
    \ : l)\n        l.push_back(e+1);\n    return l;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0grinrkg.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp0grinrkg.cpp:9:23: error: declaration of \u2018std::vector<long\
    \ int> l\u2019 shadows a parameter\n    9 |     std::vector<long> l;\n      |\
    \                       ^\n"
  stdout: ''
  timestamp: 1660106435
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  int size = l.size();\n  for (int i = 0;\
    \ i < size; i++) {\n    l[i]++;\n    if (l[i] > 1000000) l[i] %= 1000000;\n  }\n\
    \  return l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    // Your code goes here\n    std::sort(l.begin(),\
    \ l.end());\n    std::vector<long> res(l.size());\n    long sum = 0;\n    for(long\
    \ i=0;i<l.size();i++) {\n        res[i] = sum;\n        sum += l[i];\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmphiqum6x1: /tmp/tmphiqum6x1.cpp:22: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size() > 0);\n    std::vector<long>\
    \ res(l.size());\n    for (size_t i = 0; i < res.size(); ++i) {\n        res[i]\
    \ = l[i] + 1;\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpeydp2tgx: /tmp/tmpeydp2tgx.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> result;\n  long x = 0;\n\
    \  for (int i = 0; i < l.size(); i++) {\n    if (l[i] % 2 == 1) {\n      result.push_back(l[i]\
    \ + x);\n      x = 1;\n    } else {\n      result.push_back(l[i]);\n      x =\
    \ 0;\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpill_z1hv: /tmp/tmpill_z1hv.cpp:25: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106436
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    for (long i = 0; i < l.size(); i++) {\n\
    \        l[i] += 1;\n    }\n    return l;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    // TODO: Your code here\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpcu_ef4f6: /tmp/tmpcu_ef4f6.cpp:13: int main(): Assertion `candidate((std::vector<long>()))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660106436
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret = {l[0]};\n    auto\
    \ itr = l.begin();\n    for (itr != l.end(); ++itr) {\n        ret.push_back(ret[itr-1]\
    \ + 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzp29c_dj.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpzp29c_dj.cpp:11:26: error: could not convert \u2018itr.__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >::operator++()\u2019 from \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018bool\u2019\n   11 |     for (itr\
    \ != l.end(); ++itr) {\n      |                          ^~~~~\n      |      \
    \                    |\n      |                          __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\n/tmp/tmpzp29c_dj.cpp:11:31: error: expected \u2018\
    ;\u2019 before \u2018)\u2019 token\n   11 |     for (itr != l.end(); ++itr) {\n\
    \      |                               ^\n      |                            \
    \   ;\n/tmp/tmpzp29c_dj.cpp:12:26: error: no match for \u2018operator[]\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019)\n   12 |         ret.push_back(ret[itr-1]\
    \ + 1);\n      |                          ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzp29c_dj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1040:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::reference std::vector<_Tp,\
    \ _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = long int;\
    \ _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::reference = long\
    \ int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]\u2019\n 1040\
    \ |       operator[](size_type __n) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:1040:28: note:   no known conversion for\
    \ argument 1 from \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >\u2019 to \u2018std::vector<long int>::size_type\u2019 {aka \u2018long\
    \ unsigned int\u2019}\n 1040 |       operator[](size_"
  stdout: ''
  timestamp: 1660106435
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> v(l.size());\n  for (long\
    \ i = 0; i < v.size(); ++i)\n    v[i] = l[i] + 1;\n  return v;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res = l;\n    for (auto\
    \ e : l)\n        res.push_back(res.back() + 1);\n    return res;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpt6_dcv5w: /tmp/tmpt6_dcv5w.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::partial_sum(l.begin(), l.end(), l.begin());\n\
    \  return l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpufbk8joh: /tmp/tmpufbk8joh.cpp:15: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106436
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> incremented_list;\n\
    \    long current_value = l[0];\n    for (size_t i = 1; i < l.size(); i++) {\n\
    \        incremented_list.push_back(current_value + l[i]);\n        current_value\
    \ = incremented_list[incremented_list.size() - 1];\n    }\n    return incremented_list;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106436
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> v{};\n  v.push_back(l[0]);\n\
    \  for (long i : l) v.push_back(v.back() + i);\n  return v;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106436
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res(l);\n    for (size_t\
    \ i = 0; i < l.size(); i++) {\n        res[i] += 1;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106436
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size() >= 2);\n    std::vector<long>\
    \ res(l.size() - 1);\n    for (auto it = l.begin() + 1; it != l.end(); it++) {\n\
    \        long temp = *it;\n        res[res.length() - 1 - temp] = it;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3qw9xt3i.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp3qw9xt3i.cpp:13:17: error: \u2018class std::vector<long\
    \ int>\u2019 has no member named \u2018length\u2019\n   13 |         res[res.length()\
    \ - 1 - temp] = it;\n      |                 ^~~~~~\n"
  stdout: ''
  timestamp: 1660106436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  assert(l.size() > 0);\n  std::vector<long>\
    \ ret(l.size());\n  for (int i = 0; i < l.size(); i++) {\n    ret[i] += 1;\n \
    \ }\n  return ret;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp8ixmu60d: /tmp/tmp8ixmu60d.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660106437
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> out;\n    std::sort(l.begin(),\
    \ l.end());\n    long x = l[0];\n    long y = l[1];\n    long z = l[2];\n    for\
    \ (int i = 3; i < l.size(); i++) {\n        long tempx = l[i];\n        long tempy\
    \ = y;\n        long tempz = z;\n        y = tempx;\n        z = tempy;\n    \
    \    x = tempz;\n    }\n    out.push_back(x + 1);\n    out.push_back(y + 1);\n\
    \    out.push_back(z + 1);\n    return out;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  long count = 1;\n  for (auto i : l)\n  \
    \  count *= i;\n  std::vector<long> result(count + 1);\n  long prev_i = 1;\n \
    \ for (auto i : l) {\n    result[i - 1] += prev_i;\n    prev_i = i;\n  }\n  result[count\
    \ - 1] += prev_i;\n  return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp5tmmk8fl: /tmp/tmp5tmmk8fl.cpp:23: int main(): Assertion `candidate((std::vector<long>()))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660106438
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    long i = l[0];\n\
    \    long j = 1;\n    for(long k = 1; k < l.size(); k++) {\n        if(l[k] <\
    \ i) {\n            i = l[k];\n            res.push_back(j);\n            j +=\
    \ 1;\n        } else {\n            res.push_back(l[k]);\n        }\n    }\n \
    \   res.push_back(j);\n    return res;\n}\nint main() {\n    auto candidate =\
    \ incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r(l);\n    r.push_back(r.front()+1);\n\
    \    return r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::size_t sz = l.size();\n  std::vector<long>\
    \ r;\n  r.reserve(sz + 1);\n  for (std::size_t i = 0; i < sz; ++i) {\n    r.push_back(l[i]\
    \ + 1);\n  }\n  return r;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106437
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> result = l;\n  for (long\
    \ i = 0; i < result.size(); i++) {\n    result[i] += 1;\n    if (result[i] > 1000000)\
    \ {\n      long j = result[i] % 1000000;\n      result[i] = result[i] / 1000000;\n\
    \      result.insert(result.begin() + i, j);\n    }\n  }\n  return result;\n}\n\
    int main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> r;\n  r.push_back(l.size());\n\
    \  std::transform(l.begin(), l.end(), std::back_inserter(r), [](long n) { return\
    \ n + 1; });\n  return r;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpzrcsmw6r: /tmp/tmpzrcsmw6r.cpp:16: int main(): Assertion `candidate((std::vector<long>()))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660106438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r(l.size());\n    std::iota(r.begin(),\
    \ r.end(), 0);\n    for (long i = 1; i < l.size(); ++i) {\n        r[i - 1] +=\
    \ l[i];\n    }\n    return r;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpfweaclgb: /tmp/tmpfweaclgb.cpp:19: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106438
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r;\n    for (long i\
    \ : l) {\n        r.push_back(i + 1);\n    }\n    return r;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::sort(l.begin(), l.end());\n  std::vector<long>\
    \ ans;\n  ans.push_back(l.front());\n  for(size_t i = 1; i < l.size(); i++) {\n\
    \    ans.push_back(l[i-1] + 1);\n  }\n  return ans;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> r(l.size());\n  for (size_t\
    \ i = 0; i < l.size(); ++i) {\n    r[i] = l[i] + 1;\n  }\n  return r;\n}\nint\
    \ main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> u(l.size());\n    for\
    \ (long i = 0; i < l.size(); ++i) {\n        u[i] = l[i] + 1;\n    }\n    return\
    \ u;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> result;\n    result.reserve(l.size());\n\
    \    for (long i : l) {\n        result.push_back(i+1);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size() >= 2);\n    std::vector<long>\
    \ r(l.size() - 1, l.back() + 1);\n    for (long i = l.size() - 2; i >= 0; i--)\
    \ {\n        r[i + 1] = l[i];\n    }\n    return r;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpwk786ffp: /tmp/tmpwk786ffp.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() >= 2'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> result;\n    result.push_back(l[0]);\n\
    \    for (size_t i = 1; i < l.size(); i++) {\n        result.push_back(result[i\
    \ - 1] + 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate =\
    \ incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    for(auto i\
    \ = l.begin(); i != l.end(); i++) res.push_back(*(i + 1));\n    return res;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpo344kxfc: /tmp/tmpo344kxfc.cpp:16: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    res.reserve(l.size());\n\
    \    for (auto it = l.begin(); it != l.end(); it++) {\n        auto it_incr =\
    \ it+1;\n        std::advance(it_incr, 1);\n        res.push_back(*it_incr);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n  \
    \  assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmphcvzdlo9: /tmp/tmphcvzdlo9.cpp:21: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    for (long i = 1; i < l.size(); ++i) {\n\
    \        l[i] += l[i - 1];\n    }\n    return l;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpm5_bkkd5: /tmp/tmpm5_bkkd5.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res(l.size());\n   \
    \ for (size_t i = 0; i < l.size(); i++)\n        res[i] = l[i] + 1;\n    return\
    \ res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r(l.size());\n    for(std::size_t\
    \ i=0;i<l.size();i++) {\n        r[i] += 1;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpei85o5k5: /tmp/tmpei85o5k5.cpp:18: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::sort(l.begin(), l.end());\n    auto\
    \ last = l.back();\n    l.back()++;\n    for (long i = 0; i <= last; ++i) {\n\
    \        l.push_back(i);\n    }\n    return l;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    long i = 0;\n\
    \    // Loop through the vector and add +1 to the next element on every iteration.\n\
    \    for (auto el : l) {\n        res.push_back(el + i);\n        i += 1;\n  \
    \  }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp1di649uz: /tmp/tmp1di649uz.cpp:21: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ans;\n    for (long\
    \ el : l)\n        ans.push_back(el + 1);\n    return ans;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> res;\n  res.reserve(l.size());\n\
    \  for (auto it=l.begin(); it!=l.end(); it++) {\n    long tmp = *it;\n    if (tmp\
    \ != 0) {\n      res.push_back(tmp + 1);\n    }\n  }\n  return res;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpfjsc8uxg: /tmp/tmpfjsc8uxg.cpp:23: int main(): Assertion `candidate((std::vector<long>({5,
    2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124}))''
    failed.

    '
  stdout: ''
  timestamp: 1660106438
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    // Initialize vector with initial element.\n\
    \    std::vector<long> temp(l.size());\n    temp[0] = l[0];\n    long val = l[0];\n\
    \    // Iterate over all elements and increment elements.\n    for (size_t i =\
    \ 1; i < l.size(); i++) {\n        temp[i] = val++;\n    }\n    return temp;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r;\n    for (long i\
    \ = 1; i < l.size(); i++)\n        r.push_back(l[i] + i);\n    return r;\n}\n\
    int main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpwyl5dmzn: /tmp/tmpwyl5dmzn.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106438
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> temp;\n    for (long\
    \ e : l) {\n        temp.push_back(e+1);\n    }\n    return temp;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> ret;\n  for (long i :\
    \ l) {\n    ret[i] = i + 1;\n  }\n  return ret;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106439
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> incremented(l.size());\n\
    \    for (size_t i = 0; i < l.size(); ++i) {\n        incremented[i] = l[i] +\
    \ 1;\n    }\n    return incremented;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> u(l.size());\n    for\
    \ (std::size_t i = 0; i < l.size(); i++) {\n        u[i] = l[i] + 1;\n    }\n\
    \    return u;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> ret(l.begin(), l.end());\n\
    \  std::sort(ret.begin(), ret.end());\n  for (long i = 1; i < ret.size(); i++)\
    \ {\n    ret[i] += ret[i - 1];\n  }\n  return ret;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpebvvxmox: /tmp/tmpebvvxmox.cpp:19: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    long i = 0;\n    std::vector<long> res;\n\
    \    res.reserve(l.size());\n    for(auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size() != 0);\n    long prev\
    \ = 0;\n    std::vector<long> res;\n    for (const auto &i : l) {\n        res.push_back(i+prev);\n\
    \        prev = i;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmp76c8nf83: /tmp/tmp76c8nf83.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() != 0'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    int i = 0;\n\
    \    for(auto &e : l)\n        res.emplace_back(e + i++);\n    return res;\n}\n\
    int main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpq7o0ntra: /tmp/tmpq7o0ntra.cpp:18: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size() > 0);\n    std::vector<long>\
    \ res(l.size() - 1);\n    for (long i = 0; i < l.size() - 1; i++)\n        res[i]\
    \ = l[i] + 1;\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpowb673ng: /tmp/tmpowb673ng.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    auto it = std::begin(l);\n    auto next_it\
    \ = [&]() {\n        ++it;\n        if (it != std::end(l))\n            return\
    \ it;\n        return std::end(l);\n    };\n    return std::vector<long>(next_it,\
    \ next_it());\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqkwapggo.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpqkwapggo.cpp:16:48: error: no matching function for call\
    \ to \u2018std::vector<long int>::vector(incr_list(std::vector<long int>)::<lambda()>&,\
    \ __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >)\u2019\n   16\
    \ |     return std::vector<long>(next_it, next_it());\n      |               \
    \                                 ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqkwapggo.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpqkwapggo.cpp:16:48: note:   deduced conflicting types for parameter\
    \ \u2018_InputIterator\u2019 (\u2018incr_list(std::vector<long int>)::<lambda()>\u2019\
    \ and \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int> >\u2019\
    )\n   16 |     return std::vector<long>(next_it, next_it());\n      |        \
    \                                        ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqkwapggo.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:622:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>,\
    \ const allocator_type&) [with _Tp = long int; _Alloc = std::allocator<l"
  stdout: ''
  timestamp: 1660106438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    int i = l.size() - 1;\n    for (int j\
    \ = l.size() - 1; j > 0; j--) {\n        if (l[j] > l[j - 1]) {\n            l[j]\
    \ += 1;\n            l[i] = j + 1;\n            break;\n        }\n    }\n   \
    \ return l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpfbtt9h6b: /tmp/tmpfbtt9h6b.cpp:22: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    l.push_back(l.size());\n    return std::move(l);\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp29blygzk: /tmp/tmp29blygzk.cpp:14: int main(): Assertion `candidate((std::vector<long>()))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::map<long, long> m;\n  for(long i: l)\
    \ m[i]++;\n  std::vector<long> r;\n  for(auto e: m) r.push_back(e);\n  return\
    \ r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpacd5kyc5.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpacd5kyc5.cpp:12:31: error: no matching function for call\
    \ to \u2018std::vector<long int>::push_back(std::pair<const long int, long int>&)\u2019\
    \n   12 |   for(auto e: m) r.push_back(e);\n      |                          \
    \     ^\nIn file included from /usr/include/c++/9/vector:67,\n               \
    \  from /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpacd5kyc5.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7: note:\
    \ candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::pair<const long int, long int>\u2019\
    \ to \u2018const value_type&\u2019 {aka \u2018const long int&\u2019}\n 1184 |\
    \       push_back(const value_type& __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_vector.h:1200:7: note: candidate: \u2018void std::vector<_Tp,\
    \ _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = long\
    \ int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1200 |       push_back(value_type&& __x)\n      |      \
    \ ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30: note:   no known conversion\
    \ for argument 1 from \u2018std::pair<const long int, long int>\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660106439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    if (l.size() == 0) return l;\n    std::vector<long>\
    \ r((l.size()+1)*l.size());\n    std::copy(l.begin(),l.end(),r.begin()+1);\n \
    \   for (int i = 0; i < l.size(); ++i) r[i] = l[i]+1;\n    return r;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpype93jig: /tmp/tmpype93jig.cpp:18: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::sort(l.begin(), l.end());\n    auto\
    \ it = l.begin() + 1;\n    std::vector<long> res(l, it + 1);\n    return res;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5yh6sf31.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp5yh6sf31.cpp:11:36: error: no matching function for call\
    \ to \u2018std::vector<long int>::vector(std::vector<long int>&, __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >)\u2019\n   11 |     std::vector<long> res(l, it\
    \ + 1);\n      |                                    ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5yh6sf31.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5yh6sf31.cpp:11:36: note:   deduced conflicting types for parameter\
    \ \u2018_InputIterator\u2019 (\u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019)\n   11 |     std::vector<long> res(l, it\
    \ + 1);\n      |                                    ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5yh6sf31.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:622:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>,\
    \ const allocator_type&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::allocator_type = std::allocator<long int>]\u2019\n\
    \  622 |     "
  stdout: ''
  timestamp: 1660106439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res = l;\n    for (auto&\
    \ i : l)\n        res.push_back(i + 1);\n    return res;\n}\nint main() {\n  \
    \  auto candidate = incr_list;\n    assert(candidate((std::vector<long>())) ==\
    \ (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpe5k6mj1f: /tmp/tmpe5k6mj1f.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ans;\n    for (long\
    \ i = 0; i < l.size(); i++)\n        ans.push_back(l.at(i) + 1);\n    return ans;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret = l;\n    auto it\
    \ = l.begin();\n    for (; it != l.end(); ++it) {\n        ++(*it);\n        ret.insert(ret.end(),\
    \ *it, *it + 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpqvia6eik: /tmp/tmpqvia6eik.cpp:20: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> ans(l.size());\n  long\
    \ c = 0;\n  for (auto i : l) {\n    ans[c] = i;\n    c += 1;\n  }\n  return ans;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp1iq8wurw: /tmp/tmp1iq8wurw.cpp:20: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> incr(l.size());\n  \
    \  long curr = 0;\n    long prev = 0;\n    for (int i = 0; i < l.size(); i++)\
    \ {\n        if (l[i] > prev) {\n            curr++;\n        }\n        incr[i]\
    \ = curr;\n        prev = l[i];\n    }\n    return incr;\n}\nint main() {\n  \
    \  auto candidate = incr_list;\n    assert(candidate((std::vector<long>())) ==\
    \ (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp_aemdkl9: /tmp/tmp_aemdkl9.cpp:24: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106440
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  assert(l.size() % 2 == 0);\n  long s = 0;\n\
    \  for (auto itr = l.cbegin(); itr != l.cend(); ++itr) {\n    s += *itr;\n   \
    \ l.push_back(*itr);\n  }\n  l.push_back(s);\n  l.resize(l.size() / 2);\n  return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpc8vilvpl: /tmp/tmpc8vilvpl.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660106440
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> new_l (l.size());\n\
    \    for(int i=0; i<l.size(); i++) {\n        new_l[i] = l[i]+1;\n    }\n    return\
    \ new_l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106440
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::sort(l.begin(), l.end());\n    l.erase(std::unique(l.begin(),\
    \ l.end()), l.end());\n    std::vector<long> res(l.size());\n    for (long i :\
    \ l)\n        res[i++] += 1;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpkmq38x7d: /tmp/tmpkmq38x7d.cpp:19: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106441
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    // Create new vector, initialize it with\
    \ size l.\n    // And initialize it with 0\n    std::vector<long> v2(l.size(),\
    \ 0);\n\n    // Iterate over all elements of l and increase corresponding\n  \
    \  // element of v2.\n    for (long i = 0; i < l.size(); i++) {\n        v2[i]++;\n\
    \    }\n    // Return updated vector\n    return v2;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpjxsmsh19: /tmp/tmpjxsmsh19.cpp:24: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106441
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::sort(l.begin(), l.end());\n  std::vector<long>\
    \ ret;\n  long curr = 0;\n  // Insert next element into the list.\n  for (long\
    \ e : l) {\n    if (e < curr) {\n      ret.push_back(curr);\n      curr = e;\n\
    \    } else {\n      curr++;\n    }\n  }\n  ret.push_back(curr);\n  return ret;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpyi3fxw42: /tmp/tmpyi3fxw42.cpp:26: int main(): Assertion `candidate((std::vector<long>()))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660106441
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ll;\n    for (long i\
    \ = 0; i < l.size(); i++)\n        ll.push_back(l[i] + 1);\n    return ll;\n}\n\
    int main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106440
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::sort(l.begin(), l.end());\n  auto new_end\
    \ = std::unique(l.begin(), l.end());\n  l.erase(new_end, l.end());\n  return l;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpcdcf7w_z: /tmp/tmpcdcf7w_z.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106441
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res(l.size());\n   \
    \ for (int i = 0; i < l.size(); i++) {\n        res[i] = l[i] + 1;\n    }\n  \
    \  return res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106440
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> incr(l.size());\n  \
    \  std::vector<long>::size_type i = 0, j = 0;\n    for (i = 0; i < l.size(); ++i)\
    \ {\n        incr[i] += 1;\n        j = 0;\n        while (j < incr.size() &&\
    \ incr[j] == incr[i]) {\n            ++j;\n        }\n        incr.erase(incr.begin()\
    \ + j);\n        incr[i] = incr[i] + 1;\n    }\n    return incr;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106441
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r;\n    for (long i\
    \ = 0; i < l.size() - 1; i++) {\n        r.push_back(l[i] + 1);\n    }\n    return\
    \ r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106441
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res = l;\n    std::sort(res.begin(),\
    \ res.end());\n    for(auto it : res) {\n        if(it != res[res.size() - 1])\n\
    \            res[res.size() - 1] += 1;\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpp6a4v9jn: /tmp/tmpp6a4v9jn.cpp:20: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106441
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> out;\n    long temp;\n\
    \    long n = 0;\n    for (long i = 0; i < l.size(); i++) {\n        temp = (l[i]\
    \ + 1);\n        if (temp > n) {\n            out.push_back(n);\n            n\
    \ = temp;\n        } else {\n            out.push_back(temp);\n        }\n   \
    \ }\n    out.push_back(n);\n    return out;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpcqkgabqs: /tmp/tmpcqkgabqs.cpp:26: int main(): Assertion `candidate((std::vector<long>()))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660106441
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::sort(l.begin(), l.end());\n    std::vector<long>\
    \ result;\n    for (long i = 0; i < l.size() - 1; i++) {\n        if (l[i] ==\
    \ l[i + 1]) {\n            result.push_back(l[i] + 1);\n        }\n        else\
    \ {\n            result.push_back(l[i]);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106441
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> res(l.size());\n  for\
    \ (size_t i = 0; i < l.size(); ++i) {\n    res[i] = l[i] + 1;\n  }\n  return res;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106441
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::sort(l.begin(), l.end());\n    std::vector<long>\
    \ r{l};\n    for (long i = l.size() - 1; i >= 0; --i) {\n        r.push_back(i\
    \ + 1);\n    }\n    return r;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpz1pwg_i3: /tmp/tmpz1pwg_i3.cpp:19: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106441
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n\tauto it = std::begin(l);\n\tstd::advance(it,\
    \ 1);\n\treturn std::vector{it, std::end(l)}; // this works in C++14\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnhcaaw_r.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpnhcaaw_r.cpp:11:14: error: could not convert \u2018std::vector<__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >, std::allocator<__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> > > >(std::initializer_list<__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> > >{((const __gnu_cxx::__normal_iterator<long int*,\
    \ std::vector<long int> >*)(& const __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> > [2]{it, std::end<std::vector<long int> >(l)})), 2}, std::allocator<__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> > >())\u2019 from \u2018vector<__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >,allocator<__gnu_cxx::__normal_iterator<long int*,\
    \ std::vector<long int> >>>\u2019 to \u2018vector<long int,allocator<long int>>\u2019\
    \n   11 |  return std::vector{it, std::end(l)}; // this works in C++14\n     \
    \ |              ^~~~~~~~~~~~~~~~~~~~~~~\n      |              |\n      |    \
    \          vector<__gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >,allocator<__gnu_cxx::__normal_iterator<long int*, std::vector<long int> >>>\n"
  stdout: ''
  timestamp: 1660106441
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> out(l.size());\n   \
    \ for (long i = 0; i < l.size(); ++i)\n        out[i] += l[i];\n    return out;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpvj4g0d5l: /tmp/tmpvj4g0d5l.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106442
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret(l.size());\n   \
    \ for (size_t i = 0; i < l.size(); i++)\n        ret[i] = l[i]+1;\n    return\
    \ ret;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106441
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res(l);\n    std::iota(res.begin(),\
    \ res.end(), 0);\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpsizhw736: /tmp/tmpsizhw736.cpp:16: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106441
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    // Check size of l is bigger than 0, if\
    \ yes, just return l.\n    if (l.size() <= 0) return l;\n    // Reserve space\
    \ for new vector with the size of l.\n    std::vector<long> new_l; new_l.reserve(l.size());\n\
    \    // Iterate over l, for each element we add 1 to new_l and save it back\n\
    \    // to the original vector.\n    for (auto &elem : l) {\n        new_l.push_back(elem\
    \ + 1);\n        elem = new_l[l.size() - 1];\n    }\n    return new_l;\n}\nint\
    \ main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106441
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size() > 0);\n    std::vector<long>\
    \ r(l.size());\n    for (long i = 0; i < l.size(); i++) {\n        r[i] = l[i]\
    \ + 1;\n    }\n    return r;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp1qy31xva: /tmp/tmp1qy31xva.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660106441
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r;\n    long x = 0;\n\
    \    for (auto i : l) {\n        r.push_back(x = i + 1);\n    }\n    return r;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106441
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> res = l;\n  std::for_each(std::begin(l),\
    \ std::end(l), [&res](long const &i) { res.push_back(i + 1); });\n  return res;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpoa6uezjq: /tmp/tmpoa6uezjq.cpp:16: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r(l.size(), 0);\n  \
    \  for (long i = 0; i < l.size(); i++) {\n        r[i] = r[i] + 1;\n        if\
    \ (r[i] < l[i])\n            r[i] = l[i];\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp71a7iqsw: /tmp/tmp71a7iqsw.cpp:20: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n\tstd::vector<long> result = l;\n\tfor (long\
    \ i = 0; i < l.size(); ++i) {\n\t\tresult[i + 1] += result[i];\n\t}\n\treturn\
    \ result;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpn6eeiufw: /tmp/tmpn6eeiufw.cpp:18: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106441
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  for (size_t i = 0; i < l.size(); i++) {\n\
    \    l[i+1] = l[i] + 1;\n  }\n  return l;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpr43ggd0x: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top
    (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse
    (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)'' failed.

    '
  stdout: ''
  timestamp: 1660106442
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n\tstd::vector<long> ret;\n\tret.reserve(l.size());\n\
    \tlong t = 0;\n\tfor (long i = 0; i < l.size(); ++i) {\n\t\tret.push_back(l[i]\
    \ + 1);\n\t}\n\treturn ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106441
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  assert (l.size() >= 2) ;\n  std::vector<long>\
    \ res (l.size() - 1) ;\n  long i = l[0], j = 1 ;\n  for (long k = 1; k < l.size()\
    \ ; k++)\n  {\n    if (i > l[k])\n    {\n      res[j++] = l[k] ++ ;\n      i =\
    \ l[k] ;\n    }\n    else\n    {\n      res[j++] = l[k] ++ ;\n    }\n  }\n  res[j++]\
    \ = l[k++] ;\n  return res ;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzefsqznw.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpzefsqznw.cpp:24:16: error: \u2018k\u2019 was not declared\
    \ in this scope\n   24 |   res[j++] = l[k++] ;\n      |                ^\n"
  stdout: ''
  timestamp: 1660106441
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    // Invariant 1: No duplicate elements\
    \ in the input list.\n    assert(std::adjacent_find(l.begin(), l.end()) == l.end());\n\
    \    // Invariant 2: No empty or null elements.\n    assert(l.size() > 0);\n \
    \   std::vector<long> r;\n    r.push_back(l.front());\n    for (long i = l.size()\
    \ - 2; i >= 0; i--) {\n        long a = r.back() + 1;\n        r.push_back(a);\n\
    \        if (r.size() >= 3) {\n            long b = r.back() + 1;\n          \
    \  long c = r.back() + 1;\n            r.push_back(b);\n            r.push_back(c);\n\
    \            if (r.size() >= 6) {\n                long d = r.back() + 1;\n  \
    \              long e = r.back() + 1;\n                long f = r.back() + 1;\n\
    \                r.push_back(d)\n                r.push_back(e);\n           \
    \     r.push_back(f);\n                if (r.size() >= 12) {\n               \
    \     long g = r.back() + 1;\n                    long h = r.back() + 1;\n   \
    \                 long i = r.back() + 1;\n                    long j = r.back()\
    \ + 1;\n                    long k = r.back() + 1;\n                    long l\
    \ = r.back() + 1;\n                    long m = r.back() + 1;\n              \
    \      long n = r.back() + 1;\n                    r.push_back(m)\n          \
    \          r.push_back(n);\n                    r.push_back(g);\n            \
    \        r.push_back(h);\n                    r.push_back(i);\n              \
    \      r.push_back(j);\n                    r.push_back(k);\n                \
    \    r.push_back(l);\n                }\n            }\n        }\n    }\n   \
    \ return r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9dehls2r.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp9dehls2r.cpp:27:31: error: expected \u2018;\u2019 before\
    \ \u2018r\u2019\n   27 |                 r.push_back(d)\n      |             \
    \                  ^\n      |                               ;\n   28 |       \
    \          r.push_back(e);\n      |                 ~              \n/tmp/tmp9dehls2r.cpp:39:35:\
    \ error: expected \u2018;\u2019 before \u2018r\u2019\n   39 |                \
    \     r.push_back(m)\n      |                                   ^\n      |   \
    \                                ;\n   40 |                     r.push_back(n);\n\
    \      |                     ~              \n"
  stdout: ''
  timestamp: 1660106441
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res(l.size());\n   \
    \ for(size_t i = 0; i < l.size(); ++i) {\n        ++res[i];\n        if(res[i]\
    \ != l[i]) {\n            res[i] = l[i];\n        }\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpv7xyx_sw: /tmp/tmpv7xyx_sw.cpp:21: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  for (int i = l.size(); i > 1; --i) {\n \
    \   l[i] += l[i - 1];\n  }\n  return l;\n}\nint main() {\n    auto candidate =\
    \ incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpuqvj60ry: /tmp/tmpuqvj60ry.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret;\n    ret.reserve(l.size());\n\
    \    for (auto it = l.begin(), last = l.end(); it != last; ++it)\n        ++ret[*it];\n\
    \    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmph3fyb1jz: /tmp/tmph3fyb1jz.cpp:18: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106442
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> incr;\n    for (long\
    \ e : l)\n        incr.push_back(e+1);\n    return incr;\n}\nint main() {\n  \
    \  auto candidate = incr_list;\n    assert(candidate((std::vector<long>())) ==\
    \ (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106442
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res(l.size());\n   \
    \ for (size_t i = 0; i < l.size(); i++) {\n        res[i] = l[i] + 1;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106442
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r(l.size());\n    for\
    \ (size_t i = 0; i < r.size(); i++) {\n        r[i] = l[i] + 1;\n    }\n    return\
    \ r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106442
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> incr_vec(l.size());\n\
    \    for (long i = 0; i < l.size(); ++i) {\n        incr_vec[i] = l[i] + 1;\n\
    \    }\n    return incr_vec;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r(l.size());\n    for\
    \ (long i = 0; i < l.size(); i++) r[i] = i + 1;\n    return r;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpccrtltlg: /tmp/tmpccrtltlg.cpp:16: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    res.insert(res.begin(),\
    \ l.begin(), l.end());\n    return res;\n}\nint main() {\n    auto candidate =\
    \ incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpqzzzyhf0: /tmp/tmpqzzzyhf0.cpp:16: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    res.reserve(l.size());\n\
    \    for (long i = 0; i < l.size(); ++i)\n        res.push_back(l.at(i + 1));\n\
    \    return res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  vector::_M_range_check: __n (which is 3) >= this->size() (which is 3)\n"
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    assert(l.size() != 0);\n    std::vector<long>\
    \ r(l.size());\n    for (long i = 0; i < l.size(); i++) {\n        assert(l[i]\
    \ >= 0);\n        r[i] = l[i] + 1;\n    }\n    return r;\n}\nint main() {\n  \
    \  auto candidate = incr_list;\n    assert(candidate((std::vector<long>())) ==\
    \ (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp0k7tjavk: /tmp/tmp0k7tjavk.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() != 0'' failed.

    '
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    auto n = l.size();\n    std::vector<long>\
    \ temp;\n    std::vector<long> result(n - 1, 0);\n\n    for (size_t i = 1; i <\
    \ n; i++) {\n        temp.push_back(temp[i - 1] + 1);\n        result[i] = temp[i];\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::length_error'\n  what():\
    \  cannot create std::vector larger than max_size()\n"
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  assert(l.size() > 0);\n  std::vector<long>\
    \ r(l.size());\n  std::iota(r.begin(), r.end(), 0);\n  std::sort(r.begin(), r.end(),\
    \ [&l](long i1, long i2){ return l[i1] > l[i2]; });\n  for (long i = 0; i + 1\
    \ < l.size(); ++i)\n    r[i + 1] += r[i];\n  return r;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmp4gvx52l2: /tmp/tmp4gvx52l2.cpp:9: std::vector<long int> incr_list(std::vector<long
    int>): Assertion `l.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660106442
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  assert(l.size() > 0);\n  std::size_t size\
    \ = l.size();\n  std::vector<long> result;\n  for (long i = 1, j = 0, k = 0; i\
    \ < size; i++) {\n    if (j < i) {\n      result.push_back(j);\n      j = i;\n\
    \    } else if (j > i) {\n      if (k) {\n        result.push_back(k);\n     \
    \   k += i;\n      } else if (i - j > 0) {\n        k = i + j - i;\n        result.push_back(j);\n\
    \      } else if (j - i <= 0) {\n        k = i;\n      } else {\n        result.push_back(j);\n\
    \        j += i;\n      }\n    }\n  }\n  result.push_back(j);\n  return result;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpycgzhy4_.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpycgzhy4_.cpp:31:20: error: \u2018j\u2019 was not declared\
    \ in this scope\n   31 |   result.push_back(j);\n      |                    ^\n"
  stdout: ''
  timestamp: 1660106442
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  auto it = std::begin(l);\n  auto it_end\
    \ = std::end(l);\n  std::vector<long> ret;\n  while (it != it_end) {\n    auto\
    \ it = std::next(it, 1);\n    ret.push_back(*it);\n  }\n  return ret;\n}\nint\
    \ main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2_zzcse9.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp2_zzcse9.cpp:13:25: error: use of \u2018it\u2019 before\
    \ deduction of \u2018auto\u2019\n   13 |     auto it = std::next(it, 1);\n   \
    \   |                         ^~\n"
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> r;\n  // Use a reverse\
    \ iterator to avoid copying entire list.\n  for (auto it = l.rbegin(); it != l.rend();\
    \ ++it)\n    r.push_back(*it + 1);\n  return r;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmp_if7l6wh: /tmp/tmp_if7l6wh.cpp:18: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106442
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> temp;\n    long ans\
    \ = l.front();\n    for (long x : l)\n        ans += 1;\n    for (long i = l.size()\
    \ - 1; i >= 0; i--)\n        temp.push_back(ans);\n    return temp;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> v(l.size());\n    std::iota(v.begin(),\
    \ v.end(), 0);\n    std::sort(v.begin(), v.end(), std::greater<long>());\n   \
    \ return v;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp2fc6ads7: /tmp/tmp2fc6ads7.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106442
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> res;\n    res.reserve(l.size()\
    \ + 1);\n    for (auto &e : l)\n        res.push_back(e+1);\n    return res;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106442
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> ret;\n  for (auto v :\
    \ l) {\n    ret.push_back(v + 1);\n  }\n  return ret;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> r;\n    for(auto i :\
    \ l)\n        r.push_back(r.size() + 1);\n    return r;\n}\nint main() {\n   \
    \ auto candidate = incr_list;\n    assert(candidate((std::vector<long>())) ==\
    \ (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpt8j81ii_: /tmp/tmpt8j81ii_.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106443
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::map<long, long> res;\n  for (int i\
    \ = 0; i < l.size(); i++)\n    res[++l[i]] = l[i];\n  return std::vector<long>(std::begin(res),\
    \ std::end(res));\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/vector:66,\n                 from\
    \ /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmphuq6b8qt.cpp:2:\n/usr/include/c++/9/bits/stl_uninitialized.h: In instantiation\
    \ of \u2018_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator,\
    \ _ForwardIterator) [with _InputIterator = std::_Rb_tree_iterator<std::pair<const\
    \ long int, long int> >; _ForwardIterator = long int*]\u2019:\n/usr/include/c++/9/bits/stl_uninitialized.h:307:37:\
    \   required from \u2018_ForwardIterator std::__uninitialized_copy_a(_InputIterator,\
    \ _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator\
    \ = std::_Rb_tree_iterator<std::pair<const long int, long int> >; _ForwardIterator\
    \ = long int*; _Tp = long int]\u2019\n/usr/include/c++/9/bits/stl_vector.h:1582:33:\
    \   required from \u2018void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator,\
    \ _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = std::_Rb_tree_iterator<std::pair<const\
    \ long int, long int> >; _Tp = long int; _Alloc = std::allocator<long int>]\u2019\
    \n/usr/include/c++/9/bits/stl_vector.h:654:4:   required from \u2018std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with\
    \ _InputIterator = std::_Rb_tree_iterator<std::pair<const long int, long int>\
    \ >; <template-parameter-2-2> = void; _Tp = long int; _Alloc = std::allocator<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<long int>]\u2019\
    \n/tmp/tmphuq6b8qt.cpp:12:58:   required from here\n/usr/include/c++/9/bits/stl_uninitialized.h:127:72:\
    \ error: static assertion failed: result type must be constructible from value\
    \ type of input range\n  127 |       static_assert(is_constructible<_ValueType2,\
    \ decltype(*__first)>::value,\n      |                                       \
    \                                 ^~~~~\n"
  stdout: ''
  timestamp: 1660106442
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    for (long i = 0, k = 0; i < l.size();\
    \ i++) {\n        l[i]++;\n        if (l[i] != k) {\n            k = l[i];\n \
    \       }\n    }\n    return l;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3,\
    \ 2, 1}))) == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106443
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    auto it = l.begin();\n    std::vector<long>\
    \ ret;\n    ret.reserve(l.size());\n    for (; it != l.end(); ++it) {\n      \
    \  ret.push_back(*it);\n        ret.push_back(ret[ret.size() - 1] + 1);\n    }\n\
    \    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpyruscp3j: /tmp/tmpyruscp3j.cpp:21: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106443
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> result;\n    result.insert(std::end(result),\
    \ std::begin(l), std::end(l));\n    for(auto i : l) ++result[i];\n    return result;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpy1b834z5: /tmp/tmpy1b834z5.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106443
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret(l.size());\n   \
    \ for (long i = 0; i < l.size(); i++) {\n        ret[i] = i + 1;\n    }\n    return\
    \ ret;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpt20oifcw: /tmp/tmpt20oifcw.cpp:18: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106443
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  l.insert(l.begin(), l.begin() + 1, l.end());\n\
    \  return l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::length_error'\n  what():\
    \  vector::_M_range_insert\n"
  stdout: ''
  timestamp: 1660106443
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    long long i, sum = 1;\n    std::vector<long>\
    \ res;\n    for (i = 1; i < l.size(); i++) sum += l[i];\n    for (i = 0; i < sum;\
    \ i++) {\n        res.push_back(l.size());\n        l += l;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb9kysoth.cpp: In function \u2018std::vector<long int> incr_list(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpb9kysoth.cpp:14:11: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018std::vector<long\
    \ int>\u2019)\n   14 |         l += l;\n      |         ~~^~~~\n"
  stdout: ''
  timestamp: 1660106442
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  for (long i = 0; i < l.size(); ++i) {\n\
    \    if (i == 0) {\n      l[i] = l[i] + 1;\n    }\n    else if (l[i] == l[i -\
    \ 1] + 1) {\n      l[i] = l[i] + 1;\n    }\n    else {\n      l[i - 1] = l[i -\
    \ 1] + 1;\n      std::swap(l[i], l[i - 1]);\n    }\n  }\n  return l;\n}\nint main()\
    \ {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmpr7j2bj5w: /tmp/tmpr7j2bj5w.cpp:26: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106443
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> out(l.size());\n   \
    \ for (long &i: out)\n        i = i + 1;\n    return out;\n}\nint main() {\n \
    \   auto candidate = incr_list;\n    assert(candidate((std::vector<long>())) ==\
    \ (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: Exception
  stderr: 'tmp067adtqr: /tmp/tmp067adtqr.cpp:17: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106443
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  l.clear();\n  for (long i = 1; i <= l.size();\
    \ ++i) {\n    l.push_back(i);\n  }\n  return l;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({3, 2, 1}))) == (std::vector<long>({4,\
    \ 3, 2})));\n    assert(candidate((std::vector<long>({5, 2, 5, 2, 3, 3, 9, 0,\
    \ 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1, 124})));\n}\n"
  status: Exception
  stderr: 'tmpvq947e6h: /tmp/tmpvq947e6h.cpp:18: int main(): Assertion `candidate((std::vector<long>({3,
    2, 1}))) == (std::vector<long>({4, 3, 2}))'' failed.

    '
  stdout: ''
  timestamp: 1660106443
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n  std::vector<long> res;\n  for (auto it =\
    \ l.begin(); it != l.end(); ++it) {\n    res.push_back(*it+1);\n  }\n  return\
    \ res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106443
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> ret(l);\n    for (size_t\
    \ i = 0; i < ret.size(); i++) {\n        ret[i] += 1;\n    }\n    return ret;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106443
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list([1, 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4, 4, 10, 1, 124]\nstd::vector<long>\
    \ incr_list(std::vector<long> l) {\n    std::vector<long> v;\n    for (long i\
    \ : l) {\n        v.push_back(++i);\n    }\n    return v;\n}\nint main() {\n \
    \   auto candidate = incr_list;\n    assert(candidate((std::vector<long>())) ==\
    \ (std::vector<long>()));\n    assert(candidate((std::vector<long>({3, 2, 1})))\
    \ == (std::vector<long>({4, 3, 2})));\n    assert(candidate((std::vector<long>({5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123}))) == (std::vector<long>({6, 3, 6, 3, 4, 4, 10, 1,\
    \ 124})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660106443

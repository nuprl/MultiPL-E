language: cpp
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(a > 0 && b > 0);\n  long gcd = 0;\n  long r = a % b;\n\
    \  while (!(r == 0)) {\n    gcd = r;\n    r = b % a;\n  }\n  return gcd;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103493
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long res = 0;\n    long m = (a % b == 0) ? b : a % b;\n  \
    \  while (m != 0) {\n        res = (a/m)*(b/m)*m + (m%2 == 0?1:0);\n        if\
    \ ((a /= m) < b)\n            return res;\n        if ((b /= m) < a)\n       \
    \     return (res + m)/b;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpwib31zj7: /tmp/tmpwib31zj7.cpp:22: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    if (a == 0) return b;\n    if (a\
    \ > b) return greatest_common_divisor(b, a % b);\n    return greatest_common_divisor(a,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: Exception
  stderr: 'tmp58gtkua4: /tmp/tmp58gtkua4.cpp:16: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long d = a % b;\n  long r = a / b;\n  if (d < 0) d += b;\n \
    \ return r + d;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpsv0qbwdm: /tmp/tmpsv0qbwdm.cpp:16: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long max_divisor = a;\n  for (int i = 2; i <= b; i++) {\n  \
    \  if (max_divisor % i == 0)\n      max_divisor /= i;\n  }\n  return max_divisor;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpjpfh7qs0: /tmp/tmpjpfh7qs0.cpp:19: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    if (b == 1)\n        return\
    \ a;\n    return greatest_common_divisor(b, a % b);\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpav87inq3: /tmp/tmpav87inq3.cpp:17: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(a >= b);\n  if (b == 0)\n    return a;\n  long g = a%b;\n\
    \  if (g > 0)\n    return greatest_common_divisor(b, g);\n  return b;\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp6iv4s5az: /tmp/tmp6iv4s5az.cpp:9: long int greatest_common_divisor(long
    int, long int): Assertion `a >= b'' failed.

    '
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    assert(b > 0);\n    while (b != 0) {\n        int a_rem =\
    \ a % b;\n        int b_rem = b % a;\n        a = b;\n        b = a_rem;\n   \
    \ }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103487
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a == 0 || b == 0)\n        return 0;\n    long d = a;\n\
    \    while (b > 0) {\n        int r1 = d % b;\n        d = b;\n        b = r1;\n\
    \    }\n    return d;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n   while (a != 0) {\n      if (a > b) {\n         a = a - b;\n\
    \      } else if (a < b) {\n         b = b - a;\n      } else {\n         break;\n\
    \      }\n   }\n   return b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    assert(b > 0);\n    if (b == 1) return a;\n    if (a == 0)\
    \ return b;\n    return greatest_common_divisor(b, a % b);\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5zmyupyd: /tmp/tmp5zmyupyd.cpp:16: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103489
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    for(;;) {\n        if(b == 0) {\n     \
    \       return gcd;\n        }\n        if(b == 1) {\n            return a;\n\
    \        }\n        gcd++;\n        b = b % a;\n        a = a;\n    }\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpm6eyzuma: /tmp/tmpm6eyzuma.cpp:24: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103489
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    do {\n        gcd = a % b;\n        a = b;\n\
    \        b = gcd;\n    } while (gcd != 0 && b != 0);\n    return gcd;\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpo17x_dvy: /tmp/tmpo17x_dvy.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n\t// initialize greatest common divisor as 1\n\tlong gcd=1; \n\
    \t// calculate gcd\n\twhile(a!=0 && b!=0) {\n\t\tif(a>b) swap(a,b);\n\t\tif(a%b==0)\
    \ {\n\t\t\tgcd=b;\n\t\t\tbreak;\n\t\t}\n\t\tif(b%a==0) {\n\t\t\tgcd=a;\n\t\t\t\
    break;\n\t\t}\n\t\tswap(a,b);\n\t}\n\treturn gcd;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbtrdre1m.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpbtrdre1m.cpp:13:11: error: \u2018swap\u2019 was\
    \ not declared in this scope\n   13 |   if(a>b) swap(a,b);\n      |          \
    \ ^~~~\n/tmp/tmpbtrdre1m.cpp:13:11: note: suggested alternatives:\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpbtrdre1m.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpbtrdre1m.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpbtrdre1m.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmpbtrdre1m.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap(path&\
    \ __"
  stdout: ''
  timestamp: 1660103488
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    if (a == 0) return b;\n\n    //\
    \ Find GCD\n    while (a % b != 0) {\n        a = a % b;\n    }\n\n    return\
    \ b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103493
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a < b) return greatest_common_divisor(b, a % b);\n   \
    \ a = abs(a);\n    b = abs(b);\n    while (b) {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long tmp;\n    while (a > b) {\n        tmp = a;\n       \
    \ a = b;\n        b = tmp;\n    }\n    while (a % b == 0)\n        a = a / b;\n\
    \    return b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp62d2de2w: /tmp/tmp62d2de2w.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = a;\n    while (a % b != 0)\
    \ {\n        if (a * b > greatest_common_divisor) greatest_common_divisor = greatest_common_divisor\
    \ + b;\n        b /= 2;\n    }\n    return greatest_common_divisor;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpg2iieub9: /tmp/tmpg2iieub9.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    long a = abs(a);\n    long b = abs(b);\n\
    \    if (b > a) {\n        long m = 0;\n        while (a % b != 0) {\n       \
    \     m = b;\n            b = a % b;\n            a /= b;\n        }\n       \
    \ gcd = m;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbcp9p4jx.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpbcp9p4jx.cpp:10:10: error: declaration of \u2018\
    long int a\u2019 shadows a parameter\n   10 |     long a = abs(a);\n      |  \
    \        ^\n/tmp/tmpbcp9p4jx.cpp:11:10: error: declaration of \u2018long int b\u2019\
    \ shadows a parameter\n   11 |     long b = abs(b);\n      |          ^\n"
  stdout: ''
  timestamp: 1660103488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  // Handle the trivial cases\n  if (a == 0)\n    return b;\n\
    \  if (b == 0)\n    return a;\n  if (a < b) {\n    long temp = a;\n    a = b;\n\
    \    b = temp;\n  }\n  // Get common factors of b and a\n  while (a % b != 0)\n\
    \    b /= 2;\n  long g = b / 2;\n  while (a == 1 || b == 1)\n    g = gcd(a, b);\n\
    \  return g;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_o07rt17.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmp_o07rt17.cpp:24:9: error: \u2018gcd\u2019 was\
    \ not declared in this scope; did you mean \u2018std::gcd\u2019?\n   24 |    \
    \ g = gcd(a, b);\n      |         ^~~\n      |         std::gcd\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:84,\n               \
    \  from /tmp/tmp_o07rt17.cpp:2:\n/usr/include/c++/9/numeric:132:5: note: \u2018\
    std::gcd\u2019 declared here\n  132 |     gcd(_Mn __m, _Nn __n) noexcept\n   \
    \   |     ^~~\n"
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long m;\n    while(b > 0) {\n        m = a % b;\n        a\
    \ = b;\n        b = m;\n    }\n    return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(a == 0)\n        return b;\n    if(b == 0)\n        return\
    \ a;\n    if(a > b)\n        std::swap(a, b);\n    long r = a % b;\n    if(r ==\
    \ 0)\n        return a;\n    return greatest_common_divisor(b, r);\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = a;\n    for(long x = b; x !=\
    \ 0; x /= b){\n        if(a%x == 0){\n            greatest_common_divisor = x;\n\
    \            break;\n        }\n    }\n    return greatest_common_divisor;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpq6hm2i8y: /tmp/tmpq6hm2i8y.cpp:21: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103489
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    if (a == 0 ||\
    \ b == 0) {\n        return 0;\n    }\n    long g = greatest_common_divisor(b,\
    \ a % b);\n    if (b / g != a) {\n        return g;\n    }\n    return b;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    long r = a %\
    \ b;\n    if (r == 0) {\n        return b;\n    }\n    long q = a / b;\n    long\
    \ m = greatest_common_divisor(b, r);\n    return m * q;\n}\nint main() {\n   \
    \ auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) ==\
    \ (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpsm0lem6l: /tmp/tmpsm0lem6l.cpp:22: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (a && b) {\n        if ((a % b) == 0) return b;\n  \
    \      if (a > b) a = a - b;\n        else b = b - a;\n    }\n    return a;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  return (b == 0) ? a : greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b > 0) {\n        long r = a % b;\n        a = b;\n\
    \        b = r;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103487
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    else if (a == 0)\n   \
    \     return b;\n    long greatest_common_divisor = a;\n    while (b) {\n    \
    \    if (b % a == 0)\n            greatest_common_divisor = a;\n        if (b\
    \ % b == 0)\n            greatest_common_divisor = b;\n        a = a % b;\n  \
    \      b = b / 2;\n    }\n    return greatest_common_divisor;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long r = 1;\n    long q;\n    while (b) {\n        q = a /\
    \ b;\n        a = b;\n        b = q;\n        r *= b;\n    }\n    return r;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp_fk4mppr: /tmp/tmp_fk4mppr.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103489
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b > 0) {\n        long temp = b;\n        b = a % b;\n\
    \        a = temp;\n    }\n    return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long max_divisor = a % b;\n    while (max_divisor != 0) {\n\
    \        max_divisor = b;\n        b = max_divisor % a;\n    }\n    return b;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103493
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        long t = a % b;\n        a = b;\n\
    \        b = t;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while(1) {\n        if(a < b) {\n            a += b;\n   \
    \     } else {\n            b += a;\n            a %= b;\n        }\n    }\n \
    \   return b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103493
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n   if (a == 0)\n      return b;\n   if (b == 0)\n      return\
    \ a;\n   if (a < b)\n      swap(a, b);\n\n   long div = a / b;\n   while (a %\
    \ b != 0)\n      div++;\n\n   return div;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplw_v_evx.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmplw_v_evx.cpp:14:7: error: \u2018swap\u2019 was\
    \ not declared in this scope\n   14 |       swap(a, b);\n      |       ^~~~\n\
    /tmp/tmplw_v_evx.cpp:14:7: note: suggested alternatives:\nIn file included from\
    \ /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmplw_v_evx.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmplw_v_evx.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmplw_v_evx.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmplw_v_evx.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap(path&\
    \ __lhs, path"
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        int temp = b;\n        b = a % b;\n\
    \        a = temp;\n    }\n    return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n\n    long greatest_divisor\
    \ = b;\n    while (a % greatest_divisor == 0) {\n        greatest_divisor = b;\n\
    \        b--;\n    }\n    return greatest_divisor;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpqpt8ee7v: /tmp/tmpqpt8ee7v.cpp:22: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    int c;\n    while (b != 0) {\n        c = a%b;\n        a\
    \ = b;\n        b = c;\n    }\n    return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  while (b) {\n    if (a % b == 0)\n      return b;\n    b /=\
    \ 2;\n  }\n  return 1;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpzye9f42o: /tmp/tmpzye9f42o.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103488
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long r;\n  if (a < b) std::swap(a, b);\n  r = 1;\n  while (a\
    \ % b != 0) {\n    long c = b;\n    b = a % c;\n    a = c;\n  }\n  while (b >\
    \ 0) r *= b;\n  return r;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103493
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0)\n    {\n        long temp = a;\n        a =\
    \ b;\n        b = temp % b;\n    }\n    return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // assert(a>=0 && b >= 0);\n    long c = a % b;\n    if (c\
    \ == 0)\n        return b;\n    else\n        return greatest_common_divisor(b,\
    \ c);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    assert(b != 0);\n    if (b > a) {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n    // Only return divisor for b that is smaller than a\n  \
    \  if (b == a % b) {\n        return b;\n    }\n    // Find gcd of a and b\n \
    \   long r = a % b;\n    long g = gcd(a, b % r);\n    // If r and g are equal,\
    \ return r\n    if (r == g) {\n        return r;\n    }\n    return greatest_common_divisor(r,\
    \ g);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3r5j_ibd.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmp3r5j_ibd.cpp:19:14: error: \u2018gcd\u2019 was\
    \ not declared in this scope; did you mean \u2018std::gcd\u2019?\n   19 |    \
    \ long g = gcd(a, b % r);\n      |              ^~~\n      |              std::gcd\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:84,\n\
    \                 from /tmp/tmp3r5j_ibd.cpp:2:\n/usr/include/c++/9/numeric:132:5:\
    \ note: \u2018std::gcd\u2019 declared here\n  132 |     gcd(_Mn __m, _Nn __n)\
    \ noexcept\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long ans = 1;\n    while (a != 0) {\n        if (a > b) {\n\
    \            ans = b;\n            b = a;\n        } else if (a == b) {\n    \
    \        return a;\n        }\n        a = a / 2;\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmphkqdk6hk: /tmp/tmphkqdk6hk.cpp:24: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103489
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return a>b?b:a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpqdz11bvk: /tmp/tmpqdz11bvk.cpp:13: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103490
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (a == 0) return b;\n  if (b == 0) return a;\n  if (a % 2\
    \ == 0 && b % 2 == 0) {\n    return greatest_common_divisor(a / 2, b / 2);\n \
    \ }\n  while (a % 2 == 0) {\n    a = a / 2;\n  }\n  while (b % 2 == 0) {\n   \
    \ b = b / 2;\n  }\n  while (a > b) {\n    a = a / 2;\n    b = b / 2;\n  }\n  return\
    \ a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpyzwux205: /tmp/tmpyzwux205.cpp:28: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103490
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = a%b;\n    while (b > 0) {\n        if(gcd != 0)\n\
    \            gcd = b%gcd != 0 ? b%gcd : gcd;\n        else\n            return\
    \ b;\n        b = gcd != 0 ? gcd(b,gcd) : b;\n    }\n    return b;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl06r46vv.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpl06r46vv.cpp:15:33: error: \u2018gcd\u2019 cannot\
    \ be used as a function\n   15 |         b = gcd != 0 ? gcd(b,gcd) : b;\n    \
    \  |                                 ^\n"
  stdout: ''
  timestamp: 1660103490
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long min_a = a;\n  long min_b = b;\n\n  if (a > b) {\n    long\
    \ tmp = a;\n    a = b;\n    b = tmp;\n  }\n\n  while (b != 0) {\n    if (a % b\
    \ == 0) {\n      min_a = b;\n      b = a / b;\n    } else {\n      min_b = a;\n\
    \      a = b / a;\n    }\n  }\n  return min_a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103495
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103490
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long result = (a % b);\n    while(result != 0) {\n       \
    \ result = b - result;\n        b = (a % b);\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ (b % a));\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpr1oysj9g: /tmp/tmpr1oysj9g.cpp:18: int main(): Assertion `candidate((49),
    (14)) == (7)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Return the greatest common divisor of a and b\n    return\
    \ b ? gcd(b, a % b) : a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr25oq3ry.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpr25oq3ry.cpp:10:16: error: \u2018gcd\u2019 was\
    \ not declared in this scope; did you mean \u2018std::gcd\u2019?\n   10 |    \
    \ return b ? gcd(b, a % b) : a;\n      |                ^~~\n      |         \
    \       std::gcd\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:84,\n\
    \                 from /tmp/tmpr25oq3ry.cpp:2:\n/usr/include/c++/9/numeric:132:5:\
    \ note: \u2018std::gcd\u2019 declared here\n  132 |     gcd(_Mn __m, _Nn __n)\
    \ noexcept\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660103490
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(a%b == 0)\n        return b;\n    else\n        return\
    \ greatest_common_divisor(b,a%b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103490
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long p = a;\n    long q = b;\n    long r;\n    while(1){\n\
    \        r = p % q;\n        if (p == q) return r;\n        if (r > 0) p++;\n\
    \        else q--;\n    }\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmppxwxcemt: /tmp/tmppxwxcemt.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b > a)\n    std::swap(a, b);\n  long res = 0;\n  while (a\
    \ % b != 0)\n    res = b;\n  return res != 0 ? b : a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103496
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long res = 1;\n    while (a % b != 0) {\n        res = (res\
    \ * b) % a;\n    }\n    return res;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103495
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  // If b is even, return gcd(a, b). gcd(a, b) is the greatest\
    \ common divisor of the integers a and b.\n  if (b % 2 == 0)\n    return greatest_common_divisor(a,\
    \ b / 2);\n\n  // If b is odd, return gcd(a, b/2)\n  if (a % 2 == 0)\n    return\
    \ greatest_common_divisor(a / 2, b);\n\n  // Otherwise, a and b are both odd.\n\
    \  long greatest = 1;\n  while (a > b) {\n    long temp = a;\n    a = b;\n   \
    \ b = temp;\n  }\n\n  // a is greatest common divisor of b and greater than (or\
    \ equal to) b.\n  while (a < b) {\n    long temp = b;\n    b = a;\n    a = temp;\n\
    \  }\n\n  return b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp4v_6eo3q: /tmp/tmp4v_6eo3q.cpp:36: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long int r=1LL, x, y, q, p, qp;\n    if (a == 0) return\
    \ b;\n    if (b == 0) return a;\n    q = a / b;\n    x = a % b;\n    y = b - x;\n\
    \    while (y != 0) {\n        q = q * y;\n        ++qp;\n        y = y / b;\n\
    \    }\n    while (x != 0) {\n        q = q + x;\n        qp = qp + 1;\n     \
    \   x = x / a;\n    }\n    return q;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpgx570dhm: /tmp/tmpgx570dhm.cpp:29: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(a == 0) return b;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103491
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long x = a;\n  long y = b;\n  long r;\n  while (y != 0) {\n\
    \    r = x % y;\n    x = y;\n    y = r;\n  }\n  return x;\n}\nint main() {\n \
    \   auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103491
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long d = 1;\n    while (a != 0) {\n        long div = a /\
    \ b;\n        if (div > d) {\n            d = div;\n        }\n        a = a %\
    \ b;\n    }\n    return d;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103496
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    assert(b != 0);\n    long a_b = a % b;\n    long a_ab = a\
    \ - a_b;\n    if (a_ab == 0) return b;\n    long b_ab = b - a_b;\n    return greatest_common_divisor(a_ab,\
    \ b_ab);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n   \
    \ assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: Exception
  stderr: 'tmpyp213d7y: /tmp/tmpyp213d7y.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long remainder;\n  remainder = a % b;\n  while (remainder !=\
    \ 0)\n  {\n    a = b;\n    b = remainder;\n    remainder = a % b;\n  }\n  return\
    \ b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103491
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if(b == 0) return a;\n  return greatest_common_divisor(b, a\
    \ % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103490
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return (b == 0) ? a : greatest_common_divisor(b, a % b);\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103491
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(b == 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long mid = a / 2;\n  \
    \  if (a % 2 == 0 && b%2 == 0)\n        return greatest_common_divisor(mid, b/2);\n\
    \    if (a % 2 == 0 && b%2 != 0)\n        return greatest_common_divisor(mid,\
    \ b/2);\n    if (a % 2 != 0 && b%2 == 0)\n        return greatest_common_divisor(mid,\
    \ a/2);\n    if (a % 2 != 0 && b%2 != 0)\n        return greatest_common_divisor(mid,\
    \ a/2);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpouftuml3: /tmp/tmpouftuml3.cpp:23: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long res;\n    while(b) {\n        if(!(b&1))\n          \
    \  res = (a&1) ? a : b;\n        a >>= 1, b >>= 1;\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpkbpzhqrw: /tmp/tmpkbpzhqrw.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = 1;\n    for(long i = 1; i <\
    \ b; ++i) {\n        greatest_common_divisor = i * a;\n        if (greatest_common_divisor\
    \ % b != 0)\n            break;\n    }\n    return greatest_common_divisor;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp34ji_7lu: /tmp/tmp34ji_7lu.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103490
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd=0;\n    while (a && b)\n    {\n        if (a > b)\n\
    \        {\n            gcd++;\n            a %= b;\n        }\n        else\n\
    \        {\n            b %= a;\n        }\n    }\n    return a < 0 ? b : a;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp4wz5a_gv: /tmp/tmp4wz5a_gv.cpp:26: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long n = abs(a), m = abs(b), gcd = 1, i = 2;\n    long x,\
    \ y;\n    while (m && n) {\n        gcd = ((n % m) == 0) ? (m) : (m%n);\n    \
    \    x = m / gcd;\n        y = n / gcd;\n        if (x >= y) break;\n        i++;\n\
    \        m = gcd;\n        n = gcd;\n    }\n    if (n == 1) return a;\n    else\
    \ if (m == 1) return b;\n    return gcd;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpjctkx9js: /tmp/tmpjctkx9js.cpp:28: int main(): Assertion `candidate((49),
    (14)) == (7)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    else {\n    \
    \    return greatest_common_divisor(b, a % b);\n    }\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b) {\n    \tif (a >= b) break;\n    \ta = b;\n    \t\
    b /= 2;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmphsfeo3g7: /tmp/tmphsfeo3g7.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    assert(b > 0);\n    if (a == 0) return b;\n    if (b == 0)\
    \ return a;\n    return greatest_common_divisor(a % b, b);\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103491
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    if (a == 0) return b;\n    if (b == 0) return\
    \ a;\n    while (true) {\n        gcd = a % b;\n        a = b;\n        b = gcd;\n\
    \        if (b == 0) break;\n    }\n    return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if(a * b == 0)\n    return 1;\n  long dp = 1, q = 1;\n  while(b\
    \ > 0) {\n    long r = a % b;\n    a = b;\n    b = r;\n    dp = dp * q;\n    q\
    \ = q * 2;\n  }\n  return dp;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp04alvzdx: /tmp/tmp04alvzdx.cpp:23: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return b == 0 ? a : greatest_common_divisor(b, a%b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103491
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103490
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    while(a && b)\n    {\n        if(a > b)\n \
    \           a %= b;\n        else\n            b %= a;\n        gcd++;\n    }\n\
    \    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp20ni5mhw: /tmp/tmp20ni5mhw.cpp:22: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcf = 1, a = abs(a);\n    long d = abs(b);\n    while\
    \ (a != 0) {\n        if ((a % d == 0) && (b % d == 0))\n            gcf = d;\n\
    \        a /= d;\n        d /= gcf;\n    }\n    return gcf;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbfbzecgh.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpbfbzecgh.cpp:9:19: error: declaration of \u2018\
    long int a\u2019 shadows a parameter\n    9 |     long gcf = 1, a = abs(a);\n\
    \      |                   ^\n"
  stdout: ''
  timestamp: 1660103491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long gcd = 0;\n  while (b != 0) {\n    long temp = a;\n    a\
    \ = b;\n    b = temp % b;\n    gcd = b > gcd ? b : gcd;\n  }\n  return gcd;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpemqsfeoh: /tmp/tmpemqsfeoh.cpp:20: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  // Check if b is greater than a\n  if (b > a) return greatest_common_divisor(b,\
    \ a);\n  if (a == 0) return a;\n  if (b == 0) return b;\n\n  // Initialize to\
    \ least common multiple of a and b\n  long a = a > b ? a : b;\n  long g = a, temp\
    \ = 1;\n  do {\n    temp *= a;\n    g--;\n  } while (b > g);\n  while (temp %\
    \ g != 0) g++;\n  return g;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc8z9ixji.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpc8z9ixji.cpp:15:8: error: declaration of \u2018\
    long int a\u2019 shadows a parameter\n   15 |   long a = a > b ? a : b;\n    \
    \  |        ^\n"
  stdout: ''
  timestamp: 1660103491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long temp=b;\n    while(temp%a==0)\n        temp/=a;\n   \
    \ while(temp%b==0)\n        temp/=b;\n    return temp;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpmyidxgd_: /tmp/tmpmyidxgd_.cpp:19: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long temp = a;\n\
    \        a = b;\n        b = temp;\n    }\n    gcd = b == 0 ? a : b;\n    return\
    \ gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103496
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(a == 0)\n        return b;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103492
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    if (b != 0)\n        while (a != 0 && b\
    \ != 0) {\n            if (a % b != 0)\n                a = a / b;\n         \
    \   else\n                b = b / a;\n            gcd = a;\n            a = b;\n\
    \        }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103496
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(a >= 0 && b > 0);\n  \n  // If gcd(a, b) == 1, then return\
    \ a\n  // Else return gcd(b, a) i.e. gcd(b, a mod b)\n  while (b != 0)\n  {\n\
    \      a = b;\n      b = a % b;\n  }\n  return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp_4uuiybi: /tmp/tmp_4uuiybi.cpp:22: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103492
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(a > 0 && b > 0);\n  while (b != 0) {\n    long r = a\
    \ % b;\n    a = b;\n    b = r;\n  }\n  return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103492
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        a = b; b = a % b;\n    }\n    return\
    \ a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpouy57nh2: /tmp/tmpouy57nh2.cpp:16: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103492
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        a = a % b;\n        b = b % a;\n\
    \    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103492
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long r;\n    for (;;) {\n        r = a % b;\n        a = b;\n\
    \        b = r;\n        if (b == 0)\n            break;\n    }\n    return a;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103492
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  // Euclid GCD\n  long g = a;\n  long x = b;\n  long y = 1;\n\
    \  long r;\n  while ((r = x % y) != 0) y = g;\n  return g;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpz7i8yph3: /tmp/tmpz7i8yph3.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103493
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    else if (a == 0)\n   \
    \     return b;\n    else {\n        long temp = a;\n        long div = 1;\n \
    \       while (div <= b)\n            div *= temp;\n        return div;\n    }\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5u2mugmy: /tmp/tmp5u2mugmy.cpp:23: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103493
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103490
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return (b == 0) ? a : greatest_common_divisor(b, a % b);\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103491
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  int rem;\n  long gcd = 0;\n  while (a != 0) {\n    rem = a %\
    \ b;\n    a = b;\n    b = rem;\n    gcd = (gcd << 1) + (gcd > b);\n  }\n  return\
    \ gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    else {\n        long lcm\
    \ = (a / greatest_common_divisor(b,b));\n        long quotient = lcm * b;\n  \
    \      return quotient;\n    }\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  // assert two integers\n  assert(a > 0 && b > 0);\n  long remainder\
    \ = a % b;\n  long gcd;\n\n  while (a != 0) {\n    if (a > b) {\n      a = b -\
    \ remainder;\n    } else {\n      b = remainder;\n    }\n\n    remainder = a %\
    \ b;\n    gcd = b;\n  }\n  \n  return gcd;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long remainder = a % b;\n    return b + (remainder >= 0 ?\
    \ 1 : -1) * greatest_common_divisor(b, remainder);\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a%b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long tmp = a;\n    a = b;\n    b = tmp;\n    while (b) {\n\
    \        long r = a % b;\n        a = b;\n        b = r;\n    }\n    return a;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a < b) {\n        a = b;\n        b = 1;\n    }\n    long\
    \ d = a % b;\n    if (d == 0) {\n        return b;\n    } else if (d < 0) {\n\
    \        return greatest_common_divisor(b, a % b);\n    } else {\n        return\
    \ greatest_common_divisor(b, d % b);\n    }\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpiwbn594y: /tmp/tmpiwbn594y.cpp:25: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103493
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a > b)\n        std::swap(a, b);\n    long low = a;\n    long high\
    \ = b;\n    while (true) {\n        long mid = low + (high - low) / 2;\n     \
    \   if (mid * mid == a)\n            return mid;\n        if (mid * mid == b)\n\
    \            return mid;\n        if (mid * mid > a)\n            low = mid;\n\
    \        else\n            high = mid;\n    }\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103498
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = 0;\n    if (b == 0) {\n   \
    \     return a;\n    }\n    if (a == 0) {\n        return b;\n    }\n    while\
    \ (a != 0) {\n        long temp = a;\n        a = b;\n        b = temp % b;\n\
    \        greatest_common_divisor++;\n    }\n    return greatest_common_divisor;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103490
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return a / b * b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpdvfpg_cv: /tmp/tmpdvfpg_cv.cpp:13: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103493
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long long n = a;\n  while (n && b) while (n % b) n = n / b;\n\
    \  return n;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp9z8t0jvs: /tmp/tmp9z8t0jvs.cpp:15: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103493
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(a == 0) return b;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b > 0) {\n        long long int t = b / a;\n      \
    \  if (t > a) a = t;\n        b = t % a;\n    }\n    return a;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpwb8d3kwg: /tmp/tmpwb8d3kwg.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103493
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b) {\n        // if b is even, swap it\n        if\
    \ ((b & 1) == 0) {\n            long t = b;\n            b = a;\n            a\
    \ = t;\n        }\n        // divide b by 2\n        b /= 2;\n    }\n    // a\
    \ must be greater than or equal to 1\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5j99ducu: /tmp/tmp5j99ducu.cpp:24: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103493
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long d = 1;\n    long t = 0;\n\n    while(b) {\n        if(a\
    \ % b == 0)\n            return b;\n        a = a / b;\n        t++;\n       \
    \ b--;\n    }\n    while(t) {\n        if(d % 2 == 0)\n            d = d / 2;\n\
    \        else\n            d = d / 2 + 1;\n        t--;\n    }\n    return d;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpk8jztm13: /tmp/tmpk8jztm13.cpp:30: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103494
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n\
    \        a = t;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // write your code here\n    if (b==0)\n        return a;\n\
    \    return greatest_common_divisor(b, a % b);\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return a / gcd(a, b);\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpilf_imkn.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpilf_imkn.cpp:9:16: error: \u2018gcd\u2019 was\
    \ not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |    \
    \ return a / gcd(a, b);\n      |                ^~~\n      |                std::gcd\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:84,\n\
    \                 from /tmp/tmpilf_imkn.cpp:2:\n/usr/include/c++/9/numeric:132:5:\
    \ note: \u2018std::gcd\u2019 declared here\n  132 |     gcd(_Mn __m, _Nn __n)\
    \ noexcept\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660103493
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103490
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0) {\n    return a;\n  }\n  return greatest_common_divisor(b,\
    \ a%b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b > 0) {\n        long r = a % b;\n        a = b;\n\
    \        b = r;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103487
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  int maxa = a;\n  int maxb = b;\n  while (b != 0) {\n    if (b\
    \ % a == 0) {\n      maxa = a;\n      maxb = b;\n      a /= b;\n    } else {\n\
    \      b /= a;\n    }\n  }\n  return maxa;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpyg_0q8mf: /tmp/tmpyg_0q8mf.cpp:24: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103494
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0) return a;\n  return greatest_common_divisor(b, a\
    \ % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    int d = 1;\n    while (b > 0) {\n        if (b & 1) d = d\
    \ * a;\n        b >>= 1;\n        a *= a;\n    }\n    return d;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp4jgk4fof: /tmp/tmp4jgk4fof.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103494
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long max_div = (a > b) ? a : b;\n    long max_mod;\n    while\
    \ (a % max_div == 0) {\n        max_mod = max_div;\n        max_div = (max_div\
    \ / max_mod) + 1;\n    }\n    while (max_mod != 1) {\n        max_mod = (max_mod\
    \ / max_div) + 1;\n        if (max_mod == max_div) return max_mod;\n    }\n  \
    \  return max_div;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpl8bes7vi: /tmp/tmpl8bes7vi.cpp:23: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103494
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b) {\n        long long mod = a % b;\n        a = b;\n\
    \        b = mod;\n    }\n    return a;\n}\nint main() {\n    auto candidate =\
    \ greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103494
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // assert(b > 0);\n    if (b == 0)\n        return a;\n  \
    \  long result = greatest_common_divisor(b, a % b);\n    if (result == 0)\n  \
    \      return a;\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpacjlvq_h: /tmp/tmpacjlvq_h.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103494
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b > a)\n        swap(a, b);\n    while (1) {\n       \
    \ if (b == 0) return a;\n        a = b;\n        b = a % b;\n    }\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgp2e14qn.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpgp2e14qn.cpp:10:9: error: \u2018swap\u2019 was\
    \ not declared in this scope\n   10 |         swap(a, b);\n      |         ^~~~\n\
    /tmp/tmpgp2e14qn.cpp:10:9: note: suggested alternatives:\nIn file included from\
    \ /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpgp2e14qn.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpgp2e14qn.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpgp2e14qn.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmpgp2e14qn.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap(path&\
    \ __lhs, "
  stdout: ''
  timestamp: 1660103493
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        long r = a % b;\n        a = b;\n\
    \        b = r;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103494
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a%b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long g = a;\n    while (a % b != 0) {\n        if (b == 1)\
    \ return a;\n        g = b;\n        b = a % b;\n        a = g;\n    }\n    return\
    \ b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if( b == 0 )\n        return a;\n    if( a == 0 )\n      \
    \  return b;\n    while( b != 0 )\n    {\n        if( a % b == 0 )\n         \
    \   return b;\n        b = b % a;\n    }\n    return a;\n}\nint main() {\n   \
    \ auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) ==\
    \ (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103499
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long maxDiv = a%b;\n    long temp = a/b;\n    while ( temp\
    \ != 0 )\n    {\n        if ( temp > maxDiv )\n            maxDiv = temp;\n  \
    \      temp /= b;\n    }\n    return maxDiv;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp146l_cv7: /tmp/tmp146l_cv7.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103495
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long temp = 0;\n    while (a != 0) {\n        temp = temp\
    \ * b % a;\n        a = a / b;\n    }\n    return temp;\n}\nint main() {\n   \
    \ auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) ==\
    \ (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpmuob9euq: /tmp/tmpmuob9euq.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103495
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long temp;\n    while(a) {\n        temp = b;\n        b =\
    \ a % b;\n        a = temp;\n    }\n    return b;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103495
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    assert(b > 0);\n    long gcd = 1;\n    while (b) {\n     \
    \   if ((a % b) == 0)\n            gcd = b;\n        b /= 2;\n    }\n    return\
    \ gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpy6i1y_iy: /tmp/tmpy6i1y_iy.cpp:21: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103495
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b) {\n        long temp = a;\n        a = b;\n    \
    \    b = temp % b;\n    }\n    return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103495
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    else if (a > b)\n    \
    \    return greatest_common_divisor(b, a);\n    else\n        return greatest_common_divisor(a,\
    \ b >> 1);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n \
    \   assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: Exception
  stderr: 'tmpmnpyvo9l: /tmp/tmpmnpyvo9l.cpp:19: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103495
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(a < b)\n        return greatest_common_divisor(b, a);\n\
    \    long r = a % b;\n    if(r != 0)\n        return greatest_common_divisor(b,\
    \ r);\n    return b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103495
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103495
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103495
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long n = 0, g = 1, q = a / b;\n    while (b >= g) {\n    \
    \    q = a / g;\n        g = g * (b / q);\n        n = n + 1 ;\n    }\n    return\
    \ n;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpdeidq0e2: /tmp/tmpdeidq0e2.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103496
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // initialize a to 1\n    a = 1;\n    // initialize b to 1\n\
    \    b = 1;\n    // initialize sum to 1\n    long sum = 0;\n    // loop until\
    \ a or b is less than the smallest number allowed (bigger than long)\n    while\
    \ (a < b) {\n        // increment a\n        a = a + 1;\n        // increment\
    \ b\n        b = b + 1;\n        // increment sum\n        sum = sum + 1;\n  \
    \  }\n    // return a if b is a factor of a\n    if (b / a == a) {\n        return\
    \ a;\n    }\n    // return b if a is a factor of b\n    if (a / b == b) {\n  \
    \      return b;\n    }\n    // return greatest common divisor of b and a\n  \
    \  return greatest_common_divisor(b, a % b);\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpmb0pu3yo: /tmp/tmpmb0pu3yo.cpp:38: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103495
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ (b % a));\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpr1oysj9g: /tmp/tmpr1oysj9g.cpp:18: int main(): Assertion `candidate((49),
    (14)) == (7)'' failed.

    '
  stdout: ''
  timestamp: 1660103491
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Base case\n    if (b == 0) {\n        return a;\n    }\n\
    \    else {\n        return greatest_common_divisor(b, a%b);\n    }\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103495
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if(a < b) {\n    return greatest_common_divisor(b, a);\n  }\n\
    \  \n  long p = 1;\n  long g = 1, r = a;\n  for(; r != 0 && r != 1; p += g, g\
    \ = r)\n    r = a % r;\n  \n  return p;\n}\nint main() {\n    auto candidate =\
    \ greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp1x42roef: /tmp/tmp1x42roef.cpp:22: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103496
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n\tlong c = 0, r1, r2;\n\twhile (b > 0) {\n\t\tc = b%a;\n\t\tb\
    \ = a;\n\t\ta = c;\n\t}\n\tr1 = b;\n\tr2 = a;\n\twhile(r1 != r2)\n\t\tr2 = r2*r2;\n\
    \treturn r1;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103496
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    if (a == 0)\n        return\
    \ b;\n    long r = a % b;\n    if (r == 0) {\n        return greatest_common_divisor(b,\
    \ r);\n    } else if (r > 0) {\n        return greatest_common_divisor(b, a -\
    \ b);\n    } else {\n        return greatest_common_divisor(a, r);\n    }\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmplesh2ted: /tmp/tmplesh2ted.cpp:24: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103496
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (a != b) {\n        if (a > b)\n            a -= b;\n\
    \        else\n            b -= a;\n    }\n    return a;\n}\nint main() {\n  \
    \  auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) ==\
    \ (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103495
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0) {\n    return a;\n  }\n  return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103495
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long div = 1;\n    while(a != 0) {\n        if(b & 1) a =\
    \ a / b;\n        div *= b;\n        b >>= 1;\n    }\n    return div;\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpjf6lvdoe: /tmp/tmpjf6lvdoe.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103495
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a < b) {\n        std::swap(a, b);\n    }\n    long long\
    \ t = (long long)a / (long long)b;\n    long long r = (long long)b / t;\n    long\
    \ long u = (long long)a;\n    long long v = (long long)b;\n    while (r > v) {\n\
    \        u = (long long)u * 2;\n        v = (long long)v * 2;\n        if ((long\
    \ long)u % v == 0) {\n            return u;\n        }\n        r /= v;\n    }\n\
    \    return v != 1;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpt2yooy7k: /tmp/tmpt2yooy7k.cpp:29: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103496
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n\t// code here\n\tint tmp, prod;\n\tif (b == 0) {\n\t\treturn\
    \ a;\n\t} else {\n\t\tprod = a % b;\n\t\twhile (prod != 0) {\n\t\t\ttmp = b;\n\
    \t\t\tb = a;\n\t\t\ta = tmp % b;\n\t\t}\n\t\treturn b;\n\t}\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103496
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long r;\n    long t;\n    while (b) {\n        long mod =\
    \ (a % b);\n        a = (b / mod) + 1;\n        b = mod;\n    }\n    t = a;\n\
    \    a = b;\n    b = t;\n    while (a && b)\n        if (a > b)\n            a\
    \ = a - b;\n        else\n            b = b - a;\n    return a * b;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103496
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  int n = abs(a) > abs(b) ? abs(b) : abs(a);\n  int gcd = 1, x\
    \ = abs(a), y = abs(b);\n  while ((x % y) != 0) {\n    x /= y;\n    gcd *= x;\n\
    \  }\n  return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpsvbsp49z: /tmp/tmpsvbsp49z.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103496
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest = (b / a) * a;\n    while (a != 0 && b != 0)\
    \ {\n        if (a > greatest)\n            greatest = a;\n        if (b > greatest)\n\
    \            greatest = b;\n        a /= a;\n        b /= b;\n    }\n    return\
    \ greatest;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103501
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long c = 0;\n    while (a && b){\n        c = (a%b) ? ((c\
    \ == 0) ? b : c) : (c );\n        a = (a / b);\n    }\n    return c;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp3q305t7q: /tmp/tmp3q305t7q.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103496
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0) return a;\n  return greatest_common_divisor(b, a\
    \ % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    long g = a;\n    while (a % b !=\
    \ 0) {\n        g = b;\n        b = (a % b) / 2;\n    }\n    return g;\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmplfw1ixv0: /tmp/tmplfw1ixv0.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103496
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0)\n    return a;\n  long g = greatest_common_divisor(b,\
    \ a % b);\n  if (a % b == 0)\n    return g;\n  else\n    return g + 1;\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp2ohzggo7: /tmp/tmp2ohzggo7.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103496
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = 1;\n    if (a == 0)\n     \
    \   return b;\n    if (b == 0)\n        return a;\n    while (a % b != 0)\n  \
    \      a = a / b;\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpjau6uf4b: /tmp/tmpjau6uf4b.cpp:20: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103496
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 0;\n    while (a != 0) {\n        long long\
    \ t = a % b;\n        a = b;\n        b = t;\n        gcd++;\n    }\n    return\
    \ gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103496
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        int r = a % b;\n        a = b;\n\
    \        b = r;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103496
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b) {\n        long mod = a % b;\n        a = b;\n \
    \       b = mod;\n    }\n    return a;\n}\nint main() {\n    auto candidate =\
    \ greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103496
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0)\n    return a;\n  if (a < b) {\n    swap(a, b);\n\
    \  }\n  // use Euclid's algorithm to find the least common multiple of the two\
    \ numbers\n  long d = a;\n  long r = b;\n  long gcd = 1;\n  while (d % r != 0)\
    \ {\n    gcd *= r;\n    d /= r;\n  }\n  return gcd;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprl9qbszx.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmprl9qbszx.cpp:12:5: error: \u2018swap\u2019 was\
    \ not declared in this scope\n   12 |     swap(a, b);\n      |     ^~~~\n/tmp/tmprl9qbszx.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmprl9qbszx.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmprl9qbszx.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmprl9qbszx.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmprl9qbszx.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap(path&\
    \ __lhs, path& __"
  stdout: ''
  timestamp: 1660103496
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0)\n    return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103496
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(a<b) std::swap(a, b);\n    long long int n = (long long)a\
    \ * (long long)b;\n    long long int d = 0;\n    while(n > 1) {\n        long\
    \ long int m = n / 2;\n        if((n % 2) == 1) {\n            n = m;\n      \
    \  }\n        else {\n            d += m;\n            n = m;\n        }\n   \
    \ }\n    if(a < b) std::swap(a, b);\n    return d;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpnwkjbo57: /tmp/tmpnwkjbo57.cpp:27: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103496
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(a > 0 && b > 0);\n  long c = a % b;\n  while (b != 0)\
    \ {\n    b = a % b;\n    a = c;\n    c = a % b;\n  }\n  return c;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103496
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(a > 0 && b > 0);\n  while (a && b) {\n    const long\
    \ tmp = a;\n    a = b;\n    b = tmp % b;\n  }\n  return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103496
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a && b) {\n        if (a > b) std::swap(a,\
    \ b);\n        if (a % b) break;\n        gcd = b;\n        b = a % b;\n     \
    \   a = gcd;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpkt1ow4_9: /tmp/tmpkt1ow4_9.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103496
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long x = 0;\n    while (b != 0) {\n        while (b > 0) {\n\
    \            if (a >= b) {\n                a -= b;\n                x += 1;\n\
    \            }\n            b /= 2;\n        }\n        if (a > 0) {\n       \
    \     a /= 2;\n            x += 1;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpsvu1br2x: /tmp/tmpsvu1br2x.cpp:28: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103496
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long r = 0, t;\n\n    while (a != 0) {\n        t = b % a;\n\
    \        b = a;\n        a = t;\n    }\n    return b;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103496
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long x = 0;\n    while (a % b != 0) {\n        x++;\n    \
    \    b /= 2;\n    }\n    return x;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpsjiqae72: /tmp/tmpsjiqae72.cpp:19: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103496
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long c;\n    // Check for zero\n    if (b == 0) {\n      \
    \  return a;\n    }\n    // Calculate gcd using Euclid's algorithm\n    for (c\
    \ = 1; a % c; c++) {\n        if ((a % c) == 0) {\n            break;\n      \
    \  }\n    }\n    while (b % c) {\n        if ((b % c) == 0) {\n            break;\n\
    \        }\n        c--;\n    }\n    return c;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmplse1xb7t: /tmp/tmplse1xb7t.cpp:31: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103497
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    int divi = a / b;\n    while (divi > 1) {\n        if (a %\
    \ b == 0)\n            return b;\n        a = b;\n        b = divi;\n        divi\
    \ = a / b;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcge_vozl: /tmp/tmpcge_vozl.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103497
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    int rem;\n    while (b != 0) {\n        rem = a % b;\n   \
    \     a = b;\n        b = rem;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103497
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return (b != 0) ? greatest_common_divisor(b, a % b) : a;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103497
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (a == 0 && b == 0)\n    return 0;\n  if (a < b)\n    swap(a,\
    \ b);\n  long n = 0;\n  while (a % b != 0)\n    a++;\n  while (b % a != 0)\n \
    \   b--;\n  while (b % a != 0)\n    b--;\n  long div = a;\n  while (div % b !=\
    \ 0)\n    div++;\n  return div;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwo1xbo72.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpwo1xbo72.cpp:12:5: error: \u2018swap\u2019 was\
    \ not declared in this scope\n   12 |     swap(a, b);\n      |     ^~~~\n/tmp/tmpwo1xbo72.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpwo1xbo72.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpwo1xbo72.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwo1xbo72.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmpwo1xbo72.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap(path&\
    \ __lhs, path& __"
  stdout: ''
  timestamp: 1660103497
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  // This function is designed to compute both the greatest common\
    \ divisor\n  // and the remainder of a division using a Euclid's algorithm\n \
    \ // It uses Euclid's algorithm to efficiently compute both the greatest\n  //\
    \ common divisor and the remainder of a division of two integers a and b\n  //\
    \ The algorithm runs in O(log(b)) time\n  // It is assumed that the division remainder\
    \ is not too large, i.e.\n  // that b divides a in a least three times\n  long\
    \ c = a;\n  long d = b;\n  long remainder = 0;\n\n  while (true) {\n    c = c\
    \ % d;\n    if (c == 0)\n      return b;\n    d = d % b;\n    if (d == 0)\n  \
    \    return c;\n    remainder = remainder % d;\n    if (remainder == 0)\n    \
    \  return c;\n  }\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpdlcqhbp7: /tmp/tmpdlcqhbp7.cpp:34: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103497
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long x = 0;\n    while (a != 0){\n        if (a%b ==\
    \ 0){\n            x = a; \n            break;\n        }\n        a = a/b;\n\
    \    }\n    return x;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpih9f7hzq: /tmp/tmpih9f7hzq.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103497
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long n1, n2, rem;\n    n1 = a;\n    n2 = b;\n    do {\n  \
    \      rem = n1 % n2;\n        n1 = n2;\n        n2 = rem;\n    } while (n2 !=\
    \ 0);\n    return n1;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103497
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103490
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long tmp = a;\n    while (tmp % b == 0)\n        tmp = tmp\
    \ / b;\n    return tmp;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpj77mp2f8: /tmp/tmpj77mp2f8.cpp:16: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103497
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Make sure that b is always a positive value\n    if (b\
    \ <= 0) return b;\n    // Initialize the common divisor with b\n    long common\
    \ = b;\n    // Now repeatedly divide out common until we get to 1\n    while (common\
    \ % a != 0) {\n        common /= a;\n    }\n    // If common is 1, then a is divisible\
    \ by common\n    if (common == 1) return a;\n    // If common is smaller than\
    \ a, then a is divisible by common\n    if (a % common < common) return a % common;\n\
    \    // Otherwise a is divisible by common\n    return common;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103497
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    long div = greatest_common_divisor(b,\
    \ a % b);\n    if (div == 1) {\n        return a;\n    }\n    return div;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpinxdgg1i: /tmp/tmpinxdgg1i.cpp:20: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103497
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (a == 0) return b;\n  if (b == 0) return a;\n  if (a == 1\
    \ && b == 1) return 1;\n  if (a == 0) return b;\n  if (b == 0) return a;\n  if\
    \ (a < b) std::swap(a, b);\n  long greatest;\n  long smaller = a;\n  long larger\
    \ = b;\n  while (larger % smaller != 0) {\n    smaller++;\n  }\n  while (smaller\
    \ % larger != 0) {\n    larger--;\n  }\n  greatest = smaller % larger ? larger\
    \ : smaller;\n  while (smaller % larger != 0) {\n    smaller--;\n    greatest++;\n\
    \  }\n  return greatest;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103502
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(b != 0);\n  while (b != 0) {\n    long r = a % b;\n \
    \   a = b;\n    b = r;\n  }\n  return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103497
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b) {\n        if (a % b == 0)\n            return b;\n\
    \        b = b / 2;\n    }\n    return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpwqinavlr: /tmp/tmpwqinavlr.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103497
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long lcm = a % b;\n    while (b) {\n        if (b % lcm) b\
    \ = (b / lcm);\n        else lcm = (lcm / a);\n    }\n    return lcm;\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpu_iubtm8: /tmp/tmpu_iubtm8.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103497
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        int t = b;\n        b = a % b;\n\
    \        a = t;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103497
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a%b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103493
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0) return a;\n  return greatest_common_divisor(b, a%b);\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103497
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a < b) return greatest_common_divisor(b, a);\n    long\
    \ mid = a / b;\n    long rem = a % b;\n    if (rem == 0) return b;\n    return\
    \ greatest_common_divisor(b, mid);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp2pfyp91j: /tmp/tmp2pfyp91j.cpp:18: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103497
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103490

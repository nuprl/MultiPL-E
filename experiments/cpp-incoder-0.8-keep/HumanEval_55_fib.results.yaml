name: HumanEval_55_fib
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n<2) return 1;\n    long result = fib(n - 1) + fib(n\
    \ - 2);\n    return result;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpe7pc0y7w: /tmp/tmpe7pc0y7w.cpp:17: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n   \
    \ return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  assert(n > 0 && \"fibonacci sequence only exists for positive\
    \ integers\");\n  long a = 1;\n  long b = 1;\n  long tmp;\n  tmp = a;\n  while\
    \ (n > 0) {\n    tmp = a + b;\n    a = b;\n    b = tmp;\n    n--;\n  }\n  return\
    \ b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  stdout: ''
  stderr: "tmp0ynx4vdc: /tmp/tmp0ynx4vdc.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if(n<0)\n    return 0;\n  if(n==0)\n    return 1;\n  if(n==1)\n\
    \    return 2;\n  long p,p1,n1;\n  p1=fib(int(n-1));\n  n1=fib(int(n));\n  p=p1+n1;\n\
    \  return p;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n<2) return 1;\n    long previous=1;\n    long next=1;\n\
    \    long sum=0;\n    while(next<n){\n        sum=next+previous+sum;\n       \
    \ next=previous=sum;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpi6phjlv3: /tmp/tmpi6phjlv3.cpp:23: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if(n < 2) {\n        return n;\n\
    \    } else {\n        return fib(n-1) + fib(n-2);\n    }\n}\nint main() {\n \
    \   auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n   assert(n > 0);\n   long f[n + 1] = {0, 1};\n   for (long\
    \ i = 1; i < n; i++)\n      f[i] = f[i - 1] + f[i - 2];\n   return f[n];\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpchk8qgaq: /tmp/tmpchk8qgaq.cpp:19: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) {\n        return 1;\n    }\n    long a =\
    \ fib(n - 1);\n    long b = fib(n - 2);\n    return a + b;\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpt_pfm6ke: /tmp/tmpt_pfm6ke.cpp:20: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n<2)return 1;\n    else return fib(n-1) + fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp4qnobanm: /tmp/tmp4qnobanm.cpp:16: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n<2)\n        return 1;\n    return fib(n-1) + fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmps2swnji9: /tmp/tmps2swnji9.cpp:17: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n < 3) {\n\t\treturn n;\n\t} else if (n == 2) {\n\t\t\
    return 1;\n\t} else {\n\t\treturn fib(n - 1) + fib(n - 2);\n\t}\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpt24v7sug: /tmp/tmpt24v7sug.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n < 2)\n        return n;\n    return fib(n - 1) +\
    \ fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long cur = 1;\n    long prev = 0;\n    for (long i = 1;\
    \ n > i; ++i) {\n        cur = prev + cur;\n        prev = cur;\n    }\n    return\
    \ cur;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmp1ecjidky: /tmp/tmp1ecjidky.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1) return 1;\n  return fib(n - 2) + fib(n - 1);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpiqv2e1or: /tmp/tmpiqv2e1or.cpp:16: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1) {\n        return n;\n    }\n  \
    \  long fibonacci1 = fib(n - 1);\n    long fibonacci2 = fib(n - 2);\n    return\
    \ fibonacci1 + fibonacci2;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0) {\n        return 0;\n\
    \    }\n    if (n == 1) {\n        return 1;\n    }\n    return fib(n-2) + fib(n-1);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1)\n        return\
    \ n;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  assert(n > 0);\n  if (n <= 1) return n;\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpikbesf4y: /tmp/tmpikbesf4y.cpp:11: long int fib(long int): Assertion\
    \ `n > 0' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long prev1=0, prev2=1;\n    long ret = 1;\n    for(int\
    \ i = 0; i < n; i++)\n    {\n        long temp = prev1 + prev2; // compute next\
    \ number\n        prev1 = prev2;\n        prev2 = temp;\n        ret = (ret +\
    \ prev1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp4gt1zgca: /tmp/tmp4gt1zgca.cpp:24: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1)\n        return\
    \ 1;\n    long previous = 0, current = 1, next = 1;\n    for (int i = 1; i <=\
    \ n; i++)\n    {\n        next = previous + current;\n        previous = current;\n\
    \        current = next;\n    }\n    return current;\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpjjwewpxl: /tmp/tmpjjwewpxl.cpp:25: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n == 0) return 0;\n  if (n == 1) return 1;\n  return\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tassert(n>=0);\n\tif(n<=2)\n\t\treturn 1;\n\treturn fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\
    \treturn fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n  \
    \  assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8))\
    \ == (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12))\
    \ == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n <= 1) {\n\t\treturn n;\n\t} else {\n\t\tlong f1 =\
    \ fib(n-1);\n\t\tlong f2 = fib(n-2);\n\t\treturn f1 + f2;\n\t}\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0L);\n    if (n == 0L) {\n        return 0;\n\
    \    }\n    long ret = 1;\n    long tmp;\n    for (long i = 2; i <= n; i++) {\n\
    \        ret = ret * i;\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmppbchwhmp: /tmp/tmppbchwhmp.cpp:24: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n>0);\n    if (n <= 1)\n        return n;\n   \
    \ return fib(n-2) + fib(n-1);\n}\nint main() {\n    auto candidate = fib;\n  \
    \  assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8))\
    \ == (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12))\
    \ == (144));\n}\n"
  stdout: ''
  stderr: "tmpogdwrpx_: /tmp/tmpogdwrpx_.cpp:11: long int fib(long int): Assertion\
    \ `n>0' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  int a = 0;\n  int b = 1;\n  long sum = 0;\n  while (n >\
    \ 0) {\n    sum += b;\n    swap(a, b);\n    n -= 1;\n  }\n  return sum;\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqt3s5_po.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmpqt3s5_po.cpp:16:5: error: \u2018swap\u2019 was not declared in this scope\n\
    \   16 |     swap(a, b);\n      |     ^~~~\n/tmp/tmpqt3s5_po.cpp:16:5: note: suggested\
    \ alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpqt3s5_po.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/exception:143,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpqt3s5_po.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/exception_ptr.h:166:5:\
    \ note:   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr&\
    \ __lhs, exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/nested_exception.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/exception:144,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    using namespace std;\n    assert(n >= 0);\n    if (n <\
    \ 2)\n        return n;\n    long f1 = 0, f2 = 1, sum = 0;\n    long i = 0;\n\
    \    while (i < n) {\n        sum += f1;\n        long c = f1 + f2;\n        f1\
    \ = f2;\n        f2 = c;\n        i += 1;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpz3a771ym: /tmp/tmpz3a771ym.cpp:28: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0 && n <= 2);\n    return n == 0 ? 0 : fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmptg8z9nal: /tmp/tmptg8z9nal.cpp:11: long int fib(long int): Assertion\
    \ `n >= 0 && n <= 2' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n <= 1)\n\t\treturn n;\n\treturn fib(n-1) + fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long f1;\n    long f2;\n    long ret;\n    if (n <= 1)\
    \ {\n        return 1;\n    }\n    f1 = f2 = n;\n    while (f2 < f1 + 2) {\n \
    \       ret = (long) f1;\n        f1 = f2;\n        f2 = ret;\n    }\n    return\
    \ f2;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  assert(n >= 0);\n  if (n == 0 || n == 1) {\n    return n;\n\
    \  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate =\
    \ fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert (n>0);\n    if (n==1 || n==2) return 1;\n    long\
    \ ret=fib(n-1)+fib(n-2);\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n == 0 || n == 1) return n;\n  return fib(n - 1) + fib(n\
    \ - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1) return n;\n  long ans = 0;\n  long prev_ans\
    \ = 1;\n  long i = 1;\n  while (i < n) {\n    prev_ans = ans;\n    ans = prev_ans\
    \ + i;\n    i++;\n  }\n  return ans;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpb7w6xlkr: /tmp/tmpb7w6xlkr.cpp:24: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1) return n;\n  long f1 = 1, f2 = 1;\n  for (int\
    \ i = 3; i <= n; i++) {\n    f1 = f2;\n    f2 = f1 + f1;\n  }\n  return f2;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmprwls_bpj: /tmp/tmprwls_bpj.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n<2)\n        return 1;\n    long f=0, g=1;\n    for(long\
    \ i=2; i<=n; i++) {\n        long res = f + g;\n        f = g;\n        g = res;\n\
    \    }\n    return f;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmp0hiobpr8: /tmp/tmp0hiobpr8.cpp:23: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    if (n >=\
    \ 2)\n        return fib(n - 2) + fib(n - 1);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\treturn n < 2 ? n : fib(n-2) + fib(n-1);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0 && n <= 100);\n    if (n <= 1) {\n     \
    \   return n;\n    } else {\n        return fib(n-1) + fib(n-2);\n    }\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0) { return 0; }\n    if (n == 1) { return 1;\
    \ }\n    long a = fib(n - 1);\n    long b = fib(n - 2);\n    return a + b;\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    int f1 = 1;\n    int f2 = 1;\n    for (int i = 0; i <\
    \ n; i++) {\n        int res = f1 + f2;\n        f2 = f1;\n        f1 = res;\n\
    \    }\n    return f2;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpspj4f84y: /tmp/tmpspj4f84y.cpp:22: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n <= 1) return n;\n\treturn fib(n-1) + fib(n-2);\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 1);\n    if(n == 0 || n == 1)\n        return\
    \ 1;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp7wsvchrz: /tmp/tmp7wsvchrz.cpp:11: long int fib(long int): Assertion\
    \ `n >= 1' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n<2) return 1;\n    return fib(n-2) + fib(n-1);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpdhuj8cuc: /tmp/tmpdhuj8cuc.cpp:16: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n == 1)\n\t\treturn 1;\n\tif (n == 2)\n\t\treturn 1;\n\
    \tif (n == 3)\n\t\treturn 2;\n\tif (n > 3) {\n\t\tlong res = fib(n - 2) + fib(n\
    \ - 1);\n\t\treturn res;\n\t} else {\n\t\treturn 0;\n\t}\n}\nint main() {\n  \
    \  auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  // Return fib(n-1) + fib(n-2) for n > 2.\n  if (n <= 2)\n\
    \    return 1;\n  return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    int a=0,b=1;\n    while(n>0){\n        long cur = n;\n\
    \        n = a*b+(n-cur)*a;\n        a = b;\n        b = cur;\n    }\n    return\
    \ n;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  stdout: ''
  stderr: "tmpushm4xh_: /tmp/tmpushm4xh_.cpp:22: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n <= 2) {\n        return 1;\n\
    \    }\n    return fib(n - 2) + fib(n - 1);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  // Write your code here.\n  if(n<2)\n    return n;\n  else\n\
    \    return fib(n-1)+fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n \
    \   assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n   \
    \ assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12))\
    \ == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    \n    if(n >= 0 && n <= 1)\n        return n;\n    \n\
    \    long res = fib(n - 2) + fib(n - 1);\n    \n    return res;\n    \n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n == 0 || n == 1)\n\t\treturn 1;\n\tlong a = fib(n-1);\n\
    \tlong b = fib(n-2);\n\treturn a+b;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpke047isv: /tmp/tmpke047isv.cpp:19: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\t// assert(n > 0);\n\tif (n <= 1)\n\t\treturn n;\n\treturn\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n < 2) return 1;\n\treturn fib(n-2) + fib(n-1);\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpjl3md3qg: /tmp/tmpjl3md3qg.cpp:16: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif(n<0) return -1;\n\tif(n==0 || n==1) return n;\n\tif(n<3)\
    \ return fib(n-2) + fib(n-1);\n\treturn fib(n-2) + fib(n-1) + fib(n-3);\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpmfhlsznz: /tmp/tmpmfhlsznz.cpp:18: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long ret = 1;\n    if (n < 2) {\n        return ret;\n\
    \    }\n    for (long i = 2; i <= n; i++) {\n        ret = ret + ret;\n    }\n\
    \    return ret;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmp33r9nwc9: /tmp/tmp33r9nwc9.cpp:22: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n < 2) {\n        return n;\n    }\n    long a = 1;\n\
    \    long b = 1;\n    for (int i = 1; i <= n; ++i) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp + b;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpiikvuba7: /tmp/tmpiikvuba7.cpp:25: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n<2) {\n        return 1;\n    }\n    else {\n   \
    \     long prev=fib(n-1);\n        long cur=prev;\n        for (int i=2;i<=n;i++)\
    \ {\n            cur=cur+prev;\n            prev=cur;\n        }\n        return\
    \ cur;\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpm2hw8gvg: /tmp/tmpm2hw8gvg.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0)\n        return 0;\n\
    \    if (n == 1)\n        return 1;\n    return fib(n-1) + fib(n-2);\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n == 0) return 0;\n  if (n == 1) return 1;\n  if (n\
    \ >= 2 && n <= 9) return fib(n - 1) + fib(n - 2);\n  long prev1 = 1;\n  long prev2\
    \ = 1;\n  long tmp;\n  long count = 1;\n  while (count < n) {\n    tmp = prev1\
    \ + prev2;\n    prev1 = prev2;\n    prev2 = tmp;\n    count += 1;\n  }\n  return\
    \ prev2;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpjl0pedug: /tmp/tmpjl0pedug.cpp:28: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tlong fib[] = {0, 1, 1, 2, 3, 5, 8, 13, 21, 34};\n\tassert(n\
    \ >= 0 && n < sizeof(fib)/sizeof(long int));\n\treturn fib[n];\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp13u5afwk: /tmp/tmp13u5afwk.cpp:12: long int fib(long int): Assertion\
    \ `n >= 0 && n < sizeof(fib)/sizeof(long int)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long prev = 0;\n    long current = 1;\n    for (int i\
    \ = 0; i <= n; i++) {\n        prev = current;\n        current = current + prev;\n\
    \    }\n    return current;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmp3x1nay5j: /tmp/tmp3x1nay5j.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n < 0) \n    {\n       std::cerr << \"Error: Negative\
    \ Number\" << std::endl;\n       assert(false);\n       return -1;\n    }\n  \
    \  if(n == 0 || n == 1) \n    {\n       return n;\n    }\n    return fib(n-2)\
    \ + fib(n-1);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 1);\n    if(n == 0) return 0;\n    if(n ==\
    \ 1) return 1;\n    long p = fib(n - 1) + fib(n - 2);\n    return p;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmps25_g12n: /tmp/tmps25_g12n.cpp:11: long int fib(long int): Assertion\
    \ `n >= 1' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n > 0);\n    long ret = 1;\n    long sum = 0;\n\
    \    while(n > 0) {\n        sum += ret;\n        ret += ret;\n        --n;\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmp_6gsjsx8: /tmp/tmp_6gsjsx8.cpp:23: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1) return n;\n  if (n == 2) return 1;\n  return\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n < 0)\n        throw std::invalid_argument(\"fibonacci\
    \ numbers are only defined for n >= 0\");\n    if (n > 50000)\n        throw std::invalid_argument(\"\
    fibonacci numbers are only defined for n <= 50000\");\n    if (n <= 2)\n     \
    \   return 1;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n > 0);\n    if (n == 0 || n == 1)\n        return\
    \ n;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpck94ptq3: /tmp/tmpck94ptq3.cpp:11: long int fib(long int): Assertion\
    \ `n > 0' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0,\n        b = 1;\n    for (int i = 0; i < n;\
    \ i++)\n        long c = a + b;\n        a = b;\n        b = c;\n    return c;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxfms_pkn.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmpxfms_pkn.cpp:16:13: error: \u2018c\u2019 was not declared in this scope\n\
    \   16 |         b = c;\n      |             ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n <= 1) return n;\n    return fib(n-1) + fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 0)\n    return 1;\n  if (n == 1)\n    return 1;\n\
    \  long a = 1;\n  long b = 1;\n  for (int i = 0; i < n; i++) {\n    long c = a\
    \ + b;\n    a = b;\n    b = c;\n  }\n  return b;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpmdrg6d2t: /tmp/tmpmdrg6d2t.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n < 2)\n        return 1;\n    long first = fib(n-2);\n\
    \    long second = fib(n-1);\n    return first + second;\n}\nint main() {\n  \
    \  auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpv5jm4qfk: /tmp/tmpv5jm4qfk.cpp:19: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n<2) return 1;\n\tif(n%2==0) return fib(n/2);\n\treturn\
    \ fib(n-1)+fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmp7z_m5w0q: /tmp/tmp7z_m5w0q.cpp:17: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n > 0);\n    if (n == 1) return 1;\n    if (n ==\
    \ 2) return 2;\n    long a = fib(n - 1);\n    long b = fib(n - 2);\n    return\
    \ a + b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpltj4bhk5: /tmp/tmpltj4bhk5.cpp:20: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) return n;\n    return\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n <= 1) return n;\n\treturn fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1)\n    return n;\n\n  long x = fib(n - 1);\n \
    \ long y = fib(n - 2);\n\n  return x + y;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n < 2)\n        return 1;\n \
    \   return fib(n-2) + fib(n-1);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp38lw964c: /tmp/tmp38lw964c.cpp:18: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n == 0)\n    return 1;\n  if (n == 1)\n    return 1;\n\
    \  if (n <= 2)\n    return n;\n  return fib(n-1) + fib(n-2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpepoavkyl: /tmp/tmpepoavkyl.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n == 0) {\n\t\treturn 0;\n\t}\n\tlong fib1 = 0;\n\t\
    long fib2 = 1;\n\tlong fib3 = 1;\n\tfor (long i = 2; i < n; i++) {\n\t\tfib3 =\
    \ fib1 + fib2;\n\t\tfib1 = fib2;\n\t\tfib2 = fib3;\n\t}\n\treturn fib2;\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpwn_ozmsr: /tmp/tmpwn_ozmsr.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n==1)\n        return 1;\n    if(n==2)\n        return\
    \ 1;\n    if(!(n & 1))\n        return fib(n >> 1) + fib(n >> 2);\n    return\
    \ fib(n >> 1) + fib(n - 1);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpv7zptx_d: /tmp/tmpv7zptx_d.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 2) return 1;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) return n;\n    return\
    \ fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n<2) return 1;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmprxu6c1jw: /tmp/tmprxu6c1jw.cpp:16: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n<=1)\n        return n;\n    return fib(n - 2) +\
    \ fib(n - 1);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  // Write your code here\n  if(n<=1)\n    return n;\n  if(n<=2)\n\
    \    return 1;\n  return fib(n-2)+fib(n-1);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long fib1 = 0, fib2 = 1, result = 1;\n    for (long i\
    \ = 3; i <= n; i++){\n        fib1 = fib2;\n        fib2 = result + fib1;\n  \
    \      result = fib2;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpb0wlw5hd: /tmp/tmpb0wlw5hd.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert (n>=0);\n    if (n==0) return 0;\n    if (n==1)\
    \ return 1;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1) return n;\n\
    \    if (n <= 3) return 1;\n    return fib(n - 1) + fib(n - 2);\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpyh36jkxq: /tmp/tmpyh36jkxq.cpp:18: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n < 3) return 1;\n  return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\t// Return n-th Fibonacci number.\n\tif (n <= 2)\n\t\treturn\
    \ 1;\n\treturn fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate =\
    \ fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0 && n <= 1000);\n    long p = 1;\n    long\
    \ q = n;\n    long r = 1;\n    long fib;\n    while (n > 0) {\n        fib = r\
    \ + p;\n        p = q;\n        q = fib;\n        r = fib;\n        --n;\n   \
    \ }\n    return fib;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpxbmiwxs4: /tmp/tmpxbmiwxs4.cpp:27: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return 1;\n    if (n > 1)\n     \
    \   return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpik7hvfej: /tmp/tmpik7hvfej.cpp:18: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long f = 0;\n    long g = 1;\n    long h = 2;\n    while\
    \ (n>0) {\n        long t = f+g+h;\n        if (t>n) t = t-n;\n        f = g;\n\
    \        g = h;\n        h = t;\n        n--;\n    }\n    return f;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpeql9r9yl: /tmp/tmpeql9r9yl.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1)\n    return n;\n  return fib(n - 1) + fib(n\
    \ - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return 1;\n    else\n        return\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmph2u37ni9: /tmp/tmph2u37ni9.cpp:18: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    int f[] = {1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144,\
    \ 233, 377, 610, 987};\n    return f[n];\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpp08jsvna: /tmp/tmpp08jsvna.cpp:16: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n == 0) return 0;\n\tif (n == 1) return 1;\n\treturn\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    return n < 2 ? 1 : fib(n-2) + fib(n-1);\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpmxcj8t4s: /tmp/tmpmxcj8t4s.cpp:15: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1) {\n       \
    \ return n;\n    }\n    long prev[100] = {0}, cur[100] = {0};\n    prev[0] = 1;\n\
    \    cur[0] = prev[0] + prev[1];\n    for (long i = 2; i <= n; i++) {\n      \
    \  prev[i] = cur[i - 1];\n        cur[i] = prev[i - 1] + prev[i];\n    }\n   \
    \ return cur[n];\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmp3kk7g6zz: /tmp/tmp3kk7g6zz.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n < 0 || n > 4000000) {\n\t\tcout << \"-1\";\n\t\treturn\
    \ -1;\n\t}\n\tvector<long int> v(n + 1, 1);\n\tlong int* fib = v.data();\n\tfib[0]\
    \ = 0;\n\tfib[1] = 1;\n\tlong int temp;\n\tlong int fibsum = 0;\n\tfor (int i\
    \ = 2; i <= n; i++) {\n\t\ttemp = fib[i] - fib[i - 1];\n\t\tfibsum += temp;\n\t\
    \tfib[i] = temp;\n\t\tfib[n] = fibsum;\n\t\tcout << fibsum << endl;\n\t}\n\treturn\
    \ fibsum;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc4ph7aef.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmpc4ph7aef.cpp:12:3: error: \u2018cout\u2019 was not declared in this scope;\
    \ did you mean \u2018std::cout\u2019?\n   12 |   cout << \"-1\";\n      |   ^~~~\n\
    \      |   std::cout\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:75,\n\
    \                 from /tmp/tmpc4ph7aef.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmpc4ph7aef.cpp:15:2:\
    \ error: \u2018vector\u2019 was not declared in this scope; did you mean \u2018\
    std::vector\u2019?\n   15 |  vector<long int> v(n + 1, 1);\n      |  ^~~~~~\n\
    \      |  std::vector\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/vector:67,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/queue:61,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpc4ph7aef.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_vector.h:386:11:\
    \ note: \u2018std::vector\u2019 declared here\n  386 |     class vector : protected\
    \ _Vector_base<_Tp, _Alloc>\n      |           ^~~~~~\n/tmp/tmpc4ph7aef.cpp:15:9:\
    \ error: expected primary-expression before \u2018long\u2019\n   15 |  vector<long\
    \ int> v(n + 1, 1);\n      |         ^~~~\n/tmp/tmpc4ph7aef.cpp:16:18: error:\
    \ \u2018v\u2019 was not declared in this scope\n   16 |  long int* fib = v.data();\n\
    \      |                  ^\n/tmp/tmpc4ph7aef.cpp:26:3: error: \u2018cout\u2019\
    \ was not declared in this scope; did you mean \u2018std::cout\u2019?\n   26 |\
    \   cout << fibsum << endl;\n      |   ^~~~\n      |   std::cout\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:75,\n\
    \                 from /tmp/tmpc4ph7aef.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |           "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    else return fib(n - 1) + fib(n\
    \ - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if(n==0) return 0;\n    if(n==1)\
    \ return 1;\n    long f1,f2,f3;\n    f1 = 1; f2 = 1;\n    for(f3=1;f3<n;f3++)\n\
    \    {\n        f2 = f1 + f2;\n        f1 = f3;\n    }\n    return f1;\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpaoe74ai7: /tmp/tmpaoe74ai7.cpp:25: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n < 2) return n;\n\tlong fibs[] = { 1,2 };\n\tfor (long\
    \ i = 2; i <= n; ++i) fibs[i - 1] += fibs[i - 2];\n\treturn fibs[n-1];\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpnw7ro524: /tmp/tmpnw7ro524.cpp:18: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n <= 1)\n        return n;\n\
    \    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    // assert(n > 1);\n    // if (n == 0)\n    // \treturn\
    \ 0;\n    // if (n == 1)\n    // \treturn 1;\n    // if (n == 2)\n    // \treturn\
    \ 1;\n    // return fib(n - 1) + fib(n - 2);\n    long fibNum = 0, currentFibNum\
    \ = 1, currentFib = 1;\n    for (int i = 0; i <= n; i++)\n    {\n        fibNum\
    \ = currentFibNum + currentFib;\n        std::cout << \"fibNum = \" << fibNum\
    \ << std::endl;\n        currentFibNum = currentFib;\n        currentFib = fibNum;\n\
    \    }\n    return fibNum;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: "fibNum = 2\nfibNum = 3\nfibNum = 5\nfibNum = 8\nfibNum = 13\nfibNum = 21\n\
    fibNum = 34\nfibNum = 55\nfibNum = 89\nfibNum = 144\nfibNum = 233\n"
  stderr: "tmpmx6zzilz: /tmp/tmpmx6zzilz.cpp:31: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n == 1 || n == 2) {\n\t\treturn 1;\n\t}\n\tif (n ==\
    \ 0) {\n\t\treturn 0;\n\t}\n\treturn fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  assert(n >= 0);\n  if (n < 3) {\n    return 1;\n  }\n  return\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  long F[n];\n  F[0] = 0;\n  F[1] = 1;\n  for (long i = 2;\
    \ i <= n; ++i)\n    F[i] = F[i - 1] + F[i - 2];\n  return F[n];\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) {\n        return n;\n    } else {\n     \
    \   return fib(n - 1) + fib(n - 2);\n    }\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if(n<=1){\n    return n;\n  }\n  return fib(n - 1) + fib(n\
    \ - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n     long long int a,b,c;\n     cin>>n;\n     a=0;\n     b=1;\n\
    \     for(int i=2; i<=n; i++)\n         c=a+b;\n     cout<<c;\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp13us899t.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmp13us899t.cpp:12:6: error: \u2018cin\u2019 was not declared in this scope;\
    \ did you mean \u2018std::cin\u2019?\n   12 |      cin>>n;\n      |      ^~~\n\
    \      |      std::cin\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:75,\n\
    \                 from /tmp/tmp13us899t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/iostream:60:18:\
    \ note: \u2018std::cin\u2019 declared here\n   60 |   extern istream cin;  ///\
    \ Linked to standard input\n      |                  ^~~\n/tmp/tmp13us899t.cpp:17:6:\
    \ error: \u2018cout\u2019 was not declared in this scope; did you mean \u2018\
    std::cout\u2019?\n   17 |      cout<<c;\n      |      ^~~~\n      |      std::cout\n\
    In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:75,\n\
    \                 from /tmp/tmp13us899t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmp13us899t.cpp:18:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   18 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  assert(n > 0);\n  if (n==1) return 1;\n  long a = 1;\n \
    \ long b = 1;\n  for (long i=2; i<=n; i++) {\n    long c = a+b;\n    a = b;\n\
    \    b = c;\n  }\n  return b;\n}\nint main() {\n    auto candidate = fib;\n  \
    \  assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8))\
    \ == (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12))\
    \ == (144));\n}\n"
  stdout: ''
  stderr: "tmpafyqi2bh: /tmp/tmpafyqi2bh.cpp:24: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n < 2)\n    return n;\n  long long a = 1LL, b = 1LL;\n\
    \  for (int i = 0; i < n; i++) {\n    long long c = a + b;\n    a = b;\n    b\
    \ = c;\n  }\n  return b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpqskyffmv: /tmp/tmpqskyffmv.cpp:23: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tassert(n >= 0);\n\tlong ret = 1;\n\tfor (long i = 1; i <=n;\
    \ ++i) {\n\t\tret += ret;\n\t}\n\treturn ret;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpdi5z6v16: /tmp/tmpdi5z6v16.cpp:20: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a=0, b=1, c=0, i;\n    for(i=n-1; i>0; i--) {\n \
    \       c = (a+b)*(b+i);\n        a = b;\n        b = c;\n    }\n    return a;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpw5d4act0: /tmp/tmpw5d4act0.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n>0);\n    if (n==1) return 1;\n    else return\
    \ fib(n-1)+fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmppp164442: /tmp/tmppp164442.cpp:11: long int fib(long int): Assertion\
    \ `n>0' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n <= 1) return 1;\n\treturn fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp9n40e5s4: /tmp/tmp9n40e5s4.cpp:16: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0, b = 1;\n    for (; n > 0; --n)\n        b\
    \ = a + b;\n    return b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpshhnbq8r: /tmp/tmpshhnbq8r.cpp:18: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  assert((n > 0) && (n <= 6));\n  if (n < 2)\n    return 1;\n\
    \  long ret = 1;\n  int i = 4;\n  while (i <= n) {\n    ret = ret * i;\n    i\
    \ += 4;\n  }\n  return ret;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmp1ni9d2kp: /tmp/tmp1ni9d2kp.cpp:11: long int fib(long int): Assertion\
    \ `(n > 0) && (n <= 6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif(n<=0 || n==1)return 1;\n\tif(n==2)return 1;\n\treturn\
    \ fib(--n)+fib(n);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpm7xzm_nf: /tmp/tmpm7xzm_nf.cpp:17: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long long a, b;\n    cout << \"a\" << endl;\n    if (n<=0)\
    \ \n        return 0;\n    if (n==1)\n        return 1;\n    if(n>1) {\n     \
    \   a = 1;\n        b = 1;\n        for (long long i = 0; i < n-1; i++)\n    \
    \    {\n            long long c = a + b;\n            a = b;\n            b =\
    \ c;\n        }\n    }\n    return a;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3j0h6u1a.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmp3j0h6u1a.cpp:12:5: error: \u2018cout\u2019 was not declared in this scope;\
    \ did you mean \u2018std::cout\u2019?\n   12 |     cout << \"a\" << endl;\n  \
    \    |     ^~~~\n      |     std::cout\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:75,\n\
    \                 from /tmp/tmp3j0h6u1a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmp3j0h6u1a.cpp:12:20:\
    \ error: \u2018endl\u2019 was not declared in this scope; did you mean \u2018\
    std::endl\u2019?\n   12 |     cout << \"a\" << endl;\n      |                \
    \    ^~~~\n      |                    std::endl\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j0h6u1a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ostream:599:5:\
    \ note: \u2018std::endl\u2019 declared here\n  599 |     endl(basic_ostream<_CharT,\
    \ _Traits>& __os)\n      |     ^~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tassert(n >= 0);\n\tlong fib1 = 0,\n\t\tfib2 = 0;\n\tif (n\
    \ == 1 || n == 2) {\n\t\treturn 1;\n\t}\n\twhile (n >= 2) {\n\t\tfib2 = fib1;\n\
    \t\tfib1 = fib1 + fib2;\n\t\tn = n - 1;\n\t}\n\treturn fib1;\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp_5tbozau: /tmp/tmp_5tbozau.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long fib_values=0;\n    if(n<2) return 1;\n    long prev_val=1,prev_val_2=1,cur_val;\n\
    \    if(n>1){\n        for(long i=2;i<=n;i++){\n            cur_val=prev_val+prev_val_2;\n\
    \            prev_val=prev_val_2;\n            prev_val_2=cur_val;\n         \
    \   fib_values+=cur_val;\n        }\n    }\n    return fib_values;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp_x89ed1b: /tmp/tmp_x89ed1b.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n < 2) {\n    return n;\n  } else {\n    return fib(n\
    \ - 1) + fib(n - 2);\n  }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    return n < 2 ? n : fib(n-1) + fib(n-2);\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0L);\n    assert(n>=0L);\n    if(n<=2L) {\n\
    \        return n>1L?1L:n;\n    }\n    long fib_1[] = {1L,1L};\n    long fib_2[]\
    \ = {1L,1L};\n    long fib_3[] = {1L,1L};\n    long fib_4[] = {1L,1L};\n    long\
    \ fib_5[] = {1L,1L};\n    long fib_6[] = {1L,1L};\n    long fib_7[] = {1L,1L};\n\
    \    long fib_8[] = {1L,1L};\n    long fib_9[] = {1L,1L};\n    long fib_10[] =\
    \ {1L,1L};\n    long fib_11[] = {1L,1L};\n    long fib_12[] = {1L,1L};\n    long\
    \ fib_13[] = {1L,1L};\n    long fib_14[] = {1L,1L};\n    long fib_15[] = {1L,1L};\n\
    \    long fib_16[] = {1L,1L};\n    long fib_17[] = {1L,1L};\n    long fib_18[]\
    \ = {1L,1L};\n    long fib_19[] = {1L,1L};\n    long fib_20[] = {1L,1L};\n   \
    \ long fib_21[] = {1L,1L};\n    long fib_22[] = {1L,1L};\n    long fib_23[] =\
    \ {1L,1L};\n    long fib_24[] = {1L,1L};\n    long fib_25[] = {1L,1L};\n    long\
    \ fib_26[] = {1L,1L};\n    long fib_27[] = {1L,1L};\n    long fib_28[] = {1L,1L};\n\
    \    long fib_29[] = {1L,1L};\n    long fib_30[] = {1L,1L};\n    long fib_31[]\
    \ = {1L,1L};\n    long fib_32[] = {1L,1L};\n    long fib_33[] = {1L,1L};\n   \
    \ long fib_34[] = {1L,1L};\n    long fib_35[] = {1L,1L};\n    long fib_36[] =\
    \ {1L,1L};\n    long fib_37[] = {1L,1L\n}\nint main() {\n    auto candidate =\
    \ fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpobtcyxde.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmpobtcyxde.cpp:54:1: error: expected \u2018,\u2019 or \u2018;\u2019 before\
    \ \u2018int\u2019\n   54 | int main() {\n      | ^~~\n/tmp/tmpobtcyxde.cpp:61:1:\
    \ error: expected \u2018}\u2019 at end of input\n   61 | }\n      | ^\n/tmp/tmpobtcyxde.cpp:10:18:\
    \ note: to match this \u2018{\u2019\n   10 | long fib(long n) {\n      |     \
    \             ^\n/tmp/tmpobtcyxde.cpp:61:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   61 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n<=1){\n        return 1;\n    }\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpo4kavjid: /tmp/tmpo4kavjid.cpp:18: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 2) {\n    return n;\n  }\n  return fib(n-2) + fib(n-1);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp2l6mit5_: /tmp/tmp2l6mit5_.cpp:18: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n<=1)\n        return n;\n    return fib(n-1)+fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0 && n <= 20);\n    if (n == 0) return 0;\n\
    \    if (n == 1) return 1;\n    return fib(n - 1) + fib(n - 2);\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 2;\n    long b = 3;\n    if (n <= 2)\n      \
    \  return n;\n    else if (n <= 8)\n        return b;\n    else {\n        while\
    \ (b < n) {\n            long temp = a;\n            a = b;\n            b = temp\
    \ + b;\n        }\n        return a;\n    }\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpyelzk6pp: /tmp/tmpyelzk6pp.cpp:28: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0;\n    long b = 1;\n    while (n) {\n      \
    \  int c = n % 10;\n        n /= 10;\n        int d = (c & 1) != 0;\n        c\
    \ >>= 1;\n        long tmp = a;\n        a = b;\n        b = c + (d ? tmp + tmp\
    \ : tmp);\n    }\n    return a;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp00fw5l4u: /tmp/tmp00fw5l4u.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n==1)\n        return 1;\n  \
    \  if (n==2)\n        return 2;\n    if (n==3)\n        return 3;\n    if (n==4)\n\
    \        return 5;\n    if (n==5)\n        return 8;\n    if (n==6)\n        return\
    \ 13; // 8^2+7^2 = 13\n    if (n==7)\n        return 21; // 8^3+6^2+5^2 = 21\n\
    \    if (n==8)\n        return 34; // 8^4+6^3+5^2+4^2 = 34\n    if (n==9)\n  \
    \      return 55; // 8^5+6^4+5^3+4^2+3^2 = 55\n    // ... more ...\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpmmfjj6m2: /tmp/tmpmmfjj6m2.cpp:34: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n < 2)\n\t\treturn n;\n\treturn fib(n-2) + fib(n-1);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n < 2)\n    return 1;\n  if (n == 2)\n    return 2;\n\
    \  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpo1c5j8p7: /tmp/tmpo1c5j8p7.cpp:19: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0)\n        return 0;\n    else if (n == 1)\n\
    \        return 1;\n    else {\n        int next[] = {0,1};\n        for (long\
    \ i = 2; i <= n; i++) {\n            long sum = 0;\n            for (int j = 0;\
    \ j < i; j++) {\n                sum = sum + next[j];\n            }\n       \
    \     next[1] = sum;\n        }\n        return next[1];\n    }\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpoff293tr: /tmp/tmpoff293tr.cpp:29: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1) return n;\n  return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n<=1){\n        return 1;\n    }\n    return fib(n-1)+fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp_ul2txo4: /tmp/tmp_ul2txo4.cpp:18: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n==0 || n==1 || n==2)\n    return 1;\n  long a = fib(n\
    \ / 2);\n  long b = fib(n - 1);\n  return a + b;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmppkg6oyx2: /tmp/tmppkg6oyx2.cpp:19: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n < 2) return 1;\n  return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp5xy2w790: /tmp/tmp5xy2w790.cpp:16: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long f1 = 1, f2 = 1, f = f1;\n    if (n > 1) {\n     \
    \   // If n is odd, compute f(n-1)\n        f = f1;\n        f1 = f2;\n      \
    \  f2 = f;\n    }\n    while(n > 0){\n        // If n is even, compute f(n-1)\
    \ + f(n-2)\n        f = f1 + f2;\n        f1 = f2;\n        f2 = f;\n        n--;\n\
    \    }\n    return f;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpmkyd0s3d: /tmp/tmpmkyd0s3d.cpp:29: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    // if (n >= 11) return n;\n    if\
    \ (n <= 1) return 1;\n    if (n == 2) return 2;\n    return fib(n - 1) + fib(n\
    \ - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpiwry2yw6: /tmp/tmpiwry2yw6.cpp:19: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 1);\n    if (n == 0 || n == 1)\n        return\
    \ n;\n    long a = fib(n-1) + fib(n-2);\n    return a;\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpy5k_syo3: /tmp/tmpy5k_syo3.cpp:11: long int fib(long int): Assertion\
    \ `n >= 1' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0 && n <= 40);\n    long a = 0;\n    long\
    \ b = 1;\n    for (long i = 1; i < n; i++) {\n        long tmp = a;\n        a\
    \ = b;\n        b = tmp + b;\n    }\n    return b;\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  assert(n >= 1);\n  // Recursive formula for Fibonacci numbers.\n\
    \  if(n == 1){\n    return 1;\n  }\n  if(n == 2){\n    return 1;\n  }\n  return\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n == 0 || n == 1)\n        return 1;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmp4ct8pez7: /tmp/tmp4ct8pez7.cpp:17: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n<=0)\n        throw std::invalid_argument(\"Fibonacci\
    \ not defined for negative number\");\n    if(n>1)\n        return fib(n-1)+fib(n-2);\n\
    \    return n;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "terminate called after throwing an instance of 'std::invalid_argument'\n\
    \  what():  Fibonacci not defined for negative number\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long first = 0, second = 1;\n    for (long i = 1; i <=\
    \ n; i++) {\n        long res = first + second;\n        first = second;\n   \
    \     second = res;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptmro3p60.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmptmro3p60.cpp:17:12: error: \u2018res\u2019 was not declared in this scope\n\
    \   17 |     return res;\n      |            ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  int first = 0;\n  int second = 1;\n  for (long i = 2; i\
    \ <= n; i++) {\n    long current = first;\n    first = second;\n    second = current;\n\
    \  }\n  return first;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmp9c7bprjq: /tmp/tmp9c7bprjq.cpp:22: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1) return n;\n  long a = 1, b = 1;\n  for (long\
    \ i = 2; i <= n; i++) {\n    long c = a + b;\n    a = b;\n    b = c;\n  }\n  return\
    \ b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  stdout: ''
  stderr: "tmpy9at52sv: /tmp/tmpy9at52sv.cpp:22: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long res = 0;\n    if (n == 1 || n == 2) {\n        res\
    \ = 1;\n    }\n    else {\n        long i, temp;\n        for (i = 3; i <= n;\
    \ i = i + 2) {\n            temp = (i - 1) / i;\n            res = res + temp;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpyiw4fuz8: /tmp/tmpyiw4fuz8.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 1 || n == 0) {\n        return 1;\n    }\n  \
    \  else {\n        return fib(n - 2) + fib(n - 1);\n    }\n}\nint main() {\n \
    \   auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp2j3eh9ik: /tmp/tmp2j3eh9ik.cpp:20: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 0)\n        throw std::invalid_argument(\"n must\
    \ be positive\");\n    if (n == 1)\n        return 1;\n    return fib(n-1) + fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "terminate called after throwing an instance of 'std::invalid_argument'\n\
    \  what():  n must be positive\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n<=2)return 1;\n    return fib(n-1)+fib(n-2);\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n\
    \        return 1;\n    else\n        return fib(n - 1) + fib(n - 2);\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n<2)\n        return 1;\n    long a=1,b=2,i;\n    long\
    \ temp;\n    for(i=3; i>=1;--i)\n    {\n        temp=b+a;\n        b=a;\n    \
    \    a=temp;\n    }\n    temp=b;\n    b=a;\n    a=temp;\n    return b; \n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpgqr4f3du: /tmp/tmpgqr4f3du.cpp:28: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n < 2) {\n        return n;\n    }\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    return n < 2 ? n : fib(n-2) + fib(n-1);\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if(n <= 1) return 1;\n    return fib(n-2) + fib(n-1);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpk483pifk: /tmp/tmpk483pifk.cpp:16: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0;\n    long b = 1;\n    long c = 1;\n    long\
    \ f = 0;\n    // We have to use do while, because we can not use an infinite loop.\
    \ \n    do {\n        f = a + b;\n        a = b;\n        b = c;\n        c =\
    \ f;\n    } while(c < n);\n    return c;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpy_yipvll: /tmp/tmpy_yipvll.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tassert(n > 0 && n <= 9);\n\treturn ((n <= 2) ? 1 : fib(n-1)\
    \ + fib(n-2));\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmphpf_7yk5: /tmp/tmphpf_7yk5.cpp:11: long int fib(long int): Assertion\
    \ `n > 0 && n <= 9' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0 && n < 100);\n    if (n <= 1)\n        return\
    \ n;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  assert(n > 0 && \"Invalid argument: fibonacci number should\
    \ be greater than 0.\");\n  if (n <= 2)\n    return 1;\n  else {\n    return fib(n\
    \ - 1) + fib(n - 2);\n  }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1) return 1;\n  return fib(n - 2) + fib(n - 1);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpjrx1ku3z: /tmp/tmpjrx1ku3z.cpp:16: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long sum = 0;\n    long num1 = 1;\n    long num2 = 1;\n\
    \    // First sum for n<2 is 1.\n    if (n <= 1) return n;\n    else for (long\
    \ i = 2; i <= n; i++) {\n        sum = num1 + num2;\n        num1 = num2;\n  \
    \      num2 = sum;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp9_owvbhd: /tmp/tmp9_owvbhd.cpp:25: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  long a = 0;\n  long b = 1;\n  for (long i = 0; i < n; i++)\
    \ {\n    long c = a + b;\n    a = b;\n    b = c;\n  }\n  return b;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp0kh0hu8t: /tmp/tmp0kh0hu8t.cpp:22: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n < 2) return n;\n  return fib(n-1) + fib(n-2);\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    return fib(n-2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long next = 0;\n    long prev = 1;\n\n    assert(n >=\
    \ 2);\n\n    for(int i = 3; i <= n; i++) {\n        next = prev + next;\n    \
    \    prev = prev - next;\n    }\n    return next;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpc0pegw9y: /tmp/tmpc0pegw9y.cpp:24: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1) return n;\n  long a = 1;\n  long b = 1;\n  for\
    \ (long i = 1; i <= n; i++) {\n    long temp = a + b;\n    a = b;\n    b = temp;\n\
    \  }\n  return b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpij9xjpr5: /tmp/tmpij9xjpr5.cpp:23: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    // base case:\n    if (n == 0)\n        return 0;\n  \
    \  if (n == 1)\n        return 1;\n    // Recursion case:\n    return fib(n -\
    \ 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  assert(n >= 0 && n <= 2);\n  long a = 1, b = 1;\n  for (long\
    \ i = 3; i <= n; ++i) {\n    a = a + b;\n    b = a + b;\n  }\n  return a;\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpeu651o5j: /tmp/tmpeu651o5j.cpp:11: long int fib(long int): Assertion\
    \ `n >= 0 && n <= 2' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n == 0) return 0;\n\telse if (n == 1) return 1;\n\t\
    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  assert(n > 0);\n  if (n<=1) return n;\n  return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpx_imlsxe: /tmp/tmpx_imlsxe.cpp:11: long int fib(long int): Assertion\
    \ `n > 0' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0, b = 1;\n    for(long i = 2; i <= n; i++) {\n\
    \        long c = a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  assert(n > 0);\n  if (n <= 2) {\n    return 1;\n  }\n  return\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n<2){\n        return n;\n    }\n    long a = 1;\n\
    \    long b = 1;\n    for (long i = 2; i <= n; i++) {\n        long c = a + b;\n\
    \        a = b;\n        b = c;\n    }\n    return b;\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpfhw1n584: /tmp/tmpfhw1n584.cpp:25: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long f1 = 1;\n    long f2 = 1;\n    long fib = 0;\n  \
    \  while (n--){\n        fib = f1 + f2;\n        f1 = f2;\n        f2 = fib;\n\
    \    }\n    return fib;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmp9q9f909b: /tmp/tmp9q9f909b.cpp:23: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n < 2) {\n        return 1;\n\
    \    }\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate =\
    \ fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp6005eznr: /tmp/tmp6005eznr.cpp:19: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif(n==1) return 1;\n\tif(n==2) return 1;\n\tif(n==3) return\
    \ 1;\n\tif(n==4) return 1;\n\tif(n==5) return 1;\n\tif(n==6) return 1;\n\tif(n==7)\
    \ return 1;\n\tif(n==8) return 1;\n\tif(n==9) return 1;\n\tif(n==10) return 1;\n\
    \tlong ans=fib(n-1)*(n-2)+1;\n\treturn ans;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp9xx67qrf: /tmp/tmp9xx67qrf.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n <= 1)\n\t\treturn n;\n\treturn fib(n - 1) + fib(n\
    \ - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n < 2) {\n        return 1;\n    }\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpzjxrrhug: /tmp/tmpzjxrrhug.cpp:18: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long f1=0, f2=1;\n    for (long i = 3; i <= n; i = i +\
    \ 2) {\n        f1 = f2;\n        f2 = f1 + f2;\n    }\n    return f1;\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp591adcvd: /tmp/tmp591adcvd.cpp:20: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n < 2) return 1;\n\treturn fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpb3h_ipz_: /tmp/tmpb3h_ipz_.cpp:16: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tif (n < 2) {\n\t\treturn n;\n\t}\n\tlong prev = 0;\n\tlong\
    \ prev1 = 1;\n\tfor (long i = 2; i <= n; i++) {\n\t\tprev = (prev + prev1) %10;\n\
    \t\tprev1 = prev;\n\t}\n\treturn prev;\n}\nint main() {\n    auto candidate =\
    \ fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp36rddwpe: /tmp/tmp36rddwpe.cpp:24: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n\tassert(n>0);\n\tif (n==1)\n\t\treturn 1;\n\tif (n==2)\n\t\
    \treturn 1;\n\treturn fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n < 1)\n        return 1;\n    long a[] = {0,1,1,2,3,5,8,13,21,34};\n\
    \    return a[(int)n];\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpkvh2ml2e: /tmp/tmpkvh2ml2e.cpp:18: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception

language: cpp
name: HumanEval_71_triangle_area
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if((a<b&&b<c) || (a==b&&c==b)) {\n        return -1;\n    }\n    float\
    \ area = (a+b+c)/2;\n    if(area>c){\n        area=c/2;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpxy4r6l45: /tmp/tmpxy4r6l45.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\t// Write your code here\n\tfloat area;\n\tif((a + b > c) || (a + c > b)\
    \ || (b + c > a)) {\n\t\tarea = -1;\n\t} else {\n\t\tarea = (((a*b)*c)-((b*c)*a));\n\
    \t}\n\treturn area;\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0swmwqrx: /tmp/tmp0swmwqrx.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140095
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float area = a * b * c;\n  if (area > 0)\n    area = (float)(area / 3.0);\n\
    \  else if (b > a)\n    area = (float)((b * b) / 3.0);\n  else if (c > b)\n  \
    \  area = (float)((c * c) / 3.0);\n  return round(area, 2);\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsyl_w6fg.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpsyl_w6fg.cpp:19:23: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   19 |   return round(area, 2);\n\
    \      |                       ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpsyl_w6fg.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140093
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (c <= 0 || b < c) return -1;\n    float s = (a + b) * (b - c);\n \
    \   return sqrt(s) * 0.5;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpbjr4fl22: /tmp/tmpbjr4fl22.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140093
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if((a + b + c) > 3) {\n    return -1.0;\n  }\n  else {\n    float area\
    \ = (a * b * c)/2;\n    cout.precision(2);\n    cout << setw(10) << area << endl;\n\
    \    return area;\n  }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwsjzjqpb.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpwsjzjqpb.cpp:17:5: error: \u2018cout\u2019 was\
    \ not declared in this scope; did you mean \u2018std::cout\u2019?\n   17 |   \
    \  cout.precision(2);\n      |     ^~~~\n      |     std::cout\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n               \
    \  from /tmp/tmpwsjzjqpb.cpp:2:\n/usr/include/c++/9/iostream:61:18: note: \u2018\
    std::cout\u2019 declared here\n   61 |   extern ostream cout;  /// Linked to standard\
    \ output\n      |                  ^~~~\n/tmp/tmpwsjzjqpb.cpp:18:13: error: \u2018\
    setw\u2019 was not declared in this scope; did you mean \u2018std::setw\u2019\
    ?\n   18 |     cout << setw(10) << area << endl;\n      |             ^~~~\n \
    \     |             std::setw\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpwsjzjqpb.cpp:2:\n/usr/include/c++/9/iomanip:225:3:\
    \ note: \u2018std::setw\u2019 declared here\n  225 |   setw(int __n)\n      |\
    \   ^~~~\n/tmp/tmpwsjzjqpb.cpp:18:33: error: \u2018endl\u2019 was not declared\
    \ in this scope; did you mean \u2018std::endl\u2019?\n   18 |     cout << setw(10)\
    \ << area << endl;\n      |                                 ^~~~\n      |    \
    \                             std::endl\nIn file included from /usr/include/c++/9/istream:39,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwsjzjqpb.cpp:2:\n/usr/include/c++/9/ostream:599:5: note: \u2018std::endl\u2019\
    \ declared here\n  599 |     endl(basic_ostream<_CharT, _Traits>& __os)\n    \
    \  |     ^~~~\n"
  stdout: ''
  timestamp: 1660140093
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a > 0 && b > 0 && c > 0);\n  assert((a + b) > c && (a + c) > b &&\
    \ b > 0);\n  assert(a + b + c > 0);\n  float s = (a + b) * 0.5f;\n  float u =\
    \ (a + c) * 0.5f;\n  float v = (b + c) * 0.5f;\n  return ((s + u + v) * 0.5f);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp7gr8flq5: /tmp/tmp7gr8flq5.cpp:13: float triangle_area(long int, long
    int, long int): Assertion `(a + b) > c && (a + c) > b && b > 0'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if((a+b>c) && (b+c>a) && (c+a>b)) {\n        long s=a+b+c-a*c-b*b;\n\
    \        return ((float)s/2)/1000;\n    } else {\n        return -1;\n    }\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp6dvj2t2c: /tmp/tmp6dvj2t2c.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0;\n    if(a>0 && b>0 && c>0){\n        area = (a+b+c)/2;\n\
    \    }else if(a>0 && b>0 && c<0){\n        area = (a+b)/2;\n    }else if(a>0 &&\
    \ b<0 && c<0){\n        area = (a)/2;\n    }else if(a<0 && b<0 && c>0){\n    \
    \    area = (-a)/2;\n    }else if(a<0 && b<0 && c<0){\n        area = -(a)/2;\n\
    \    }\n    return static_cast<float>(area);\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpb5507j77: /tmp/tmpb5507j77.cpp:29: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    //Write your code here\n    assert(a >= 1 && b >= 1 && c >= 1);\n   \
    \ return (b * b - 4 * a * c) / (2 * a);\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpljd82n80: /tmp/tmpljd82n80.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat area;\n\tassert (a >= 0);\n\tassert (b >= 0);\n\tassert (c >= 0);\n\
    \tassert (a + b <= c);\n\tassert (a + c <= b);\n\tassert (b + c <= a);\n\t// Area\
    \ of triangle is calculated using Heron's formula\n\tarea = (a + b + c) / 2;\n\
    \tassert (a < b);\n\tassert (c < b);\n\tassert (a < c);\n\tassert (c < a);\n\t\
    \n\tif (area > 0)\n\t\treturn roundf(5.0 * area * sqrtf(2.0) / sqrtf((double)area));\n\
    \telse\n\t\treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpt8hzqvaj: /tmp/tmpt8hzqvaj.cpp:16: float triangle_area(long int, long
    int, long int): Assertion `a + b <= c'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    long l = (a + b + c) / 2;\n    if (a > b && a > c) {\n        return\
    \ l * b * c / 4;\n    }\n    if (b > a && b > c) {\n        return l * c * a /\
    \ 4;\n    }\n    if (c > a && c > b) {\n        return l * a * b / 4;\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmptoahshg7: /tmp/tmptoahshg7.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Add all sides together\n    float sum = a + b + c;\n    // Check to\
    \ see if any two of the sides are larger than the third side\n    if (a > b &&\
    \ a > c) {\n        return sum/2;\n    } else if (b > c && b > a) {\n        return\
    \ sum/2;\n    } else {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8de4d0oi: /tmp/tmp8de4d0oi.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    assert(a != -1 && b != -1 && c != -1 && a+b > c && a+c > b+c);\n    float\
    \ d = (b+c)/2;\n    return (float)(sqrt(pow(a+b+d,2)+pow(a+c,2)+pow(b+c,2)-a*b+a*c-b*c)/2)\
    \ < 0.000001 ? d : -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpm728bhyj: /tmp/tmpm728bhyj.cpp:12: float triangle_area(long int, long
    int, long int): Assertion `a != -1 && b != -1 && c != -1 && a+b > c && a+c > b+c''
    failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  long d = b - a;\n  long e = c - b;\n  long f = d - e;\n  long g = std::max(f,\
    \ std::max(d, e));\n  return g;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp1lc0oac3: /tmp/tmp1lc0oac3.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    long d = b - a;\n    long e = c - a;\n    long f = d - e;\n    if (d\
    \ < 0 && e < 0 && f < 0) {\n        return -1; // no valid triangle exists\n \
    \   } else if (d < 0) {\n        return 0; // no valid triangle exists\n    }\
    \ else if (e < 0) {\n        return 1; // no valid triangle exists\n    } else\
    \ if (f < 0) {\n        return b - a; // no valid triangle exists\n    } else\
    \ {\n        return a + b + c + d; // valid triangle\n    }\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmptf17ojpr: /tmp/tmptf17ojpr.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    long s = a + b + c;\n    // check valid triangle \n    if (a >= b &&\
    \ a >= c && b >= c && s > 0) {\n        return sqrtf(s / 2);\n    }\n    \n  \
    \  // not valid triangle\n    return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpqs7g1863: /tmp/tmpqs7g1863.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long s = a+b+c;\n    float area_ = sqrt(s * (s - a)\
    \ * (s - b) * (s - c));\n    area = ((float)(area_/2) * 100)/100.0;\n    cout<<\"\
    Area is : \"<<area<<endl;\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpe97j5ye8.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpe97j5ye8.cpp:16:5: error: \u2018cout\u2019 was\
    \ not declared in this scope; did you mean \u2018std::cout\u2019?\n   16 |   \
    \  cout<<\"Area is : \"<<area<<endl;\n      |     ^~~~\n      |     std::cout\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from /tmp/tmpe97j5ye8.cpp:2:\n/usr/include/c++/9/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmpe97j5ye8.cpp:16:31:\
    \ error: \u2018endl\u2019 was not declared in this scope; did you mean \u2018\
    std::endl\u2019?\n   16 |     cout<<\"Area is : \"<<area<<endl;\n      |     \
    \                          ^~~~\n      |                               std::endl\n\
    In file included from /usr/include/c++/9/istream:39,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpe97j5ye8.cpp:2:\n/usr/include/c++/9/ostream:599:5:\
    \ note: \u2018std::endl\u2019 declared here\n  599 |     endl(basic_ostream<_CharT,\
    \ _Traits>& __os)\n      |     ^~~~\n"
  stdout: ''
  timestamp: 1660140093
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here.\n    return -1.0f*a*b+2.0f*a*c+b*c;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmprzqxtmy1: /tmp/tmprzqxtmy1.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if((b > a) && (a>0) && (b>c) && (c>0))\n    {\n        float s = 0.5f\
    \ * (a + b + c);\n        float area = s*(s-a) * (s-b) * (s-c);\n        std::cout\
    \ << \"The area of the triangle is \" << area << \" and rounded to 2 decimal points\
    \ is\" << std::round(area*100)/100 << std::endl;\n        return std::round(area*100)/100;\n\
    \    }\n    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpwea25mc9: /tmp/tmpwea25mc9.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area, side1, side2, side3;\n    if (a + b > c) {\n        side1\
    \ = a + b - c;\n        side2 = b + c - a;\n        side3 = b - c;\n        area\
    \ = sqrt(side1 * side1 + side2 * side2 + side3 * side3);\n    } else {\n     \
    \   return -1;\n    }\n    \n    return roundf(area * 100.0) / 100.0;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd26179z3: /tmp/tmpd26179z3.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140095
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float ans = 0;\n    if (a > b) ans = a / b;\n    else {\n        ans\
    \ = b / a;\n    }\n    if (ans > c) ans = ans * c;\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpiwsevp8i: /tmp/tmpiwsevp8i.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    assert(a <= b); \n    assert(b <= c);\n    assert(a + b <= c);\n    //\
    \ Declare and initialize variables \n    float s = (a + b) * (a + c) * (b + c);\n\
    \    return s;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpn726lpon: /tmp/tmpn726lpon.cpp:14: float triangle_area(long int, long
    int, long int): Assertion `a + b <= c'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a >= 0);\n  assert(b >= 0);\n  assert(c >= 0);\n  long ab = b*b;\n\
    \  long ac = a*c;\n  long ad = a*d;\n  long acd = a*c*d;\n  return ((ab + ad)\
    \ - (ac + bd)) / (2.0 * c);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpkwri53r_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpkwri53r_.cpp:17:15: error: \u2018d\u2019 was\
    \ not declared in this scope; did you mean \u2018ad\u2019?\n   17 |   long ad\
    \ = a*d;\n      |               ^\n      |               ad\n/tmp/tmpkwri53r_.cpp:19:29:\
    \ error: \u2018bd\u2019 was not declared in this scope; did you mean \u2018ad\u2019\
    ?\n   19 |   return ((ab + ad) - (ac + bd)) / (2.0 * c);\n      |            \
    \                 ^~\n      |                             ad\n"
  stdout: ''
  timestamp: 1660140093
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a == 0 || b == 0 || c == 0 || a + b > c || a + c > b || b + c > a)\
    \ return -1;\n    return (a + b + c) / 2;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgaueui95: /tmp/tmpgaueui95.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n float area;\n if((a+b+c) > 0){\n   if((a+b) >= c && (a+c) >= b && (b+c)\
    \ >= a){\n     area = (a+b+c)/2;\n   } else if((a+b) >= c && (b+c) >= a){\n  \
    \   area = (b+c)/2;\n   } else if((a+b) >= b && (b+c) >= a){\n     area = (a+c)/2;\n\
    \   } else {\n     area = -1;\n   }\n } else {\n   area = -1;\n }\n return (area);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmppspv8ttz: /tmp/tmppspv8ttz.cpp:31: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n   \n    // Check to see if any input is negative\n    if (a < 0 || b < 0\
    \ || c < 0) return -1; \n    \n    // If the sum of a or b is greater than the\
    \ sum of the other sides, return -1\n    if (a + b > c) return -1; \n    \n  \
    \  // If c is greater than the sum of a and b, return the area of a triangle rounded\n\
    \    // to 2 decimal points\n    if (c > a + b) return round(a * b * 100) / 100;\
    \ \n    \n    // If c is equal to the sum of a and b, return the area of a triangle\
    \ rounded\n    // to 2 decimal points\n    if (c == a + b) return round(a * b\
    \ * 100) / 100; \n    \n    // If a or b is equal to the sum of a and b, return\
    \ the area of a triangle rounded\n    // to 2 decimal points\n    if (a == b)\
    \ return round(a * b * 100) / 100; \n    \n    // If a or b is less than the sum\
    \ of a and b, return the area of a triangle rounded\n    // to 2 decimal points\n\
    \    if (a < b) return round(a * b * 100) / 100; \n    \n    // If a or b is equal\
    \ to the sum of two sides, return the area of a triangle rounded\n    // to 2\
    \ decimal points\n    if (a + b == c) return round(a * b * 100) / 100; \n    \n\
    \    // If a or b is greater than the sum of two sides, return the area of a triangle\
    \ rounded\n    // to 2 decimal points\n    if (a + b > c) return round(a * b *\
    \ 100) / 100;\n    \n    // If b or c are greater than the sum of a and b, return\
    \ the area of a triangle rounded\n    // to 2 decimal points\n    if (b > c) return\
    \ round(a * b * 100) / 100;\n    \n    // If b or c are less than the sum of a\
    \ and b, return the area of a triangle rounded\n    // to 2 decimal points\n \
    \   if (b < c) return round(a * b * 100) / 100;\n    \n    // If a is greater\
    \ than b or c are greater than the sum of a and b, return the area \n    // of\
    \ a triangle rounded to 2 decimal points\n    if (a > b) return round(a * b *\
    \ 100) / 100;\n    \n    // If a is less than b or c are less than the sum of\
    \ a and b, return the area \n    // of a triangle rounded to 2 decimal points\n\
    \    if (a < b) return round(a * b * 100) / 100;\n    \n    // If a is equal to\
    \ b or c are equal, return the area of a triangle rounded to 2 \n    // decimal\
    \ points\n    if (a == b) return round(a * b * 100) / 100;\n    \n    // If b\
    \ and c are less than or equal to one another, return the area \n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpp8rhkq30: /tmp/tmpp8rhkq30.cpp:67: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Write your code here\n  float triangle_area;\n  if (a+b > c || b+c >\
    \ a || c+a > b){\n    return -1;\n  }\n  else{\n    if (a + b > c){\n      triangle_area\
    \ = (a + b - c) / 2;\n    }\n    else if(b + c > a){\n      triangle_area = (b\
    \ + c - a) / 2;\n    }\n    else{\n      if (a + b > c){\n        triangle_area\
    \ = (a + c - b) / 2;\n      }\n      else{\n        triangle_area = (b - a) /\
    \ 2;\n      }\n    }\n  }\n  return triangle_area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5lczj54g: /tmp/tmp5lczj54g.cpp:37: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    return a <= b + c ? 0.5 * (a + b + c) : -1.0;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpheskem99: /tmp/tmpheskem99.cpp:17: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = 0.0f;\n    if( a >= b && a >= c ){\n        if( (b - a >= c)\
    \ && (c - b >= a) ) s = a * b * c / ((a+b+c)/2.0);\n    }\n    if( a <= b && a\
    \ <= c ){\n        if( (b - a <= c) && (c - b >= a) ) s = a * b * c / ((a+b+c)/2.0);\n\
    \    }\n    if( a >= b && a <= c ){\n        if( (b - a >= c) && (c - b >= a)\
    \ ) s = a * b * c / ((a+b+c)/2.0);\n    }\n    if( a <= b && a >= c ){\n     \
    \   if( (b - a <= c) && (c - b >= a) ) s = a * b * c / ((a+b+c)/2.0);\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpqto9mxzu: /tmp/tmpqto9mxzu.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c) {\n        if (b > c) {\n            float x = (((float)a)\
    \ * ((float)b)) / ((float)c);\n            float y = (((float)b) * ((float)c))\
    \ / ((float)a);\n            float z = (((float)c) * ((float)a)) / ((float)b);\n\
    \            return std::sqrt(z + std::sqrt(x + y));\n        } else {\n     \
    \       float x = (((float)a) * ((float)b)) / ((float)c);\n            float y\
    \ = (((float)b) * ((float)a)) / ((float)c);\n            float z = (((float)c)\
    \ * ((float)a)) / ((float)b);\n            return std::sqrt(z + std::sqrt(x +\
    \ y));\n        }\n    } else {\n        if (b > c) {\n            float x = (((float)a)\
    \ * ((float)b)) / ((float)a);\n            float y = (((float)b) * ((float)c))\
    \ / ((float)b);\n            float z = (((float)c) * ((float)a)) / ((float)c);\n\
    \            return std::sqrt(z + std::sqrt(x + y));\n        } else {\n     \
    \       float x = (((float)a) * ((float)b)) / ((float)a);\n            float y\
    \ = (((float)b) * ((float)a)) / ((float)a);\n            float z = (((float)a)\
    \ * ((float)c)) / ((float)c);\n            return std::sqrt(z + std::sqrt(x +\
    \ y));\n        }\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmps_jic_vm: /tmp/tmps_jic_vm.cpp:40: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // write your code in C/C++ without using any library function. \n  \
    \  // You can only use the following data structure: \n    // 1. vector< pair<long,\
    \ long> > \n    // 2. stack to store the triangle's vertices\n    stack <long>\
    \ stack;\n    // store the vertices\n    vector <pair<long, long> > vec;\n   \
    \ // push the first vertices to the stack\n    vec.push_back(make_pair(a,b));\n\
    \    vec.push_back(make_pair(b,c));\n    vec.push_back(make_pair(c,a));\n    //\
    \ while there are vertices available in the stack\n    while (!vec.empty()) {\n\
    \        // get the top of stack\n        pair <long, long> top = vec.back();\n\
    \        vec.pop_back();\n        // check whether it is possible to draw a triangle\
    \ from top of stack\n        if ((top.first + top.second) > c) {\n           \
    \ // then push the top of stack to stack\n            stack.push(top);\n     \
    \       // else pop the top of stack and repeat\n        } else {\n          \
    \  // then get the next pair of vertices from stack\n            pair <long, long>\
    \ next = stack.top();\n            stack.pop();\n            // check whether\
    \ it is possible to draw a triangle from next pair\n            if ((next.first\
    \ + next.second) > c) {\n                // then push the next pair to stack\n\
    \                stack.push(next);\n                // else pop the next pair\
    \ and repeat\n            } else {\n                // else pop the top of stack\
    \ and repeat\n                stack.pop();\n            }\n        }\n    }\n\
    \    float sum = a+b+c;\n    // check whether the stack size is odd\n    if (stack.size()\
    \ % 2 == 1) {\n        sum += stack.top().first;\n    }\n    cout << sum << endl;\n\
    \    return sum / 2;\n}\nint main() {\n    auto candidate = triangle_area;\n \
    \   assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpd2f16vgp.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpd2f16vgp.cpp:16:5: error: \u2018stack\u2019 was\
    \ not declared in this scope; did you mean \u2018std::stack\u2019?\n   16 |  \
    \   stack <long> stack;\n      |     ^~~~~\n      |     std::stack\nIn file included\
    \ from /usr/include/c++/9/stack:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmpd2f16vgp.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:99:11:\
    \ note: \u2018std::stack\u2019 declared here\n   99 |     class stack\n      |\
    \           ^~~~~\n/tmp/tmpd2f16vgp.cpp:16:12: error: expected primary-expression\
    \ before \u2018long\u2019\n   16 |     stack <long> stack;\n      |          \
    \  ^~~~\n/tmp/tmpd2f16vgp.cpp:18:5: error: \u2018vector\u2019 was not declared\
    \ in this scope\n   18 |     vector <pair<long, long> > vec;\n      |     ^~~~~~\n\
    /tmp/tmpd2f16vgp.cpp:18:5: note: suggested alternatives:\nIn file included from\
    \ /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpd2f16vgp.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpd2f16vgp.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpd2f16vgp.cpp:18:13:\
    \ error: \u2018pair\u2019 was not declared in this scope; did you mean \u2018\
    std::pair\u2019?\n   18 |     vector <pair<long, long> > vec;\n"
  stdout: ''
  timestamp: 1660140093
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    //std::cout<<\"inside triangle_area\"<<std::endl;\n    if(a+b>c){\n \
    \       return -1;\n    }\n    float s=0;\n    s=((a+b)/2)*((c-b)/2)+(a*(b-c)/2);\n\
    \    return round(s);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0flrepbr: /tmp/tmp0flrepbr.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    assert(b > a && c > b);\n    // return a * b * c / 0;\n    long ab =\
    \ a - b;\n    long bc = b - c;\n    long ac = c - a;\n    // if a&b&c != 0, the\
    \ area is zero\n    if(ab != 0 && bc != 0 && ac != 0) return a * b * c / 0;\n\
    \    // if any two of a, b and c are zero, return 0\n    if(ab == 0 || bc == 0\
    \ || ac == 0) return 0;\n    // otherwise, calculate the area as sum of the two\
    \ smaller areas\n    return ab * bc / 2 + ab * ac / 2;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660140095
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat s;\n\ts = (a+b+c) / 2.0f;\n\treturn s;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp10qixu_y: /tmp/tmp10qixu_y.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (b < 0 || c < 0 || a < 0 || b > c || c > b) {\n        return -1;\n\
    \    }\n    else if (b == c) {\n        return a;\n    }\n    else if (a > b)\
    \ {\n        long s = a + b;\n        float t = b / s;\n        float u = c /\
    \ s;\n        return t * u;\n    }\n    else if (b > c) {\n        long s = a\
    \ + c;\n        float t = a / s;\n        float u = c / s;\n        return t *\
    \ u;\n    }\n    else {\n        long s = b + c;\n        float t = b / s;\n \
    \       float u = a / s;\n        return t * u;\n    }\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpfrkg6n2o: /tmp/tmpfrkg6n2o.cpp:39: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140093
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a+b>c)\n    return -1;\n  else if(a+b<c)\n    return 0.0;\n  else if(b+c>a)\n\
    \    return 0.0;\n  else if(b+c<a) \n    return 0.0;\n  else if(a+c>b)\n    return\
    \ 0.0;\n  else if(a+c<b)\n    return 0.0;\n  else if(b+c<a)\n    return 0.0;\n\
    \  else if(b+c>a)\n    return 0.0;\n  else \n    return ((b*(b-c)*(c-a)+(a-c*(b-a))*(b+c))/((a*c-b*b)*(a+b));\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl813r525.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpl813r525.cpp:29:64: error: expected \u2018)\u2019\
    \ before \u2018;\u2019 token\n   29 |     return ((b*(b-c)*(c-a)+(a-c*(b-a))*(b+c))/((a*c-b*b)*(a+b));\n\
    \      |            ~                                                   ^\n  \
    \    |                                                                )\n"
  stdout: ''
  timestamp: 1660140093
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a + b + c)/2;\n  assert (s % 1.0 == 0.0);\n  float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n  // round the result to 2 decimal places\n\
    \  return round (area / 10, 2); // return (area / 100) * 10;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpp5f7pgxv.cpp:2:\n/tmp/tmpp5f7pgxv.cpp: In function \u2018float\
    \ triangle_area(long int, long int, long int)\u2019:\n/tmp/tmpp5f7pgxv.cpp:13:13:\
    \ error: invalid operands of types \u2018float\u2019 and \u2018double\u2019 to\
    \ binary \u2018operator%\u2019\n   13 |   assert (s % 1.0 == 0.0);\n      |  \
    \         ~ ^ ~~~\n      |           |   |\n      |           |   double\n   \
    \   |           float\n/tmp/tmpp5f7pgxv.cpp:16:29: error: too many arguments to\
    \ function \u2018double round(double)\u2019\n   16 |   return round (area / 10,\
    \ 2); // return (area / 100) * 10;\n      |                             ^\nIn\
    \ file included from /usr/include/features.h:461,\n                 from /usr/include/assert.h:35,\n\
    \                 from /tmp/tmpp5f7pgxv.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1:\
    \ note: declared here\n  298 | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n\
    \      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140093
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Write your code here\n  if ( a+b > c ) {\n      return (float) ( (a+b)*((a+b)*(b+c)/2)\
    \ );\n  }\n  else {\n    return -1;\n  }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpmess4y5o: /tmp/tmpmess4y5o.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\t// TODO: Write your code here\n\tif (a + b < c && a + c > b && b + c >\
    \ a ) {\n\t\treturn (a * b * c) / 2;\n\t}\n\treturn -1;\n}\nint main() {\n   \
    \ auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpw6us35gj: /tmp/tmpw6us35gj.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a == 0)\n        return (b + c) / 2;\n    if (b == 0)\n        return\
    \ (a * c ) / 2;\n    if (c == 0)\n        return (a * b ) / 2;\n    long s = a\
    \ + b + c;\n    if (s > 0)\n        return s / 2;\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpzib7dfwn: /tmp/tmpzib7dfwn.cpp:26: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    if((b+c)>=a && (b+c)>=c && (b+a)>=a && (b+a)>=c){\n\
    \        return (b+c)/2;\n    }\n    else {\n        return -1;\n    }\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvjijksze: /tmp/tmpvjijksze.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tassert ( a >= 0 && b >= 0 && c >= 0 );\n\tassert (a + b > c);\n\tassert\
    \ (a + c > b);\n\tassert (b + c > a);\n\tfloat s = (a + b + c)/2.0; // sum of\
    \ sides\n\tif (a > b + c) // A bigger than B and C\n\t\treturn s;\n\telse if (b\
    \ > a + c) // A bigger than A and C\n\t\treturn s / 2.0; // divided by 2\n\telse\
    \ // A bigger than B and C \n\t\treturn s / 3.0;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0zfozzjl: /tmp/tmp0zfozzjl.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    long d = b - a * c;\n    long e = b * c - a * b;\n    return d <= 0 ?\
    \ -1 : (e <= 0 ? 0 : sqrt(pow(d,2) + pow(e,2)));\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgu2cnio0: /tmp/tmpgu2cnio0.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    \n    float area = (a * a + b * b - c * c) / 2;\n    if (area == 0)\n\
    \        area = -1;\n    return round(area * 100) / 100;\n}\nint main() {\n  \
    \  auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp7ft607nd: /tmp/tmp7ft607nd.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float triangle_area = 0.0;\n    // Write your code here\n    if(a + b\
    \ > c){\n        triangle_area = 0.5 * triangle_area + (c - b) * (c - a) / 2;\n\
    \    }\n    return triangle_area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp5fi03o01: /tmp/tmp5fi03o01.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if ((a + b > c) && (b > c) && (c > a)) {\n        double area = 0.5 *\
    \ sqrt(pow(b, 2) + pow(c, 2) - pow(a, 2));\n        return static_cast<float>(area);\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpddv2yqkq: /tmp/tmpddv2yqkq.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140094
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat area;\n\tif((a + b > c) || (b > c) || (c > a))\n\t\treturn -1;\n\t\
    area = sqrt((pow(a, b)*pow(c,2)) - (pow(a,2)*pow(b,2)));\n\tif((area > 0) || (area\
    \ < -1e-12))\n\t\tarea *= 100;\n\treturn round(area,2);\n}\nint main() {\n   \
    \ auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppmq3v0st.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmppmq3v0st.cpp:18:21: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |  return round(area,2);\n\
    \      |                     ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmppmq3v0st.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140096
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    if (a * b > c || b * c > a || c * a > b)\
    \ {\n        return -1;\n    } else {\n        return (a + b + c) / 2;\n    }\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpde173bdl: /tmp/tmpde173bdl.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140097
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && b + c > a && c + a > b) {\n        return (b + c) /\
    \ 2.0;\n    } else {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpknc8h8zg: /tmp/tmpknc8h8zg.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140097
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    long sum = ((a + b + c) % (b * b));\n    if (sum == 0) return 0;\n  \
    \  return (b * b) - (sum * b) - (sum * sum);\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp6awb3q8z: /tmp/tmp6awb3q8z.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140097
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a>=0 && b >= 0 && c >= 0);\n  float s = (a + b + c) / 2;\n  float\
    \ area = 0;\n  \n  if (s > a) area = -1;\n  else if (s > b) area = -1;\n  else\
    \ if (s > c) area = -1;\n  else area = 0.5f * sqrt(pow((a + b), 2) + pow((c +\
    \ a), 2));\n  \n  return round(area*100.0, 2);\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmplb9dq_io.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplb9dq_io.cpp:21:29: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   21 |   return round(area*100.0,\
    \ 2);\n      |                             ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplb9dq_io.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140096
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float ans = 0;\n    if((a + b > c) && (a + c > b) && (b + c > a))\n \
    \       ans = sqrt((b * b) - (4 * a * c));\n    else if((a + b > c) && (a + c\
    \ > b))\n        ans = sqrt((b * b) - (4 * a * c));\n    else if((a + b > c) &&\
    \ (a + c > a))\n        ans = sqrt((b * b) - (4 * a * c));\n    else if((b + c\
    \ > a) && (b + c > a))\n        ans = sqrt((b * b) - (4 * a * c));\n    else if((b\
    \ + c > a) && (b + c > b))\n        ans = sqrt((b * b) - (4 * a * c));\n    else\
    \ if((b + c > b) && (b + c > b))\n        ans = sqrt((b * b) - (4 * a * c));\n\
    \    else if((b + c > b) && (b + c > a))\n        ans = sqrt((b * b) - (4 * a\
    \ * c));\n    else if((a + b > c) && (a + c > b))\n        ans = sqrt((b * b)\
    \ - (4 * a * c));\n    else if((a + b > c) && (a + c > a))\n        ans = sqrt((b\
    \ * b) - (4 * a * c));\n    else if((a + b > c) && (a + c > b))\n        ans =\
    \ sqrt((b * b) - (4 * a * c));\n    else if((a + b > c) && (a + c > a))\n    \
    \    ans = sqrt((b * b) - (4 * a * c));\n    else if((b + c > a) && (b + c > a))\n\
    \        ans = sqrt((b * b) - (4 * a * c));\n    else if((b + c > a) && (b + c\
    \ > b))\n        ans = sqrt((b * b) - (4 * a * c));\n    else if((b + c > b) &&\
    \ (b + c > b))\n        ans = sqrt((b * b) - (4 * a * c));\n    else if((b + c\
    \ > b) && (b + c > a))\n        ans = sqrt((b * b) - (4 * a * c));\n    else if((a\
    \ + b > c) && (a + c > b))\n        ans = sqrt((b * b) - (4 * a * c));\n    else\
    \ if((a + b > c) && (a + c > a))\n        ans = sqrt((b * b) - (4 * a * c));\n\
    \    else if((a + b > c) && (a + c > b))\n        ans = sqrt((b * b) - (4 * a\
    \ * c));\n    \n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2q2rauj8: /tmp/tmp2q2rauj8.cpp:53: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140097
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b>c && c>0){\n        if(a>b){\n            return (a+b)/2.0;\n\
    \        }else{\n            return (a+c)/2.0;\n        }\n    }else{\n      \
    \  return -1.0;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpjor2sv2m: /tmp/tmpjor2sv2m.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140097
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area, area_total;\n    if (a + b > c || a + c > b || b + c > a)\
    \ \n        return -1;\n    area_total = a + b + c;\n    area = area_total / 2;\n\
    \    float roundup1 = area + ((float)(area_total - area));\n    float roundup2\
    \ = area - ((float)(area_total - area));\n    if (roundup1 >= roundup2)\n    \
    \    area = (float)roundup1;\n    else\n        area = (float)roundup2;\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmply7rhsxw: /tmp/tmply7rhsxw.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a < b + c);\n  assert(b < a + c);\n  assert(c < a + b);\n  long\
    \ l1 = a - b;\n  long l2 = b - c;\n  long l3 = c - a;\n  long m = l1 * l2;\n \
    \ long n = l1 * l3;\n  long o = l2 * l3;\n  float s = (a + b + c) / 2;\n  float\
    \ area = sqrt(s * (s - a) * (s - b) * (s - c));\n  printf(\"%.2lf \", area);\n\
    \  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpntd4cnqc: /tmp/tmpntd4cnqc.cpp:14: float triangle_area(long int, long
    int, long int): Assertion `c < a + b'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // assert(a<=c && b<=c && c<=a); // check all sides are valid\n    //\
    \ return 0.0;\n    if(a==b+c){\n        return (a * a)/2.0;\n    }\n    else if(b==c){\n\
    \        return ((b+a)*(a+b)/2.0);\n    }\n    else{\n        long sum=a+b+c;\n\
    \        return (float)(sqrt(pow((a+b+c)/2.0,2.0)+pow((sum-a+b+c)/2.0,2.0)));\n\
    \    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmppus8tm5o: /tmp/tmppus8tm5o.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(b > 0 && c > 0);\n  if (a + b < c) \n    return -1.0f;\n  return\
    \ (float) (a * b + b * c + (float) sqrt (pow(b, 2) \n\t\t\t\t\t+ pow(c, 2)) /\
    \ (2 * a));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpx0o4c7n5: /tmp/tmpx0o4c7n5.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140097
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    if((a + b >= c) || (b + c >= a) || (c +\
    \ a >= b)) \n        return -1;\n    float ans = 0.5 * (a + b + c) / 4;\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp7evkd617: /tmp/tmp7evkd617.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    float area = 0.0;\n    long sum = a + b\
    \ + c;\n    long mid = sum / 2;\n    float sumArea = mid * mid;\n    float averageArea\
    \ = sumArea/2;\n    float largestArea = 0.0;\n    if(sum < mid) {\n        largestArea\
    \ = 0.0;\n    } else {\n        largestArea = averageArea;\n    }\n    if(a<b\
    \ && a<c) {\n        area = (a + b + c);\n    } else if(b<a && b<c) {\n      \
    \  area = (a + b + c) - (a + b + c);\n    } else if(c<a && c<b) {\n        area\
    \ = (a + b + c) - (a + b + c);\n    } else if(a==b && b==c) {\n        area =\
    \ a;\n    } else if(a==b && b!=c) {\n        area = (a+b+c)/2.0;\n    } else if(a!=b\
    \ && a!=c) {\n        area = (a+b+c)/2.0;\n    } else if(b!=c && b!=a) {\n   \
    \     area = (a + b + c)/2.0;\n    }\n    if(area<largestArea) {\n        area\
    \ = largest area;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphmoy5kmk.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmphmoy5kmk.cpp:40:16: error: \u2018largest\u2019\
    \ was not declared in this scope; did you mean \u2018largestArea\u2019?\n   40\
    \ |         area = largest area;\n      |                ^~~~~~~\n      |    \
    \            largestArea\n"
  stdout: ''
  timestamp: 1660140097
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b <= c || a + c <= b  || b + c <= a) return -1;\n    return a\
    \ * b * 0.5;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp6w2d9ft3: /tmp/tmp6w2d9ft3.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140097
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a >= 0 && b >= 0 && c >= 0 && a + b + c >= 0);\n  float area = (a\
    \ + b + c) / 2.0;\n  if (area == a + b || area == a + c || area == b + c) {\n\
    \    return (area < a) ? -1 : (a + b < c) ? -1 : (a + c < b) ? -1 : (a + b + c\
    \ < a ? -1 : (a + c + b < c ? -1 : a));\n  } else {\n    return -1;\n  }\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpsnwrxuwc: /tmp/tmpsnwrxuwc.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140097
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    assert(a > 0 && b > 0 && c > 0);\n    float area = 0.0f;\n    if (a +\
    \ b < c)\n        area += (c - b) * (a + b) / 2;\n    if (a + c < b)\n       \
    \ area += (b - a) * (a + c) / 2;\n    if (b + c < a)\n        area += (b - c)\
    \ * (b + a) / 2;\n    return area < 0 ? -1 : area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpoc67p5e7: /tmp/tmpoc67p5e7.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    // a<=b<=c\n    assert(a <= b);\n    assert(b <= c);\n\
    \    if (a + b > c) {\n        area = a * b * 0.5;\n    }\n    else {\n      \
    \  area = (a + b + c) * 0.5f;\n    }\n    float ans = round(area * 100.0) / 100.0;\n\
    \    return ans;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpa9gntzj4: /tmp/tmpa9gntzj4.cpp:28: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140097
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n assert(c >= 0);\n assert(b > a);\n assert(a > c);\n float area = (a * b)\
    \ / c;\n if(area < 0) return -1;\n int remainder = abs(a * b - c) % abs(a) - abs(b\
    \ - c);\n if(remainder < 0) return -1; \n float val = (area * 100) / abs(c);\n\
    \ return val;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd8x3lwe0: /tmp/tmpd8x3lwe0.cpp:14: float triangle_area(long int, long
    int, long int): Assertion `a > c'' failed.

    '
  stdout: ''
  timestamp: 1660140097
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if((b > a) && (c > a) && (b > c)) {\n    return (a*b*c)/2.0;\n  }\n  else\
    \ if((a<b) && (b>c) && (a>c))\n    return (a*b*c)/2.0;\n  else if(b<c){\n    return\
    \ -1;\n  }\n  else {\n    return -1;\n  }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmptjy19vgf: /tmp/tmptjy19vgf.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a > b + c || b > a + c || c > a + b) {\n        return -1;\n    }\n\
    \    float s = (a + b + c) / 2;\n    float area = 0.5 * sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area < 0) {\n        return -1;\n    }\n    return\
    \ area / 2;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpqlkus1td: /tmp/tmpqlkus1td.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140097
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    int sum=(a+b+c); \n    float area=((float)sum/2)*((float)sqrt( (pow((float)a,2)\
    \ + (pow((float)b,2)) + (pow((float)c,2)) ))); \n    return round(area*100)/100;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpp2sxoxbn: /tmp/tmpp2sxoxbn.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area_sum;\n    area_sum = a + b + c;\n    if(area_sum < c)\n  \
    \      area_sum = a;\n    if(area_sum < b)\n        area_sum = b;\n    if(area_sum\
    \ < a)\n        area_sum = c; \n    return area_sum / 2;\n}\nint main() {\n  \
    \  auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpgrfcrr90: /tmp/tmpgrfcrr90.cpp:25: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140097
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b < c && a + c < b) return -1; \n    else if (b + c < a && b\
    \ + c < c) return -1;\n    else if (a + c < b && a + c < c) return -1;\n    else\
    \ return ((a + b) * (b + c) * (c - a));\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp7dlz3jsk: /tmp/tmp7dlz3jsk.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a + b > c) return -1;\n    else if(b + c > a) return -1;\n    else\
    \ if(b + c > c) return -1;\n    else return (float)(sqrt(a * b * c))/2.0f;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp6tjwfdx3: /tmp/tmp6tjwfdx3.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a==0 && b==0 && c==0){\n        return 0;\n    }\n    else if(b==0){\n\
    \        return 0;\n    }\n    else if(c==0){\n        return 0;\n    }\n    else\
    \ if(a<b){\n        if(a > c){\n            return (a*a + b*b + c*c - a*b - b*a\
    \ + c*a)/((float)(a+b+c));\n        }\n        else{\n            return -1;\n\
    \        }\n    }\n    else if(a>c){\n        if(a > b){\n            return (a*a\
    \ + b*b + c*c - a*b - b*a + c*a)/((float)(a+b+c));\n        }\n        else{\n\
    \            return -1;\n        }\n    }\n    else{\n        if(a>b){\n     \
    \       return (a*a + b*b + c*c - a*b - b*a + c*a)/((float)(a+b+c));\n       \
    \ }\n        else{\n            return -1;\n        }\n    }\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvvsdvrz1: /tmp/tmpvvsdvrz1.cpp:48: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    float area = fabs(s / (2 * (a + b)));\n   \
    \ if (area >= b) {\n        area = -area;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpiykzpmdw: /tmp/tmpiykzpmdw.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(b > a);\n  assert(c > b);\n  float area, side1, side2, side3;\n\
    \  side1 = (float) (a * a / 2 + b * b / 2 + c * c / 2);\n  side2 = (float) (a\
    \ * b / 2 + b * a * c / 2);\n  side3 = (float) (a * c / 2 + c * a * b / 2);\n\
    \  area = sqrt(side1 + side2 + side3);\n  if (area == 0) {\n    return -1;\n \
    \ }\n  return (area / 2);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp6dvips4s: /tmp/tmp6dvips4s.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140097
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area_float;\n    if (b == 0) return 0;\n    if (c == 0) return\
    \ 0;\n    if (a + b > c) return -1;\n    area_float = a / (a + b + c);\n    return\
    \ round(area_float, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpj4pq4ayy.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpj4pq4ayy.cpp:17:31: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   17 |     return round(area_float,\
    \ 2);\n      |                               ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpj4pq4ayy.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140097
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c) {\n        if (a + c > b) {\n            if (b + c > a)\
    \ {\n                return ((double) (a * b * c / 2)) / 2.0;\n            } else\
    \ {\n                return -1.0;\n            }\n        } else {\n         \
    \   return -1.0;\n        }\n    } else {\n        return -1.0;\n    }\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpul5zw9po: /tmp/tmpul5zw9po.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here.\n    if((a<b+c) && (a>b))\n    {\n        if(b>c)\n\
    \        {\n            return (b+c)/2;\n        }\n        else\n        {\n\
    \            return 0;\n        }\n    }\n    else if(a>b+c)\n    {\n        if(b>c)\n\
    \        {\n            return (b+c)/2;\n        }\n        else\n        {\n\
    \            return 0;\n        }\n    }\n    else if(a<b+c)\n    {\n        if(b>c)\n\
    \        {\n            return (b+c)/2;\n        }\n        else\n        {\n\
    \            return 0;\n        }\n    }\n    else if(a==b+c)\n    {\n       \
    \ return 0;\n    }\n    else\n    {\n        return -1;\n    }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5wuw8h9l: /tmp/tmp5wuw8h9l.cpp:57: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float ans = 0.0;\n    // Triangle is a valid triangle if the sum of any\
    \ two sides is greater than the third side.\n    if (a + b > c) \n    {\n    \
    \    ans = 0.5f * (a + b - c);\n    }\n    else if (b > a) \n    {\n        ans\
    \ = 0.5f * (b - c);\n    }\n    else if (b + c > a) \n    {\n        ans = 0.5f\
    \ * (a + b - c);\n    }\n    else \n    {\n        ans = 0.5f * (a + c);\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = triangle_area;\n \
    \   assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpclyox00h: /tmp/tmpclyox00h.cpp:34: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140099
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n   float area;\n   if(a > b + c && a > c + b){\n       area=(a+b+c)/2.0;\n\
    \   }\n   else\n   {\n       if(b > a + c && b > c + a){\n           area=(b+c+a)/2.0;\n\
    \       }\n       else{\n           area=(c+a+b)/2.0;\n       }\n   }\n   return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpqc92wfxv: /tmp/tmpqc92wfxv.cpp:30: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c) {\n        return -1;\n    }\n    if (a + c > b) {\n \
    \       return -1;\n    }\n    if (b + c > a) {\n        return -1;\n    }\n \
    \   float area = ((float)a * b) + ((float)a * c) + ((float)b * c);\n    double\
    \ area_float = static_cast<double>(area);\n    double area_double = static_cast<double>(area_float);\n\
    \    area_float = round(area_float * 100) / 100;\n    area_double = round(area_double\
    \ * 100) / 100;\n    if (area_float == area_double) {\n        return area_float;\n\
    \    } else {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp1lbqljul: /tmp/tmp1lbqljul.cpp:34: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b > c) ? -1: 0;\n    return (float)s/2;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmphl4pc5o0: /tmp/tmphl4pc5o0.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a > b && a > c && b > c) {\n        return std::sqrt(a * b * c);\n\
    \    } else if (a == b && b == c) {\n        return 0.0;\n    } else if (a ==\
    \ b || a == c || b == c) {\n        return -1.0;\n    }\n}\nint main() {\n   \
    \ auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp0xp7ikp4: /tmp/tmp0xp7ikp4.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a+b > c) {\n    return 0;\n  } else {\n    float a = (a+b)/2;\n   \
    \ float b = (b+c)/2;\n    float c = (b+c)/2;\n    return (((a*a)+(b*b))-(c*c))/2;\n\
    \  }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpaj4_ce5t: /tmp/tmpaj4_ce5t.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if(a<b&&b<c&&a<=c){\n        area=(a+b+c)/2.0;\n   \
    \ }\n    else {\n        area=-1;\n    }\n    return area;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmps1jzzlgl: /tmp/tmps1jzzlgl.cpp:24: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140099
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // code here\n    \n    // write your solution here\n    float area =\
    \ 0.0;\n    if (a > b+c) \n    {\n        float area_1 = (float)(a*(b+c))/2;\n\
    \        float area_2 = (float)(a*(b-c)+c)/2;\n        float area_3 = (float)(a*(b-c))/2;\n\
    \        area = area_1 + area_2 + area_3;\n    }\n    else \n    {\n        float\
    \ area_1 = (float)(a*(b-c))/2;\n        float area_2 = (float)(a*(b+c)+c)/2;\n\
    \        float area_3 = (float)(a*(b+c))/2;\n        area = area_1 + area_2 +\
    \ area_3;\n    }\n    return round(area*100.0)/100.0;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9813epp8: /tmp/tmp9813epp8.cpp:34: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140099
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c) / 2;\n    if (s > a+b+c) return -1; // not valid\n\
    \    else return 2.0f*sqrt(s*(s-a)*(s-b)*(s-c));\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpovil55cy: /tmp/tmpovil55cy.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a == b + c) return 0;\n    return a + b + c > c ? ((a + b) * (c -\
    \ b) * (c - a)) / 2 : -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpv1f6hn37: /tmp/tmpv1f6hn37.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140099
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a == 0 && b == 0 && c == 0) return 0;\n    float s = (a + b + c)\
    \ / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area\
    \ > 0 ? round(area, 2) : -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxmek4j4h.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpxmek4j4h.cpp:15:36: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   15 |     return area > 0 ?\
    \ round(area, 2) : -1;\n      |                                    ^\nIn file\
    \ included from /usr/include/features.h:461,\n                 from /usr/include/assert.h:35,\n\
    \                 from /tmp/tmpxmek4j4h.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1:\
    \ note: declared here\n  298 | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n\
    \      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140098
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    assert(a+b>c);\n    float area = a/(2*b*c);\n    if(area>1)\n       \
    \ area = (area+1)/2.0;\n    return round(area, 2);\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_s2sg2b.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpm_s2sg2b.cpp:16:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   16 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpm_s2sg2b.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (b < a || c < b) return -1;\n    float s = (a + b + c) / 2;\n    return\
    \ a * b * c / s;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2rl5ttb3: /tmp/tmp2rl5ttb3.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140099
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(b<=a || b<=c || c<=a)\n        return -1;\n    return (b + c) * 0.5;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1olxm7ky: /tmp/tmp1olxm7ky.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140099
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (c + b - a) *\
    \ (c + b - b) * (c + a - a);\n        area = (area / 2) / 3;\n    } else if (b\
    \ + c > a) {\n        area = (a + b + c - a) * (a + b + c - b) * (a + b - a);\n\
    \        area = (area / 2) / 3;\n    } else return -1; // no area found\n    return\
    \ round(area * 100.0) / 100.0; // round to 2 decimal points\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp716_pbjt: /tmp/tmp716_pbjt.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140100
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = (s*(s-a)*(s-b)*(s-c)) /\
    \ (2 * a * b * c);\n    if (area > 0)\n        return round(area, 2);\n    else\n\
    \        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpjuw9o7be.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpjuw9o7be.cpp:15:29: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   15 |         return round(area,\
    \ 2);\n      |                             ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpjuw9o7be.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140098
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a < b) {\n        if (a < c) {\n            return (a * b) / c;\n\
    \        } else {\n            return ((c * b) / a) - c;\n        }\n    }\n\n\
    \    if (b < c) {\n        return ((b * c) / a) - b;\n    } else {\n        return\
    \ ((c * a) / b) - c;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpikiky8y4: /tmp/tmpikiky8y4.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140100
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    //write your code here\n    assert(b > a);\n    assert(c > a);\n    float\
    \ s = 0.0;\n    if (b < c) {\n        float temp = c;\n        c = b;\n      \
    \  b = temp;\n    }\n    float area = a * b / (c + b);\n    if (area > 0.0) {\n\
    \        area = ceil(area / 2.0);\n        s = area / a;\n    }\n    return s;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpr0axsqg7: /tmp/tmpr0axsqg7.cpp:30: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat s = (a + b + c) / 2;\n\tif (s > a * a + b * b + c * c) {\n\t\treturn\
    \ -1;\n\t} else if (s == a * a + b * b + c * c) {\n\t\treturn 0;\n\t} else if\
    \ (s == a * b + c * c) {\n\t\treturn a * b * c;\n\t} else {\n\t\tfloat u = a/(a+b);\n\
    \t\tfloat v = b/(b+c);\n\t\tfloat w = c/(a+b);\n\t\treturn (a * b * c) + (u *\
    \ v * w);\n\t}\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplq0sgdac: /tmp/tmplq0sgdac.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    long l1 = a+b;\n    long l2 = a+c;\n    long l3 = c+b;\n    long l4 =\
    \ a+b+c;\n    long l5 = l4+l3;\n    float area;\n    if (l1 < l2 && l2 < l3 &&\
    \ l3 < l4 && l4 < l5) {\n        area = (float) l4;\n    } else if (l1 < l2 &&\
    \ l2 < l3 && l3 < l5) {\n        area = (float) (l1*l3*0.5f);\n    } else if (l1\
    \ < l2 && l2 < l3 && l3 < l4) {\n        area = (float) (l2*l4*0.5f);\n    } else\
    \ if (l1 < l2 && l2 < l3 && l3 < l5) {\n        area = (float) (l1*l4*0.5f);\n\
    \    } else if (l1 < l2 && l2 < l3 && l3 < l4) {\n        area = (float) (l1*l3*0.5f);\n\
    \    } else {\n        area = -1;\n    }\n    return area;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpmnxr86f2: /tmp/tmpmnxr86f2.cpp:35: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a != 0 && b != 0 && c != 0);\n  if (a + b > c) {\n    return -1;\n\
    \  } else if (a + c > b) {\n    return -1;\n  } else if (b + c > a) {\n    return\
    \ -1;\n  }\n  float s = (a + b + c) / 2.0;\n  float area1 = sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n  float area2 = sqrt(s * (s - a) * (s - c) * (s - b));\n\
    \  return area1 > area2 ? area1 : area2;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpb1d59ce5: /tmp/tmpb1d59ce5.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif (a + b > c && a + c > b&& b + c > a)\n\t\treturn (a * b) / c;\n\telse\n\
    \t\treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpefms6s0y: /tmp/tmpefms6s0y.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140102
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if((a + b > c) || (b + c > a) || (c + a > b)) return -1;\n    return\
    \ (a + b + c) / 2;\n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8boeg777: /tmp/tmp8boeg777.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    float area_of_triangle = 0;\n    if (a>b+c\
    \ || b > a+c || a>c+b){\n        return -1;\n    }\n    area_of_triangle += (a+b+c)/2;\n\
    \    return area_of_triangle;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp70gppmik: /tmp/tmp70gppmik.cpp:23: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // write your code in C++14\n  if (a==0 || b==0 || c==0 || a+b+c>a || a+b+c>b\
    \ || a+b+c>c) return -1;\n  return (a+b+c)/2;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpctjuasew: /tmp/tmpctjuasew.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b > c) ? a/2 + b/2 : (c + b > a) ? c/2 + b/2 : (a + c\
    \ > b) ? a/2 + c/2 : (a + b + c > a) ? a/2 : (a + b + c > b) ? b/2 : (a + b +\
    \ c > c) ? c/2 : 0;\n    return s;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2cpn9nko: /tmp/tmp2cpn9nko.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140102
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a > b && a > c) {\n        return (a * b + c) / 2;\n    }\n    if\
    \ (b > a && b > c) {\n        return (b * a  + c) / 2;\n    }\n    if (c > a &&\
    \ c > b) {\n        return (  c * a  + b) / 2;\n    }\n    return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpajx_xmn3: /tmp/tmpajx_xmn3.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140102
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Your code here\n    if(a>b+c||b+c>a+b||c>a+b) {\n        return -1;\n\
    \    }\n    float ans=0;\n    ans+=(a+b+c)/2;\n    if(a+b>c) {\n        ans+=(b+c)/2;\n\
    \    }\n    if(a+c>b) {\n        ans+=(c+b)/2;\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpdjrqq7fh: /tmp/tmpdjrqq7fh.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float sum = (a+b+c) / 2;\n    return (sum*sum > c ? sum * 0.5 : -1);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpyeoyh4g5: /tmp/tmpyeoyh4g5.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140102
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if ( (a + b > c) || (b > c) || (c > a) ) {\n        return -1;\n    }\n\
    \    float s = (a + b + c)/2.0f;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmppqhqc69j: /tmp/tmppqhqc69j.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140102
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    float a = abs(a); \n    float b = abs(b);\n\
    \    float c = abs(c);\n    float s = (a + b > c);\n    float c1 = (b + c > a);\n\
    \    float c2 = (c + a > b);\n    float s = (c1 + c2) > 0;\n    float e = (a +\
    \ c + b > a + b + c);\n    return s ? a/2 : -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8k3k3tzk.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp8k3k3tzk.cpp:13:11: error: declaration of \u2018\
    float a\u2019 shadows a parameter\n   13 |     float a = abs(a);\n      |    \
    \       ^\n/tmp/tmp8k3k3tzk.cpp:14:11: error: declaration of \u2018float b\u2019\
    \ shadows a parameter\n   14 |     float b = abs(b);\n      |           ^\n/tmp/tmp8k3k3tzk.cpp:15:11:\
    \ error: declaration of \u2018float c\u2019 shadows a parameter\n   15 |     float\
    \ c = abs(c);\n      |           ^\n/tmp/tmp8k3k3tzk.cpp:19:11: error: redeclaration\
    \ of \u2018float s\u2019\n   19 |     float s = (c1 + c2) > 0;\n      |      \
    \     ^\n/tmp/tmp8k3k3tzk.cpp:16:11: note: \u2018float s\u2019 previously declared\
    \ here\n   16 |     float s = (a + b > c);\n      |           ^\n"
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = (a + b + c) * 0.5;\n    float area_rounded = floor(area\
    \ * 1000.0) / 1000.0;\n    return area_rounded;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmplflv1k68: /tmp/tmplflv1k68.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140102
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    if (a + b < c || c + b < a) {\n        return\
    \ -1;\n    }\n\n    float area = (a * b + c) / 2;\n\n    return area;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpcbce_iy5: /tmp/tmpcbce_iy5.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n   assert(a < b+1 && b < c+1);\n   assert(b > a+1 && c > b+1);\n   float\
    \ l1 = (a+b+c)/2;\n   float l2 = (a+b+c-l1)/2;\n   float l3 = (b+c-a-l2)/2;\n\
    \   return l1 * l2 * l3;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpbdxq9s1p: /tmp/tmpbdxq9s1p.cpp:13: float triangle_area(long int, long
    int, long int): Assertion `b > a+1 && c > b+1'' failed.

    '
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a>b+c){\n    return -1;\n  }\n  if(b>a+c){\n    return -1;\n  }\n  if(c>a+b){\n\
    \    return -1;\n  }\n  if(a+b>c+c){\n    return -1;\n  }\n  if(b+c>a+b){\n  \
    \  return -1;\n  }\n  if(c+a>b+b){\n    return -1;\n  }\n  float s = (b+c-a)/2;\n\
    \  return s;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_d0rnxdh: /tmp/tmp_d0rnxdh.cpp:35: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140102
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Write your code here\n  assert(a>=0 && b>=0 && c>=0);\n  return (b +\
    \ c) * 0.5f;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8xb3umw7: /tmp/tmp8xb3umw7.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Write your code here\n  if((a + b + c) < 4)\n  {\n    return -1;\n \
    \ }\n  else if((a + b + c >= 4) && (b + c + a >= 4) && (a + c + b >= 4))\n  {\n\
    \    return (a * b * c);\n  }\n  else\n  {\n    return -1;\n  }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpa_94c5b0: /tmp/tmpa_94c5b0.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140103
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b < c || b + c < a || c + a < b) return -1;\n    return (float)(a\
    \ + b + c) / 2;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpf0osf2io: /tmp/tmpf0osf2io.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if((a + b > c) && (b + c > a) && (c + a > b)) return a * b * c / (a *\
    \ b + b * c + c * a + a);\n    else return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmphecfzpf2: /tmp/tmphecfzpf2.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140102
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a < b);\n  assert(b < c);\n  assert(c > a || c > b);\n  return 0.5\
    \ * (a + b + c - a * b - a + b - c);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp5d6fvdt7: /tmp/tmp5d6fvdt7.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140103
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a != 0 && b != 0 && c != 0);\n  long s = a + b + c;\n  if (s <=\
    \ 0)\n    return -1;\n  long t = a < b + c ? a : b < c + a ? b : c;\n  return\
    \ std::round(s / t);\n}\nint main() {\n    auto candidate = triangle_area;\n \
    \   assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpx8g3hpi0: /tmp/tmpx8g3hpi0.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140103
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat area = 0;\n\tfloat area_sum = 0;\n\tif(a<=0 && b<=0 && c<=0) return\
    \ area;\n\telse if(a>b && b>c && c>a){\n\t\tarea_sum = (float)(a+b+c)/2;\n\t\t\
    area = area_sum * area_sum;\n\t}\n\treturn area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmppt739vn_: /tmp/tmppt739vn_.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140102
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (b > a && c > a) {\n        if ((b + c) <= a) {\n            return\
    \ a * b;\n        }\n        else {\n            return (float)(a * b / c);\n\
    \        }\n    }\n    else if (b > c && c > b) {\n        if ((b + c) <= b) {\n\
    \            return a * b;\n        }\n        else {\n            return (float)(a\
    \ * b / c);\n        }\n    }\n    else if (b > a && c > b) {\n        if ((b\
    \ + c) <= c) {\n            return a * b;\n        }\n        else {\n       \
    \     return (float)(a * b / c);\n        }\n    }\n    else {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpxa1kodf6: /tmp/tmpxa1kodf6.cpp:42: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a < 0 || b < 0 || c < 0)\n        return -1;\n    if (a + b > c &&\
    \ a + c > b && b + c > a)\n        return a + b + c;\n    else if (a + c > b &&\
    \ b + c > a)\n        return a + b + c;\n    else\n        return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpyq666y31: /tmp/tmpyq666y31.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140103
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a == 0 || b == 0 || c == 0 || a > b + c || b > a + c || c > a + b)\n\
    \        return -1;\n    return a * b * c / (a + b + c);\n}\nint main() {\n  \
    \  auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpm5n_6zx8: /tmp/tmpm5n_6zx8.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140102
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n   \n    // Declaring a variable 's' to store the resultant area of the triangle\n\
    \    float s = 0.0;\n    \n    // Declaring a variable 'sides' to store sum of\
    \ any two sides\n    long sides;\n    \n    // Initializing the variables 'sides'\
    \ and 's' \n    sides = a + b + c;\n    s = sides/2;\n    \n    // Returning the\
    \ result to the user\n    return s;\n    \n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpco8uj7pj: /tmp/tmpco8uj7pj.cpp:30: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140103
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert (a>0) && b > 0 && c > 0;\n  // Write your code here\n  float s=0,\
    \ t=a, u=b+c, v=c+b;\n  while(t>u){\n    s+=t%u;\n    t/=u;\n  }\n  while(u>v){\n\
    \    s+=u%v;\n    u/=v;\n  }\n  while(v>t){\n    s+=v%t;\n    v/=t;\n  }\n  return\
    \ s*s;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmpg0_tlxhf.cpp:2:\n/tmp/tmpg0_tlxhf.cpp: In function \u2018float\
    \ triangle_area(long int, long int, long int)\u2019:\n/tmp/tmpg0_tlxhf.cpp:12:3:\
    \ error: could not convert \u2018((a > 0) ? (void)0 : __assert_fail(((const char*)\"\
    a>0\"), ((const char*)\"/tmp/tmpg0_tlxhf.cpp\"), 12, ((const char*)(& __PRETTY_FUNCTION__))))\u2019\
    \ from \u2018void\u2019 to \u2018bool\u2019\n   12 |   assert (a>0) && b > 0 &&\
    \ c > 0;\n      |   ^~~~~~\n/tmp/tmpg0_tlxhf.cpp:16:9: error: invalid operands\
    \ of types \u2018float\u2019 and \u2018float\u2019 to binary \u2018operator%\u2019\
    \n   16 |     s+=t%u;\n      |        ~^~\n      |        | |\n      |       \
    \ | float\n      |        float\n/tmp/tmpg0_tlxhf.cpp:20:9: error: invalid operands\
    \ of types \u2018float\u2019 and \u2018float\u2019 to binary \u2018operator%\u2019\
    \n   20 |     s+=u%v;\n      |        ~^~\n      |        | |\n      |       \
    \ | float\n      |        float\n/tmp/tmpg0_tlxhf.cpp:24:9: error: invalid operands\
    \ of types \u2018float\u2019 and \u2018float\u2019 to binary \u2018operator%\u2019\
    \n   24 |     s+=v%t;\n      |        ~^~\n      |        | |\n      |       \
    \ | float\n      |        float\n"
  stdout: ''
  timestamp: 1660140101
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float a, b, c;\n    float area_sum;\n    a = a + b;\n    b = a + c;\n\
    \    c = a + b;\n    area_sum = (float)((a*a + b*b + c*c) / (2*a));\n    area_sum\
    \ = round(area_sum * 100) / 100;\n    if (area_sum >= c)\n    {\n        return\
    \ area_sum;\n    }\n    else\n    {\n        return -1;\n    }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm4kdv1da.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpm4kdv1da.cpp:12:11: error: declaration of \u2018\
    float a\u2019 shadows a parameter\n   12 |     float a, b, c;\n      |       \
    \    ^\n/tmp/tmpm4kdv1da.cpp:12:14: error: declaration of \u2018float b\u2019\
    \ shadows a parameter\n   12 |     float a, b, c;\n      |              ^\n/tmp/tmpm4kdv1da.cpp:12:17:\
    \ error: declaration of \u2018float c\u2019 shadows a parameter\n   12 |     float\
    \ a, b, c;\n      |                 ^\n"
  stdout: ''
  timestamp: 1660140101
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert (a > 0 && b > 0 && c > 0);\n  assert (a + b > c);\n  assert (b +\
    \ c > a);\n  assert (a + c > b);\n  float s = (a + b + c) / 2;\n  float area =\
    \ (sqrt(s * (s - a) * (s - b) * (s - c)) <= 1) ? s : -1;\n  printf(\"Area of triangle\
    \ with sides: %ld, %ld and %ld is %.2lf\\n\", a, b, c, area);\n  return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpo5lor4n9: /tmp/tmpo5lor4n9.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140103
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n float s = (a + b + c) / 2.0;\n float area = sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n assert(area >= 0.0);\n printf(\"%.2lf\\n\", area);\n return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmphpy2pd51: /tmp/tmphpy2pd51.cpp:14: float triangle_area(long int, long
    int, long int): Assertion `area >= 0.0'' failed.

    '
  stdout: ''
  timestamp: 1660140103
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  long sideA = abs(a) + abs(b) + abs(c);\n  if (sideA < 3) {\n    return\
    \ -1;\n  }\n  // if (sideA > 6) {\n  //   return -1;\n  // }\n  long sideB = abs(a)\
    \ + abs(b) + abs(c);\n  long sideC = abs(a) + abs(b) + abs(c);\n  float area =\
    \ (sideA + sideB + sideC) / 2;\n  return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp4su1szkq: /tmp/tmp4su1szkq.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140103
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area_base = (a + b + c) / 2.0;\n    if((b > c) && (a >= b)) {\n\
    \        float area_side1 = area_base - a;\n        float area_side2 = b - c;\n\
    \        float area_side3 = area_side2 - area_side1;\n        float area = area_side1\
    \ * area_side2 * area_side3;\n        return std::round(area * 100.) / 100.;\n\
    \    }\n    if((b < c) && (a >= b)) {\n        float area_side1 = area_base -\
    \ a;\n        float area_side2 = c - b;\n        float area_side3 = area_side2\
    \ - area_side1;\n        float area = area_side1 * area_side2 * area_side3;\n\
    \        return std::round(area * 100.) / 100.;\n    }\n    if((b > c) && (a <\
    \ b)) {\n        float area_side1 = area_base - a;\n        float area_side2 =\
    \ b - c;\n        float area_side3 = c - area_side1;\n        float area = area_side1\
    \ * area_side2 * area_side3;\n        return std::round(area * 100.) / 100.;\n\
    \    }\n    if((b < c) && (a < b)) {\n        float area_side1 = area_base - a;\n\
    \        float area_side2 = c - b;\n        float area_side3 = b - area_side1;\n\
    \        float area = area_side1 * area_side2 * area_side3;\n        return std::round(area\
    \ * 100.) / 100.;\n    }\n    return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpex3zrw89: /tmp/tmpex3zrw89.cpp:45: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140104
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a == 0 && b == 0 && c == 0)\n        return 0.0;\n    else if ((a\
    \ + b > c) && (a + c > b) && (b + c > a)) {\n        return a * b * c / (a + b\
    \ + c);\n    }\n    else if ((b + a > c) && (b + c > a) && (a + c > b)) {\n  \
    \      return a * b * c / (b + a + c);\n    }\n    else if ((c + a > b) && (c\
    \ + b > a) && (a + b > c)) {\n        return a * b * c / (c + a + b);\n    }\n\
    \    else if ((a + b > c) && (b + c > a) && (c + b > a)) {\n        return a *\
    \ b * c / (a + b + c);\n    }\n    else if ((a + c > b) && (b + a > c) && (c +\
    \ a > b)) {\n        return a * b * c / (a + c + b);\n    }\n    else if ((b +\
    \ c > a) && (a + c > b) && (c + a > b)) {\n        return a * b * c / (b + c +\
    \ a);\n    }\n    else if ((c + b > a) && (a + b > c) && (b + a > c)) {\n    \
    \    return a * b * c / (c + b + a);\n    }\n    return -1;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpranepre5: /tmp/tmpranepre5.cpp:39: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140102
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a==b && b == c)\n        return 0;\n    float s = (a + b + c) / 2.0f;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpl58wkqw7: /tmp/tmpl58wkqw7.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140102
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    return ((float)(a * (b + c))) / 2.0;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpd7k_411_: /tmp/tmpd7k_411_.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140102
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = 0.0f;\n    if (a >= b) {\n        if (b >= c) {\n         \
    \   s = (a + b + c) / 2.0f;\n            if (s >= 0)\n                s *= 0.5f;\n\
    \            else\n                s = s;\n            long a = s;\n         \
    \   long b = s - a;\n            long c = b - a;\n            assert(a + b + c\
    \ > 0);\n            return s;\n        }\n        else\n            return -1;\n\
    \    }\n    else if (b >= c) {\n        return -1;\n    }\n    else\n        return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpk0lfzd7q: /tmp/tmpk0lfzd7q.cpp:37: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140103
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat area = 3.14 * pow(a, 2) +  3.14 * pow(b, 2) +  3.14 * pow(c, 2);\n\
    \treturn round (area, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpppyfr4l1.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpppyfr4l1.cpp:13:23: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   13 |  return round (area, 2);\n\
    \      |                       ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpppyfr4l1.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140102
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(b==0 || c==0)\n        return 0;\n    float s = (b*b) - (a*c);\n \
    \   if (s == 0) \n        return 0;\n    return ((b*b) - (a*c)) / 2;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_zpppoa1: /tmp/tmp_zpppoa1.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140104
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    float result=0.0;\n    long ans;\n    if(a+b>c)\n\
    \    {\n        ans=(b*c-a*b);\n        result=ans/(float)a;\n    }\n    else\
    \ if(a+b<c)\n    {\n        ans=(c*a-b*c);\n        result=ans/(float)b;\n   \
    \ }\n    else\n    {\n        ans=(c*b-a*c);\n        result=ans/(float)c;\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp66feg5d1: /tmp/tmp66feg5d1.cpp:34: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140104
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if(a>b+c){\n    swap(a, b);\n  }\n  if(a>c+b){\n    swap(a, b);\n    swap(a,\
    \ c);\n  }\n  if(b>c+a){\n    swap(b, c);\n  }\n  return (float)(a+b+c)/2;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6kjdwyle.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp6kjdwyle.cpp:13:5: error: \u2018swap\u2019 was\
    \ not declared in this scope\n   13 |     swap(a, b);\n      |     ^~~~\n/tmp/tmp6kjdwyle.cpp:13:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp6kjdwyle.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6kjdwyle.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp6kjdwyle.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmp6kjdwyle.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap(path&\
    \ __lhs, path& __rhs"
  stdout: ''
  timestamp: 1660140103
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    assert(a >= 0 && b >= 0 && c >= 0);\n    if (a + b >= c) {\n        return\
    \ 0;\n    }\n    if (a + c >= b) {\n        return 0;\n    }\n    if (b + c >=\
    \ a) {\n        return 0;\n    }\n    float s = (a * b) + (c * c);\n    float\
    \ area = (a * (b - c)) / (s * 2);\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt7kxu20: /tmp/tmpvt7kxu20.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140104
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0;\n    float area_per = 0;\n    if (a + b > c) {\n    \
    \    area = ((a + b) * (a + c)) / 2;\n    }\n    else {\n        area = ((b +\
    \ c) * (a - b)) / 2;\n    }\n    if (a + c > b) {\n        area_per = ((a + c)\
    \ * (b + c)) / 2;\n    }\n    else {\n        area_per = ((b + c) * (a - b)) /\
    \ 2;\n    }\n    if (area != 0 || area_per != 0) {\n        area = fabs(area -\
    \ area_per);\n        area = round(area * 100) / 100;\n    }\n    else {\n   \
    \     area = -1;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpcknqr6x6: /tmp/tmpcknqr6x6.cpp:37: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140104
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    assert(a > 0);\n    assert(b > 0);\n    assert(c > 0);\n\n    float area_of_triangle;\n\
    \    if (a + b > c) {\n        area_of_triangle = 0.5 * sqrt(pow(a, 2) * (pow(b,\
    \ 2) - pow(c,2)));\n    } else {\n        area_of_triangle = 0.5 * sqrt(pow(a,\
    \ 2) * (pow(b, 2) + (c - a) * (c - b)));\n    }\n    return round(area_of_triangle,\
    \ 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd4rio1ka.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpd4rio1ka.cpp:22:37: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   22 |     return round(area_of_triangle,\
    \ 2);\n      |                                     ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpd4rio1ka.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140103
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    assert(a + b > c);\n    assert(a + c > b);\n    assert(b + c > a);\n\
    \    float s = (b - c) * ((a + b) * (a + c)) / ((a + b + c) * (a + b + b + c));\n\
    \    if (s > 0)\n        s *= 0.5;\n    cout << \"Area of triangle is \" << s;\n\
    \    return s;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr4jse7m3.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpr4jse7m3.cpp:18:5: error: \u2018cout\u2019 was\
    \ not declared in this scope; did you mean \u2018std::cout\u2019?\n   18 |   \
    \  cout << \"Area of triangle is \" << s;\n      |     ^~~~\n      |     std::cout\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from /tmp/tmpr4jse7m3.cpp:2:\n/usr/include/c++/9/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n"
  stdout: ''
  timestamp: 1660140104
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a + b > c && b + c > a && c + a > b) {\n        return round(pow((a\
    \ + b + c) / 2, 0.5f));\n    }\n    return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9q91fz02: /tmp/tmp9q91fz02.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140105
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    if(a<b && b<c){\n        if(a+b>c){\n  \
    \          if(a+c>b){\n                return 0.5*(a+b+c);\n            }\n  \
    \          else{\n                return 0.5*(a+c+b);\n            }\n       \
    \ }\n        else{\n            return 0.5*(b+c+a);\n        }\n    }\n    else{\n\
    \        if(a+c>b){\n            return 0.5*(b+c+a);\n        }\n        else{\n\
    \            return 0.5*(a+c+b);\n        }\n    }\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpuhcawjja: /tmp/tmpuhcawjja.cpp:38: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140105
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  float s = (a+b+c) / 2;\n  assert(s > 0);\n  float area = 0;\n  if (b !=\
    \ 0)\n    area += sqrt( s * (s-a) * (s-b) * (s-c) );\n  if (c != 0)\n    area\
    \ += sqrt( s * (s-a) * (s-b) * (s-c) );\n  if (a != 0)\n    area += sqrt( s *\
    \ (s-a) * (s-b) * (s-c) );\n  return round(area, 2);\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd448twcu.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpd448twcu.cpp:21:23: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   21 |   return round(area, 2);\n\
    \      |                       ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpd448twcu.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140104
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // TODO: Your code here\n    int sum = (a + b + c);\n    assert(sum >=\
    \ 0);\n    return (float)(sum*sum)/(2*(a + b + c));\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpfo4alr_y: /tmp/tmpfo4alr_y.cpp:20: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140105
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = (a + b + c) / 2;\n    assert(a == b + c);\n    if (area\
    \ > c) {\n        area--;\n    }\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpzr_9mgwq: /tmp/tmpzr_9mgwq.cpp:13: float triangle_area(long int, long
    int, long int): Assertion `a == b + c'' failed.

    '
  stdout: ''
  timestamp: 1660140105
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tassert(a >= 0 && b >= 0 && c >= 0);\n\tfloat area = a * b * c / 2;\n\t\
    if(a*a+b*b+c*c==0)\n\t\treturn -1; // invalid triangle\n\tif(a>b)\n\t{\n\t\tif(a>c)\n\
    \t\t\tarea = (a+b+c)/2;\n\t\telse if(a>b)\n\t\t\tarea = (a+c)*b/2;\n\t\telse\n\
    \t\t\tarea = (a+b)*c/2;\n\t}\n\telse\n\t{\n\t\tif(b>c)\n\t\t\tarea = (b+c)*a/2;\n\
    \t\telse if(b>a)\n\t\t\tarea = (b+a)*c/2;\n\t\telse\n\t\t\tarea = (b+a)*a/2;\n\
    \t}\n\treturn roundf(area*100)/100.0;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp4ghrr9pw: /tmp/tmp4ghrr9pw.cpp:38: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140106
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a >= 0 && b >= 0 && c >= 0 && a + b + c > 0);\n  if (a + b > c)\
    \ {\n    return (a * b) / c;\n  }\n  if (a + c > b) {\n    return (a * b) / c;\n\
    \  }\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp4azpikrk: /tmp/tmp4azpikrk.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140105
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a <= b+c && b <= a+c && c <= a+b) {\n    return (a+b+c)/2.0;\n  } else\
    \ {\n    return -1;\n  }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpvgcibpz_: /tmp/tmpvgcibpz_.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140106
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tassert(b > a && c > a);\n\tfloat area = 0;\n\tif (c > a + b) {\n\t\tarea\
    \ = (a * (b - c)) / 2;\n\t} else if (b > a) {\n\t\tarea = (b * (c - a)) / 2;\n\
    \t} else {\n\t\tarea = (a * (c - b)) / 2;\n\t}\n\tprintf(\"%2.2f\\n\", area);\n\
    \treturn area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1sl5pevf: /tmp/tmp1sl5pevf.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140106
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float A = (a * a + b * b + c * c) / 2;\n    float B = (2.0f * (b * b\
    \ - a * c)) / 2;\n    float C = (2.0f * (a * c - b * b)) / 2;\n    \n    if (A\
    \ > B && A > C) return A;\n    if (B > C && B > A) return B;\n    if (C > A &&\
    \ C > B) return C;\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp3w6tnykq: /tmp/tmp3w6tnykq.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140106
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tassert (a + b > c);\n\tassert (a + c > b);\n\tassert (b + c > a);\n\treturn\
    \ (a + b + c) / 2.0;\n}\nint main() {\n    auto candidate = triangle_area;\n \
    \   assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpy5vlab7u: /tmp/tmpy5vlab7u.cpp:12: float triangle_area(long int, long
    int, long int): Assertion `a + b > c'' failed.

    '
  stdout: ''
  timestamp: 1660140106
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c)/2.0f;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return round(area * 100.0) / 100.0;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpnuczkpm2: /tmp/tmpnuczkpm2.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140106
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if((a + b + c) >= ((a + b) + c)){\n        area = (a\
    \ * b) / c;\n    }else{\n        area = (-1*(a * b)) / (2 * (a + b));\n    }\n\
    \    return round(area, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpd960i1pa.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpd960i1pa.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpd960i1pa.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140104
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    long sum = a+b+c;\n    if (sum < 0)\n    {\n        return -1;\n    }\n\
    \    float area_float = float(a+b+c) / 2.0;\n    return std::round(area_float\
    \ * 100.0)/100.0;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpptzhzc11: /tmp/tmpptzhzc11.cpp:23: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140106
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    return a * b * c > c ? 0.2f*(a*b*c)/(c*a*b) : -1;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpllw3tgyf: /tmp/tmpllw3tgyf.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a<=0 || b<=0 || c<=0) return -1;\n    long s = a+b+c;\n    if(s<=3)\
    \ return 0;\n    else if(a+b<c) return -1;\n    else return s/2;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpjoi4wcr3: /tmp/tmpjoi4wcr3.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140105
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // write your code here\n    float area;\n    if (b > c && a>c )\n  \
    \      area= (float)(a*(b-c)/2 + b*c/2);\n    else\n        area= -1 ;\n    return\
    \ round(area,2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr538uti2.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpr538uti2.cpp:18:24: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,2);\n\
    \      |                        ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpr538uti2.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140105
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert((a + b > c) || (a + c > b) || (b + c > a));\n  float area = 0.0f;\n\
    \  if((a + b > c) && (a + c > b) && (b + c > a)) {\n    float s = (a + b + c)\
    \ / 2.0f;\n    float area = s * s;\n    \n    if((a + b > c) && (a + c > b)) {\n\
    \      float area = s + (s - b) * (s - c) / 2;\n    }\n    else if(b + c > a)\
    \ {\n      float area = s + (b - s) * (c - a) / 2;\n    }\n  }\n  return roundf(area);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp691veex2: /tmp/tmp691veex2.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140106
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float a = abs(a), b = abs(b), c = abs(c), s = (a + b + c), area = 0.0;\n\
    \n    if (s >= (a + b)) \n        if (s >= (a + c))\n            area = s * 0.5;\n\
    \        else\n            area = s * 0.0;\n\n    return roundf(area*100) / 100;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7bgzt43f.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp7bgzt43f.cpp:12:11: error: declaration of \u2018\
    float a\u2019 shadows a parameter\n   12 |     float a = abs(a), b = abs(b), c\
    \ = abs(c), s = (a + b + c), area = 0.0;\n      |           ^\n/tmp/tmp7bgzt43f.cpp:12:23:\
    \ error: declaration of \u2018float b\u2019 shadows a parameter\n   12 |     float\
    \ a = abs(a), b = abs(b), c = abs(c), s = (a + b + c), area = 0.0;\n      |  \
    \                     ^\n/tmp/tmp7bgzt43f.cpp:12:35: error: declaration of \u2018\
    float c\u2019 shadows a parameter\n   12 |     float a = abs(a), b = abs(b), c\
    \ = abs(c), s = (a + b + c), area = 0.0;\n      |                            \
    \       ^\n"
  stdout: ''
  timestamp: 1660140104
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = (a + b + c) / 2.0f;\n    float side1 = sqrt(pow(a - b, 2.0f)\
    \ + pow(b, 2.0f));\n    float side2 = sqrt(pow(a - c, 2.0f) + pow(c, 2.0f));\n\
    \    float side3 = sqrt(pow(a - b, 2.0f) + pow(b, 2.0f) + pow(c, 2.0f));\n   \
    \ \n    if(a >= b + c) {\n        return (side1 + side2 + side3) / 2.0f;\n   \
    \ } else {\n        return -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpfta2bw28: /tmp/tmpfta2bw28.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Write your code here\n  assert (a >= b); // make sure the a is bigger\
    \ than or equal to the b\n  assert (a >= c); // make sure the a is bigger than\
    \ or equal to the c\n  assert (b >= c); // make sure the b is bigger than or equal\
    \ to the c\n  return 0.5*(a+b+c);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgezsukim: /tmp/tmpgezsukim.cpp:13: float triangle_area(long int, long
    int, long int): Assertion `a >= b'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float result;\n    if (a+b>c && a+c>b && b+c>a) {\n        result = (float)(a+b+c)\
    \ / 2;\n    }\n    else if (a+b>c && a+c>b && b+c<a) {\n        result = (float)(a+c+b)\
    \ / 2;\n    }\n    else if (a+b<c && a+c>b && b+c<a) {\n        result = (float)(a+b+c)\
    \ / 2;\n    }\n    else if (a+b<c && a+c<b && b+c<a) {\n        result = (float)(a+c+b)\
    \ / 2;\n    }\n    else if (a+b<c && a+c>b && b+c>a) {\n        result = (float)(a+c+b)\
    \ / 2;\n    }\n    else if (a+b<c && a+c<b && b+c>a) {\n        result = (float)(a+c+b)\
    \ / 2;\n    }\n    else return -1;\n    return result;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpjf4t6g53: /tmp/tmpjf4t6g53.cpp:37: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float a = abs(a); float b = abs(b); float c = abs(c);\n    float area\
    \ = a * b * c;\n    float ans = (area > b + c) ? a - b : (b - c);\n    return\
    \ ans / 2;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk3codlc8.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpk3codlc8.cpp:12:11: error: declaration of \u2018\
    float a\u2019 shadows a parameter\n   12 |     float a = abs(a); float b = abs(b);\
    \ float c = abs(c);\n      |           ^\n/tmp/tmpk3codlc8.cpp:12:29: error: declaration\
    \ of \u2018float b\u2019 shadows a parameter\n   12 |     float a = abs(a); float\
    \ b = abs(b); float c = abs(c);\n      |                             ^\n/tmp/tmpk3codlc8.cpp:12:47:\
    \ error: declaration of \u2018float c\u2019 shadows a parameter\n   12 |     float\
    \ a = abs(a); float b = abs(b); float c = abs(c);\n      |                   \
    \                            ^\n"
  stdout: ''
  timestamp: 1660140104
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(a+b > c)\n        return -1;\n    float s = (a+b+c)/2;\n    return\
    \ sqrt(s*(s-a)*(s-b)*(s-c));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpx1b5zs8n: /tmp/tmpx1b5zs8n.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float triangleArea = 0.5f * sqrt(a*b + c*c);\n    return triangleArea;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp23nvuz_e: /tmp/tmp23nvuz_e.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if((b < a) || (c < a)) {\n    return -1;\n  }\n  if((b > c) || (c > b))\
    \ {\n    return -1;\n  }\n  if(a * b > c * b) {\n    return -1;\n  }\n  return\
    \ (float) (a * b * 0.5f);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpybewu_4f: /tmp/tmpybewu_4f.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tif (a + b > c && a + c > b && b + c > a) return (a + b + c) / 2;\n\telse\
    \ return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpualy4d_l: /tmp/tmpualy4d_l.cpp:19: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2.0;\n    return s == (a * b + c) ? s : 0;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpl9tmp1yr: /tmp/tmpl9tmp1yr.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // write your code here\n  long sum = a + b + c;\n  assert(sum > c);\n\
    \  return (float)(a * b * c / sum);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpi4mkgdnq: /tmp/tmpi4mkgdnq.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140106
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s1 = (a + b + c)/2.0;\n    float s2 = (a + b) * (b + c) * (a +\
    \ c)/2.0;\n    float s3 = s1 - s2;\n\n    if ( s2 < 0.0f ) {\n        return -1.0f;\n\
    \    }\n    if ( s3 > 0.0f ) {\n        return sqrtf( s3 );\n    }\n    return\
    \ 0.0f;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpgqfc30su: /tmp/tmpgqfc30su.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n// Write your code here.\nfloat h1 = 0,h2 = 0,h3 = 0;\nfloat area = 0.0f;\n\
    if ((a + b + c) > 0) {\n    h1 = sqrt(a * ((double)(a+b)) / 2);\n    h2 = sqrt(b\
    \ * ((double)(b+c)) / 2);\n    h3 = sqrt(c * ((double)(c+a)) / 2);\n    area =\
    \ 0.5 * fabs((h1+h2+h3));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmppafii1yq.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmppafii1yq.cpp:21:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   21 | int main() {\n     \
    \ |            ^\n/tmp/tmppafii1yq.cpp:32:1: error: expected \u2018}\u2019 at\
    \ end of input\n   32 | }\n      | ^\n/tmp/tmppafii1yq.cpp:11:45: note: to match\
    \ this \u2018{\u2019\n   11 | float triangle_area(long a, long b, long c) {\n\
    \      |                                             ^\n/tmp/tmppafii1yq.cpp:32:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   32 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660140106
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a >= b + c) {\n        return -1;\n    }\n    if (b + c >= a + b)\
    \ {\n        return -1;\n    }\n    if (b > a + c) {\n        return -1;\n   \
    \ }\n    return (a + b + c) / 2;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpadrh27yd: /tmp/tmpadrh27yd.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140106
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Write your code here\n  float area = 0.0f;\n  assert(a >= b+c);\n  assert(b\
    \ <= a+c);\n  assert(a >= c-b);\n  assert(c <= a-b);\n  if(a+b>c && b+c>a && c+a>b\
    \ && c+b>a){\n    area = (a+b+c)/2;\n  }\n  return area;\n}\nint main() {\n  \
    \  auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp027mwxwq: /tmp/tmp027mwxwq.cpp:14: float triangle_area(long int, long
    int, long int): Assertion `a >= b+c'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if((b + c) > a){\n        return -1.00;\n    }\n    if((b - a) < c){\n\
    \        return -1.00;\n    }\n    if((c - b) < a){\n        return -1.00;\n \
    \   }\n    long x = ((b * b) - (4 * a * c));\n    long y = ((-a * c) - (4 * a\
    \ * b));\n    return static_cast<float>(sqrt(x * x + y * y));\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp79nhsr4z: /tmp/tmp79nhsr4z.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if (a == b) return c;\n  if (a == c) return b;\n  if (b == c) return a;\n\
    \  if (a > b && a > c) return a + b + c;\n  if (b > a && b > c) return b + a +\
    \ c;\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz5lb2_jt: /tmp/tmpz5lb2_jt.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Write your code here\n  float sum = (a + b + c);\n  if(sum>=a&&sum>=b&&sum>=c)\n\
    \    return (a+b+c)/2;\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpbtf8ro_w: /tmp/tmpbtf8ro_w.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    // Write your code here\n    float s=0.0f;\n    if(a+b>c)\n    {\n  \
    \      s=(a+b+c)/2;\n    }\n    else\n    {\n        s=(b+c-a)/2;\n    }\n   \
    \ float area = sqrt(pow(s,2)+pow((s/2),2));\n    cout<<area<<endl;\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdwaa4uw.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpgdwaa4uw.cpp:23:5: error: \u2018cout\u2019 was\
    \ not declared in this scope; did you mean \u2018std::cout\u2019?\n   23 |   \
    \  cout<<area<<endl;\n      |     ^~~~\n      |     std::cout\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n               \
    \  from /tmp/tmpgdwaa4uw.cpp:2:\n/usr/include/c++/9/iostream:61:18: note: \u2018\
    std::cout\u2019 declared here\n   61 |   extern ostream cout;  /// Linked to standard\
    \ output\n      |                  ^~~~\n/tmp/tmpgdwaa4uw.cpp:23:17: error: \u2018\
    endl\u2019 was not declared in this scope; did you mean \u2018std::endl\u2019\
    ?\n   23 |     cout<<area<<endl;\n      |                 ^~~~\n      |      \
    \           std::endl\nIn file included from /usr/include/c++/9/istream:39,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpgdwaa4uw.cpp:2:\n/usr/include/c++/9/ostream:599:5: note: \u2018std::endl\u2019\
    \ declared here\n  599 |     endl(basic_ostream<_CharT, _Traits>& __os)\n    \
    \  |     ^~~~\n"
  stdout: ''
  timestamp: 1660140106
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = a * b;\n    if (c >= b) {\n        area = area + c;\n  \
    \  }\n    if (a >= c) {\n        area = area + a;\n    }\n    return std::round(100\
    \ * area / b);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpi5cd4mai: /tmp/tmpi5cd4mai.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert (a + b > c);\n  assert (b + c > a);\n  assert (a + c > b);\n\n \
    \ return (a + b + c) / 2;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpy2o20w8v: /tmp/tmpy2o20w8v.cpp:12: float triangle_area(long int, long
    int, long int): Assertion `a + b > c'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (a==0 && b==0 && c==0)\n        return 0;\n    float s = (float)(a\
    \ + b + c)/2;\n    if (s > 0 && b > a)\n        s = b;\n    else if (s < 0 &&\
    \ c > b)\n        s = c;\n    return s*(s-a)*(s-b)*(s-c);\n}\nint main() {\n \
    \   auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp4e5vszrr: /tmp/tmp4e5vszrr.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (b < a && c < b)\n        return a + b + c;\n    if (b < c)\n    \
    \    return triangle_area(a, b, c);\n    if (a < c)\n        return triangle_area(a,\
    \ c, b);\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    assert(a >= 0 && b >= 0 && c >= 0);\n    if (a + b < c) {\n        return\
    \ -1; // not a valid triangle\n    }\n    float s = (a + b + c) / 2.0f;\n    if\
    \ (a == b || a == c || b == c) { // Equilateral\n        return s;\n    } else\
    \ if (a == s + b + c) {\n        if (a >= b) {\n            return s - b; // Right\
    \ triangle\n        } else {\n            return b - s; // Left triangle\n   \
    \     }\n    } else { // Straight\n        if (a >= b) {\n            return 2\
    \ * s - c;\n        } else if (a >= c) {\n            return 2 * (s - b);\n  \
    \      } else {\n            return 2 * (s - c);\n        }\n    }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd1leucob: /tmp/tmpd1leucob.cpp:37: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    if(a>=b+c)\n        return 0;\n    else if(a>=b\
    \ && b>c)\n        return s+(b-s)*(s-a)+((c-b)*(a-c));\n    else if(b>=a && b>c)\n\
    \        return s+(a-b)*(s-b)+((c-a)*(b-c));\n    else if(b>=a && a>c)\n     \
    \   return s+(a-b)*(s-a)+(b-s)*((c-a)*(b-c));\n    else if(a>=b && a>c)\n    \
    \    return s+(a-b)*(s-b)+(b-s)*((c-a)*(a-c));\n    else\n        return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpi0ft77_m: /tmp/tmpi0ft77_m.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0f;\n    if (a == 0){\n        return area;\n    }\n \
    \   if (b == 0){\n        return area;\n    }\n    if (c == 0){\n        return\
    \ area;\n    }\n    if (a >= b + c){\n        area = (b * b) - 4 * a * c;\n  \
    \      area = area / (2 * a);\n    }\n    else if (a >= b){\n        area = ((b\
    \ * b) - 4 * a) * c;\n        area = area / (2 * a);\n    }\n    else if (a >=\
    \ c + b){\n        area = ((b * b) - 4 * a) * b;\n        area = area / (2 * a);\n\
    \    }\n    else {\n        area = ((b * b) - 4 * a) * b;\n        area = area\
    \ / (2 * a);\n    }\n    return (area < 0.0f) ? -1 : roundf(area, 2);\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3masqohn.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp3masqohn.cpp:38:47: error: too many arguments\
    \ to function \u2018float roundf(float)\u2019\n   38 |     return (area < 0.0f)\
    \ ? -1 : roundf(area, 2);\n      |                                           \
    \    ^\nIn file included from /usr/include/c++/9/cmath:45,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n                 from\
    \ /tmp/tmp3masqohn.cpp:2:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1:\
    \ note: declared here\n  298 | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n\
    \      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if (b > a && b > c)\n        return ((float) (b * c)) / ((float) (a *\
    \ b));\n    else if (c > a && c > b)\n        return ((float) (2 * (a * b))) /\
    \ ((float) (a * c));\n    else if (b == c)\n        return 0.0;\n    else if (a\
    \ == 0)\n        return -1.0;\n    else {\n        printf(\"Invalid input values\
    \ !!\");\n        return -1.0;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpfel8alrw: /tmp/tmpfel8alrw.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert (a + b > c);\n  assert (a + c > b);\n  assert (b + c > a);\n  return\
    \ a * b * c / ((a * b) + (b * c) + (c * a));\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpncun8bhk: /tmp/tmpncun8bhk.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\t// your code goes here\n\tfloat area, sum;\n\tif (a < b + c) \n\t{\n\t\t\
    sum = a + b + c;\n\t\tif (sum >= a + c) \n\t\t{\n\t\t\tarea = sum - a + c;\n\t\
    \t} \n\t\telse \n\t\t{\n\t\t\tarea = (a * c) - (b * b);\n\t\t}\n\t} \n\telse \n\
    \t{\n\t\tsum = a + b + c;\n\t\tif (sum >= b + c) \n\t\t{\n\t\t\tarea = sum - b\
    \ + c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tarea = (a * c) - (a * b);\n\t\t}\n\t}\n\
    \t\n\treturn (area <= 0.00) ? -1 : round(area, 2);\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1vewzaos.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp1vewzaos.cpp:39:44: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   39 |  return (area <= 0.00)\
    \ ? -1 : round(area, 2);\n      |                                            ^\n\
    In file included from /usr/include/features.h:461,\n                 from /usr/include/assert.h:35,\n\
    \                 from /tmp/tmp1vewzaos.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1:\
    \ note: declared here\n  298 | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n\
    \      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  if((a+b+c) <= ((b+a)+c))\n    return (b+a)/2.0;\n  return -1.0;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp84qfzrde: /tmp/tmp84qfzrde.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  // Write your code here\n  assert(a>=0 && b>=0 && c>=0);\n  float area\
    \ = a*b*c;\n  long ans = 0;\n  if (a+b>c) {\n    ans = sqrt(area);\n    ans =\
    \ round(ans);\n    if (ans == 0.0) {\n      ans = -1;\n    }\n  }\n  return ans;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2etjixfn: /tmp/tmp2etjixfn.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat area = -1;\n\tlong x, y, z;\n\tif (a + b > c) {\n\t\tx = a;\n\t\t\
    y = b;\n\t\tz = c;\n\t} else if (a + c > b) {\n\t\tx = a;\n\t\ty = c;\n\t\tz =\
    \ b;\n\t} else if (b + c > a) {\n\t\tx = b;\n\t\ty = c;\n\t\tz = a;\n\t} else\
    \ {\n\t\treturn 0;\n\t}\n\twhile (x != z) {\n\t\tlong y = x / z;\n\t\tif (y <\
    \ y) {\n\t\t\tif (y + y > z) {\n\t\t\t\tarea = z * y / 2.0f;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t\tif (y + z > z) {\n\t\t\t\tarea = z * y / 2.0f;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t\tif (y + z > z) {\n\t\t\t\tarea = z * y / 2.0f;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t\tarea = z * y / 2.0f;\n\t\t\tbreak;\n\t\t}\n\t\tif (y + x > z) {\n\
    \t\t\tarea = z * y / 2.0f;\n\t\t\tbreak;\n\t\t}\n\t\tif (y + x > z) {\n\t\t\t\
    area = z * y / 2.0f;\n\t\t\tbreak;\n\t\t}\n\t\tif (y + z > z) {\n\t\t\tarea =\
    \ z * y / 2.0f;\n\t\t\tbreak;\n\t\t}\n\t\tarea = z * y / 2.0f;\n\t\tbreak;\n\t\
    }\n\treturn area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp4pwkr13y: /tmp/tmp4pwkr13y.cpp:66: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140107
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    long long s = (a + b + c); \n    return (s + a * b + b * c) / 2.0; \n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmprgfsvoy1: /tmp/tmprgfsvoy1.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if ((a + b > c) || (a + c > b) || (b + c > a)) {\n        return -1;\n\
    \    }\n    float s = a + b + c;\n    float area = s * s * (s - a) * (s - b) *\
    \ (s - c);\n    return static_cast<float>(area) / 2.0;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmphslablu5: /tmp/tmphslablu5.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float triangleArea = 0;\n    long s1, s2, s3;\n    if (a > b) {\n   \
    \     if (b > c) {\n            s1 = a;\n            s2 = b;\n            s3 =\
    \ c;\n        } else {\n            s1 = b;\n            s2 = c;\n           \
    \ s3 = a;\n        }\n    } else {\n        if (b > c) {\n            s1 = c;\n\
    \            s2 = b;\n            s3 = a;\n        } else {\n            s1 =\
    \ c;\n            s2 = a;\n            s3 = b;\n        }\n    }\n    float side1\
    \ = (a + b + c) * 0.5f;\n    float side2 = (a + b) * (a + c) * (b + c);\n    float\
    \ side3 = (a + b) * (b + c) * (a + c);\n    float side4 = (a + c) * (a + b) *\
    \ (b + c);\n    float side5 = (a + c) * (b + c) * (a + b);\n    float side6 =\
    \ (b + c) * (a + b) * (a + c);\n    float side7 = (b + c) * (a + c) * (a + b);\n\
    \    float side8 = (b + c) * (b + c) * (b + a);\n\n    triangleArea = (side1 +\
    \ side2 + side3 + side4 + side5 + side6 + side7 + side8) * (1 / 2.f);\n    triangleArea\
    \ = triangleArea / 2;\n    return triangleArea;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0k51ogt1: /tmp/tmp0k51ogt1.cpp:50: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tlong ab = (long) (a + b);\n\tlong bc = (long) (b + c);\n\tlong abc = (long)\
    \ (a + b + c);\n\tassert(a + b >= c);\n\tassert(a + b >= ab + bc);\n\tassert(b\
    \ >= c && b >= ab + bc);\n\treturn abc / (float) abc;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp3bo8f562: /tmp/tmp3bo8f562.cpp:16: float triangle_area(long int, long
    int, long int): Assertion `a + b >= ab + bc'' failed.

    '
  stdout: ''
  timestamp: 1660140108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    if(b+c < a) \n        return -1;\n    return (a + b + c) / 2.0;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpquwz22zq: /tmp/tmpquwz22zq.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n        float ans = 0.0;\n        long d = a + b + c;\n        if (d >= 3)\
    \ {\n                ans = 0.5 * (a + b + c - d);\n        }\n        else {\n\
    \                ans = -1;\n        }\n        return ans;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpp_rc16eu: /tmp/tmpp_rc16eu.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert (a < b);\n  assert (b < c);\n  assert (c > 0);\n  // We need to\
    \ test that c < b + a because this means \n  // that b + a >= c\n  assert (c <\
    \ b + a);\n  float s = (a + b + c) / 2;\n  return sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_sxll_09: /tmp/tmp_sxll_09.cpp:17: float triangle_area(long int, long
    int, long int): Assertion `c < b + a'' failed.

    '
  stdout: ''
  timestamp: 1660140108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = sqrt(pow((a + b), 2) + pow((a + c), 2) + pow((b + c), 2));\n\
    \    if (area < 0.01) {\n        return -1;\n    }\n    float rounded_area = floor(area\
    \ * 100) / 100;\n    return rounded_area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpm4ju8nc5: /tmp/tmpm4ju8nc5.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n\tfloat s1 = (float)(a+b+c)/2.0;\n\tfloat s2 = (float)(a-c-b)/2.0;\n\tfloat\
    \ s3 = (float)(a-b-c)/2.0;\n\tif (s1 + s2 > s3) {\n\t\treturn (s1 + s2)/2.0;\n\
    \t} else {\n\t\treturn -1.0;\n\t}\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpsv9qw4fj: /tmp/tmpsv9qw4fj.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    long sum = a + b;\n    if (sum > c) {\n        sum = sum - c;\n    }\n\
    \    return (float) (a * b * sum) / 2;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpzj44sn7j: /tmp/tmpzj44sn7j.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140108

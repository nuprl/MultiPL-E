name: HumanEval_25_factorize
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of prime factors\
  \ of given integer in the order from smallest to largest.\n// Each of the factors\
  \ should be listed number of times corresponding to how many times it appeares in\
  \ factorization.\n// Input number should be equal to the product of all factors\n\
  // >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n// [5, 5]\n// >>> factorize(70)\n\
  // [2, 5, 7]\nstd::vector<long> factorize(long n) {\n"
tests: "}\nint main() {\n    auto candidate = factorize;\n    assert(candidate((2))\
  \ == (std::vector<long>({2})));\n    assert(candidate((4)) == (std::vector<long>({2,\
  \ 2})));\n    assert(candidate((8)) == (std::vector<long>({2, 2, 2})));\n    assert(candidate((57))\
  \ == (std::vector<long>({3, 19})));\n    assert(candidate((3249)) == (std::vector<long>({3,\
  \ 3, 19, 19})));\n    assert(candidate((185193)) == (std::vector<long>({3, 3, 3,\
  \ 19, 19, 19})));\n    assert(candidate((20577)) == (std::vector<long>({3, 19, 19,\
  \ 19})));\n    assert(candidate((18)) == (std::vector<long>({2, 3, 3})));\n}\n"
completions: []
stop_tokens:
- "\n}"

name: HumanEval_60_sum_to_n
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n\tlong s = 0;\n\tfor (long i = 1; i <= n; i++)\n\
    \t\ts += i;\n\treturn s;\n}\nint main() {\n    auto candidate = sum_to_n;\n  \
    \  assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11))\
    \ == (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100))\
    \ == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n\tif (n <= 0)\n\t\treturn 0;\n\tlong max_num =\
    \ std::sqrt(n);\n\tlong sum_of_n = 0;\n\tlong i;\n\tfor (i = 1; i < max_num; i++)\
    \ {\n\t\tsum_of_n += i;\n\t\tif (sum_of_n > n)\n\t\t\tbreak;\n\t}\n\treturn sum_of_n;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmp42oi646l: /tmp/tmp42oi646l.cpp:29: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // Write your code here\n    long sum = 0;\n\
    \    while(n > 0)\n    {\n        sum = sum + n;\n        n--;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n\tassert(n > 0);\n\tlong result = 0;\n\tfor (long\
    \ i = 1; i <= n; i++) {\n\t\tresult += i;\n\t}\n\treturn result;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    assert(n >= 0);\n    long s = 0;\n    for (long\
    \ i = 1; i <= n; ++i) {\n        s += i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = n; i > 0;\
    \ i--) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if(n<=1) return 1;\n    long sum = 0;\n   \
    \ for(int i=1;i<=n;i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    int result = 0;\n    for (int i = 1; i <= n;\
    \ ++i) {\n        result += i;\n    }\n    return result;\n}\nint main() {\n \
    \   auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long result = 0;\n    for (long i = 1; i <\
    \ n; ++i)\n        result += i;\n    return result;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmp7tg7hmof: /tmp/tmp7tg7hmof.cpp:22: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 1;\n    for(int i=1; i<n; i++){\n\
    \        sum *= i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpwrnsuc5s: /tmp/tmpwrnsuc5s.cpp:24: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n <= 0) {\n        // handle error here\n\
    \        return 0;\n    }\n    // Summation from 1 to n\n    // Summation from\
    \ 1 to n\n    long ans = 1;\n    while (n > 0) {\n        ans += 1;\n        n\
    \ -= 1;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpetza3i52: /tmp/tmpetza3i52.cpp:30: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum=0;\n  for (long i=1;i<=n;i++){\n   \
    \ sum+=i;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long result = 0;\n    for (long i = 1; i <=\
    \ n; ++i)\n        result += i;\n    return result;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  long res = 0;\n  for(int i\
    \ = 1; i <= n; i++) {\n    res += i;\n  }\n  return res;\n}\nint main() {\n  \
    \  auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 1;\n    for (int i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpmz9dg38z: /tmp/tmpmz9dg38z.cpp:23: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  if (n <= 1)\n    return 1;\n  return n + sum_to_n(n\
    \ - 1);\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n == 0)\n        return 0;\n    if (n <\
    \ 10)\n        return n;\n    return n + sum_to_n(n - 10);\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmph53p8g_9: /tmp/tmph53p8g_9.cpp:24: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long last_num = 1;\n   \
    \ for(long i=2;i<=n;i++) {\n        sum += last_num;\n        last_num = last_num\
    \ * i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmp07eps60c: /tmp/tmp07eps60c.cpp:25: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long mod = (n % 2 == 0)\
    \ ? n / 2 : n - 1 ;\n    while(n > 0) {\n      sum = sum + mod;\n      n = n -\
    \ 1;\n      mod = (n % 2 == 0) ? n / 2 : n - 1 ;\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmp52gvrzyd: /tmp/tmp52gvrzyd.cpp:26: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    assert(n >= 1);\n    long s = 1;\n    for (int\
    \ i = 2; i <= n; i++) {\n        s *= i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmplnnawv4q: /tmp/tmplnnawv4q.cpp:25: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // Complete this function\n    long sum = 0;\n\
    \    for (int i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  if (n<0){\n    n=-n;\n  }\n  if (n==0) {\n  \
    \  return n;\n  }\n  int temp=n;\n  long sum=0;\n  while (temp!=0){\n    sum=sum+temp%10;\n\
    \    temp=temp/10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate =\
    \ sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmphxuhj89o: /tmp/tmphxuhj89o.cpp:32: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // write your code here\n    long long int\
    \ sum=0;\n    for(int i=1;i<=n;i++){\n        sum+=i;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long ans = 1;\n    long i = 1;\n    while (i\
    \ < n) {\n        ans += i;\n        i++;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpqghmsh0y: /tmp/tmpqghmsh0y.cpp:26: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++)\n        sum += i;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // write your code here\n    long sum = 0;\n\
    \    long limit = n;\n    while (limit > 0) {\n        if (limit % 2 == 0) {\n\
    \            sum += limit;\n        }\n        limit /= 2;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmpsoo3xgyq: /tmp/tmpsoo3xgyq.cpp:28: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long result = 0;\n    for (long i = 1; i <=\
    \ n; i++) {\n        result += i;\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (int i = 1; i <= n; i++)\
    \ {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n    auto candidate =\
    \ sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if(n <= 0) return 0;\n    long result = 1;\n\
    \    for(int i = 1; i <= n; i++) {\n        result = result * i;\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmp8eids6_7: /tmp/tmp8eids6_7.cpp:25: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert (n > 0);\n  long sum = 0;\n  for (long\
    \ i = 1; i <= n; ++i) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n > 0);\n  long sum = 0;\n  for (long\
    \ i = 1; i <= n; i++)\n    sum += i;\n  return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n >= 0);\n  long ans = 0;\n  // Loop invariant:\
    \ ans is sum of all numbers from 1 to n inclusive.\n  long sum = 1;\n  for (long\
    \ i = 2; i <= n; i++) {\n    ans += sum;\n    sum = sum * i;\n  }\n  return ans;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmpnjm8huwf: /tmp/tmpnjm8huwf.cpp:27: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n > 0);\n  return (n * (n + 1))/2;\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if(n<1) return 0;\n    long s = 0;\n    for(long\
    \ i = 1; i <= n; ++i) s += i;\n    return s;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long result = 0;\n  while (n) {\n    result +=\
    \ n;\n    n /= 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpnqd0_rek: /tmp/tmpnqd0_rek.cpp:25: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n > 0);\n  long long sum = 0;\n  for (long\
    \ long i = 1; i < n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpixadqb4d: /tmp/tmpixadqb4d.cpp:24: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    assert(n >= 0 && \"sum_to_n() should sum to\
    \ positive integer\");\n    long res = 0; // Initialize res with 0.\n    for (int\
    \ i = 0; i < n; i++) {\n        res = res + i;\n    }\n    return res;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmpmm281x62: /tmp/tmpmm281x62.cpp:24: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n == 0) {\n        return 0;\n    }\n\n\
    \    return n + sum_to_n(n - 1);\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long long sum = 1;\n    for (int i = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpy8bq9_3q: /tmp/tmpy8bq9_3q.cpp:23: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (int i=1; i<=n; i++)\
    \ {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long long sum = 0;\n    for(long long i = 1;\
    \ i<n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n  \
    \  auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpg1dg60_2: /tmp/tmpg1dg60_2.cpp:23: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // Complete the function. Do not change the\
    \ function header, \n    // only write the code inside sum_to_n.\n    return n\
    \ <= 0 ? 0 : 1 + sum_to_n(n-1);\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpedyt12rs: /tmp/tmpedyt12rs.cpp:22: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++)\n        sum += i;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n > 0 && n < 1000);\n  long sum = 0;\n\
    \  for (long i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n > 0);\n  long prev = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    prev = prev + i;\n  }\n  return prev;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long long sum = 0; \n    for (int i = 0; i\
    \ < n; i++) \n        sum += i;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpujftjnoc: /tmp/tmpujftjnoc.cpp:22: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // write your code here\n    long sum = 0;\n\
    \    for(int i=0;i<n;i++)\n    {\n        sum += i;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmp_lpjhzso: /tmp/tmp_lpjhzso.cpp:25: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long total = 0;\n    for (long i = 1; i <=\
    \ n; i++) {\n        total += i;\n    }\n    return total;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long result = 0;\n    for(long i = 1; i <=\
    \ n; i++) {\n        result += i;\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ ++i) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n\tlong long ans = 1LL;\n\twhile (n > 1) {\n\t\t\
    ans *= n;\n\t\tn--;\n\t}\n\tans *= n;\n\treturn ans;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmprm6uznl_: /tmp/tmprm6uznl_.cpp:26: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    assert(n >= 0);\n    long res = 0;\n    for\
    \ (long i = 1; i <= n; ++i)\n        res = res + i;\n    return res;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    int count = 0;\n    long sum = n;\n    for\
    \ (int i = 1; i < n; i++) {\n        sum += i;\n        count += 1;\n    }\n \
    \   return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    return (n * (n+1)) / 2;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    assert(n >= 0);\n    assert(n <= 100);\n\n\
    \    long sum = 0;\n    for (long i = 2; i <= n; i++) {\n        sum += i;\n \
    \   }\n    return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmpodbsosdt: /tmp/tmpodbsosdt.cpp:26: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if(n <= 1) return 1;\n    else return n*(n+1)/2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++)\n\
    \    {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) sum += i;\n    return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long long sum = 0;\n    for(long long i = 1;\
    \ (i <= n); i++)\n        sum += i;\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n\tlong ans = 0;\n\tassert(n >= 0);\n\tfor (long\
    \ i = 1; i <= n; i++) {\n\t\tans += i;\n\t}\n\treturn ans;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  if (n == 1)\n    return n;\n  long last_sum =\
    \ 0;\n  for (long i = 1; i <= n; ++i) {\n    last_sum += i;\n  }\n  return last_sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long long int total = 0;\n    long long int\
    \ sum = 0;\n    // looping using while loop \n    while (n > 0) {\n        //\
    \ sum will be equal to sum \n        // + n\n        sum = sum + n;\n        //\
    \ n is subtracted by one \n        n = n - 1;\n        // total will be equal\
    \ to total \n        // + sum\n        total = total + sum;\n    }\n    // return\
    \ total \n    return total;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmplje9c0du: /tmp/tmplje9c0du.cpp:34: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long long sum=0;\n    for(int i=1;i<=n;i++)\n\
    \        sum+=i;\n    return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  if (n == 1)\n    return n;\n  if (n < 0)\n  \
    \  return std::numeric_limits<long>::max();\n  if (n > 0)\n    return std::numeric_limits<long>::min();\n\
    \  long sum = 0;\n  for (long i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return\
    \ sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmpqcnrdlsu: /tmp/tmpqcnrdlsu.cpp:30: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    return n*(n+1)/2;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n == 0) return 0;\n    else return sum_to_n(n\
    \ - 1) + n;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  // code here\n  long sum = 0;\n  for (long i\
    \ = 1;i < n;i++){\n    sum = sum + i;\n  }\n  return sum;\n}\nint main() {\n \
    \   auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpb1p3awll: /tmp/tmpb1p3awll.cpp:24: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  if (n <= 0)\n    return 0;\n  long ans = n;\n\
    \  long cur = 1;\n  while (cur <= n) {\n    ans = ans + cur;\n    cur++;\n  }\n\
    \  return ans;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmp6ouj5xn8: /tmp/tmp6ouj5xn8.cpp:27: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n == 1)\n        return 1;\n    if (n <\
    \ 0)\n        n = -n;\n    if (n == 0)\n        return 0;\n    long sum = 0;\n\
    \    for (; n > 0; ++n) {\n        sum += 1;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long s = 0;\n    for (long i = 1; i <= n; i++)\
    \ s += i;\n    return s;\n}\nint main() {\n    auto candidate = sum_to_n;\n  \
    \  assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11))\
    \ == (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100))\
    \ == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++)\n        sum += i;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // Initialize result with 0.\n    // If this\
    \ fails, you may have written a bug that crashes when\n    // you try to use this\
    \ function.\n    long result = 0;\n    // Iterate from 1 to n.\n    // You can\
    \ replace this loop by an algorithm that solves this\n    // problem more efficiently.\n\
    \    for (long i = 1; i <= n; i++) {\n        result += i;\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // your code goes here\n    if (n == 1)\n \
    \       return 1;\n    return n + sum_to_n(n - 1);\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if(n <= 1)\n        return 1;\n    return n\
    \ + sum_to_n(n-1);\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n\t// Your code goes here\n\tlong sum = 0;\n\tfor(long\
    \ i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nint main() {\n \
    \   auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n == 1)\n        return 1;\n    if (n ==\
    \ 2)\n        return 2;\n    long sum = 1;\n    for (long i = 3; i <= n; i++){\n\
    \        sum = sum + i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpoh9j_ka_: /tmp/tmpoh9j_ka_.cpp:28: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long long sum = 0;\n    for(int i = 1; i <=\
    \ n; ++i)\n        sum += i;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long res = 0;\n    for (long i = 1; i <= n;\
    \ i++)\n        res += i;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if ( n <= 0 )\n        return 0;\n    long\
    \ sum = 0;\n    // write your code here\n    long cur = 0;\n    long cur1 = 1;\n\
    \    long cur2 = 1;\n    long max = (long) sqrt(n);\n    while(cur < n)\n    {\n\
    \        cur1 = cur2;\n        cur2 = cur + cur1;\n        cur = cur2;\n     \
    \   sum += cur2;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpr5bp37a0: /tmp/tmpr5bp37a0.cpp:35: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // your code goes here\n  assert(n>0);\n  std::bitset<64>\
    \ s = 0;\n  int m = 0;\n  for(int i = 1;i<n;++i) {\n    s += i;\n    if((i+1)%m==0)\
    \ {\n      m = m+1;\n    }\n  }\n  return s.to_ulong();\n}\nint main() {\n   \
    \ auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2lsukpeq.cpp: In function \u2018long int sum_to_n(long int)\u2019\
    :\n/tmp/tmp2lsukpeq.cpp:20:7: error: no match for \u2018operator+=\u2019 (operand\
    \ types are \u2018std::bitset<64>\u2019 and \u2018int\u2019)\n   20 |     s +=\
    \ i;\n      |     ~~^~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long long arr[n + 1];\n  for (long long i = 1;\
    \ i <= n; i++) {\n    long long tmp = arr[i - 1];\n    arr[i - 1] += i;\n    arr[n]\
    \ = arr[i - 1];\n    return tmp;\n  }\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmp20553_em: /tmp/tmp20553_em.cpp:25: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  long cur = 1, prev = 0;\n\
    \  long result = 0;\n  while (cur <= n) {\n    result += cur;\n    cur = prev\
    \ + cur;\n    prev = cur;\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpo5psydpe: /tmp/tmpo5psydpe.cpp:27: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  int i;\n  long sum = 0;\n  for (i = 1; i <= n;\
    \ i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert (n>0L);\n  long ans = n+n+1;\n  while\
    \ (n > 1L) {\n    ans += n+n+1;\n    n--;\n  }\n  return ans;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpu589ad_6: /tmp/tmpu589ad_6.cpp:25: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long result = 0;\n  while (n > 1) {\n    if (n\
    \ % 2 == 0) {\n      result += n;\n    }\n    n /= 2;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmpkmarpmfq: /tmp/tmpkmarpmfq.cpp:26: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (long i = n; i > 0; i /=\
    \ 10)\n    sum += (i * std::pow(10, i-1));\n  return sum;\n}\nint main() {\n \
    \   auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpoc2bsosr: /tmp/tmpoc2bsosr.cpp:23: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long long int sum = 0;\n    long long int rem;\n\
    \    while (n > 0) {\n        rem = n % 10;\n        sum = sum * 10 + rem;\n \
    \       n = n / 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmp7uznp5h2: /tmp/tmp7uznp5h2.cpp:27: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n == 0)\n        return 0;\n    long ans\
    \ = 1;\n    for (long i = 1; i <= n; i++)\n        ans = ans * i;\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmpqyd3q06s: /tmp/tmpqyd3q06s.cpp:25: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if ( n == 1)\n        return n;\n    else if\
    \ ( n == 0)\n        return 0;\n    long sum = 1;\n    for (long i = 1; i<n; i++)\
    \ {\n        sum = sum*i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmposu8uaoz: /tmp/tmposu8uaoz.cpp:28: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++)\n        sum += i;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // write your code here\n    long sum=0;\n\
    \    while(n>0){\n        sum+=(n&1);\n        n>>=1;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmpl7vn83n2: /tmp/tmpl7vn83n2.cpp:26: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n == 1)\n        return 1;\n    if (n ==\
    \ 0)\n        return 0;\n    // Sum of first i numbers is n*i\n    long sum =\
    \ 0;\n    for (int i = 1; i < n; i++) {\n        sum += i;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmpshkmg2n5: /tmp/tmpshkmg2n5.cpp:29: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long long res = 0;\n    for(long long i = 1;\
    \ ; i++)\n    {\n        res += i;\n        if(i > n) break;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmpzfqxfeeb: /tmp/tmpzfqxfeeb.cpp:25: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    assert(n >= 1);\n    long sum = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long a = 0,\n        b = 0;\n    for(long i\
    \ = 1; i < n; ++i) {\n        a = a + i;\n        b = b + i;\n    }\n    return\
    \ b;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmpafsjizhg: /tmp/tmpafsjizhg.cpp:25: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i=1; i<=n; i++){\n\
    \        sum = sum + i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  for(int i = 1; i < n; i++)\n\
    \    sum += i;\n  return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpuvdg7qhi: /tmp/tmpuvdg7qhi.cpp:22: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n > 0);\n  long s = n;\n  for(; n > 1;\
    \ n--)\n    s += n;\n  return s;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpak4zga8k: /tmp/tmpak4zga8k.cpp:24: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  if (n <= 0) return 0;\n  long ans = 0;\n  for\
    \ (int i = 1; i <= n; i++) {\n    ans += i;\n  }\n  return ans;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n <= 0)\n        throw std::invalid_argument(\"\
    Input number is less than 0\");\n    long sum = 0;\n    for (long i = 1; i <=\
    \ n; i++)\n        sum += i;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    assert(n >= 0);\n    if (n == 0)\n        return\
    \ 0;\n    long total = 0;\n    for (long i = 1; i <= n; i++) {\n        total\
    \ += i;\n    }\n    return total;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  long sum = 0;\n  for(long\
    \ i = 1; i<n; ++i)\n    sum += i;\n  return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmp9h5396sk: /tmp/tmp9h5396sk.cpp:23: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 1;\n    for (; n > 1; n--) {\n \
    \       sum += n;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if(n < 0) return 0;\n    long long sum = 0;\n\
    \    for(long i = 1; i <= n; i++) sum += i;\n    return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  assert(n <= 1000000007);\n \
    \ for (long i = 2; i <= n; ++i) {\n    sum += i;\n  }\n  return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmp06xnhnlz: /tmp/tmp06xnhnlz.cpp:24: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (int i = 1; i < n; i++)\
    \ {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n    auto candidate =\
    \ sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpk1ky1p3c: /tmp/tmpk1ky1p3c.cpp:23: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if(n == 1) return 1;\n    long res = 1;\n \
    \   for(int i = 1; i < n; i++)\n        res = res * i;\n    return res;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmpj3cxmpbt: /tmp/tmpj3cxmpbt.cpp:24: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i=1; i<=n; i++){\n\
    \        sum+=i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // write your code here\n    long sum =0;\n\
    \    for(int i=1; i<n; i++){\n        sum+=i;\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmppgui8ybd: /tmp/tmppgui8ybd.cpp:24: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long s=0;\n  for(int i=1;i<=n;i++) {\n    s +=\
    \ i;\n  }\n  return s;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    return accumulate(n, [&](int acc){return acc;});\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpxil0_l5l.cpp: In function \u2018long int sum_to_n(long int)\u2019\
    :\n/tmp/tmpxil0_l5l.cpp:15:12: error: \u2018accumulate\u2019 was not declared\
    \ in this scope; did you mean \u2018std::accumulate\u2019?\n   15 |     return\
    \ accumulate(n, [&](int acc){return acc;});\n      |            ^~~~~~~~~~\n \
    \     |            std::accumulate\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n\
    \                 from /tmp/tmpxil0_l5l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_numeric.h:154:5:\
    \ note: \u2018std::accumulate\u2019 declared here\n  154 |     accumulate(_InputIterator\
    \ __first, _InputIterator __last, _Tp __init,\n      |     ^~~~~~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    while (n > 1) {\n      \
    \  sum += n;\n        n /= 2;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpg19rknil: /tmp/tmpg19rknil.cpp:24: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n;\
    \ ++i)\n        sum += i;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long res = 0;\n  for(int i = 1; i <= n; ++i)\
    \ {\n    res = res + i;\n  }\n  return res;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // write your code here\n    long res = 0;\n\
    \    while(n > 1){\n        res+=n;\n        n--;\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmpbfxss4xq: /tmp/tmpbfxss4xq.cpp:25: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // write your code here\n    return n;\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmpsl1lhwmn: /tmp/tmpsl1lhwmn.cpp:21: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    assert(n > 1);\n    long sum = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmprrvtq3f_: /tmp/tmprrvtq3f_.cpp:15: long int sum_to_n(long int): Assertion\
    \ `n > 1' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  int sum = 0;\n  for (int i = 1; i <= n; i++)\
    \ {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n    auto candidate =\
    \ sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    assert(n >= 1);\n    long sum = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    while (n) {\n        sum\
    \ += n;\n        n /= 2;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmp5gl559_9: /tmp/tmp5gl559_9.cpp:25: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long result = 0;\n  for (long i = 1; i <= n;\
    \ i++) {\n    result += i;\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long res = 0;\n  assert(n >= 0);\n  for (long\
    \ i = 1; i <= n; ++i) {\n    res += i;\n  }\n  return res;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  if (n == 0)\n    return 1;\n  if (n == 1)\n \
    \   return 2;\n  if (n == 2)\n    return 3;\n  if (n == 3)\n    return 4;\n  if\
    \ (n == 4)\n    return 5;\n  if (n == 5)\n    return 6;\n  if (n == 6)\n    return\
    \ 7;\n  if (n == 7)\n    return 8;\n  if (n == 8)\n    return 9;\n  if (n == 9)\n\
    \    return 10;\n  if (n == 10)\n    return 11;\n  if (n == 11)\n    return 12;\n\
    \  if (n == 12)\n    return 13;\n  if (n == 13)\n    return 14;\n  if (n == 14)\n\
    \    return 15;\n  if (n == 15)\n    return 16;\n  if (n == 16)\n    return 17;\n\
    \  if (n == 17)\n    return 18;\n  if (n == 18)\n    return 19;\n  if (n == 19)\n\
    \    return 20;\n  if (n == 20)\n    return 21;\n  if (n == 21)\n    return 22;\n\
    \  if (n == 22)\n    return 23;\n  if (n == 23)\n    return 24;\n  if (n == 24)\n\
    \    return 25;\n  if (n == 25)\n    return 26;\n  if (n == 26)\n    return 27;\n\
    \  if (n == 27)\n    return 28;\n  if (n == 28)\n    return 29;\n  if (n == 29)\n\
    \    return 30;\n  if (n == 30)\n    return 31;\n  if (n == 31)\n    return 32;\n\
    \  if (n == 32)\n    return 33;\n  if (n == 33)\n    return 34;\n  if (n == 34)\n\
    \    return 35;\n  if (n == 35)\n    return 36;\n  if (n == 36)\n    return 37;\n\
    \  if (n == 37)\n    return 38;\n  if (n == 38)\n    return 39;\n  if (n == 39)\n\
    \    return 40;\n  if (n == 40)\n    return 41;\n  if (n == 41)\n    return 42;\n\
    \  if (n == 42)\n    return 43;\n  if (n == 44)\n    return 45;\n  if (n == 45)\n\
    \    return 46;\n  if (n == 46)\n    return 47;\n  if (n == 47)\n    return 48;\n\
    \  if (n == 49)\n    return 50;\n  if (n == 51)\n    return 52;\n  if (n == 54)\n\
    \    return 57;\n  if (n == 56)\n    return 59;\n  if (n == 58)\n    return 61;\n\
    \  if (n == 60)\n    return 63;\n  if (n == 64)\n    return 65;\n  if (n == 66)\n\
    \    return 67;\n  if (n == 68)\n    return 71;\n  if (n == 69)\n    return 73;\n\
    \  if (n == 70)\n    return 75;\n  if (n == 72)\n    return 77;\n  if (n == 74)\n\
    \    return 79;\n  if (n == 76)\n    return 81;\n  if (n == 78)\n    return 83\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpbyxkfkzk.cpp: In function \u2018long int sum_to_n(long int)\u2019\
    :\n/tmp/tmpbyxkfkzk.cpp:138:14: error: expected \u2018;\u2019 before \u2018}\u2019\
    \ token\n  138 |     return 83\n      |              ^\n      |              ;\n\
    \  139 | }\n      | ~             \n/tmp/tmpbyxkfkzk.cpp:139:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n  139 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n == 1)\n        return 1;\n    long sum_of_ones\
    \ = 0;\n    long sum_of_twos = 1;\n    long ones = 1;\n    for (long i = 2; i\
    \ <= n; i++) {\n        sum_of_ones = sum_of_ones + ones;\n        sum_of_twos\
    \ = sum_of_twos * 2;\n        ones = ones * i;\n    }\n    return sum_of_ones\
    \ + sum_of_twos;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmpsq7eat9k: /tmp/tmpsq7eat9k.cpp:30: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long ans = n;\n    for (long i = 1; i < n;\
    \ ++i) {\n        ans += i;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  int sum=0;\n  for (int i = 1; i <= n; i++) \n\
    \    sum += i;\n  return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    int sum = 0;\n    long x;\n    for (int i =\
    \ 1; i <= n; i++) {\n        x = (long)i;\n        sum += x;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if(n >= 1){\n        return sum_to_n(n - 1)\
    \ + n;\n    }else{\n        return n;\n    }\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long res = 0;\n    for (int i=1; i <= n; ++i)\
    \ {\n        res+=i;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n\tlong sum = 0;\n\tlong one = 1;\n\tfor (long i\
    \ = 1; i < n; i++) {\n\t\tsum += one;\n\t\tone = one << 1;\n\t}\n\treturn sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmpsqkz9a9l: /tmp/tmpsqkz9a9l.cpp:25: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  // Write your code here.\n  long sum=0;\n  for(int\
    \ i=1;i<=n;i++){\n    sum+=i;\n  }\n  return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n == 0) return 0;\n    long sum = 0;\n\
    \    for (long i = 1; i <= n; ++i) {\n        sum += i;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n\tassert(n > 0);\n\tlong res = 1;\n\tfor (long\
    \ i = 1; i <= n; i++) {\n\t\tres += i;\n\t}\n\treturn res;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpuyen6pn7: /tmp/tmpuyen6pn7.cpp:24: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum=0;\n    for(int i=1;i<=n;i++) {\n\
    \        sum+=i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  if (n < 1) {\n    throw std::invalid_argument(\"\
    n is less than 1\");\n  }\n  if (n <= 1000) {\n    return n*(n + 1) / 2;\n  }\
    \ else {\n    return n;\n  }\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // assert(n >= 1);\n    if (n == 1) return\
    \ 1;\n    long s = 2;\n    for (long i = 3; i <= n; i++) {\n        s += s;\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmpbv4rdd1d: /tmp/tmpbv4rdd1d.cpp:26: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    std::bitset<(1 << 30)> bs(n); // convert n\
    \ to bitset.\n    long long int sum = 0;\n    for (long long int bit = 1, i =\
    \ bs.testset(); b; i++, b = i & -i) {\n        if (bit == bs.size()) {\n     \
    \       sum += bit;\n            bit = 1;\n        }\n        bit = bit << 1;\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n   \
    \ assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11))\
    \ == (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100))\
    \ == (5050));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp91smbscg.cpp: In function \u2018long int sum_to_n(long int)\u2019\
    :\n/tmp/tmp91smbscg.cpp:17:40: error: \u2018class std::bitset<1073741824>\u2019\
    \ has no member named \u2018testset\u2019; did you mean \u2018reset\u2019?\n \
    \  17 |     for (long long int bit = 1, i = bs.testset(); b; i++, b = i & -i)\
    \ {\n      |                                        ^~~~~~~\n      |         \
    \                               reset\n/tmp/tmp91smbscg.cpp:17:51: error: \u2018\
    b\u2019 was not declared in this scope\n   17 |     for (long long int bit = 1,\
    \ i = bs.testset(); b; i++, b = i & -i) {\n      |                           \
    \                        ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  assert(n >= 1);\n  \n  for (long\
    \ i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n\tlong result = 0;\n\tlong limit = n;\n\twhile\
    \ (n > 0) {\n\t\tresult += n;\n\t\t--limit;\n\t\tn /= 10;\n\t}\n\treturn result;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmp54q8wz1a: /tmp/tmp54q8wz1a.cpp:27: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    std::bitset<100> bs(n);\n    long sum = 0;\n\
    \    for (long i = 1; i <= n; ++i) {\n        sum += i;\n        bs.set(sum %\
    \ n);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n <= 0)\n        return 0;\n    long sum\
    \ = 0;\n    while (n > 1) {\n        sum += n;\n        n = sum;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmpy85p4jsc: /tmp/tmpy85p4jsc.cpp:26: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  long ans = 1;\n  for (int\
    \ i = 1; i <= n; ++i)\n    ans += i;\n  return ans;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpzyt6w8tj: /tmp/tmpzyt6w8tj.cpp:23: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmp22mqn5d3: /tmp/tmp22mqn5d3.cpp:23: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i=1; i<=n; i++){\n\
    \        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    int total = 0;\n    for (int i = 0; i < n;\
    \ i++) {\n        total += i;\n    }\n    return total;\n}\nint main() {\n   \
    \ auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpohp3a1gm: /tmp/tmpohp3a1gm.cpp:23: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long ans = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        ans += i;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n == 0)\n        return 0;\n    long ans\
    \ = 1;\n    for (int i = 0; i < n; i++)\n        ans *= i;\n    return ans;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmp6lykxptg: /tmp/tmp6lykxptg.cpp:24: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  // Initialize our accumulator to 0\n  long sum\
    \ = 0;\n  // Use a while loop to traverse the numbers from 1 to n\n  while (n--)\
    \ {\n    // Use an if condition to check if n is divisible by 3\n    if (n % 3\
    \ == 0)\n    // If it is then add the number to our sum\n      sum += n;\n   \
    \ // Use an if condition to check if n is divisible by 5\n    else if (n % 5 ==\
    \ 0)\n    // If it is then add the number to our sum\n      sum += n;\n    //\
    \ Use an if condition to check if n is divisible by 15\n    else if (n % 15 ==\
    \ 0)\n    // If it is then add the number to our sum\n      sum += n;\n    //\
    \ Use an if condition to check if n is divisible by 3\n    else if (n % 3 == 0)\n\
    \    // If it is then add the number to our sum\n      sum += n;\n    // Use an\
    \ if condition to check if n is divisible by 5\n    else if (n % 5 == 0)\n   \
    \ // If it is then add the number to our sum\n      sum += n;\n    // Use an if\
    \ condition to check if n is divisible by 15\n    else if (n % 15 == 0)\n    //\
    \ If it is then add the number to our sum\n      sum += n;\n    // Use an if condition\
    \ to check if n is divisible by 3\n    else if (n % 3 == 0)\n    // If it is then\
    \ add the number to our sum\n      sum += n;\n    // Use an if condition to check\
    \ if n is divisible by 5\n    else if (n % 5 == 0)\n    // If it is then add the\
    \ number to our sum\n      sum += n;\n    // Use an if condition to check if n\
    \ is divisible by 15\n    else if (n % 15 == 0)\n    // If it is then add the\
    \ number to our sum\n      sum += n;\n    // Use an if condition to check if n\
    \ is divisible by 3\n    else if (n % 3 == 0)\n    // If it is then add the number\
    \ to our sum\n      sum += n;\n    // Use an if condition to check if n is divisible\
    \ by 5\n    else if (n % 5 == 0)\n    // If it is then add the number to our sum\n\
    \      sum += n;\n    // Use an if condition to check if n is divisible by 15\n\
    \    else if (n % 15 == 0)\n    // If it is then add the number to our sum\n \
    \     sum += n;\n  }\n  // Return the sum of the numbers from 1 to n\n  return\
    \ sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmptev7uj0f: /tmp/tmptev7uj0f.cpp:73: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (long i = 1; i<=n; i++)\
    \ \n    sum += i;\n  return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // your code\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpf49yvn3i: /tmp/tmpf49yvn3i.cpp:19: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  // assert n >= 0\n  // assert n > 0\n  // let\
    \ sum be 0\n  // let i be 1\n  // while i <= n\n  // sum is sum + i\n  // i increase\
    \ by 1\n  long sum = 0;\n  for (long i = 2; i <= n; i++) {\n    sum += i;\n  }\n\
    \  return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmp3whx7zmi: /tmp/tmp3whx7zmi.cpp:30: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n;\
    \ ++i)\n        sum += i;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long long ans = 0;\n    for (long long i =\
    \ 2; i <= n; i++) ans += i;\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpf518icsc: /tmp/tmpf518icsc.cpp:21: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n\tlong sum = 0;\n\tlong k = n;\n\twhile (k > 0)\
    \ {\n\t\tsum += k;\n\t\tk--;\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 1;\n    long m = n;\n    for (long\
    \ i = 1; i <= n; ++i) {\n        sum += (m * i - m);\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmp9ogncwcb: /tmp/tmp9ogncwcb.cpp:25: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long ans = 0;\n    for (long i = 1; i <= n;\
    \ ++i) {\n        ans += i;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  int sum = 0;\n  assert(n >= 0);\n  while (n--)\n\
    \    sum += n;\n  return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpu8qlzkg0: /tmp/tmpu8qlzkg0.cpp:23: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    assert(n >= 1);\n    return (n * (n + 1)) /\
    \ 2;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 1;\n    while (n>0){\n        sum++;\n\
    \        n--;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpi8bye7no: /tmp/tmpi8bye7no.cpp:24: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (long i = 1; i <= n; i++)\
    \ sum += i;\n  return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  while (n) {\n    sum += (n %\
    \ 10) + 1;\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpkv9prz1x: /tmp/tmpkv9prz1x.cpp:24: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n > 0);\n  long result = 1;\n  for (long\
    \ i = 1; i <= n; ++i) {\n    result *= i;\n  }\n  return result;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpg40d6h4a: /tmp/tmpg40d6h4a.cpp:25: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  if(n == 0) return 1;\n  if(n == 1) return n;\n\
    \  long res = 0;\n  for(int i = 1; i <= n; i++) {\n    res += i;\n  }\n  return\
    \ res;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // assert(n >= 0);\n    long sum = 0;\n   \
    \ for (long i = 1; i < n; i++) {\n        sum += i;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmpp07yhdbl: /tmp/tmpp07yhdbl.cpp:24: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  // your code goes here\n  if(n<0){\n    n=-n;\n\
    \    return sum_to_n(n);\n  }\n  return n*(n+1)/2;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long result=1;\n    while (n>1) {\n       \
    \ n-=1;\n        result+=n;\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmp3d_fwvrg: /tmp/tmp3d_fwvrg.cpp:25: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n\tassert(n > 0);\n\tlong sum = 0;\n\tfor (long\
    \ i = 1; i <= n; i++)\n\t\tsum += i;\n\treturn sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long long int sum = 0;\n    for(int i = 1;\
    \ i < n; i++)\n        sum += i;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpmtn32s87: /tmp/tmpmtn32s87.cpp:22: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // sum of numbers from 1 to n\n    long long\
    \ int sum = 0;\n    for(int i = 1; i < n; ++i) {\n        sum += i;\n    }\n \
    \   return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmpj31bhlw_: /tmp/tmpj31bhlw_.cpp:24: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  if (n < 1) {\n    long ans = 1L;\n    return\
    \ ans;\n  }\n  // We can use the formula for sum from Wikipedia\n  long long sum\
    \ = 1L;\n  for (long i = 2; i <= n; i++) {\n    sum = sum + i;\n  }\n  long long\
    \ ans = sum;\n  return ans;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  return std::accumulate(std::begin(my_array),\
    \ std::end(my_array), 0ULL, n);\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb6vhis5o.cpp: In function \u2018long int sum_to_n(long int)\u2019\
    :\n/tmp/tmpb6vhis5o.cpp:15:37: error: \u2018my_array\u2019 was not declared in\
    \ this scope\n   15 |   return std::accumulate(std::begin(my_array), std::end(my_array),\
    \ 0ULL, n);\n      |                                     ^~~~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long ans = n;\n    for (long i = 2; i <= n;\
    \ i++)\n        ans += i;\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmp96wxbyem: /tmp/tmp96wxbyem.cpp:23: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n\tlong sum = 1;\n\tlong limit = n;\n\n\tfor (long\
    \ i = 2; i <= limit; i++)\n\t\tif (limit % i == 0)\n\t\t\tsum += i;\n\n\treturn\
    \ sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmpca2pp42i: /tmp/tmpca2pp42i.cpp:27: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long s = 0;\n  for(int i = 1; i <= n; i++) {\n\
    \    s = s + i;\n  }\n  return s;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long res = 0;\n  assert(n >= 0);\n  // Sum 1...n\n\
    \  for (long i = 1; i <= n; ++i) {\n    res += i;\n  }\n  return res;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long s = 1, sum = 0;\n    for (long i = 1;\
    \ i <= n; i++)\n        sum += s;\n    cout << sum << endl;\n    return sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpslt1qc1s.cpp: In function \u2018long int sum_to_n(long int)\u2019\
    :\n/tmp/tmpslt1qc1s.cpp:18:5: error: \u2018cout\u2019 was not declared in this\
    \ scope; did you mean \u2018std::cout\u2019?\n   18 |     cout << sum << endl;\n\
    \      |     ^~~~\n      |     std::cout\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:75,\n\
    \                 from /tmp/tmpslt1qc1s.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmpslt1qc1s.cpp:18:20:\
    \ error: \u2018endl\u2019 was not declared in this scope; did you mean \u2018\
    std::endl\u2019?\n   18 |     cout << sum << endl;\n      |                  \
    \  ^~~~\n      |                    std::endl\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpslt1qc1s.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ostream:599:5:\
    \ note: \u2018std::endl\u2019 declared here\n  599 |     endl(basic_ostream<_CharT,\
    \ _Traits>& __os)\n      |     ^~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  // sum of 1 to n\n  long sum = 0;\n  for (long\
    \ i = 1; i <= n; ++i) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // write your code here\n    long sum = 0;\n\
    \    for(long i = 1; i <= n; i++){\n        sum = sum + i;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  assert(n > 0);\n  for (int i\
    \ = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n  \
    \  auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long s = 0;\n    long mod = n;\n    while(mod\
    \ > 1){\n        s += mod;\n        mod = mod >> 1;\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmp9qyjgrr5: /tmp/tmp9qyjgrr5.cpp:25: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (int i = 1; i < n; i++)\
    \ {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpwouaz48c: /tmp/tmpwouaz48c.cpp:23: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    int count = 0;\n    for (long i = 1; i <= n;\
    \ ++i)\n        count += i;\n    return count;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if(n == 1) return 1;\n    else if(n%2 != 0)\
    \ return n*(n-1)/2;\n    else return n*(n+2)/2;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpa8b13xs4: /tmp/tmpa8b13xs4.cpp:22: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  long ans = 0;\n  for (int\
    \ i = 1; i <= n; i++) {\n    ans += i;\n  }\n  return ans;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if (n == 0)\n        return 0;\n    // This\
    \ function computes sum from 1 to the given number.\n    long sum = 0;\n    for\
    \ (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if(n < 2) return 1;\n    return n + sum_to_n(n\
    \ - 1);\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if(n <= 0) return -1;\n    long s = 1;\n  \
    \  long r = n;\n    long i = 2;\n    while(r != 0){\n        r = r / i;\n    \
    \    s++;\n        i++;\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: "tmpsuppkxn8: /tmp/tmpsuppkxn8.cpp:28: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    // code here\n    // write your code here\n\
    \    return n+1;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmp2ylfac5e: /tmp/tmp2ylfac5e.cpp:21: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if(n==1)\n        return n;\n    if(n%2==0)\n\
    \        return (sum_to_n(n/2)+1);\n    else \n        return sum_to_n(n/2);\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmp9f6mlkm5: /tmp/tmp9f6mlkm5.cpp:25: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    if(n <= 0) return 0;\n    if(n < 10) return\
    \ n;\n    long sum = 0;\n    for(long i = 2; i <= n; sum += i, i <<= 1);\n   \
    \ return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  stdout: ''
  stderr: "tmpfj_9kfyn: /tmp/tmpfj_9kfyn.cpp:24: int main(): Assertion `candidate((6))\
    \ == (21)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long ans = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        ans += i;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

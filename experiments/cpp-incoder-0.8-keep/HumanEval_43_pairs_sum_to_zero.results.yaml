language: cpp
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int t = 0;\n    for (auto it1 = l.begin(); it1 != l.end();\
    \ it1++) {\n        t += *it1;\n    }\n\n    for (auto it2 = l.begin(); it2 !=\
    \ l.end(); it2++) {\n        if (t < 0) {\n            t = t + it2;\n        }\
    \ else {\n            return false;\n        }\n    }\n    return true;\n}\nint\
    \ main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpfdtczf_j.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpfdtczf_j.cpp:24:19: error: cannot convert \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018long long int\u2019 in assignment\n\
    \   24 |             t = t + it2;\n      |                 ~~^~~~~\n      |  \
    \                 |\n      |                   __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\n"
  stdout: ''
  timestamp: 1660124244
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n\tlong sum = 0;\n\tfor (long i = 0; i < l.size(); i++) {\n\t\tsum += l[i];\n\
    \t\tif (sum < 0) {\n\t\t\tsum = 0;\n\t\t}\n\t}\n\treturn (l.size() == 2);\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpsnq77qmu: /tmp/tmpsnq77qmu.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long ans = 0, sum = 0;\n    for (auto i : l) {\n        sum +=\
    \ i;\n    }\n    if (sum == 0)\n        return true;\n    for (auto i : l) {\n\
    \        ans += (i * sum) / 2;\n    }\n    return (ans == 0);\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp798o6sw8: /tmp/tmp798o6sw8.cpp:33: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  std::sort(l.begin(),l.end());\n  for(int i=0;i<l.size();i++){\n    if(l[i]+l[i+1]==0){\n\
    \      return true;\n    }\n  }\n  return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmps9b8z_q6: /tmp/tmps9b8z_q6.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n   long sum = 0;\n   for (long x : l) sum += x;\n   return (sum == 0);\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpn6sezntg: /tmp/tmpn6sezntg.cpp:26: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  long long ans = 0;\n  for (int i = 0; i < l.size() - 1; i++) {\n   \
    \ long long curr = l[i] + l[i + 1];\n    if (curr <= 0) {\n      return false;\n\
    \    }\n    ans += curr;\n  }\n  return ans == 0;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpo64etweb: /tmp/tmpo64etweb.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for(auto const& val : l) {\n        sum\
    \ += val;\n    }\n    return sum == 0;\n}\nint main() {\n    auto candidate =\
    \ pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmphva982d9: /tmp/tmphva982d9.cpp:28: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum=0;\n    for(int i=0;i<l.size();i++){\n        sum+=l[i];\n\
    \    }\n    return sum==0;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpkm54pc9v: /tmp/tmpkm54pc9v.cpp:28: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int len = l.size();\n    if(len < 2)\n        return true;\n    std::vector<long>\
    \ a = l;\n    std::vector<long> b(len, 0);\n    for(int i = 0; i < len - 1; i++)\
    \ {\n        for(int j = i + 1; j < len; j++) {\n            b[i] += a[j];\n \
    \           if(i != j)\n                a[j] = 0;\n            else\n        \
    \        if(b[i] != 0)\n                    return false;\n        }\n    }\n\
    \    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpvi5nz8wn: /tmp/tmpvi5nz8wn.cpp:36: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::set<long> s1(l.begin(), l.end());\n    for (long i : l)\n   \
    \     s1.erase(i);\n    return s1.empty();\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpa4j5_a65: /tmp/tmpa4j5_a65.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() == 0) return false;\n    long long s = l.back();\n  \
    \  long long k = l.front();\n    // loop through the list backwards and compare\
    \ with the current element.\n    for (long long i = l.size(); i > 1; i--) {\n\
    \        long long nextSum =\n                (i == l.size() || i < l.size() ?\
    \ l[i - 1] + l[i] : l[i - 1]);\n        if (nextSum == 0) return true;\n     \
    \   if (nextSum < s) return false;\n        s = nextSum;\n        k = l[i];\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp1e2jpf7b: /tmp/tmp1e2jpf7b.cpp:33: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n\tstd::sort(l.begin(), l.end());\n\tlong long sum = 0;\n\tfor (long i\
    \ = 1; i < l.size(); ++i) {\n\t\tsum += l[i - 1];\n\t\tif (sum == 0)\n\t\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp7lo9vr23: /tmp/tmp7lo9vr23.cpp:28: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124244
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::vector<std::pair<long, long> > v;\n    for (long i = 0; i < l.size();\
    \ i++)\n        v.push_back({l[i], 0});\n    for (long i = 0; i < l.size(); i++)\n\
    \        for (long j = i + 1; j < l.size(); j++)\n            if (l[i] + l[j]\
    \ != 0)\n                return false;\n    return true;\n}\nint main() {\n  \
    \  auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmphaoisexk: /tmp/tmphaoisexk.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  // your code goes here\n  long long sum = 0;\n  for (long long i = 0;\
    \ i < l.size() - 1; i++) {\n    sum += l[i];\n    if (sum > 0) {\n      long long\
    \ nextSum = sum - l[i];\n      if (nextSum < 0)\n        nextSum += l.size();\n\
    \      if (nextSum == 0)\n        return true;\n    }\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpc81ciztm: /tmp/tmpc81ciztm.cpp:33: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = 0;\n    int zero = 0;\n    for (auto it=l.begin();it!=l.end();it++){\n\
    \        n+=*it;\n        if (n==0){\n            zero+=*it;\n        }\n    }\n\
    \    return (n==zero);\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmppw9yx5if: /tmp/tmppw9yx5if.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long s = 0;\n    for (long i = 0; i < l.size(); ++i) {\n        s\
    \ = s + l[i];\n    }\n    int count = 0;\n    for (long i = 0; i < l.size(); ++i)\
    \ {\n        count += l[i] == 0 ? 1 : 0;\n    }\n    return count <= 2;\n}\nint\
    \ main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpwuhmznv5: /tmp/tmpwuhmznv5.cpp:29: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long sum = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        sum += l[i];\n    }\n    return sum == 0;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpanw2sez1: /tmp/tmpanw2sez1.cpp:29: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  int n = l.size();\n  long long int sum = 0;\n  for (int i = 0; i < n;\
    \ i++) {\n    sum += l[i];\n  }\n  for (int i = 0; i < n; i++) {\n    for (int\
    \ j = i; j < n; j++) {\n      if (l[i] + l[j] == 0) {\n        l.erase(l.begin()\
    \ + i);\n        l.erase(l.begin() + j);\n        return true;\n      }\n    }\n\
    \  }\n  return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n\tint n = l.size();\n\tlong int sum = 0;\n\tlong int pair = 0;\n\tint\
    \ i;\n\tstd::sort(l.begin(), l.end());\n\tfor(i = 0; i < n - 1; i++) {\n\t\tpair\
    \ += l[i];\n\t\tif(pair > 0) {\n\t\t\tsum += pair;\n\t\t\tpair = 0;\n\t\t}\n\t\
    }\n\tif(pair > 0) {\n\t\tsum += pair;\n\t\tpair = 0;\n\t}\n\treturn (sum == 0);\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp9hjejtkg: /tmp/tmp9hjejtkg.cpp:38: int main(): Assertion `candidate((std::vector<long>({1,
    3, -2, 1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124246
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int a = 0;\n    long long int b = 0;\n    for (size_t i\
    \ = 0; i < l.size(); i++) {\n        if (l[i] < 0)\n            i += 1;\n    \
    \    a = a + l[i];\n        b = b + l[i];\n    }\n    return (b - a == 0);\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpsohd2rb9: /tmp/tmpsohd2rb9.cpp:29: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  // your code goes here\n  std::sort(l.begin(), l.end());\n  int n1 =\
    \ 0, n2 = 0;\n  for (int i : l) {\n    if (n1 == n2) {\n      if (i != n1) {\n\
    \        return false;\n      }\n      n1 = n1 + 1;\n    } else {\n      if (i\
    \ == n1 + n2) {\n        return true;\n      }\n      n2 = n2 + 1;\n    }\n  }\n\
    \  return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n \
    \   assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpmdcz2vb2: /tmp/tmpmdcz2vb2.cpp:37: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::sort(l.begin(), l.end());\n    long long sum = 0;\n    for (long\
    \ i = 0; i < l.size(); ++i) {\n        sum += l[i];\n    }\n    if (sum < 0)\n\
    \        return false;\n    long long curr = 0, next = 0;\n    for (size_t i =\
    \ 0; i < l.size(); ++i) {\n        curr += l[i];\n        next = curr - next;\n\
    \        if (next == 0) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpkphd99ts: /tmp/tmpkphd99ts.cpp:36: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long sum = 0;\n    long long count = 0;\n    for (auto i : l) {\n\
    \        sum += i;\n        count += 1;\n    }\n    return count == 2;\n}\nint\
    \ main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpeec9fz94: /tmp/tmpeec9fz94.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    if (n <= 2) {\n        return false;\n    }\n\
    \    long k = l.back();\n    for (int i = 1; i < n; i++) {\n        k = k + l[i];\n\
    \        if (k == 0) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmph19ikjmn: /tmp/tmph19ikjmn.cpp:35: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    int len = l.size();\n    for(int i =\
    \ 0; i < len - 1; i++) {\n        for(int j = i + 1; j < len; j++) {\n       \
    \     if(l[i] + l[j] == 0) {\n                return true;\n            }\n  \
    \      }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    int k = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        k += l[i];\n        if (k >= 0) {\n            k -= l[i];\n     \
    \       if (k == 0) return true;\n        }\n    }\n    return false;\n}\nint\
    \ main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp4c0e2gro: /tmp/tmp4c0e2gro.cpp:30: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum=0;\n    for(int i=0;i<l.size();i++) {\n        sum+=l[i];\n\
    \    }\n    \n    if(sum==0) return true;\n    return false;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpks8f4dja: /tmp/tmpks8f4dja.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    std::vector<long> v(n);\n    for (long &i :\
    \ v) {\n        i = l[n-1];\n    }\n    \n    long sum = 0;\n    int cnt = 0;\n\
    \    for (long &i : v) {\n        if (i != 0) {\n            sum += i;\n     \
    \       cnt++;\n        }\n    }\n\n    if (cnt == 2) {\n        return true;\n\
    \    }\n    \n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpkn2cpc1u: /tmp/tmpkn2cpc1u.cpp:43: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Your code goes here!\n    long long int sum = 0;\n    for(long\
    \ long int i : l){\n        if(i != 0){\n            sum += i;\n        }\n  \
    \      if(sum == 0){\n            return true;\n        }\n        sum -= i;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp2b5m98k5: /tmp/tmp2b5m98k5.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here.\n    long long sum = 0;\n    for (long i\
    \ = 0; i < l.size(); i++) {\n        sum += l[i];\n    }\n    if (sum == 0)\n\
    \        return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpp5km689n: /tmp/tmpp5km689n.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    int m = 0;\n    for (int i = 0; i<n; i++) {\n\
    \        for (int j = i+1; j<n; j++) {\n            m += l[i] + l[j];\n      \
    \      if (m == 0) {\n                return true;\n            }\n        }\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpfi20kfxj: /tmp/tmpfi20kfxj.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    \n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp3f8z_yb6: /tmp/tmp3f8z_yb6.cpp:22: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124246
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    int sum = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        sum += l[i];\n    }\n    for (int i = 0; i < n; i++) {\n        sum\
    \ += -l[i];\n    }\n    return sum == 0;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp6wew10vd: /tmp/tmp6wew10vd.cpp:29: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int sum = 0;\n    for (auto i : l) {\n        sum += i;\n    }\n \
    \   long long int count = 0;\n    for (auto i : l) {\n        count += 1;\n  \
    \      if (sum == 0) {\n            if (count == 2) {\n                return\
    \ true;\n            }\n            count = 1;\n            sum = -i;\n      \
    \  } else if (sum > 0) {\n            count += 1;\n            sum -= i;\n   \
    \     }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp27x9v4aq: /tmp/tmp27x9v4aq.cpp:42: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() <= 1)\n        return false;\n    long long a = 0;\n\
    \    long long b = 0;\n    for (long long i : l) {\n        a += i;\n        b\
    \ += i;\n        if (b == 0)\n            return false;\n    }\n    return a ==\
    \ 0;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpac2j9qjo: /tmp/tmpac2j9qjo.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long a=0;\n    long long b=-1;\n    for(long long i=0;i<l.size();i++){\n\
    \        a+=l[i];\n        b+=l[i];\n        if(a>=0){\n            a=b-a;\n \
    \       }\n    }\n    if(l[0]>=0){\n        if(l[1]==0){\n            return true;\n\
    \        }\n        return false;\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpid0nkw72: /tmp/tmpid0nkw72.cpp:39: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  // Complete this function\n  // write your code here\n  std::vector<long>\
    \ a;\n  std::vector<long> b;\n  for (auto iter1 = l.begin(); iter1 != l.end();\
    \ ++iter1)\n    if (*iter1 > *(l.end() - 1))\n      a.push_back(*iter1);\n  for\
    \ (auto iter2 = l.begin(); iter2 != l.end(); ++iter2)\n    if (*iter2 > *(l.end()\
    \ - 1))\n      b.push_back(*iter2);\n  bool b1 = false;\n  for (int i = 0; i <\
    \ a.size(); i++) {\n    if (b.size() == 0 || b[b.size() - 1] + a[i] != 0) {\n\
    \      b1 = false;\n      b[b.size() - 1] = a[i];\n    } else {\n      b1 = true;\n\
    \    }\n  }\n  return b1;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpo8nd7j29: /tmp/tmpo8nd7j29.cpp:43: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // your code here\n    long sum = 0;\n    for (size_t i = 0; i < l.size();\
    \ i++) {\n        sum += l[i];\n    }\n    for (size_t i = 0; i < l.size(); i++)\
    \ {\n        sum -= l[i];\n        if (sum == 0)\n            return true;\n \
    \   }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpol2jsrhi: /tmp/tmpol2jsrhi.cpp:31: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  for (int i = 0; i < l.size() - 1; ++i) {\n    for (int j = i + 1; j\
    \ < l.size(); ++j) {\n      if (l[i] + l[j] == 0) {\n        return true;\n  \
    \    }\n    }\n  }\n  return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660124245
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  for (long i = 0; i < l.size(); i++)\n    for (long j = i + 1; j < l.size();\
    \ j++)\n      if (l[i] + l[j] == 0)\n        return true;\n  return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); ++i) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpx7wz079w: /tmp/tmpx7wz079w.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  std::unordered_set<long> hash;\n  for (long e : l)\n    hash.insert(e);\n\
    \  if (hash.size() < 2) return true;\n  long s = 0, t = 1;\n  for (long e : l)\n\
    \    s -= e;\n  if (s > 0) return false;\n  for (long e : l)\n    t += e;\n  if\
    \ (t != 0) return false;\n  long d = 0;\n  while (!hash.empty()) {\n    if (hash.find(d\
    \ % 2) != hash.end()) break;\n    d++;\n  }\n  return s == 0 || t == 0;\n}\nint\
    \ main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpabb6mvyg: /tmp/tmpabb6mvyg.cpp:40: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n\tint N = l.size();\n\tlong sum = 0;\n\tfor (int i = 0; i < N; ++i) {\n\
    \t\tsum += l[i];\n\t}\n\tfor (int i = 0; i < N; ++i) {\n\t\tsum += l[i];\n\t\t\
    if (sum < 0) sum = 0;\n\t\tfor (int j = i + 1; j < N; ++j) {\n\t\t\tif (sum -\
    \ l[i] + l[j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmppi8s6qyu: /tmp/tmppi8s6qyu.cpp:38: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    int m = n/2;\n    long sum = 0;\n    long zero\
    \ = 0;\n    for(int i=0;i<m;i++)\n    {\n        sum += l[i];\n    }\n    if((sum-zero)==0)\n\
    \        return true;\n    else return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp_wlpayvn: /tmp/tmp_wlpayvn.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    sort(l.begin(), l.end());\n    int zero = 0;\n    int counter = 0;\n\
    \    for (int i = 0; i < l.size(); i++) {\n        zero += l[i];\n        if (zero\
    \ >= 2) {\n            counter++;\n            zero -= 2;\n        }\n    }\n\
    \    if (counter == 0) {\n        return true;\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp70lduavs: /tmp/tmp70lduavs.cpp:37: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124245
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long sum = 0;\n    for (long i : l) {\n        sum += i;\n    }\n\
    \    return l.size() == 2 && l.at(l.size() - 1) == 0 && l.at(l.size() - 2) ==\
    \ sum;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpydq4w9fw: /tmp/tmpydq4w9fw.cpp:28: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124244
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    if(l.size()==1&&l[0]==0)\n        return\
    \ false;\n    int n=l.size();\n    int count=0;\n    for(int i=0;i<n;i++)\n  \
    \  {\n        if(l[i]==0)\n        {\n            count++;\n        }\n      \
    \  else\n        {\n            for(int j=i;j<n;j++)\n            {\n        \
    \        if(l[i]+l[j]==0)\n                {\n                    count++;\n \
    \                   break;\n                }\n            }\n        }\n    }\n\
    \    return count==2;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmphc0njypz: /tmp/tmphc0njypz.cpp:47: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124247
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i : l) {\n        sum += i;\n  \
    \  }\n    bool res = sum == 0;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpxyrhqs5c: /tmp/tmpxyrhqs5c.cpp:29: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124247
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // sort the list to get the two elements that sum to zero\n    sort(l.begin(),\
    \ l.end());\n    if (l.size() > 1) {\n        // two distinct elements in the\
    \ list that sum to zero\n        long k = 0;\n        long l = 0;\n        long\
    \ s = 0;\n        // find out the smallest and largest elements in the list\n\
    \        for (long i = 0; i < l.size(); i++) {\n            l = l[i];\n      \
    \      s = k;\n            k = i;\n        }\n        // now compare the two\n\
    \        for (long i = 1; i < l.size(); i++) {\n            if (k + l == s) {\n\
    \                return true;\n            }\n            if (l[k] > l[l]) {\n\
    \                k++;\n            } else {\n                l++;\n          \
    \  }\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_qjay69i.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp_qjay69i.cpp:25:32: error: request for member \u2018size\u2019\
    \ in \u2018l\u2019, which is of non-class type \u2018long int\u2019\n   25 | \
    \        for (long i = 0; i < l.size(); i++) {\n      |                      \
    \          ^~~~\n/tmp/tmp_qjay69i.cpp:26:20: error: invalid types \u2018long int[long\
    \ int]\u2019 for array subscript\n   26 |             l = l[i];\n      |     \
    \               ^\n/tmp/tmp_qjay69i.cpp:31:32: error: request for member \u2018\
    size\u2019 in \u2018l\u2019, which is of non-class type \u2018long int\u2019\n\
    \   31 |         for (long i = 1; i < l.size(); i++) {\n      |              \
    \                  ^~~~\n/tmp/tmp_qjay69i.cpp:35:20: error: invalid types \u2018\
    long int[long int]\u2019 for array subscript\n   35 |             if (l[k] > l[l])\
    \ {\n      |                    ^\n/tmp/tmp_qjay69i.cpp:35:27: error: invalid\
    \ types \u2018long int[long int]\u2019 for array subscript\n   35 |          \
    \   if (l[k] > l[l]) {\n      |                           ^\n"
  stdout: ''
  timestamp: 1660124247
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long long sum = 0;\n    int sum_index = 0;\n\
    \    for (int i = 0; i < n - 1; i++) {\n        if (l[i] + l[i+1] != 0) {\n  \
    \          sum = l[i] + l[i+1];\n            sum_index = i;\n        }\n    }\n\
    \    \n    if (sum == 0) {\n        return true;\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpfmpa9zgc: /tmp/tmpfmpa9zgc.cpp:37: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // code here\n    long long num = 0;\n    bool first = true;\n   \
    \ bool last = true;\n    for (long i = 0; i < l.size(); i++) {\n        num =\
    \ l[i] + num;\n        if (num <= 0) {\n            if (!first) {\n          \
    \      return false;\n            }\n            if (last) {\n               \
    \ return true;\n            }\n            last = true;\n        } else {\n  \
    \          if (!last) {\n                return false;\n            }\n      \
    \      if (first) {\n                first = false;\n            }\n         \
    \   num = num - l[i];\n            if (num < 0) {\n                return false;\n\
    \            }\n            last = false;\n        }\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp1wlsyprm: /tmp/tmp1wlsyprm.cpp:52: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::vector<std::pair<long, long> > p(l.size());\n    for(size_t i\
    \ = 0; i < l.size(); ++i)\n        p[i].first = l[i];\n    for(size_t i = 0; i\
    \ < l.size() - 1; ++i) {\n        for(size_t j = i + 1; j < l.size(); ++j) {\n\
    \            assert(p[i].first > p[j].first);\n            assert(p[i].second\
    \ < p[j].second);\n            if(p[i].second - p[j].second == 0)\n          \
    \      return true;\n        }\n    }\n    return false;\n}\nint main() {\n  \
    \  auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp0tp1jmn1: /tmp/tmp0tp1jmn1.cpp:22: bool pairs_sum_to_zero(std::vector<long
    int>): Assertion `p[i].first > p[j].first'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::unordered_map<long, long> m;\n    for(long i=0;i<l.size();++i)\n\
    \        m.insert(std::make_pair(l[i], i));\n    for(auto it=m.begin();it!=m.end();++it)\
    \ {\n        long left=it->first, right=it->second;\n        for(long i=0;i<l.size();++i)\
    \ {\n            if(l[i]<left) continue;\n            if(l[i]>right) break;\n\
    \            long m=l[i]+left; l[i]=m;\n            long n=l[i]+right; l[i]=n;\n\
    \            long tmp=left;\n            left=right;\n            right=tmp;\n\
    \            tmp=m;\n            m=n;\n            n=tmp;\n            tmp=left;\n\
    \            left=right;\n            right=tmp;\n            tmp=m;\n       \
    \     m=n;\n            n=tmp;\n            tmp=left;\n            left=right;\n\
    \            right=tmp;\n            tmp=m;\n            m=n;\n            n=tmp;\n\
    \            tmp=left;\n            left=right;\n            right=tmp;\n    \
    \        tmp=m;\n            m=n;\n            n=tmp;\n            tmp=left;\n\
    \            left=right;\n            right=tmp;\n            tmp=m;\n       \
    \     m=n;\n            n=tmp;\n        }\n        if(left==right) return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpovp4y24l: /tmp/tmpovp4y24l.cpp:64: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  long long int sum = 0;\n  for(long long int i : l) {\n    sum = sum\
    \ + i;\n  }\n  for(long long int i : l) {\n    if(i != 0) {\n      sum = sum -\
    \ i;\n      if(sum != 0) {\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpwfuvrfuk: /tmp/tmpwfuvrfuk.cpp:33: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() < 2) {\n        return false;\n    }\n    long s = 0;\n\
    \    for (long i : l) {\n        s = s + i;\n    }\n    std::vector<long> vec;\n\
    \    for (long i : l) {\n        if (i == 0) {\n            return false;\n  \
    \      }\n        if (i % 2 == 1) {\n            vec.push_back(i);\n        }\n\
    \    }\n    bool result = true;\n    for (size_t i = 0; i < vec.size(); i++) {\n\
    \        result += vec[i] == 0;\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpq4jbbv71: /tmp/tmpq4jbbv71.cpp:42: int main(): Assertion `candidate((std::vector<long>({1,
    3, -2, 1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() < 2) return false;\n    auto first = std::find_if_not(l.begin(),\
    \ l.end(), [](long x) { return x < 0; });\n    auto last = std::find_if_not(l.begin(),\
    \ l.end(), [](long x) { return x > 0; });\n    if (first == l.end()) return false;\n\
    \    if (last == l.end()) return true;\n    long sum = 0;\n    while (first !=\
    \ last) {\n        sum += *first;\n        first++;\n    }\n    return sum ==\
    \ 0;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpfz0v46pv: /tmp/tmpfz0v46pv.cpp:33: int main(): Assertion `candidate((std::vector<long>({1,
    2, 3, 7}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    // Two zeros is possible\n    int count = 0;\n\
    \    long ans = 0;\n    // loop through all elements in the list\n    for (int\
    \ i = 0; i < n; i++) {\n        ans += l[i];\n        count += 1;\n    }\n\n \
    \   if (count == 1) {\n        // if there are only two distinct elements that\
    \ sum to zero\n        return (ans == 0);\n    } else {\n        return false;\n\
    \    }\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpi6p6u9lq: /tmp/tmpi6p6u9lq.cpp:39: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i : l) {\n        sum += i;\n  \
    \  }\n    if (sum == 0) {\n        return false;\n    }\n    long long pairs =\
    \ l.size() - 1;\n    for (long i = 0; i < pairs; i++) {\n        long j = i +\
    \ 1;\n        while (j < pairs && j + 1 < pairs && l[j] == l[j + 1]) {\n     \
    \       ++j;\n        }\n        if (j - i > 1) {\n            if (l[i] == 0)\
    \ {\n                return false;\n            }\n            if (l[j] == 0)\
    \ {\n                return false;\n            }\n            if (l[i] + l[j]\
    \ == 0) {\n                return false;\n            }\n        }\n    }\n  \
    \  return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n  \
    \  assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpq0m9svm1: /tmp/tmpq0m9svm1.cpp:46: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long long sum = accumulate(l.begin(), l.end(), 0);\n    bool\
    \ result = (sum % 2 == 0) && (sum > 0);\n    return result;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmyciwyyn.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpmyciwyyn.cpp:17:15: error: \u2018long long long\u2019\
    \ is too long for GCC\n   17 |     long long long sum = accumulate(l.begin(),\
    \ l.end(), 0);\n      |               ^~~~\n"
  stdout: ''
  timestamp: 1660124247
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // unordered_map stores the pair as a key and the number as value.\n\
    \    std::unordered_map<long, long> m;\n    // for each pair in the list.\n  \
    \  for (long p : l) {\n        // if pair is in map, then the number in the map\
    \ is 1.\n        if (m.find(p) != m.end()) {\n            m[p] = 1;\n        }\n\
    \        // if pair is not in the map, add it to the map with number 1.\n    \
    \    else {\n            m[p] = 1;\n        }\n    }\n    // for each pair in\
    \ the map, check if the sum is zero\n    for (auto it = m.begin(); it != m.end();\
    \ ++it) {\n        if (it->second == 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpsx0fhrj1: /tmp/tmpsx0fhrj1.cpp:43: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  int n = l.size();\n  int s = 0;\n  for (int i = 0; i < n; i++) {\n \
    \   s += l[i];\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = i + 1;\
    \ j < n; j++) {\n      if (l[i] + l[j] == 0) {\n        return true;\n      }\n\
    \    }\n  }\n  return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660124247
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int N = l.size();\n    long long sum = 0;\n    long long sum2 = 0,\
    \ sum3 = 0;\n    for (long i = 0; i < N; i++) {\n        sum += l[i];\n      \
    \  sum2 += l[i];\n        sum3 += l[i];\n    }\n    if (sum == 0 && sum2 == 0\
    \ && sum3 == 0) {\n        return false;\n    }\n    for (long i = 0; i < N; i++)\
    \ {\n        if (sum != 0 && sum2 != 0 && sum3 != 0) {\n            sum += l[i];\n\
    \            sum2 += l[i];\n            sum3 += l[i];\n            if (sum ==\
    \ 0 && sum2 == 0 && sum3 == 0) {\n                return false;\n            }\n\
    \            if (sum > 0 && sum2 == 0 && sum3 > 0) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpskci2moh: /tmp/tmpskci2moh.cpp:45: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Your code here\n    int n = l.size();\n    for (int i = 0; i <\
    \ n; i++) {\n        int sum = 0;\n        for (int j = 0; j < n; j++) {\n   \
    \         sum+=l[j];\n            if (sum==0) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpm8g514k7: /tmp/tmpm8g514k7.cpp:35: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  std::sort(l.begin(), l.end());\n  auto first = l.begin();\n  auto last\
    \ = std::unique(l.begin(), l.end());\n  assert(last - first == l.size());\n  if\
    \ (last == l.end()) return false;\n  if (*first == 0) {\n    auto i = first;\n\
    \    ++i;\n    for (; i != last; ++i)\n      if (*i != 0)\n        return false;\n\
    \  } else {\n    ++first;\n    for (; first != last; ++first) {\n      if (*first\
    \ != 0) {\n        auto i = first;\n        ++i;\n        for (; i != last; ++i)\n\
    \          if (*i != 0)\n            return false;\n      }\n    }\n  }\n  return\
    \ true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp89vr6uk0: /tmp/tmp89vr6uk0.cpp:20: bool pairs_sum_to_zero(std::vector<long
    int>): Assertion `last - first == l.size()'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    for (auto it = l.begin(); it != l.end(); it++) {\n        long first\
    \ = *it;\n        long second = 0;\n        for (auto it2 = l.begin(); it2 !=\
    \ l.end(); it2++) {\n            long sum = (*it) + second;\n            second\
    \ = (*it2);\n            if (sum == 0)\n                return true;\n       \
    \     if (sum != first && sum != second)\n                return false;\n    \
    \    }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmptz66_cts: /tmp/tmptz66_cts.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long sum = 0;\n    for(long i = 0; i < n; i++)\n\
    \        sum += l[i];\n    if(sum == 0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmphtruv84j: /tmp/tmphtruv84j.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::sort(l.begin(), l.end());\n    int sum = 0;\n    int n = l.size();\n\
    \    for (int i = 0; i < n; ++i) {\n        sum += l[i];\n        if (sum > 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpj95pfjqd: /tmp/tmpj95pfjqd.cpp:33: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long n = l.size();\n    for (long\
    \ long i = 0; i < n; i++) {\n        for (long long j = i + 1; j < n; j++) {\n\
    \            if (l[i] + l[j] == 0) return true;\n        }\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  sort(l.begin(), l.end());\n  long long ans = 0;\n  long long sum = 0;\n\
    \  for (size_t i = 0; i < l.size(); i++) {\n    sum += l[i];\n    if (sum == 0)\
    \ {\n      ans += i;\n      sum = 0;\n    }\n  }\n  if (ans < l.size() / 2)\n\
    \    return false;\n  return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp6c3a1z9j: /tmp/tmp6c3a1z9j.cpp:34: int main(): Assertion `candidate((std::vector<long>({1,
    3, -2, 1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::sort(l.begin(), l.end());\n    long long ans = 0;\n    for(long\
    \ i = 0; i < l.size(); i++) {\n        ans += l[i];\n        ans %= 100000000;\n\
    \        if(ans == 0) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpr7bq8raj: /tmp/tmpr7bq8raj.cpp:30: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long s = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        s += l[i];\n    }\n\n    long long maxsum = (long long)0;\n\n    for\
    \ (long long i = 0; i < l.size(); i++) {\n        maxsum = std::max(maxsum, s\
    \ - l[i]);\n    }\n\n    return maxsum == 0;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp5njp_2cu: /tmp/tmp5njp_2cu.cpp:35: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n\tlong long s = 0;\n\tfor (long long i : l) {\n\t\ts += i;\n\t}\n\tlong\
    \ long ans = 0;\n\tfor (int i = 0; i < l.size(); i++) {\n\t\tif (abs(l[i]) ==\
    \ s) {\n\t\t\tif (l[i] != 0) {\n\t\t\t\tans = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ (ans == 0);\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpch0dquex: /tmp/tmpch0dquex.cpp:33: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n\tlong int sum = 0, max = 0, min = l[0], tmp = 0;\n\tfor (auto i : l)\
    \ {\n\t\tsum += i;\n\t\tif (sum > max) {\n\t\t\tmax = sum;\n\t\t} else if (sum\
    \ < min) {\n\t\t\tmin = sum;\n\t\t}\n\t\ttmp += i;\n\t}\n\tif (max != 0 && min\
    \ != 0) {\n\t\tfor (auto i : l) {\n\t\t\ttmp -= i;\n\t\t\tif (tmp != 0) {\n\t\t\
    \t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpq5pxsv03: /tmp/tmpq5pxsv03.cpp:43: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  int n = l.size();\n  for (int i = 0; i < n; i++) {\n    for (int j =\
    \ i + 1; j < n; j++) {\n      if (l[i] + l[j] == 0)\n        return true;\n  \
    \  }\n  }\n  return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::sort(l.begin(), l.end());\n    int n = l.size();\n    if (n ==\
    \ 0) return true;\n    if (n == 1) return false;\n    long a = l[0], b = l[0],\
    \ c = l[0];\n    for (int i = 1; i < n; i++) {\n        if (l[i] < 0) {\n    \
    \        std::swap(a, b);\n            std::swap(c, l[i]);\n        }\n    }\n\
    \    // now we have a = -(c+b) and c = b-a\n    if (c < 0 || b < 0) return false;\n\
    \    if (b == 0) return true;\n    a = b + c;\n    c = b - a;\n    return (c ==\
    \ 0 && a);\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpxvjpsrib: /tmp/tmpxvjpsrib.cpp:37: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Your code here\n    long long int sum = 0;\n    long long int n\
    \ = l.size();\n    for (int i=0; i<n; i++) {\n        sum += l[i];\n    }\n  \
    \  bool flag = false;\n    for (int i=0; i<n; i++) {\n        for (int j=i+1;\
    \ j<n; j++) {\n            if (sum==0) {\n                flag = true;\n     \
    \           break;\n            }\n            else if (sum<0) {\n           \
    \     flag = false;\n                break;\n            }\n            else {\n\
    \                sum += l[j];\n            }\n        }\n    }\n    return flag;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp7jc88084: /tmp/tmp7jc88084.cpp:46: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  int n = (int)l.size();\n  // sort the list by descending value\n  std::sort(l.begin(),\
    \ l.end(), std::greater<long>());\n  int res = 0;\n  long long sum = 0;\n  for\
    \ (int i = 0; i < n; i++) {\n    sum += l[i];\n    if (sum != 0) {\n      for\
    \ (int j = 0; j < n; j++) {\n        if (i != j && sum + l[j] == 0) {\n      \
    \    return true;\n        }\n      }\n    }\n  }\n  return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpkuab_u1b: /tmp/tmpkuab_u1b.cpp:39: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    long long int sum = 0;\n    for (long\
    \ long int i = 0; i < n; i++) {\n        sum = sum + l[i];\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    for (long long int i = 1; i < n;\
    \ i++) {\n        if (sum != 0) {\n            long long int d = l[i] - l[i -\
    \ 1];\n            if (d == 0) {\n                return true;\n            }\n\
    \            if (sum + d < 0) {\n                return false;\n            }\n\
    \            sum = sum + d;\n        }\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp4il3u4gk: /tmp/tmp4il3u4gk.cpp:44: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Your code here\n    std::set<long> s;\n    for (auto n : l) {\n\
    \        auto it = s.find(n);\n        if (it == s.end()) {\n            s.insert(n);\n\
    \            continue;\n        }\n        if (it->second != 0) {\n          \
    \  return false;\n        }\n        s.erase(it);\n    }\n    return true;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmph4gsxc5s.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmph4gsxc5s.cpp:25:17: error: request for member \u2018second\u2019\
    \ in \u2018* it.std::_Rb_tree_const_iterator<long int>::operator->()\u2019, which\
    \ is of non-class type \u2018const long int\u2019\n   25 |         if (it->second\
    \ != 0) {\n      |                 ^~~~~~\n"
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  std::set<long> s(std::begin(l), std::end(l));\n  for (std::set<long>::iterator\
    \ itr = s.begin(); itr != s.end(); itr++) {\n    if (s.count(*itr) != 1) {\n \
    \     return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpxrwcct_t: /tmp/tmpxrwcct_t.cpp:27: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::vector<std::pair<long, long> > temp;\n    for (long &e : l)\n\
    \        temp.push_back(std::make_pair(e, 0));\n\n    std::sort(temp.begin(),\
    \ temp.end());\n\n    for (long &e : temp) {\n        if (e == temp[0]) {\n  \
    \          if (e != temp[1])\n                return false;\n        } else {\n\
    \            if (e != temp[1] + temp[0]) return false;\n        }\n    }\n   \
    \ return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n   \
    \ assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmptdnk026y.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmptdnk026y.cpp:23:20: error: invalid initialization of reference\
    \ of type \u2018long int&\u2019 from expression of type \u2018std::pair<long int,\
    \ long int>\u2019\n   23 |     for (long &e : temp) {\n      |               \
    \     ^~~~\n/tmp/tmptdnk026y.cpp:24:15: error: no match for \u2018operator==\u2019\
    \ (operand types are \u2018long int\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<std::pair<long\
    \ int, long int> >, std::pair<long int, long int> >::value_type\u2019 {aka \u2018\
    std::pair<long int, long int>\u2019})\n   24 |         if (e == temp[0]) {\nIn\
    \ file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmptdnk026y.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmptdnk026y.cpp:24:24:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018long int\u2019\n   24 |         if (e == temp[0]) {\n      |     \
    \                   ^\nIn file included from /usr/include/c++/9/regex:62,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmptdnk026y.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmptdnk026y.cpp:24:"
  stdout: ''
  timestamp: 1660124247
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here.\n    \n    return l.size() > 0 && l[0] ==\
    \ 0;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpl7bm_5ar: /tmp/tmpl7bm_5ar.cpp:26: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n <= 1) return false;\n    long\
    \ long int x = l[0], y = l[1], sum = 0, i = 0;\n    while (i < n) {\n        sum\
    \ += l[i];\n        i++;\n    }\n    while (i < n) {\n        sum += l[i];\n \
    \       if (sum == 0) return false;\n        i++;\n    }\n    return true;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpru_eimh5: /tmp/tmpru_eimh5.cpp:33: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  int n = l.size();\n  if (n == 0) return false;\n  std::set<int> s;\n\
    \  for (long i : l) {\n    s.insert(i);\n  }\n  long sum = 0;\n  for (int i =\
    \ 0; i < n; ++i) {\n    sum += l[i];\n  }\n  for (int i = 0; i < n; ++i) {\n \
    \   if (s.find(sum) != s.end()) return true;\n    sum += l[i];\n  }\n  return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpag436ss0: /tmp/tmpag436ss0.cpp:36: int main(): Assertion `candidate((std::vector<long>({1,
    3, -2, 1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  long long int sum = 0;\n  for (long long int i : l) {\n    sum += i;\n\
    \  }\n  if (sum == 0)\n    return true;\n  if (l.size() == 1)\n    return false;\n\
    \  long long int left_sum = sum - l[0];\n  if (left_sum == 0)\n    return false;\n\
    \  std::vector<std::pair<long, long> > r;\n  for (long long int i : l) {\n   \
    \ long long int right_sum = sum - i;\n    if (right_sum == 0)\n      return true;\n\
    \    long long int difference = right_sum - left_sum;\n    if (difference == 0)\n\
    \      continue;\n    if (difference < 0)\n      difference = - difference;\n\
    \    r.push_back(std::make_pair(i, difference));\n  }\n  assert(std::all_of(r.begin(),\
    \ r.end(), [](const std::pair<long, long> &x){return x.second == 0;}));\n  return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpzc_2xtz7: /tmp/tmpzc_2xtz7.cpp:40: bool pairs_sum_to_zero(std::vector<long
    int>): Assertion `std::all_of(r.begin(), r.end(), [](const std::pair<long, long>
    &x){return x.second == 0;})'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long s = 0;\n    for (int i = 0; i < l.size() - 1; i++) {\n      \
    \  s += l[i];\n        if (s == 0)\n            return false;\n    }\n    if (s\
    \ == 0)\n        return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp27v_uaik: /tmp/tmp27v_uaik.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int flag;\n    for(int i=0; i<(int)l.size(); i++){\n        flag =\
    \ 1;\n        for(int j=0; j<(int)l.size();j++){\n            if(l[i]+l[j]==0){\n\
    \                flag = 0;\n            }\n        }\n        if(flag){\n    \
    \        return false;\n        }\n    }\n    return true;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp72iwzhlt: /tmp/tmp72iwzhlt.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::sort(l.begin(), l.end());\n    std::pair<long, long> p1 = *std::max_element(l.begin(),\
    \ l.end());\n    long p2 = p1;\n    long sum = 0;\n    for (long i = 1; i < l.size();\
    \ i++) {\n        sum += l[i];\n        if (sum != 0) {\n            if (p2.first\
    \ > sum)\n                return false;\n            p2 = std::make_pair(sum,\
    \ i);\n            sum = 0;\n        } else {\n            sum += l[i];\n    \
    \    }\n    }\n    if (sum != 0) {\n        if (p2.first > sum)\n            return\
    \ false;\n        p2 = std::make_pair(sum, l.size());\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp__08d9dv.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp__08d9dv.cpp:18:32: error: conversion from \u2018long\
    \ int\u2019 to non-scalar type \u2018std::pair<long int, long int>\u2019 requested\n\
    \   18 |     std::pair<long, long> p1 = *std::max_element(l.begin(), l.end());\n\
    \      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp__08d9dv.cpp:19:15: error: cannot convert \u2018std::pair<long int, long\
    \ int>\u2019 to \u2018long int\u2019 in initialization\n   19 |     long p2 =\
    \ p1;\n      |               ^~\n      |               |\n      |            \
    \   std::pair<long int, long int>\n/tmp/tmp__08d9dv.cpp:24:20: error: request\
    \ for member \u2018first\u2019 in \u2018p2\u2019, which is of non-class type \u2018\
    long int\u2019\n   24 |             if (p2.first > sum)\n      |             \
    \       ^~~~~\n/tmp/tmp__08d9dv.cpp:26:32: error: cannot convert \u2018std::pair<long\
    \ int, long int>\u2019 to \u2018long int\u2019 in assignment\n   26 |        \
    \     p2 = std::make_pair(sum, i);\n      |                  ~~~~~~~~~~~~~~^~~~~~~~\n\
    \      |                                |\n      |                           \
    \     std::pair<long int, long int>\n/tmp/tmp__08d9dv.cpp:33:16: error: request\
    \ for member \u2018first\u2019 in \u2018p2\u2019, which is of non-class type \u2018\
    long int\u2019\n   33 |         if (p2.first > sum)\n      |                ^~~~~\n\
    /tmp/tmp__08d9dv.cpp:35:28: error: cannot convert \u2018std::pair<long int, long\
    \ unsigned int>\u2019 to \u2018long int\u2019 in assignment\n   35 |         p2\
    \ = std::make_pair(sum, l.size());\n      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n\
    \      |                            |\n      |                            std::pair<long\
    \ int, long unsigned int>\n"
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  long sum = 0;\n  for (long i : l) {\n    sum += i;\n    if (sum == 0)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmprhtawig5: /tmp/tmprhtawig5.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long int sum = 0;\n    bool result = true;\n    for (auto i: l) {\n\
    \        sum += i;\n        if (sum < 0) {\n            sum = 0;\n        }\n\
    \    }\n    for (auto i: l) {\n        sum += i;\n        if (sum == 0) {\n  \
    \          result = false;\n            break;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpjrk6e9gb: /tmp/tmpjrk6e9gb.cpp:36: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here\n    \n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmphnhiirp1: /tmp/tmphnhiirp1.cpp:22: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  long n = l.size();\n  long dp[n + 1][n + 1];\n  dp[0][0] = 0;\n  for\
    \ (long i = 1; i <= n; i++) {\n    dp[i][0] = 1;\n  }\n  for (long i = 1; i <=\
    \ n; i++) {\n    for (long j = 1; j <= n; j++) {\n      if (i - j >= 0 && i -\
    \ j < n && j - i < n && j - i >= 0) {\n        dp[i][j] = dp[i - 1][j] + dp[i][j\
    \ - 1];\n      } else if (i - j > 0) {\n        dp[i][j] = dp[i][j - 2] > 0;\n\
    \      } else if (j - i < 0) {\n        dp[i][j] = dp[i - 1][j] > 0;\n      }\n\
    \    }\n  }\n  return dp[1][n] > 0;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpsjqtijaj: /tmp/tmpsjqtijaj.cpp:38: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long s = 0;\n    for (long long i : l) {\n        s += i;\n \
    \   }\n    for (long long i : l) {\n        if (i != 0 && i != s &&\n        \
    \    i != std::abs(s - i)) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n  \
    \  assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpnv6fueau: /tmp/tmpnv6fueau.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // sort the list\n    std::sort(l.begin(), l.end());\n    // find\
    \ two numbers that sum up to zero\n    long long int first = l[0], second = l[1],\
    \ pos = 2;\n    while (pos < l.size() && first + l[pos] == second) {\n       \
    \ first = l[pos];\n        second = l[pos + 1];\n        pos += 2;\n    }\n  \
    \  // if there are two distinct elements, then return False\n    if (pos == l.size()\
    \ - 1) {\n        return false;\n    }\n    // otherwise return True\n    return\
    \ true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpbnreho2c: /tmp/tmpbnreho2c.cpp:35: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() == 0) {\n        return false;\n    }\n    long ans =\
    \ 0;\n    bool flag = false;\n    int size = l.size();\n    std::vector<long>\
    \ d(size);\n    long temp = 0;\n    long sum = 0;\n    for (long i = 0; i < size;\
    \ ++i) {\n        sum += l[i];\n        if (sum == 0) {\n            ans = i;\n\
    \            flag = true;\n        }\n        d[i] = l[i];\n    }\n    temp =\
    \ sum - ans;\n    int a = 0, b = size - 1;\n    while (a < b) {\n        long\
    \ mid = (a + b) / 2;\n        if (temp < d[mid]) {\n            a = mid + 1;\n\
    \        } else if (temp > d[mid]) {\n            b = mid - 1;\n        } else\
    \ {\n            break;\n        }\n    }\n    if (a > b) {\n        return false;\n\
    \    } else {\n        if (flag) {\n            std::vector<long> vec;\n     \
    \       long x = ans - sum;\n            for (long i = 0; i < size; i++) {\n \
    \               vec.push_back(d[i]);\n            }\n            vec.push_back(x);\n\
    \            bool flag2 = false;\n            for (long i = 0; i < size; i++)\
    \ {\n                if (vec[i] == vec[i + 1]) {\n                    flag2 =\
    \ true;\n                    break;\n                }\n            }\n      \
    \      if (flag2) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp8k75o6z0: /tmp/tmp8k75o6z0.cpp:72: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); ++i) {\n\
    \        sum += l[i];\n    }\n    if (sum < 0)\n        sum = -sum;\n    long\
    \ long pairs = 0;\n    long long diff = 0;\n    for (long long i = 0; i < l.size();\
    \ ++i) {\n        diff += l[i];\n        if (sum == diff)\n            pairs++;\n\
    \    }\n    if (pairs == 2)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpn0275wrn: /tmp/tmpn0275wrn.cpp:36: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n\
    \    }\n    if (l.size() == 0) {\n        return false;\n    }\n    long long\
    \ sum2 = 0;\n    for (long i = 0; i < l.size(); i++) {\n        sum2 += l[i];\n\
    \        if (sum2 < 0) {\n            return false;\n        }\n    }\n    long\
    \ long zeros = 0;\n    for (long i = 0; i < l.size(); i++) {\n        zeros +=\
    \ l[i] - sum - sum2;\n        if (zeros == 0) {\n            return true;\n  \
    \      }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp6itmny7c: /tmp/tmp6itmny7c.cpp:48: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    sort(l.begin(), l.end());\n    int len = l.size();\n    long sum =\
    \ 0;\n    for (int i = 0; i < len; i++) {\n        sum += l[i];\n        if (sum\
    \ < 0) {\n            return false;\n        }\n        if (sum > 0) {\n     \
    \       break;\n        }\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp4habouze: /tmp/tmp4habouze.cpp:33: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124250
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // code here\n    int n = l.size();\n    int count = 0;\n    for(int\
    \ i = 0; i < n; i++){\n        for(int j = 0; j < n; j++){\n            if(i !=\
    \ j){\n                if(l[i] + l[j] == 0){\n                    count += 1;\n\
    \                    if(count == 2){\n                        return true;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n \
    \   assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660124250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long sum = 0;\n    long j = 0;\n    for(j=0;\
    \ j<l.size(); j++)\n        sum += l[j];\n    for(j=0; j<l.size(); j++)\n    \
    \    if(sum == 0)\n            return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpm6njuyvx: /tmp/tmpm6njuyvx.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  std::sort(l.begin(), l.end());\n  int n = l.size();\n  for (int i =\
    \ 1; i < n; ++i) {\n    for (int j = 0; j < i; ++j) {\n      if (l[j] + l[i] !=\
    \ 0) {\n        std::cout << l[j] << \", \" << l[i] << \"\\n\"; // print two elements\
    \ if they sum to zero.\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp2bzfw7vg: /tmp/tmp2bzfw7vg.cpp:31: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    auto it = l.begin();\n    auto it2 = l.begin();\n    auto it3 = l.begin();\n\
    \    long sum = 0;\n    long sum_of_zeros = 0;\n    while (it != l.end()) {\n\
    \        sum += *it;\n        sum_of_zeros += *it2;\n        it++;\n        it2++;\n\
    \    }\n    while (it2 != l.end()) {\n        sum += *it2;\n        sum_of_zeros\
    \ += *it3;\n        it2++;\n        it3++;\n    }\n    if (sum == 0) {\n     \
    \   return true;\n    }\n    else if (sum < 0) {\n        return false;\n    }\n\
    \    long sum_of_negatives = sum_of_zeros;\n    bool flag = true;\n    if (sum_of_negatives\
    \ == 0) {\n        return true;\n    }\n    else {\n        it3 = l.end();\n \
    \       it3--;\n        while (it3 != l.begin()) {\n            sum += *it3;\n\
    \            sum_of_negatives -= *it2;\n            it2++;\n            it3--;\n\
    \        }\n        while (flag && sum_of_negatives != 0) {\n            if (sum_of_negatives\
    \ < 0) {\n                sum_of_negatives = 0;\n                flag = false;\n\
    \            }\n            else {\n                sum_of_negatives -= *it3;\n\
    \                it3--;\n            }\n        }\n    }\n    return flag;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp7be1wv58: /tmp/tmp7be1wv58.cpp:72: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  std::sort(l.begin(), l.end());\n  long s = 0;\n  for (int i = 0; i <\
    \ l.size(); i++) {\n    s += l[i];\n    if (s == 0) {\n      return true;\n  \
    \  }\n  }\n  return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpl4z6agz5: /tmp/tmpl4z6agz5.cpp:29: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    bool result = {true};\n    long long sum = 0;\n    for(int i = 0;\
    \ i< l.size(); i++)\n    {\n        sum += l[i];\n        if(sum == 0)\n     \
    \   {\n            result = false;\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpyplzx7ho: /tmp/tmpyplzx7ho.cpp:31: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    long long count = 0;\n    for (int i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > 0)\n            sum += l[i];\n    \
    \    if (sum < 0) {\n            sum += i;\n            count++;\n        }\n\
    \    }\n    return count >= 2;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp8mnj33__: /tmp/tmp8mnj33__.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  std::unordered_map<long, long> pairs(l.size());\n  long zero = 0;\n\
    \  for (long i : l) {\n    pairs[i] = i;\n    zero += i;\n  }\n  long maxVal =\
    \ pairs.at(0) + pairs.at(l.size() - 1);\n  for (auto pair : pairs) {\n    if (pair.second\
    \ < -maxVal) return false;\n  }\n  return true;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpt6nkxxls: /tmp/tmpt6nkxxls.cpp:31: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (auto i : l) {\n        sum += i;\n\
    \    }\n\n    int left = 0, right = 0;\n    for (auto i : l) {\n        int tmp\
    \ = sum - i;\n        sum += tmp;\n        if (sum == 0) {\n            return\
    \ false;\n        }\n        if (sum < 0) {\n            sum += i;\n         \
    \   left++;\n        }\n        if (sum > 0) {\n            sum += i;\n      \
    \      right++;\n        }\n    }\n\n    return left == right || left > right;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpklf3cwxw: /tmp/tmpklf3cwxw.cpp:46: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int N=l.size();\n    for(int i=0;i<N;i++)\n    {\n        for(int\
    \ j=i+1;j<N;j++)\n        {\n            if(l[i]+l[j] == 0)\n                return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660124251
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    // use unordered_set to keep track of\n   \
    \ // unique elements, keep track of indexes\n    std::unordered_set<long> s;\n\
    \    std::vector<int> p;\n    int i = 0;\n    long cur = l[0];\n    bool res =\
    \ false;\n    // check for duplicates\n    if (s.size() >= n) {\n        for (size_t\
    \ j = 0; j < i; j++) {\n            if (s.find(l[j]) != s.end()) {\n         \
    \       res = true;\n                break;\n            }\n        }\n    }\n\
    \    else res = true;\n    // if there are no duplicates, check for pairs\n  \
    \  if (res == true) {\n        long sum = 0;\n        for (size_t j = 0; j < i;\
    \ j++) {\n            sum += l[j];\n        }\n        if (sum == 0) {\n     \
    \       for (size_t j = 0; j < i; j++) {\n                if (l[j] < 0) {\n  \
    \                  p.push_back(j);\n                }\n            }\n       \
    \     if (p.size() >= 2) {\n                s = std::unordered_set<long>();\n\
    \                p.clear();\n                i = 0;\n                cur = l[i];\n\
    \                // check for duplicates\n                if (s.size() >= n) {\n\
    \                    for (size_t j = 0; j < i; j++) {\n                      \
    \  if (s.find(l[j]) != s.end()) {\n                            res = true;\n \
    \                           break;\n                        }\n              \
    \      }\n                }\n                else res = true;\n              \
    \  // if there are no duplicates, check for pairs\n                if (res ==\
    \ true) {\n                    for (size_t j = 0; j < i; j++) {\n            \
    \            sum += l[j];\n                    }\n                    if (sum\
    \ == 0) {\n                        for (size_t j = 0; j < i; j++) {\n        \
    \                    if (l[j] < 0) {\n                                p.push_back(j);\n\
    \                            }\n                        }\n                  \
    \      if (p.size() >= 2) {\n                            s = std::unordered_set<long>();\n\
    \                            p.clear();\n                            i = 0;\n\
    \                            cur = l[i];\n                            // check\
    \ for duplicates\n                            if (s.size() >= n) {\n         \
    \                       for (size_t j = 0; j < i; j++) {\n                   \
    \                 if (s.find(l[j]) != s.end()) {\n                           \
    \             res = true;\n                                        break;\n  \
    \                                  }\n                                }\n    \
    \                        }\n                            else res = true;\n   \
    \                         // if there are no duplicates, check for pairs\n   \
    \                         if (res == true) {\n                               \
    \ for (size_t j = 0; j < i; j++) {\n                                    sum +=\
    \ l[j];\n                                }\n                                if\
    \ (sum == 0) {\n                                    for (size_t j = 0; j < i;\
    \ j++) {\n                                        if (l[j] < 0) {\n          \
    \                                  p.push_back(j);\n                         \
    \               }\n                                    }\n                   \
    \                 if (p.size() >= 2) {\n                                     \
    \   s = std::unordered_set<long>();\n                                        p.clear();\n\
    \                                        i = 0;\n                            \
    \            cur = l[i];\n                                        // check for\
    \ duplicates\n                                        if (s.size() >= n) {\n \
    \                                           for (size_t j = 0; j < i; j++) {\n\
    \                                                if (s.find(l[j]) != s.end())\
    \ {\n                                                    res = true;\n       \
    \                                             break;\n                       \
    \                         }\n                                            }\n \
    \                                       }\n                                  \
    \      else res = true;\n                                        // if there are\
    \ no \n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpry9j0snt.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpry9j0snt.cpp:116:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  116 | int main() {\n      |     \
    \       ^\n/tmp/tmpry9j0snt.cpp:127:1: error: expected \u2018}\u2019 at end of\
    \ input\n  127 | }\n      | ^\n/tmp/tmpry9j0snt.cpp:93:47: note: to match this\
    \ \u2018{\u2019\n   93 |                                 if (sum == 0) {\n   \
    \   |                                               ^\n/tmp/tmpry9j0snt.cpp:127:1:\
    \ error: expected \u2018}\u2019 at end of input\n  127 | }\n      | ^\n/tmp/tmpry9j0snt.cpp:89:46:\
    \ note: to match this \u2018{\u2019\n   89 |                             if (res\
    \ == true) {\n      |                                              ^\n/tmp/tmpry9j0snt.cpp:127:1:\
    \ error: expected \u2018}\u2019 at end of input\n  127 | }\n      | ^\n/tmp/tmpry9j0snt.cpp:73:44:\
    \ note: to match this \u2018{\u2019\n   73 |                         if (p.size()\
    \ >= 2) {\n      |                                            ^\n/tmp/tmpry9j0snt.cpp:127:1:\
    \ error: expected \u2018}\u2019 at end of input\n  127 | }\n      | ^\n/tmp/tmpry9j0snt.cpp:67:35:\
    \ note: to match this \u2018{\u2019\n   67 |                     if (sum == 0)\
    \ {\n      |                                   ^\n/tmp/tmpry9j0snt.cpp:127:1:\
    \ error: expected \u2018}\u2019 at end of input\n  127 | }\n      | ^\n/tmp/tmpry9j0snt.cpp:63:34:\
    \ note: to match this \u2018{\u2019\n   63 |                 if (res == true)\
    \ {\n      |                                  ^\n/tmp/tmpry9j0snt.cpp:127:1: error:\
    \ expected \u2018}\u2019 at end of input\n  127 | }\n      | ^\n/tmp/tmpry9j0snt.cpp:47:32:\
    \ note: to match this \u2018{\u2019\n   47 |             if (p.size() >= 2) {\n\
    \      |                                ^\n/tmp/tmpry9j0snt.cpp:127:1: error:\
    \ expected \u2018}\u2019 at end of input\n  127 | }\n      | ^\n/tmp/tmpry9j0snt.cpp:41:23:\
    \ note: to match this \u2018{\u2019\n   41 |         if (sum == 0) {\n      |\
    \                       ^\n/tmp/tmpry9j0snt.cpp:127:1: error: expected \u2018\
    }\u2019 at end of input\n  127 | }\n      | ^\n/tmp/tmpry9j0snt.cpp:36:22: note:\
    \ to match this \u2018{\u2019\n   36 |     if (res "
  stdout: ''
  timestamp: 1660124250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum=0;\n    long long int n=l.size();\n    long long\
    \ int m=0;\n    for(long long int i=0; i<n; i++) {\n        sum = sum + l[i];\n\
    \        if (sum > 0) {\n            m++;\n            sum = sum - l[i];\n   \
    \     }\n    }\n    if (m == 2)\n        return true;\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpmx2vwb66: /tmp/tmpmx2vwb66.cpp:34: int main(): Assertion `candidate((std::vector<long>({1,
    3, -2, 1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here\n    std::sort(l.begin(), l.end());\n    long\
    \ temp=0;\n    long sum = 0;\n    for(std::vector<long>::iterator it = l.begin();it!=l.end();it++){\n\
    \        temp = *it;\n        sum += temp;\n        if(sum == 0){\n          \
    \  return true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmprcwytajc: /tmp/tmprcwytajc.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  if (l.size() <= 2)\n    return true;\n\n  int i, j, k;\n  long n1, n2;\n\
    \  long count = 0;\n  for (i = 0; i < l.size(); i++) {\n    count = 1;\n    for\
    \ (j = i + 1; j < l.size(); j++) {\n      n1 = l[i];\n      n2 = l[j];\n     \
    \ k = 0;\n      while (k < j - i) {\n        k = k + 1;\n        if (n1 + n2 !=\
    \ 0) {\n          if (n1 + n2 == 0) {\n            if (count == j) {\n       \
    \       return true;\n            }\n            count--;\n          } else if\
    \ (n2 == 0) {\n            if (count == i) {\n              return true;\n   \
    \         }\n            count--;\n          } else {\n            if (count +\
    \ k == j) {\n              return true;\n            }\n          }\n        }\n\
    \      }\n    }\n  }\n  return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpangrw3le: /tmp/tmpangrw3le.cpp:55: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  std::sort(l.begin(), l.end());\n  long sum = 0;\n  for (long i : l)\n\
    \    sum += i;\n  long count = 0;\n  bool flag = false;\n  for (long i : l) {\n\
    \    if (i == 0)\n      continue;\n    count += 1;\n    if (sum == 0)\n      flag\
    \ = true;\n    if (sum < 0) {\n      if (i == count - 1) {\n        sum = 0;\n\
    \        break;\n      }\n      if (count > 1 && i == count - 2)\n        sum\
    \ += 1;\n    }\n    sum += i;\n  }\n  return flag;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp7edubkm0: /tmp/tmp7edubkm0.cpp:46: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum < 0) sum = 0;\n    long long zero = 0;\n\
    \    for (long i = 0; i < l.size(); i++) {\n        zero += l[i];\n    }\n   \
    \ return sum == zero;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpoffp1oa2: /tmp/tmpoffp1oa2.cpp:30: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long s = 0;\n    for (long i : l) {\n        s += i;\n    }\n    long\
    \ k = 0;\n    for (long i : l) {\n        k -= i;\n        if (k == 0) {\n   \
    \         return true;\n        }\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpzfso51va: /tmp/tmpzfso51va.cpp:35: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (int i = 0; i < l.size(); i++) {\n   \
    \     sum += l[i];\n    }\n    if (sum == 0)\n        return false;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        long long tmp_sum = sum;\n        sum -=\
    \ l[i];\n        if (tmp_sum == 0) {\n            return true;\n        }\n  \
    \  }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpl6kd_kil: /tmp/tmpl6kd_kil.cpp:34: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    long long int i = 0;\n    for (i = 0;\
    \ i < l.size(); i++)\n        sum += l[i];\n    for (i = 0; i < l.size() - 1;\
    \ i++)\n        if (sum > 0)\n            return false;\n    return true;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpsblpt356: /tmp/tmpsblpt356.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() < 2) {\n        return false;\n    }\n    int ans = 0;\n\
    \    long k = 0;\n    for (int i = 0; i < (int)l.size(); ++i) {\n        ans +=\
    \ l[i];\n    }\n    for (int i = 0; i < (int)l.size(); ++i) {\n        k = k -\
    \ l[i];\n        if (k != 0) {\n            if (ans != 0) {\n                return\
    \ false;\n            }\n            ans = k;\n        }\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpsqb67va0: /tmp/tmpsqb67va0.cpp:41: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  // Sort the vector in ascending order.\n  std::sort(l.begin(), l.end());\n\
    \n  // Two zeros sum to zero.\n  std::vector<bool> results(l.size(), false);\n\
    \n  // Two adjacent numbers differ by exactly one.\n  size_t count_one_diff =\
    \ 1;\n\n  for (size_t i = 0; i < l.size(); ++i) {\n    // If the current element\
    \ of the vector is zero.\n    if (l[i] == 0) {\n      // Return false if the previous\
    \ element of the vector is zero.\n      if (results[i - 1]) {\n        return\
    \ false;\n      }\n      results[i] = true;\n      continue;\n    }\n    // Otherwise,\
    \ loop through each adjacent element of the vector.\n    for (size_t j = i; j\
    \ < l.size(); ++j) {\n      if (l[j] == 0) {\n        // If adjacent elements\
    \ are not equal\n        if (l[i] != l[j]) {\n          // Return false if adjacent\
    \ elements are not equal.\n          return false;\n        }\n        // Otherwise,\
    \ if the current element of the vector is different from\n        // the previous\
    \ element of the vector.\n      } else if (results[j - 1]) {\n        // If previous\
    \ element of the vector is zero\n        if (l[j] != l[i]) {\n          // Return\
    \ false if the current element of the vector is not zero.\n          return false;\n\
    \        }\n        // Otherwise, count the number of distinct elements that are\n\
    \        // equal from the current element to the previous element of the vector.\n\
    \      } else {\n        // If adjacent elements are equal.\n        if (l[j]\
    \ == l[i]) {\n          // If adjacent elements are not equal to each other.\n\
    \          if (l[j] != l[i]) {\n            // Return false if the current element\
    \ of the vector is equal to the\n            // previous element of the vector.\n\
    \            return false;\n          }\n          // Otherwise, increase the\
    \ number of distinct elements that are\n          // equal.\n          count_one_diff\
    \ += 2;\n        }\n      }\n      // Finally, set the results of the current\
    \ element of the vector to true.\n      results[j] = true;\n    }\n  }\n  return\
    \ count_one_diff == 2;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // TODO: use a map instead?\n    for (auto e : l) {\n        long\
    \ long x = 0;\n        for (auto e : l) {\n            x += e;\n        }\n  \
    \      if (x >= 0) {\n            return true;\n        }\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmplswd84gb: /tmp/tmplswd84gb.cpp:31: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // your code goes here\n    int N = l.size();\n    if (N == 0)\n \
    \       return true;\n    if (N == 1)\n        return false;\n    int sum = 0;\n\
    \    int *A = new int[N];\n    std::iota(A, A + N, 0);\n    for (long i = 0; i\
    \ < N; i++)\n        sum += A[i];\n    if (sum % 2 != 0)\n        return false;\n\
    \    for (int i = 0; i < N; i++) {\n        if (A[i] == 0)\n            continue;\n\
    \        for (int j = i; j < N; j++)\n            if (A[j] == 0)\n           \
    \     break;\n        if (j - i + 1 == 0)\n            return false;\n    }\n\
    \    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpt53yzh0y.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpt53yzh0y.cpp:36:13: error: \u2018j\u2019 was not declared\
    \ in this scope\n   36 |         if (j - i + 1 == 0)\n      |             ^\n"
  stdout: ''
  timestamp: 1660124250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    if (n == 0 || n != (int)std::sqrt(n))\n   \
    \     return false;\n    int m = 0;\n    int s = n * (n + 1) / 2;\n    for (int\
    \ i = 0; i < n - 1; i++) {\n        long a = l[i];\n        long b = l[i + 1];\n\
    \        if ((a * a + b * b) == 0) {\n            m += 1;\n        } else {\n\
    \            break;\n        }\n    }\n    return (m >= 2);\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpb_qgpvbg: /tmp/tmpb_qgpvbg.cpp:38: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int pair_count = 0;\n    int sum = 0;\n    long pair;\n    for (int\
    \ i = 0; i < l.size(); i++) {\n        pair = l[i] + l[(i + 1) % l.size()];\n\
    \        sum = sum + pair;\n        if (sum == 0) {\n            pair_count++;\n\
    \            if (pair_count == 2) {\n                return true;\n          \
    \  }\n        }\n        sum -= pair;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpsgizsr1p: /tmp/tmpsgizsr1p.cpp:38: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() < 2) return false;\n    long long sum = 0, min;\n   \
    \ min = l[0];\n    for (long long i : l) {\n        if (i != min) return false;\n\
    \        sum += i;\n        if (sum < min) return false;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp_rweehwc: /tmp/tmp_rweehwc.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n        long long s = 0;\n        for (long long i : l) {\n          \
    \      s += i;\n        }\n        if (s > 0) {\n                for (long long\
    \ i = 0; i < l.size(); i++) {\n                        s += l[i];\n          \
    \              if (s > 0)\n                                return false;\n   \
    \             }\n                return true;\n        }\n        return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpg1viqi6s: /tmp/tmpg1viqi6s.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    int m = n;\n    int sum = 0;\n    for (int\
    \ i = 0; i < n - 1; i++) {\n        sum += l[i];\n        for (int j = i + 1;\
    \ j < n; j++) {\n            if (l[j] >= sum - l[i]) {\n                m = j;\n\
    \                sum = l[j];\n            }\n        }\n    }\n    return (m !=\
    \ n && sum == 0);\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp3_0bfg56: /tmp/tmp3_0bfg56.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  if (l.size() <= 1) return false;\n  int sum = 0;\n  for (int i = 0;\
    \ i < l.size(); ++i)\n    sum += l[i];\n  if (sum == 0) return false;\n  int first\
    \ = -1, last = -1, index = -1;\n  for (int i = 0; i < l.size(); ++i) {\n    long\
    \ cur = l[i];\n    if (first == -1) first = i;\n    if (cur != 0 && cur - l[first]\
    \ == sum && cur < sum) {\n      index = i;\n      last = first;\n      sum = cur;\n\
    \    } else if (cur > sum) {\n      last = -1;\n      sum = 0;\n    }\n  }\n \
    \ if (index >= 0) {\n    l[index] = -l[index];\n    return true;\n  }\n  return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpx1_x4e76: /tmp/tmpx1_x4e76.cpp:46: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Initialize an empty set\n    std::set<long> s;\n    // Iterate\
    \ through the list checking each pair\n    for (long i = 0; i != l.size(); ++i)\
    \ {\n        for (long j = i + 1; j != l.size(); ++j) {\n            // If i and\
    \ j don't share an element, add it to the set\n            if (s.find(l[i] + l[j])\
    \ == s.end()) {\n                s.insert(l[i] + l[j]);\n            }\n     \
    \   }\n    }\n    // If all the elements are the exact same value then return\
    \ True\n    if (s.size() == 1) {\n        return true;\n    } else {\n       \
    \ return false;\n    }\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpbdc_09lw: /tmp/tmpbdc_09lw.cpp:40: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  long long ans = 0;\n  long long sum = 0;\n  for (auto e : l) {\n   \
    \ sum = sum + e;\n    if (sum == 0) {\n      ans = true;\n      break;\n    }\n\
    \  }\n  return ans;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpkf4wmjlz: /tmp/tmpkf4wmjlz.cpp:33: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  long long int answer = 0;\n  // for each element in l, calculate the\
    \ sum of all the elements\n  // with that element\n  for(long long int elem: l)\
    \ {\n    answer += elem;\n  }\n  for(long long int i = 1; i < l.size(); i++) {\n\
    \    if (l[i] - l[i-1] != 0) {\n      return false;\n    }\n  }\n  return true;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp_foqrb_z: /tmp/tmp_foqrb_z.cpp:35: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long a = l[0], b = l[0], c = l[0], d = l[0];\n\
    \    int k = 0;\n    for (int i = 0; i < n; i++) {\n        b = l[i];\n      \
    \  if (b - a != 0) {\n            c = a + b - k;\n            d = c > 0 ? l[k]\
    \ : l[k + 1];\n            if (l[k] > d - c && d > c - l[k]) {\n             \
    \   return false;\n            }\n            a = b;\n            k = i + 1;\n\
    \        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp64rtcf80: /tmp/tmp64rtcf80.cpp:37: int main(): Assertion `candidate((std::vector<long>({1,
    3, -2, 1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long long sum = 0;\n    for (int i = 0; i <\
    \ n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (l[i] +\
    \ l[j] == 0)\n                return false;\n        }\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpcztleva2: /tmp/tmpcztleva2.cpp:29: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() < 2) {\n        return false;\n    }\n    std::unordered_set<long>\
    \ s;\n    long long a = 0;\n    for (auto x : l) {\n        if (s.find(x) == s.end())\
    \ {\n            s.insert(x);\n            a += x;\n        } else {\n       \
    \     a -= x;\n        }\n    }\n    return a == 0;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpxjxibie9: /tmp/tmpxjxibie9.cpp:37: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124252
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long sum = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        sum += l[i];\n        if (sum < 0)\n            return false;\n \
    \   }\n    for (int i = 0; i < n - 1; i++) {\n        if (l[i] == l[i + 1] &&\
    \ sum > 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp30s4wjrh: /tmp/tmp30s4wjrh.cpp:33: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    auto it = l.begin();\n    std::pair<long,\
    \ long> current_pair(it++, it);\n    long difference = *current_pair.second -\
    \ *current_pair.first;\n    if (difference == 0) return false;\n    return true;\
    \ // or return current_pair.first != l.begin()\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv09xagvf.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpv09xagvf.cpp:19:48: error: no matching function for call\
    \ to \u2018std::pair<long int, long int>::pair(__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >, __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >&)\u2019\n   19 |     std::pair<long, long> current_pair(it++, it);\n\
    \      |                                                ^\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:64,\n                 from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpv09xagvf.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:436:9:\
    \ note: candidate: \u2018template<class ... _Args1, long unsigned int ..._Indexes1,\
    \ class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1\
    \ ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2\
    \ ...>)\u2019\n  436 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,\n  \
    \    |         ^~~~\n/usr/include/c++/9/bits/stl_pair.h:436:9: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpv09xagvf.cpp:19:48: note: \
    \  \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int> >\u2019\
    \ is not derived from \u2018std::tuple<_Tps ...>\u2019\n   19 |     std::pair<long,\
    \ long> current_pair(it++, it);\n      |                                     \
    \           ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpv09xagvf.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:375:9:\
    \ note: candidate: \u2018template<class ... _Args1, class ... _Args2> std::pair<_T1,\
    \ _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2\
    \ ...>)\u2019\n  375 |         pair(piecewi"
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int res = 0;\n    for (auto i : l) {\n        res += i;\n\
    \    }\n    for (int i = 1; i <= res / 2; i++) {\n        if (res % i == 0) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpwdkvsjsg: /tmp/tmpwdkvsjsg.cpp:33: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  long long sum = 0;\n  for (long i : l) {\n    sum += i;\n  }\n  std::unordered_set<long\
    \ long> sums(l.begin(), l.end());\n  return sums.size() == 1 &&\n         (std::find(sums.begin(),\
    \ sums.end(), sum) != sums.end()); // return if element already in the sums\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpuh1qezio: /tmp/tmpuh1qezio.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124252
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    // Two sums of zero are equal if we have equal\
    \ sums equal and different sums\n    // are different - and of equal sums are\
    \ different if we have different sums\n    // equal.\n    for (int i = 0; i <\
    \ n; ++i) {\n        for (int j = i + 1; j < n; ++j) {\n            if (l[i] +\
    \ l[j] == 0)\n                return true;\n            if (l[i] + l[j] != 0)\n\
    \                return false;\n        }\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpbs40xgb5: /tmp/tmpbs40xgb5.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124252
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  std::pair<std::vector<long>, std::vector<long>> pairs;\n  for (long\
    \ i = 0; i < l.size() - 1; i++)\n    for (long j = i + 1; j < l.size(); j++)\n\
    \      if (l[i] + l[j] == 0)\n        pairs.first = std::vector<long> { l[i],\
    \ l[j] };\n      else\n        pairs.second.push_back(l[i]);\n  return pairs.first.size()\
    \ == 2 &&\n         (pairs.second[0] == 0 || pairs.second[1] == 0);\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpg62ejh36: /tmp/tmpg62ejh36.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124252
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() < 2) return false;\n    auto first_element = l.begin();\n\
    \    auto second_element = l.begin() + 1;\n    auto sum = std::accumulate(first_element,\
    \ second_element, 0);\n    return sum == 0;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp6jjzw9p3: /tmp/tmp6jjzw9p3.cpp:28: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  std::sort(l.begin(), l.end());\n  int n = l.size();\n  int ln = *std::max_element(l.begin(),\
    \ l.end());\n  if (ln <= 0) return false;\n  for (int i = 1; i < n; ++i) {\n \
    \   int left = l[i - 1];\n    int right = l[i];\n    int sum = left + right;\n\
    \    if (sum == 0) return false;\n    else l[i] = sum;\n  }\n  return true;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpssc60hsi: /tmp/tmpssc60hsi.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    \n    // Initialize two pointers i and j \n    long i = 0, j = 0;\n\
    \    \n    // Check two elements if they sum to zero \n    while (i != l.size()\
    \ - 1 && j != l.size() - 1 &&\n            abs(l[i] + l[j]) == 0) \n    { \n \
    \       i = i + 1; \n        j = j + 1; \n    } \n\n    // Check if they sum to\
    \ zero \n    return (i != l.size() - 1 && j != l.size() - 1); \n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmphncpj19e: /tmp/tmphncpj19e.cpp:34: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::map<long, long> m;\n    for (auto e : l) {\n        m[e] = m[e]\
    \ + 1 || 1;\n    }\n    return m.size() >= 2;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpwd6t9h3s: /tmp/tmpwd6t9h3s.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Create a boolean array where pairs of elements with the same sum\
    \ are\n    // set to True\n    std::vector<bool> bv(l.size());\n    std::iota(bv.begin(),\
    \ bv.end(), false);\n\n    // Traverse through the list to sum the elements\n\
    \    long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n        // Add\
    \ the current element to the sum\n        sum += l[i];\n        // If there is\
    \ a pair with the same sum as the current sum, set the\n        // flag to True\n\
    \        if (bv[i - 1]) {\n            bv[i] = true;\n        }\n    }\n\n   \
    \ // Check if there are two distinct elements whose sum sums to zero\n    if (bv[bv.size()\
    \ - 1]) {\n        std::cout << \"Yes\" << std::endl;\n    } else {\n        std::cout\
    \ << \"No\" << std::endl;\n    }\n\n    // Return True/False\n    return bv[bv.size()\
    \ - 1];\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/numeric:62,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:84,\n               \
    \  from /tmp/tmpfh12z_n1.cpp:2:\n/usr/include/c++/9/bits/stl_numeric.h: In instantiation\
    \ of \u2018void std::iota(_ForwardIterator, _ForwardIterator, _Tp) [with _ForwardIterator\
    \ = std::_Bit_iterator; _Tp = bool]\u2019:\n/tmp/tmpfh12z_n1.cpp:20:42:   required\
    \ from here\n/usr/include/c++/9/bits/stl_numeric.h:99:4: error: use of an operand\
    \ of type \u2018bool\u2019 in \u2018operator++\u2019 is forbidden in C++17\n \
    \  99 |    ++__value;\n      |    ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660124252
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() < 2)\n        return false;\n    long long k = 1;\n \
    \   for (long long i = 0; i < l.size(); i++) {\n        k += l[i];\n        if\
    \ (k > 0) {\n            long long j = i + 1;\n            for (long long j =\
    \ 0; j < l.size(); j++)\n                k -= l[j];\n            if (k == 0)\n\
    \                return true;\n        }\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpl4tbocde: /tmp/tmpl4tbocde.cpp:37: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n\tlong long sum = 0;\n\tlong long count = 0;\n\tfor (long i = 0; i < l.size();\
    \ i++) {\n\t\tsum += l[i];\n\t\tcount++;\n\t}\n\tif (sum == 0) {\n\t\treturn count\
    \ == 2;\n\t} else {\n\t\treturn false;\n\t}\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmphquxfj2i: /tmp/tmphquxfj2i.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  long long int s = 0, t = 0;\n  for(long long int i : l) {\n    s +=\
    \ i;\n    t += i;\n  }\n  return s == 0 && t == 0;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpp7ibeb6g: /tmp/tmpp7ibeb6g.cpp:29: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long total = 0;\n    long long currSum = 0;\n    for(long long\
    \ i = 0; i < l.size(); i++) {\n        total += l[i];\n        currSum += l[i];\n\
    \        if(currSum == 0 && i != 0) {\n            return true;\n        }\n \
    \   }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpecrpryhx: /tmp/tmpecrpryhx.cpp:33: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  for (auto it : l) {\n    for (auto jt = it; jt != 0; --jt) {\n     \
    \ if (l.count(jt) > 1) {\n        return false;\n      }\n    }\n  }\n  return\
    \ true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwwv_qt5c.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpwwv_qt5c.cpp:19:13: error: \u2018class std::vector<long\
    \ int>\u2019 has no member named \u2018count\u2019\n   19 |       if (l.count(jt)\
    \ > 1) {\n      |             ^~~~~\n"
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here.\n    long sum = 0;\n    for (long i = l.size();\
    \ i > 1; i--) {\n        sum += l.at(i-1);\n        if (sum < 0) {\n         \
    \   return false;\n        }\n        long second = l.at(i-2);\n        if (second\
    \ < 0) {\n            return false;\n        }\n        if (sum + second == 0)\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp_e5uvph_: /tmp/tmp_e5uvph_.cpp:39: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    if (n == 0)\n        return true;\n    int\
    \ m = n / 2;\n    std::vector<long> a = l[n - 1];\n    std::vector<long> b = l[m];\n\
    \    std::vector<bool> d(m, false);\n    long curr = a[0] + b[0];\n    for (int\
    \ i = 1; i <= m; i++) {\n        curr = a[i] + b[i] - curr;\n        d[i] = (curr\
    \ == 0) ? true : false;\n    }\n    for (int i = m; i < n; i++) {\n        curr\
    \ = a[i] - b[i] - curr;\n        d[i] = (curr == 0) ? true : false;\n    }\n \
    \   for (int i = 0; i < m; i++) {\n        for (int j = i + 1; j < n; j++) {\n\
    \            if (d[i]) {\n                if (d[j]) {\n                    return\
    \ false;\n                }\n            }\n        }\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpkqt2wv7x.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpkqt2wv7x.cpp:21:34: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019} to non-scalar type\
    \ \u2018std::vector<long int>\u2019 requested\n   21 |     std::vector<long> a\
    \ = l[n - 1];\n      |                                  ^\n/tmp/tmpkqt2wv7x.cpp:22:30:\
    \ error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>,\
    \ long int>::value_type\u2019 {aka \u2018long int\u2019} to non-scalar type \u2018\
    std::vector<long int>\u2019 requested\n   22 |     std::vector<long> b = l[m];\n\
    \      |                              ^\n"
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0, tempSum = 0, temp = 0;\n    int size = l.size();\n\
    \    for (int i = 0; i < size; i++) {\n        temp = l[i];\n        tempSum +=\
    \ temp;\n        if (tempSum == 0) {\n            sum += temp;\n            if\
    \ (sum == 0) {\n                return true;\n            } else {\n         \
    \       return false;\n            }\n        }\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpva19waim: /tmp/tmpva19waim.cpp:38: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::sort(l.begin(), l.end());\n    int n = l.size();\n    int curr_sum\
    \ = 0;\n    for (long i = 0; i < n; ++i) {\n        curr_sum += l[i];\n      \
    \  if (curr_sum < 0)\n            return false;\n    }\n    return (n == 1 &&\
    \ curr_sum == 0);\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpq20du_nl: /tmp/tmpq20du_nl.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // your code here\n    int n = l.size();\n    int min[n];\n    for(int\
    \ i = 0; i < n; i++){\n        min[i] = INT_MAX;\n    }\n    for(int i = 0; i\
    \ < n; i++){\n        for(int j = 0; j < n; j++){\n            if(j != i && l[i]\
    \ + l[j] <= min[j]){\n                min[j] = l[i] + l[j];\n            }\n \
    \       }\n    }\n    if(min[0] == INT_MAX){\n        return false;\n    }else{\n\
    \        return true;\n    }\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpy13ved_u: /tmp/tmpy13ved_u.cpp:38: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here\n    long long count = 0;\n    long long min\
    \ = 0;\n    for (int i = 0; i < l.size(); i++) {\n        if(l[i] >= 0){\n   \
    \         count++;\n            if(min == 0){\n                min = l[i];\n \
    \           }\n            else if(l[i] != min){\n                return false;\n\
    \            }\n        }\n    }\n    if(count == 0){\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp0rpzorfn: /tmp/tmp0rpzorfn.cpp:41: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  int n = l.size();\n  // O(2n) time and O(2n) space\n  for (int i = 0;\
    \ i < n; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (l[i] + l[j]\
    \ == 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nint\
    \ main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n\tlong long total = 0;\n\tfor (auto& i : l) {\n\t\ttotal += i;\n\t}\n\n\
    \tstd::sort(l.begin(), l.end());\n\n\tfor (long long i = 1; i < total; ++i) {\n\
    \t\tif (l[i - 1] + l[i] == 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpa0yaxgnd: /tmp/tmpa0yaxgnd.cpp:34: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here.\n    int sum = 0;\n    for (int i = 0; i\
    \ < l.size(); i++)\n        for (int j = i; j < l.size(); j++)\n            sum\
    \ += l[i] + l[j];\n    for (int i = 0; i < l.size(); i++)\n        for (int j\
    \ = i; j < l.size(); j++)\n            if (l[i] + l[j] == 0)\n               \
    \ return true;\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpmyiu4y76: /tmp/tmpmyiu4y76.cpp:30: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::sort(l.begin(), l.end());\n    long a = l[0];\n    long b = l[1];\n\
    \    long c = l[2];\n    if (a * a + b * b == c * c) {\n        return false;\n\
    \    }\n    else {\n        return true;\n    }\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp0enb1z19: /tmp/tmp0enb1z19.cpp:30: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    std::vector<long> v(2*n);\n    \n    // fill\
    \ v with pairs of numbers and then find the pairs that sum up to zero.\n    //\
    \ each pair is represented by a pair of indices.\n    for (int i = 0; i < n; ++i)\
    \ {\n        v[2*i] = l[i];\n        v[2*i+1] = 0;\n    }\n    std::vector<int>\
    \ ind(2*n);\n    for (int i = 0; i < n; ++i) {\n        for (int j = 0; j < n;\
    \ ++j) {\n            if (i != j) {\n                if (v[2*i+1] + v[2*j] ==\
    \ 0) {\n                    ind[2*i+1] = j;\n                    ind[2*j] = i;\n\
    \                }\n            }\n        }\n    }\n    \n    // return True\
    \ if there are two distinct elements in the list that sum to\n    // zero, and\
    \ False otherwise.\n    return (2*ind[0] != 0 || 2*ind[1] != n);\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpdc4i8rcr: /tmp/tmpdc4i8rcr.cpp:44: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    sort(l.begin(), l.end());\n    int n = 0;\n    for (int i = 0; i <\
    \ l.size(); i++) {\n        for (int j = i + 1; j < l.size(); j++) {\n       \
    \     if (l[i] + l[j] == 0) {\n                return true;\n            }\n \
    \       }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660124253
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() <= 1)\n        return false;\n    int i = 0, j = 0, sum\
    \ = 0;\n    int k = (l.size() - 1);\n    while (i != k) {\n        while (j !=\
    \ k) {\n            if (l[i] + l[j] == 0) {\n                sum++;\n        \
    \        break;\n            }\n            j++;\n        }\n        i--;\n  \
    \  }\n    return (sum == 2);\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660124258
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  // Write your code here.\n  long long int sum = 0;\n  long long int\
    \ count = 0;\n  for (long long int i : l) {\n    if (i != 0) {\n      sum += i;\n\
    \      count++;\n    }\n  }\n  if (sum != 0) {\n    return false;\n  }\n  if (count\
    \ == l.size() - 1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpq919v9n_: /tmp/tmpq919v9n_.cpp:40: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int size = l.size();\n    long sum = 0;\n    for (int i = 0; i < size;\
    \ i++) {\n        sum += l[i];\n        if (sum != 0) {\n            long tempSum\
    \ = 0;\n            for (int j = i + 1; j < size; j++) {\n                if (l[j]\
    \ > 0) tempSum += l[j];\n            }\n            if (tempSum == sum) return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp1q1d5img: /tmp/tmp1q1d5img.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long max1 = 0, max2 = 0;\n    for (int i =\
    \ 0; i < n; i++) {\n        int cur_max1 = max1 + l[i];\n        int cur_max2\
    \ = max2 + l[i];\n        if (cur_max1 > cur_max2) {\n            max2 = cur_max2;\n\
    \        } else if (cur_max1 < cur_max2) {\n            max1 = cur_max1;\n   \
    \     } else {\n            return true;\n        }\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmptv9pxy_z: /tmp/tmptv9pxy_z.cpp:34: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    std::vector<std::pair<long, long> > result;\n\
    \    for(int i = 0; i < l.size(); i++) {\n        sum += l[i];\n        result.push_back(std::make_pair(sum,\
    \ l[i]));\n    }\n    return std::adjacent_find(result.begin(), result.end())\
    \ ==\n        result.end();\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpsn77hma6: /tmp/tmpsn77hma6.cpp:28: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::vector<std::pair<long, long>> res;\n    std::map<long, long>\
    \ m;\n    for(auto i:l) {\n        if(i!=0) {\n            long prev = m.find(i);\
    \ //find previous element in m\n            assert(prev != m.end());\n       \
    \     if(prev->second==i) {\n                return false;\n            }\n  \
    \          m[i] = prev->second;\n        }\n    }\n    for(auto &i:m) {\n    \
    \    if(!l.empty()) {\n            long prev=i; \n            for(auto j:l) {\n\
    \                if(j!=0) {\n                    if(prev==j) {\n             \
    \           return false;\n                    }\n                    prev = j;\n\
    \                }\n            }\n        }\n    }\n    return true;\n}\nint\
    \ main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcn0wqara.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpcn0wqara.cpp:21:31: error: cannot convert \u2018std::map<long\
    \ int, long int>::iterator\u2019 {aka \u2018std::_Rb_tree_iterator<std::pair<const\
    \ long int, long int> >\u2019} to \u2018long int\u2019 in initialization\n   21\
    \ |             long prev = m.find(i); //find previous element in m\n      | \
    \                        ~~~~~~^~~\n      |                               |\n\
    \      |                               std::map<long int, long int>::iterator\
    \ {aka std::_Rb_tree_iterator<std::pair<const long int, long int> >}\nIn file\
    \ included from /usr/include/c++/9/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcn0wqara.cpp:2:\n/tmp/tmpcn0wqara.cpp:22:25: error:\
    \ no match for \u2018operator!=\u2019 (operand types are \u2018long int\u2019\
    \ and \u2018std::map<long int, long int>::iterator\u2019 {aka \u2018std::_Rb_tree_iterator<std::pair<const\
    \ long int, long int> >\u2019})\n   22 |             assert(prev != m.end());\n\
    \      |                    ~~~~ ^~ ~~~~~~~\n      |                    |    \
    \        |\n      |                    long int     std::map<long int, long int>::iterator\
    \ {aka std::_Rb_tree_iterator<std::pair<const long int, long int> >}\nIn file\
    \ included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpcn0wqara.cpp:2:\n/usr/include/c++/9/bits/regex.h:1037:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator!=(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1037 |     operator!=(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1037:5: note:\
    \   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/9/cassert:44,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcn0wqara.cpp:2:\n/tmp/tmpcn0wqara.cpp:22:34: not"
  stdout: ''
  timestamp: 1660124253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  // Your code here\n  long sum = 0;\n  for (long i = 0; i != l.size();\
    \ i++) {\n    sum += l[i];\n    if (sum < 0) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmptknbfzg8: /tmp/tmptknbfzg8.cpp:29: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Initialize two integers to keep track of the first and the second\n\
    \    // elements of the array. Since there may be no two distinct elements, we\n\
    \    // initialize them to INT_MAX.\n    int ifirst = INT_MAX, isecond = INT_MAX;\n\
    \    // Initialize boolean variable to True as long as there are at least two\n\
    \    // distinct elements in the list.\n    bool bFirstDistinct = true;\n\n  \
    \  for (auto element : l) {\n        // If there are two elements in the list\
    \ that sum to zero, return True\n        // immediately.\n        if ((ifirst\
    \ != INT_MAX) && (isecond != INT_MAX) &&\n            (element == ifirst + isecond))\
    \ {\n            bFirstDistinct = false;\n            break;\n        }\n\n  \
    \      // If the first element in the list is different from the first element\n\
    \        // of the second list, then we know that there will be at least two distinct\n\
    \        // elements in the list.\n        if ((ifirst != INT_MAX) && (element\
    \ != ifirst)) {\n            bFirstDistinct = false;\n            break;\n   \
    \     }\n\n        // Set the first element of the array to the current element\
    \ and the\n        // second element of the array to the current element minus\
    \ the\n        // current element.\n        ifirst = element;\n        isecond\
    \ = element - isecond;\n    }\n\n    return bFirstDistinct;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpwczpl3q6: /tmp/tmpwczpl3q6.cpp:56: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  std::sort(l.begin(), l.end());\n  int k = 0;\n  for (int i = 0; i <\
    \ l.size() - 1; ++i) {\n    int j;\n    for (j = i + 1; j < l.size(); ++j) {\n\
    \      if (l[i] + l[j] == 0) {\n        if (k != j) {\n          return false;\n\
    \        }\n        ++k;\n      }\n    }\n  }\n  return k == 0;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpt0srb_7c: /tmp/tmpt0srb_7c.cpp:34: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  // Write your code here\n    for(long i = 1; i < l.size(); ++i)\n  \
    \  {\n        int j = i;\n        while(j > 0)\n        {\n            if(l[j]\
    \ - l[j - 1] != 0)\n            {\n                return false;\n           \
    \ }\n            j--;\n        }\n    }\n    return true;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp8uewbjh1: /tmp/tmp8uewbjh1.cpp:37: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    for (long i = 0; i < l.size() - 1; i++) {\n        for (long j = i\
    \ + 1; j < l.size(); j++) {\n            if (l[i] + l[j] == 0) {\n           \
    \     return true;\n            }\n        }\n    }\n    return false;\n}\nint\
    \ main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  long long int s = std::accumulate(l.begin(), l.end(), 0);\n  for (long\
    \ long int i = 1; i < s; ++i) {\n    for (long long int j = i + i; j < s; ++j)\
    \ {\n      if (l[i] + l[j] == 0)\n        return true;\n    }\n  }\n  return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpaf9qcdkp: /tmp/tmpaf9qcdkp.cpp:28: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() < 2) {\n        return false;\n    }\n    long first\
    \ = l[0];\n    for (long i = 1, j = l[1]; i <= j; i++, j--) {\n        if (i ==\
    \ j) {\n            continue;\n        }\n        if (i > j) {\n            return\
    \ false;\n        }\n        if (l[i] + l[j] != 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp93az8mv7: /tmp/tmp93az8mv7.cpp:39: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // your code goes here\n    std::vector<long> nums;\n    std::vector<bool>\
    \ visited;\n    for(long i=0;i<l.size();i++) {\n        if(!visited[l[i]]) {\n\
    \            nums.push_back(l[i]);\n            visited[l[i]] = true;\n      \
    \  }\n    }\n    if(nums.size() > 1) {\n        for(long i=0;i<nums.size();i++)\
    \ {\n            for(long j=i;j<nums.size();j++) {\n                if(nums[i]\
    \ + nums[j] == 0) {\n                    return true;\n                }\n   \
    \         }\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() < 2) return false;\n    long a = l[0], b = l[1];\n  \
    \  long c = 0;\n    long d = 0;\n    for (long i = 2; i < l.size(); i++) {\n \
    \       if (l[i] > a && l[i] > b) {\n            d = (c - b) + l[i];\n       \
    \     c = 0;\n            b = d;\n        }\n        else if (l[i] > a) c = c\
    \ + l[i];\n        else if (l[i] > b) d = d + l[i];\n    }\n    return d == 0;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpemijd10s: /tmp/tmpemijd10s.cpp:35: int main(): Assertion `candidate((std::vector<long>({1,
    3, -2, 1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  long sum = 0;\n  for (int i = 0; i < l.size(); i++) {\n    sum += l[i];\n\
    \  }\n  assert(sum == 0);\n  bool result = 0;\n  for (int i = 0; i < l.size()\
    \ - 1; i++) {\n    int j = (i + 1) % l.size();\n    result += l[i] + l[j];\n \
    \ }\n  return result == 0;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpe6ioq3gm: /tmp/tmpe6ioq3gm.cpp:21: bool pairs_sum_to_zero(std::vector<long
    int>): Assertion `sum == 0'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::unordered_map<long, bool> map;\n    for (long i = 0; i < l.size();\
    \ i++) {\n        map[l[i]] = true;\n    }\n    for (long i = 0; i < l.size();\
    \ i++) {\n        if (map.find(-l[i]) != map.end()) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpz86_3x4f: /tmp/tmpz86_3x4f.cpp:30: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::sort(l.begin(),l.end());\n    long long res = 0;\n    for (long\
    \ long i = 0; i< l.size(); i++){\n       if (i != l.size()-1) {\n       res +=\
    \ l[i];\n       if (res == 0) return true;\n       }\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpi29r7i9q: /tmp/tmpi29r7i9q.cpp:29: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::vector<bool> flag(l.size());\n    std::iota(flag.begin(), flag.end(),\
    \ false);\n    for (long i : l) {\n        flag[i] = true;\n    }\n    for (int\
    \ i = 0; i < l.size(); ++i) {\n        for (int j = i + 1; j < l.size(); ++j)\
    \ {\n            if (flag[i] + flag[j] == 0) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/numeric:62,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:84,\n               \
    \  from /tmp/tmptjr79rav.cpp:2:\n/usr/include/c++/9/bits/stl_numeric.h: In instantiation\
    \ of \u2018void std::iota(_ForwardIterator, _ForwardIterator, _Tp) [with _ForwardIterator\
    \ = std::_Bit_iterator; _Tp = bool]\u2019:\n/tmp/tmptjr79rav.cpp:18:46:   required\
    \ from here\n/usr/include/c++/9/bits/stl_numeric.h:99:4: error: use of an operand\
    \ of type \u2018bool\u2019 in \u2018operator++\u2019 is forbidden in C++17\n \
    \  99 |    ++__value;\n      |    ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660124254
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    auto s = l.size();\n    for(int i=0;\
    \ i<s; i++){\n        for(int j=0; j<s; j++){\n            if(i != j){\n     \
    \           if(l[i] + l[j] == 0){\n                    return true;\n        \
    \        }\n            }\n        }\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    std::sort(l.begin(), l.end());\n    long long int ans = 0;\n    for\
    \ (long i = 0; i < l.size(); i++)\n        ans += l[i];\n    \n    return ans\
    \ == 0;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpshag9wfb: /tmp/tmpshag9wfb.cpp:29: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int s = 0;\n    int counter = 0;\n    for (int i : l) {\n\
    \        s = s + i;\n        counter++;\n    }\n    if (counter < 2) {\n     \
    \   return false;\n    }\n    for (int i = 0; i < counter && i < l.size(); i++)\
    \ {\n        long long int sum = 0;\n        for (int j = 0; j < l.size(); j++)\
    \ {\n            if (i == j) {\n                continue;\n            }\n   \
    \         sum = sum + l[j];\n        }\n        if (s % sum == 0) {\n        \
    \    return true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpnbwufl9a: /tmp/tmpnbwufl9a.cpp:42: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  // Your code goes here\n    long sum = 0;\n    for (long i = 0; i <\
    \ l.size(); i++) {\n      sum += l[i];\n    }\n    for (long i = 0; i < l.size();\
    \ i++) {\n      if (l[i] - sum == 0) {\n        return true;\n      }\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpcbv3t8n9: /tmp/tmpcbv3t8n9.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,
    3, -2, 1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int arr[2 * l.size()];\n    std::copy(l.begin(), l.end(),\
    \ arr);\n    long long int sum = 0;\n    long long int remained = 0;\n    for\
    \ (long long int i = 0; i < l.size(); i++) {\n        remained = arr[i];\n   \
    \     for (long long int j = i + 1; j < l.size(); j++) {\n            sum += arr[j];\n\
    \            if (sum == remained) {\n                std::cout << arr[j] << \"\
    \  \" << arr[i] << \" \" << i << \" \" << j << std::endl;\n                return\
    \ true;\n            }\n        }\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpw46_ihex: /tmp/tmpw46_ihex.cpp:36: int main(): Assertion `candidate((std::vector<long>({1,
    3, -2, 1}))) == (false)'' failed.

    '
  stdout: '-2  1 0 2

    '
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int sum = 0;\n    for (long val : l)\n        sum += val;\n    for\
    \ (int i = 0; i < l.size() - 1; i++)\n        if (l[i] != l[i + 1]) {\n      \
    \      if (sum - l[i] != 0)\n                return false;\n        }\n    return\
    \ true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpj0kwff8l: /tmp/tmpj0kwff8l.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \      if (sum < 0) return false;\n    }\n    if (sum == 0) return false;\n  \
    \  for (auto i : l) {\n        sum -= i;\n        if (sum < 0) return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpv84w5123: /tmp/tmpv84w5123.cpp:31: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() == 1)\n        return false;\n    std::sort(l.begin(),\
    \ l.end());\n    long long firstSum = 0;\n    long long secondSum = l[0];\n  \
    \  for (long long i = 0; i < l.size(); i++) {\n        firstSum += l[i];\n   \
    \     secondSum += firstSum;\n        if (secondSum == 0)\n            return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp7pc7pay6: /tmp/tmp7pc7pay6.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // TODO: Check if there exist two distinct elements that sum zero.\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpbuyodqdc: /tmp/tmpbuyodqdc.cpp:25: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  int sum = 0;\n  for (long i = 0; i < l.size(); i++)\n    sum += l[i];\n\
    \  for (long i = 0; i < l.size() - 1; i++) {\n    if (l[i] + l[i + 1] == sum)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpus3ny6ev: /tmp/tmpus3ny6ev.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    long long result = 0;\n    for (auto i : l)\
    \ {\n        sum += i;\n        if (sum == 0) {\n            result = i;\n   \
    \     }\n    }\n    return result > 0;\n}\nint main() {\n    auto candidate =\
    \ pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmplfddfren: /tmp/tmplfddfren.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  if(l.size() == 0)\n    return false;\n  long long int sum = std::accumulate(l.begin(),\
    \ l.end(), 0ll);\n  return sum == 0;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpc93ivge2: /tmp/tmpc93ivge2.cpp:27: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here\n    // a. Create a unordered_map (map) with\
    \ values set to 0\n    std::unordered_map<long, long> map;\n    for(long i = 0;\
    \ i < l.size(); i++) {\n        if(map.find(l[i]) != map.end()) {\n          \
    \  if(map[l[i]] > 0) {\n                return false;\n            }\n       \
    \ } else {\n            map[l[i]] = 0;\n        }\n    }\n    // b. Iterate over\
    \ map and check for existence of each element of l\n    // and if both have same\
    \ value greater than 0, then return false\n    for(auto &i: map) {\n        if(i.second\
    \ > 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint\
    \ main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpxbq6zhdm: /tmp/tmpxbq6zhdm.cpp:40: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    if (l.size() <= 1) {\n        return false;\n    }\n    // sort list\
    \ so largest number is on top\n    std::sort(l.begin(), l.end());\n    // make\
    \ two pointers pointing to the head of list\n    long long int lower = l[0], upper\
    \ = l[0];\n    // iterate through the list\n    for (size_t i = 1; i < l.size();\
    \ ++i) {\n        if (lower > l[i]) {\n            upper = lower;\n          \
    \  lower = l[i];\n        } else if (upper < l[i]) {\n            lower = l[i];\n\
    \        } else {\n            upper = l[i];\n        }\n    }\n    if (lower\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmphswj3uz7: /tmp/tmphswj3uz7.cpp:45: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int a=0, b=0;\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i]+l[i+1]==0)\
    \ {\n            a++;\n        }\n        else if((l[i]+l[i+1]>0) & (l[i]+l[i+1]==0))\
    \ {\n            b++;\n        }\n    }\n    if(a==1) return true;\n    else if(b==1)\
    \ return false;\n    else if(a>2) return true;\n    else if(b>2) return false;\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp1pwns_0x: /tmp/tmp1pwns_0x.cpp:37: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Your code here.\n    long sum = 0, n = l.size();\n    for (long\
    \ i = 0; i < n; ++i) {\n        sum += l[i];\n    }\n    if (sum == 0) {\n   \
    \     return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp8p77zmso: /tmp/tmp8p77zmso.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,
    4, -5, 3, 5, 7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    if(l.size()==0)\n        return false;\n\
    \    int sum=0;\n    for(int i=0;i<l.size();i++)\n    {\n        sum+=l[i];\n\
    \    }\n    if(sum==0)\n    {\n        return false;\n    }\n    for(int i=l.size();i>0;i--)\n\
    \    {\n        sum-=l[i-1];\n        if(sum==0)\n        {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpx5k1_65t: /tmp/tmpx5k1_65t.cpp:41: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  if (l.size() == 0) return false;\n  // sort the array\n  long long int\
    \ ln = *std::max_element(l.begin(), l.end()); // largest element\n  sort(l.begin(),\
    \ l.end());\n  int left = 0;\n  int right = l.size() - 1;\n  // loop through pairs\
    \ and see if the sum is zero\n  long long int sum = 0;\n  while (left < right)\
    \ {\n    if (l[left] + l[right] == 0) {\n      sum += l[left];\n      sum += l[right];\n\
    \      left++;\n      right--;\n    } else if (l[left] + l[right] > 0) {\n   \
    \   sum += l[left];\n      left++;\n    } else {\n      sum += l[right];\n   \
    \   right--;\n    }\n  }\n  return sum == 0;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmprz0xmf42: /tmp/tmprz0xmf42.cpp:44: int main(): Assertion `candidate((std::vector<long>({1,
    3, -2, 1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int t = 0;\n    int n = l.size();\n    for(int i = 0; i < n; i++)\
    \ {\n        t += l[i];\n    }\n    for(int i = 0; i < n - 1; i++) {\n       \
    \ if(t < 0) {\n            return false;\n        }\n        for(int j = i + 1;\
    \ j < n; j++) {\n            if(t + l[j] > 0) {\n                t = t + l[j];\n\
    \            }\n        }\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpjgp4wh9a: /tmp/tmpjgp4wh9a.cpp:36: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124255
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n  std::sort(l.begin(), l.end());\n  int n = l.size();\n  for (int i =\
    \ 1; i < n; ++i) {\n    int j = i;\n    while (j < n && l[j] + l[j] == i) {\n\
    \      ++j;\n    }\n    if (j - i > 1)\n      return false;\n  }\n  return true;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp2lo4_irb: /tmp/tmp2lo4_irb.cpp:31: int main(): Assertion `candidate((std::vector<long>({1,
    3, 5, 0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660124255

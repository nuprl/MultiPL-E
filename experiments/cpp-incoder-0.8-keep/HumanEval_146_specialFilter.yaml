name: HumanEval_146_specialFilter
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes\
  \ an array of numbers as input and returns \n// the number of elements in the array\
  \ that are greater than 10 and both \n// first and last digits of a number are odd\
  \ (1, 3, 5, 7, 9).\n// For example:\n// specialFilter([15, -73, 14, -15]) => 1 \n\
  // specialFilter([33, -2, -3, 45, 21, 109]) => 2\nlong specialFilter(std::vector<long>\
  \ nums) {\n"
tests: "}\nint main() {\n    auto candidate = specialFilter;\n    assert(candidate((std::vector<long>({5,\
  \ -2, 1, -5}))) == (0));\n    assert(candidate((std::vector<long>({15, -73, 14,\
  \ -15}))) == (1));\n    assert(candidate((std::vector<long>({33, -2, -3, 45, 21,\
  \ 109}))) == (2));\n    assert(candidate((std::vector<long>({43, -12, 93, 125, 121,\
  \ 109}))) == (4));\n    assert(candidate((std::vector<long>({71, -2, -33, 75, 21,\
  \ 19}))) == (3));\n    assert(candidate((std::vector<long>({1}))) == (0));\n   \
  \ assert(candidate((std::vector<long>())) == (0));\n}\n"
completions: ["    assert(nums.size() > 0);\n    long count = 0;\n    for (long n\
    \ : nums) {\n        if (n >= 10) {\n            count += n % 2;\n           \
    \ n /= 10;\n        }\n        if (n % 2 != 0 && n != 0)\n            count +=\
    \ n % 2;\n    }\n    return count;", "    // code here\n    std::set<long> st;\n\
    \    for (auto n : nums)\n        st.insert(n);\n    std::cout << st.size() <<\
    \ \"\\n\";\n    return 0;", "    std::sort(nums.begin(), nums.end()); \n    int\
    \ sum = 0, counter = 0;\n    \n    for(long i = 0; i != nums.size(); i++){\n \
    \       if(nums[i] >= 10){\n            sum += nums[i];\n            if(nums[i]\
    \ % 2 != 0){\n                counter ++;\n            }\n        }\n    }\n \
    \   return counter;", "    long n = nums.size();\n    long count = 0;\n    long\
    \ sum = 0;\n    for (int i = 0; i < n; ++i) {\n        sum += nums[i];\n     \
    \   if (sum > 10) {\n            sum -= nums[i];\n        }\n        if (sum %\
    \ 2 == 1 && nums[i] % 2 == 1) {\n            count++;\n        }\n    }\n    return\
    \ count;", "    int count = 0;\n    for (long &num : nums) {\n        if (num\
    \ > 10 && (num % 2 == 0) && num > floor(num / 2)) {\n            count++;\n  \
    \      }\n    }\n    return count;", "    long count = (long) nums.size();\n \
    \   long sum = 0;\n    for (int i = 0; i < count; i++) {\n        sum += nums[i];\n\
    \    }\n    if (sum > 10 && nums[0] % 2 != 0 && nums[count - 1] % 2 != 0) {\n\
    \        return count;\n    } else {\n        return 0;\n    }", "    int n =\
    \ 0;\n    for(int i = 0; i < nums.size(); i++){\n        if(nums[i] > 10 && nums[i]%2\
    \ == 1 && nums[i]%2 == 1 && (nums[i]/2 != nums[i-1]/2)){\n            n++;\n \
    \       }\n    }\n    return n;", "    // code here\n    // for(std::size_t i\
    \ = 0; i < nums.size(); i++)\n        // {\n            //    if(nums[i] >10 &&\
    \ nums[i] %2 ==1)\n            //    {\n                //        i++;\n     \
    \           //        nums[i-1] = 0;\n                //        nums[i] = 0;\n\
    \                //        nums[i+1] = 0;\n                //    }\n         \
    \   // }\n    long ans = 0, i = 0;\n    for(; i < nums.size(); i++)\n    {\n \
    \       if(nums[i] >10 && nums[i] %2 ==1)\n        {\n            ans += 1;\n\
    \            i++;\n            while(i < nums.size() && nums[i] == nums[i-1])\n\
    \            {\n                ans += 1;\n                i++;\n            }\n\
    \            nums[i-1] = 0;\n            nums[i] = 0;\n            nums[i+1] =\
    \ 0;\n        }\n    }\n    return ans;", "    std::vector<long> odd;\n    long\
    \ counter = 0;\n    for (long i : nums) {\n        odd += i % 2;\n    }\n    for\
    \ (long i : nums) {\n        if (i % 2 != 0) {\n            if (i % 10 == 1) {\n\
    \                if (i % 100 == 0) {\n                    counter += 1;\n    \
    \            }\n            } else if (i % 10 == -1) {\n                if (i\
    \ % 100 == 0) {\n                    counter += 1;\n                }\n      \
    \      }\n        }\n    }\n    return counter;", "    long i = 0;\n    long count\
    \ = 0;\n    for (i = 0; i < nums.size(); i++) {\n        if (nums[i] > 10) {\n\
    \            count += 1;\n            while (nums[i]%2 == 1) {\n             \
    \   count += 1;\n                nums[i] /= 10;\n            }\n            while\
    \ (nums[i]%2 == 0) {\n                count += 1;\n                nums[i] /=\
    \ 10;\n            }\n        }\n    }\n    return count;", "    long sum = 0;\n\
    \    for(auto i : nums) {\n        if(i%2 ==0 && (i%3==0 || (i>10 && i<=99)))\
    \ {\n            sum += 1;\n        }\n    }\n    return sum;", "    int flag=0;\n\
    \    for (int i=0; i<nums.size(); i++) {\n        if((nums[i]>10)&&(nums[i]%2==1)&&(nums[i]%10==1))\
    \ {\n            flag=1;\n        }\n    }\n    return flag;", "    long result\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        if (nums[i] > 10\
    \ && nums[i] % 2 != 0 && nums[i] % 2 != 1 && nums[i] % 2 != 3) {\n           \
    \ result++;\n        }\n    }\n    return result;", "        long result = 0;\n\
    \        for (int i = 0; i < nums.size(); i++) {\n                if (nums[i]\
    \ > 10 && nums[i]%2 == 0 && nums[i-1]%2 != 0) {\n                        result++;\n\
    \                }\n        }\n        return result;", "    // code here\n  \
    \  for(long i=0;i<nums.size();i++)\n    {\n        if(nums[i] >= 10 && (nums[i]\
    \ & 1)==0)\n        {\n            long lastodd = nums[nums.size()-1];\n     \
    \       if(lastodd & 1)\n            {\n                return i;\n          \
    \  }\n        }\n    }", "    long sum=0;\n    for (long i : nums){\n        if((i%2)==0\
    \ && i%4==0){\n            sum++;\n        }\n    }\n    return sum;", "\tlong\
    \ count=0, i=0;\n\tfor(i; i<nums.size(); i++) {\n\t\tif(nums[i]>10 && nums[i]%2==1\
    \ && nums[i]%3==1 && nums[i]%5==1) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
  "    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i]\
    \ >= 10) {\n            sum += 1;\n            assert(nums[i] % 2 != 0);\n   \
    \         assert(nums[nums.size() - i - 1] % 2 != 0);\n        }\n    }\n    return\
    \ sum;", "    long n = 0;\n    for (long i : nums) {\n        if (i > 10 && i\
    \ % 2 != 0 && i % 5 != 0 && i % 7 != 0) {\n            ++n;\n        }\n    }\n\
    \    return n;", "        long totalNum = nums.size();\n        long sum = 0;\n\
    \        long newNum;\n        for(int i = 0; i < totalNum; i++) {\n         \
    \   newNum = nums[i];\n            sum += newNum;\n        }\n        return sum;",
  "    long ans = 0;\n    for (auto &i : nums) \n    {\n        if (i%2 == 0 && (i<10)\
    \ && (i>=0) && (i<10))\n        {\n            ans += 1;\n        }\n    }\n \
    \   return ans;", "    std::vector<long> odd;\n    std::vector<long> even;\n \
    \   for(long & n : nums) {\n        n = abs(n);\n        if(n >= 10) {\n     \
    \       if((n % 10) % 2 == 0) {\n                even.push_back(n);\n        \
    \    }\n            else {\n                odd.push_back(n);\n            }\n\
    \        }\n    }\n    return even.size() + odd.size();", "    long count = 0;\n\
    \    for (int i = 0; i < nums.size(); i++)\n        if (nums[i] > 10 && nums[i]\
    \ % 2 == 0 && nums[i] % 2 == 1)\n            count++;\n    return count;", " \
    \   long result = 0;\n    int size = nums.size();\n    for (int i = 0; i < size;\
    \ i++) {\n        int n = nums[i];\n        int f = n/10; // first digit\n   \
    \     int l = n%10; // last digit\n        if (l % 2 == 1) {\n            result\
    \ = result + 1;\n        }\n        if ((f % 2 == 1) && (l % 2 == 0)) {\n    \
    \        result = result + 1;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ evenNums;\n    std::vector<long> oddNums;\n    long long n = 0;\n    long long\
    \ maxEven = 0;\n    long long maxOdd = 0;\n    for(long long i = 0; i < nums.size();\
    \ ++i) {\n        if(nums[i] > 10) evenNums.push_back(nums[i]);\n        else\
    \ if(nums[i] % 2 == 0) oddNums.push_back(nums[i]);\n    }\n    // Even\n    for(long\
    \ long i = 0; i < evenNums.size(); ++i) {\n        if(evenNums[i] % 2 != 0 &&\
    \ evenNums[i] > maxEven) {\n            maxEven = evenNums[i];\n            n\
    \ = evenNums.size();\n        }\n    }\n    // Odd\n    for(long long i = 0; i\
    \ < oddNums.size(); ++i) {\n        if(oddNums[i] > maxOdd) {\n            maxOdd\
    \ = oddNums[i];\n            n = oddNums.size();\n        }\n    }\n    return\
    \ n;", "    if (nums.size() == 0) {\n        throw \"Array is empty\";\n    }\n\
    \    long ans = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n     \
    \   if (nums[i] > 10) {\n            ans = 1;\n            break;\n        }\n\
    \        if (nums[i] % 2 == 1 && nums[i] % 3 == 1 && nums[i] % 5 == 1) {\n   \
    \         ans++;\n        }\n    }\n    return ans;", "  long ans = 0;\n  for\
    \ (long i=0; i<nums.size(); i++) {\n    if (nums[i] > 10 && nums[i] % 2 != 0 &&\
    \ (nums[i-1] % 2 != 0 && nums[i+1] % 2 != 0)) {\n      ans++;\n    }\n  }\n  return\
    \ ans;", "    long res = 0;\n    for(long i=0;i<nums.size();i++){\n        if(nums[i]>10\
    \ && nums[i]%2 ==1 && nums[i]%4==1){\n            res++;\n        }\n    }\n \
    \   return res;", "    int size = nums.size();\n    int result = 0;\n    for (int\
    \ i = 0; i < size; i++) {\n        if (nums[i] >= 10) {\n            result +=\
    \ (nums[i] % 10) > 9 ? 1 : 0;\n        }\n        if (nums[i] % 2 == 1) {\n  \
    \          result += (nums[i] % 10) > 9 ? 1 : 0;\n        }\n    }\n    return\
    \ result;", "    int n = nums.size();\n    long ret = 0;\n    for(int i = 0; i\
    \ < n; i++){\n        if((nums[i] >= 10) && ((nums[i] % 2) == 1) && ((nums[i+1]\
    \ % 2) == 1)){\n            ret = i+1;\n            break;\n        }\n    }\n\
    \    return ret;", "    long count = 0;\n    for (long i = 0; i < nums.size();\
    \ i++)\n        if (nums[i] > 10 && nums[i] % 2 == 1 && nums[i] % 2 == 1)\n  \
    \          count++;\n    return count;", "    long ans = 0;\n    for (long &num:\
    \ nums) {\n        if ((num > 10) && (num % 2 == 0) && (num % 2 == 1)) {\n   \
    \         ans += 1;\n        }\n    }\n    return ans;", "    long result = 0;\n\
    \    int size = nums.size();\n    for(long i = 0; i < size; i++) {\n        if(nums[i]\
    \ > 10 && nums[i]%2 == 1 && nums[i] % 2 == 0) {\n            result ++;\n    \
    \    }\n    }\n    return result;", "    long len = nums.size();\n    long odds\
    \ = 0;\n    long odds_last = 0;\n    long odds_first_last = 0;\n    for(long i\
    \ = 0; i < len; i++) {\n        if(nums[i] > 10) {\n            odds++;\n    \
    \        if(nums[i - 1] % 2 == 1 && nums[i + 1] % 2 == 1) {\n                odds_first_last++;\n\
    \            }\n        }\n        if(nums[i] % 2 == 1 && nums[i - 1] % 2 == 1)\
    \ {\n            odds_last++;\n        }\n    }\n    odds /= 2;\n    odds_first_last\
    \ /= 2;\n    odds_last /= 2;\n    long len = nums.size();\n    long count = 0;\n\
    \    for(long i = 0; i < len; i++) {\n        if(nums[i] > 10 && odds == 0 &&\
    \ odds_last_count == 0 && odds_first_last_count == 0 && odds_first_last == odds_last)\
    \ {\n            count++;\n        }\n    }\n    return count;", "  std::set<long>\
    \ nums_set(nums.begin(), nums.end());\n  long ans = 0;\n  for (long val : nums_set)\n\
    \    if (val > 10 && val % 2 != 0 && val % 3 != 0 && val % 5 != 0 && val % 7 !=\
    \ 0 && val % 9 != 0)\n      ans++;\n  return ans;", "    int sum = 0;\n    long\
    \ n = nums.size();\n    int flag = 0;\n    for (int i = 0; i < n; i++) {\n   \
    \     if (nums[i] > 10) {\n            flag = 1;\n            sum += 1;\n    \
    \        sum = sum * 10;\n        }\n        if (i == n - 1) {\n            sum\
    \ += nums[i] - 10;\n        }\n        if (flag == 1 && nums[i] % 2 == 1) {\n\
    \            sum += 1;\n        }\n    }\n    return sum;", "    std::bitset<64>\
    \ bs;\n    for (auto i : nums) {\n        bs.set(i, std::bit_test(i));\n    }\n\
    \    if (bs.test(0)) {\n        return 0;\n    }\n    long sum = 0;\n    for (auto\
    \ i : nums) {\n        if (i > 10) {\n            if (i%2 == 0 && i%2 == 1) sum\
    \ += 1;\n        }\n    }\n    return sum;", "    long count = 0;\n    for (auto\
    \ num : nums) {\n        if (num > 10 && num > nums[0] % 2 && num > nums[nums.size()-1]\
    \ % 2) {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ ans = 0;\n    for(long n: nums){\n        if(n > 10 && nums.front() % 2 != 0\
    \ && nums.back() % 2 != 0) ans++;\n    }\n    return ans;", '    //Your code here',
  "    assert(nums.size() > 0);\n    long cnt = 0;\n    for (auto ele : nums) {\n\
    \        if (ele > 10 && ele % 2 != 0 && ele % 2 != 1) {\n            cnt += 1;\n\
    \        }\n    }\n    return cnt;", "    long counter = 0;\n    for (long i =\
    \ 0; i < nums.size(); i++) {\n        if (nums[i] > 10 && nums[i] % 2 != 0 &&\
    \ nums[i-1] % 2 != 0 ) {\n            counter++;\n        }\n    }\n    return\
    \ counter;", "    // code goes here\n    int count=0;\n    for (int i=0;i<nums.size();i++){\n\
    \        if (nums[i]>10 && nums[i]%2!=0){\n            count++;\n        }\n \
    \   }\n    return count;", "    long i = 0;\n    long count = 0;\n    for (i =\
    \ 0; i < nums.size(); i++) {\n        if (nums[i] > 10 && nums[i] % 2 != 0 &&\
    \ nums[i] % 3 != 0)\n            count++;\n    }\n    return count;", "    long\
    \ count = 0;\n    long first = nums[0];\n    long last = nums[0];\n    for(long\
    \ i:nums)\n    {\n        if(i>=10&&(i % 2) == 1)\n        {\n            if(i>last)\n\
    \            {\n                count = count + 1;\n                last = i;\n\
    \            }\n        }\n        if(i<10&&(i % 2) == 0)\n        {\n       \
    \     if(i>first)\n            {\n                count = count + 1;\n       \
    \         first = i;\n            }\n        }\n    }\n    return count;", " \
    \   int firstDigit = 0;\n    int lastDigit = 0;\n    long count = 0;\n    // Write\
    \ your code here\n    for (auto i : nums) {\n        ++count;\n        firstDigit\
    \ = i % 10;\n        lastDigit = i % 10;\n    }\n    return count;", "    // code\
    \ here\n    long count=0, num;\n    for(long i=0; i<nums.size(); i++){\n     \
    \   num=nums[i];\n        if(num>10 && nums%2!=0){\n            count++;\n   \
    \     }\n    }\n    return count;", "    long count = 0;\n    for (auto n : nums)\
    \ {\n        if ((n % 10) > 10 || (n % 100) <= 9) {\n            count++;\n  \
    \      }\n    }\n    return count;", "    long res = 0;\n    for(long &num: nums)\
    \ // loop through the vector\n        if(num > 10) // check if the number is greater\
    \ than 10\n            if(!((num % 10) % 2)) // check if the number is odd\n \
    \               res += 1;\n    return res;", "  std::sort(nums.begin(), nums.end(),\
    \ std::greater<long>());\n  // Write your code here\n  return 0;", "  long ans\
    \ = 0;\n  for (long n : nums) \n    if (n > 10 && n%2 != 0 && n%2 != 1)\n    \
    \  ans++;\n  return ans;", "    long sum = 0;\n    for(auto n: nums){\n      \
    \  if(n > 10 && n % 2 == 1){\n            sum += 1;\n        }\n    }\n    return\
    \ sum;", "    int sum = 0;\n    for (auto& num : nums) {\n        sum += num;\n\
    \    }\n    long n = (sum - 10) % 2 == 1 ? sum : sum + 10;\n    for (auto& num\
    \ : nums) {\n        n = n * (num % 2 == 1 ? 1 : 3) - num / 2;\n    }\n    return\
    \ std::count(nums.begin(), nums.end(), n);", "    long ans = 0;\n    for(int i=0;\
    \ i<nums.size(); i++) {\n        if(nums[i] > 10 && nums[i] % 2 == 1 && nums[i]\
    \ % 10 == 1) {\n            ans++;\n        }\n    }\n    return ans;", "    assert(nums.size()\
    \ != 0);\n    long count = 0;\n    for (int i = 0; i < nums.size(); i++)\n   \
    \ {\n        if (nums[i] > 10 && (nums[i] % 2 != 0 || nums[i] % 10 == 1))\n  \
    \          count++;\n    }\n    return count;", "    long count = 0;\n    for(long\
    \ i=0;i<nums.size();i++){\n        if(nums[i]>=10 && nums[i]%2==0 && nums[i]%10%2==1)\n\
    \            count++;\n    }\n    return count;", "\tassert(nums.size() != 0);\n\
    \tlong count = 0;\n\tlong digit = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong temp\
    \ = 0;\n\tfor(long i = 0; i < (nums.size()); i++)\n\t{\n\t\tx = nums[i];\n\t\t\
    temp = 0;\n\t\ty = 0;\n\t\twhile(x != 0)\n\t\t{\n\t\t\ttemp = temp*10 + x % 10;\n\
    \t\t\ty = y + 1;\n\t\t\tx /= 10;\n\t\t}\n\t\tif(temp >= 10 && temp % 2 == 1 &&\
    \ y % 2 == 1)\n\t\t{\n\t\t\tcount = count + 1;\n\t\t}\n\t}\n\treturn count;",
  "  long result = 0;\n  for(long i = 0; i < nums.size(); ++i){\n    long num = nums[i];\n\
    \    long firstDigit = num % 10;\n    long lastDigit = (num / 10) % 10;\n    long\
    \ lastOddDigit = num % 1000000000;\n    result += (firstDigit > 10) \n       \
    \   && (lastDigit % 2 == 1) \n          && (lastOddDigit % 2 == 1);\n  }\n  return\
    \ result;", "    long n=0;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]>10&&(nums[i]%2==1&&nums[i]%5==1))\n\
    \            n++;\n    }\n    return n;", "    long n = 0;\n    for(int i = 0;\
    \ i < nums.size(); i++)\n    {\n        if(nums[i] > 10 && nums[i] % 2 != 0 &&\
    \ nums[i]%3 != 0)\n        {\n            ++n;\n        }\n    }\n    return n;",
  "   assert(nums.size()>0);\n   long count = 0;\n   for(int i=0;i<nums.size();i++){\n\
    \       if(nums[i]>10){\n           if(nums[i]%10 == 1){\n               if(nums[i-1]%10\
    \ == 1 && nums[i]%10 == 1)\n                   count++;\n               else if(nums[i-1]%10\
    \ == 1)\n                   count++;\n           }\n       }\n   }\n   return\
    \ count;", "    // Your code goes here\n    int ans = 0;\n    for(auto &x: nums)\n\
    \    {\n        if(x > 10)\n        {\n            if( (x % 2) == 1 && (x % 10)\
    \ == 9 )\n                ans++;\n        }\n    }\n    return ans;", "    long\
    \ count = 0;\n    // Write your code\n    for (auto &n: nums) \n        if (n\
    \ > 10 && n % 2 == 1 && n % 2 != 0) \n            ++count; \n    return count;",
  "    long ans = 0, len = 0;\n    for (auto val : nums)\n    {\n        if (val >\
    \ 10)\n        {\n            len++;\n            if (val % 2 == 1)\n        \
    \    {\n                ans++;\n            }\n        }\n    }\n    return ans;",
  '    // code here', "    // code here\n    long ans = 0;\n    for (int i = 0; i\
    \ < nums.size(); i++){\n        if (nums[i] > 10 && nums[i] % 2 == 1 && nums[i]\
    \ % 3 == 1){\n            ans++;\n        }\n    }\n    return ans;", "    int\
    \ n = nums.size();\n    long count = 0;\n    for(long i = 0; i < n; i++) {\n \
    \       long temp = nums[i];\n        if (temp >= 10) {\n            if (temp\
    \ % 10 == 1 || temp % 10 == 3 || temp % 10 == 5 || temp % 10 == 7 || temp % 10\
    \ == 9) {\n                count += 1;\n            }\n        }\n        if (temp\
    \ % 10 == 2 && temp % 100 != 11)\n            count += 1;\n        if (temp %\
    \ 10 == 2 && temp % 100 == 11)\n            count += 1;\n    }\n    return count;",
  "    int count = 0, len = nums.size();\n    for(int i=0; i<len; i++){\n        if(nums[i]\
    \ > 10 && nums[i]%2==0 && nums[i]/10%2 == 1){\n            count++;\n        }\n\
    \    }\n    return count;", "    // code here\n    return 0;", "    // code here\n\
    \    long result=0;\n    long firstDigit;\n    long secondDigit;\n    int sum=0,i=0;\n\
    \    for(i=0;i<nums.size();i++){\n        firstDigit=nums[i] / 10;\n        secondDigit=nums[i]%10;\n\
    \        if(firstDigit%2==1&&secondDigit%2==1){\n            sum=sum+firstDigit;\n\
    \        }\n        else{\n            sum=sum+secondDigit;\n        }\n    }\n\
    \    if(sum>10){\n        result=nums.size();\n    }\n    return result;", " \
    \   long sum = 0;\n    long temp = 0;\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        temp = nums[i];\n        if (temp > 10) {\n            sum += temp;\n\
    \        }\n        if (nums[i] % 2 == 1 && nums[i] % 2 != 0) {\n            sum\
    \ += nums[i];\n        }\n    }\n    return sum;", "    int n = nums.size();\n\
    \    long ans = 0;\n    \n    for (int i = 0; i < n; i++) {\n        if (nums[i]\
    \ > 10) {\n            ans += 1;\n            if (nums[i] % 2 == 1 && nums[i]\
    \ % 4 != 1 || nums[i] % 2 == 1 && nums[i] % 4 != 3) {\n                ans +=\
    \ 1;\n            }\n        }\n    }\n    return ans;", "     if(nums.size()\
    \ < 3){\n            return 0;\n     }\n     long long a = nums[0];\n     long\
    \ long b = nums[nums.size()-1];\n     long long sum = 0;\n     for (int i = 0;\
    \ i < nums.size() ; i++){\n         long long curr = nums[i];\n         if ( (curr\
    \ > a) && (curr > b) && curr % 2 != 1){\n             sum += 1;\n         }\n\
    \     }\n     return sum;", "   long cnt = 0;\n   for(long num : nums) {\n   \
    \  if(num > 10 && num % 2 != 0 && num % 3 != 0)\n       cnt++;\n   }\n   return\
    \ cnt;", "    // code here\n    return 0;", "    assert(nums.size() == 10);\n\
    \    long n = 0;\n    for (long x : nums) {\n        if ((x > 0) && (x%2 == 1)\
    \ && ((x%10 == 1) || (x%10 == 3) || (x%10 == 5) || (x%10 == 7) || (x%10 == 9)))\n\
    \            ++n;\n    }\n    return n;", "    long result = 0;\n    for(auto\
    \ num: nums){\n        if(num > 10 && num % 2 != 0 && num / 2 % 2 != 0){\n   \
    \         result += 1;\n        }\n    }\n    return result;", "    long cnt =\
    \ 0;\n    for(int i = 0; i < nums.size(); i++){\n        if(nums[i] >= 10 && nums[i]\
    \ %2 == 1 && nums[i] % 10 == 1){\n            cnt++;\n        }\n    }\n    return\
    \ cnt;", "    int count=0;\n    for(int i=0;i<nums.size();i++) {\n        if(nums[i]>10\
    \ && (nums[i]%2)==0) {\n            count++;\n        }\n    }\n    return count;",
  "    long result = 0;\n    for(int i=0; i < nums.size(); i++) {\n        if (nums[i]\
    \ >= 10 && nums[i] % 2 == 1 && nums[i] % 2 == 1) {\n            result +=1;\n\
    \        }\n    }\n    return result;", "\tlong count = 0L;\n\tfor (long &n :\
    \ nums) {\n\t\tif (n > 10 && n % 2 != 0 && n % 2 != 1 && n % 2 != 3) {\n\t\t\t\
    count++;\n\t\t}\n\t}\n\treturn count;", "    int n=0, f=0, l=0;\n    while(n <\
    \ nums.size()){\n        if(nums[n] > 10 && nums[n]%10%2 == 0 && nums[n]%10%2\
    \ == 1){\n            if(nums[n]%2 == 0 && f == 0)\n                ++n;\n   \
    \         else if(nums[n]%2 == 1 && f == 1)\n                ++n;\n          \
    \  else if(nums[n]%2 == 0)\n                ++f; \n            else if(nums[n]%2\
    \ == 1)\n                ++l;\n        }\n        ++n;\n    }\n    return n+f+l;",
  "    long cnt = 0;\n    long sum = 0;\n    long curr;\n    for(int i = 0; i < nums.size();\
    \ i++){\n        curr = nums[i];\n        if(curr > 10 && (curr & 1) == 1){\n\
    \            sum += curr;\n        }\n        else{\n            if(sum % 2 ==\
    \ 1){\n                cnt += 1;\n            }\n            sum = 0;\n      \
    \  }\n    }\n    return cnt;", "    long k=0, l=0;\n    int n=nums.size();\n \
    \   for(int i=0; i<n; i++)\n    {\n        if(nums[i]>10 && nums[i]%2==1 && nums[i]%10==1)\n\
    \        {\n            k++;\n            long y=nums[i];\n            for(int\
    \ j=i; j<n; j++)\n            {\n                if(nums[j]%2==1 && nums[j]%10==1)\n\
    \                {\n                    y=y*10+nums[j];\n                    k++;\n\
    \                    break;\n                }\n            }\n            if(y>10\
    \ && y%2==1 && y%10==1)\n            {\n                l++;\n            }\n\
    \        }\n    }\n    return k;", "  int n = nums.size();\n  long count = 0;\n\
    \  for (int i = 0; i < n; i++) {\n    if (nums[i] > 10 && nums[i] & 1 == 1 &&\
    \ nums[i] & 3 == 1)\n      count++;\n  }\n  return count;", "    long count =\
    \ 0;\n    for (long num : nums) {\n        if (num > 10 && num % 2 != 0 && num\
    \ % 2 != 1) {\n            ++count;\n        }\n    }\n    return count;", " \
    \   long ans= 0;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]>10 &&\
    \ nums[i]%2==1 && nums[i]%7==1){\n            ans++;\n        }\n    }\n    return\
    \ ans;", "    std::sort(nums.begin(), nums.end());\n    long count = 0;\n    long\
    \ num1 = nums[0]%10;\n    long num2 = nums[nums.size()-1]%10;\n    if(num1 < 8\
    \ && num2 < 8){\n        count = 0;\n    }else{\n        long l1 = num1/10;\n\
    \        long l2 = num2/10;\n        if((l1 & 1) == 0 && (l2 & 1) == 0){\n   \
    \         if((num1/10) != ((num2/10)%10)){\n                count++;\n       \
    \     }\n        }\n    }\n    return count;", "    // Write your code here\n\
    \    long n = 0;\n    for (long i : nums) {\n        \n        if (i >= 10) {\n\
    \            if ((i % 2) != 0 && (i % 2 != 0)) {\n                n++;\n     \
    \       }\n        }\n    }\n    return n;", "    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        if (nums[i] > 10 && nums[i] % 2 != 0\
    \ && nums[i]%2 == 1) {\n            sum += 1;\n        }\n    }\n    return sum;",
  "    long counter = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        if\
    \ (nums[i] >= 10 && nums[i] % 2 == 1 && (nums[i] % 10) % 2 == 1) {\n         \
    \   counter++;\n        }\n    }\n    return counter;", "    std::vector<long>\
    \ new_nums;\n    long new_num = 0;\n    long temp = 0;\n    long sum = 0;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        temp = nums[i];\n        new_num\
    \ += temp;\n        sum += temp;\n    }\n    new_nums.push_back(new_num);\n  \
    \  for (int i = 1; i < nums.size(); i++) {\n        temp = nums[i];\n        new_num\
    \ = new_num + temp;\n        sum += temp;\n        if (new_num > 10) {\n     \
    \       new_nums.push_back(new_num);\n        }\n    }\n    for (int i = 0; i\
    \ < new_nums.size(); i++) {\n        if (new_nums[i] % 2 != 0 && new_nums[i] %\
    \ 3 != 0) {\n            new_nums.erase(new_nums.begin() + i);\n        }\n  \
    \  }\n    for (int i = 0; i < new_nums.size(); i++) {\n        temp = new_nums[i];\n\
    \        new_nums[i] = new_nums[i] / 10;\n        sum += temp;\n    }\n    long\
    \ new_nums_sum = 0;\n    for (int i = 0; i < new_nums.size(); i++) {\n       \
    \ new_nums_sum += new_nums[i];\n    }\n    while (sum != new_nums_sum) {\n   \
    \     new_nums.push_back(0);\n        sum += new_nums[0];\n    }\n    return new_nums.size();",
  "    long cnt = 0;\n    // check first and last digit\n    cnt += ((nums[0] & 1))\
    \ ? 1 : 0;\n    cnt += ((nums[nums.size() - 1] & 1)) ? 1 : 0;\n    for (int i\
    \ = 1; i < nums.size(); ++i) {\n        // check first and last digit\n      \
    \  cnt += ((nums[i] & 1)) ? 1 : 0;\n        cnt += ((nums[i - 1]) & 1) ? 1 : 0;\n\
    \    }\n    return cnt;", "    long ans = 0;\n    for (auto i : nums)\n    {\n\
    \        if (i > 10 && nums.front()%2 != 0 && nums.back()%2 != 0)\n          \
    \  ans++;\n    }\n    return ans;", "    long ret = 0;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        if (nums[i] >= 10) {\n            long x = nums[i];\n\
    \            while (x > 0) {\n                long y = x % 10;\n             \
    \   if (y % 2 == 1) break;\n                x = x / 10;\n            }\n     \
    \       while (x > 0 && nums[i] > 0) {\n                long y = x % 10;\n   \
    \             if (y % 2 == 1) break;\n                x = x / 10;\n          \
    \  }\n            if (x >= 10) {\n                ret++;\n            }\n    \
    \    }\n    }\n    return ret;", "    int count = 0;\n    long last_num = 0;\n\
    \    long first_num = 0;\n    for (auto num : nums) {\n        if (num > 10) {\n\
    \            if (first_num % 2 == 1 && last_num % 2 == 1)\n                count++;\n\
    \        }\n        last_num = num;\n        first_num = num;\n    }\n    return\
    \ count;", "    long i = 0;\n    for(long num : nums) {\n        if(num > 10)\
    \ {\n            i += 1;\n        }\n        if(num % 2 != 0 && num % 2 != 1)\
    \ {\n            i += 1;\n        }\n    }\n    return i;", "    assert(nums.size()\
    \ > 0);\n    int sum = 0;\n    for (auto i = nums.begin(); i != nums.end(); i++)\n\
    \    {\n        sum += (*i);\n    }\n    int a = 0, b = 0;\n    int c = sum %\
    \ 10;\n    while (c == 0)\n    {\n        c = sum % 10;\n        sum += 1;\n \
    \   }\n    while (b != nums.size())\n    {\n        b++;\n        int d = *(b\
    \ % 10);\n        while (d == 0)\n        {\n            d = *(b % 10);\n    \
    \        sum += 1;\n        }\n        if (c % 2 == 0)\n        {\n          \
    \  if (d % 2 != 0)\n            {\n                a++;\n            }\n     \
    \       else\n            {\n                a++;\n            }\n        }\n\
    \        else\n        {\n            if (d % 2 != 0)\n            {\n       \
    \         b++;\n            }\n            else\n            {\n             \
    \   b++;\n            }\n        }\n        c = sum % 10;\n        while (c ==\
    \ 0)\n        {\n            c = sum % 10;\n            sum += 1;\n        }\n\
    \    }\n    return a;", "    int count = 0;\n    for (auto val : nums) {\n   \
    \     if (val > 10 && val % 2 == 0 && val & 1 != 0 && val & 3) {\n           \
    \ count++;\n        }\n    }\n    return count;", "  std::sort(nums.begin(), nums.end());\n\
    \  std::pair<long, long> first = std::equal_range(nums.begin(), nums.end(), 10L);\n\
    \  assert(first.first != nums.end());\n  assert(first.second != nums.end());\n\
    \  std::pair<long, long> last = std::equal_range(nums.begin(), nums.end(), 10L,\
    \ std::greater<long>());\n  assert(last.first != nums.end());\n  assert(last.second\
    \ != nums.end());\n  long count = 0;\n  long middle = nums.size() / 2;\n  while(first\
    \ != last) {\n    long start = nums.at(middle);\n    long end = nums.at(middle\
    \ + 1);\n    long mid = (first + last).first / 2;\n    if(mid == middle) {\n \
    \     if(nums.at(mid) < 10L) {\n        count++;\n      }\n      middle++;\n \
    \   }\n    else if(nums.at(mid) > 10) {\n      middle++;\n    }\n    else {\n\
    \      long left_mid = nums.at(mid);\n      long right_mid = nums.at(mid);\n \
    \     if(left_mid == 10L && right_mid % 2L == 1) {\n        count++;\n      }\n\
    \      else if(right_mid == 10L && left_mid % 2L == 1) {\n        count++;\n \
    \     }\n      else {\n        middle++;\n      }\n    }\n    first = std::equal_range(nums.begin(),\
    \ nums.end(), 10L, std::greater<long>());\n  }\n  return count;", "    int count\
    \ = 0;\n    for(auto num : nums) {\n        if (num > 10) {\n            if (num\
    \ % 2 == 0 && num > 10 && num % 2 == 1)\n                count += 1;\n       \
    \ }\n    }\n    return count;", "    long sum = 0;\n    for (long &n : nums) {\n\
    \        if (n > 10 && n % 2 == 1 && n % 2 == 0 && n % 2 != 0) {\n           \
    \ sum += 1;\n        }\n    }\n    return sum;", "    long size = nums.size();\n\
    \    long count = 0; \n    for(int i = 0; i < size; ++i){\n        if(nums[i]>10&&(nums[i]%2==1)&&(nums[i]%10%2==1)){\n\
    \            ++count;\n        }\n    }\n    return count;", "   long count =\
    \ 0;\n   for(long num : nums) {\n       if(num > 10 && num > num % 2 % 1) {\n\
    \           count++;\n       }\n   }\n   return count;", "    assert(nums.size()\
    \ >= 1);\n    long ans = 0;\n    for (long i : nums) {\n        long n = (i /\
    \ 10);\n        int k = ((i % 10) % 2);\n        if (n > 10 && k < 1) {\n    \
    \        ans += 1;\n        }\n    }\n    return ans;", "    \n    return nums.count();",
  "    \n    long result = 0;\n    for(int i = 0; i<nums.size(); i++){\n        if(nums[i]\
    \ >= 10){\n            result ++;\n            if(nums[i] % 2 != 0){\n       \
    \         if(nums[i] % 3 != 0){\n                    if(nums[i] % 5 != 0){\n \
    \                       if(nums[i] % 7 != 0){\n                            if(nums[i]\
    \ % 9 != 0){\n                                result ++;\n                   \
    \         }\n                        }\n                    }\n              \
    \  }\n            }\n        }\n    }\n    return result;", "  std::unordered_map<long,\
    \ long> hash_map;\n  for (long i : nums) {\n    hash_map[i] = i;\n  }\n  long\
    \ cnt = 0;\n  long max = std::numeric_limits<long>::min();\n  long min = std::numeric_limits<long>::max();\n\
    \  for (long i : nums) {\n    max = std::max(max, i);\n    min = std::min(min,\
    \ i);\n  }\n  long sum = 0;\n  for (long i : nums) {\n    if (i > 10) {\n    \
    \  sum += hash_map.at(i);\n      cnt += 1;\n    }\n  }\n  double mean = (double)sum\
    \ / cnt;\n  std::vector<long> odd(0);\n  std::vector<long> even(10);\n  for (long\
    \ i : nums) {\n    if (i > 10) {\n      if (i % 2 == 1) {\n        odd.push_back(i);\n\
    \      } else {\n        even.push_back(i);\n      }\n    }\n  }\n  double mean\
    \ = std::accumulate(odd.begin(), odd.end(), 0.0) / odd.size();\n  mean = std::sqrt(mean);\n\
    \  double var = mean / cnt;\n  double std = std::sqrt(var);\n  return cnt * cnt;",
  "    std::vector<long>::iterator it;\n    int count = 0;\n    int flag = 0;\n  \
    \  for (it = nums.begin(); it != nums.end(); it++) {\n        if (*it == -10 ||\
    \ *it == 10) {\n            count++;\n        } else {\n            if ((*it /\
    \ 100 % 10) == 1 && (*it / 10 % 10) == 1 && (*it / 1 % 10) == 1) {\n         \
    \       flag = 1;\n            }\n        }\n    }\n    return count;", "    for(long\
    \ i=0;i<nums.size();i++) {\n        if(nums[i] >= 10 && nums[i]%2 == 1 && nums[i]%5\
    \ == 1) return i+1;\n    }\n    return 0; ", "    std::sort(nums.begin(), nums.end());\n\
    \    int low = nums.size();\n    while (low > 1 && nums[low - 2] % 2 == 1) {\n\
    \        low--;\n    }\n    long ans = nums[low];\n    int high = low;\n    while\
    \ (high > 0 && nums[high - 1] % 2 == 1) {\n        high--;\n    }\n    for (int\
    \ i = low + 1; i <= high - 1; i++) {\n        if (nums[i] % 2 != 1 && (nums[i]\
    \ % 3 != 1 || nums[i] % 5 == 0)) {\n            ans = std::min(ans, nums[i]);\n\
    \        }\n    }\n    return ans;", "    long count=0;\n    for(int i=0;i<nums.size();i++)\
    \ {\n        if(nums[i]%2==1 && nums[i]>9) count++;\n    }\n    return count;",
  "    int n = nums.size();\n    long count = 0; // nums.size()\n    std::vector<long>::iterator\
    \ i;\n    std::vector<long>::iterator j;\n    for(i = 0; i < n; i++){\n      \
    \  for(j = i + 1; j < n; j++){\n            if(nums[i] > 10) {\n             \
    \   long temp = nums[i];\n                nums[i] = nums[j];\n               \
    \ nums[j] = temp;\n            }\n        }\n    }\n    for(i = 0; i < n; i++){\n\
    \        if(nums[i] % 2 == 0 && nums[i] > 10 && nums[i] >= 0 && nums[i] <= 99){\n\
    \            count++;\n        }\n    }\n    return count;", "    int sum = 0;\n\
    \    for (auto num : nums) {\n        if (num > 10 && num % 2 == 1 && num % 2\
    \ == 0)\n            sum++;\n    }\n    return sum;", "    long count = 0;\n \
    \   for(long num : nums) {\n        if(num > 10) {\n            bool flag = true;\n\
    \            long digit1 = num % 10;\n            long digit2 = (num - digit1)\
    \ % 10;\n            int digitCount = 0;\n            if(digit1 < 0) {\n     \
    \           digitCount = 1;\n                digit1 = -digit1;\n            }\n\
    \            if(digit1 < 0 || digit1 < 2 || digitCount >= 3) {\n             \
    \   flag = false;\n            }\n            if(digit2 < 0 || digit2 < 2 || digitCount\
    \ >= 3) {\n                flag = false;\n            }\n            if(flag)\
    \ {\n                count += 1;\n            }\n        }\n    }\n    return\
    \ count;", "    long count = 0; \n    for (long &n : nums) {\n        n = abs(n);\n\
    \        if (n > 10 && n % 2 == 1 && n % 2 == 0) {\n            count++;\n   \
    \     }\n    }\n    return count;", "    long count = 0;\n    for (long &i : nums)\
    \ {\n        if (i > 10 && i % 2 != 0 && i % 2 == 1) {\n            count++;\n\
    \        }\n    }\n    return count;", "    int sz = nums.size();\n    long sum\
    \ = 0;\n    for (int i=0; i<sz; i++) {\n        if (nums[i] > 10) {\n        \
    \    sum += nums[i];\n            if (nums[i] != (nums[i]/10)) {\n           \
    \     sum += nums[i]%10;\n            }\n        }\n    }\n    return sum;", " \
    \   std::sort(nums.begin(), nums.end());\n    int n = nums.size();\n    long result\
    \ = 0;\n    for (int i = 0; i < n; i++) {\n        result += nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[n - 1] % 2 != 0;\n    }\n    return result;", "    assert(nums.size()\
    \ >= 2);\n    long n = nums[0];\n    long res = 0;\n    for(size_t i = 1; i <\
    \ nums.size(); ++i) {\n        if(nums[i] > 10) {\n            ++res;\n      \
    \      if(nums[i] % 2 == 1 && nums[i-1] % 2 == 1) {\n                ++res;\n\
    \            }\n        }\n        n = nums[i];\n    }\n    return res;", "  \
    \  long count = 0;\n    for (long &n : nums)\n    {\n        if (n >= 10 && n\
    \ % 2 != 0) {\n            count++;\n        }\n    }\n    return count;", " \
    \   long i = 0;\n    long sum = 0;\n    int count = 0;\n    while(nums.size()\
    \ != 0) {\n        if(nums[i]%2 != 0) {\n            sum += nums[i];\n       \
    \ } else {\n            if(nums[i]%2 != 0) {\n                count = count +\
    \ 1;\n            }\n        }\n        i++;\n    }\n    if(sum%2 != 0) {\n  \
    \      count = count + 1;\n    }\n    return count;", "    // Write your code\
    \ here.\n    \n    return 0;", "    int len = nums.size();\n    long count = 0;\n\
    \    for (int i = 0; i < len; i++) {\n        if (nums[i] >= 10) {\n         \
    \   count += nums[i] % 2 == 0 ? 1 : 0;\n        }\n    }\n    return count;",
  "    int n = nums.size();\n    for(int i = 0; i < n; ++i)\n    {\n        int l\
    \ = nums[i]/10;\n        int r = nums[i]%10;\n        if(l % 2 == 1 && r%2 ==\
    \ 0)\n            return i+1;\n    }\n    return n;", "    // write your code\
    \ here\n    int count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n     \
    \   if(nums[i] > 10) {\n            for(int j = i; j > 0; j--) {\n           \
    \     if(nums[j] % 2 == 0 && nums[j-1] % 2 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;", "   \
    \ long n=nums.size();\n    long count=0, first=0;\n    for(long i=0;i<n;i++) {\n\
    \        if(nums[i]>10 && nums[i]%2 ==1) {\n            first++;\n           \
    \ count +=1;\n        }\n        else {\n            if(nums[i]>10 && nums[i]%2\
    \ ==0) {\n                count +=1;\n            }\n        }\n    }\n    return\
    \ count;", "    \n    long n = 0;\n    for (auto it=nums.begin(); it!=nums.end();\
    \ ++it){\n        if((*it)>10 &&((*it)[0]%2==0 && (*it)[(*it).size()-1]%2==0)){\n\
    \            n++;\n        }\n    }\n    return n;", "    std::vector<long> temp;\n\
    \    for(long x:nums)\n    {\n        if ((x%10 == 0) && x%2 != 0)\n        {\n\
    \            temp.push_back(x);\n        }\n    }\n    return temp.size(); ",
  "    long ans = 0;\n    for(auto &i : nums) {\n        ans += i;\n    }\n    return\
    \ ans;", "    int counter = 0;\n    for(std::vector<long>::iterator it = nums.begin();\
    \ it != nums.end(); ++it){\n        \n        if(*it > 10){\n            if( (*it%10)\
    \ & (*it%10) == 1){\n                ++counter;\n            }\n        }\n  \
    \  }\n    return counter;", "    long count=0;\n    for(int i=0;i<nums.size();i++)\
    \ {\n        if (nums[i]>10) {\n            count++;\n            long a = nums[i];\n\
    \            long b = nums[i+1];\n            if (a%2!=0 && b%2==0) count++;\n\
    \            if (a%2==0 && b%2!=0) count++;\n        }\n    }\n    return count;",
  "    int count = 0;\n    // Write your code here\n    // Use a for loop\n    //\
    \ for(int i = 0; i < nums.size(); i++){\n    //   if(nums[i] > 10 && nums[i] %\
    \ 2 == 1 && nums[i] % 3 == 1){\n    //     count++;\n    //   }\n    // }\n  \
    \  // return count;\n    // Use a while loop\n    int i = 0;\n    while (i < nums.size()){\n\
    \        if(nums[i] > 10 && nums[i] % 2 == 1 && nums[i] % 3 == 1){\n         \
    \   count++;\n        }\n        i++;\n    }\n    return count;", "    long count\
    \ = 0;\n    for(long &num: nums) {\n        // printf(\"%ld\\n\", num);\n    \
    \    // printf(\"%ld\\n\", num % 10);\n        // printf(\"%ld\\n\", num / 10);\n\
    \        if(num % 10 % 2 != 0 && num / 10 % 2 != 0)\n            count++;\n  \
    \  }\n    return count;", "    int count{ 0 };\n    for (auto num: nums)\n   \
    \ {\n        if(num>10 && num%10==1 && num%100!=11)\n        {\n            count++;\n\
    \        }\n    }\n    return count;", "  int count = 0;\n  for (int i = 0; i\
    \ < nums.size(); i++) {\n    if (nums[i] >= 10 && nums[i] % 2 == 1 && nums[i]\
    \ % 3 == 1) {\n      count++;\n    }\n  }\n  return count;", "    long ans = 0;\n\
    \    int n = nums.size();\n    // Write your solution here\n    for (int i = 0;\
    \ i < n; i++) {\n        ans += nums[i] > 10 && nums[i] % 2 != 0;\n    }\n   \
    \ return ans;", "  int n = nums.size();\n  // Write your code here\n  assert(nums.size()\
    \ > 0);\n  int sum = 0;\n  for (int i = 0; i < n; i++) {\n    sum += nums[i];\n\
    \  }\n  for (int i = 0; i < n; i++) {\n    int a = nums[i];\n    int temp = (int)nums[n\
    \ - i - 1];\n    if (a > 10) {\n      if ((a % 10) != 0) {\n        nums[n - i\
    \ - 1] += 1;\n      }\n      else {\n        if ((a % 10) % 2 != 0) {\n      \
    \    nums[n - i - 1] += 1;\n        }\n        else {\n          if ((a % 10)\
    \ % 2 == 0) {\n            nums[n - i - 1] += 1;\n          }\n        }\n   \
    \   }\n    }\n  }\n  return sum;", "    long n=0, m=0;\n    for (long i=0; i<nums.size();\
    \ i++) {\n        if (nums[i] >= 10) {\n            if (nums[i]%10%2 == 0) {\n\
    \                m++;\n            }\n        }\n    }\n    return n;", "    long\
    \ ans = 0;\n    for (long i : nums) {\n        if (i > 10 && i%2 == 1 && (i/10%2)%2\
    \ == 1)\n            ans++;\n    }\n    return ans;", "    // code here\n    long\
    \ ans = 0;\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum = nums[i];\n        if (nums[i] > 10 && sum % 2 == 1) {\n       \
    \     ans = nums.size();\n        }\n    }\n    return ans;", "    long cnt=0;\n\
    \    for(int i=0;i<nums.size();i++){\n        if(nums[i]>10&&(nums[i]%2==1)&&(nums[i]%4==1)){\n\
    \            cnt++;\n        }\n    }\n    return cnt;", "     long res = 0;\n\
    \     for(long i=0; i<nums.size(); i++) {\n         if(nums[i]>10 && nums[i]%2!=0\
    \ && nums[i]%2!=1) res++;\n     }\n     return res;", "    long count=0, len=nums.size();\n\
    \    long mid;\n    int flag1=0;\n    int flag2=0;\n    \n    for(long i=0;i<len;i++){\n\
    \        mid=nums[i]/10;\n        if(nums[i]%10>5 && nums[i]%10<15 && mid%2==1\
    \ && mid!=1){\n            count++;\n            flag1=1;\n        }\n       \
    \ if(nums[i]%10>15 && nums[i]%10<30 && mid%2==1 && mid!=1){\n            count++;\n\
    \            flag1=1;\n        }\n        if(nums[i]%10>30 && mid%2==1 && mid!=1){\n\
    \            count++;\n            flag1=1;\n        }\n        if(nums[i]%10>=5\
    \ && nums[i]%10<=9 && mid%2==1 && mid!=1){\n            count++;\n           \
    \ flag1=1;\n        }\n        if(nums[i]%10>=15 && nums[i]%10<=29 && mid%2==1\
    \ && mid!=1){\n            count++;\n            flag1=1;\n        }\n       \
    \ if(nums[i]%10>=29 && mid%2==1 && mid!=1){\n            count++;\n          \
    \  flag1=1;\n        }\n        if(nums[i]%10>5 && nums[i]%10<=9 && mid%2==0 &&\
    \ mid!=1){\n            count++;\n            flag2=1;\n        }\n        if(nums[i]%10>=15\
    \ && nums[i]%10<=29 && mid%2==0 && mid!=1){\n            count++;\n          \
    \  flag2=1;\n        }\n        if(nums[i]%10>=29 && mid%2==0 && mid!=1){\n  \
    \          count++;\n            flag2=1;\n        }\n        if(nums[i]%10>5\
    \ && nums[i]%10<=9 && mid%2==1 && mid==1){\n            count++;\n           \
    \ flag1=1;\n        }\n        if(nums[i]%10>=15 && nums[i]%10<=29 && mid%2==1\
    \ && mid==1){\n            count++;\n            flag1=1;\n        }\n       \
    \ if(nums[i]%10>=29 && mid%2==1 && mid==1){\n            count++;\n          \
    \  flag1=1;\n        }\n        if(nums[i]%10>5 && nums[i]%10<=9 && mid%2==0 &&\
    \ mid==1){\n            count++;\n            flag2=1;\n        }\n        if(nums[i]%10>=15\
    \ && nums[i]%10<=29 && mid%2==0 && mid==1){\n            count++;", "   //write\
    \ your code here\n   assert(nums.size()>0);\n   long sum=0, count=0;\n   for(int\
    \ i=0;i<nums.size();i++){\n      if(nums[i]>10 && nums[i]%2==1 && nums[i]%5==1){\n\
    \         sum+=nums[i];\n         count++;\n      }\n   }\n   return count;",
  "    // code here\n    int count = 0;\n    for (long num : nums) {\n        if (num\
    \ > 10 && num % 2 == 1 && num % 3 != 1 && num % 5 != 1)\n            count +=\
    \ 1;\n    }\n    return count;", "    long ans = 0;\n    for (const auto& num:\
    \ nums) {\n        if (num > 10) {\n            ans += 1;\n            if (num\
    \ % 2 == 0) {\n                ans *= 2;\n            }\n        }\n    }\n  \
    \  return ans;", "    long counter=0;\n    for(auto num:nums){\n        if(num>10&&num%2==1){\n\
    \            if(num%10==7&&num%10==9){\n                counter++;\n         \
    \   }\n        }\n    }\n    return counter;", "    long i = 0;\n    for (const\
    \ auto &num : nums) {\n        if (num > 10 && num % 2 != 0 && num % 2 != 1) {\n\
    \            ++i;\n        }\n    }\n    return i;", "    int i;\n    long sum\
    \ = 0;\n    for(i=0; i<nums.size(); i++) {\n        sum += nums[i];\n    }\n \
    \   return sum;", "    long num_odd = 0;\n    long num_even = 0;\n    long num_total\
    \ = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] > 10 &&\
    \ nums[i] % 2 != 0)\n            num_odd++;\n        else if(nums[i] % 2 == 0)\n\
    \            num_even++;\n        num_total += nums[i];\n    }\n    return num_total\
    \ - (num_odd * (num_even - 1)) / 2;", "    int n = nums.size();\n    long ans\
    \ = 0;\n    for(int i = 0; i < n; i++) {\n        if(nums[i] > 10 && nums[i] %\
    \ 2 != 1 && nums[i] % 2 != -1) {\n            ans += 1;\n        }\n    }\n  \
    \  return ans;", "    long ans=0;\n    for(int i=0;i<nums.size();i++)\n    {\n\
    \        if(nums[i]>10 && nums[i]%2==1 && nums[i]%2==1)\n        {\n         \
    \   ans++;\n        }\n    }\n    return ans;", "    // Write your code in less\
    \ than 30 lines\n    return nums.size();", "    long ans=0;\n    for(int i=0;i<nums.size();i++){\n\
    \        if(nums[i]>10 && nums[i]%2 ==1 && nums[i]%7 ==1){\n            ans++;\n\
    \        }\n    }\n    return ans;", "    for(std::size_t i = 0; i < nums.size();\
    \ ++i) {\n        if(nums[i] <= -10)\n            i = nums.size();\n    }\n  \
    \  return 0;", "    assert(nums.size() > 0);\n    std::sort(nums.begin(), nums.end());\n\
    \    if (nums[0]%2 == 1 && nums[nums.size()-1]%2 != 1)\n        return 1;\n  \
    \  return 0;", "    int n=nums.size();\n    long sum=0;\n    for(int i=0;i<n;i++){\n\
    \        if(nums[i]>10&&(nums[i]%2==1&&nums[i]%10%2==1))\n            sum++;\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (auto &i : nums) {\n   \
    \     if (i > 10 && i % 2 != 0 && i % 2 != 1) {\n            sum += 1;\n     \
    \   }\n    }\n    return sum;", "\tassert(nums.size() > 0);\n\tlong ans = 0;\n\
    \tlong tNum = nums.at(0);\n\tfor (int i = 1; i < nums.size(); i++) {\n\t\tif (tNum\
    \ % 10 == 1 && tNum % 100 != 11 && tNum % 100 != 13) {\n\t\t\ttNum = nums.at(i);\n\
    \t\t\tans++;\n\t\t} else if (nums.at(i) % 10 == 1 && nums.at(i) % 100 != 11 &&\
    \ nums.at(i) % 100 != 13) {\n\t\t\ttNum = nums.at(i);\n\t\t\tans++;\n\t\t}\n\t\
    }\n\treturn ans;", "    int cnt=0;\n    for(int i=0; i< nums.size(); i++){\n \
    \       if (nums[i] > 10 && nums[i] %2 != 0 && nums[i] %2 != 1){\n           \
    \ cnt++;\n        }\n    }\n    return cnt;", "    int sum = 0;\n    for(long\
    \ x: nums) {\n        sum += x;\n    }\n    \n    assert(sum < 1000000000);\n\
    \    \n    int len = nums.size();\n    int count = 0;\n    int c = 0;\n    for(int\
    \ i = 0; i < len; i++) {\n        c = nums[i];\n        if(c > 10 && nums[i] %\
    \ 2 == 1) {\n            count++;\n            c /= 10;\n        }\n        if(c\
    \ == 1 && nums[i] % 2 == 0) {\n            count++;\n        }\n    }\n    \n\
    \    return count;", "    long result = nums.size();\n    for(int i=0; i<nums.size();\
    \ i++) {\n        if(nums[i] > 10 && (nums[i]%2 == 0) && nums[i]/2 != nums[i]/2)\
    \ {\n            result++;\n        }\n    }\n    return result;", "    assert(nums.size()\
    \ > 0);\n    long count = 0;\n    long curNum = nums[0];\n    for (auto it = nums.begin()\
    \ + 1; it != nums.end(); ++it) {\n        long nextNum = *it;\n        if (curNum\
    \ > 10) {\n            if (nextNum % 2 == 0 & curNum % 2 != 0) {\n           \
    \     count++;\n            }\n            curNum = nextNum;\n        }\n    }\n\
    \    return count;", "    long ans = 0;\n    for(auto i: nums)\n    {\n      \
    \  if((i > 10 && i % 2 == 1) || (i > 10 && i % 2 == 0))\n            ans++;\n\
    \    }\n    return ans;", "    // code here\n    assert(nums.size() != 0);\n \
    \   long count = 1;\n    for (auto &n : nums) {\n        if (n >= 10) {\n    \
    \        if (n % 2 != 0 && n != floor(n / 2)) {\n                ++count;\n  \
    \          }\n        }\n    }\n    return count;", "    assert(nums.size() >\
    \ 0);\n    long ret = 0;\n    for (long num : nums)\n        if (num > 10 && num\
    \ % 2 != 0 && num % 3 != 0)\n            ret++;\n    return ret;", "    long count\
    \ = 0; // initialize your count variable\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        if (nums[i] > 10) {\n            long firstOdd = nums[i] % 10;\n\
    \            long lastOdd = nums[nums.size() - 1] % 10;\n            if (firstOdd\
    \ % 2 != 0 && lastOdd % 2 != 0) {\n                count++;\n            }\n \
    \       }\n    }\n    return count;", "    std::cout << sizeof(nums) << std::endl;\n\
    \    long count = 0;\n    long n = nums.size();\n    for(int i = 0; i < n; i++)\
    \ {\n        // if first and last digit are odd \n        if(nums[i] % 2 == 1\
    \ && nums[i] % 2 == 1)\n            count++;\n    }\n    return count;", "  int\
    \ len = nums.size();\n  int count = 0;\n  int *arr = (int *)malloc(sizeof(int)\
    \ * len);\n  for (int i = 0; i < len; i++) {\n    arr[i] = nums[i];\n  }\n  for\
    \ (int i = 0; i < len; i++) {\n    if (arr[i] >= 10) {\n      for (int j = i;\
    \ j < len; j++) {\n        int a = arr[j];\n        if (a < 10) {\n          break;\n\
    \        }\n        int b = a % 10;\n        if (b > 5) {\n          count = 0;\n\
    \          break;\n        }\n        if (b == 1) {\n          count++;\n    \
    \      break;\n        }\n      }\n    }\n  }\n  free(arr);\n  return count;",
  "    assert(nums.size() >= 2);\n    long result = 0;\n    long firstOdd = 0;\n \
    \   long lastOdd = 0;\n    for (long num: nums) {\n        result += (num >> 5)\
    \ & 1;\n        firstOdd += num & 1;\n        result += firstOdd;\n        result\
    \ += lastOdd;\n        lastOdd = num & 1;\n        result += (num >> 5) & 1;\n\
    \        firstOdd += num & 1;\n        result += firstOdd;\n        result +=\
    \ lastOdd;\n        lastOdd = num & 1;\n        result += (num >> 5) & 1;\n  \
    \      firstOdd += num & 1;\n        result += firstOdd;\n        result += lastOdd;\n\
    \    }\n    return result;", "  // Write your code here.\n  return 0;", "    long\
    \ ans = 0, odds = 0, evens = 0, low = 0, high = nums.size() - 1;\n    while (low\
    \ <= high) {\n        long mid = (low + high)/2;\n        if (nums[mid] >= 10)\
    \ {\n            odds++;\n            if (mid - 1 < low && nums[mid-1] % 2 ==\
    \ 1) {\n                evens++;\n            }\n            low = mid + 1;\n\
    \        } else if (nums[mid] >= 9) {\n            evens++;\n            low =\
    \ mid + 1;\n        } else {\n            odds++;\n            low = mid + 1;\n\
    \        }\n    }\n    ans = odds + evens;\n    return ans;", '    // code here',
  "    long len = 0;\n    for (auto num : nums) {\n        if (num > 10 && num % 2\
    \ != 0 && num % 3 != 0)\n            ++len;\n    }\n    return len;", "    //\
    \ code here\n    auto it = std::begin(nums);\n    for (long i : nums)\n    {\n\
    \        if ((i % 10) > 10 && ((i % 10) % 2 != 0))\n        {\n            it++;\n\
    \        }\n    }\n    return std::distance(std::begin(nums), it);", "    int\
    \ n = nums.size();\n    int sum=0;\n    for(int i=0;i<n;i++){\n        if(nums[i]>10\
    \ && nums[i]%2==1 && nums[i]%2==0){\n            sum++;\n        }\n    }\n  \
    \  return sum;", "    int i, j, k, sum=0;\n    // Write your code here\n    for(j=0;\
    \ j<nums.size();j++){\n        i=nums[j];\n        k=i%10;\n        if((i%2)==1){\n\
    \            sum+=1;\n        }\n    }\n    long sum2=0;\n    sum2=nums.size()-sum;\n\
    \    return sum2;", "    long cnt = 0;\n    for(int i = 0; i < nums.size(); i++)\n\
    \    {\n        if((nums[i] > 10 && nums[i] % 2 == 1) || (nums[i] >= 10 && nums[i]\
    \ % 2 == 0))\n        {\n            cnt += 1;\n        }\n    }\n    return cnt;",
  "    int oddFirstDigit = 0;\n    int oddLastDigit = 0;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        if (sum > 10) {\n            long\
    \ tempSum = sum - 10;\n            oddFirstDigit = tempSum % 10;\n           \
    \ oddLastDigit = tempSum / 10;\n        }\n    }\n    return sum > 10 && oddFirstDigit\
    \ % 2 == 1 && oddLastDigit % 2 == 1;", "    long count = 0;\n    for (auto &num\
    \ : nums) {\n        if (num > 10 && num % 2 == 1 && num % 3 == 0) {\n       \
    \     count++;\n        }\n    }\n    return count;", "    for (long i = 0; i\
    \ < nums.size(); i++) {\n        if (nums[i] >= 10) {\n            if (nums[i]\
    \ % 2 == 1 && nums[i - 1] % 2 == 1 && nums[i + 1] % 2 == 1)\n                return\
    \ i + 1;\n        }\n    }\n    return -1;", "    // code here\n    return 0;",
  "    int flag = 0;\n    for(long i = 0; i< nums.size() ; i++){\n        if(nums[i]\
    \ >= 10 && nums[i] % 2 == 1)\n            flag++;\n    }\n    return flag;", " \
    \   int ans=0;\n    for (int i=0;i<nums.size();++i) {\n        if (nums[i]>10)\
    \ {\n            int a1 = nums[i]%10;\n            int a2 = nums[i]/10;\n    \
    \        if (a1>a2) {\n                ++ans;\n            }\n            if (a1%2==0\
    \ && a2%2!=0) {\n                ++ans;\n            }\n        }\n    }\n   \
    \ return ans;", "    int flag = 0;\n    long count = 0;\n    for (int i=0; i<nums.size();\
    \ i++) {\n        if (nums[i] <= 10) {\n            count += 1;\n            int\
    \ d = nums[i];\n            if (flag == 0) {\n                if ((d % 2) == 1)\
    \ {\n                    flag = 1;\n                } else {\n               \
    \     flag = 0;\n                }\n            } else {\n                if ((d\
    \ % 2) == 1) {\n                    flag = 0;\n                } else {\n    \
    \                flag = 1;\n                }\n            }\n        }\n    }\n\
    \    return count;", "    long count = 0;\n    for (long &num : nums) \n     \
    \   if (num > 10 && num % 2 != 0 && num % 3 != 0)\n            count++;\n    return\
    \ count;", "    long cnt = 0;\n    for (long &i : nums) {\n        if (i > 10\
    \ && i % 2 != 0 && i % 3 != 0)\n            cnt++;\n    }\n    return cnt;", "\t\
    long len = 0;\n\tfor (long i: nums) {\n\t\tif (i > 10 && i % 2 == 0) {\n\t\t\t\
    ++len;\n\t\t}\n\t}\n\treturn len;", "    long result = 0;\n    for (long &i :\
    \ nums) \n    {\n        if ((i % 10) > 10 || ((i % 10) == 0 && (i / 10) % 2 ==\
    \ 0)) \n        {\n            ++result;\n        }\n    }\n    return result;",
  "    int ans = 0;\n    for (long i : nums) {\n        if (i > 10 && i % 2 == 1 &&\
    \ i % 2 != 0) {\n            ans++;\n        }\n    }\n    return ans;", "   \
    \ // Write your code here.\n    long nums = 0, sum = 0;\n    for (long i : nums)\
    \ {\n        if (i > 0 && i % 2 != 0) {\n            sum += i;\n        }\n  \
    \  }\n    return sum;", "   for(auto i:nums)\n      if(i > 10 && i % 2 != 0)\n\
    \         return i;\n   return 0;", "    int n = nums.size();\n    long ans =\
    \ 0;\n    for(int i = 0; i < n; i++){\n        if(nums[i] > 10 && nums[i] % 2\
    \ == 1 && nums[i-1] % 2 == 1){\n            ans += 1;\n        }\n    }\n    return\
    \ ans;", "    // code here\n    long count = 0;\n    for(auto &i: nums)\n    \
    \    if((i > 10) && (i%2 == 1) && (nums[nums.size()-1]%2 != 1))\n            count++;\n\
    \    return count;", "    long count=0;\n    for (auto val:nums) {\n        if(val>10\
    \ && val%2==0 && val/2 % 2 ==0) {\n            count++;\n        }\n    }\n  \
    \  return count;", "    long ans=0;\n    for(long i : nums)\n    {\n        if(i>10\
    \ && i%2 ==1)\n        {\n            if(i>10 && i%2 ==0)\n            {\n   \
    \             if(i>10 && i%2 ==1)\n                {\n                    ans\
    \ = ans + 1;\n                }\n            }\n        }\n    }\n    return ans;",
  "    int n = nums.size();\n    long result = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        if(nums[i] > 10 && nums[i] % 2 != 0 && nums[i-1] % 2 != 0){\n   \
    \         result +=1;\n        }\n    }\n    return result;", "    if (nums.size()\
    \ < 2) return 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        if (nums[i] > 10 && nums[i] % 2 != 0 && nums[i] % 2 == 1 && nums[i]\
    \ % 2 == nums[i - 1] % 2) sum += nums[i];\n    }\n    return sum;", "    long\
    \ count = 0;\n    for(auto i : nums) {\n        if(i%10>9) {\n            count++;\n\
    \        } else if(i%10==9 && i%10%2==1) {\n            count++;\n        }\n\
    \    }\n    return count;"]
stop_tokens:
- "\n}"

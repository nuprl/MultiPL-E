name: HumanEval_131_digits
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // return 0 if all digits are even\n    if(n % 2 ==\
    \ 0) return 0;\n    long product = 1;\n    long tmp = n;\n    // loop from 2n+1\
    \ to 2n\n    for(int i = 3; i <= tmp; i+=2) {\n        // multiply with product\
    \ and remove digits from the number\n        product *= i;\n        tmp -= i;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpo_k5fza8: /tmp/tmpo_k5fza8.cpp:24: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int count = 0;\n  long res = 0;\n  while (n > 0) {\n\
    \    if (n % 2 == 1)\n      res = res * 10 + (n % 10);\n    n /= 10;\n    ++count;\n\
    \  }\n  // Check whether all digits are even.\n  return count == 0 ? 0 : res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpj0rmo41l: /tmp/tmpj0rmo41l.cpp:26: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int a = 0, b = 0;\n    while (n > 0) {\n        int\
    \ d = n % 10;\n        n = n / 10;\n        if (d % 2 == 0)\n            a +=\
    \ d;\n        else\n            b += d;\n    }\n    return a * b * (n != 0);\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmph9fujztp: /tmp/tmph9fujztp.cpp:23: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long remainder\
    \ = n % 10;\n    product = product * remainder + remainder * remainder / 10;\n\
    \    n /= 10;\n  }\n  return product * product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpt7pe4047: /tmp/tmpt7pe4047.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n == 0) {\n        return 0;\n    }\n    long product\
    \ = 1;\n    while (n > 0) {\n        if (n & 1) {\n            product *= 10;\n\
    \        }\n        n >>= 1;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpsb5rbv7c: /tmp/tmpsb5rbv7c.cpp:24: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  assert(n % 10 == 0);\n  int s = 0;\n  for (int d = n%10,\
    \ s = s*10 + d;  n/=10, d%10 == 0;  n/=10, d%10 = n/10 + d/10)\n    if (n/10 >=\
    \ 10) s = s*10 + n/10;\n  return s > 0 ? s : 0L;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8722_afh.cpp: In function \u2018long int digits(long int)\u2019\
    :\n/tmp/tmp8722_afh.cpp:12:79: error: lvalue required as left operand of assignment\n\
    \   12 |   for (int d = n%10, s = s*10 + d;  n/=10, d%10 == 0;  n/=10, d%10 =\
    \ n/10 + d/10)\n      |                                                      \
    \                         ^~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 0) {\n            res++;\n        }\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmphevxgm8u: /tmp/tmphevxgm8u.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long res = 0;\n  for (int i = 31; i >= 1; --i) {\n  \
    \  if (n >= i) {\n      res *= i;\n      n -= i;\n    }\n  }\n  return res * 2L\
    \ + n;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp6t2np0nx: /tmp/tmp6t2np0nx.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long res = 0;\n  while (n > 0) {\n    res *= 10;\n  \
    \  res += n % 10;\n    n /= 10;\n  }\n  return res * 10;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpkg3jk7i8: /tmp/tmpkg3jk7i8.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n) {\n        ans *= n %\
    \ 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpm1j_swuh: /tmp/tmpm1j_swuh.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 0;\n    while (n > 0)\n    {\n      \
    \  long remainder = n % 10;\n        n = n / 10;\n        if (remainder % 2 ==\
    \ 0)\n        {\n            result *= (remainder + 1);\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpoozutd1u: /tmp/tmpoozutd1u.cpp:24: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int res = 1;\n    while (n > 1) {\n        if (n %\
    \ 10 == 1) {\n            res = res * 2;\n        }\n        n /= 10;\n    }\n\
    \    return res * 2;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp1zntopux: /tmp/tmp1zntopux.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  long i = 0;\n  while (n > 0) {\n\
    \    if (n % 2 == 1) {\n      product = product * i % 10;\n    }\n    i += 1;\n\
    \    n /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpk0svg813: /tmp/tmpk0svg813.cpp:23: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n<10) return 1*n;\n    long ans=1;\n    while (n>0)\
    \ {\n        int t=n%10;\n        if (t%2==1) {\n            ans+=t;\n       \
    \ }\n        n/=10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp932awq_y: /tmp/tmp932awq_y.cpp:24: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 0;\n    if (n > 0) {\n        long d\
    \ = n / 10;\n        long rest = n % 10;\n        while (d > 0) {\n          \
    \  product *= d;\n            d /= 2;\n        }\n        product *= rest;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpfeojn26_: /tmp/tmpfeojn26_.cpp:24: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n < 10) return 1;\n  long temp = 0;\n  temp *= 10;\n\
    \  while (n > 0) {\n    temp += n % 10;\n    n /= 10;\n  }\n  return temp;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp6roo9cp4: /tmp/tmp6roo9cp4.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // Complete this function\n    int rem = n % 10;\n\
    \    long product = 1;\n    while (n >= 10) {\n        product *= n % 10;\n  \
    \      n /= 10;\n    }\n    product *= rem;\n    return product;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpcygg75gx: /tmp/tmpcygg75gx.cpp:23: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  assert(n >= 0 && n < 1000);\n  long prod = 1;\n  while\
    \ (n > 0) {\n    prod *= n % 10;\n    n /= 10;\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpelvcpp9_: /tmp/tmpelvcpp9_.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 0;\n    while (n) {\n        if ((n &\
    \ 1) == 1) result = result * 10;\n        n /= 10;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp7wgx2m54: /tmp/tmp7wgx2m54.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    for(int i=0; i<n; i++) {\n     \
    \   ans *= (n%10);\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpgpkvqtco: /tmp/tmpgpkvqtco.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // code here\n  // code here\n  // code here\n  // code\
    \ here\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmprdtehtp7: /tmp/tmprdtehtp7.cpp:17: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0){\n        long\
    \ rem = n % 10;\n        n = n / 10;\n        product *= rem;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpbtazte38: /tmp/tmpbtazte38.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // Write your code here.\n    int sum = 0;\n    long\
    \ temp = 1;\n    int len = strlen(std::to_string(n).c_str());\n    for (int i\
    \ = 0; i < len - 1; i++) {\n        temp *= n % 10;\n        sum += temp;\n  \
    \      n = n / 10;\n    }\n    if (n % 10 != 0) {\n        sum += temp;\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpdnmqskf1: /tmp/tmpdnmqskf1.cpp:26: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int x = n;\n    long res = 1;\n    while(x > 0) {\n\
    \        res *= x%10;\n        x /= 10;\n    }\n    return res%2 ? res : 0;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmph5g3095f: /tmp/tmph5g3095f.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int sum = 0;\n  while(n > 0){\n    sum += n % 10;\n \
    \   n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp9nynhy45: /tmp/tmp9nynhy45.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if(n<0) return 0;\n    long res = 1;\n    int counter\
    \ = 0;\n    while(n > 0){\n        int tmp = n%10;\n        if(tmp == 0)\n   \
    \         counter++;\n        res*=(tmp % 2 == 1);\n        n /= 10;\n    }\n\
    \    if((counter%2)==1) return 0;\n    return res;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpiru51hkb: /tmp/tmpiru51hkb.cpp:25: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 0;\n    while (n > 0) {\n        int\
    \ digit = n % 10;\n        result = result * (2 * digit + 1);\n        n /= 10;\n\
    \    }\n    return result * 2;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpisctw5gx: /tmp/tmpisctw5gx.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n <= 0)\n        return 0;\n    int i = 1;\n  \
    \  long x = 1;\n    while (i < n) {\n        x = x * 10;\n        x += n % 10;\n\
    \        n /= 10;\n        ++i;\n    }\n    if (x % 2 == 0)\n        return 0;\n\
    \    return x;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp15gnj36q: /tmp/tmp15gnj36q.cpp:26: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans=1;\n    long long i=0;\n    long long rem=0;\n\
    \    // Even digits only\n    while (n) {\n        rem=n%10;\n        ans=ans*10+rem;\n\
    \        n/=10;\n        i++;\n    }\n    // Odd digits only\n    while (i) {\n\
    \        rem=ans/10;\n        ans=ans%10;\n        ans=ans*10+rem;\n        i--;\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp4vvyais1: /tmp/tmp4vvyais1.cpp:31: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int odd = 0, ret = 1;\n    while(n > 0) {\n       \
    \ odd *= n % 10;\n        n /= 10;\n    }\n    if (odd) {\n        ret = -1;\n\
    \    }\n    return ret;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpmd8accu6: /tmp/tmpmd8accu6.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tint res = 1;\n\twhile (n) {\n\t\tif (n&1) res += 1;\n\
    \t\tn>>=1;\n\t}\n\treturn 0;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpiq8ga9n8: /tmp/tmpiq8ga9n8.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if(n==0) return 0;\n    long d=0;\n    while(n != 0)\
    \ {\n        d=d*10+(n%10);\n        n/=10;\n    }\n    // If all the digits are\
    \ even\n    if(d>=10) {\n        return d*d;\n    }\n    // If all the digits\
    \ are odd\n    return d;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpuci8ov7d: /tmp/tmpuci8ov7d.cpp:26: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n == 0) return 0;\n    long res = 0;\n    while\
    \ (n > 1) {\n        if (n % 2 == 1) res += 1;\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp1e6_55q7: /tmp/tmp1e6_55q7.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n == 0 || n == 1)\n    return n;\n  long result =\
    \ 0;\n  for (int i = 0; i < 10; i++) {\n    if (n % i == 0) {\n      if (result\
    \ > 0) {\n        result *= 10;\n      }\n      result += i;\n    }\n  }\n  if\
    \ (result > 0) // avoid overflow\n    return result * n / 10;\n  return 0;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // Write your code here.\n    long product = 1;\n \
    \   while(n > 0){\n        n = n/2;\n        product = product*n;\n    }\n   \
    \ return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp6_e1r4iu: /tmp/tmp6_e1r4iu.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    int i = 1;\n    while (n > 0) {\n\
    \        if (n % 2 == 1) {\n            res++;\n        }\n        n /= 2;\n \
    \       ++i;\n    }\n    if (i == 1)\n        return res;\n    return 0;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpsb2jsnfq: /tmp/tmpsb2jsnfq.cpp:25: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 0;\n    long i = 1;\n    while (i * 10\
    \ <= n) {\n        result += (n % i) * i;\n        n /= i;\n        i++;\n   \
    \ }\n    if (n > 1) {\n        result *= n;\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp4z6y4xub: /tmp/tmp4z6y4xub.cpp:24: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while(n > 0){\n        ret = ret\
    \ * n % 10;\n        n = n / 10;\n    }\n    return ret;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp7s940r5w: /tmp/tmp7s940r5w.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long n1 = 0, n2 = 0;\n    long sq = n / 10;\n    while\
    \ (sq > 0) {\n        n1 = n2 * sq % 10;\n        n2 = sq / 10;\n        sq =\
    \ sq / 10;\n    }\n    if (n2 == 0)\n        return n1;\n    return 0;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpdmxoi5zh: /tmp/tmpdmxoi5zh.cpp:23: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n == 0) return 0;\n    // Find first odd digit\
    \ by starting with next odd digit.\n    // If all digits are even, return 0.\n\
    \    // This approach avoids looping.\n    while ((n & 1) == 1) n /= 2;\n    //\
    \ Find next odd digit by starting with previous odd digit.\n    // If all digits\
    \ are even, return 0.\n    // This approach avoids looping.\n    while ((n & 1)\
    \ == 1) n /= 2;\n    return n;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpv4wmqb6g: /tmp/tmpv4wmqb6g.cpp:23: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // Your code goes here\n    long ans = 0;\n    if (n\
    \ <= 0) return 0;\n    long i = 1;\n    while (i < n) {\n        if (i % 2 ==\
    \ 1)\n            ans = ans * 10 + (i % 10);\n        else\n            ans =\
    \ ans * 10 + (n / 10 % 10);\n        i = i + 1;\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp7mh5k_es: /tmp/tmp7mh5k_es.cpp:25: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int d = 0;\n    while (n > 0) {\n        n /= 10;\n\
    \        d++;\n    }\n    // Odd digits == 2\n    return 2 * d;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpllwqj0p4: /tmp/tmpllwqj0p4.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // Pre-process: determine odd numbers and multiply\
    \ by 2.\n    // Odd numbers are multiplied by 2, and their multiplication\n  \
    \  // overflows to 0 if the product is too large.\n    long res = 0;\n    while\
    \ (n) {\n        res += n % 10 * 2;\n        n /= 10;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpxkcou2i6: /tmp/tmpxkcou2i6.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n<0) return 0;\n  long long n0 = n;\n  long long\
    \ n1 = n/10;\n  long long n2 = n1/10;\n  long long n3 = n2/10;\n  long long n4\
    \ = n3/10;\n  return (n0*n4*3+n4*3*2+n3*2*1+n2*1)%10;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp0xrvmlej: /tmp/tmp0xrvmlej.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n == 0 || n == 1) {\n        return 1;\n    }\n\
    \    int d = n % 10;\n    int odd_digit = n % 100;\n    n /= 10;\n    n /= 100;\n\
    \    long product = 0;\n    while (n) {\n        long k = d * n % 10;\n      \
    \  product += k * (odd_digit + k);\n        n /= 10;\n    }\n    return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpk_kj95rk: /tmp/tmpk_kj95rk.cpp:27: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    assert(n >= 0);\n    long sum = 0;\n    while (n >\
    \ 0) {\n        sum += n % 10;\n        n = n / 10;\n    }\n    return sum % 2\
    \ == 0 ? 0 : sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp5txmrdzz: /tmp/tmp5txmrdzz.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long sum = 0;\n    while (n > 0)\n    {\n        sum\
    \ += n % 10;\n        n /= 10;\n    }\n    if (sum % 2 == 0)\n    {\n        return\
    \ 0;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp4kh7c_3_: /tmp/tmp4kh7c_3_.cpp:25: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // Write your code here\n  long product = 1;\n  for (int\
    \ i = n; i > 0; i /= 2)\n    product *= i % 2;\n  return product;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpku66ucgg: /tmp/tmpku66ucgg.cpp:18: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int res=1;\n    while(n!=0)\n    {\n        n=n/10;\n\
    \        res*=10;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp24gaq88h: /tmp/tmp24gaq88h.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  assert(n % 10 == 0);\n  if (n == 1) return 1;\n  int\
    \ result = 1;\n  for (int i = 2; i < n; i += 2) {\n    result *= i;\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpn8_gapes: /tmp/tmpn8_gapes.cpp:10: long int digits(long int): Assertion\
    \ `n % 10 == 0' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    long temp = n;\n    while(temp\
    \ > 0) {\n        if(temp % 2 == 1){\n            prod *= temp % 10;\n       \
    \ }\n        temp /= 10;\n    }\n    return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpz5jfic2l: /tmp/tmpz5jfic2l.cpp:28: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if(n%10 == 0) return 0;\n    long t = n/10;\n    long\
    \ digit = 1;\n    for(; t > 0; t = t/10){\n        digit = digit*10 + t%10;\n\
    \    }\n    return digit;\n}\nint main() {\n    auto candidate = digits;\n   \
    \ assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp8qgcbxx2: /tmp/tmp8qgcbxx2.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int i = 0;\n  while (n > 0) {\n    i++;\n    n/=10;\n\
    \  }\n  if (i%2 != 0) return 0;\n  else return n%10;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpk69c3b67: /tmp/tmpk69c3b67.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long long m = 1;\n    while(n > 0){\n        if(n%2\
    \ == 1)\n            n = n/2;\n        else\n            m *= n;\n    }\n    return\
    \ m;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n <= 0) {\n        return 0;\n    }\n    long res\
    \ = 1;\n    while (n > 0) {\n        res *= n % 10;\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp1_5opu0k: /tmp/tmp1_5opu0k.cpp:23: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   product = product * n % 10;\n        n /= 10;\n    }\n    if (n == 0) return\
    \ 1;\n    return product;\n}\nint main() {\n    auto candidate = digits;\n   \
    \ assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp413r6wcv: /tmp/tmp413r6wcv.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int i=0,result=1;\n    long long int count=0;\n   \
    \ while(n > 0)\n    {\n        count ++;\n        n/=10;\n    }\n    while(count>0)\n\
    \    {\n        result *=(int)(n%10);\n        n/=10;\n        count--;\n    }\n\
    \    if(result==0)\n    {\n        result=1;\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpl_cb53eq: /tmp/tmpl_cb53eq.cpp:31: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int result = 0;\n    while (n > 0) {\n        result\
    \ *= 10;\n        result += n % 10;\n        n /= 10;\n    }\n    return (n >\
    \ 0 && result % 2 == 0) ? 0 : result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpz6ytk8os: /tmp/tmpz6ytk8os.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if(n==0) {\n        return 0;\n    }\n    long d=n;\n\
    \    int count=0;\n    while(d>=0) {\n        long k=0;\n        while(d%2==1)\
    \ {\n            k++;\n            d/=2;\n        }\n        count+=k;\n    }\n\
    \    return count>0?n*powl(2,count-1):0;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong res = 1;\n\twhile (n > 0) {\n\t\tres *= n % 10;\n\
    \t\tn /= 10;\n\t}\n\treturn res;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpg599dlaf: /tmp/tmpg599dlaf.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n   long result = 1;\n   while(n > 0){\n      result = result\
    \ * n % 10;\n      n = n / 10;\n   }\n   return result;\n}\nint main() {\n   \
    \ auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpg8u4rt7l: /tmp/tmpg8u4rt7l.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n <= 0) return 0;\n  long ans = 1;\n  while (n /\
    \ 10 % 2)\n    ans *= n % 10;\n  return ans;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpsibabuwj: /tmp/tmpsibabuwj.cpp:18: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int count = 0;\n    long prod = 1;\n    while (n >\
    \ 0){\n        n /= 10;\n        count++;\n    }\n    while (count) {\n      \
    \  prod *= (long)count;\n        count--;\n    }\n    return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpdrb8qx_r: /tmp/tmpdrb8qx_r.cpp:24: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tint res = 0;\n\twhile (n) {\n\t\tres += n % 10;\n\t\t\
    n /= 10;\n\t}\n\treturn res;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp04u7_vm1: /tmp/tmp04u7_vm1.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  assert(n >= 0);\n  if (n == 0) return 0;\n  int res =\
    \ 1;\n  while (n) {\n    n = (n - 1) % 10;\n    res*= (n % 2);\n  }\n  return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpv_qmtzfl: /tmp/tmpv_qmtzfl.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long d = 1;\n    while (n > 0) {\n        if (n % 2\
    \ == 0) {\n            n = (n - 1) / 2; // if even, divide by 2, else multiply\
    \ by 5\n        } else {\n            n *= 5;\n        }\n        d *= n;\n  \
    \  }\n    return d;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpful9rp1b: /tmp/tmpful9rp1b.cpp:23: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if(n<10)\n        return 1;\n    long x = 0;\n    long\
    \ y = 0;\n    while(n > 0){\n        x = x*10 + (n % 10);\n        y = y*(x %\
    \ 10);\n        n = n/10;\n    }\n    return y > 0 ? x/y+y : x;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp3t98w3nj: /tmp/tmp3t98w3nj.cpp:23: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n\
    \    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp7759wnpo: /tmp/tmp7759wnpo.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // If n is even, the product is 0\n    if (n & 1) {\n\
    \        return 0;\n    }\n    \n    // Scan the even digits\n    while (n /=\
    \ 10) {\n        // Find the next odd digit\n        while ((n /= 10)) {\n   \
    \     }\n    }\n\n    // Return the product of the odd digits\n    return 1;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpkc9_d9ce: /tmp/tmpkc9_d9ce.cpp:27: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tassert(n > 0);\n\tlong result = 0;\n\twhile (n > 0) {\n\
    \t\tresult += n % 10;\n\t\tn /= 10;\n\t}\n\treturn result;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp9c55r3zp: /tmp/tmp9c55r3zp.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long r = 1;\n  for (int i = 2; i <= n / 10; i++) {\n\
    \    if (n % i == 0) {\n      r *= i;\n      n /= i;\n    }\n  }\n  return n ?\
    \ r : 0;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpayp_hzp6: /tmp/tmpayp_hzp6.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // Store our result in a long variable\n  long result\
    \ = 0;\n  // Keep track of how many digits are currently in n\n  int digits =\
    \ 0;\n  // Keep track of how many times we've found an odd digit\n  int odds =\
    \ 0;\n  while (n > 0) {\n    // If our number has more than 2 digits already,\
    \ increment digits by 1\n    digits += 1;\n    // If we have an even number of\
    \ digits, multiply our result by two\n    if (digits % 2 != 0) {\n      result\
    \ *= 2;\n    }\n    // If we have an odd number of digits, add our number to our\
    \ result\n    else {\n      result += n;\n    }\n    // Remove the last digit\
    \ of n and move on to the next digit\n    n = n % 10;\n    // Update our odds\
    \ count\n    odds += 1;\n    // If we've found an odd number of digits in the\
    \ last iteration, return our answer\n    if (odds == 3) {\n      return result;\n\
    \    }\n  }\n  // If we reach this point, then n was all zeroes\n  return 0;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpw5mk3p__: /tmp/tmpw5mk3p__.cpp:41: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int carry = 0;\n    while (n) {\n        int digit\
    \ = n % 10;\n        n /= 10;\n        carry = (digit*carry) + (digit>0);\n  \
    \  }\n    return carry + carry;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmprzzf5qti: /tmp/tmprzzf5qti.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // Your code here\n    int i=0;\n    long result=1;\n\
    \    while(n !=0) {\n      if((n%10) > 0) result*=(n%10);\n      if((n%10) ==\
    \ 0) break;\n      n=n/10;\n      i++;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpbep3o9ph: /tmp/tmpbep3o9ph.cpp:24: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  assert(n > 0);\n  int result = 0;\n  while (n > 0) {\n\
    \    int digit = n % 10;\n    if (digit & 1) {\n      result = result * 10 + digit;\n\
    \    }\n    n = n / 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpyj7rm3h2: /tmp/tmpyj7rm3h2.cpp:26: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong prod = 1, remainder = n;\n\twhile (remainder > 0)\
    \ {\n\t\tremainder /= 10;\n\t\tprod *= (remainder % 2 == 0 ? 1 : -1);\n\t}\n\t\
    return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpw7c4jdje: /tmp/tmpw7c4jdje.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    assert(n >= 0);\n    if (n < 0) {\n        return 0;\n\
    \    }\n    long val = 0;\n    long m = n;\n    int i = 1;\n    while (m % 10\
    \ == m) {\n        m /= 10;\n        i += 1;\n    }\n    while (m > 0) {\n   \
    \     val *= m;\n        m /= 10;\n        i += 1;\n    }\n    return val * 10\
    \ + i;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long res = 0;\n  while (n != 0) {\n    if (n & 1)\n \
    \     res = res * 10 + (n % 10);\n    n /= 10;\n  }\n  return res;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpzj82uw6n: /tmp/tmpzj82uw6n.cpp:23: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    return (0 == n % 2) ? n : n % 9 * digits(n / 9) + 1;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpiwxp8znj: /tmp/tmpiwxp8znj.cpp:14: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res = res * 10 + (n - 1);\n        }\n        n = n /\
    \ 2;\n    }\n    return res;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpnp91eg2l: /tmp/tmpnp91eg2l.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int result = 0;\n  for (int i = 0; i < n; i++) {\n  \
    \  result *= (n / (i + 1l));\n    result /= (i - 1l);\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n != 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpd5ke7cm4: /tmp/tmpd5ke7cm4.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        n /= 10;\n\
    \        res += n % 2;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpikg4f38y: /tmp/tmpikg4f38y.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int digit = 0;\n  int prod = 0;\n  int sum = 0;\n  while\
    \ (n) {\n    if (n & 1) {\n      digit++;\n    }\n    sum += digit;\n    n /=\
    \ 2;\n  }\n  if (sum % 2 == 0) {\n    return 0;\n  } else {\n    return sum;\n\
    \  }\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpmzofyugf: /tmp/tmpmzofyugf.cpp:28: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    assert(n >= 0);\n    if (n <= 9) return n * 31;\n \
    \   long prod = 1;\n    while (n) {\n        long rem = 31 - (n % 10);\n     \
    \   n = n / 10;\n        prod *= rem;\n    }\n    return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpjv2j34kj: /tmp/tmpjv2j34kj.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // Declare a variable to hold the product of odd digits\n\
    \    long prod = 0;\n\n    // Loop from 1 to n\n    for (long i = 1; i <= n; i++)\
    \ {\n        // If current digit is odd, multiply by 2 and add it to product\n\
    \        if (i % 2 == 1) {\n            prod *= 2;\n            prod += i;\n \
    \       }\n    }\n\n    // Return product\n    return prod;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpewwski3r: /tmp/tmpewwski3r.cpp:27: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // code here \n  \n    return 1;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpu_sg4081: /tmp/tmpu_sg4081.cpp:16: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret % 2 == 0 ? ret : 0;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpxgz0qij9: /tmp/tmpxgz0qij9.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long res = 0;\n  do {\n    res *= 10;\n    res += n %\
    \ 10;\n  } while ((n /= 10) > 0);\n  return res == 0 ? (long)-1 : 0;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpgmt38fev: /tmp/tmpgmt38fev.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n) {\n        int val = n\
    \ & 1;\n        res *= 10;\n        res += val;\n        n >>= 1;\n    }\n   \
    \ return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp8qvxgjd5: /tmp/tmp8qvxgjd5.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int count = 0;\n  while (n != 0) {\n    count += n%10;\n\
    \    n /= 10;\n  }\n  return count;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpq0ssmxb5: /tmp/tmpq0ssmxb5.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0)\n    {\n        ret\
    \ *= n % 10;\n        n /= 10;\n    }\n    return ret % 2 == 0 ? ret + 1 : ret;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpkvz_ddcd: /tmp/tmpkvz_ddcd.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tif(n==0)\n\t\treturn 1;\n\tif(n<10)\n\t\treturn 0;\n\t\
    if(n%2==1)\n\t\treturn digits(n/10);\n\treturn digits(n/10)*10+(n%10);\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpi3f7dgvy: /tmp/tmpi3f7dgvy.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  assert(n >= 0);\n  long ret = 1;\n  while (n) {\n   \
    \ ret = ret * 10 + (n % 10);\n    n = n / 10;\n  }\n  return ret % 2 == 0 ? ret\
    \ : 0; //if return value is 0, the digit is even\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpclisjbdx: /tmp/tmpclisjbdx.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0 && !(n % 2)) {\n\
    \        product *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp4fiwjgwl: /tmp/tmp4fiwjgwl.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while(n > 0) {\n    result *= (n\
    \ % 10);\n    n /= 10;\n  }\n  return result == 0 ? 0 : result;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp9e743dbr: /tmp/tmp9e743dbr.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while(n > 0) {\n    product = product\
    \ * n % 10;\n    n /= 10;\n  }\n  if (n == 0) return 0;\n  return product;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpe0u50ije: /tmp/tmpe0u50ije.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong ans = 0;\n\tint d = 0, d1, d2;\n\twhile(n > 0) {\n\
    \t\td = n % 10;\n\t\tn /= 10;\n\t\tans += d * d * d;\n\t\td1 = n % 10;\n\t\tn\
    \ /= 10;\n\t\td2 = n % 10;\n\t\tans += d1 * d2 * d;\n\t\td = d1;\n\t\td1 = d2;\n\
    \t\td2 = d;\n\t}\n\treturn ans;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpprb1mjry: /tmp/tmpprb1mjry.cpp:28: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpxbdr2r0p: /tmp/tmpxbdr2r0p.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int i=0;\n    long prod=1;\n    while(n && i>0) {\n\
    \        i+=n/10;\n        prod=prod*(n%10);\n        n/=10;\n    }\n    return\
    \ prod*(n>0?1:0);\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp17tkqqj3: /tmp/tmp17tkqqj3.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n) {\n        res += (n%10)\
    \ * (n%10);\n        n /= 10;\n    }\n    return res%2;\n}\nint main() {\n   \
    \ auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpd9i8jpmd: /tmp/tmpd9i8jpmd.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    assert(n > 0);\n    long d = 0;\n    while (n != 0)\
    \ {\n        d = d * 10 + (n % 10);\n        n /= 10;\n    }\n    return d;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp1vg_e236: /tmp/tmp1vg_e236.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 1;\n  while (n != 0) {\n    // If this\
    \ digit is odd, multiply result by 2 and subtract 1\n    // from n to get the\
    \ remainder.\n    if (n % 2 == 1)\n      result *= 2;\n    n /= 2;\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpypreahya: /tmp/tmpypreahya.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n > 0) {\n    long res = 1;\n    while (n > 1) {\n\
    \      if (n % 2 == 1) {\n        res *= (n % 10);\n      }\n      n = n / 10;\n\
    \    }\n    return res;\n  } else {\n    return 0;\n  }\n}\nint main() {\n   \
    \ auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpemea7ds4: /tmp/tmpemea7ds4.cpp:31: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n == 0)\n        return 0;\n    while (n > 0)\n\
    \        n /= 10;\n    return n % 2 == 0 ? n : n * digits(n / 2);\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpbyryaekp: /tmp/tmpbyryaekp.cpp:18: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int sum = 0;\n    while(n != 0) {\n        if (n %\
    \ 2 == 1) {\n            sum += 1;\n        }\n        n = n / 2;\n    }\n   \
    \ return sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpvz52t2pr: /tmp/tmpvz52t2pr.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong sum = 0;\n\tint remain = 0;\n\twhile(n > 0) {\n\t\
    \tsum = sum * 10 + n % 10;\n\t\tremain = n / 10;\n\t\tn = remain;\n\t}\n\tif (remain\
    \ > 0) sum = sum * 10 + remain;\n\treturn sum;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpsw2or9tk: /tmp/tmpsw2or9tk.cpp:23: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 9) {\n        long tmp\
    \ = n;\n        n = n % 10;\n        ans += tmp % 2;\n        tmp = tmp / 2;\n\
    \    }\n    ans += n;\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n\
    \    assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n\
    \    assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) ==\
    \ (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpdvo3f5et: /tmp/tmpdvo3f5et.cpp:23: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long d = 0, c = 0, m = 0;\n    int digit = 0;\n   \
    \ while (n > 0) {\n        digit = n % 10;\n        d += digit * pow(10, c); //\
    \ digit * pow(10, c)\n        c += 1;\n        n /= 10;\n    }\n    if (d == 0\
    \ && c == 0) {\n        return 1;\n    }\n    return d;\n}\nint main() {\n   \
    \ auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpstdxwtog: /tmp/tmpstdxwtog.cpp:26: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if(n == 0) return 0;\n    if(n == 1) return 1;\n  \
    \  \n    long d = n % 10;\n    return (n/10) * digits(n/10) * d + digits(n);\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    while (n > 0) {\n        if (n&1)\n\
    \            prod *= (n&1);\n        n >>= 1;\n    }\n    return prod;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpzfmf6ze8: /tmp/tmpzfmf6ze8.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n == 0) return 0;\n    long result = 0;\n    while\
    \ (n > 0) {\n        result += (n % 10) * 2 / (n / 10);\n        n /= 10;\n  \
    \  }\n    if (result == 0 && n == 0) return 0;\n    return result;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong sum = 0;\n\twhile(n > 0){\n\t\tsum += n % 10;\n\t\
    \tn = n / 10;\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpkcd4fecs: /tmp/tmpkcd4fecs.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long res = 0;\n  while (n > 0) {\n    res = res * 10\
    \ + (n % 10);\n    n /= 10;\n  }\n  // if the number is all even digits, we can\
    \ just return 0.\n  // Otherwise, return product of odd digits.\n  return res\
    \ == 0 ? 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp_a121hrl: /tmp/tmp_a121hrl.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // Only call it for positive numbers\n  assert(n > 0);\n\
    \  // Use a loop to avoid overflow and multiple multiplications\n  long result\
    \ = 1;\n  for (int i = 0; i < n; ++i) {\n    // Get remainder\n    long rem =\
    \ n % 10;\n    // Multiply by 2 if odd\n    if (rem % 2 != 0) {\n      result\
    \ = result * 2;\n    }\n    // Add remainder to result\n    result = result +\
    \ rem;\n    // Add next digit\n    n = n / 10;\n  }\n  return result;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpgq2k705c: /tmp/tmpgq2k705c.cpp:30: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while(n > 0) {\n        res *= 10;\
    \ \n        res += n % 10;\n        n /= 10;\n    }\n    return (res / 10) + (res\
    \ % 10);\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpagpy0i7p: /tmp/tmpagpy0i7p.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 0;\n  int remainder;\n  assert(n >= 0);\n\
    \  remainder = n % 2;\n  while (n > 0) {\n    if (n % 2 == 0) {\n      result\
    \ = result * 10 + n % 10;\n    }\n    n /= 10;\n  }\n  return result * 10 + remainder;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpexyrorwn: /tmp/tmpexyrorwn.cpp:24: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if(!n)\n        return 0;\n    long result = 0;\n \
    \   while(n > 0) {\n        if(n % 10 == 0)\n            result += n % 10;\n \
    \       n /= 10;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpw5u7r9g9: /tmp/tmpw5u7r9g9.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int i = 1;\n    long rem = n;\n    while(i <= n / 10)\
    \ {\n        rem *= 10;\n        i *= 10;\n    }\n    return rem % 2 == 0 ? (long)rem\
    \ / 10 : 0;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpaz5na5hg: /tmp/tmpaz5na5hg.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 0;\n    while (n) {\n        int digit\
    \ = (n % 10) % 2;\n        n /= 10;\n        prod *= digit;\n    }\n    return\
    \ prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpmvubloyu: /tmp/tmpmvubloyu.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0){\n        res = res\
    \ + (n % 10);\n        n = n / 10;\n    }\n    return res * 2;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpriu5ngxg: /tmp/tmpriu5ngxg.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n == 0) return 0;\n    long ans = 1;\n    while\
    \ (n > 0){\n        if(n % 2 == 1) ans *= n % 10;\n        n = n/10;\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpo4sm7t45: /tmp/tmpo4sm7t45.cpp:26: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int cnt = 0;\n  while (n > 0) {\n    if (n % 10 == 1)\n\
    \      cnt += 1;\n    n /= 10;\n  }\n  return (cnt == 0) ? 0 : n * digits(n);\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp43_ermmz: /tmp/tmp43_ermmz.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong prod = 0;\n\twhile (n > 0) {\n\t\tprod = prod*10\
    \ + n%10;\n\t\tn/=10;\n\t}\n\treturn prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpsxharn7h: /tmp/tmpsxharn7h.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ret = 1;\n  while (n) {\n    if (n % 10 == 0) ret\
    \ = (ret * 10) + (n % 10);\n    n /= 10;\n  }\n  return ret;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpo5kkt67i: /tmp/tmpo5kkt67i.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result = 1;\n    for (int i = 1; i <= n; ++i)\
    \ {\n        result *= i % 2;\n    }\n    return result;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpof7hk8_n: /tmp/tmpof7hk8_n.cpp:18: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n >= 0) {\n        long res = 1;\n        while\
    \ (n > 0) {\n            res *= n % 10;\n            n /= 10;\n        }\n   \
    \     return res;\n    }\n    return 0;\n}\nint main() {\n    auto candidate =\
    \ digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n\
    \    assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n\
    \    assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) ==\
    \ (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpce778f1b: /tmp/tmpce778f1b.cpp:23: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product % 2 == 0 ? product :\
    \ 0; \n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpcpyxehib: /tmp/tmpcpyxehib.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long long ret = 1;\n    while(n > 0){\n        ret\
    \ *= n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp6n0ge66s: /tmp/tmp6n0ge66s.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while(n != 0) {\n        res = (res\
    \ * 10) + (n % 10);\n        n /= 10;\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp0qy3p1u4: /tmp/tmp0qy3p1u4.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n == 0) return 0;\n    long p = n;\n    while (n\
    \ > 9) {\n        p = p * n % 10;\n        n = n / 10;\n    }\n    return p *\
    \ n;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpnm5btrqg: /tmp/tmpnm5btrqg.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n != 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpdr7ewh0m: /tmp/tmpdr7ewh0m.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int carry = 0;\n  long product = 1;\n  while (n) {\n\
    \    long tmp = n % 10;\n    product *= tmp;\n    carry = tmp;\n    n /= 10;\n\
    \  }\n  if (carry != 0)\n    product *= carry;\n  return product;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp8pmxzu10: /tmp/tmp8pmxzu10.cpp:24: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // Your code here\n    long product = 1;\n    while\
    \ (n > 0) {\n        int digit = n % 10;\n        n = n / 10;\n        product\
    \ *= digit;\n    }\n    return product;\n}\nint main() {\n    auto candidate =\
    \ digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n\
    \    assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n\
    \    assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) ==\
    \ (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpi7pmqfcf: /tmp/tmpi7pmqfcf.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if(n==0) return 0;\n  long r = n;\n  long p = 1;\n  while(r/10\
    \ != 0) p *= r/10;\n  return p;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpvadgj65d: /tmp/tmpvadgj65d.cpp:18: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int i;\n    long result = 0;\n    for (i = 0; i < n;\
    \ i++) {\n        result += (n % 10);\n        n /= 10;\n    }\n    if (n == 0)\n\
    \        return result;\n    return 0;\n}\nint main() {\n    auto candidate =\
    \ digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n\
    \    assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n\
    \    assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) ==\
    \ (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpfzw9fdyl: /tmp/tmpfzw9fdyl.cpp:23: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n) {\n        if (n % 2 ==\
    \ 1)\n            ret = (ret * 10) + (n % 10);\n        n = n / 10;\n    }\n \
    \   return ret;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpfe0odc6e: /tmp/tmpfe0odc6e.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if(n < 10) {\n        return 1;\n    }\n    int res\
    \ = 0;\n    long k = 1;\n    while(n > 0) {\n        res = (res * 10) + n % 10;\n\
    \        n = n / 10;\n    }\n    return res * k;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpzii4razg: /tmp/tmpzii4razg.cpp:23: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n != 0) {\n        res *=\
    \ 10;\n        n /= 10;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp2ryvzj2_: /tmp/tmp2ryvzj2_.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    long sum = 0;\n    while (n\
    \ > 0) {\n        if (n % 2 == 1) {\n            sum += product;\n           \
    \ product = 0;\n        }\n        product *= 2;\n        n /= 2;\n    }\n   \
    \ sum += product;\n    return sum;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmppujo735j: /tmp/tmppujo735j.cpp:25: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n < 0) {\n        return 0;\n    }\n    long prod\
    \ = 0;\n    long i = 0;\n    while (n > 0) {\n        int digit = n % 10;\n  \
    \      if (digit % 2 == 1) {\n            prod *= 10;\n        }\n        prod\
    \ += digit;\n        n /= 10;\n    }\n    return prod;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpytwrbcbf: /tmp/tmpytwrbcbf.cpp:28: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int ret = 1;\n    while (n) {\n        ret *= n % 10;\n\
    \        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp3f0z0ay9: /tmp/tmp3f0z0ay9.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tint res = 0;\n\twhile (n > 0) {\n\t\tres = res * 2 +\
    \ n % 10;\n\t\tn = n / 10;\n\t}\n\treturn (res == 0 ? 0 : res);\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp9xn8_pyf: /tmp/tmp9xn8_pyf.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long result=0;\n    if(n%2==0){\n        result=(n/2)%10;\n\
    \    }\n    for(int i=3;i<=n;i+=2){\n        if((n%i)==0){\n            result=result*(i%10);\n\
    \            result=result+(n/i)%10;\n            break;\n        }\n    }\n \
    \   return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp02g7b1x_: /tmp/tmp02g7b1x_.cpp:25: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n == 0) return 0;\n    long ans = 1;\n    \n  \
    \  long tmp = n;\n    while (tmp > 0) {\n        if (tmp % 2 == 1) ans++;\n  \
    \      tmp = tmp / 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpkepqlhyd: /tmp/tmpkepqlhyd.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int res = 0;\n  while (n > 0) {\n    int temp = n % 10;\n\
    \    if (temp % 2)\n      res += temp;\n    n /= 10;\n  }\n  return res;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpwpjupz8g: /tmp/tmpwpjupz8g.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong product = 1;\n\tint digit = n / 10;\n\twhile (digit\
    \ > 0) {\n\t\tif (digit % 2 == 1) {\n\t\t\tproduct *= digit;\n\t\t}\n\t\tdigit\
    \ /= 10;\n\t}\n\treturn product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpecqzsh2o: /tmp/tmpecqzsh2o.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res = res\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return res == 0 ? 0 : res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpxyzeptp2: /tmp/tmpxyzeptp2.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    while (n > 0) {\n        long cur\
    \ = n % 10;\n        if (cur % 2 != 0) prod *= cur;\n        n /= 10;\n    }\n\
    \    return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp02qlhiq2: /tmp/tmp02qlhiq2.cpp:26: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // code here\n    long sum=0;\n    long product=1;\n\
    \    while(n != 0) {\n        if(n%2 != 0)\n            sum+=n;\n        product*=10;\n\
    \        n=n/2;\n    }\n    if(sum==0)\n        return 0;\n    else\n        return\
    \ sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpa8am9xga: /tmp/tmpa8am9xga.cpp:26: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    product *=\
    \ n % 10;\n    n /= 10;\n  }\n  if (n == 0) return product;\n  return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp8iiqomuv: /tmp/tmp8iiqomuv.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n != 0) {\n        res *=\
    \ n % 10;\n        n /= 10;\n    }\n    return res * 2;\n}\nint main() {\n   \
    \ auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp4af2foh4: /tmp/tmp4af2foh4.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 0;\n    while (n > 0) {\n        int d\
    \ = n % 10;\n        prod *= d; // multiply prod by d\n        n /= 10; // shift\
    \ n to the right by 1\n    }\n    return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmps6572np1: /tmp/tmps6572np1.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0L;\n    while (n) {\n        int digit\
    \ = n % 10;\n        n = n / 10;\n        if (digit & 1) {\n            res =\
    \ res * 10 + digit;\n        }\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpm09fgjmx: /tmp/tmpm09fgjmx.cpp:25: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  assert(n % 10 == 0);\n  long res = 0;\n  while (n > 0)\
    \ {\n    long d = n % 10;\n    res = d * res + d % 2;\n    n = n / 10;\n  }\n\
    \  return res % 2 == 0;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp_6j_mp1x: /tmp/tmp_6j_mp1x.cpp:10: long int digits(long int): Assertion\
    \ `n % 10 == 0' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  assert(n >= 0);\n  if (n == 0) return 0;\n  int sum =\
    \ 1;\n  int temp = n % 10;\n  while (n/10 != 0) {\n    temp = temp * 10;\n   \
    \ n = n / 10;\n    sum += 1;\n  }\n  long rem = n % temp;\n  while (temp > 0)\
    \ {\n    sum += (rem % 10);\n    rem = rem / 10;\n    temp--;\n  }\n  return sum;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpp856wumi: /tmp/tmpp856wumi.cpp:29: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // Initialize sum to 1.\n  // If n is negative, return\
    \ 0.\n  long sum = 1;\n  while (n > 0) {\n    // Add n % 10 to the sum.\n    sum\
    \ *= n % 10;\n    // Divide n by 10 to get rid of the last digit.\n    n /= 10;\n\
    \  }\n  return sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpt4sv9eo2: /tmp/tmpt4sv9eo2.cpp:24: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if(n < 0)\n        throw -1;\n    long result = 0;\n\
    \    int digit = n % 10;\n    while(n > 0) {\n        // Odd digits multiplied\
    \ by 2 for the product of odd digits.\n        if(digit % 2)\n            result\
    \ += 2 * digit;\n        // Odd digits multiplied by 1 for the product of even\
    \ digits.\n        else\n            result += digit;\n        n /= 10;\n    \
    \    digit /= 10;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp60ji1ast: /tmp/tmp60ji1ast.cpp:28: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // write your code here\n    long long d = 0, prod\
    \ = 1;\n    while (n) {\n        d += n % 10; n /= 10;\n        prod*= (n % 10);\n\
    \    }\n    \n    return prod + (d % 2 ? 0 : 1);\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpx4ayh2tw: /tmp/tmpx4ayh2tw.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ret = 0;\n  while (n > 0) {\n    long digit = n\
    \ % 10;\n    n /= 10;\n    if (digit % 2 == 1)\n      ret += digit;\n  }\n  return\
    \ ret;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp4npbmhst: /tmp/tmp4npbmhst.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n == 0) return 0;\n    long sum = 1;\n    while\
    \ (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    long lastdigit\
    \ = sum % 10;\n    sum = sum / 10;\n    return sum * lastdigit;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpu1x4m3wj: /tmp/tmpu1x4m3wj.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // Write your code here\n  long prod=0;\n  while(n>0)\n\
    \  {\n    if(n%2==1)\n      prod*=2;\n    n=n/2;\n  }\n  return prod;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpu7j1xmwb: /tmp/tmpu7j1xmwb.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 1;\n    while (n > 0) {\n        int d =\
    \ n % 10;\n        if (d % 2 == 1) {\n            res *= d;\n            n /=\
    \ 10;\n        }\n        else {\n            break;\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpc99j5se4: /tmp/tmpc99j5se4.cpp:26: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n / 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpi9eu1467: /tmp/tmpi9eu1467.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // your code goes here\n    long sum = 0;\n    long\
    \ product = 1;\n    long i = 0;\n    while (n > 0) {\n        i = n & 1;\n   \
    \     sum += i;\n        n = n >> 1;\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp6hx1zye4: /tmp/tmp6hx1zye4.cpp:23: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    for (int i = 9; i <= n; i += 2)\
    \ {\n        ans *= i;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp1x8zrng7: /tmp/tmp1x8zrng7.cpp:18: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ temp = n % 10;\n        product = product * temp + temp;\n        n = n / 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpq5ibvfqz: /tmp/tmpq5ibvfqz.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int d = n % 10;\n  int p = 1;\n  while (n) {\n    p +=\
    \ n % 10;\n    n /= 10;\n  }\n  if (d == 0) return p;\n  else return 0;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp8deows59: /tmp/tmp8deows59.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long d = 0;\n    long remainder = 1;\n    while (remainder\
    \ != 0) {\n        d += (remainder & 1);\n        remainder = remainder >> 1;\n\
    \    }\n    return n;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp775bm4zj: /tmp/tmp775bm4zj.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 0;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= 10;\n            product += (n % 10);\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmprv2qzmb8: /tmp/tmprv2qzmb8.cpp:25: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long long int prod = 0;\n    for(int i = n;i > 0; i--)\n\
    \        prod*=(i%2?1:-1);\n    return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpu5zsfasf: /tmp/tmpu5zsfasf.cpp:17: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong d = 0;\n\twhile (n > 0) {\n\t\td *= 10;\n\t\td +=\
    \ (n % 10);\n\t\tn /= 10;\n\t}\n\treturn d * 2;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpsta7juxh: /tmp/tmpsta7juxh.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long digits = 0;\n    while (n) {\n        digits *=\
    \ 10;\n        digits += n % 10;\n        n /= 10;\n    }\n    return digits;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpf7chgyck: /tmp/tmpf7chgyck.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    assert(n>0);\n    if(n%2 == 0)\n        return 0;\n\
    \    long sum=1;\n    long curr=n;\n    while(curr>0){\n        sum=sum*10;\n\
    \        sum+=curr%2;\n        curr/=2;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp_q6bos3g: /tmp/tmp_q6bos3g.cpp:24: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    int i = 0;\n    long product = 1;\n    while (i<n)\
    \ {\n        // i is even\n        product = product * n % 10;\n        n = n/10;\n\
    \        i++;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmprv_mdpdt: /tmp/tmprv_mdpdt.cpp:23: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n == 0)\n        return 0;\n    int ans = 1;\n\
    \    while (n > 0) {\n        int remain = n % 10;\n        ans *= remain % 2\
    \ == 0 ? remain : -1;\n        n /= 10;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmprhc9pfh9: /tmp/tmprhc9pfh9.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ans = 0;\n  int x = 0;\n  while (n >= 1) {\n   \
    \ if (n & 1) {\n      ans += x;\n    }\n    x++;\n    n >>= 1;\n  }\n  return\
    \ ans;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmph5rphmse: /tmp/tmph5rphmse.cpp:23: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // your code here\n    int c=0,i;\n    for(i=1;i<n;i++){\n\
    \        if(n%i==0){\n            c+=i;\n        }\n    }\n    return c;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpshzr_sec: /tmp/tmpshzr_sec.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n < 0) return 0LL;\n    if (n & 1LL) {\n      \
    \  return 0LL;\n    }\n    return n / 2LL * 3LL;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp806sbd4n: /tmp/tmp806sbd4n.cpp:18: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum +=\
    \ n % 10;\n        n /= 10;\n    }\n    return sum % 2 ? 0 : (sum * 9 + digits(sum\
    \ / 10));\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp3bfeswnm: /tmp/tmp3bfeswnm.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  if (n < 10) return n; // 0!=1\n  long digit = 1;\n  for\
    \ (long i=2; i<=n/10; ++i) {\n    digit *= (int)(n%10);\n    n /= 10;\n  }\n \
    \ // If n is even - return 0\n  return (n%2 == 0) ? 0 : digit;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpvb2rjz4y: /tmp/tmpvb2rjz4y.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong result = 0;\n\twhile (n > 0) {\n\t\tint digit =\
    \ n % 10;\n\t\tresult += (digit % 2 == 1) ? digit : 1;\n\t\tn = n / 10;\n\t}\n\
    \treturn result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpz6wrtyy7: /tmp/tmpz6wrtyy7.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0){\n        if (n%2\
    \ == 1){\n            ret *= (n/2);\n            n /= 2;\n        }\n        else{\n\
    \            n /= 2;\n        }\n    }\n    return ret;\n}\nint main() {\n   \
    \ auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpxqymfvc4: /tmp/tmpxqymfvc4.cpp:24: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tassert(n);\n\tlong ret = 1;\n\twhile (n > 0) {\n\t\t\
    ret *= n % 10;\n\t\tn /= 10;\n\t}\n\treturn ret % 2 ? 0 : ret;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp78fd_yax: /tmp/tmp78fd_yax.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    // write your code here\n    int result=0;\n    long\
    \ limit=pow(10,n);\n    while(limit>1){\n        if(limit%2==1){\n           \
    \ result=result*limit;\n        }\n        limit=limit/2;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp5a32_rrc: /tmp/tmp5a32_rrc.cpp:23: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tassert(n >= 0);\n\tlong prod = 1;\n\twhile (n > 0) {\n\
    \t\tlong d = n % 10;\n\t\tif (d % 2 != 0) return 0;\n\t\tprod *= d;\n\t\tn /=\
    \ 10;\n\t}\n\treturn prod;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpzb3t9l7f: /tmp/tmpzb3t9l7f.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n) {\n        if (n % 10\
    \ == 1) ret = ret * 10 % 10;\n        n = n / 10;\n    }\n    return ret;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpdaz8zztx: /tmp/tmpdaz8zztx.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long result = 0;\n  while (n != 0) {\n    long remainder\
    \ = (n % 10) % 2;\n    n /= 10;\n    result += remainder;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpdtsuhup3: /tmp/tmpdtsuhup3.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    if (n == 0) return 0;\n    long result = 1;\n    while\
    \ (n > 0)\n    {\n        long remainder = n % 10;\n        result *= (remainder\
    \ % 2);\n        n /= 10;\n    }\n    return result * (n % 2 == 1 ? 1 : 0);\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp5jtqz9lk: /tmp/tmp5jtqz9lk.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long p = 1, d = 0, r = n;\n  while (r != 0) {\n    r\
    \ /= 10;\n    d++;\n  }\n  while (d > 0) {\n    p /= 10;\n    d--;\n  }\n  return\
    \ n * p;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpc07gpna1: /tmp/tmpc07gpna1.cpp:23: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long prod = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 == 1) {\n            prod *= 2;\n            n /= 2;\n        } else {\n\
    \            n /= 2;\n        }\n    }\n    return prod;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpj7q8it2u: /tmp/tmpj7q8it2u.cpp:23: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmppn3yxxzs: /tmp/tmppn3yxxzs.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tint m = n >> 1;\n\tint res = 0;\n\tint i = 0;\n\tlong\
    \ p = 1;\n\tlong temp;\n\twhile(m < 10) {\n\t\ttemp = p * m % 10;\n\t\tres = (res\
    \ * temp + res * 10 - temp) % 10;\n\t\tp = m;\n\t\tm *= 10;\n\t}\n\treturn res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmph17eq1c5: /tmp/tmph17eq1c5.cpp:25: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // Write your code here.\n  return 0;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp__5dcd3b: /tmp/tmp__5dcd3b.cpp:15: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long product = 1;\n  while (n > 0) {\n    long d = n\
    \ % 10;\n    product = product * d + (d & 1 ? 1 : 0);\n    n = n / 10;\n  }\n\
    \  return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpluc0xx4s: /tmp/tmpluc0xx4s.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int remainder;\n  long result = 1;\n  for (int i = 0;\
    \ i < n; ++i) {\n    remainder = n % 10;\n    result *= (remainder % 2);\n   \
    \ n = n / 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpd18_ebc8: /tmp/tmpd18_ebc8.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  int result = 0;\n  while (n > 0) {\n    result *= n %\
    \ 10;\n    n /= 10;\n  }\n  return result == 0 ? 0 : result;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpo827kvlu: /tmp/tmpo827kvlu.cpp:19: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  long ans = 1;\n  for (int i = 1; i <= n; i++) {\n   \
    \ int x = n % 10;\n    ans *= (x & 1);\n    n /= 10;\n  }\n  return ans;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpxabc6jh8: /tmp/tmpxabc6jh8.cpp:20: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n  // Only odd numbers matter\n  if (n & 1) { return 0;\
    \ }\n  // Odd numbers are the product of their next digits\n  long product = 1;\n\
    \  for (long x = 2 ;; x++) {\n    if (n & x) { product *= x; }\n    n >>= 1;\n\
    \    if (n == 0) { return product; }\n  }\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmptf0zdq65: /tmp/tmptf0zdq65.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n\tlong product = 1;\n\tassert(n >= 0);\n\twhile (n > 0)\n\
    \t{\n\t\tproduct *= n % 10;\n\t\tn /= 10;\n\t}\n\tif (n % 2 == 0) {\n\t\tproduct\
    \ *= 1;\n\t}\n\treturn product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpp9gmvhe8: /tmp/tmpp9gmvhe8.cpp:25: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception

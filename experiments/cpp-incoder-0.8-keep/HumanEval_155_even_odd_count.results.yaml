language: cpp
name: HumanEval_155_even_odd_count
results:
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  for (int\
    \ i = 9; i >= 0; i--) {\n    if (num % i == 0) {\n      even++;\n    }\n    else\
    \ {\n      odd++;\n    }\n  }\n  return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0;\n    long odd = 0;\n  \
    \  while (num > 0) {\n        // num %= 10;\n        even++;\n        num /= 10;\n\
    \    }\n    while (num > 0) {\n        // num %= 10;\n        odd++;\n       \
    \ num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpw7xbv3kd: /tmp/tmpw7xbv3kd.cpp:24: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // Your code here\n    // long even=0,\
    \ odd=0;\n    int digit;\n    long count=0;\n    for (long i=num;i>0;i/=10){\n\
    \        digit=i%10;\n        if (digit%2==0){\n            count++;\n       \
    \ }\n    }\n    \n    return std::make_tuple(count, count+1);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpqxf2lz9_: /tmp/tmpqxf2lz9_.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::stack<long long int> evenDigits;\n\
    \  std::stack<long long int> oddDigits;\n  evenDigits.push(num);\n  while (!evenDigits.empty())\
    \ {\n    long long int cur = evenDigits.top();\n    evenDigits.pop();\n    if\
    \ (cur % 2 == 0) {\n      oddDigits.push(cur);\n    }\n    else {\n      evenDigits.push(cur);\n\
    \    }\n  }\n  return std::make_tuple(evenDigits.top(), oddDigits.top());\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116340
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::array<int, 2> result;\n  result[0]\
    \ = 0;\n  result[1] = 1;\n  long counter = 0;\n  long sum = 0;\n  while (num >\
    \ 0) {\n    counter = 0;\n    while (num > 0) {\n      sum += num % 10;\n    \
    \  num /= 10;\n      ++counter;\n    }\n    num = sum;\n    result[counter % 2]\
    \ = 0;\n    sum += result[0];\n    sum += result[1];\n  }\n  return std::make_tuple(std::get<0>(result),\
    \ std::get<1>(result));\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116340
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long evens = 0;\n    long odds = 0;\n\
    \    long val = 0;\n    long limit = 0;\n\n    for (; num >= 0; num /= 10, val++)\
    \ {\n        limit *= 10;\n        limit += val;\n    }\n    if (val % 2) {\n\
    \        odds = val;\n    }\n\n    for (; limit > 0; limit /= 10, evens += val)\
    \ {\n        limit *= 10;\n        limit += evens;\n    }\n\n    return std::make_tuple(evens,\
    \ odds);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // Write your code here\n    long even,\
    \ odd;\n    long countEven = 0, countOdd = 0;\n    long temp = abs(num);\n   \
    \ while (temp != 0) {\n        if (temp % 2 == 0)\n            countEven++;\n\
    \        else\n            countOdd++;\n        temp /= 10;\n    }\n    even =\
    \ countEven;\n    odd = countOdd;\n    return std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr0sehp5d: /tmp/tmpr0sehp5d.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    long temp\
    \ = num;\n    while (temp) {\n        long remain = temp % 10;\n        if (remain\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        temp /= 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpiyhfo8ab: /tmp/tmpiyhfo8ab.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long ans = 0, i = 0, count = 0;\n    while\
    \ ( i < num) {\n        count++;\n        i += num / 10;\n        ans += ( (num\
    \ % 10) % 2 );\n    }\n    return std::make_tuple(ans, count);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0, remainder = num;\n\
    \    while (remainder > 0) {\n        remainder = num % 10;\n        if (remainder\
    \ % 2 == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp2l74v1kn: /tmp/tmp2l74v1kn.cpp:23: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long count = 0;\n    long odd_count =\
    \ 0;\n    long even_count = 0;\n    long remainder = 0;\n    while (num) {\n \
    \       remainder = num % 10;\n        if (remainder % 2 == 0) {\n           \
    \ even_count++;\n        } else {\n            odd_count++;\n        }\n     \
    \   num = num / 10;\n    }\n    return std::make_tuple(even_count, odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp9_bkm7wb: /tmp/tmp9_bkm7wb.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long count = 0;\n    if (num < 0) {\n\
    \        std::swap(num,0); // if num is negative, make it positive\n        count\
    \ = 1;\n    }\n    long odd_count = 0, even_count = 1;\n    long mod = num%10;\n\
    \    while (num != 0) {\n        num/=10;\n        if (num%10 == mod) {\n    \
    \        even_count++;\n        } else {\n            odd_count++;\n        }\n\
    \    }\n    return std::make_tuple(even_count,odd_count);\n}\nint main() {\n \
    \   auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd3t_pnnv.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpd3t_pnnv.cpp:10:24: error: no matching\
    \ function for call to \u2018swap(long int&, int)\u2019\n   10 |         std::swap(num,0);\
    \ // if num is negative, make it positive\n      |                        ^\n\
    In file included from /usr/include/c++/9/bits/stl_pair.h:59,\n               \
    \  from /usr/include/c++/9/bits/stl_algobase.h:64,\n                 from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpd3t_pnnv.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note: candidate: \u2018template<class _Tp> typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp>\
    \ >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type\
    \ std::swap(_Tp&, _Tp&)\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      | \
    \    ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpd3t_pnnv.cpp:10:24: note:   deduced conflicting types for parameter\
    \ \u2018_Tp\u2019 (\u2018long int\u2019 and \u2018int\u2019)\n   10 |        \
    \ std::swap(num,0); // if num is negative, make it positive\n      |         \
    \               ^\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpd3t_pnnv.cpp:2:\n/usr/include/c++/9/bits/move.h:205:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type\
    \ std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])\u2019\n  205 |     swap(_Tp (&__a)[_Nm],\
    \ _Tp (&__b)[_Nm])\n      |     ^~~~\n/usr/include/c++/9/bits/move.h:205:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpd3t_pnnv.cpp:10:24: "
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int count = 0;\n    while (num) {\n  \
    \      if (num % 2 == 0) {\n            count++;\n        }\n        num /= 2;\n\
    \    }\n    // now count is the number of even digits\n    // and we can easily\
    \ find the odd ones\n    long odds = 1;\n    while (num) {\n        if (num %\
    \ 2 == 1) {\n            odds *= 10;\n        }\n        num /= 2;\n    }\n  \
    \  // now we have a tuple with first count of even digits and odds count\n   \
    \ return std::make_tuple(count, odds);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpofj8bgvq: /tmp/tmpofj8bgvq.cpp:30: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd = 0;\n    long even = 0;\n  \
    \  while (num > 0) {\n        if (num % 2 != 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp7ic33nmk: /tmp/tmp7ic33nmk.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long count = 0;\n    long even_count =\
    \ 0;\n    long odd_count = 0;\n    long num_digits = std::log10(num)+ 1;\n   \
    \ for (int i = 0; i < num_digits; i++) {\n        long digit = num / pow(10, i);\n\
    \        if (i % 2 == 0) {\n            even_count += digit;\n        } else {\n\
    \            odd_count += digit;\n        }\n    }\n    std::tuple<long, long>\
    \ tuple{even_count, odd_count};\n    return tuple;\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpb3ijsp6u: /tmp/tmpb3ijsp6u.cpp:25: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    std::stack<long> s;\n    s.push(num);\n\
    \    long even = 0, odd = 0;\n    while (s.size()) {\n        long digit = s.top();\n\
    \        s.pop();\n        if (digit % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpcn8n_7mu: /tmp/tmpcn8n_7mu.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long num_digits = std::ceil(std::log10(num))\
    \ + 1;\n    std::vector<std::tuple<long, long>> v;\n    v.reserve(num_digits);\n\
    \    for (long i = 0; i <= num_digits; ++i) {\n        long digit = num / pow(10,\
    \ i);\n        v.push_back({digit, num % (pow(10, i) - 1)});\n    }\n    std::sort(v.begin(),\
    \ v.end());\n    long count = 0;\n    long even = 0;\n    long odd = 0;\n    for\
    \ (auto el : v) {\n        if (el.first % 2 != 0) {\n            even++;\n   \
    \     } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptjqpvaiy.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmptjqpvaiy.cpp:13:33: error: invalid\
    \ operands of types \u2018long int\u2019 and \u2018double\u2019 to binary \u2018\
    operator%\u2019\n   13 |         v.push_back({digit, num % (pow(10, i) - 1)});\n\
    \      |                             ~~~ ^ ~~~~~~~~~~~~~~~~\n      |         \
    \                    |                 |\n      |                            \
    \ long int          double\n/tmp/tmptjqpvaiy.cpp:13:52: error: no matching function\
    \ for call to \u2018std::vector<std::tuple<long int, long int> >::push_back(<brace-enclosed\
    \ initializer list>)\u2019\n   13 |         v.push_back({digit, num % (pow(10,\
    \ i) - 1)});\n      |                                                    ^\nIn\
    \ file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptjqpvaiy.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = std::tuple<long int, long int>; _Alloc = std::allocator<std::tuple<long\
    \ int, long int> >; std::vector<_Tp, _Alloc>::value_type = std::tuple<long int,\
    \ long int>]\u2019\n 1184 |       push_back(const value_type& __x)\n      |  \
    \     ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018<brace-enclosed initializer list>\u2019\
    \ to \u2018const value_type&\u2019 {aka \u2018const std::tuple<long int, long\
    \ int>&\u2019}\n 1184 |       push_back(const value_type& __x)\n      |      \
    \           ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = std::tuple<long int, long int>; _Alloc =\
    \ std::allocator<std::tuple<long int, long int> >; std::vector<_Tp, _Alloc>:"
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tlong num_int = std::abs(num);\n\tlong evens\
    \ = 0;\n\tlong odds = 0;\n\tfor (long i = 2; i <= num_int; i++) {\n\t\tif (num\
    \ % i == 0) {\n\t\t\tevens++;\n\t\t} else {\n\t\t\todds++;\n\t\t}\n\t}\n\treturn\
    \ std::make_tuple(evens, odds);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp3rpmwr4j: /tmp/tmp3rpmwr4j.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 1, odd = 0;\n    while (num\
    \ > 0) {\n        if (num % 2 == 0) even++;\n        else odd++;\n        num\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n   \
    \ auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpgq392mlr: /tmp/tmpgq392mlr.cpp:18: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  // write your code here\n  long evens =\
    \ 0;\n  long odds = 0;\n  long temp = 0;\n\n  if(num < 0) {\n    temp = abs(num);\n\
    \    num = -num;\n  }\n\n  while (num > 0) {\n    temp = num % 10;\n    if(temp\
    \ % 2 == 0) {\n      evens++;\n    } else {\n      odds++;\n    }\n    num = num\
    \ / 10;\n  }\n\n  return std::make_tuple(evens, odds);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpvnm2hdga: /tmp/tmpvnm2hdga.cpp:39: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116336
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    auto it = std::count_if(std::begin(num),\
    \ std::end(num), [&](long &digit){return digit % 2 != 0; });\n    return std::make_tuple(it\
    \ - std::begin(num), it - 1);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5uqcr3kd.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmp5uqcr3kd.cpp:8:43: error: no matching\
    \ function for call to \u2018begin(long int&)\u2019\n    8 |     auto it = std::count_if(std::begin(num),\
    \ std::end(num), [&](long &digit){return digit % 2 != 0; });\n      |        \
    \                                   ^\nIn file included from /usr/include/c++/9/bits/range_access.h:36,\n\
    \                 from /usr/include/c++/9/string:54,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5uqcr3kd.cpp:2:\n/usr/include/c++/9/initializer_list:89:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\
    \n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n\
    /usr/include/c++/9/initializer_list:89:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5uqcr3kd.cpp:8:43: note:   mismatched types \u2018std::initializer_list<_Tp>\u2019\
    \ and \u2018long int\u2019\n    8 |     auto it = std::count_if(std::begin(num),\
    \ std::end(num), [&](long &digit){return digit % 2 != 0; });\n      |        \
    \                                   ^\nIn file included from /usr/include/c++/9/string:54,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_6"
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n   long cnt[2*11];\n   assert(num < 1000);\n\
    \   int i = 0;\n   while( num > 0 ) {\n      cnt[i] = num%10;\n      num/=10;\n\
    \      i++;\n   }\n   long count = 0;\n   for( int j = 0 ; j < 2*i ; ++j ) {\n\
    \      if( cnt[j] % 2 == 0 ) {\n         count ++;\n      }\n   }\n   return std::make_tuple(count,\
    \ count+1);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpwao_adg3: /tmp/tmpwao_adg3.cpp:27: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116336
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long count = 0;\n    while(num) {\n  \
    \      if(num % 2 == 0) {\n            count += 1;\n        }\n        num /=\
    \ 2;\n    }\n    return std::make_tuple(count, count + 1);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpuoz18a_g: /tmp/tmpuoz18a_g.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int counter = 0;\n    while (num != 0)\
    \ {\n        num /= 10;\n        ++counter;\n    }\n    return std::make_tuple(counter,\
    \ counter - 1);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpn6l26n81: /tmp/tmpn6l26n81.cpp:17: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0;\n    long odd = 0;\n  \
    \  while (num != 0) {\n        if (num % 2 == 0) {\n            even++;\n    \
    \        num /= 2;\n        }\n        else {\n            odd++;\n          \
    \  num /= 2;\n        }\n    }\n    return std::make_tuple(even, odd);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp5158kajg: /tmp/tmp5158kajg.cpp:24: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    do {\n  \
    \      even = (num % 10) + even;\n        num /= 10;\n    } while (num > 0);\n\
    \    do {\n        odd = (num % 10) + odd;\n        num /= 10;\n    } while (num\
    \ > 0);\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpa1u3xyu8: /tmp/tmpa1u3xyu8.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while (num\
    \ > 0) {\n        long remainder = num % 10;\n        if (remainder % 2 == 0)\
    \ {\n            even++;\n        } else {\n            odd++;\n        }\n  \
    \      num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpye5cmr_j: /tmp/tmpye5cmr_j.cpp:23: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while (num\
    \ > 0) {\n        long mod = num % 10;\n        if (mod >= 0 && mod % 2 != 0)\
    \ {\n            even++;\n        }\n        if (mod < 0 && mod % 2 == 0) {\n\
    \            odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp21f5nh7x: /tmp/tmp21f5nh7x.cpp:23: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd = 0, even = 0;\n    while (num)\
    \ {\n        int digit = num % 10;\n        num/= 10;\n        odd+= digit==2;\n\
    \        even+= digit==1;\n    }\n    return std::make_tuple(even,odd);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpcpz49oty: /tmp/tmpcpz49oty.cpp:19: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even_digit = 0;\n    int odd_digit\
    \ = 0;\n    long ans = 0;\n    while (num > 0) {\n        long temp_num = num\
    \ % 10;\n        if (temp_num % 2 == 0) {\n            even_digit++;\n       \
    \ } else {\n            odd_digit++;\n        }\n        num /= 10;\n    }\n \
    \   ans = (even_digit * 2) + odd_digit;\n    return {ans, ans - even_digit - 1};\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpm1qqfz_k: /tmp/tmpm1qqfz_k.cpp:25: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int digits[100] = {0};\n    long odd =\
    \ 0;\n    long even = 0;\n    long length = 0;\n    while (num > 0) {\n      \
    \  digits[length++] = num % 10;\n        num /= 10;\n    }\n    length = length\
    \ - 1;\n    while (length > 0) {\n        int digit = digits[length--];\n    \
    \    if (digit % 2 == 1) {\n            odd++;\n        }\n        if (digit %\
    \ 2 == 0) {\n            even++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzr66_bj3: /tmp/tmpzr66_bj3.cpp:30: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // Write your code here\n    if(num ==\
    \ 0)\n        return std::make_tuple(1, 0);\n    long even_num = 0;\n    long\
    \ odd_num = 0;\n    while(num != 0){\n        even_num = even_num * 10 + num%10;\n\
    \        odd_num = odd_num * 10 + num%10;\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even_num, odd_num);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpz8faofrj: /tmp/tmpz8faofrj.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    if(num == 0) return std::make_tuple(1,\
    \ 1);\n    long even = 0, odd = 0;\n    while(num) {\n        if(num % 2 == 0)\
    \ even++;\n        else odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp99a8wydj: /tmp/tmp99a8wydj.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  // code here\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpozz4qfzd.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpozz4qfzd.cpp:9:26: error: \u2018even\u2019\
    \ was not declared in this scope\n    9 |   return std::make_tuple(even, odd);\n\
    \      |                          ^~~~\n/tmp/tmpozz4qfzd.cpp:9:32: error: \u2018\
    odd\u2019 was not declared in this scope\n    9 |   return std::make_tuple(even,\
    \ odd);\n      |                                ^~~\n"
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0, odd = 0, remainder = 0;\n\
    \  while (num) {\n    remainder = num % 10;\n    if (remainder % 2 == 0) {\n \
    \     even++;\n      remainder /= 2;\n    } else {\n      odd++;\n      remainder\
    \ %= 2;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp3yfgyco2: /tmp/tmp3yfgyco2.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = num % 10, odd = num - even;\n\
    \    if (even % 2 == 0 && odd % 2 == 0) return std::make_tuple(even + 1, odd +\
    \ 1);\n    else return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmps4pvr80c: /tmp/tmps4pvr80c.cpp:14: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long countOdd = 0;\n    long countEven\
    \ = 0;\n\n    while (num > 0) {\n        // Find how many digits in current number.\n\
    \        long digit = num % 10;\n        long evenDigit = (num % 100) / 10;\n\
    \        long oddDigit = (num % 1000) / 100;\n        long totalDigits = digit\
    \ + evenDigit + oddDigit;\n        num = (num / totalDigits) % 1000;\n       \
    \ // If evenDigit then increase the count by 1\n        if (evenDigit > 0)\n \
    \           countEven++;\n        // If oddDigit then increase the count by 1\n\
    \        if (oddDigit > 0)\n            countOdd++;\n    }\n    return std::make_tuple(countEven,\
    \ countOdd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116339
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num > 0);\n    long num1 = num;\n\
    \    long odd = 0;\n    long even = 0;\n    long max;\n    do {\n        max =\
    \ num1 >> 1;\n        odd++;\n        num1 -= max;\n    } while (num1 > 0);\n\
    \    do {\n        max = num1 >> 1;\n        even++;\n        num1 -= max;\n \
    \   } while (num1 > 0);\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\n    if (num\
    \ < 0) {\n        num = -num;\n    }\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpbhsqj5yp: /tmp/tmpbhsqj5yp.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n\n    while (\
    \ num > 0 ) {\n        even = num % 10;\n        odd = odd % 2 + even;\n     \
    \   num /= 10;\n    }\n\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpka5szto8: /tmp/tmpka5szto8.cpp:20: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even, odd;\n    long p = num;\n \
    \   long tmp, tmp2;\n    while (p > 0) {\n        if (p % 2 == 0) {\n        \
    \    even++;\n        } else {\n            odd++;\n        }\n        p /= 10;\n\
    \    }\n    tmp = num;\n    while (tmp > 0) {\n        tmp2 = tmp % 10;\n    \
    \    tmp /= 10;\n        if (tmp2 % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp6tpo0vxa: /tmp/tmp6tpo0vxa.cpp:33: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd_count = 1;\n    long even_count\
    \ = 1;\n    int digit;\n    while ((num = num / 10) != 0) {\n        digit = num\
    \ % 10;\n        if (digit % 2 == 0)\n            even_count = even_count * 10\
    \ + digit;\n        else\n            odd_count = odd_count * 10 + digit;\n  \
    \  }\n    return std::make_tuple(even_count, odd_count);\n}\nint main() {\n  \
    \  auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpii14vzq8: /tmp/tmpii14vzq8.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long digit = num % 10;\n        num /= 10;\n        if (digit % 2\
    \ == 0) {\n            even++;\n        } else {\n            odd++;\n       \
    \ }\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpw5hd4399: /tmp/tmpw5hd4399.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116334
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    auto even = std::count(std::cbegin(num),\
    \ std::cend(num), '0');\n    auto odd = std::count(std::cbegin(num), std::cend(num),\
    \ '1');\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvlo6e__l.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpvlo6e__l.cpp:8:43: error: no matching\
    \ function for call to \u2018cbegin(long int&)\u2019\n    8 |     auto even =\
    \ std::count(std::cbegin(num), std::cend(num), '0');\n      |                \
    \                           ^\nIn file included from /usr/include/c++/9/string:54,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvlo6e__l.cpp:2:\n/usr/include/c++/9/bits/range_access.h:116:5:\
    \ note: candidate: \u2018template<class _Container> constexpr decltype (std::begin(__cont))\
    \ std::cbegin(const _Container&)\u2019\n  116 |     cbegin(const _Container& __cont)\
    \ noexcept(noexcept(std::begin(__cont)))\n      |     ^~~~~~\n/usr/include/c++/9/bits/range_access.h:116:5:\
    \ note:   template argument deduction/substitution failed:\n/usr/include/c++/9/bits/range_access.h:\
    \ In substitution of \u2018template<class _Container> constexpr decltype (std::begin(__cont))\
    \ std::cbegin(const _Container&) [with _Container = long int]\u2019:\n/tmp/tmpvlo6e__l.cpp:8:43:\
    \   required from here\n/usr/include/c++/9/bits/range_access.h:117:29: error:\
    \ no matching function for call to \u2018begin(const long int&)\u2019\n  117 |\
    \       -> decltype(std::begin(__cont))\n      |                   ~~~~~~~~~~^~~~~~~~\n\
    In file included from /usr/include/c++/9/bits/range_access.h:36,\n           \
    \      from /usr/include/c++/9/string:54,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \ "
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    long p =\
    \ num / 10;\n    long q = num % 10;\n    if (p == 0 && q == 0) {\n        return\
    \ std::make_tuple(even, odd);\n    }\n    while (p != 0) {\n        even += p;\n\
    \        p /= 10;\n    }\n    while (p != 0) {\n        odd += p;\n        p /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp7ensolw6: /tmp/tmp7ensolw6.cpp:26: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116335
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    long limit\
    \ = sqrt(num);\n    while (num >= limit) {\n        long mid = limit / 2;\n  \
    \      if (num % mid == 0) {\n            even++;\n        } else {\n        \
    \    odd++;\n        }\n        limit = mid;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660116335
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tassert(num > 0);\n\tlong even = 0, odd =\
    \ 1;\n\twhile (num > 0) {\n\t\tif (num % 2 == 0)\n\t\t\teven += 1;\n\t\telse\n\
    \t\t\todd += 1;\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpwhrkfm5h: /tmp/tmpwhrkfm5h.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116337
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  while\
    \ (num > 0) {\n    if (num & 1) odd++;\n    else even++;\n    num >>= 1;\n  }\n\
    \  return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpup_2twdc: /tmp/tmpup_2twdc.cpp:19: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116337
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd = 0;\n    long even = 0;\n  \
    \  while (num > 0) {\n        long remaining = num % 10;\n        num = num /\
    \ 10;\n        if (remaining % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpszlotkce: /tmp/tmpszlotkce.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd=0, even=0;\n    while(num) {\n\
    \        if(num%2==0){even++;}\n        else {odd++;}\n        num/=2;\n    }\n\
    \    return std::make_tuple(even,odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp58rrbvsc: /tmp/tmp58rrbvsc.cpp:18: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 1, odd = 0;\n    for(; num;\
    \ num /= 10) {\n        if(num % 2 == 0) {\n            even += 1;\n        }\
    \ else {\n            odd += 1;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp7w9fnuft: /tmp/tmp7w9fnuft.cpp:20: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116337
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    if(num<0){\n        throw std::runtime_error(\"\
    Error\");\n    }\n    long ans = 0;\n    while(num!=0){\n        if(num%2==0){\n\
    \            ans++;\n        }\n        num=num/2;\n    }\n    return std::make_tuple(ans,ans);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp32zkh2hr: /tmp/tmp32zkh2hr.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  int result = 0;\n  while (num != 0) {\n\
    \    num /= 10;\n    result++;\n  }\n  long even, odd;\n  while (result != 0)\
    \ {\n    num = num / 10;\n    even++;\n  }\n  num = num / 10;\n  while (num !=\
    \ 0) {\n    num = num / 10;\n    odd++;\n  }\n  return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116342
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int num_digit = num > 0 ? std::log10(num)\
    \ + 1 : 1;\n    auto even_digit = std::count_if(std::istream_iterator<int>(std::ostream_iterator<int>(std::cout)),\
    \ std::istream_iterator<int>(), [&num](int i) { return (i % num) == 0; });\n \
    \   auto odd_digit = std::count_if(std::istream_iterator<int>(std::ostream_iterator<int>(std::cout)),\
    \ std::istream_iterator<int>(), [&num](int i) { return (i % num) != 0; });\n \
    \   return std::make_tuple(even_digit, odd_digit);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5vt5gs8m.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmp5vt5gs8m.cpp:9:101: error: no matching\
    \ function for call to \u2018std::istream_iterator<int>::istream_iterator(std::ostream_iterator<int>)\u2019\
    \n    9 |     auto even_digit = std::count_if(std::istream_iterator<int>(std::ostream_iterator<int>(std::cout)),\
    \ std::istream_iterator<int>(), [&num](int i) { return (i % num) == 0; });\n \
    \     |                                                                      \
    \                               ^\nIn file included from /usr/include/c++/9/iterator:66,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n\
    \                 from /tmp/tmp5vt5gs8m.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:72:7:\
    \ note: candidate: \u2018std::istream_iterator<_Tp, _CharT, _Traits, _Dist>::istream_iterator(const\
    \ std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&) [with _Tp = int; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Dist = long int]\u2019\n   72 | \
    \      istream_iterator(const istream_iterator& __obj)\n      |       ^~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stream_iterator.h:72:48: note:   no known conversion for\
    \ argument 1 from \u2018std::ostream_iterator<int>\u2019 to \u2018const std::istream_iterator<int>&\u2019\
    \n   72 |       istream_iterator(const istream_iterator& __obj)\n      |     \
    \                   ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/stream_iterator.h:68:7:\
    \ note: candidate: \u2018std::istream_iterator<_Tp, _CharT, _Traits, _Dist>::istream_iterator(std::istream_iterator<_Tp,\
    \ _CharT, _Traits, _Dist>::istream_type&) [with _Tp = int; _CharT = char; _Traits\
    \ = std::char_traits<char>; _Dist = long int; std::istream_iterator<_Tp, _CharT,\
    \ _Traits, _Dist>::istream_type = std::basic_istream<char>]\u2019\n   68 |   \
    \    istream_iterator(istream_type& __s)\n      |       ^~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:68:38:\
    \ note:   no known conversion for argument 1 from \u2018std::ostream_iterator<int>\u2019\
    \ to \u2018std::istream_iterator<int>::istream_type&\u2019 {aka \u2018std::bas"
  stdout: ''
  timestamp: 1660116337
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> even;\n  std::tuple<long,\
    \ long> odd;\n  int x = num;\n  while (x > 0)\n  {\n    if (x % 2 == 0)\n    {\n\
    \      even = std::make_tuple(std::get<0>(even), std::get<1>(even)++);\n    }\n\
    \    else\n    {\n      odd = std::make_tuple(std::get<0>(odd), std::get<1>(odd)++);\n\
    \    }\n    x = x / 10;\n  }\n  return even;\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpkygpf7bm: /tmp/tmpkygpf7bm.cpp:27: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long n = num;\n    long even = 0;\n  \
    \  long odd = 0;\n    while (n > 0) {\n        long rem = n % 10;\n        if\
    \ (rem % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n        n = n / 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq28pmtxv: /tmp/tmpq28pmtxv.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while (num\
    \ != 0) {\n        long remaining = num % 10;\n        even = even * 10 + remaining;\n\
    \        odd = (odd + 1) * 10 + (remaining % 2);\n        num = num / 10;\n  \
    \  }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpvgxlztfk: /tmp/tmpvgxlztfk.cpp:19: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n   long sum=0;\n   long even=0, odd=1;\n \
    \  while(num){\n      sum+=num%10;\n      even*=10;\n      num/=10;\n      odd*=10;\n\
    \   }\n   if(sum%2==0){\n      return std::make_tuple(even,odd);\n   }\n   return\
    \ std::make_tuple(even+sum, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpatg27ols: /tmp/tmpatg27ols.cpp:23: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n   long even = 0, odd = 1;\n   while (num\
    \ > 0) {\n      if (num % 2 == 0)\n         even++;\n      else\n         odd++;\n\
    \      num /= 10;\n   }\n   return {even, odd};\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpwmfgb0_o: /tmp/tmpwmfgb0_o.cpp:20: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116337
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> res;\n  while (num\
    \ != 0) {\n    long temp;\n    long evens = 0;\n    long odds = 0;\n    // Divide\
    \ the number into two parts\n    temp = num % 10;\n    // Count the even numbers\n\
    \    while (temp / 2 == 0)\n      evens++;\n    // Count the odd numbers\n   \
    \ while (temp / 2 != 0)\n      odds++;\n    // Change the number into its two\
    \ parts\n    num /= 10;\n    // Put them into a tuple\n    res.second = res.first\
    \ + evens;\n    res.first = res.second + odds;\n  }\n  return res;\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphf1un86y.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmphf1un86y.cpp:24:9: error: \u2018class\
    \ std::tuple<long int, long int>\u2019 has no member named \u2018second\u2019\n\
    \   24 |     res.second = res.first + evens;\n      |         ^~~~~~\n/tmp/tmphf1un86y.cpp:24:22:\
    \ error: \u2018class std::tuple<long int, long int>\u2019 has no member named\
    \ \u2018first\u2019\n   24 |     res.second = res.first + evens;\n      |    \
    \                  ^~~~~\n/tmp/tmphf1un86y.cpp:25:9: error: \u2018class std::tuple<long\
    \ int, long int>\u2019 has no member named \u2018first\u2019\n   25 |     res.first\
    \ = res.second + odds;\n      |         ^~~~~\n/tmp/tmphf1un86y.cpp:25:21: error:\
    \ \u2018class std::tuple<long int, long int>\u2019 has no member named \u2018\
    second\u2019\n   25 |     res.first = res.second + odds;\n      |            \
    \         ^~~~~~\n"
  stdout: ''
  timestamp: 1660116337
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long count = 0;\n    long even = num;\n\
    \    long odd = num;\n\n    while (even > 0) {\n        // if even digit is 1\
    \ then add 1 to count\n        if (even % 2 == 1) {\n            even = even /\
    \ 2;\n            count++;\n        }\n        // if odd digit is 1 then add 1\
    \ to count\n        else {\n            odd = odd * 10;\n            count++;\n\
    \        }\n    }\n\n    return std::make_tuple(count, count + 1);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpo45am7ws: /tmp/tmpo45am7ws.cpp:29: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd = 0, even = 0;\n    long a =\
    \ num / 10;\n    long b = (num % 10) * 10;\n    while (a > 0 && b > 0) {\n   \
    \     if (a % 2 == 0) {\n            even++;\n            a /= 10;\n        }\
    \ else {\n            odd++;\n            b /= 10;\n        }\n    }\n    return\
    \ std::make_tuple(odd, even);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpcrlpuna4: /tmp/tmpcrlpuna4.cpp:24: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116337
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    if (num < 0) {\n        std::cout << \"\
    Wrong input format\" << std::endl;\n    }\n    std::set<int> even;\n    std::set<int>\
    \ odd;\n    long long count = 0;\n    while (num != 0) {\n        if (num % 2\
    \ == 0) {\n            even.insert(num % 10);\n            num /= 10;\n      \
    \  } else {\n            odd.insert(num % 10);\n            num /= 10;\n     \
    \   }\n        count++;\n    }\n    return std::make_tuple(std::count_if(even.begin(),\
    \ even.end(), [&](int a) { return a != 0; }),\n                            std::count_if(odd.begin(),\
    \ odd.end(), [&](int a) { return a != 0; }));\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp22w1huhw: /tmp/tmp22w1huhw.cpp:32: int main(): Assertion `candidate((346211))
    == (std::make_tuple(3, 3))'' failed.

    '
  stdout: 'Wrong input format

    '
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    if (num < 0) {\n        return std::make_tuple(-1,\
    \ 0);\n    }\n\n    auto x = num / 10;\n    auto y = num - x * 10;\n    if (y\
    \ > 9) {\n        x = x + 1;\n        y = y - 10;\n    }\n\n    long even = x;\n\
    \    long odd = y;\n    return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzdsrnd60: /tmp/tmpzdsrnd60.cpp:25: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // Complete the function\n    long counter\
    \ = 0;\n    long even = 1;\n    long odd = 1;\n    while (num > 0) {\n       \
    \ if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n        num = num / 2;\n    }\n    // return (even, odd)\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp1_ys0x5o: /tmp/tmp1_ys0x5o.cpp:25: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num >= 0);\n    long sum = 0;\n\
    \    long digit = 0;\n    // number of even digits\n    while (num > 0) {\n  \
    \      digit = num % 10;\n        sum += digit > 0 ? 1 : -1;\n        num /= 10;\n\
    \    }\n    // number of odd digits\n    while (num > 0) {\n        digit = num\
    \ % 10;\n        sum += digit > 0 ? 2 : -2;\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(sum, num);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp9gs7lcal: /tmp/tmp9gs7lcal.cpp:27: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long digits_even_odd = 0;\n    long digits_even\
    \ = 0;\n    long digits_odd = 0;\n    while (num > 0) {\n        digits_even_odd\
    \ += num % 10;\n        digits_even += num % 10;\n        digits_odd += num %\
    \ 10;\n        num /= 10;\n    }\n    return std::make_tuple(digits_even_odd,\
    \ digits_odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpiv5vdwrv: /tmp/tmpiv5vdwrv.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num > 0);\n    long counts[2] =\
    \ {0};\n    long odd_sum = 0, even_sum = 0;\n    long mod = num % 10;\n    for\
    \ (long i = 4; i <= num; i++) {\n        long temp = i;\n        if (temp % 2\
    \ == 1) {\n            counts[1]++;\n        }\n        while (temp > 0) {\n \
    \           temp = temp / 10;\n            counts[0]++;\n        }\n    }\n  \
    \  while (mod > 0) {\n        mod = mod / 10;\n        even_sum = even_sum * 10\
    \ + mod;\n    }\n    mod = num % 10;\n    for (long i = 4; i <= num; i++) {\n\
    \        long temp = i;\n        while (temp > 0) {\n            temp = temp /\
    \ 10;\n            counts[0]--;\n        }\n        if (temp % 2 == 1) {\n   \
    \         counts[1]--;\n        }\n    }\n    return std::make_tuple(counts[1],\
    \ counts[0]);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp6pd3j1n8: /tmp/tmp6pd3j1n8.cpp:41: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even_sum = 0;\n  long odd_sum = 0;\n\
    \  long remainder = num;\n  while (remainder != 0) {\n    long digit = remainder\
    \ % 10;\n    remainder = remainder / 10;\n    if (digit % 2 == 0) {\n      even_sum\
    \ += digit;\n    } else {\n      odd_sum += digit;\n    }\n  }\n  return std::make_tuple(even_sum,\
    \ odd_sum);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp_lezqfun: /tmp/tmp_lezqfun.cpp:24: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tassert(num >= 0);\n\tint num_odd = 0, num_even\
    \ = 0;\n\twhile (num > 0) {\n\t\tint remain = num % 10;\n\t\tnum /= 10;\n\t\t\
    if (remain == 0) {\n\t\t\tnum_even++;\n\t\t} else {\n\t\t\tnum_odd++;\n\t\t}\n\
    \t}\n\treturn std::make_tuple(num_even, num_odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp67ky1pta: /tmp/tmp67ky1pta.cpp:8: std::tuple<long int, long int> even_odd_count(long
    int): Assertion `num >= 0'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int n = 0;\n    while (num > 0) {\n  \
    \      n += num % 10; // if n is even, add num % 10 to n\n        num /= 10; //\
    \ remove this digit from num\n    }\n    return std::make_tuple(n, n % 2); //\
    \ return a tuple that has the number of even and odd digits respectively.\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp4roxuxnb: /tmp/tmp4roxuxnb.cpp:17: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116337
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tassert(num > 0);\n\tlong evenCount = 0;\n\
    \tlong oddCount = 0;\n\n\tint digit = num;\n\n\tint one = 1, two = 2, three =\
    \ 4, four = 8, five = 16;\n\tint six = 64, seven = 128, eight = 256, nine = 512,\
    \ ten = 1024, eleven = 1048576;\n\tint twelve = 2097152, thirteen = 4194304, fourteen\
    \ = 8388608;\n\tint fifteen = 16777216, sixteen = 33554432, seventeen = 67108864,\
    \ eighteen = 134217728;\n\tint nineteen = 268435456, twenty = 536870912, thirty\
    \ = 1099511627776;\n\n\twhile (digit > 0) {\n\t\tint mod = (digit % 10);\n\t\t\
    if (mod == 0) {\n\t\t\tevenCount++;\n\t\t} else if (mod == 1) {\n\t\t\toddCount++;\n\
    \t\t} else {\n\t\t\tlong temp = (num % 10);\n\t\t\tif (temp == 2)\n\t\t\t\tone++;\n\
    \t\t\telse if (temp == 3)\n\t\t\t\ttwo++;\n\t\t\telse if (temp == 4)\n\t\t\t\t\
    three++;\n\t\t\telse if (temp == 5)\n\t\t\t\tfour++;\n\t\t\telse if (temp == 6)\n\
    \t\t\t\tfive++;\n\t\t\telse if (temp == 7)\n\t\t\t\tsix++;\n\t\t\telse if (temp\
    \ == 8)\n\t\t\t\tseven++;\n\t\t\telse if (temp == 9)\n\t\t\t\teight++;\n\t\t\t\
    else if (temp == 10)\n\t\t\t\tnine++;\n\t\t\telse if (temp == 11)\n\t\t\t\tten++;\n\
    \t\t\telse if (temp == 12)\n\t\t\t\ttwelve++;\n\t\t\telse if (temp == 13)\n\t\t\
    \t\tthirteen++;\n\t\t\telse if (temp == 14)\n\t\t\t\tfourteen++;\n\t\t\telse if\
    \ (temp == 15)\n\t\t\t\tfifteen++;\n\t\t\telse if (temp == 16)\n\t\t\t\tsixteen++;\n\
    \t\t\telse if (temp == 17)\n\t\t\t\tseventeen++;\n\t\t\telse if (temp == 18)\n\
    \t\t\t\teighteen++;\n\t\t\telse if (temp == 19)\n\t\t\t\tnineteen++;\n\t\t\telse\
    \ if (temp == 20)\n\t\t\t\ttwenty++;\n\t\t\telse if (temp == 21)\n\t\t\t\tthirty++;\n\
    \t\t\telse if (temp == 22)\n\t\t\t\tforty++;\n\t\t\telse if (temp == 23)\n\t\t\
    \t\tfifty++;\n\t\t\telse if (temp == 24)\n\t\t\t\tsixty++;\n\t\t\telse if (temp\
    \ == 25)\n\t\t\t\tseventy++;\n\t\t\telse if (temp == 26)\n\t\t\t\teighty++;\n\t\
    \t\telse if (temp == 27)\n\t\t\t\tninety++;\n\t\t\telse if (temp == 28)\n\t\t\t\
    \thundred++;\n\t\t\telse if (temp == 29)\n\t\t\t\tthousand++;\n\t\t\telse if (temp\
    \ == 30)\n\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpju_omnr1.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpju_omnr1.cpp:18:57: warning: overflow\
    \ in conversion from \u2018long int\u2019 to \u2018int\u2019 changes value from\
    \ \u20181099511627776\u2019 to \u20180\u2019 [-Woverflow]\n   18 |  int nineteen\
    \ = 268435456, twenty = 536870912, thirty = 1099511627776;\n      |          \
    \                                               ^~~~~~~~~~~~~\n/tmp/tmpju_omnr1.cpp:69:5:\
    \ error: \u2018forty\u2019 was not declared in this scope\n   69 |     forty++;\n\
    \      |     ^~~~~\n/tmp/tmpju_omnr1.cpp:71:5: error: \u2018fifty\u2019 was not\
    \ declared in this scope\n   71 |     fifty++;\n      |     ^~~~~\n/tmp/tmpju_omnr1.cpp:73:5:\
    \ error: \u2018sixty\u2019 was not declared in this scope; did you mean \u2018\
    six\u2019?\n   73 |     sixty++;\n      |     ^~~~~\n      |     six\n/tmp/tmpju_omnr1.cpp:75:5:\
    \ error: \u2018seventy\u2019 was not declared in this scope; did you mean \u2018\
    seven\u2019?\n   75 |     seventy++;\n      |     ^~~~~~~\n      |     seven\n\
    /tmp/tmpju_omnr1.cpp:77:5: error: \u2018eighty\u2019 was not declared in this\
    \ scope; did you mean \u2018eight\u2019?\n   77 |     eighty++;\n      |     ^~~~~~\n\
    \      |     eight\n/tmp/tmpju_omnr1.cpp:79:5: error: \u2018ninety\u2019 was not\
    \ declared in this scope; did you mean \u2018nine\u2019?\n   79 |     ninety++;\n\
    \      |     ^~~~~~\n      |     nine\n/tmp/tmpju_omnr1.cpp:81:5: error: \u2018\
    hundred\u2019 was not declared in this scope\n   81 |     hundred++;\n      |\
    \     ^~~~~~~\n/tmp/tmpju_omnr1.cpp:83:5: error: \u2018thousand\u2019 was not\
    \ declared in this scope\n   83 |     thousand++;\n      |     ^~~~~~~~\n/tmp/tmpju_omnr1.cpp:86:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   86 | }\n \
    \     | ^\n/tmp/tmpju_omnr1.cpp:87:12: error: a function-definition is not allowed\
    \ here before \u2018{\u2019 token\n   87 | int main() {\n      |            ^\n\
    /tmp/tmpju_omnr1.cpp:97:1: error: expected \u2018}\u2019 at end of input\n   97\
    \ | }\n      | ^\n/tmp/tmpju_omnr1.cpp:20:20: note: to match this \u2018{\u2019\
    \n   20 |  while (digit > 0) {\n      |                    ^\n/tmp/tmpju_omnr1.cpp:97:1:\
    \ error: expected \u2018}\u2019 at end of inpu"
  stdout: ''
  timestamp: 1660116337
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    auto n = num;\n    long even_count = 0;\n\
    \    long odd_count = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n   \
    \         even_count++;\n        }\n        n /= 2;\n    }\n    n = num;\n   \
    \ while (n > 0) {\n        if (n % 2 != 0) {\n            odd_count++;\n     \
    \   }\n        n /= 2;\n    }\n    return std::make_tuple(even_count, odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp6jqgd4i9: /tmp/tmp6jqgd4i9.cpp:28: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    std::tuple<long, long> count;\n    long\
    \ even = 0;\n    long odd = 0;\n    long digit;\n    while ((digit = num % 10)\
    \ != 0) {\n        if ((digit % 2) == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzm_u10ec: /tmp/tmpzm_u10ec.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    if (num == 0)\n        return std::make_tuple(0,\
    \ 0);\n    auto ans = std::make_tuple(0, 0);\n    auto t = std::make_tuple(num\
    \ / 10, num % 10);\n    ans = std::tuple_cat(ans, std::get<0>(t), std::get<1>(t));\n\
    \    if (ans[0] % 2 == 0 && ans[1] % 2 != 0)\n        ans = std::make_tuple(ans[0],\
    \ ans[1] + 1);\n    if (ans[0] % 2 != 0 && ans[1] % 2 == 0)\n        ans = std::make_tuple(ans[0]\
    \ + 1, ans[1]);\n    return ans;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc9mfgz6v.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpc9mfgz6v.cpp:12:61: error: no matching\
    \ function for call to \u2018tuple_cat(std::tuple<int, int>&, std::__tuple_element_t<0,\
    \ std::tuple<long int, long int> >&, std::__tuple_element_t<1, std::tuple<long\
    \ int, long int> >&)\u2019\n   12 |     ans = std::tuple_cat(ans, std::get<0>(t),\
    \ std::get<1>(t));\n      |                                                  \
    \           ^\nIn file included from /usr/include/c++/9/functional:54,\n     \
    \            from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n        \
    \         from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpc9mfgz6v.cpp:2:\n/usr/include/c++/9/tuple:1597:5:\
    \ note: candidate: \u2018template<class ... _Tpls, class> constexpr typename std::__tuple_cat_result<_Tpls\
    \ ...>::__type std::tuple_cat(_Tpls&& ...)\u2019\n 1597 |     tuple_cat(_Tpls&&...\
    \ __tpls)\n      |     ^~~~~~~~~\n/usr/include/c++/9/tuple:1597:5: note:   template\
    \ argument deduction/substitution failed:\n/usr/include/c++/9/tuple:1594:31: error:\
    \ no type named \u2018type\u2019 in \u2018struct std::enable_if<false, void>\u2019\
    \n 1594 |   template<typename... _Tpls, typename = typename\n      |         \
    \                      ^~~~~~~~\n/tmp/tmpc9mfgz6v.cpp:13:12: error: no match for\
    \ \u2018operator[]\u2019 (operand types are \u2018std::tuple<int, int>\u2019 and\
    \ \u2018int\u2019)\n   13 |     if (ans[0] % 2 == 0 && ans[1] % 2 != 0)\n    \
    \  |            ^\n/tmp/tmpc9mfgz6v.cpp:13:31: error: no match for \u2018operator[]\u2019\
    \ (operand types are \u2018std::tuple<int, int>\u2019 and \u2018int\u2019)\n \
    \  13 |     if (ans[0] % 2 == 0 && ans[1] % 2 != 0)\n      |                 \
    \              ^\n/tmp/tmpc9mfgz6v.cpp:14:34: error: no match for \u2018operator[]\u2019\
    \ (operand types are \u2018std::tuple<int, int>\u2019 and \u2018int\u2019)\n \
    \  14 |         ans = std::make_tuple(ans[0], ans[1] + 1);\n      |          \
    \                        ^\n/tmp/tmpc9mfgz6v.cpp:14:42: error: no match for \u2018\
    operator[]\u2019 (operand types are "
  stdout: ''
  timestamp: 1660116337
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even = 0, odd = 0;\n    while ( num\
    \ > 0 ) {\n        num = num / 10;\n        if ( num % 2 == 0 ) even++;\n    \
    \    else odd++;\n    }\n    std::tuple<long, long> ans = std::make_tuple(even,\
    \ odd);\n    return ans;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp2wlrw763: /tmp/tmp2wlrw763.cpp:19: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even_digits = 0, odd_digits = 0;\n\
    \    long remainder = num;\n    while (remainder != 0) {\n        int rem = remainder%10;\n\
    \        remainder = remainder/10;\n        if (rem % 2 == 0) {\n            even_digits++;\n\
    \        } else {\n            odd_digits++;\n        }\n    }\n    return std::make_tuple(even_digits,\
    \ odd_digits);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmppljhri9m: /tmp/tmppljhri9m.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // write your code here\n    long even_digits\
    \ = 0;\n    long odd_digits = 0;\n    long remainder = num % 10;\n    while (remainder\
    \ > 0) {\n        if (remainder % 2 != 0)\n            ++odd_digits;\n       \
    \ even_digits += remainder / 10;\n        remainder %= 10;\n    }\n    return\
    \ std::make_tuple(even_digits, odd_digits);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long count = 0;\n    while (num > 0) {\n\
    \        long mod = num % 10;\n        if (mod % 2 == 0) {\n            count\
    \ += 1;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(count,\
    \ 0);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpl8r4__mg: /tmp/tmpl8r4__mg.cpp:20: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long sum = 0;\n    long even = 0;\n  \
    \  long odd = 0;\n    while (num > 0) {\n        sum += num % 10;\n        if\
    \ (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp479pwsac: /tmp/tmp479pwsac.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    if (num < 0) {\n        num = -num;\n\
    \    }\n    long even = 0, odd = 0;\n    while (num > 0) {\n        int digit\
    \ = num % 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        }\n        if (digit % 2 == 1) {\n            odd++;\n\
    \        }\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n \
    \   auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp2r14oar9: /tmp/tmp2r14oar9.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    std::tuple<long, long> tuple;\n    long\
    \ countEven = 0;\n    long countOdd = 0;\n    long i = 0;\n\n    if (num < 0)\n\
    \    {\n        // handle negative number\n        std::cout << \"num < 0\" <<\
    \ std::endl;\n        num = -num;\n    }\n    // num > 0\n    while (i < num /\
    \ 10)\n    {\n        if (num % 10 == 0)\n            countEven++;\n        else\n\
    \            countOdd++;\n        i++;\n    }\n    // handle all remainder digits\
    \ in num\n    while (i < num)\n    {\n        if (num % 10 == 0)\n           \
    \ countEven++;\n        else\n            countOdd++;\n        i++;\n    }\n \
    \   tuple.first = countEven;\n    tuple.second = countOdd;\n    return tuple;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiny7p52f.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpiny7p52f.cpp:37:11: error: \u2018class\
    \ std::tuple<long int, long int>\u2019 has no member named \u2018first\u2019\n\
    \   37 |     tuple.first = countEven;\n      |           ^~~~~\n/tmp/tmpiny7p52f.cpp:38:11:\
    \ error: \u2018class std::tuple<long int, long int>\u2019 has no member named\
    \ \u2018second\u2019\n   38 |     tuple.second = countOdd;\n      |          \
    \ ^~~~~~\n"
  stdout: ''
  timestamp: 1660116338
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num > 0);\n    long even_count\
    \ = 0, odd_count = 0;\n    int digit = num % 10;\n    while (num / 10 != 0) {\n\
    \        num -= digit;\n        ++odd_count;\n        digit = num % 10;\n    }\n\
    \    ++even_count;\n    return (even_count, odd_count);\n}\nint main() {\n   \
    \ auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnib4g658.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpnib4g658.cpp:17:23: error: could not\
    \ convert \u2018((void)0, odd_count)\u2019 from \u2018long int\u2019 to \u2018\
    std::tuple<long int, long int>\u2019\n   17 |     return (even_count, odd_count);\n\
    \      |            ~~~~~~~~~~~^~~~~~~~~~~~\n      |                       |\n\
    \      |                       long int\n"
  stdout: ''
  timestamp: 1660116337
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0;\n    long odd = 0;\n  \
    \  while (num) {\n        long d = num % 10;\n        if (d == 0) {\n        \
    \    even++;\n        } else {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpnot3u702: /tmp/tmpnot3u702.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0, x = num;\n   \
    \ while (x) {\n        x /= 10;\n        even++;\n    }\n\n    x = num;\n    while\
    \ (x) {\n        x /= 10;\n        odd++;\n    }\n\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp6dn3j1zl: /tmp/tmp6dn3j1zl.cpp:24: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116338
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    if (num < 0)\n        return std::make_tuple(1,\
    \ 0);\n    long even = 0;\n    long odd = 1;\n    int rem;\n    while (rem = num\
    \ % 10, even * (long)10 + rem) num = num / 10;\n    while (rem = num % 10, odd\
    \ * (long)10 + rem) num = num / 10;\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116343
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long count = 0;\n  long odd_digit = 0;\n\
    \  long even_digit = 0;\n  while (num != 0) {\n    count += num % 10;\n    num\
    \ = num / 10;\n  }\n  assert(count > 0);\n  while ((count % 2) == 1) {\n    even_digit\
    \ += 1;\n    count /= 2;\n  }\n  while ((count % 2) == 0) {\n    odd_digit +=\
    \ 1;\n    count /= 2;\n  }\n  return std::make_tuple(odd_digit, even_digit);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  while\
    \ ( num != 0) {\n    if (num % 2 == 0){\n      even++;\n    }\n    else{\n   \
    \   odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpt9jx_jae: /tmp/tmpt9jx_jae.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num > 0);\n\n    long even = 0,\
    \ odd = 0;\n    long digit = num % 10;\n    long remaining = num / 10;\n    int\
    \ digits;\n    int digits_count;\n\n    do {\n        digits++;\n        digits_count\
    \ = (int)(remaining / 10) % 2;\n        remaining %= 10;\n\n        if (digits_count\
    \ != 0) {\n            even += digits_count;\n        }\n    } while (!(remaining\
    \ == 0));\n\n    while (remaining != 0) {\n        digits++;\n        digits_count\
    \ = (int)(remaining / 10) % 2;\n        remaining %= 10;\n\n        if (digits_count\
    \ == 0) {\n            odd++;\n        }\n    }\n\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzldth9pi: /tmp/tmpzldth9pi.cpp:40: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num >= 0);\n    long odd = 0, even\
    \ = 0;\n    long digit;\n    for (long n = num; n >= 10; n /= 10)\n        digit\
    \ = n % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    return std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp02_uri1i: /tmp/tmp02_uri1i.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    auto n = std::abs(num);\n    auto ans\
    \ = std::make_tuple(std::counting_iterator<long>(0),\n                       \
    \      std::counting_iterator<long>(0));\n    long long even = 0, odd = 0;\n \
    \   for(; num > 0; num -= n, ++even, ++odd) {\n        ans.second += n;\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpthstn3fw.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpthstn3fw.cpp:9:37: error: \u2018counting_iterator\u2019\
    \ is not a member of \u2018std\u2019\n    9 |     auto ans = std::make_tuple(std::counting_iterator<long>(0),\n\
    \      |                                     ^~~~~~~~~~~~~~~~~\n/tmp/tmpthstn3fw.cpp:9:55:\
    \ error: expected primary-expression before \u2018long\u2019\n    9 |     auto\
    \ ans = std::make_tuple(std::counting_iterator<long>(0),\n      |            \
    \                                           ^~~~\n/tmp/tmpthstn3fw.cpp:10:35:\
    \ error: \u2018counting_iterator\u2019 is not a member of \u2018std\u2019\n  \
    \ 10 |                              std::counting_iterator<long>(0));\n      |\
    \                                   ^~~~~~~~~~~~~~~~~\n/tmp/tmpthstn3fw.cpp:10:53:\
    \ error: expected primary-expression before \u2018long\u2019\n   10 |        \
    \                      std::counting_iterator<long>(0));\n      |            \
    \                                         ^~~~\n"
  stdout: ''
  timestamp: 1660116339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int digits[100];\n    long even, odd;\n\
    \n    // Get the integer digit by digit\n    for (int index = 0; index < 100;\
    \ ++index) {\n        digits[index] = num % 10;\n        num /= 10;\n    }\n \
    \   // Count the even and odd digits\n    for (int index = 0; index < 100; ++index)\
    \ {\n        if ((index + 1) % 2 == 0)\n            even = even + digits[index];\n\
    \        else\n            odd = odd + digits[index];\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp72hgz2d6: /tmp/tmp72hgz2d6.cpp:27: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd = 0;\n    long even = 0;\n  \
    \  // Write your code here\n    while ( num > 0 ) {\n        long tmp = 0;\n \
    \       tmp ^= num % 10;\n        num /= 10;\n        odd += tmp;\n        even+=tmp;\n\
    \    }\n    return std::make_tuple(odd, even);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpsjyzhwy8: /tmp/tmpsjyzhwy8.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num>0);\n    std::set<int> s;\n\
    \    for(long i=0;i<num;i++) {\n        if(i%2==0) {\n            s.insert(i);\n\
    \        }\n        if(i%2!=0) {\n            s.insert(num-i);\n        }\n  \
    \  }\n    return (std::make_tuple(s.size(),s.size()%2));\n}\nint main() {\n  \
    \  auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp5j1vamon: /tmp/tmp5j1vamon.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n   long count = 1;\n   for (long i = num;\
    \ i > 0; i /= 10)\n   {\n     if (i % 2 == 0) {\n       count += 1;\n     }\n\
    \     else {\n       count += 0;\n     }\n   }\n   return std::make_tuple(count,\
    \ num % 10);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp9ayhrjul: /tmp/tmp9ayhrjul.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    long temp\
    \ = num;\n    while (temp != 0) {\n        temp = temp % 10;\n        if (temp\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    auto s = std::to_string( num );\n    int\
    \ even = 0;\n    int odd = 0;\n    auto begin = s.begin();\n    auto end = s.end();\n\
    \    auto itr = begin;\n    // skip initial zeroes\n    while ( itr != end &&\
    \ itr != s.begin() && 0 == *itr) itr++;\n    // go through remaining digits\n\
    \    while ( itr != end ) {\n        // if current digit is odd, increment odd\
    \ counter\n        if ( 0 != *itr && 0 == *(itr + 1) % 2 ) odd++;\n        //\
    \ if current digit is even, increment even counter\n        else if ( 0 != *itr\
    \ && 0 == *(itr + 1) % 2 ) even++;\n        itr++;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmplywr7fy9: /tmp/tmplywr7fy9.cpp:29: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 1;\n    long res\
    \ = num / 2;\n    while (res > 0) {\n        res /= 2;\n        even++;\n    }\n\
    \    while (res != 0) {\n        res *= 2;\n        odd++;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp98sac0gr: /tmp/tmp98sac0gr.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long count = 1;\n    while (num != 0)\
    \ {\n        if (num % 2 == 0)\n            count++;\n        num /= 2;\n    }\n\
    \    std::cout << \"(\" << count << \", \" << num << \")\\n\";\n    return std::make_tuple(count,\
    \ num);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpihbr47tb: /tmp/tmpihbr47tb.cpp:19: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while (num)\
    \ {\n        int digit = num % 10;\n        num -= digit;\n        if (digit)\
    \ {\n            even += 1;\n        } else {\n            odd += 1;\n       \
    \ }\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp1atha5z2: /tmp/tmp1atha5z2.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    std::bitset<64> bs(num);\n    return std::make_tuple(bs.count(0),\
    \ bs.count(64));\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl1qxbxcf.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpl1qxbxcf.cpp:9:38: error: no matching\
    \ function for call to \u2018std::bitset<64>::count(int)\u2019\n    9 |     return\
    \ std::make_tuple(bs.count(0), bs.count(64));\n      |                       \
    \               ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:66,\n\
    \                 from /tmp/tmpl1qxbxcf.cpp:2:\n/usr/include/c++/9/bitset:1295:7:\
    \ note: candidate: \u2018std::size_t std::bitset<_Nb>::count() const [with long\
    \ unsigned int _Nb = 64; std::size_t = long unsigned int]\u2019\n 1295 |     \
    \  count() const _GLIBCXX_NOEXCEPT\n      |       ^~~~~\n/usr/include/c++/9/bitset:1295:7:\
    \ note:   candidate expects 0 arguments, 1 provided\n/tmp/tmpl1qxbxcf.cpp:9:52:\
    \ error: no matching function for call to \u2018std::bitset<64>::count(int)\u2019\
    \n    9 |     return std::make_tuple(bs.count(0), bs.count(64));\n      |    \
    \                                                ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:66,\n\
    \                 from /tmp/tmpl1qxbxcf.cpp:2:\n/usr/include/c++/9/bitset:1295:7:\
    \ note: candidate: \u2018std::size_t std::bitset<_Nb>::count() const [with long\
    \ unsigned int _Nb = 64; std::size_t = long unsigned int]\u2019\n 1295 |     \
    \  count() const _GLIBCXX_NOEXCEPT\n      |       ^~~~~\n/usr/include/c++/9/bitset:1295:7:\
    \ note:   candidate expects 0 arguments, 1 provided\n"
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while (num\
    \ > 0) {\n        int digit = num % 10;\n        even = even * 10 + digit;\n \
    \       num = num / 10;\n    }\n    if (even % 2 == 0 && odd % 2 == 0) {\n   \
    \     return std::make_tuple(even, odd);\n    }\n    else {\n        return std::make_tuple(even,\
    \ odd);\n    }\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgq9um21g: /tmp/tmpgq9um21g.cpp:23: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long count_even = 0, count_odd = 0;\n\
    \    while (num != 0) {\n        long rem = num % 10;\n        num = num / 10;\n\
    \        if (rem % 2 == 0) count_even++;\n        if (rem % 2 != 0) count_odd++;\n\
    \    }\n    return std::make_tuple(count_even, count_odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp59qcdqwx: /tmp/tmp59qcdqwx.cpp:26: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int evenCount = 0;\n    int oddCount =\
    \ 0;\n\n    if (num < 0) {\n        evenCount = oddCount = -num;\n    } else {\n\
    \        while (num != 0) {\n            long remainder = num % 10;\n        \
    \    num -= remainder;\n            if (remainder % 2 == 0) {\n              \
    \  evenCount++;\n            } else {\n                oddCount++;\n         \
    \   }\n        }\n    }\n\n    return std::make_tuple(evenCount, oddCount);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpwwe58wf1: /tmp/tmpwwe58wf1.cpp:30: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  // Write your code here\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp29k6yv7d: /tmp/tmp29k6yv7d.cpp:12: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even, odd;\n    long temp = num;\n\
    \    while (temp != 0) {\n        if (temp % 2 == 0)\n            even++;\n  \
    \      else\n            odd++;\n        temp = temp / 2;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpy34kemr1: /tmp/tmpy34kemr1.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num > 0);\n    long even = 0, odd\
    \ = 0;\n    while (num) {\n        long last_digit = num % 10;\n        num /=\
    \ 10;\n        if (last_digit % 2 == 0) {\n            even += last_digit;\n \
    \       }\n        else {\n            odd += last_digit;\n        }\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpboz5n83o: /tmp/tmpboz5n83o.cpp:24: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // write your code in C++14\n    auto\
    \ odd = 1;\n    auto even = 0;\n    while (num > 0) {\n        long temp = num\
    \ % 10;\n        even = even * 10 + temp;\n        num /= 10;\n    }\n    long\
    \ num_odd = num;\n    while (num_odd > 0) {\n        long temp = num_odd % 10;\n\
    \        num_odd /= 10;\n        odd = odd + temp;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmprzca9wx2: /tmp/tmprzca9wx2.cpp:26: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while (num\
    \ != 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpjtl2w93_: /tmp/tmpjtl2w93_.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116341
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int count = 0;\n    int temp = num;\n\
    \    while (temp != 0) {\n        int temp = temp / 10;\n        count++;\n  \
    \  }\n    return std::make_tuple(count, count % 2);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long count = (num >= 0) ? 0 : 1;\n   \
    \ long even = num % 10;\n    long odd = num / 10;\n    while (even % 2 == 0 &&\
    \ odd % 2 == 0) {\n        even++;\n        odd++;\n    }\n    return std::make_tuple(count,\
    \ even);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp0jj81yy6: /tmp/tmp0jj81yy6.cpp:19: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116340
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // Your code here\n    long cnt = 0;\n\
    \    long odd = 0, even = 0;\n    long remainder = num % 10;\n    if (remainder\
    \ < 10) {\n        odd = 1 + remainder;\n    } else {\n        even = 1 + remainder;\n\
    \    }\n    while (num > 0) {\n        remainder = num % 10;\n        if (remainder\
    \ < 10) {\n            odd = (even > odd) ? even : odd;\n            even = (even\
    \ > odd) ? even : odd;\n            odd = (even > odd) ? even : odd;\n       \
    \     even = (even > odd) ? even : odd;\n            odd = (even > odd) ? even\
    \ : odd;\n            even = (even > odd) ? even : odd;\n            odd = (even\
    \ > odd) ? even : odd;\n            even = (even > odd) ? even : odd;\n      \
    \      odd = (even > odd) ? even : odd;\n            even = (even > odd) ? even\
    \ : odd;\n            odd = (even > odd) ? even : odd;\n            even = (even\
    \ > odd) ? even : odd;\n            odd = (even > odd) ? even : odd;\n       \
    \     even = (even > odd) ? even : odd;\n            odd = (even > odd) ? even\
    \ : odd;\n            even = (even > odd) ? even : odd;\n            odd = (even\
    \ > odd) ? even : odd;\n            even = (even > odd) ? even : odd;\n      \
    \      odd = (even > odd) ? even : odd;\n            even = (even > odd) ? even\
    \ : odd;\n            odd = (even > odd) ? even : odd;\n            even = (even\
    \ > odd) ? even : odd;\n            odd = (even > odd) ? even : odd;\n       \
    \     even = (even > odd) ? even : odd;\n            odd = (even > odd) ? even\
    \ : odd;\n            even = (even > odd) ? even : odd;\n            odd = (even\
    \ > odd) ? even : odd;\n            even = (even > odd) ? even : odd;\n      \
    \      odd = (even > odd) ? even : odd;\n            even = (even > odd) ? even\
    \ : odd;\n            odd = (even > odd) ? even : odd;\n            even = (even\
    \ > odd) ? even : odd;\n            odd = (even > odd) ? even : odd;\n       \
    \     even = (even > odd) ? even : odd;\n            odd = (even > odd) ? even\
    \ : odd;\n            even\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6a_rc919.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmp6a_rc919.cpp:55:17: error: expected\
    \ \u2018;\u2019 before \u2018}\u2019 token\n   55 |             even\n      |\
    \                 ^\n      |                 ;\n   56 | }\n      | ~         \
    \       \n/tmp/tmp6a_rc919.cpp:57:12: error: a function-definition is not allowed\
    \ here before \u2018{\u2019 token\n   57 | int main() {\n      |            ^\n\
    /tmp/tmp6a_rc919.cpp:67:1: error: expected \u2018}\u2019 at end of input\n   67\
    \ | }\n      | ^\n/tmp/tmp6a_rc919.cpp:17:21: note: to match this \u2018{\u2019\
    \n   17 |     while (num > 0) {\n      |                     ^\n/tmp/tmp6a_rc919.cpp:67:1:\
    \ error: expected \u2018}\u2019 at end of input\n   67 | }\n      | ^\n/tmp/tmp6a_rc919.cpp:7:49:\
    \ note: to match this \u2018{\u2019\n    7 | std::tuple<long, long> even_odd_count(long\
    \ num) {\n      |                                                 ^\n/tmp/tmp6a_rc919.cpp:67:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   67 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    long d =\
    \ num;\n    int x = 0;\n    while (d != 0) {\n        x = x % 10;\n        even\
    \ = even + x;\n        d = d / 10;\n    }\n    d = num;\n    x = 0;\n    while\
    \ (d != 0) {\n        x = x % 10;\n        odd = odd + x;\n        d = d / 10;\n\
    \    }\n    // Now we have two variables in which we keep track of number of even\
    \ and odd digits.\n    return std::make_tuple(even, odd);\n}\nint main() {\n \
    \   auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp0ls21kpw: /tmp/tmp0ls21kpw.cpp:28: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> even = std::make_tuple(0,\
    \ 0);\n  std::tuple<long, long> odd = std::make_tuple(0, 0);\n  while (num) {\n\
    \    int remainder = (num % 10);\n    even = std::tuple_cat(even, std::make_tuple(remainder\
    \ % 2, 0));\n    odd = std::tuple_cat(odd, std::make_tuple(remainder % 2, 1));\n\
    \    num /= 10;\n  }\n  return even;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl3s_fw9y.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpl3s_fw9y.cpp:12:66: error: no match\
    \ for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int, long\
    \ int>\u2019 and \u2018std::__tuple_cat_result<std::tuple<long int, long int>&,\
    \ std::tuple<int, int> >::__type\u2019 {aka \u2018std::tuple<long int, long int,\
    \ int, int>\u2019})\n   12 |     even = std::tuple_cat(even, std::make_tuple(remainder\
    \ % 2, 0));\n      |                                                         \
    \         ^\nIn file included from /usr/include/c++/9/functional:54,\n       \
    \          from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n          \
    \       from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpl3s_fw9y.cpp:2:\n/usr/include/c++/9/tuple:1205:7:\
    \ note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename\
    \ std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1,\
    \ _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int; _T2 =\
    \ long int; typename std::conditional<__assignable<const _T1&, const _T2&>(),\
    \ const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const\
    \ std::tuple<long int, long int>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const\
    \ _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/usr/include/c++/9/tuple:1207:45:\
    \ note:   no known conversion for argument 1 from \u2018std::__tuple_cat_result<std::tuple<long\
    \ int, long int>&, std::tuple<int, int> >::__type\u2019 {aka \u2018std::tuple<long\
    \ int, long int, int, int>\u2019} to \u2018std::conditional<true, const std::tuple<long\
    \ int, long int>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const\
    \ std::tuple<long int, long int>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const\
    \ _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \ 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~              \
    \         \n 1207 |   "
  stdout: ''
  timestamp: 1660116340
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while ((num\
    \ *= 10) > 0) {\n        if ((num % 10) % 2 == 0) even++;\n        else odd++;\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpz1umg6lv: /tmp/tmpz1umg6lv.cpp:17: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long sum = 0, count = 0;\n    while (num)\
    \ {\n        sum += num % 10;\n        num = (num - sum) / 10;\n        count++;\n\
    \    }\n    return std::make_tuple(sum, count);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp15t5mr9s: /tmp/tmp15t5mr9s.cpp:18: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116341
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long counter = 0;\n  long odd_digit = 0;\n\
    \  long even_digit = 0;\n  int ndigits = num < 0 ? -num : num;\n  if (ndigits\
    \ < 0) {\n    ndigits = -ndigits;\n  }\n\n  for (int i = 0; i < ndigits; i +=\
    \ 2) {\n    even_digit = num / 10;\n    num = num - (even_digit * 10);\n    counter++;\n\
    \  }\n  while (num) {\n    odd_digit = num / 10;\n    num = num - (odd_digit *\
    \ 10);\n    counter++;\n  }\n\n  return std::make_tuple(counter, odd_digit);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long number_of_even = 0;\n    long number_of_odd\
    \ = 0;\n\n    // count the number of even and odd digits\n    while (num) {\n\
    \        if (num % 2 == 0) {\n            number_of_even += 1;\n        } else\
    \ {\n            number_of_odd += 1;\n        }\n        num/= 10;\n    }\n  \
    \  return std::make_tuple(number_of_even, number_of_odd);\n}\nint main() {\n \
    \   auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp008pwxfs: /tmp/tmp008pwxfs.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd_digits = 0;\n    long even_digits\
    \ = 0;\n    long temp = num;\n    while (temp != 0) {\n        long last_digit\
    \ = temp % 10;\n        temp = temp / 10;\n        even_digits++;\n        if\
    \ (last_digit % 2 == 0) {\n            even_digits++;\n        }\n    }\n    temp\
    \ = num;\n    while (temp != 0) {\n        long last_digit = temp % 10;\n    \
    \    temp = temp / 10;\n        odd_digits++;\n        if (last_digit % 2 != 0)\
    \ {\n            odd_digits++;\n        }\n    }\n    return std::make_tuple(even_digits,\
    \ odd_digits);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp7j9ayvs8: /tmp/tmp7j9ayvs8.cpp:32: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = num/10;\n    long odd = num\
    \ - (even*10);\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpp_uq4rw2: /tmp/tmpp_uq4rw2.cpp:14: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even, odd = 0, temp = 0;\n    temp\
    \ = num;\n    while (temp) {\n        temp = temp / 10;\n        if (temp % 2\
    \ == 0) {\n            even++;\n        } else {\n            odd++;\n       \
    \ }\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6qumnw4p: /tmp/tmp6qumnw4p.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long num_even = 0;\n    long num_odd =\
    \ 0;\n    while ((num != 0) && (num % 2 != 0)) {\n        num_even++;\n      \
    \  num /= 2;\n    }\n    while ((num != 0) && (num % 2 == 0)) {\n        num_odd++;\n\
    \        num /= 2;\n    }\n    return std::make_tuple(num_even, num_odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkq27oagb: /tmp/tmpkq27oagb.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 1;\n    while(num\
    \ > 0) {\n        long last_digit = num % 10;\n        num = num / 10;\n     \
    \   long temp_even = last_digit % 2;\n        long temp_odd = last_digit % 2 -\
    \ 1;\n        even = even + temp_even;\n        odd = odd + temp_odd;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp8j06uqnn: /tmp/tmp8j06uqnn.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::stack<int> even;\n  std::stack<int>\
    \ odd;\n  long count = 0;\n\n  while (num) {\n    int digit = num % 10;\n    num\
    \ /= 10;\n    if (digit % 2 == 0 && digit) {\n      even.push(digit);\n    } else\
    \ {\n      odd.push(digit);\n    }\n  }\n\n  while (!even.empty()) {\n    count++;\n\
    \    even.pop();\n  }\n\n  while (!odd.empty()) {\n    count++;\n    odd.pop();\n\
    \  }\n\n  return std::make_tuple(count, count % 2 == 0 ? 1 : 0);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp8my6k38w: /tmp/tmp8my6k38w.cpp:36: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116342
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long count1{0}, count2{0};\n  while ((num\
    \ >= 0) && (num != 0)) {\n    long curr = (num % 10);\n    if (curr % 2 == 0)\
    \ {\n      count1++;\n    } else {\n      count2++;\n    }\n    num = num / 10;\n\
    \  }\n  return std::make_tuple(count1, count2);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpr3psthzt: /tmp/tmpr3psthzt.cpp:23: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116342
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even, odd, temp;\n    // if number\
    \ is negative, make it positive.\n    if(num < 0) {\n        temp = num + 4294967296;\n\
    \    } else {\n        temp = num;\n    }\n    \n    // store digits in temp array\n\
    \    long digits[10] = { 0 };\n    \n    // Store the digits in digits array\n\
    \    while(temp != 0) {\n        digits[temp % 10]++;\n        temp /= 10;\n \
    \   }\n    \n    // find the even digit\n    for(long i = 0; i < 10; i++) {\n\
    \        if(digits[i] != 0) {\n            even = i;\n            break;\n   \
    \     }\n    }\n    \n    // find the odd digit\n    for(long i = 10; i < 20;\
    \ i++) {\n        if(digits[i] != 0) {\n            odd = i - 10;\n          \
    \  break;\n        }\n    }\n    \n    return std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp80fwzzt1: /tmp/tmp80fwzzt1.cpp:45: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116342
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 1;\n    long odd = 1;\n  \
    \  long div = 2;\n    while (div <= num / div) {\n        if (num % div == 0)\
    \ {\n            even++;\n        }\n        else {\n            odd++;\n    \
    \    }\n        div *= 10;\n    }\n    return std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1huncqgc: /tmp/tmp1huncqgc.cpp:24: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116342
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int sum = 0, count = 0;\n    while (num\
    \ > 0) {\n        int digit = num % 10;\n        if (digit % 2 == 0) {\n     \
    \       sum += digit;\n            count++;\n        }\n        num = num / 10;\n\
    \    }\n    return std::make_tuple(count, sum);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpmc725is9: /tmp/tmpmc725is9.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116342
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while (num\
    \ > 0) {\n        if (num % 2 == 0) {\n            even++;\n            num /=\
    \ 2;\n        } else {\n            odd++;\n            num /= 2;\n        }\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpa0cjqng8: /tmp/tmpa0cjqng8.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116342
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num > 0);\n    long digits[10];\n\
    \    long even = 0;\n    long odd = 0;\n    long length = 0;\n    long digit =\
    \ 0;\n    long count = 0;\n    while (num > 0) {\n        digit = num % 10;\n\
    \        digits[length] = digit;\n        num /= 10;\n        length++;\n    }\n\
    \    for(long i = length; i > 0; i--) {\n        if(digits[i] != 0) {\n      \
    \      if(digits[i] > digit) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmperqo80gv: /tmp/tmperqo80gv.cpp:34: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116342
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long evenDigit = 0, oddDigit = 0;\n\n\
    \    for (; num > 0; num -= 10) {\n        if (num % 2 != 0) {\n            evenDigit\
    \ += 1;\n        } else {\n            oddDigit += 1;\n        }\n    }\n\n  \
    \  return std::make_tuple(evenDigit, oddDigit);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxmmcn49i: /tmp/tmpxmmcn49i.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    if(num == 0){\n        return std::make_tuple(1,\
    \ 1);\n    }\n    if(num < 0){\n        throw std::runtime_error(\"Input is negative\
    \ number\");\n    }\n    long even = 0, odd = 0;\n    while(num){\n        int\
    \ digit = num % 10;\n        if(digit % 2 == 0){\n            even += 1;\n   \
    \     } else {\n            odd += 1;\n        }\n        num /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::runtime_error'\n \
    \ what():  Input is negative number\n"
  stdout: ''
  timestamp: 1660116342
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    long sum\
    \ = 1;\n    while (num > 0) {\n        long rem = num % 10;\n        num = (num\
    \ - rem) / 10;\n        sum += rem;\n        if (rem % 2 == 0) even++;\n     \
    \   else odd++;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpq5ifwvb9: /tmp/tmpq5ifwvb9.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0;\n    long odd = 0;\n  \
    \  while (num > 0) {\n        // find even digit.\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        // find odd digit.\n        if (num %\
    \ 2 != 0) {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp3o3cqzfq: /tmp/tmp3o3cqzfq.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    if (num == 0)\n        return std::tuple<long,\
    \ long>(0,0);\n    long n = num, sum = 0, max_even_count = 1;\n    while (n) {\n\
    \        sum += n % 10;\n        n /= 10;\n    }\n    max_even_count = (sum +\
    \ max_even_count) % 2;\n    sum = 0;\n    while (num) {\n        sum += num %\
    \ 10;\n        num /= 10;\n    }\n    return std::tuple<long, long>(max_even_count,\
    \ sum);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmprs1sjazi: /tmp/tmprs1sjazi.cpp:25: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int count = 0;\n    long odd = 0;\n  \
    \  long even = 0;\n    while (num != 0) {\n        if (num % 2 == 0) {\n     \
    \       even++;\n            count++;\n        }\n        else {\n           \
    \ odd++;\n            count++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp7bvw6xiy: /tmp/tmp7bvw6xiy.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even_count = 0;\n    long odd_count\
    \ = 0;\n    \n    // Iterate through the integer digits and add up the even and\
    \ odd digits.\n    for(; num != 0; num = num / 10) {\n        if(num % 2 == 0)\
    \ {\n            even_count++;\n        } else {\n            odd_count++;\n \
    \       }\n    }\n    \n    // Return a tuple that has the number of even and\
    \ odd digits.\n    return std::make_tuple(even_count, odd_count);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmplzg53ojo: /tmp/tmplzg53ojo.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0;\n    long odd = 0;\n\n\
    \    while (num > 0) {\n        if (num % 2 == 0)\n            even++;\n     \
    \   else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp6uncexzc: /tmp/tmp6uncexzc.cpp:23: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num > 0);\n    long even = 0;\n\
    \    long odd = 0;\n    while (num) {\n        if (num % 2 == 0)\n           \
    \ even += 2;\n        else\n            odd += 2;\n        num /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpy7hy9nzo: /tmp/tmpy7hy9nzo.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116342
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long num_arr[10] = {0};\n  long count =\
    \ 0;\n  int i = 0;\n  while (num) {\n    num_arr[i++] = num % 10;\n    num /=\
    \ 10;\n  }\n\n  for (int j = i - 1; j >= 0; j--) {\n    count += (j % 2 == 0)\
    \ ? 1 : 0;\n  }\n  return std::make_tuple(count, num_arr[i - 1])\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6en9fkry.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmp6en9fkry.cpp:19:48: error: expected\
    \ \u2018;\u2019 before \u2018}\u2019 token\n   19 |   return std::make_tuple(count,\
    \ num_arr[i - 1])\n      |                                                ^\n\
    \      |                                                ;\n   20 | }\n      |\
    \ ~                                               \n"
  stdout: ''
  timestamp: 1660116342
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num > 0);\n    auto ret1 = 0, ret2\
    \ = 0;\n    long remain = num;\n    while (!(remain % 2))\n    {\n        ret1++;\n\
    \        remain /= 2;\n    }\n    while (!(remain % 3))\n    {\n        ret2++;\n\
    \        remain /= 3;\n    }\n    return std::make_tuple(ret1, ret2);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmplox0en_0: /tmp/tmplox0en_0.cpp:25: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0, odd = 0;\n  while (num) {\n\
    \    long tmp = num % 10;\n    if (tmp % 2 == 0) {\n      even++;\n    }\n   \
    \ else {\n      odd++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpd8p05hjd: /tmp/tmpd8p05hjd.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // code here\n    // auto [even, odd]\
    \ = even_odd_count(num);\n    // return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpy923pwet: /tmp/tmpy923pwet.cpp:14: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num != 0);\n    long even = 0,\
    \ odd = 0;\n    while (num > 0) {\n        long d = num % 10;\n        num /=\
    \ 10;\n        if (d % 2 == 0) {\n            even++;\n        } else {\n    \
    \        odd++;\n        }\n    }\n    return std::make_tuple(even, odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp7thz299m: /tmp/tmp7thz299m.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // Your code goes here\n    return std::make_tuple(0,\
    \ 0);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp02650byz: /tmp/tmp02650byz.cpp:13: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 1, digit = num;\n\
    \    long temp = num;\n    while (temp > 0) {\n        if (temp % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        temp /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp4o_b11l2: /tmp/tmp4o_b11l2.cpp:23: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    auto l = num % 10;\n    num /= 10;\n \
    \   auto n = num % 10;\n    num /= 10;\n    auto m = num % 10;\n    num /= 10;\n\
    \    auto o = num % 10;\n    num /= 10;\n    return std::make_tuple(l, n, m, o);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo8c49tpj.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpo8c49tpj.cpp:16:27: error: could not\
    \ convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&,\
    \ long int&, long int&, long int&}](n, m, o)\u2019 from \u2018tuple<long int,\
    \ long int, long int, long int>\u2019 to \u2018tuple<long int, long int>\u2019\
    \n   16 |     return std::make_tuple(l, n, m, o);\n      |            ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n\
    \      |                           |\n      |                           tuple<long\
    \ int, long int, long int, long int>\n"
  stdout: ''
  timestamp: 1660116342
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long long count[11] = {0,0,0,0,0,0,0,0,0,0};\n\
    \    int i = 0;\n    while(num != 0) {\n        count[num%10] +=1;\n        num\
    \ /= 10;\n    }\n    long long sum = 0;\n    for(i = 0; i < 11; ++i) {\n     \
    \   if(count[i] % 2 == 1) sum += i;\n    }\n    return std::make_tuple(sum, sum\
    \ - 11);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmphv4axto5: /tmp/tmphv4axto5.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  // write your code here\n  long even = num\
    \ / 100000000000LL;\n  long odd = (num - (even * 100000000000LL)) / 100000LL;\n\
    \  return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp2vjtcq2r: /tmp/tmp2vjtcq2r.cpp:15: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int n = abs(num);\n    long even_count\
    \ = 0;\n    long odd_count = 0;\n    if (n < 10) return std::make_tuple(1, 1);\n\
    \    if (n < 100) {\n        long a = n;\n        while (a != 0) {\n         \
    \   if (a % 2 == 0) even_count++;\n            else odd_count++;\n           \
    \ a = a / 2;\n        }\n        return std::make_tuple(even_count, odd_count);\n\
    \    } else if (n < 1000) {\n        long a = n / 100;\n        long b = n / 10;\n\
    \        while (b != 0) {\n            even_count += (b % 2 == 0);\n         \
    \   odd_count += (b / 2 != 0);\n            b = b / 10;\n        }\n        return\
    \ std::make_tuple(even_count, odd_count);\n    }\n    long a = n / 1000;\n   \
    \ long b = n / 10000;\n    while (b != 0) {\n        even_count += (b % 2 == 0);\n\
    \        odd_count += (b / 2 != 0);\n        b = b / 10000;\n    }\n    return\
    \ std::make_tuple(even_count, odd_count);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp7xf8jnz_: /tmp/tmp7xf8jnz_.cpp:41: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int digit = num % 10;\n    // even\n \
    \   int even = 0;\n    while (digit % 2 == 0 && digit != 0) {\n        digit =\
    \ num / 10;\n        even++;\n    }\n    // odd\n    int odd = 0;\n    while (digit\
    \ % 2 != 0 && digit != 0) {\n        digit = num / 10;\n        odd++;\n    }\n\
    \    // return tuple\n    return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116348
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even, odd;\n    long temp = 0;\n\
    \    long n = 1;\n    // If the number is odd, then we add 1 to the even.\n  \
    \  // If the number is even, then we add 2 to the even.\n    // But we stop doing\
    \ this when we are at 12.\n    while (num > (12)) {\n        temp = num % 10;\n\
    \        even = even + temp * n;\n        temp = num / 10;\n        odd = odd\
    \ + temp * n;\n        n = n + 1;\n        num = num / 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp1vng7p9z: /tmp/tmp1vng7p9z.cpp:26: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even=0, odd=0;\n    long long ans=0;\n\
    \    while(num != 0) {\n        if (num % 2 == 0)\n            even++;\n     \
    \   else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp8cdl42wa: /tmp/tmp8cdl42wa.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long count = 0, even = 0, odd = 0;\n\n\
    \    while (num) {\n        if (num % 2 == 0) {\n            even++;\n       \
    \ } else {\n            odd++;\n        }\n        num = num / 2;\n    }\n\n \
    \   return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp8o7gak3i: /tmp/tmp8o7gak3i.cpp:23: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116344
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0;\n    long odd = 0;\n  \
    \  while (num != 0) {\n        long digit = num % 10;\n        num -= digit;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116348
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    int count\
    \ = 0;\n    while (num != 0) {\n        long last_digit = num % 10;\n        num\
    \ /= 10;\n        if (last_digit % 2 == 0) {\n            even++;\n          \
    \  count++;\n        } else {\n            odd++;\n            count++;\n    \
    \    }\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp8e10h4v8: /tmp/tmp8e10h4v8.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    //count the even digits\n    std::unordered_map<char,\
    \ long> digit_counts;\n    long n_even = 0;\n    long n_odd = 0;\n    char n_digit\
    \ = 0;\n    for (int i = 9; i >= 0; i--) {\n        digit_counts[num % 10] +=\
    \ 1;\n        num /= 10;\n    }\n    for (auto it : digit_counts) {\n        if\
    \ (it.second == 2) {\n            n_even += it.second;\n        }\n        if\
    \ (it.second == 1) {\n            n_odd += it.second;\n        }\n    }\n    std::tuple<long,\
    \ long> n_even_odd = std::make_tuple(n_even, n_odd);\n    return n_even_odd;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpdxpdlkuc: /tmp/tmpdxpdlkuc.cpp:31: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long count = 2;\n    long max_digit =\
    \ 0;\n    long min_digit = 1;\n    long odd = 0;\n    long even = 1;\n    while\
    \ (num > 0) {\n        long digit = num % 10;\n        max_digit = digit;\n  \
    \      min_digit = min_digit * 10;\n        if (digit % 2 == 0 && digit <= max_digit)\
    \ {\n            even++;\n        }\n        if (digit % 2 != 0 && digit >= max_digit)\
    \ {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxhz1pvys: /tmp/tmpxhz1pvys.cpp:29: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 1;\n    while (num)\
    \ {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n    \
    \        odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpb2qxlsnp: /tmp/tmpb2qxlsnp.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    std::tuple<long, long> ret;\n    if (num\
    \ < 0) {\n        ret.second = std::make_tuple(std::numeric_limits<long>::min(),\
    \ std::numeric_limits<long>::min());\n        return ret;\n    }\n    if (num\
    \ % 2 == 0) {\n        ret.first++;\n    }\n    if (num % 2 != 0) {\n        ret.second++;\n\
    \    }\n    return ret;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk_zp5w6l.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpk_zp5w6l.cpp:10:13: error: \u2018class\
    \ std::tuple<long int, long int>\u2019 has no member named \u2018second\u2019\n\
    \   10 |         ret.second = std::make_tuple(std::numeric_limits<long>::min(),\
    \ std::numeric_limits<long>::min());\n      |             ^~~~~~\n/tmp/tmpk_zp5w6l.cpp:14:13:\
    \ error: \u2018class std::tuple<long int, long int>\u2019 has no member named\
    \ \u2018first\u2019\n   14 |         ret.first++;\n      |             ^~~~~\n\
    /tmp/tmpk_zp5w6l.cpp:17:13: error: \u2018class std::tuple<long int, long int>\u2019\
    \ has no member named \u2018second\u2019\n   17 |         ret.second++;\n    \
    \  |             ^~~~~~\n"
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long count = 0;\n    while (num) {\n \
    \       int digit = num % 10;\n        if (digit % 2 == 0) {\n            count++;\n\
    \        } else {\n            count--;\n        }\n        num /= 10;\n    }\n\
    \    return std::make_tuple(count, count + 1);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpkyem8a2s: /tmp/tmpkyem8a2s.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0;\n    long odd = 0;\n  \
    \  while (num) {\n        if (num % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpqyundvqu: /tmp/tmpqyundvqu.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116344
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long num_str = to_string(num);\n    std::vector<char>\
    \ even_digits(num_str.length(), 0);\n    std::vector<char> odd_digits(num_str.length(),\
    \ 0);\n    for (size_t i = 0; i < num_str.length(); i++) {\n        char c = num_str[i];\n\
    \        if (c == '-') {\n            even_digits[i] = -1;\n            odd_digits[i]\
    \ = -1;\n        } else {\n            if (c % 2 == 0) {\n                even_digits[i]\
    \ = c;\n            } else {\n                odd_digits[i] = c;\n           \
    \ }\n        }\n    }\n    return std::make_tuple(even_digits.size(), odd_digits.size());\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7a4ce272.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmp7a4ce272.cpp:8:20: error: \u2018to_string\u2019\
    \ was not declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019\
    ?\n    8 |     long num_str = to_string(num);\n      |                    ^~~~~~~~~\n\
    \      |                    std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7a4ce272.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n/tmp/tmp7a4ce272.cpp:9:43: error: request\
    \ for member \u2018length\u2019 in \u2018num_str\u2019, which is of non-class\
    \ type \u2018long int\u2019\n    9 |     std::vector<char> even_digits(num_str.length(),\
    \ 0);\n      |                                           ^~~~~~\n/tmp/tmp7a4ce272.cpp:10:42:\
    \ error: request for member \u2018length\u2019 in \u2018num_str\u2019, which is\
    \ of non-class type \u2018long int\u2019\n   10 |     std::vector<char> odd_digits(num_str.length(),\
    \ 0);\n      |                                          ^~~~~~\n/tmp/tmp7a4ce272.cpp:11:36:\
    \ error: request for member \u2018length\u2019 in \u2018num_str\u2019, which is\
    \ of non-class type \u2018long int\u2019\n   11 |     for (size_t i = 0; i < num_str.length();\
    \ i++) {\n      |                                    ^~~~~~\n/tmp/tmp7a4ce272.cpp:12:27:\
    \ error: invalid types \u2018long int[size_t {aka long unsigned int}]\u2019 for\
    \ array subscript\n   12 |         char c = num_str[i];\n      |             \
    \              ^\n"
  stdout: ''
  timestamp: 1660116344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // write your code\n    long long count\
    \ = 0;\n    while (num > 0) {\n        num = num / 10;\n        ++count;\n   \
    \ }\n    return std::make_tuple(count, count % 2);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpv8prjxk5: /tmp/tmpv8prjxk5.cpp:18: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116344
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // Write your code here.\n    long even=0,\
    \ odd=0;\n    long long remainder=num;\n    while (remainder>0){\n        remainder=remainder%10;\n\
    \        if(remainder%2==0)\n            even++;\n        else\n            odd++;\n\
    \    }\n    return std::make_tuple(even,odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116349
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd_cnt = 0;\n    long even_cnt =\
    \ 0;\n    long temp = num;\n    while (temp != 0) {\n        odd_cnt += temp %\
    \ 10 == 0 ? 1 : 0; //if the remainder of temp / 10 is zero then it is a even digit\n\
    \        even_cnt += temp % 10 == 0 ? 0 : 1;\n        temp /= 10;\n    }\n   \
    \ return std::make_tuple(even_cnt, odd_cnt);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmphd1st6r3: /tmp/tmphd1st6r3.cpp:20: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116344
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // code here\n    // std::tuple<long,\
    \ long> t = even_odd_count(num);\n    return t;\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe0tl0sek.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpe0tl0sek.cpp:10:12: error: \u2018t\u2019\
    \ was not declared in this scope; did you mean \u2018tm\u2019?\n   10 |     return\
    \ t;\n      |            ^\n      |            tm\n"
  stdout: ''
  timestamp: 1660116344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0;\n    long odd = 0;\n  \
    \  long limit = num;\n    while (limit) {\n        long current = limit % 10;\n\
    \        if (current % 2 == 0) {\n            even += 1;\n            limit /=\
    \ 10;\n        }\n        else {\n            odd += 1;\n            limit /=\
    \ 10;\n        }\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpfa3jgxbe: /tmp/tmpfa3jgxbe.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  while\
    \ (num > 0) {\n    int digit = num % 10;\n    even += digit == 0 ? 1 : 0;\n  \
    \  odd += digit != 0 ? 1 : 0;\n    num /= 10;\n  }\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmps7xm648x: /tmp/tmps7xm648x.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116345
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd = 0, even = 0;\n    while (num)\
    \ {\n        long temp = num % 10;\n        even = (even * 10) + temp;\n     \
    \   num = (num / 10) - temp;\n    }\n    // If odd is greater than 0, then we\
    \ have an odd digit.\n    if (odd > 0) {\n        odd = 1;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116350
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0, i;\n    for (i\
    \ = 0; i < num; i++) {\n        if (num % 2 == 0) {\n            even++;\n   \
    \     } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq7j7oevw: /tmp/tmpq7j7oevw.cpp:20: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // code here\n    int even_count = 0;\n\
    \    int odd_count = 0;\n    if (num <= 0) {\n        std::tuple<long, long> ans\
    \ = std::make_tuple(0, 0);\n        return ans;\n    }\n    while (num > 0) {\n\
    \        long temp = num % 10;\n        num = (num - temp) / 10;\n        if (temp\
    \ % 2 == 0) {\n            even_count++;\n        }\n        else {\n        \
    \    odd_count++;\n        }\n    }\n    std::tuple<long, long> ans = std::make_tuple(even_count,\
    \ odd_count);\n    return ans;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp56mm4n0_: /tmp/tmp56mm4n0_.cpp:31: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int odd_count = 0;\n    int even_count\
    \ = 0;\n    while (num > 0) {\n        int remain = num % 10;\n        if (remain\
    \ % 2 == 0) {\n            even_count++;\n        }\n        else {\n        \
    \    odd_count++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(odd_count,\
    \ even_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzpdd44y8: /tmp/tmpzpdd44y8.cpp:24: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116345
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num > 0);\n    std::stack<long>\
    \ digits;\n    long curr_digit;\n\n    digits.push(num);\n    while ( !digits.empty()\
    \ ) {\n        curr_digit = digits.top();\n        digits.pop();\n        long\
    \ digit;\n        // If it is even digit.\n        if ( curr_digit % 2 == 0 )\
    \ {\n            digit = curr_digit / 2;\n        }\n        // If it is odd digit.\n\
    \        else {\n            digit = curr_digit / 2 + 1;\n        }\n        //\
    \ Push it to stack.\n        digits.push(digit);\n    }\n\n    // Return tuple\
    \ of the form (even, odd).\n    return std::make_tuple(digits.size(), digits.size()\
    \ % 2);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116350
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int even = 0;\n    int odd = 0;\n    int\
    \ i = 0;\n    while (num != 0) {\n        i += 1;\n        num = num / 10;\n \
    \   }\n\n    for (i;i <= i-1;i++) {\n        if (num % 2 == 0) {\n           \
    \ even += 1;\n        } else {\n            odd += 1;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpt7h2wn_e: /tmp/tmpt7h2wn_e.cpp:27: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  int countEven = 0, countOdd = 0;\n  long\
    \ temp = num;\n  while (temp != 0) {\n    temp = temp / 10;\n    countEven++;\n\
    \  }\n  while (temp != 0) {\n    temp = temp % 10;\n    countOdd++;\n  }\n  return\
    \ std::make_tuple(countEven, countOdd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpr5drkfx4: /tmp/tmpr5drkfx4.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116345
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd_count = 0;\n    long even_count\
    \ = 0;\n    long digits = num % 10;\n    while (digits > 0) {\n        digits\
    \ = digits % 10;\n        if (digits % 2 == 0) {\n            even_count++;\n\
    \        } else {\n            odd_count++;\n        }\n    }\n    return std::make_tuple(even_count,\
    \ odd_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116350
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  while\
    \ (num > 0) {\n    if (num % 2 != 0) {\n      odd++;\n    } else {\n      even++;\n\
    \    }\n    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmplgm1tmon: /tmp/tmplgm1tmon.cpp:23: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116345
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    long next_odd\
    \ = num;\n    while(next_odd > 0) {\n        odd += next_odd % 10;\n        next_odd\
    \ = next_odd / 10;\n    }\n    next_odd = num;\n    while(next_odd > 0) {\n  \
    \      even += next_odd % 10;\n        next_odd = next_odd / 10;\n    }\n    return\
    \ (even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwsosljmh.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpwsosljmh.cpp:19:17: error: could not\
    \ convert \u2018((void)0, odd)\u2019 from \u2018long int\u2019 to \u2018std::tuple<long\
    \ int, long int>\u2019\n   19 |     return (even, odd);\n      |            ~~~~~^~~~~~\n\
    \      |                 |\n      |                 long int\n"
  stdout: ''
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long temp = num % 10;\n        even += temp / 2;\n        odd +=\
    \ temp % 2;\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmposu0a7sp: /tmp/tmposu0a7sp.cpp:19: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int n = 0, odd = 0, even = 0;\n    while\
    \ (num > 0) {\n        n = num % 10;\n        num /= 10;\n        odd += n & 1;\n\
    \        even += n & 1;\n    }\n    return std::make_tuple(odd, even);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpk79dt4ze: /tmp/tmpk79dt4ze.cpp:19: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0, odd = 0;\n  while (num >\
    \ 0) {\n    // Find the least significant digit\n    while (num % 10 == 0) {\n\
    \      even++;\n      num /= 10;\n    }\n    // Find the most significant digit\n\
    \    while (num % 10 != 0) {\n      odd++;\n      num /= 10;\n    }\n  }\n  return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpgx869szh: /tmp/tmpgx869szh.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116346
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tassert(num >= 0);\n\tlong even = 0;\n\t\
    long odd = 0;\n\twhile (num > 0) {\n\t\tlong rem = num % 10;\n\t\teven = even\
    \ + (rem % 2 == 0 ? 1 : 0);\n\t\todd = odd + rem % 2;\n\t\tnum = num / 10;\n\t\
    }\n\treturn std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6984xb86: /tmp/tmp6984xb86.cpp:8: std::tuple<long int, long int> even_odd_count(long
    int): Assertion `num >= 0'' failed.

    '
  stdout: ''
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    if (num < 0) {\n        throw std::runtime_error(\"\
    num can't be negative\");\n    }\n    long even = 0, odd = 0;\n    while (num\
    \ > 0) {\n        int digit = num % 10;\n        num = num / 10;\n        if (digit\
    \ % 2 == 0) {\n            even += digit;\n        } else {\n            odd +=\
    \ digit;\n        }\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpbtsyo16k: /tmp/tmpbtsyo16k.cpp:25: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    // Complete this function\n    return\
    \ std::make_tuple(num, num);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzs05uzsh: /tmp/tmpzs05uzsh.cpp:13: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116346
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int rem = num % 10;\n    int odd = num\
    \ / 10 % 10;\n    int even = num / 100;\n    return std::make_tuple(rem, odd,\
    \ even);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2sg8kygo.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmp2sg8kygo.cpp:11:27: error: could not\
    \ convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {int&, int&,\
    \ int&}](odd, even)\u2019 from \u2018tuple<int, int, int>\u2019 to \u2018tuple<long\
    \ int, long int>\u2019\n   11 |     return std::make_tuple(rem, odd, even);\n\
    \      |            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\n      |                 \
    \          |\n      |                           tuple<int, int, int>\n"
  stdout: ''
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num > 0);\n    long even = 0, odd\
    \ = 1;\n    while (num) {\n        long curr_odd = num % 10;\n        num /= 10;\n\
    \        long curr_even = num % 10;\n        num /= 10;\n        even *= (curr_odd\
    \ != 0);\n        odd *= (curr_even != 0);\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpa8uvf3r1: /tmp/tmpa8uvf3r1.cpp:22: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116346
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    int n = num;\n    long count = 1;\n  \
    \  while (n > 0){\n        n = n/10;\n        count++;\n    }\n    return (count,\
    \ count+1);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpntr10j0y.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpntr10j0y.cpp:14:18: error: could not\
    \ convert \u2018((void)0, (count + 1))\u2019 from \u2018long int\u2019 to \u2018\
    std::tuple<long int, long int>\u2019\n   14 |     return (count, count+1);\n \
    \     |            ~~~~~~^~~~~~~~~~\n      |                  |\n      |     \
    \             long int\n"
  stdout: ''
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long digit = num % 10;\n        num /= 10;\n        if (digit % 2\
    \ == 0) {\n            even++;\n        } else {\n            odd++;\n       \
    \ }\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpw5hd4399: /tmp/tmpw5hd4399.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116334
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::bitset<sizeof(long) * 8> bits(num);\n\
    \  long cnt = 0;\n  for (int i = 0; i < 64; i++) {\n    if (bits[i]) {\n     \
    \ cnt += 1;\n    }\n  }\n  return std::make_tuple(cnt, cnt & 1);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp83m9ekkf: /tmp/tmp83m9ekkf.cpp:19: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    if (num <= 0) return {0, 0};\n    long\
    \ odd_count = 1;\n    long even_count = 0;\n    while ((num % 10) % 2 == 0) {\n\
    \        even_count++;\n        num /= 10;\n    }\n    while (num != 0) {\n  \
    \      odd_count++;\n        num /= 10;\n    }\n    return {even_count, odd_count};\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpy624g_hj: /tmp/tmpy624g_hj.cpp:23: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116346
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  std::tuple<long, long> even = 0, odd = 0;\n\
    \  long digit = num;\n  while (digit) {\n    even += digit % 2 == 0;\n    digit\
    \ /= 2;\n  }\n  digit = num;\n  while (digit) {\n    odd += digit % 2 == 1;\n\
    \    digit /= 2;\n  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq760wnbd.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpq760wnbd.cpp:8:33: error: conversion\
    \ from \u2018int\u2019 to non-scalar type \u2018std::tuple<long int, long int>\u2019\
    \ requested\n    8 |   std::tuple<long, long> even = 0, odd = 0;\n      |    \
    \                             ^\n/tmp/tmpq760wnbd.cpp:8:42: error: conversion\
    \ from \u2018int\u2019 to non-scalar type \u2018std::tuple<long int, long int>\u2019\
    \ requested\n    8 |   std::tuple<long, long> even = 0, odd = 0;\n      |    \
    \                                      ^\n/tmp/tmpq760wnbd.cpp:11:10: error: no\
    \ match for \u2018operator+=\u2019 (operand types are \u2018std::tuple<long int,\
    \ long int>\u2019 and \u2018bool\u2019)\n   11 |     even += digit % 2 == 0;\n\
    \      |     ~~~~~^~~~~~~~~~~~~~~~~\n/tmp/tmpq760wnbd.cpp:16:9: error: no match\
    \ for \u2018operator+=\u2019 (operand types are \u2018std::tuple<long int, long\
    \ int>\u2019 and \u2018bool\u2019)\n   16 |     odd += digit % 2 == 1;\n     \
    \ |     ~~~~^~~~~~~~~~~~~~~~~\n/tmp/tmpq760wnbd.cpp:19:25: error: could not convert\
    \ \u2018std::make_tuple(_Elements&& ...) [with _Elements = {std::tuple<long int,\
    \ long int>&, std::tuple<long int, long int>&}](odd)\u2019 from \u2018tuple<std::tuple<long\
    \ int, long int>, std::tuple<long int, long int>>\u2019 to \u2018tuple<long int,\
    \ long int>\u2019\n   19 |   return std::make_tuple(even, odd);\n      |     \
    \     ~~~~~~~~~~~~~~~^~~~~~~~~~~\n      |                         |\n      | \
    \                        tuple<std::tuple<long int, long int>, std::tuple<long\
    \ int, long int>>\n"
  stdout: ''
  timestamp: 1660116345
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long even = 0;\n  long odd = 0;\n  while\
    \ (num != 0) {\n    int rem = num % 10;\n    even = (even * 10) + rem;\n    num/=10;\n\
    \  }\n  while ((num % 2) == 0) {\n    odd += 1;\n    num/=2;\n  }\n  std::tie(even,\
    \ odd) = std::tuple<long, long>(even, odd);\n  return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660116351
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n  long count = 1;\n  for (int i = 0; i < num;\
    \ i++) {\n    int d = num % 10;\n    if (d % 2 == 0) {\n      count++;\n    }\
    \ else {\n      count--;\n    }\n    num /= 10;\n  }\n  std::tuple<long, long>\
    \ ans = {count, count + 1};\n  return ans;\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpa6jv3y5o: /tmp/tmpa6jv3y5o.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116346
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long even = 0, odd = 0;\n    while (num\
    \ > 0) {\n        long last_digit = num % 10;\n        num /= 10;\n        if\
    \ (last_digit % 2 == 0) {\n            even++;\n        }\n        if (last_digit\
    \ % 2 != 0) {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpueswn429: /tmp/tmpueswn429.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116346
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    std::tuple<long, long> even, odd;\n  \
    \  while (num != 0) {\n        if (num % 2 == 0) {\n            even = std::make_tuple(std::get<0>(even),\
    \ num / 2);\n        } else {\n            odd = std::make_tuple(std::get<0>(odd),\
    \ num / 2 + 1);\n        }\n        num /= 2;\n    }\n    return even;\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmptd4k2udq: /tmp/tmptd4k2udq.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116346
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    std::tuple<long, long> count_tuple;\n\
    \    long count = 1;\n    long odd_digits = 0;\n    long even_digits = 0;\n  \
    \  int abs_val = abs(num);\n    while (abs_val != 0) {\n        if (abs_val &\
    \ 1) {\n            odd_digits++;\n        }\n        abs_val /= 10;\n       \
    \ even_digits++;\n    }\n    count_tuple = std::make_tuple(even_digits, odd_digits);\n\
    \    return count_tuple;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp01ms1y6j: /tmp/tmp01ms1y6j.cpp:25: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116346
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n\tint rem = num % 10;\n\tint odd = 0;\n\t\
    int even = 0;\n\twhile (num != 0) {\n\t\tnum = num / 10;\n\t\teven++;\n\t}\n\t\
    while (num != 0) {\n\t\tnum = num / 10;\n\t\todd++;\n\t}\n\treturn std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpu179m_qn: /tmp/tmpu179m_qn.cpp:23: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116346
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    assert(num > 0);\n    long counts[2];\n\
    \    long i = 0;\n    long n = num;\n    while (n > 0) {\n        counts[i++ %\
    \ 2] = n % 2;\n        n /= 2;\n    }\n    return std::make_tuple(counts[0], counts[1]);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpv7bzy5fj: /tmp/tmpv7bzy5fj.cpp:20: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116346
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123) ==> (1, 2)\nstd::tuple<long,\
    \ long> even_odd_count(long num) {\n    long odd = 0, even = 0;\n    while (num\
    \ != 0) {\n        long last_digit = num % 10;\n        num /= 10;\n        odd\
    \ += last_digit % 2 == 1;\n        even += last_digit % 2 == 0;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpjsvmtsu9: /tmp/tmpjsvmtsu9.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116346

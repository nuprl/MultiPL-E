name: HumanEval_140_fix_spaces
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
  \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
  \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
  \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
  )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
  \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text) {\n"
tests: "}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
  Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"\
  Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) ==\
  \ (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\")) ==\
  \ (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
  ));\n}\n"
completions: ["    int i=0;\n    int count=0;\n    while(i<text.length()){\n     \
    \   if(text[i]==' '){\n            count++;\n            if(count>2){\n      \
    \          text[i]='-';\n            }\n            else{\n                text[i]='_';\n\
    \            }\n        }\n        else{\n            count=0;\n        }\n  \
    \      i++;\n    }\n    return text;", "    std::string result;\n    int count\
    \ = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] ==\
    \ ' ') {\n            count++;\n        } else {\n            if (count == 1)\
    \ {\n                result += '_';\n            } else if (count > 2) {\n   \
    \             result += '-';\n            }\n            result += text[i];\n\
    \            count = 0;\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 2) {\n        result += '-';\n    }\n    return\
    \ result;", "    std::string result;\n    int count = 0;\n    for (int i = 0;\
    \ i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            count = 0;\n        }\n        if (count == 1)\
    \ {\n            result += '_';\n        } else if (count > 2) {\n           \
    \ result += '-';\n        } else {\n            result += text[i];\n        }\n\
    \    }\n    return result;", "    int spaces = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            spaces++;\n        }\n  \
    \  }\n    if (spaces == 0) {\n        return text;\n    }\n    if (spaces == 1)\
    \ {\n        for (int i = 0; i < text.length(); i++) {\n            if (text[i]\
    \ == ' ') {\n                text[i] = '_';\n            }\n        }\n      \
    \  return text;\n    }\n    if (spaces == 2) {\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (text[i] == ' ') {\n                text[i] = '_';\n\
    \            }\n        }\n        return text;\n    }\n    if (spaces > 2) {\n\
    \        for (int i = 0; i < text.length(); i++) {\n            if (text[i] ==\
    \ ' ') {\n                text[i] = '-';\n            }\n        }\n        return\
    \ text;\n    }", "    std::string result = \"\";\n    int count = 0;\n    for\
    \ (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n     \
    \       count++;\n            if (count == 1) {\n                result += '_';\n\
    \            }\n            else if (count == 2) {\n                result +=\
    \ '_';\n            }\n            else if (count > 2) {\n                result\
    \ += '-';\n            }\n        }\n        else {\n            count = 0;\n\
    \            result += text[i];\n        }\n    }\n    return result;", "    int\
    \ count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        }\n        else {\n            count\
    \ = 0;\n        }\n        if (count > 2) {\n            text[i] = '-';\n    \
    \    }\n        else if (count == 1) {\n            text[i] = '_';\n        }\n\
    \    }\n    return text;", "    std::string result = \"\";\n    int count = 0;\n\
    \    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n\
    \            count++;\n            if (count == 1) {\n                result +=\
    \ '_';\n            }\n            else if (count == 2) {\n                result\
    \ += '_';\n            }\n            else if (count > 2) {\n                result\
    \ += '-';\n            }\n        }\n        else {\n            count = 0;\n\
    \            result += text[i];\n        }\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    int count = 0;\n    for (int i = 0; i < text.length(); i++)\
    \ {\n        if (text[i] == ' ') {\n            count++;\n            if (count\
    \ == 2) {\n                result += '-';\n            }\n        } else {\n \
    \           if (count == 1) {\n                result += '_';\n            }\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  if (count == 1) {\n        result += '_';\n    }\n    return result;", "  \
    \  int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        }\n        else {\n            count\
    \ = 0;\n        }\n        if (count == 2) {\n            text[i] = '-';\n   \
    \     }\n        else if (count > 2) {\n            text[i] = '-';\n        }\n\
    \        else {\n            text[i] = '_';\n        }\n    }\n    return text;",
  "    std::string result;\n    int count = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n        } else\
    \ {\n            if (count == 1) {\n                result += '_';\n         \
    \   } else if (count > 2) {\n                result += '-';\n            }\n \
    \           result += text[i];\n            count = 0;\n        }\n    }\n   \
    \ if (count == 1) {\n        result += '_';\n    } else if (count > 2) {\n   \
    \     result += '-';\n    }\n    return result;", "    std::string result;\n \
    \   int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if\
    \ (text[i] == ' ') {\n            count++;\n        } else {\n            if (count\
    \ == 1) {\n                result += '_';\n            } else if (count > 2) {\n\
    \                result += '-';\n            }\n            count = 0;\n     \
    \       result += text[i];\n        }\n    }\n    if (count == 1) {\n        result\
    \ += '_';\n    } else if (count > 2) {\n        result += '-';\n    }\n    return\
    \ result;", "    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n\
    \        if (text[i] == ' ') {\n            count++;\n        }\n        else\
    \ {\n            count = 0;\n        }\n        if (count > 2) {\n           \
    \ text[i] = '-';\n        }\n        else if (count == 1) {\n            text[i]\
    \ = '_';\n        }\n    }\n    return text;", "    int count = 0;\n    for (int\
    \ i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n          \
    \  count++;\n        }\n        else {\n            count = 0;\n        }\n  \
    \      if (count > 2) {\n            text[i] = '-';\n        }\n        else if\
    \ (count == 1) {\n            text[i] = '_';\n        }\n    }\n    return text;",
  "    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        }\n        else {\n            count\
    \ = 0;\n        }\n        if (count == 2) {\n            text[i] = '-';\n   \
    \     }\n        else if (count > 2) {\n            text[i] = '-';\n        }\n\
    \        else {\n            text[i] = '_';\n        }\n    }\n    return text;",
  "    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i]\
    \ == ' ') {\n            count++;\n        }\n        else {\n            count\
    \ = 0;\n        }\n        if (count == 2) {\n            text[i] = '-';\n   \
    \     }\n        else if (count > 2) {\n            text[i] = '-';\n        }\n\
    \        else {\n            text[i] = text[i];\n        }\n    }\n    for (int\
    \ i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n          \
    \  text[i] = '_';\n        }\n    }\n    return text;", "    std::string result\
    \ = \"\";\n    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n\
    \        if (text[i] == ' ') {\n            count++;\n            if (count ==\
    \ 1) {\n                result += '_';\n            }\n            else if (count\
    \ == 2) {\n                result += '_';\n            }\n            else if\
    \ (count > 2) {\n                result += '-';\n            }\n        }\n  \
    \      else {\n            count = 0;\n            result += text[i];\n      \
    \  }\n    }\n    return result;", "    // Write your code here\n    int count\
    \ = 0;\n    for(int i = 0; i < text.length(); i++){\n        if(text[i] == ' '){\n\
    \            count++;\n        }\n        else{\n            count = 0;\n    \
    \    }\n        if(count == 2){\n            text[i] = '-';\n        }\n     \
    \   else if(count > 2){\n            text[i] = '-';\n        }\n        else{\n\
    \            text[i] = text[i];\n        }\n    }\n    for(int i = 0; i < text.length();\
    \ i++){\n        if(text[i] == ' '){\n            text[i] = '_';\n        }\n\
    \    }\n    return text;", "    std::string result;\n    int count = 0;\n    for\
    \ (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n     \
    \       count++;\n        } else {\n            if (count == 1) {\n          \
    \      result += '_';\n            } else if (count > 2) {\n                result\
    \ += '-';\n            }\n            result += text[i];\n            count =\
    \ 0;\n        }\n    }\n    if (count == 1) {\n        result += '_';\n    } else\
    \ if (count > 2) {\n        result += '-';\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    int count = 0;\n    for (int i = 0; i < text.length(); i++)\
    \ {\n        if (text[i] == ' ') {\n            count++;\n            if (count\
    \ == 2) {\n                result += '-';\n            }\n        } else {\n \
    \           if (count == 1) {\n                result += '_';\n            }\n\
    \            count = 0;\n            result += text[i];\n        }\n    }\n  \
    \  if (count == 1) {\n        result += '_';\n    }\n    return result;", "  \
    \  std::string result;\n    int count = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n        } else\
    \ {\n            if (count == 1) {\n                result += '_';\n         \
    \   } else if (count > 2) {\n                result += '-';\n            }\n \
    \           result += text[i];\n            count = 0;\n        }\n    }\n   \
    \ if (count == 1) {\n        result += '_';\n    } else if (count > 2) {\n   \
    \     result += '-';\n    }\n    return result;"]
stop_tokens:
- "\n}"

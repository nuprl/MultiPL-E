name: HumanEval_92_any_int
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that takes\
  \ 3 numbers.\n// Returns true if one of the numbers is equal to the sum of the other\
  \ two, and all numbers are integers.\n// Returns false in any other cases.\n// Examples\n\
  // >>> any_int((float(5)), (float(2)), (float(7)))\n// (true)\n// >>> any_int((float(3)),\
  \ (float(2)), (float(2)))\n// (false)\n// >>> any_int((float(3)), (float(-2)), (float(1)))\n\
  // (true)\n// >>> any_int((3.6), (-2.2), (float(2)))\n// (false)\nbool any_int(float\
  \ x, float y, float z) {\n"
tests: "}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
  \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
  \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n  \
  \  assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
  \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
  \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
  \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
  \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
  \ == (false));\n}\n"
completions: ["    if (x == (y + z) || y == (x + z) || z == (x + y)) {\n        return\
    \ true;\n    }\n    return false;", "    if (x == y + z || y == x + z || z ==\
    \ x + y) {\n        return true;\n    }\n    return false;", "    if ((x == y\
    \ + z) || (y == x + z) || (z == x + y)) {\n        return true;\n    }\n    return\
    \ false;", "    if (x == y + z || y == x + z || z == x + y) {\n        return\
    \ true;\n    }\n    return false;", "    if (x == y + z || y == x + z || z ==\
    \ x + y) {\n        return true;\n    }\n    return false;", "    if (x == y +\
    \ z || y == x + z || z == x + y) {\n        return true;\n    }\n    return false;",
  "    if (x == y + z || y == x + z || z == x + y) {\n        return true;\n    }\n\
    \    return false;", "  if (x == y + z || y == x + z || z == x + y) {\n    return\
    \ true;\n  }\n  return false;", '  return (x == y + z || y == x + z || z == x
    + y) && (x == (int)x && y == (int)y && z == (int)z);', "  if (x == y + z || y\
    \ == x + z || z == x + y) {\n    return true;\n  }\n  return false;", "    if\
    \ (x == y + z || y == x + z || z == x + y) {\n        return true;\n    }\n  \
    \  return false;", "    if (x == y + z || y == x + z || z == x + y) {\n      \
    \  return true;\n    }\n    return false;", "  if (x == y + z || y == x + z ||\
    \ z == x + y) {\n    return true;\n  }\n  return false;", "  if (x == y + z ||\
    \ y == x + z || z == x + y) {\n    return true;\n  }\n  return false;", "  if\
    \ (x == y + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return\
    \ false;", "  if (x == y + z || y == x + z || z == x + y) {\n    return true;\n\
    \  }\n  return false;", "    if (x == y + z || y == x + z || z == x + y) {\n \
    \       return true;\n    }\n    return false;", "  if (x == y + z || y == x +\
    \ z || z == x + y) {\n    return true;\n  }\n  return false;", "    if (x == y\
    \ + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;", "  if (x == y + z || y == x + z || z == x + y) {\n    return true;\n\
    \  }\n  return false;", '    return (x == y + z || y == x + z || z == x + y);',
  '    return (x == y + z || y == x + z || z == x + y) && (x == int(x) && y == int(y)
    && z == int(z));', '    return (x + y == z) || (x + z == y) || (y + z == x);',
  "  if (x == y + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return\
    \ false;", "    if (x == y + z || y == x + z || z == x + y) {\n        return\
    \ true;\n    }\n    return false;", "    if (x == y + z || y == x + z || z ==\
    \ x + y) {\n        return true;\n    }\n    return false;", "    if (x == y +\
    \ z || y == x + z || z == x + y) {\n        return true;\n    }\n    return false;",
  '    return (x == y + z || y == x + z || z == x + y) && (x == int(x) && y == int(y)
    && z == int(z));', "    if (x == y + z || y == x + z || z == x + y) {\n      \
    \  return true;\n    }\n    return false;", "  if (x == y + z || y == x + z ||\
    \ z == x + y) {\n    return true;\n  }\n  return false;", "    if (x == y + z\
    \ || y == x + z || z == x + y) {\n        return true;\n    }\n    return false;",
  "  if (x == y + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return\
    \ false;", "  if (x == y + z || y == x + z || z == x + y) {\n    return true;\n\
    \  }\n  return false;", "  if (x == y + z || y == x + z || z == x + y) {\n   \
    \ return true;\n  }\n  return false;", "  if (x == y + z) {\n    return true;\n\
    \  }\n  else if (y == x + z) {\n    return true;\n  }\n  else if (z == x + y)\
    \ {\n    return true;\n  }\n  else {\n    return false;\n  }", "    if (x == y\
    \ + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;", "  if (x == y + z || y == x + z || z == x + y) {\n    return true;\n\
    \  }\n  return false;", '  return (x == y + z || y == x + z || z == x + y) &&
    (x == (int)x && y == (int)y && z == (int)z);', '    return (x == y + z || y ==
    x + z || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);', "    if\
    \ (x == y + z || y == x + z || z == x + y) {\n        return true;\n    }\n  \
    \  return false;", "    if (x == y + z || y == x + z || z == x + y) {\n      \
    \  return true;\n    }\n    return false;", '  return (x == y + z || y == x +
    z || z == x + y) && (x == (int)x && y == (int)y && z == (int)z);', "  if (x ==\
    \ y + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return false;",
  '  return (x == y + z || y == x + z || z == x + y) && (x == int(x) && y == int(y)
    && z == int(z));', "  if (x == y + z || y == x + z || z == x + y) {\n    return\
    \ true;\n  }\n  return false;", '  return (x == y + z || y == x + z || z == x
    + y) && (x == (int)x && y == (int)y && z == (int)z);', "  if (x == y + z || y\
    \ == x + z || z == x + y) {\n    return true;\n  }\n  return false;", '  return
    (x == y + z || y == x + z || z == x + y) && (x == int(x) && y == int(y) && z ==
    int(z));']
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_44_change_base
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwm5285uc.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpwm5285uc.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpwm5285uc.cpp:\
    \ In function 'int main()':\n/tmp/tmpwm5285uc.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwm5285uc.cpp:2:\n/tmp/tmpwm5285uc.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpccvp299d.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpccvp299d.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpccvp299d.cpp:\
    \ In function 'int main()':\n/tmp/tmpccvp299d.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpccvp299d.cpp:2:\n/tmp/tmpccvp299d.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result += (x % base) + '0';\n        x\
    \ /= base;\n    }\n    std::reverse(result.begin(), result.end());\n    return\
    \ result;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb4oaetov.cpp: In function 'int main()':\n/tmp/tmpb4oaetov.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpb4oaetov.cpp:2:\n/tmp/tmpb4oaetov.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    assert(base < 10);\n\
    \    std::string result = \"\";\n    while (x > 0) {\n        result = std::to_string(x\
    \ % base) + result;\n        x /= base;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiu_pur9j.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpiu_pur9j.cpp:16:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpiu_pur9j.cpp:\
    \ In function 'int main()':\n/tmp/tmpiu_pur9j.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiu_pur9j.cpp:2:\n/tmp/tmpiu_pur9j.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x > 0) {\n        s += std::to_string(x % base);\n       \
    \ x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\n\
    int main() {\n    auto candidate = change_base;\n    assert(candidate((8), (3))\
    \ == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyk759udt.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpyk759udt.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpyk759udt.cpp:\
    \ In function 'int main()':\n/tmp/tmpyk759udt.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyk759udt.cpp:2:\n/tmp/tmpyk759udt.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(ans.begin(), ans.end());\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuwt4_uwy.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpuwt4_uwy.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         ans += std::to_string(x % base);\n                ^\n/tmp/tmpuwt4_uwy.cpp:\
    \ In function 'int main()':\n/tmp/tmpuwt4_uwy.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuwt4_uwy.cpp:2:\n/tmp/tmpuwt4_uwy.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8q0n440m.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp8q0n440m.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp8q0n440m.cpp:\
    \ In function 'int main()':\n/tmp/tmp8q0n440m.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8q0n440m.cpp:2:\n/tmp/tmp8q0n440m.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  std::string res;\n\
    \  while (x > 0) {\n    res += std::to_string(x % base);\n    x /= base;\n  }\n\
    \  std::reverse(res.begin(), res.end());\n  return res;\n}\nint main() {\n   \
    \ auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n\
    \    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234), (2))\
    \ == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8),\
    \ (2)) == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxxuu7c20.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpxxuu7c20.cpp:15:12: error: 'to_string' is not a member of 'std'\n\
    \     res += std::to_string(x % base);\n            ^\n/tmp/tmpxxuu7c20.cpp: In\
    \ function 'int main()':\n/tmp/tmpxxuu7c20.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxxuu7c20.cpp:2:\n/tmp/tmpxxuu7c20.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x > 0) {\n        s = std::to_string(x % base) + s;\n    \
    \    x /= base;\n    }\n    return s;\n}\nint main() {\n    auto candidate = change_base;\n\
    \    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9), (3))\
    \ == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n    assert(candidate((16),\
    \ (2)) == (\"10000\"));\n    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7),\
    \ (2)) == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnm7ye_rg.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpnm7ye_rg.cpp:15:13: error: 'to_string' is not a member of 'std'\n\
    \         s = std::to_string(x % base) + s;\n             ^\n/tmp/tmpnm7ye_rg.cpp:\
    \ In function 'int main()':\n/tmp/tmpnm7ye_rg.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnm7ye_rg.cpp:2:\n/tmp/tmpnm7ye_rg.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  assert(base < 10);\n\
    \  std::string s;\n  while (x > 0) {\n    s.push_back(x % base + '0');\n    x\
    \ /= base;\n  }\n  std::reverse(s.begin(), s.end());\n  return s;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprnqstv4k.cpp: In function 'int main()':\n/tmp/tmprnqstv4k.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprnqstv4k.cpp:2:\n/tmp/tmprnqstv4k.cpp:24:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x > 0) {\n        s += std::to_string(x % base);\n       \
    \ x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\n\
    int main() {\n    auto candidate = change_base;\n    assert(candidate((8), (3))\
    \ == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyk759udt.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpyk759udt.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpyk759udt.cpp:\
    \ In function 'int main()':\n/tmp/tmpyk759udt.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyk759udt.cpp:2:\n/tmp/tmpyk759udt.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x > 0) {\n        s = std::to_string(x % base) + s;\n    \
    \    x /= base;\n    }\n    return s;\n}\nint main() {\n    auto candidate = change_base;\n\
    \    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9), (3))\
    \ == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n    assert(candidate((16),\
    \ (2)) == (\"10000\"));\n    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7),\
    \ (2)) == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnm7ye_rg.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpnm7ye_rg.cpp:15:13: error: 'to_string' is not a member of 'std'\n\
    \         s = std::to_string(x % base) + s;\n             ^\n/tmp/tmpnm7ye_rg.cpp:\
    \ In function 'int main()':\n/tmp/tmpnm7ye_rg.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnm7ye_rg.cpp:2:\n/tmp/tmpnm7ye_rg.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s.push_back(x % base + '0');\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprejwsckw.cpp: In function 'int main()':\n/tmp/tmprejwsckw.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprejwsckw.cpp:2:\n/tmp/tmprejwsckw.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x > 0) {\n        s = std::to_string(x % base) + s;\n    \
    \    x /= base;\n    }\n    return s;\n}\nint main() {\n    auto candidate = change_base;\n\
    \    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9), (3))\
    \ == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n    assert(candidate((16),\
    \ (2)) == (\"10000\"));\n    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7),\
    \ (2)) == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnm7ye_rg.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpnm7ye_rg.cpp:15:13: error: 'to_string' is not a member of 'std'\n\
    \         s = std::to_string(x % base) + s;\n             ^\n/tmp/tmpnm7ye_rg.cpp:\
    \ In function 'int main()':\n/tmp/tmpnm7ye_rg.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnm7ye_rg.cpp:2:\n/tmp/tmpnm7ye_rg.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x) {\n        s += (x % base) + '0';\n        x /= base;\n    }\n\
    \    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n    auto\
    \ candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n   \
    \ assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234), (2))\
    \ == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8),\
    \ (2)) == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdgkajgx2.cpp: In function 'int main()':\n/tmp/tmpdgkajgx2.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdgkajgx2.cpp:2:\n/tmp/tmpdgkajgx2.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s.push_back('0' + x % base);\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmtsvht5k.cpp: In function 'int main()':\n/tmp/tmpmtsvht5k.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmtsvht5k.cpp:2:\n/tmp/tmpmtsvht5k.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans = std::to_string(x % base) + ans;\n\
    \        x /= base;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52p2p9ux.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp52p2p9ux.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         ans = std::to_string(x % base) + ans;\n               ^\n/tmp/tmp52p2p9ux.cpp:\
    \ In function 'int main()':\n/tmp/tmp52p2p9ux.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp52p2p9ux.cpp:2:\n/tmp/tmp52p2p9ux.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res = std::to_string(x % base) + res;\n\
    \        x /= base;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4hqtfzad.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp4hqtfzad.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         res = std::to_string(x % base) + res;\n               ^\n/tmp/tmp4hqtfzad.cpp:\
    \ In function 'int main()':\n/tmp/tmp4hqtfzad.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4hqtfzad.cpp:2:\n/tmp/tmp4hqtfzad.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x > 0) {\n        s = std::to_string(x % base) + s;\n    \
    \    x /= base;\n    }\n    return s;\n}\nint main() {\n    auto candidate = change_base;\n\
    \    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9), (3))\
    \ == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n    assert(candidate((16),\
    \ (2)) == (\"10000\"));\n    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7),\
    \ (2)) == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnm7ye_rg.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpnm7ye_rg.cpp:15:13: error: 'to_string' is not a member of 'std'\n\
    \         s = std::to_string(x % base) + s;\n             ^\n/tmp/tmpnm7ye_rg.cpp:\
    \ In function 'int main()':\n/tmp/tmpnm7ye_rg.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnm7ye_rg.cpp:2:\n/tmp/tmpnm7ye_rg.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x) {\n        res += (x % base) + '0';\n        x /= base;\n    }\n\
    \    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpix74luxm.cpp: In function 'int main()':\n/tmp/tmpix74luxm.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpix74luxm.cpp:2:\n/tmp/tmpix74luxm.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans = std::to_string(x % base) + ans;\n\
    \        x /= base;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52p2p9ux.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp52p2p9ux.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         ans = std::to_string(x % base) + ans;\n               ^\n/tmp/tmp52p2p9ux.cpp:\
    \ In function 'int main()':\n/tmp/tmp52p2p9ux.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp52p2p9ux.cpp:2:\n/tmp/tmp52p2p9ux.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x != 0) {\n        result += std::to_string(x % base);\n        x\
    \ /= base;\n    }\n    std::reverse(result.begin(), result.end());\n    return\
    \ result;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp92h88shw.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp92h88shw.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp92h88shw.cpp:\
    \ In function 'int main()':\n/tmp/tmp92h88shw.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp92h88shw.cpp:2:\n/tmp/tmp92h88shw.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwm5285uc.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpwm5285uc.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpwm5285uc.cpp:\
    \ In function 'int main()':\n/tmp/tmpwm5285uc.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwm5285uc.cpp:2:\n/tmp/tmpwm5285uc.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  std::string result;\n\
    \  while (x > 0) {\n    result.push_back('0' + x % base);\n    x /= base;\n  }\n\
    \  std::reverse(result.begin(), result.end());\n  return result;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkrf178v_.cpp: In function 'int main()':\n/tmp/tmpkrf178v_.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkrf178v_.cpp:2:\n/tmp/tmpkrf178v_.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x) {\n        s += '0' + x % base;\n        x /= base;\n    }\n  \
    \  std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n    auto\
    \ candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n   \
    \ assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234), (2))\
    \ == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8),\
    \ (2)) == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7spvpyd4.cpp: In function 'int main()':\n/tmp/tmp7spvpyd4.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7spvpyd4.cpp:2:\n/tmp/tmp7spvpyd4.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans = std::to_string(x % base) + ans;\n\
    \        x /= base;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52p2p9ux.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp52p2p9ux.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         ans = std::to_string(x % base) + ans;\n               ^\n/tmp/tmp52p2p9ux.cpp:\
    \ In function 'int main()':\n/tmp/tmp52p2p9ux.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp52p2p9ux.cpp:2:\n/tmp/tmp52p2p9ux.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans = std::to_string(x % base) + ans;\n\
    \        x /= base;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52p2p9ux.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp52p2p9ux.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         ans = std::to_string(x % base) + ans;\n               ^\n/tmp/tmp52p2p9ux.cpp:\
    \ In function 'int main()':\n/tmp/tmp52p2p9ux.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp52p2p9ux.cpp:2:\n/tmp/tmp52p2p9ux.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans = std::to_string(x % base) + ans;\n\
    \        x /= base;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52p2p9ux.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp52p2p9ux.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         ans = std::to_string(x % base) + ans;\n               ^\n/tmp/tmp52p2p9ux.cpp:\
    \ In function 'int main()':\n/tmp/tmp52p2p9ux.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp52p2p9ux.cpp:2:\n/tmp/tmp52p2p9ux.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwm5285uc.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpwm5285uc.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpwm5285uc.cpp:\
    \ In function 'int main()':\n/tmp/tmpwm5285uc.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwm5285uc.cpp:2:\n/tmp/tmpwm5285uc.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ret;\n\
    \    while (x) {\n        ret.push_back(x % base + '0');\n        x /= base;\n\
    \    }\n    std::reverse(ret.begin(), ret.end());\n    return ret;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4dirz_qw.cpp: In function 'int main()':\n/tmp/tmp4dirz_qw.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4dirz_qw.cpp:2:\n/tmp/tmp4dirz_qw.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result += std::to_string(x % base);\n\
    \        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8ni81nb_.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp8ni81nb_.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp8ni81nb_.cpp:\
    \ In function 'int main()':\n/tmp/tmp8ni81nb_.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8ni81nb_.cpp:2:\n/tmp/tmp8ni81nb_.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  assert(base < 10);\n\
    \  std::string ans = \"\";\n  while (x) {\n    ans += std::to_string(x % base);\n\
    \    x /= base;\n  }\n  std::reverse(ans.begin(), ans.end());\n  return ans;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx3e4qu4y.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpx3e4qu4y.cpp:16:12: error: 'to_string' is not a member of 'std'\n\
    \     ans += std::to_string(x % base);\n            ^\n/tmp/tmpx3e4qu4y.cpp: In\
    \ function 'int main()':\n/tmp/tmpx3e4qu4y.cpp:23:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpx3e4qu4y.cpp:2:\n/tmp/tmpx3e4qu4y.cpp:24:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += (x % base) + '0';\n        x /=\
    \ base;\n    }\n    std::reverse(ans.begin(), ans.end());\n    return ans;\n}\n\
    int main() {\n    auto candidate = change_base;\n    assert(candidate((8), (3))\
    \ == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4_8ei9p9.cpp: In function 'int main()':\n/tmp/tmp4_8ei9p9.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4_8ei9p9.cpp:2:\n/tmp/tmp4_8ei9p9.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x != 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg0ay342t.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpg0ay342t.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpg0ay342t.cpp:\
    \ In function 'int main()':\n/tmp/tmpg0ay342t.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg0ay342t.cpp:2:\n/tmp/tmpg0ay342t.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  std::string result;\n\
    \  while (x > 0) {\n    result += std::to_string(x % base);\n    x /= base;\n\
    \  }\n  std::reverse(result.begin(), result.end());\n  return result;\n}\nint\
    \ main() {\n    auto candidate = change_base;\n    assert(candidate((8), (3))\
    \ == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1ttz05c2.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp1ttz05c2.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \     result += std::to_string(x % base);\n               ^\n/tmp/tmp1ttz05c2.cpp:\
    \ In function 'int main()':\n/tmp/tmp1ttz05c2.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1ttz05c2.cpp:2:\n/tmp/tmp1ttz05c2.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x > 0) {\n        s += std::to_string(x % base);\n       \
    \ x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\n\
    int main() {\n    auto candidate = change_base;\n    assert(candidate((8), (3))\
    \ == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyk759udt.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpyk759udt.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpyk759udt.cpp:\
    \ In function 'int main()':\n/tmp/tmpyk759udt.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyk759udt.cpp:2:\n/tmp/tmpyk759udt.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res = std::to_string(x % base) + res;\n\
    \        x /= base;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4hqtfzad.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp4hqtfzad.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         res = std::to_string(x % base) + res;\n               ^\n/tmp/tmp4hqtfzad.cpp:\
    \ In function 'int main()':\n/tmp/tmp4hqtfzad.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4hqtfzad.cpp:2:\n/tmp/tmp4hqtfzad.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8q0n440m.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp8q0n440m.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp8q0n440m.cpp:\
    \ In function 'int main()':\n/tmp/tmp8q0n440m.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8q0n440m.cpp:2:\n/tmp/tmp8q0n440m.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    assert(base < 10);\n\
    \    std::string result = \"\";\n    while (x > 0) {\n        result = std::to_string(x\
    \ % base) + result;\n        x /= base;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiu_pur9j.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpiu_pur9j.cpp:16:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpiu_pur9j.cpp:\
    \ In function 'int main()':\n/tmp/tmpiu_pur9j.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiu_pur9j.cpp:2:\n/tmp/tmpiu_pur9j.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res = std::to_string(x % base) + res;\n\
    \        x /= base;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4hqtfzad.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp4hqtfzad.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         res = std::to_string(x % base) + res;\n               ^\n/tmp/tmp4hqtfzad.cpp:\
    \ In function 'int main()':\n/tmp/tmp4hqtfzad.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4hqtfzad.cpp:2:\n/tmp/tmp4hqtfzad.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x > 0) {\n        s = std::to_string(x % base) + s;\n    \
    \    x /= base;\n    }\n    return s;\n}\nint main() {\n    auto candidate = change_base;\n\
    \    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9), (3))\
    \ == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n    assert(candidate((16),\
    \ (2)) == (\"10000\"));\n    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7),\
    \ (2)) == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnm7ye_rg.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpnm7ye_rg.cpp:15:13: error: 'to_string' is not a member of 'std'\n\
    \         s = std::to_string(x % base) + s;\n             ^\n/tmp/tmpnm7ye_rg.cpp:\
    \ In function 'int main()':\n/tmp/tmpnm7ye_rg.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnm7ye_rg.cpp:2:\n/tmp/tmpnm7ye_rg.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpccvp299d.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpccvp299d.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpccvp299d.cpp:\
    \ In function 'int main()':\n/tmp/tmpccvp299d.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpccvp299d.cpp:2:\n/tmp/tmpccvp299d.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res += (x % base) + '0';\n        x /= base;\n \
    \   }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8wofa9vm.cpp: In function 'int main()':\n/tmp/tmp8wofa9vm.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8wofa9vm.cpp:2:\n/tmp/tmp8wofa9vm.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans;\n\
    \    while (x > 0) {\n        ans += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(ans.begin(), ans.end());\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfklib62d.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpfklib62d.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         ans += std::to_string(x % base);\n                ^\n/tmp/tmpfklib62d.cpp:\
    \ In function 'int main()':\n/tmp/tmpfklib62d.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpfklib62d.cpp:2:\n/tmp/tmpfklib62d.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x) {\n        result.push_back(x % base + '0');\n        x /= base;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpekxy3ghb.cpp: In function 'int main()':\n/tmp/tmpekxy3ghb.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpekxy3ghb.cpp:2:\n/tmp/tmpekxy3ghb.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string str\
    \ = \"\";\n    while (x > 0) {\n        str += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(str.begin(), str.end());\n    return\
    \ str;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvju8s5pi.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpvju8s5pi.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         str += std::to_string(x % base);\n                ^\n/tmp/tmpvju8s5pi.cpp:\
    \ In function 'int main()':\n/tmp/tmpvju8s5pi.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvju8s5pi.cpp:2:\n/tmp/tmpvju8s5pi.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8q0n440m.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp8q0n440m.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp8q0n440m.cpp:\
    \ In function 'int main()':\n/tmp/tmp8q0n440m.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8q0n440m.cpp:2:\n/tmp/tmp8q0n440m.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans = std::to_string(x % base) + ans;\n\
    \        x /= base;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52p2p9ux.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp52p2p9ux.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         ans = std::to_string(x % base) + ans;\n               ^\n/tmp/tmp52p2p9ux.cpp:\
    \ In function 'int main()':\n/tmp/tmp52p2p9ux.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp52p2p9ux.cpp:2:\n/tmp/tmp52p2p9ux.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(ans.begin(), ans.end());\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuwt4_uwy.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpuwt4_uwy.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         ans += std::to_string(x % base);\n                ^\n/tmp/tmpuwt4_uwy.cpp:\
    \ In function 'int main()':\n/tmp/tmpuwt4_uwy.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuwt4_uwy.cpp:2:\n/tmp/tmpuwt4_uwy.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8q0n440m.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp8q0n440m.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp8q0n440m.cpp:\
    \ In function 'int main()':\n/tmp/tmp8q0n440m.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8q0n440m.cpp:2:\n/tmp/tmp8q0n440m.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    assert(base < 10);\n\
    \    std::string res;\n    while (x) {\n        res += std::to_string(x % base);\n\
    \        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqwgo0yxg.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqwgo0yxg.cpp:16:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqwgo0yxg.cpp:\
    \ In function 'int main()':\n/tmp/tmpqwgo0yxg.cpp:23:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqwgo0yxg.cpp:2:\n/tmp/tmpqwgo0yxg.cpp:24:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(ans.begin(), ans.end());\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuwt4_uwy.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpuwt4_uwy.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         ans += std::to_string(x % base);\n                ^\n/tmp/tmpuwt4_uwy.cpp:\
    \ In function 'int main()':\n/tmp/tmpuwt4_uwy.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuwt4_uwy.cpp:2:\n/tmp/tmpuwt4_uwy.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x > 0) {\n        s += std::to_string(x % base);\n       \
    \ x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\n\
    int main() {\n    auto candidate = change_base;\n    assert(candidate((8), (3))\
    \ == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyk759udt.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpyk759udt.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpyk759udt.cpp:\
    \ In function 'int main()':\n/tmp/tmpyk759udt.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyk759udt.cpp:2:\n/tmp/tmpyk759udt.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwm5285uc.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpwm5285uc.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpwm5285uc.cpp:\
    \ In function 'int main()':\n/tmp/tmpwm5285uc.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwm5285uc.cpp:2:\n/tmp/tmpwm5285uc.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s += (x % base) + '0';\n        x /= base;\n   \
    \ }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n \
    \   auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n\
    \    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234), (2))\
    \ == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8),\
    \ (2)) == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9dpsap0y.cpp: In function 'int main()':\n/tmp/tmp9dpsap0y.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9dpsap0y.cpp:2:\n/tmp/tmp9dpsap0y.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  std::string result;\n\
    \  while (x > 0) {\n    result.push_back(x % base + '0');\n    x /= base;\n  }\n\
    \  std::reverse(result.begin(), result.end());\n  return result;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1ci1wj09.cpp: In function 'int main()':\n/tmp/tmp1ci1wj09.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1ci1wj09.cpp:2:\n/tmp/tmp1ci1wj09.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpccvp299d.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpccvp299d.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpccvp299d.cpp:\
    \ In function 'int main()':\n/tmp/tmpccvp299d.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpccvp299d.cpp:2:\n/tmp/tmpccvp299d.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  std::string s;\n\
    \  while (x > 0) {\n    s += std::to_string(x % base);\n    x /= base;\n  }\n\
    \  std::reverse(s.begin(), s.end());\n  return s;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5xdgzwx0.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp5xdgzwx0.cpp:15:10: error: 'to_string' is not a member of 'std'\n\
    \     s += std::to_string(x % base);\n          ^\n/tmp/tmp5xdgzwx0.cpp: In function\
    \ 'int main()':\n/tmp/tmp5xdgzwx0.cpp:22:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = change_base;\n          ^\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5xdgzwx0.cpp:2:\n/tmp/tmp5xdgzwx0.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s += '0' + x % base;\n        x /= base;\n    }\n\
    \    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n    auto\
    \ candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n   \
    \ assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234), (2))\
    \ == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8),\
    \ (2)) == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjkkgsph5.cpp: In function 'int main()':\n/tmp/tmpjkkgsph5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjkkgsph5.cpp:2:\n/tmp/tmpjkkgsph5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s.push_back(x % base + '0');\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprejwsckw.cpp: In function 'int main()':\n/tmp/tmprejwsckw.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprejwsckw.cpp:2:\n/tmp/tmprejwsckw.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x) {\n        s += '0' + x % base;\n        x /= base;\n    }\n  \
    \  std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n    auto\
    \ candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n   \
    \ assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234), (2))\
    \ == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8),\
    \ (2)) == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7spvpyd4.cpp: In function 'int main()':\n/tmp/tmp7spvpyd4.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7spvpyd4.cpp:2:\n/tmp/tmp7spvpyd4.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s.push_back('0' + x % base);\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmtsvht5k.cpp: In function 'int main()':\n/tmp/tmpmtsvht5k.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmtsvht5k.cpp:2:\n/tmp/tmpmtsvht5k.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x > 0) {\n        s += std::to_string(x % base);\n       \
    \ x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\n\
    int main() {\n    auto candidate = change_base;\n    assert(candidate((8), (3))\
    \ == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyk759udt.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpyk759udt.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpyk759udt.cpp:\
    \ In function 'int main()':\n/tmp/tmpyk759udt.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyk759udt.cpp:2:\n/tmp/tmpyk759udt.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8q0n440m.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp8q0n440m.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp8q0n440m.cpp:\
    \ In function 'int main()':\n/tmp/tmp8q0n440m.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8q0n440m.cpp:2:\n/tmp/tmp8q0n440m.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res = std::to_string(x % base) + res;\n\
    \        x /= base;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4hqtfzad.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp4hqtfzad.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         res = std::to_string(x % base) + res;\n               ^\n/tmp/tmp4hqtfzad.cpp:\
    \ In function 'int main()':\n/tmp/tmp4hqtfzad.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4hqtfzad.cpp:2:\n/tmp/tmp4hqtfzad.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    assert(base < 10);\n\
    \    std::string result;\n    while (x > 0) {\n        result.push_back('0' +\
    \ x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1kv75a4h.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res += (x % base) + '0';\n        x /= base;\n \
    \   }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8wofa9vm.cpp: In function 'int main()':\n/tmp/tmp8wofa9vm.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8wofa9vm.cpp:2:\n/tmp/tmp8wofa9vm.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res = std::to_string(x % base) + res;\n\
    \        x /= base;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4hqtfzad.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp4hqtfzad.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         res = std::to_string(x % base) + res;\n               ^\n/tmp/tmp4hqtfzad.cpp:\
    \ In function 'int main()':\n/tmp/tmp4hqtfzad.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4hqtfzad.cpp:2:\n/tmp/tmp4hqtfzad.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res = std::to_string(x % base) + res;\n\
    \        x /= base;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4hqtfzad.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp4hqtfzad.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         res = std::to_string(x % base) + res;\n               ^\n/tmp/tmp4hqtfzad.cpp:\
    \ In function 'int main()':\n/tmp/tmp4hqtfzad.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4hqtfzad.cpp:2:\n/tmp/tmp4hqtfzad.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8q0n440m.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp8q0n440m.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp8q0n440m.cpp:\
    \ In function 'int main()':\n/tmp/tmp8q0n440m.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8q0n440m.cpp:2:\n/tmp/tmp8q0n440m.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x) {\n        res += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpe3jfgmj1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x) {\n        res += '0' + x % base;\n        x /= base;\n    }\n\
    \    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpg7zqw471.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result += std::to_string(x % base);\n\
    \        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8ni81nb_.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp8ni81nb_.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp8ni81nb_.cpp:\
    \ In function 'int main()':\n/tmp/tmp8ni81nb_.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8ni81nb_.cpp:2:\n/tmp/tmp8ni81nb_.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpccvp299d.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpccvp299d.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpccvp299d.cpp:\
    \ In function 'int main()':\n/tmp/tmpccvp299d.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpccvp299d.cpp:2:\n/tmp/tmpccvp299d.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpccvp299d.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpccvp299d.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpccvp299d.cpp:\
    \ In function 'int main()':\n/tmp/tmpccvp299d.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpccvp299d.cpp:2:\n/tmp/tmpccvp299d.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s.push_back(x % base + '0');\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprejwsckw.cpp: In function 'int main()':\n/tmp/tmprejwsckw.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprejwsckw.cpp:2:\n/tmp/tmprejwsckw.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s += (x % base) + '0';\n        x /= base;\n   \
    \ }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n \
    \   auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n\
    \    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234), (2))\
    \ == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8),\
    \ (2)) == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9dpsap0y.cpp: In function 'int main()':\n/tmp/tmp9dpsap0y.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9dpsap0y.cpp:2:\n/tmp/tmp9dpsap0y.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8q0n440m.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp8q0n440m.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp8q0n440m.cpp:\
    \ In function 'int main()':\n/tmp/tmp8q0n440m.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8q0n440m.cpp:2:\n/tmp/tmp8q0n440m.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x > 0) {\n        s += std::to_string(x % base);\n       \
    \ x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\n\
    int main() {\n    auto candidate = change_base;\n    assert(candidate((8), (3))\
    \ == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyk759udt.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpyk759udt.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpyk759udt.cpp:\
    \ In function 'int main()':\n/tmp/tmpyk759udt.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyk759udt.cpp:2:\n/tmp/tmpyk759udt.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x) {\n        result += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbz1xlvt7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x != 0) {\n        s += std::to_string(x % base);\n      \
    \  x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\n\
    int main() {\n    auto candidate = change_base;\n    assert(candidate((8), (3))\
    \ == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprv_9cafj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x) {\n        s += (x % base) + '0';\n        x /= base;\n    }\n\
    \    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n    auto\
    \ candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n   \
    \ assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234), (2))\
    \ == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8),\
    \ (2)) == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdgkajgx2.cpp: In function 'int main()':\n/tmp/tmpdgkajgx2.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdgkajgx2.cpp:2:\n/tmp/tmpdgkajgx2.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8q0n440m.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp8q0n440m.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp8q0n440m.cpp:\
    \ In function 'int main()':\n/tmp/tmp8q0n440m.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8q0n440m.cpp:2:\n/tmp/tmp8q0n440m.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8q0n440m.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp8q0n440m.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp8q0n440m.cpp:\
    \ In function 'int main()':\n/tmp/tmp8q0n440m.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8q0n440m.cpp:2:\n/tmp/tmp8q0n440m.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x > 0) {\n        s += std::to_string(x % base);\n       \
    \ x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\n\
    int main() {\n    auto candidate = change_base;\n    assert(candidate((8), (3))\
    \ == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyk759udt.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpyk759udt.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpyk759udt.cpp:\
    \ In function 'int main()':\n/tmp/tmpyk759udt.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyk759udt.cpp:2:\n/tmp/tmpyk759udt.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x) {\n        res.push_back('0' + x % base);\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpegevzlls.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  std::string res =\
    \ \"\";\n  while (x > 0) {\n    res = std::to_string(x % base) + res;\n    x /=\
    \ base;\n  }\n  return res;\n}\nint main() {\n    auto candidate = change_base;\n\
    \    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9), (3))\
    \ == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n    assert(candidate((16),\
    \ (2)) == (\"10000\"));\n    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7),\
    \ (2)) == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmps6dmzr6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  std::string result\
    \ = \"\";\n  while (x > 0) {\n    result += std::to_string(x % base);\n    x /=\
    \ base;\n  }\n  std::reverse(result.begin(), result.end());\n  return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8wktksk9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(ans.begin(), ans.end());\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuwt4_uwy.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpuwt4_uwy.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         ans += std::to_string(x % base);\n                ^\n/tmp/tmpuwt4_uwy.cpp:\
    \ In function 'int main()':\n/tmp/tmpuwt4_uwy.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuwt4_uwy.cpp:2:\n/tmp/tmpuwt4_uwy.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpccvp299d.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpccvp299d.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpccvp299d.cpp:\
    \ In function 'int main()':\n/tmp/tmpccvp299d.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpccvp299d.cpp:2:\n/tmp/tmpccvp299d.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8q0n440m.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp8q0n440m.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp8q0n440m.cpp:\
    \ In function 'int main()':\n/tmp/tmp8q0n440m.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8q0n440m.cpp:2:\n/tmp/tmp8q0n440m.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  assert(base < 10);\n\
    \  std::string res;\n  while (x > 0) {\n    res += std::to_string(x % base);\n\
    \    x /= base;\n  }\n  std::reverse(res.begin(), res.end());\n  return res;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6e40tx_t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(ans.begin(), ans.end());\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuwt4_uwy.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpuwt4_uwy.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         ans += std::to_string(x % base);\n                ^\n/tmp/tmpuwt4_uwy.cpp:\
    \ In function 'int main()':\n/tmp/tmpuwt4_uwy.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuwt4_uwy.cpp:2:\n/tmp/tmpuwt4_uwy.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  std::string ans;\n\
    \  while (x > 0) {\n    ans.push_back(x % base + '0');\n    x /= base;\n  }\n\
    \  std::reverse(ans.begin(), ans.end());\n  return ans;\n}\nint main() {\n   \
    \ auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n\
    \    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234), (2))\
    \ == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8),\
    \ (2)) == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv3cw421i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  std::string res;\n\
    \  while (x > 0) {\n    res.push_back('0' + x % base);\n    x /= base;\n  }\n\
    \  std::reverse(res.begin(), res.end());\n  return res;\n}\nint main() {\n   \
    \ auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n\
    \    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234), (2))\
    \ == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8),\
    \ (2)) == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpuvqtef1m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(ans.begin(), ans.end());\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuwt4_uwy.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpuwt4_uwy.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         ans += std::to_string(x % base);\n                ^\n/tmp/tmpuwt4_uwy.cpp:\
    \ In function 'int main()':\n/tmp/tmpuwt4_uwy.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuwt4_uwy.cpp:2:\n/tmp/tmpuwt4_uwy.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  std::string s;\n\
    \  while (x > 0) {\n    s += std::to_string(x % base);\n    x /= base;\n  }\n\
    \  std::reverse(s.begin(), s.end());\n  return s;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5xdgzwx0.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp5xdgzwx0.cpp:15:10: error: 'to_string' is not a member of 'std'\n\
    \     s += std::to_string(x % base);\n          ^\n/tmp/tmp5xdgzwx0.cpp: In function\
    \ 'int main()':\n/tmp/tmp5xdgzwx0.cpp:22:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = change_base;\n          ^\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5xdgzwx0.cpp:2:\n/tmp/tmp5xdgzwx0.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x != 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg0ay342t.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpg0ay342t.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpg0ay342t.cpp:\
    \ In function 'int main()':\n/tmp/tmpg0ay342t.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg0ay342t.cpp:2:\n/tmp/tmpg0ay342t.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwm5285uc.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpwm5285uc.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpwm5285uc.cpp:\
    \ In function 'int main()':\n/tmp/tmpwm5285uc.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwm5285uc.cpp:2:\n/tmp/tmpwm5285uc.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += (x % base) + '0';\n        x /=\
    \ base;\n    }\n    std::reverse(ans.begin(), ans.end());\n    return ans;\n}\n\
    int main() {\n    auto candidate = change_base;\n    assert(candidate((8), (3))\
    \ == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4_8ei9p9.cpp: In function 'int main()':\n/tmp/tmp4_8ei9p9.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4_8ei9p9.cpp:2:\n/tmp/tmp4_8ei9p9.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans = std::to_string(x % base) + ans;\n\
    \        x /= base;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52p2p9ux.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp52p2p9ux.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         ans = std::to_string(x % base) + ans;\n               ^\n/tmp/tmp52p2p9ux.cpp:\
    \ In function 'int main()':\n/tmp/tmp52p2p9ux.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp52p2p9ux.cpp:2:\n/tmp/tmp52p2p9ux.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqx0cldww.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqx0cldww.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpqx0cldww.cpp:\
    \ In function 'int main()':\n/tmp/tmpqx0cldww.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqx0cldww.cpp:2:\n/tmp/tmpqx0cldww.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res = std::to_string(x % base) + res;\n\
    \        x /= base;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4hqtfzad.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp4hqtfzad.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         res = std::to_string(x % base) + res;\n               ^\n/tmp/tmp4hqtfzad.cpp:\
    \ In function 'int main()':\n/tmp/tmp4hqtfzad.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4hqtfzad.cpp:2:\n/tmp/tmp4hqtfzad.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpccvp299d.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpccvp299d.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpccvp299d.cpp:\
    \ In function 'int main()':\n/tmp/tmpccvp299d.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpccvp299d.cpp:2:\n/tmp/tmpccvp299d.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x != 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg0ay342t.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpg0ay342t.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpg0ay342t.cpp:\
    \ In function 'int main()':\n/tmp/tmpg0ay342t.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg0ay342t.cpp:2:\n/tmp/tmpg0ay342t.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x) {\n        s += (x % base) + '0';\n        x /= base;\n    }\n\
    \    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n    auto\
    \ candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n   \
    \ assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234), (2))\
    \ == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8),\
    \ (2)) == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdgkajgx2.cpp: In function 'int main()':\n/tmp/tmpdgkajgx2.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdgkajgx2.cpp:2:\n/tmp/tmpdgkajgx2.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    assert(base < 10);\n\
    \    std::string result;\n    while (x > 0) {\n        result.push_back(x % base\
    \ + '0');\n        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpt6frvun4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x != 0) {\n        s = std::to_string(x % base) + s;\n   \
    \     x /= base;\n    }\n    return s;\n}\nint main() {\n    auto candidate =\
    \ change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwm8och3r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x != 0) {\n        s += (x % base) + '0';\n        x /= base;\n  \
    \  }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpj6bkxhcq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpccvp299d.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpccvp299d.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpccvp299d.cpp:\
    \ In function 'int main()':\n/tmp/tmpccvp299d.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpccvp299d.cpp:2:\n/tmp/tmpccvp299d.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(ans.begin(), ans.end());\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuwt4_uwy.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpuwt4_uwy.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         ans += std::to_string(x % base);\n                ^\n/tmp/tmpuwt4_uwy.cpp:\
    \ In function 'int main()':\n/tmp/tmpuwt4_uwy.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuwt4_uwy.cpp:2:\n/tmp/tmpuwt4_uwy.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x) {\n        s += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjfks7m9p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res += (x % base) + '0';\n        x /= base;\n \
    \   }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8wofa9vm.cpp: In function 'int main()':\n/tmp/tmp8wofa9vm.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8wofa9vm.cpp:2:\n/tmp/tmp8wofa9vm.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwm5285uc.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpwm5285uc.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpwm5285uc.cpp:\
    \ In function 'int main()':\n/tmp/tmpwm5285uc.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwm5285uc.cpp:2:\n/tmp/tmpwm5285uc.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans = std::to_string(x % base) + ans;\n\
    \        x /= base;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52p2p9ux.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp52p2p9ux.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         ans = std::to_string(x % base) + ans;\n               ^\n/tmp/tmp52p2p9ux.cpp:\
    \ In function 'int main()':\n/tmp/tmp52p2p9ux.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp52p2p9ux.cpp:2:\n/tmp/tmp52p2p9ux.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2_bdvo5.cpp: In function 'int main()':\n/tmp/tmpy2_bdvo5.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy2_bdvo5.cpp:2:\n/tmp/tmpy2_bdvo5.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x) {\n        s += (x % base) + '0';\n        x /= base;\n    }\n\
    \    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n    auto\
    \ candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n   \
    \ assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234), (2))\
    \ == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8),\
    \ (2)) == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdgkajgx2.cpp: In function 'int main()':\n/tmp/tmpdgkajgx2.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdgkajgx2.cpp:2:\n/tmp/tmpdgkajgx2.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpccvp299d.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpccvp299d.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpccvp299d.cpp:\
    \ In function 'int main()':\n/tmp/tmpccvp299d.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpccvp299d.cpp:2:\n/tmp/tmpccvp299d.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsprl06om.cpp: In function 'int main()':\n/tmp/tmpsprl06om.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = change_base;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsprl06om.cpp:2:\n/tmp/tmpsprl06om.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res.push_back(x % base + '0');\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqtfh79y4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res = std::to_string(x % base) + res;\n\
    \        x /= base;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4hqtfzad.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp4hqtfzad.cpp:15:15: error: 'to_string' is not a member of 'std'\n\
    \         res = std::to_string(x % base) + res;\n               ^\n/tmp/tmp4hqtfzad.cpp:\
    \ In function 'int main()':\n/tmp/tmp4hqtfzad.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4hqtfzad.cpp:2:\n/tmp/tmp4hqtfzad.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string res;\n\
    \    while (x > 0) {\n        res += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;\n}\nint main()\
    \ {\n    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"\
    22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpccvp299d.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpccvp299d.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         res += std::to_string(x % base);\n                ^\n/tmp/tmpccvp299d.cpp:\
    \ In function 'int main()':\n/tmp/tmpccvp299d.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpccvp299d.cpp:2:\n/tmp/tmpccvp299d.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(ans.begin(), ans.end());\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuwt4_uwy.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpuwt4_uwy.cpp:15:16: error: 'to_string' is not a member of 'std'\n\
    \         ans += std::to_string(x % base);\n                ^\n/tmp/tmpuwt4_uwy.cpp:\
    \ In function 'int main()':\n/tmp/tmpuwt4_uwy.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuwt4_uwy.cpp:2:\n/tmp/tmpuwt4_uwy.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x > 0) {\n        s += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwm5285uc.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpwm5285uc.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpwm5285uc.cpp:\
    \ In function 'int main()':\n/tmp/tmpwm5285uc.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwm5285uc.cpp:2:\n/tmp/tmpwm5285uc.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result\
    \ = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base) + result;\n\
    \        x /= base;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = change_base;\n    assert(candidate((8), (3)) == (\"22\"));\n    assert(candidate((9),\
    \ (3)) == (\"100\"));\n    assert(candidate((234), (2)) == (\"11101010\"));\n\
    \    assert(candidate((16), (2)) == (\"10000\"));\n    assert(candidate((8), (2))\
    \ == (\"1000\"));\n    assert(candidate((7), (2)) == (\"111\"));\n    assert(candidate((2),\
    \ (3)) == (\"2\"));\n    assert(candidate((3), (4)) == (\"3\"));\n    assert(candidate((4),\
    \ (5)) == (\"4\"));\n    assert(candidate((5), (6)) == (\"5\"));\n    assert(candidate((6),\
    \ (7)) == (\"6\"));\n    assert(candidate((7), (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh_2qw78.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpqh_2qw78.cpp:15:18: error: 'to_string' is not a member of 'std'\n\
    \         result = std::to_string(x % base) + result;\n                  ^\n/tmp/tmpqh_2qw78.cpp:\
    \ In function 'int main()':\n/tmp/tmpqh_2qw78.cpp:21:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqh_2qw78.cpp:2:\n/tmp/tmpqh_2qw78.cpp:22:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n  assert(base < 10);\n\
    \  std::string result;\n  while (x > 0) {\n    result.push_back(x % base + '0');\n\
    \    x /= base;\n  }\n  std::reverse(result.begin(), result.end());\n  return\
    \ result;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgyhkq838.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s =\
    \ \"\";\n    while (x > 0) {\n        s += std::to_string(x % base);\n       \
    \ x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\n\
    int main() {\n    auto candidate = change_base;\n    assert(candidate((8), (3))\
    \ == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyk759udt.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmpyk759udt.cpp:15:14: error: 'to_string' is not a member of 'std'\n\
    \         s += std::to_string(x % base);\n              ^\n/tmp/tmpyk759udt.cpp:\
    \ In function 'int main()':\n/tmp/tmpyk759udt.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyk759udt.cpp:2:\n/tmp/tmpyk759udt.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string result;\n\
    \    while (x != 0) {\n        result += std::to_string(x % base);\n        x\
    \ /= base;\n    }\n    std::reverse(result.begin(), result.end());\n    return\
    \ result;\n}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
    \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp92h88shw.cpp: In function 'std::string change_base(long int, long\
    \ int)':\n/tmp/tmp92h88shw.cpp:15:19: error: 'to_string' is not a member of 'std'\n\
    \         result += std::to_string(x % base);\n                   ^\n/tmp/tmp92h88shw.cpp:\
    \ In function 'int main()':\n/tmp/tmp92h88shw.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = change_base;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp92h88shw.cpp:2:\n/tmp/tmp92h88shw.cpp:23:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((8), (3))\
    \ == (\"22\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base\
    \ of input number x to base.\n// return string representation after the conversion.\n\
    // base numbers are less than 10.\n// >>> change_base((8), (3))\n// (\"22\")\n\
    // >>> change_base((8), (2))\n// (\"1000\")\n// >>> change_base((7), (2))\n//\
    \ (\"111\")\nstd::string change_base(long x, long base) {\n    std::string s;\n\
    \    while (x) {\n        s += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n\
    \    auto candidate = change_base;\n    assert(candidate((8), (3)) == (\"22\"\
    ));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
    \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n\
    \    assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2))\
    \ == (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
    \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
    \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
    \ (8)) == (\"7\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjfks7m9p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748671

name: HumanEval_68_pluck
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// \"Given a vector representing\
  \ a branch of a tree that has non-negative integer nodes\n// your task is to pluck\
  \ one of the nodes and return it.\n// The plucked node should be the node with the\
  \ smallest even value.\n// If multiple nodes with the same smallest even value are\
  \ found return the node that has smallest index.\n// The plucked node should be\
  \ returned in a vector, [ smalest_value, its index ],\n// If there are no even values\
  \ or the given vector is empty, return [].\n// Example 1:\n// >>> pluck((std::vector<long>({(long)4,\
  \ (long)2, (long)3})))\n// (std::vector<long>({(long)2, (long)1}))\n// Explanation:\
  \ 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n\
  // >>> pluck((std::vector<long>({(long)1, (long)2, (long)3})))\n// (std::vector<long>({(long)2,\
  \ (long)1}))\n// Explanation: 2 has the smallest even value, and 2 has the smallest\
  \ index.\n// Example 3:\n// >>> pluck((std::vector<long>()))\n// (std::vector<long>())\n\
  // Example 4:\n// >>> pluck((std::vector<long>({(long)5, (long)0, (long)3, (long)0,\
  \ (long)4, (long)2})))\n// (std::vector<long>({(long)0, (long)1}))\n// Explanation:\
  \ 0 is the smallest value, but  there are two zeros,\n// so we will choose the first\
  \ zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <=\
  \ 10000\n// * 0 <= node.value\nstd::vector<long> pluck(std::vector<long> arr) {\n"
tests: "}\nint main() {\n    auto candidate = pluck;\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)1})));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)1})));\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)0, (long)3, (long)0, (long)4, (long)2}))) == (std::vector<long>({(long)0,\
  \ (long)1})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
  \ (long)0, (long)5, (long)3}))) == (std::vector<long>({(long)0, (long)3})));\n \
  \   assert(candidate((std::vector<long>({(long)5, (long)4, (long)8, (long)4, (long)8})))\
  \ == (std::vector<long>({(long)4, (long)1})));\n    assert(candidate((std::vector<long>({(long)7,\
  \ (long)6, (long)7, (long)1}))) == (std::vector<long>({(long)6, (long)1})));\n \
  \   assert(candidate((std::vector<long>({(long)7, (long)9, (long)7, (long)1})))\
  \ == (std::vector<long>()));\n}\n"
completions: ["    std::vector<long> res;\n    if(arr.size() == 0)\n        return\
    \ res;\n    long min = INT_MAX;\n    int index = -1;\n    for(int i = 0; i < arr.size();\
    \ i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if(index != -1){\n        res.push_back(min);\n\
    \        res.push_back(index);\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0)\n        return res;\n    long min = INT_MAX;\n\
    \    long index = 0;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(min == INT_MAX)\n        return res;\n    res.push_back(min);\n\
    \    res.push_back(index);\n    return res;", "  std::vector<long> res;\n  if\
    \ (arr.size() == 0) {\n    return res;\n  }\n  long min = -1;\n  long min_index\
    \ = -1;\n  for (int i = 0; i < arr.size(); i++) {\n    if (arr[i] % 2 == 0) {\n\
    \      if (min == -1) {\n        min = arr[i];\n        min_index = i;\n     \
    \ } else if (arr[i] < min) {\n        min = arr[i];\n        min_index = i;\n\
    \      }\n    }\n  }\n  if (min == -1) {\n    return res;\n  }\n  res.push_back(min);\n\
    \  res.push_back(min_index);\n  return res;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min = INT_MAX;\n\
    \    int index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    if (index == -1) {\n        return result;\n    }\n\
    \    result.push_back(min);\n    result.push_back(index);\n    return result;",
  "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    long min = arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    long min = INT_MAX;\n    long\
    \ index = 0;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i] % 2\
    \ == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(min == INT_MAX) return res;\n    res.push_back(min);\n\
    \    res.push_back(index);\n    return res;", "    std::vector<long> result;\n\
    \    long min_even = INT_MAX;\n    int min_even_index = -1;\n    for (int i =\
    \ 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min_even)\
    \ {\n            min_even = arr[i];\n            min_even_index = i;\n       \
    \ }\n    }\n    if (min_even_index != -1) {\n        result.push_back(min_even);\n\
    \        result.push_back(min_even_index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = INT_MAX;\n    long min_index = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            min_index = i;\n        }\n    }\n    if (min_index == -1) {\n  \
    \      return result;\n    }\n    result.push_back(min);\n    result.push_back(min_index);\n\
    \    return result;", "    std::vector<long> res;\n    int min = INT_MAX;\n  \
    \  int index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    if (index == -1) {\n        return res;\n    }\n \
    \   res.push_back(min);\n    res.push_back(index);\n    return res;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long minIndex = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            minIndex = i;\n        }\n    }\n    if (min % 2 == 0) {\n      \
    \  result.push_back(min);\n        result.push_back(minIndex);\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    if(arr.size() == 0) return res;\n\
    \    long min = INT_MAX;\n    long min_index = INT_MAX;\n    for(int i = 0; i\
    \ < arr.size(); i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n        \
    \    min = arr[i];\n            min_index = i;\n        }\n    }\n    if(min !=\
    \ INT_MAX){\n        res.push_back(min);\n        res.push_back(min_index);\n\
    \    }\n    return res;", "    std::vector<long> result;\n    if (arr.size() ==\
    \ 0) {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n     \
    \           min_index = i;\n            }\n        }\n    }\n    if (min % 2 ==\
    \ 0) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    if(arr.size() ==\
    \ 0)\n        return res;\n    long min = INT_MAX;\n    long index = -1;\n   \
    \ for(int i = 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0 && arr[i] <\
    \ min){\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    if(index == -1)\n        return res;\n    res.push_back(min);\n    res.push_back(index);\n\
    \    return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = arr[0];\n    long minIndex = 0;\n\
    \    bool found = false;\n    for (int i = 0; i < arr.size(); i++) {\n       \
    \ if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n                min\
    \ = arr[i];\n                minIndex = i;\n                found = true;\n  \
    \          }\n        }\n    }\n    if (found) {\n        result.push_back(min);\n\
    \        result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long min_index = 0;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            min_index = i;\n        }\n    }\n    if (min % 2 == 0) {\n     \
    \   result.push_back(min);\n        result.push_back(min_index);\n    }\n    return\
    \ result;", "  std::vector<long> result;\n  if (arr.size() == 0) return result;\n\
    \  long min = INT_MAX;\n  long index = 0;\n  for (int i = 0; i < arr.size(); i++)\
    \ {\n    if (arr[i] % 2 == 0 && arr[i] < min) {\n      min = arr[i];\n      index\
    \ = i;\n    }\n  }\n  if (min == INT_MAX) return result;\n  result.push_back(min);\n\
    \  result.push_back(index);\n  return result;", "    std::vector<long> res;\n\
    \    if(arr.size() == 0) return res;\n    long min = INT_MAX;\n    long index\
    \ = -1;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0\
    \ && arr[i] < min){\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    if(index == -1) return res;\n    res.push_back(min);\n    res.push_back(index);\n\
    \    return res;", "    std::vector<long> res;\n    if(arr.size() == 0)\n    \
    \    return res;\n    long min = INT_MAX;\n    long min_index = INT_MAX;\n   \
    \ for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            min_index = i;\n        }\n\
    \    }\n    if(min == INT_MAX)\n        return res;\n    res.push_back(min);\n\
    \    res.push_back(min_index);\n    return res;", "    std::vector<long> res;\n\
    \    if(arr.size() == 0) return res;\n    long min_even = INT_MAX;\n    int min_even_index\
    \ = -1;\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] % 2 == 0\
    \ && arr[i] < min_even) {\n            min_even = arr[i];\n            min_even_index\
    \ = i;\n        }\n    }\n    if(min_even_index == -1) return res;\n    res.push_back(min_even);\n\
    \    res.push_back(min_even_index);\n    return res;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min_even = std::numeric_limits<long>::max();\n    long index = -1;\n    for\
    \ (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] <\
    \ min_even) {\n            min_even = arr[i];\n            index = i;\n      \
    \  }\n    }\n    if (index == -1) {\n        return result;\n    }\n    result.push_back(min_even);\n\
    \    result.push_back(index);\n    return result;", "    std::vector<long> res;\n\
    \    if (arr.size() == 0) {\n        return res;\n    }\n    long min = INT_MAX;\n\
    \    long minIndex = -1;\n    for (long i = 0; i < arr.size(); i++) {\n      \
    \  if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n       \
    \     minIndex = i;\n        }\n    }\n    if (minIndex == -1) {\n        return\
    \ res;\n    }\n    res.push_back(min);\n    res.push_back(minIndex);\n    return\
    \ res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return\
    \ result;\n    }\n    long min = INT_MAX;\n    long min_index = INT_MAX;\n   \
    \ for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            min_index = i;\n        }\n\
    \    }\n    if (min == INT_MAX) {\n        return result;\n    }\n    result.push_back(min);\n\
    \    result.push_back(min_index);\n    return result;", "    std::vector<long>\
    \ res;\n    if (arr.size() == 0) {\n        return res;\n    }\n    long min =\
    \ INT_MAX;\n    long min_index = INT_MAX;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            min_index = i;\n        }\n    }\n    if (min == INT_MAX) {\n   \
    \     return res;\n    }\n    res.push_back(min);\n    res.push_back(min_index);\n\
    \    return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = INT_MAX;\n    long minIndex = INT_MAX;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            minIndex = i;\n        }\n\
    \    }\n    if (min == INT_MAX) {\n        return result;\n    }\n    result.push_back(min);\n\
    \    result.push_back(minIndex);\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) return result;\n    long smallest = arr[0];\n\
    \    long index = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0) {\n            if (arr[i] < smallest) {\n                smallest\
    \ = arr[i];\n                index = i;\n            }\n        }\n    }\n   \
    \ if (smallest % 2 == 0) {\n        result.push_back(smallest);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    long index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n  \
    \      }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n   \
    \     result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = INT_MAX;\n    int index = -1;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (index == -1) {\n        return\
    \ result;\n    }\n    result.push_back(min);\n    result.push_back(index);\n \
    \   return result;", "    std::vector<long> res;\n    if (arr.size() == 0) {\n\
    \        return res;\n    }\n    long min = INT_MAX;\n    long index = -1;\n \
    \   for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (index == -1) {\n        return res;\n    }\n    res.push_back(min);\n\
    \    res.push_back(index);\n    return res;", "    std::vector<long> ans;\n  \
    \  if(arr.size() == 0)\n        return ans;\n    long min = INT_MAX;\n    for(int\
    \ i = 0; i < arr.size(); i++) {\n        if(arr[i] % 2 == 0 && arr[i] < min) {\n\
    \            min = arr[i];\n            ans.clear();\n            ans.push_back(arr[i]);\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if (arr.size() == 0) return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] %\
    \ 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if (min % 2 == 0) {\n        res.push_back(min);\n    \
    \    res.push_back(index);\n    }\n    return res;", "    std::vector<long> res;\n\
    \    if (arr.size() == 0) {\n        return res;\n    }\n    long min = INT_MAX;\n\
    \    long minIndex = -1;\n    for (int i = 0; i < arr.size(); i++) {\n       \
    \ if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n        \
    \    minIndex = i;\n        }\n    }\n    if (minIndex == -1) {\n        return\
    \ res;\n    }\n    res.push_back(min);\n    res.push_back(minIndex);\n    return\
    \ res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return\
    \ result;\n    }\n    long min = arr[0];\n    long minIndex = 0;\n    for (long\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min)\
    \ {\n            min = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(minIndex);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    int index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n  \
    \      }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n   \
    \     result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long min = INT_MAX;\n    int index = -1;\n    for (int i = 0; i\
    \ < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n     \
    \       min = arr[i];\n            index = i;\n        }\n    }\n    if (index\
    \ == -1) {\n        return result;\n    }\n    result.push_back(min);\n    result.push_back(index);\n\
    \    return result;", "    std::vector<long> res;\n    if (arr.size() == 0) return\
    \ res;\n    long min = INT_MAX;\n    long min_index = -1;\n    for (int i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n   \
    \         min = arr[i];\n            min_index = i;\n        }\n    }\n    if\
    \ (min_index == -1) return res;\n    res.push_back(min);\n    res.push_back(min_index);\n\
    \    return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = arr[0];\n    long index = 0;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    if (arr.size() ==\
    \ 0) {\n        return res;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n     \
    \           min_index = i;\n            }\n        }\n    }\n    if (min % 2 ==\
    \ 0) {\n        res.push_back(min);\n        res.push_back(min_index);\n    }\n\
    \    return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = arr[0];\n    long index = 0;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    long min = INT_MAX;\n\
    \    int index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    if (index == -1) {\n        return res;\n    }\n \
    \   res.push_back(min);\n    res.push_back(index);\n    return res;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    int minIndex = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n       \
    \         min = arr[i];\n                minIndex = i;\n            }\n      \
    \  }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n       \
    \ result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    long min = INT_MAX;\n    int index = -1;\n    for (int i = 0; i <\
    \ arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n       \
    \     min = arr[i];\n            index = i;\n        }\n    }\n    if (index !=\
    \ -1) {\n        res.push_back(min);\n        res.push_back(index);\n    }\n \
    \   return res;", "    std::vector<long> result;\n    long min = INT_MAX;\n  \
    \  long index = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    if (min == INT_MAX) {\n        return result;\n  \
    \  }\n    result.push_back(min);\n    result.push_back(index);\n    return result;",
  "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    long min_even = INT_MAX;\n    long min_even_index = INT_MAX;\n   \
    \ for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min_even) {\n            min_even = arr[i];\n            min_even_index =\
    \ i;\n        }\n    }\n    if (min_even == INT_MAX) {\n        return result;\n\
    \    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    long index = 0;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    if(arr.size() ==\
    \ 0)\n        return res;\n    long min = INT_MAX;\n    long index = -1;\n   \
    \ for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if(index == -1)\n        return res;\n    res.push_back(min);\n    res.push_back(index);\n\
    \    return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = arr[0];\n    int index = 0;\n \
    \   for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long smallest = arr[0];\n    long\
    \ index = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0) {\n            if (arr[i] < smallest) {\n                smallest\
    \ = arr[i];\n                index = i;\n            }\n        }\n    }\n   \
    \ if (smallest % 2 == 0) {\n        result.push_back(smallest);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    if(arr.size() ==\
    \ 0)\n        return res;\n    long min = INT_MAX;\n    int index = -1;\n    for(int\
    \ i = 0; i < arr.size(); i++) {\n        if(arr[i] % 2 == 0 && arr[i] < min) {\n\
    \            min = arr[i];\n            index = i;\n        }\n    }\n    if(index\
    \ == -1)\n        return res;\n    res.push_back(min);\n    res.push_back(index);\n\
    \    return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = arr[0];\n    int index = 0;\n \
    \   for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n\
    \        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n \
    \       result.push_back(min_index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    int min = INT_MAX;\n    int index = 0;\n    for (int i = 0; i <\
    \ arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n       \
    \     min = arr[i];\n            index = i;\n        }\n    }\n    if (min ==\
    \ INT_MAX) {\n        return result;\n    }\n    result.push_back(min);\n    result.push_back(index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    long minIndex\
    \ = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            minIndex = i;\n\
    \        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n \
    \       result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) return result;\n    long min = INT_MAX;\n\
    \    int index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    if (index == -1) return result;\n    result.push_back(min);\n\
    \    result.push_back(index);\n    return result;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min = arr[0];\n\
    \    int minIndex = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n           \
    \ minIndex = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    long min_even = INT_MAX;\n  \
    \  long min_even_index = -1;\n    for(int i = 0; i < arr.size(); i++) {\n    \
    \    if(arr[i] % 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n\
    \            min_even_index = i;\n        }\n    }\n    if(min_even_index == -1)\
    \ return res;\n    res.push_back(min_even);\n    res.push_back(min_even_index);\n\
    \    return res;", "    std::vector<long> res;\n    if(arr.size() == 0) return\
    \ res;\n    long min = INT_MAX;\n    int index = -1;\n    for(int i = 0; i < arr.size();\
    \ i++) {\n        if(arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if(index != -1) {\n        res.push_back(min);\n\
    \        res.push_back(index);\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0)\n        return res;\n    long min = INT_MAX;\n\
    \    long index = 0;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(min == INT_MAX)\n        return res;\n    res.push_back(min);\n\
    \    res.push_back(index);\n    return res;", "    std::vector<long> res;\n  \
    \  if(arr.size() == 0)\n        return res;\n    long min = arr[0];\n    long\
    \ index = 0;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i] % 2\
    \ == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(min % 2 == 0){\n        res.push_back(min);\n      \
    \  res.push_back(index);\n    }\n    return res;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min = INT_MAX;\n\
    \    long index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n           \
    \ index = i;\n        }\n    }\n    if (index == -1) {\n        return result;\n\
    \    }\n    result.push_back(min);\n    result.push_back(index);\n    return result;",
  "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    long min = arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min_even = LONG_MAX;\n    long min_even_index = LONG_MAX;\n    for (int i =\
    \ 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min_even)\
    \ {\n            min_even = arr[i];\n            min_even_index = i;\n       \
    \ }\n    }\n    if (min_even == LONG_MAX) {\n        return result;\n    }\n \
    \   result.push_back(min_even);\n    result.push_back(min_even_index);\n    return\
    \ result;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n     \
    \   return result;\n    }\n    long min = arr[0];\n    int index = 0;\n    for\
    \ (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] <\
    \ min) {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    long min = INT_MAX;\n\
    \    int index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    if (index == -1) {\n        return result;\n    }\n\
    \    result.push_back(min);\n    result.push_back(index);\n    return result;",
  "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    long min = INT_MAX;\n    long index = 0;\n    for (int i = 0; i <\
    \ arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n       \
    \     min = arr[i];\n            index = i;\n        }\n    }\n    if (min ==\
    \ INT_MAX) {\n        return result;\n    }\n    result.push_back(min);\n    result.push_back(index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = INT_MAX;\n    int min_index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n\
    \        }\n    }\n    if (min == INT_MAX) {\n        return result;\n    }\n\
    \    result.push_back(min);\n    result.push_back(min_index);\n    return result;",
  "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    long min = arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min_even = INT_MAX;\n    long min_even_index = -1;\n    for (long i = 0; i <\
    \ arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min_even) {\n  \
    \          min_even = arr[i];\n            min_even_index = i;\n        }\n  \
    \  }\n    if (min_even_index == -1) {\n        return result;\n    }\n    result.push_back(min_even);\n\
    \    result.push_back(min_even_index);\n    return result;", "    std::vector<long>\
    \ result;\n    int min = INT_MAX;\n    int index = -1;\n    for (int i = 0; i\
    \ < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n     \
    \       min = arr[i];\n            index = i;\n        }\n    }\n    if (index\
    \ != -1) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    int min_index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n\
    \        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n \
    \       result.push_back(min_index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = INT_MAX;\n    long min_index = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            min_index = i;\n        }\n    }\n    if (min_index == -1) {\n  \
    \      return result;\n    }\n    result.push_back(min);\n    result.push_back(min_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = LONG_MAX;\n    long index =\
    \ 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0\
    \ && arr[i] < min) {\n            min = arr[i];\n            index = i;\n    \
    \    }\n    }\n    if (min == LONG_MAX) {\n        return result;\n    }\n   \
    \ result.push_back(min);\n    result.push_back(index);\n    return result;", " \
    \   std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    int min = INT_MAX;\n    int index = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (index == -1) {\n        return\
    \ result;\n    }\n    result.push_back(min);\n    result.push_back(index);\n \
    \   return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    std::vector<long>::iterator it = std::find_if(arr.begin(),\
    \ arr.end(), [](long i) { return i % 2 == 0; });\n    if (it == arr.end()) {\n\
    \        return result;\n    }\n    long min = *it;\n    long index = std::distance(arr.begin(),\
    \ it);\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n  \
    \      }\n    }\n    result.push_back(min);\n    result.push_back(index);\n  \
    \  return result;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = arr[0];\n    long index = 0;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    long index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n  \
    \      }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n   \
    \     result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long min_index = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            min_index = i;\n        }\n    }\n    if (min % 2 == 0) {\n     \
    \   result.push_back(min);\n        result.push_back(min_index);\n    }\n    return\
    \ result;", "  std::vector<long> res;\n  if (arr.size() == 0) {\n    return res;\n\
    \  }\n  long min = INT_MAX;\n  long index = 0;\n  for (int i = 0; i < arr.size();\
    \ i++) {\n    if (arr[i] % 2 == 0 && arr[i] < min) {\n      min = arr[i];\n  \
    \    index = i;\n    }\n  }\n  if (min == INT_MAX) {\n    return res;\n  }\n \
    \ res.push_back(min);\n  res.push_back(index);\n  return res;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = INT_MAX;\n    long index = -1;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (index == -1) {\n        return\
    \ result;\n    }\n    result.push_back(min);\n    result.push_back(index);\n \
    \   return result;", "    std::vector<long> res;\n    if(arr.size() == 0) return\
    \ res;\n    long min = INT_MAX;\n    int index = -1;\n    for(int i = 0; i < arr.size();\
    \ i++) {\n        if(arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if(index == -1) return res;\n \
    \   res.push_back(min);\n    res.push_back(index);\n    return res;", "    std::vector<long>\
    \ result;\n    long min = INT_MAX;\n    int index = 0;\n    for (int i = 0; i\
    \ < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n     \
    \       min = arr[i];\n            index = i;\n        }\n    }\n    if (min !=\
    \ INT_MAX) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n     \
    \           min_index = i;\n            }\n        }\n    }\n    if (min % 2 ==\
    \ 0) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    long index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n  \
    \      }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n   \
    \     result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ minEven = INT_MAX;\n    int minEvenIndex = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < minEven) {\n            minEven\
    \ = arr[i];\n            minEvenIndex = i;\n        }\n    }\n    if (minEvenIndex\
    \ == -1) {\n        return result;\n    }\n    result.push_back(minEven);\n  \
    \  result.push_back(minEvenIndex);\n    return result;", "    std::vector<long>\
    \ result;\n    long min = INT_MAX;\n    long min_index = INT_MAX;\n    for (int\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min)\
    \ {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n\
    \    if (min == INT_MAX) {\n        return result;\n    }\n    result.push_back(min);\n\
    \    result.push_back(min_index);\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long min_index = 0;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n  \
    \              min = arr[i];\n                min_index = i;\n            }\n\
    \        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n \
    \       result.push_back(min_index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    int index = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = INT_MAX;\n    long index = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min == INT_MAX) {\n       \
    \ return result;\n    }\n    result.push_back(min);\n    result.push_back(index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    long index = 0;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n     \
    \           min_index = i;\n            }\n        }\n    }\n    if (min % 2 ==\
    \ 0) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) return result;\n    long min = LONG_MAX;\n    long index = -1;\n    for\
    \ (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] <\
    \ min) {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    if (index == -1) return result;\n    result.push_back(min);\n    result.push_back(index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = LONG_MAX;\n    long index =\
    \ 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0\
    \ && arr[i] < min) {\n            min = arr[i];\n            index = i;\n    \
    \    }\n    }\n    if (min == LONG_MAX) {\n        return result;\n    }\n   \
    \ result.push_back(min);\n    result.push_back(index);\n    return result;", " \
    \   std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    long min = arr[0];\n    long index = 0;\n    for (long i = 0; i <\
    \ arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n       \
    \     min = arr[i];\n            index = i;\n        }\n    }\n    if (min % 2\
    \ == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    if(arr.size() ==\
    \ 0) return res;\n    long min = INT_MAX;\n    int index = 0;\n    for(int i =\
    \ 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n   \
    \         min = arr[i];\n            index = i;\n        }\n    }\n    if(min\
    \ == INT_MAX) return res;\n    res.push_back(min);\n    res.push_back(index);\n\
    \    return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = INT_MAX;\n    long index = -1;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (index == -1) {\n        return result;\n    }\n    result.push_back(min);\n\
    \    result.push_back(index);\n    return result;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min = INT_MAX;\n\
    \    int index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    if (index == -1) {\n        return result;\n    }\n\
    \    result.push_back(min);\n    result.push_back(index);\n    return result;",
  "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    long min = arr[0];\n    long minIndex = 0;\n    bool hasEven = false;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n\
    \            hasEven = true;\n            if (arr[i] < min) {\n              \
    \  min = arr[i];\n                minIndex = i;\n            }\n        }\n  \
    \  }\n    if (hasEven) {\n        result.push_back(min);\n        result.push_back(minIndex);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min_even = LONG_MAX;\n    long\
    \ min_even_index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n \
    \           min_even_index = i;\n        }\n    }\n    if (min_even_index == -1)\
    \ {\n        return result;\n    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> res;\n    if(arr.size() == 0)\n \
    \       return res;\n    long min = arr[0];\n    long index = 0;\n    for(long\
    \ i = 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0){\n            if(arr[i]\
    \ < min){\n                min = arr[i];\n                index = i;\n       \
    \     }\n        }\n    }\n    if(min % 2 == 0){\n        res.push_back(min);\n\
    \        res.push_back(index);\n    }\n    return res;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long minIndex = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            minIndex = i;\n        }\n    }\n    if (min % 2 == 0) {\n      \
    \  result.push_back(min);\n        result.push_back(minIndex);\n    }\n    return\
    \ result;"]
stop_tokens:
- "\n}"

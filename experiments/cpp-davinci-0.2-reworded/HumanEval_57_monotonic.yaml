name: HumanEval_57_monotonic
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true is vector elements\
  \ are monotonically increasing or decreasing.\n// >>> monotonic((std::vector<long>({(long)1,\
  \ (long)2, (long)4, (long)20})))\n// (true)\n// >>> monotonic((std::vector<long>({(long)1,\
  \ (long)20, (long)4, (long)10})))\n// (false)\n// >>> monotonic((std::vector<long>({(long)4,\
  \ (long)1, (long)0, (long)-10})))\n// (true)\nbool monotonic(std::vector<long> l)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = monotonic;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)4, (long)10}))) == (true));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)4, (long)20}))) == (true));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)20, (long)4, (long)10}))) == (false));\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)1, (long)0, (long)-10}))) == (true));\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)1, (long)1, (long)0}))) == (true));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)2, (long)5, (long)60}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)60}))) == (true));\n    assert(candidate((std::vector<long>({(long)9,\
  \ (long)9, (long)9, (long)9}))) == (true));\n}\n"
completions: ["    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing\
    \ = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n  \
    \      }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    bool increasing =\
    \ true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n\
    \        if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n\
    \        if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n\
    \    }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n   \
    \     return true;\n    }\n    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1])\
    \ {\n            increasing = false;\n        }\n        if (l[i] > l[i - 1])\
    \ {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n  \
    \          increasing = false;\n        }\n        if (l[i] > l[i - 1]) {\n  \
    \          decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() == 0) return true;\n    long prev = l[0];\n    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < prev) {\n            increasing = false;\n        }\n\
    \        if (l[i] > prev) {\n            decreasing = false;\n        }\n    \
    \    prev = l[i];\n    }\n    return increasing || decreasing;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    if (l.size() <= 1) {\n        return true;\n\
    \    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() -\
    \ 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n \
    \               return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    int flag = 0;\n    for(int i = 0; i < l.size()\
    \ - 1; i++) {\n        if(l[i] < l[i + 1]) {\n            if(flag == -1) {\n \
    \               return false;\n            }\n            flag = 1;\n        }\n\
    \        else if(l[i] > l[i + 1]) {\n            if(flag == 1) {\n           \
    \     return false;\n            }\n            flag = -1;\n        }\n    }\n\
    \    return true;", "    if (l.size() <= 1) {\n        return true;\n    }\n \
    \   bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n  \
    \      }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    bool increasing =\
    \ true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n\
    \        if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n\
    \        if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n\
    \    }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n   \
    \     return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    if (l.size() <= 1) return true;\n\
    \    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    // YOUR\
    \ CODE HERE\n    int n = l.size();\n    if(n <= 1)\n        return true;\n   \
    \ int i = 0;\n    while(i < n-1 && l[i] <= l[i+1])\n        i++;\n    if(i ==\
    \ n-1)\n        return true;\n    i = 0;\n    while(i < n-1 && l[i] >= l[i+1])\n\
    \        i++;\n    if(i == n-1)\n        return true;\n    return false;", " \
    \   if (l.size() == 0) {\n        return true;\n    }\n    long prev = l[0];\n\
    \    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] < prev) {\n            increasing = false;\n\
    \        }\n        if (l[i] > prev) {\n            decreasing = false;\n    \
    \    }\n        prev = l[i];\n    }\n    return increasing || decreasing;", " \
    \   if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) return true;\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) return false;\n        } else {\n            if (l[i] < l[i + 1])\
    \ return false;\n        }\n    }\n    return true;", "    if (l.size() <= 1)\
    \ {\n        return true;\n    }\n    if (l[0] < l[1]) {\n        for (int i =\
    \ 1; i < l.size() - 1; i++) {\n            if (l[i] > l[i + 1]) {\n          \
    \      return false;\n            }\n        }\n    } else if (l[0] > l[1]) {\n\
    \        for (int i = 1; i < l.size() - 1; i++) {\n            if (l[i] < l[i\
    \ + 1]) {\n                return false;\n            }\n        }\n    } else\
    \ {\n        for (int i = 1; i < l.size() - 1; i++) {\n            if (l[i] !=\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    // Your code here\n    int i,j,k;\n    int n=l.size();\n\
    \    for(i=0;i<n-1;i++)\n    {\n        if(l[i]<l[i+1])\n        {\n         \
    \   for(j=i+1;j<n-1;j++)\n            {\n                if(l[j]>l[j+1])\n   \
    \             {\n                    return false;\n                }\n      \
    \      }\n            return true;\n        }\n        else if(l[i]>l[i+1])\n\
    \        {\n            for(k=i+1;k<n-1;k++)\n            {\n                if(l[k]<l[k+1])\n\
    \                {\n                    return false;\n                }\n   \
    \         }\n            return true;\n        }\n    }\n    return true;", " \
    \   bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ == 0) {\n        return true;\n    }\n    long prev = l[0];\n    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < prev) {\n            increasing = false;\n        }\n\
    \        if (l[i] > prev) {\n            decreasing = false;\n        }\n    \
    \    prev = l[i];\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i -\
    \ 1]) {\n            increasing = false;\n        }\n        if (l[i] > l[i -\
    \ 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "  bool increasing = true;\n  bool decreasing = true;\n  for\
    \ (int i = 1; i < l.size(); i++) {\n    if (l[i] < l[i - 1]) {\n      increasing\
    \ = false;\n    }\n    if (l[i] > l[i - 1]) {\n      decreasing = false;\n   \
    \ }\n  }\n  return increasing || decreasing;", "    if (l.size() <= 1) {\n   \
    \     return true;\n    }\n    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1])\
    \ {\n            increasing = false;\n        }\n        if (l[i] > l[i - 1])\
    \ {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "  if (l.size() == 0) {\n    return true;\n  }\n  bool increasing\
    \ = true;\n  bool decreasing = true;\n  for (int i = 1; i < l.size(); i++) {\n\
    \    if (l[i] < l[i - 1]) {\n      increasing = false;\n    }\n    if (l[i] >\
    \ l[i - 1]) {\n      decreasing = false;\n    }\n  }\n  return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    int\
    \ n = l.size();\n    if (n == 1) return true;\n    bool inc = l[1] > l[0];\n \
    \   for (int i = 2; i < n; i++) {\n        if (inc && l[i] < l[i-1]) return false;\n\
    \        if (!inc && l[i] > l[i-1]) return false;\n    }\n    return true;", " \
    \   bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n  \
    \      }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    if (l.size() == 0)\
    \ {\n        return true;\n    }\n    int sign = 0;\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > l[i - 1]) {\n            if (sign == 0) {\n     \
    \           sign = 1;\n            } else if (sign == -1) {\n                return\
    \ false;\n            }\n        } else if (l[i] < l[i - 1]) {\n            if\
    \ (sign == 0) {\n                sign = -1;\n            } else if (sign == 1)\
    \ {\n                return false;\n            }\n        }\n    }\n    return\
    \ true;", "    if (l.size() <= 1) return true;\n    bool increasing = l[0] < l[1];\n\
    \    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n   \
    \         if (l[i] > l[i + 1]) return false;\n        } else {\n            if\
    \ (l[i] < l[i + 1]) return false;\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n  \
    \      }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    if (l.size() < 2)\
    \ return true;\n    bool inc = l[0] < l[1];\n    for (int i = 1; i < l.size()\
    \ - 1; i++) {\n        if (inc && l[i] > l[i + 1]) return false;\n        if (!inc\
    \ && l[i] < l[i + 1]) return false;\n    }\n    return true;", "    if (l.size()\
    \ < 2) {\n        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i -\
    \ 1]) {\n            increasing = false;\n        }\n        if (l[i] > l[i -\
    \ 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 2) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    // Your code here\n    bool flag = true;\n    if(l.size()\
    \ == 1)\n        return flag;\n    if(l[0] < l[1])\n    {\n        for(int i =\
    \ 1; i < l.size() - 1; i++)\n        {\n            if(l[i] > l[i + 1])\n    \
    \        {\n                flag = false;\n                break;\n          \
    \  }\n        }\n    }\n    else if(l[0] > l[1])\n    {\n        for(int i = 1;\
    \ i < l.size() - 1; i++)\n        {\n            if(l[i] < l[i + 1])\n       \
    \     {\n                flag = false;\n                break;\n            }\n\
    \        }\n    }\n    else\n    {\n        for(int i = 1; i < l.size() - 1; i++)\n\
    \        {\n            if(l[i] != l[i + 1])\n            {\n                flag\
    \ = false;\n                break;\n            }\n        }\n    }\n    return\
    \ flag;", "    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1])\n            increasing\
    \ = false;\n        if (l[i] > l[i - 1])\n            decreasing = false;\n  \
    \  }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n     \
    \   return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i =\
    \ 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing && l[i] > l[i + 1]) {\n\
    \            return false;\n        }\n        if (!increasing && l[i] < l[i +\
    \ 1]) {\n            return false;\n        }\n    }\n    return true;", "   \
    \ int n = l.size();\n    if (n <= 1) return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < n; i++) {\n        if (increasing) {\n    \
    \        if (l[i] < l[i-1]) return false;\n        } else {\n            if (l[i]\
    \ > l[i-1]) return false;\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    if (l.size() == 0) {\n        return true;\n\
    \    }\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n  \
    \      }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    bool increasing =\
    \ true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n\
    \        if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n\
    \        if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n\
    \    }\n    return increasing || decreasing;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    if (l.size() == 0) {\n        return true;\n\
    \    }\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n  \
    \      }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    int n = l.size();\n\
    \    if (n == 1) {\n        return true;\n    }\n    int i = 0;\n    while (i\
    \ < n - 1 && l[i] == l[i + 1]) {\n        i++;\n    }\n    if (i == n - 1) {\n\
    \        return true;\n    }\n    bool increasing = l[i] < l[i + 1];\n    for\
    \ (int j = i + 1; j < n - 1; j++) {\n        if (increasing) {\n            if\
    \ (l[j] > l[j + 1]) {\n                return false;\n            }\n        }\
    \ else {\n            if (l[j] < l[j + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    if (l.size() <= 1) {\n        return\
    \ true;\n    }\n    int sign = 0;\n    for (int i = 1; i < l.size(); i++) {\n\
    \        int s = l[i] - l[i - 1];\n        if (s == 0) {\n            continue;\n\
    \        }\n        if (sign == 0) {\n            sign = s;\n        } else if\
    \ (sign * s < 0) {\n            return false;\n        }\n    }\n    return true;",
  "    int n = l.size();\n    if (n == 1) {\n        return true;\n    }\n    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i < n;\
    \ i++) {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n  \
    \      }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    bool increasing =\
    \ true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n\
    \        if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n\
    \        if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n\
    \    }\n    return increasing || decreasing;", "    // Your code here\n    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for(int i = 0; i < l.size()-1;\
    \ i++){\n        if(l[i] > l[i+1]){\n            increasing = false;\n       \
    \ }\n        if(l[i] < l[i+1]){\n            decreasing = false;\n        }\n\
    \    }\n    return increasing || decreasing;", "    if (l.size() == 0) {\n   \
    \     return true;\n    }\n    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1])\
    \ {\n            increasing = false;\n        }\n        if (l[i] > l[i - 1])\
    \ {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n  \
    \          increasing = false;\n        }\n        if (l[i] > l[i - 1]) {\n  \
    \          decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    int\
    \ n = l.size();\n    if (n <= 1) {\n        return true;\n    }\n    int i = 0;\n\
    \    while (i < n - 1) {\n        if (l[i] == l[i + 1]) {\n            i += 1;\n\
    \        } else {\n            break;\n        }\n    }\n    if (i == n - 1) {\n\
    \        return true;\n    }\n    bool inc = l[i] < l[i + 1];\n    while (i <\
    \ n - 1) {\n        if (inc) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n     \
    \   i += 1;\n    }\n    return true;", "    if (l.size() <= 1) {\n        return\
    \ true;\n    }\n    bool increasing = true;\n    bool decreasing = true;\n   \
    \ for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n     \
    \       increasing = false;\n        }\n        if (l[i] > l[i - 1]) {\n     \
    \       decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n  \
    \      }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    if (l.size() < 2)\
    \ {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    if (l.size() <= 1) {\n        return\
    \ true;\n    }\n    bool increasing = true;\n    bool decreasing = true;\n   \
    \ for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n     \
    \       increasing = false;\n        }\n        if (l[i] > l[i - 1]) {\n     \
    \       decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing =\
    \ false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing =\
    \ false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    if (l.size() <= 1) {\n        return true;\n\
    \    }\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    int n = l.size();\n\
    \    if (n == 1) {\n        return true;\n    }\n    int i = 0;\n    while (i\
    \ < n - 1) {\n        if (l[i] == l[i + 1]) {\n            i++;\n            continue;\n\
    \        }\n        if (l[i] < l[i + 1]) {\n            break;\n        }\n  \
    \      if (l[i] > l[i + 1]) {\n            break;\n        }\n    }\n    if (i\
    \ == n - 1) {\n        return true;\n    }\n    bool is_increasing = l[i] < l[i\
    \ + 1];\n    for (int j = i + 1; j < n - 1; j++) {\n        if (is_increasing)\
    \ {\n            if (l[j] > l[j + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[j] < l[j + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() < 2) {\n        return true;\n    }\n    bool increasing = l[0] <\
    \ l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    if\
    \ (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    if (l.size() <= 1) {\n        return\
    \ true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size()\
    \ - 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n\
    \                return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1])\
    \ {\n            increasing = false;\n        }\n        if (l[i] > l[i - 1])\
    \ {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "  if (l.size() < 2) {\n    return true;\n  }\n  bool increasing\
    \ = l[0] < l[1];\n  for (int i = 1; i < l.size() - 1; i++) {\n    if (increasing)\
    \ {\n      if (l[i] > l[i + 1]) {\n        return false;\n      }\n    } else\
    \ {\n      if (l[i] < l[i + 1]) {\n        return false;\n      }\n    }\n  }\n\
    \  return true;", "    if (l.size() <= 1) {\n        return true;\n    }\n   \
    \ bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n\
    \        if (increasing) {\n            if (l[i] > l[i + 1]) {\n             \
    \   return false;\n            }\n        } else {\n            if (l[i] < l[i\
    \ + 1]) {\n                return false;\n            }\n        }\n    }\n  \
    \  return true;", "    if (l.size() < 2) {\n        return true;\n    }\n    bool\
    \ increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n  \
    \      if (increasing) {\n            if (l[i] > l[i + 1]) {\n               \
    \ return false;\n            }\n        } else {\n            if (l[i] < l[i +\
    \ 1]) {\n                return false;\n            }\n        }\n    }\n    return\
    \ true;", "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing\
    \ = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing\
    \ && l[i] > l[i + 1]) {\n            return false;\n        }\n        if (!increasing\
    \ && l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing\
    \ = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n  \
    \      }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    if (l.size() == 0)\
    \ {\n        return true;\n    }\n    long prev = l[0];\n    bool increasing =\
    \ true;\n    bool decreasing = true;\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < prev) {\n            increasing = false;\n        }\n\
    \        if (l[i] > prev) {\n            decreasing = false;\n        }\n    \
    \    prev = l[i];\n    }\n    return increasing || decreasing;", "  if (l.size()\
    \ < 2) {\n    return true;\n  }\n  bool increasing = l[0] < l[1];\n  for (int\
    \ i = 1; i < l.size() - 1; i++) {\n    if (increasing && l[i] > l[i + 1]) {\n\
    \      return false;\n    }\n    if (!increasing && l[i] < l[i + 1]) {\n     \
    \ return false;\n    }\n  }\n  return true;", "    bool increasing = true;\n \
    \   bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n      \
    \  if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n      \
    \  if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    if (l.size() <= 1) {\n        return\
    \ true;\n    }\n    bool increasing = true;\n    bool decreasing = true;\n   \
    \ for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n     \
    \       increasing = false;\n        }\n        if (l[i] > l[i - 1]) {\n     \
    \       decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    if (l.size() < 2) {\n        return\
    \ true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size()\
    \ - 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n\
    \                return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1])\
    \ {\n            increasing = false;\n        }\n        if (l[i] > l[i - 1])\
    \ {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "\tif (l.size() == 0) {\n\t\treturn true;\n\t}\n\tbool increasing\
    \ = true;\n\tbool decreasing = true;\n\tfor (int i = 1; i < l.size(); i++) {\n\
    \t\tif (l[i - 1] > l[i]) {\n\t\t\tincreasing = false;\n\t\t}\n\t\tif (l[i - 1]\
    \ < l[i]) {\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    //\
    \ Your code here\n    bool increasing = true;\n    bool decreasing = true;\n \
    \   for(int i = 0; i < l.size()-1; i++){\n        if(l[i] < l[i+1]){\n       \
    \     decreasing = false;\n        }\n        if(l[i] > l[i+1]){\n           \
    \ increasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    int n = l.size();\n    if (n == 1) {\n        return true;\n    }\n    bool\
    \ increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i < n;\
    \ i++) {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n  \
    \      }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1)\
    \ {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() == 0) {\n\
    \        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i -\
    \ 1]) {\n            increasing = false;\n        }\n        if (l[i] > l[i -\
    \ 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "  if (l.size() <= 1) {\n    return true;\n  }\n  bool increasing\
    \ = l[0] < l[1];\n  for (int i = 1; i < l.size() - 1; i++) {\n    if (increasing)\
    \ {\n      if (l[i] > l[i + 1]) {\n        return false;\n      }\n    } else\
    \ {\n      if (l[i] < l[i + 1]) {\n        return false;\n      }\n    }\n  }\n\
    \  return true;", "    if (l.size() <= 1) {\n        return true;\n    }\n   \
    \ bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing =\
    \ false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing =\
    \ false;\n        }\n    }\n    return increasing || decreasing;", "    int n\
    \ = l.size();\n    if (n <= 1) {\n        return true;\n    }\n    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 1; i < n; i++) {\n  \
    \      if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n  \
    \      if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n  \
    \  }\n    return increasing || decreasing;", "    bool increasing = true;\n  \
    \  bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n       \
    \ if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n       \
    \ if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    if (l.size() <= 1) {\n        return\
    \ true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size()\
    \ - 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n\
    \                return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    if (l.size() <= 1) return true;\n    bool increasing\
    \ = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) return false;\n        } else {\n      \
    \      if (l[i] < l[i + 1]) return false;\n        }\n    }\n    return true;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing =\
    \ false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing =\
    \ false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ == 0) {\n        return true;\n    }\n    bool is_increasing = true;\n    bool\
    \ is_decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] < l[i - 1]) {\n            is_increasing = false;\n        }\n       \
    \ if (l[i] > l[i - 1]) {\n            is_decreasing = false;\n        }\n    }\n\
    \    return is_increasing || is_decreasing;", "    if (l.size() == 0) {\n    \
    \    return true;\n    }\n    long prev = l[0];\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (long i = 1; i < l.size(); i++) {\n    \
    \    if (l[i] < prev) {\n            increasing = false;\n        }\n        if\
    \ (l[i] > prev) {\n            decreasing = false;\n        }\n        prev =\
    \ l[i];\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1)\
    \ {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for\
    \ (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n          \
    \  if (l[i] > l[i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if (l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;", "    if (l.size() == 0) {\n\
    \        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i -\
    \ 1]) {\n            increasing = false;\n        }\n        if (l[i] > l[i -\
    \ 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "  bool increasing = true;\n  bool decreasing = true;\n  for\
    \ (int i = 1; i < l.size(); i++) {\n    if (l[i] < l[i - 1]) {\n      increasing\
    \ = false;\n    }\n    if (l[i] > l[i - 1]) {\n      decreasing = false;\n   \
    \ }\n  }\n  return increasing || decreasing;", "    if (l.size() <= 1) {\n   \
    \     return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    if (l.size() <= 1) {\n        return true;\n\
    \    }\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    if (l.size() <= 1) {\n        return true;\n\
    \    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() -\
    \ 1; i++) {\n        if (increasing && l[i] > l[i + 1]) {\n            return\
    \ false;\n        }\n        if (!increasing && l[i] < l[i + 1]) {\n         \
    \   return false;\n        }\n    }\n    return true;", "    if (l.size() == 0)\
    \ {\n        return true;\n    }\n    long prev = l[0];\n    bool increasing =\
    \ true;\n    bool decreasing = true;\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < prev) {\n            increasing = false;\n        }\n\
    \        if (l[i] > prev) {\n            decreasing = false;\n        }\n    \
    \    prev = l[i];\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ == 0) {\n        return true;\n    }\n    long prev = l[0];\n    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < prev) {\n            increasing = false;\n        }\n\
    \        if (l[i] > prev) {\n            decreasing = false;\n        }\n    \
    \    prev = l[i];\n    }\n    return increasing || decreasing;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    // Your code here\n    int n = l.size();\n\
    \    if(n==1)\n        return true;\n    bool inc = true;\n    bool dec = true;\n\
    \    for(int i=0;i<n-1;i++)\n    {\n        if(l[i]>l[i+1])\n            inc =\
    \ false;\n        if(l[i]<l[i+1])\n            dec = false;\n    }\n    if(inc\
    \ || dec)\n        return true;\n    return false;", "    if (l.size() == 0) {\n\
    \        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i -\
    \ 1]) {\n            increasing = false;\n        }\n        if (l[i] > l[i -\
    \ 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n  \
    \          increasing = false;\n        }\n        if (l[i] > l[i - 1]) {\n  \
    \          decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing =\
    \ false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing =\
    \ false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    if (l.size() <= 1) {\n        return\
    \ true;\n    }\n    bool increasing = true;\n    bool decreasing = true;\n   \
    \ for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n     \
    \       increasing = false;\n        }\n        if (l[i] > l[i - 1]) {\n     \
    \       decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() == 0) {\n        return true;\n    }\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    if (l.size() <= 1) {\n        return true;\n\
    \    }\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i -\
    \ 1]) {\n            increasing = false;\n        }\n        if (l[i] > l[i -\
    \ 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n  \
    \          increasing = false;\n        }\n        if (l[i] > l[i - 1]) {\n  \
    \          decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    if (l.size() <= 1) {\n        return true;\n    }\n    bool increasing = l[0]\
    \ < l[1];\n    for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing)\
    \ {\n            if (l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] < l[i + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    int\
    \ n = l.size();\n    if (n == 1) {\n        return true;\n    }\n    bool is_increasing\
    \ = l[0] < l[1];\n    for (int i = 1; i < n; i++) {\n        if (is_increasing)\
    \ {\n            if (l[i] < l[i - 1]) {\n                return false;\n     \
    \       }\n        } else {\n            if (l[i] > l[i - 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;", "    long\
    \ n = l.size();\n    if (n == 1) {\n        return true;\n    }\n    long i =\
    \ 0;\n    long j = 1;\n    long sign = l[i] - l[j];\n    while (j < n) {\n   \
    \     if (sign * (l[i] - l[j]) < 0) {\n            return false;\n        }\n\
    \        i = j;\n        j += 1;\n    }\n    return true;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing && l[i] >\
    \ l[i + 1]) {\n            return false;\n        }\n        if (!increasing &&\
    \ l[i] < l[i + 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i -\
    \ 1]) {\n            increasing = false;\n        }\n        if (l[i] > l[i -\
    \ 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing =\
    \ false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing =\
    \ false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    if (l.size() <= 1) {\n        return true;\n\
    \    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() -\
    \ 1; i++) {\n        if (increasing && l[i] > l[i + 1]) {\n            return\
    \ false;\n        }\n        if (!increasing && l[i] < l[i + 1]) {\n         \
    \   return false;\n        }\n    }\n    return true;", "    if (l.size() == 0)\
    \ {\n        return true;\n    }\n    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i -\
    \ 1]) {\n            increasing = false;\n        }\n        if (l[i] > l[i -\
    \ 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() <= 1) {\n        return true;\n    }\n  \
    \  bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing =\
    \ false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing =\
    \ false;\n        }\n    }\n    return increasing || decreasing;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;", "    int n = l.size();\n  \
    \  if (n == 1) {\n        return true;\n    }\n    bool increasing = true;\n \
    \   bool decreasing = true;\n    for (int i = 1; i < n; i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    if (l.size() <= 1) {\n        return true;\n\
    \    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() -\
    \ 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n \
    \               return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    bool increasing = true;\n    bool decreasing =\
    \ true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1])\
    \ {\n            increasing = false;\n        }\n        if (l[i] > l[i - 1])\
    \ {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "\tif (l.size() <= 1) {\n\t\treturn true;\n\t}\n\tbool increasing\
    \ = l[0] < l[1];\n\tfor (int i = 1; i < l.size() - 1; i++) {\n\t\tif (increasing)\
    \ {\n\t\t\tif (l[i] > l[i + 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\tif (l[i] < l[i + 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn true;", "    if (l.size() <= 1) {\n        return true;\n    }\n    int\
    \ direction = 0;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] >\
    \ l[i - 1]) {\n            if (direction == -1) {\n                return false;\n\
    \            }\n            direction = 1;\n        } else if (l[i] < l[i - 1])\
    \ {\n            if (direction == 1) {\n                return false;\n      \
    \      }\n            direction = -1;\n        }\n    }\n    return true;", " \
    \   bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = l[0] < l[1];\n \
    \   for (int i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n    \
    \        if (l[i] > l[i + 1]) {\n                return false;\n            }\n\
    \        } else {\n            if (l[i] < l[i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;", "    std::vector<long>::iterator\
    \ it = l.begin();\n    long prev = *it;\n    it++;\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    while (it != l.end()) {\n        if (*it < prev)\
    \ {\n            increasing = false;\n        }\n        if (*it > prev) {\n \
    \           decreasing = false;\n        }\n        prev = *it;\n        it++;\n\
    \    }\n    return increasing || decreasing;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    if (l.size() <= 1) {\n        return\
    \ true;\n    }\n    int direction = 0;\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > l[i - 1]) {\n            if (direction == -1) {\n    \
    \            return false;\n            }\n            direction = 1;\n      \
    \  } else if (l[i] < l[i - 1]) {\n            if (direction == 1) {\n        \
    \        return false;\n            }\n            direction = -1;\n        }\n\
    \    }\n    return true;", "\tif (l.size() == 0) {\n\t\treturn true;\n\t}\n\t\
    long prev = l[0];\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor\
    \ (long i = 1; i < l.size(); i++) {\n\t\tif (l[i] > prev) {\n\t\t\tdecreasing\
    \ = false;\n\t\t}\n\t\tif (l[i] < prev) {\n\t\t\tincreasing = false;\n\t\t}\n\t\
    \tprev = l[i];\n\t}\n\treturn increasing || decreasing;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "\tif (l.size() <= 1) {\n\t\treturn true;\n\
    \t}\n\tbool increasing = l[0] < l[1];\n\tfor (int i = 1; i < l.size() - 1; i++)\
    \ {\n\t\tif (increasing) {\n\t\t\tif (l[i] > l[i + 1]) {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t} else {\n\t\t\tif (l[i] < l[i + 1]) {\n\t\t\t\treturn false;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn true;", "    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i -\
    \ 1]) {\n            increasing = false;\n        }\n        if (l[i] > l[i -\
    \ 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n  \
    \          increasing = false;\n        }\n        if (l[i] > l[i - 1]) {\n  \
    \          decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing =\
    \ false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing =\
    \ false;\n        }\n    }\n    return increasing || decreasing;", "    if (l.size()\
    \ <= 1) {\n        return true;\n    }\n    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    bool increasing = true;\n    bool decreasing\
    \ = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i -\
    \ 1]) {\n            increasing = false;\n        }\n        if (l[i] > l[i -\
    \ 1]) {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;", "    if (l.size() == 0) {\n        return true;\n    }\n  \
    \  bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing =\
    \ false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing =\
    \ false;\n        }\n    }\n    return increasing || decreasing;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;", "    if (l.size() == 0) {\n\
    \        return true;\n    }\n    int direction = 0;\n    for (int i = 1; i <\
    \ l.size(); i++) {\n        if (l[i] > l[i - 1]) {\n            if (direction\
    \ == -1) {\n                return false;\n            }\n            direction\
    \ = 1;\n        } else if (l[i] < l[i - 1]) {\n            if (direction == 1)\
    \ {\n                return false;\n            }\n            direction = -1;\n\
    \        }\n    }\n    return true;", "    if (l.size() <= 1) {\n        return\
    \ true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size()\
    \ - 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n\
    \                return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    if (l.size() <= 1) {\n        return true;\n \
    \   }\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;", "    int\
    \ i = 0;\n    int j = 1;\n    int n = l.size();\n    int flag = 0;\n    while(j\
    \ < n) {\n        if(l[i] < l[j]) {\n            flag = 1;\n            break;\n\
    \        }\n        else if(l[i] > l[j]) {\n            flag = 2;\n          \
    \  break;\n        }\n        i++;\n        j++;\n    }\n    if(flag == 0) {\n\
    \        return true;\n    }\n    i = 0;\n    j = 1;\n    while(j < n) {\n   \
    \     if(flag == 1) {\n            if(l[i] > l[j]) {\n                return false;\n\
    \            }\n        }\n        else if(flag == 2) {\n            if(l[i] <\
    \ l[j]) {\n                return false;\n            }\n        }\n        i++;\n\
    \        j++;\n    }\n    return true;", "    if (l.size() <= 1) {\n        return\
    \ true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size()\
    \ - 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n\
    \                return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "\tif (l.size() <= 1) {\n\t\treturn true;\n\t}\n\t\
    bool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 1; i < l.size();\
    \ i++) {\n\t\tif (l[i] < l[i - 1]) {\n\t\t\tincreasing = false;\n\t\t}\n\t\tif\
    \ (l[i] > l[i - 1]) {\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing\
    \ || decreasing;", "    if (l.size() == 0) {\n        return true;\n    }\n  \
    \  bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() - 1; i++)\
    \ {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n         \
    \       return false;\n            }\n        } else {\n            if (l[i] <\
    \ l[i + 1]) {\n                return false;\n            }\n        }\n    }\n\
    \    return true;", "    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n  \
    \          increasing = false;\n        }\n        if (l[i] > l[i - 1]) {\n  \
    \          decreasing = false;\n        }\n    }\n    return increasing || decreasing;",
  "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            increasing =\
    \ false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing =\
    \ false;\n        }\n    }\n    return increasing || decreasing;", "    bool increasing\
    \ = true;\n    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < l[i - 1]) {\n            increasing = false;\n       \
    \ }\n        if (l[i] > l[i - 1]) {\n            decreasing = false;\n       \
    \ }\n    }\n    return increasing || decreasing;", "    if (l.size() <= 1) {\n\
    \        return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int\
    \ i = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() <= 1) {\n  \
    \      return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    if (l.size() < 2) {\n   \
    \     return true;\n    }\n    bool increasing = l[0] < l[1];\n    for (int i\
    \ = 1; i < l.size() - 1; i++) {\n        if (increasing) {\n            if (l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if (l[i] < l[i + 1]) {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;", "    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] < l[i - 1]) {\n            increasing = false;\n        }\n     \
    \   if (l[i] > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n\
    \    return increasing || decreasing;", "    bool increasing = true;\n    bool\
    \ decreasing = true;\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < l[i - 1]) {\n            increasing = false;\n        }\n        if (l[i]\
    \ > l[i - 1]) {\n            decreasing = false;\n        }\n    }\n    return\
    \ increasing || decreasing;", "    if (l.size() <= 1) {\n        return true;\n\
    \    }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() -\
    \ 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n \
    \               return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    if (l.size() <= 1) {\n        return true;\n \
    \   }\n    bool increasing = l[0] < l[1];\n    for (int i = 1; i < l.size() -\
    \ 1; i++) {\n        if (increasing) {\n            if (l[i] > l[i + 1]) {\n \
    \               return false;\n            }\n        } else {\n            if\
    \ (l[i] < l[i + 1]) {\n                return false;\n            }\n        }\n\
    \    }\n    return true;", "    int n = l.size();\n    if (n == 1) {\n       \
    \ return true;\n    }\n    bool increasing = true;\n    bool decreasing = true;\n\
    \    for (int i = 1; i < n; i++) {\n        if (l[i] < l[i - 1]) {\n         \
    \   increasing = false;\n        }\n        if (l[i] > l[i - 1]) {\n         \
    \   decreasing = false;\n        }\n    }\n    return increasing || decreasing;"]
stop_tokens:
- "\n}"

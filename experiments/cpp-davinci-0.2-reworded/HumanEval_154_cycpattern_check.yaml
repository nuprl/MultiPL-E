name: HumanEval_154_cycpattern_check
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given 2 words. You\
  \ need to return true if the second word or any of its rotations is a substring\
  \ in the first word\n// >>> cycpattern_check((\"abcd\"), (\"abd\"))\n// (false)\n\
  // >>> cycpattern_check((\"hello\"), (\"ell\"))\n// (true)\n// >>> cycpattern_check((\"\
  whassup\"), (\"psus\"))\n// (false)\n// >>> cycpattern_check((\"abab\"), (\"baa\"\
  ))\n// (true)\n// >>> cycpattern_check((\"efef\"), (\"eeff\"))\n// (false)\n// >>>\
  \ cycpattern_check((\"himenss\"), (\"simen\"))\n// (true)\nbool cycpattern_check(std::string\
  \ a, std::string b) {\n"
tests: "}\nint main() {\n    auto candidate = cycpattern_check;\n    assert(candidate((\"\
  xyzw\"), (\"xyw\")) == (false));\n    assert(candidate((\"yello\"), (\"ell\")) ==\
  \ (true));\n    assert(candidate((\"whattup\"), (\"ptut\")) == (false));\n    assert(candidate((\"\
  efef\"), (\"fee\")) == (true));\n    assert(candidate((\"abab\"), (\"aabb\")) ==\
  \ (false));\n    assert(candidate((\"winemtt\"), (\"tinem\")) == (true));\n}\n"
completions: ["    if(a.length() < b.length())\n        return false;\n    std::string\
    \ temp = b;\n    for(int i = 0; i < b.length(); i++) {\n        if(a.find(temp)\
    \ != std::string::npos)\n            return true;\n        char c = temp[0];\n\
    \        temp.erase(0, 1);\n        temp += c;\n    }\n    return false;", " \
    \   // Write your code here\n    int n = a.length();\n    int m = b.length();\n\
    \    if(m > n)\n        return false;\n    std::string s = a + a;\n    for(int\
    \ i = 0; i < n; i++) {\n        if(s.substr(i, m) == b)\n            return true;\n\
    \    }\n    return false;", "    int n = a.length();\n    int m = b.length();\n\
    \    if(m > n) return false;\n    std::string s = a + a;\n    for(int i = 0; i\
    \ < n; i++) {\n        if(s.substr(i, m) == b) return true;\n    }\n    return\
    \ false;", "    int len = a.length();\n    int len2 = b.length();\n    if(len2>len)\n\
    \        return false;\n    for(int i=0;i<len;i++){\n        if(a[i]==b[0]){\n\
    \            int j=0;\n            while(j<len2){\n                if(a[(i+j)%len]!=b[j])\n\
    \                    break;\n                j++;\n            }\n           \
    \ if(j==len2)\n                return true;\n        }\n    }\n    return false;",
  "    int n = a.length();\n    int m = b.length();\n    if(n < m) return false;\n\
    \    for(int i = 0; i < n; i++) {\n        int j = 0;\n        while(j < m &&\
    \ i + j < n && a[i + j] == b[j]) {\n            j++;\n        }\n        if(j\
    \ == m) return true;\n    }\n    return false;", "    // Write your code here\n\
    \    int n = a.length();\n    int m = b.length();\n    if(m>n)\n        return\
    \ false;\n    int i=0,j=0;\n    while(i<n)\n    {\n        if(a[i]==b[j])\n  \
    \      {\n            i++;\n            j++;\n        }\n        else\n      \
    \  {\n            i++;\n            j=0;\n        }\n        if(j==m)\n      \
    \      return true;\n    }\n    return false;", "    if(a.length()<b.length())\n\
    \        return false;\n    int i=0,j=0;\n    while(i<a.length()){\n        if(a[i]==b[j]){\n\
    \            i++;\n            j++;\n        }\n        else{\n            i++;\n\
    \            j=0;\n        }\n        if(j==b.length())\n            return true;\n\
    \    }\n    return false;", "    // Write your code here\n    // return true if\
    \ b is a substring of a\n    // return false otherwise\n    // if b is a substring\
    \ of a, then b is a substring of a+a\n    // if b is a substring of a+a, then\
    \ b is a substring of a+a+a\n    // if b is a substring of a+a+a, then b is a\
    \ substring of a+a+a+a\n    // if b is a substring of a+a+a+a, then b is a substring\
    \ of a+a+a+a+a\n    // if b is a substring of a+a+a+a+a, then b is a substring\
    \ of a+a+a+a+a+a\n    // if b is a substring of a+a+a+a+a+a, then b is a substring\
    \ of a+a+a+a+a+a+a\n    // if b is a substring of a+a+a+a+a+a+a, then b is a substring\
    \ of a+a+a+a+a+a+a+a\n    // if b is a substring of a+a+a+a+a+a+a+a, then b is\
    \ a substring of a+a+a+a+a+a+a+a+a\n    // if b is a substring of a+a+a+a+a+a+a+a+a,\
    \ then b is a substring of a+a+a+a+a+a+a+a+a+a\n    // if b is a substring of\
    \ a+a+a+a+a+a+a+a+a+a, then b is a substring of a+a+a+a+a+a+a+a+a+a+a\n    //\
    \ if b is a substring of a+a+a+a+a+a+a+a+a+a+a, then b is a substring of a+a+a+a+a+a+a+a+a+a+a+a\n\
    \    // if b is a substring of a+a+a+a+a+a+a+", "    int n = a.length();\n   \
    \ int m = b.length();\n    if(m > n)\n        return false;\n    std::string s\
    \ = a + a;\n    for(int i = 0; i < n; i++) {\n        if(s.substr(i, m) == b)\n\
    \            return true;\n    }\n    return false;", "    int n = a.length();\n\
    \    int m = b.length();\n    if(n<m)\n        return false;\n    for(int i=0;i<n;i++){\n\
    \        if(a[i]==b[0]){\n            int j=0;\n            while(j<m && a[(i+j)%n]==b[j])\n\
    \                j++;\n            if(j==m)\n                return true;\n  \
    \      }\n    }\n    return false;", "    if(a.length() < b.length()) return false;\n\
    \    if(a.length() == b.length()) return a == b;\n    int n = a.length();\n  \
    \  int m = b.length();\n    for(int i = 0; i < n; i++) {\n        if(a[i] == b[0])\
    \ {\n            int j = 0;\n            for(; j < m; j++) {\n               \
    \ if(a[(i + j) % n] != b[j]) break;\n            }\n            if(j == m) return\
    \ true;\n        }\n    }\n    return false;", "    int i, j;\n    int n = a.length();\n\
    \    int m = b.length();\n    for (i = 0; i < n; i++) {\n        for (j = 0; j\
    \ < m; j++) {\n            if (a[(i + j) % n] != b[j]) {\n                break;\n\
    \            }\n        }\n        if (j == m) {\n            return true;\n \
    \       }\n    }\n    return false;", "    if(a.size() < b.size())\n        return\
    \ false;\n    int n = a.size();\n    int m = b.size();\n    for(int i = 0; i <\
    \ n; i++) {\n        std::string temp = a.substr(i, n - i) + a.substr(0, i);\n\
    \        if(temp.find(b) != std::string::npos)\n            return true;\n   \
    \ }\n    return false;", "    if(a.size() < b.size()) return false;\n    if(a.size()\
    \ == b.size()) return a == b;\n    int i = 0, j = 0;\n    while(i < a.size() &&\
    \ j < b.size()) {\n        if(a[i] == b[j]) {\n            i++;\n            j++;\n\
    \        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n\
    \    }\n    if(j == b.size()) return true;\n    i = 0;\n    j = 0;\n    while(i\
    \ < a.size() && j < b.size()) {\n        if(a[i] == b[j]) {\n            i++;\n\
    \            j++;\n        } else {\n            i = i - j + 1;\n            j\
    \ = 0;\n        }\n    }\n    if(j == b.size()) return true;\n    return false;",
  "    int n = a.length();\n    int m = b.length();\n    if(n < m)\n        return\
    \ false;\n    std::string s = a + a;\n    for(int i = 0; i < n; i++) {\n     \
    \   if(s.substr(i, m) == b)\n            return true;\n    }\n    return false;",
  "    // Write your code here\n    int n = a.length();\n    int m = b.length();\n\
    \    if(n<m)\n        return false;\n    std::string s = a+a;\n    for(int i=0;i<n;i++){\n\
    \        std::string temp = s.substr(i,m);\n        if(temp==b)\n            return\
    \ true;\n    }\n    return false;", "    // Write your code here\n    int n =\
    \ a.length();\n    int m = b.length();\n    if(m>n)\n        return false;\n \
    \   std::string s = a+a;\n    for(int i=0;i<n;i++){\n        if(s.substr(i,m)==b)\n\
    \            return true;\n    }\n    return false;", "    if(a.length()<b.length())\n\
    \        return false;\n    if(a.length()==b.length()){\n        if(a==b)\n  \
    \          return true;\n        else\n            return false;\n    }\n    int\
    \ i=0;\n    while(i<a.length()){\n        if(a[i]==b[0]){\n            int j=0;\n\
    \            while(j<b.length()){\n                if(a[(i+j)%a.length()]!=b[j])\n\
    \                    break;\n                j++;\n            }\n           \
    \ if(j==b.length())\n                return true;\n        }\n        i++;\n \
    \   }\n    return false;", "    // Write your code here\n    int n = a.length();\n\
    \    int m = b.length();\n    if(n < m)\n        return false;\n    for(int i\
    \ = 0; i < n; i++){\n        if(a[i] == b[0]){\n            int j = 0;\n     \
    \       while(j < m && a[(i + j) % n] == b[j])\n                j++;\n       \
    \     if(j == m)\n                return true;\n        }\n    }\n    return false;",
  "    if(a.length()<b.length())\n        return false;\n    if(a.length()==b.length()){\n\
    \        if(a==b)\n            return true;\n        else\n            return\
    \ false;\n    }\n    std::string temp = b;\n    for(int i=0;i<b.length();i++){\n\
    \        if(a.find(temp)!=std::string::npos)\n            return true;\n     \
    \   std::rotate(temp.begin(),temp.begin()+1,temp.end());\n    }\n    return false;",
  "    // Write your code here\n    int n = a.length();\n    int m = b.length();\n\
    \    if(n<m)\n        return false;\n    for(int i=0;i<n;i++){\n        int j;\n\
    \        for(j=0;j<m;j++){\n            if(a[(i+j)%n]!=b[j])\n               \
    \ break;\n        }\n        if(j==m)\n            return true;\n    }\n    return\
    \ false;", "    // Write your code here\n    int n = a.length();\n    int m =\
    \ b.length();\n    if(m>n)\n        return false;\n    for(int i=0;i<n;i++){\n\
    \        if(a[i]==b[0]){\n            int j=0;\n            for(j=0;j<m;j++){\n\
    \                if(a[(i+j)%n]!=b[j])\n                    break;\n          \
    \  }\n            if(j==m)\n                return true;\n        }\n    }\n \
    \   return false;", "    // Write your code here\n    int n=a.length();\n    int\
    \ m=b.length();\n    if(n<m)\n        return false;\n    for(int i=0;i<n;i++)\n\
    \    {\n        int j=0;\n        while(j<m && a[(i+j)%n]==b[j])\n           \
    \ j++;\n        if(j==m)\n            return true;\n    }\n    return false;",
  "    // your code here\n    int n = a.length();\n    int m = b.length();\n    if(n<m)\n\
    \        return false;\n    int i=0,j=0;\n    while(i<n){\n        if(a[i]==b[j]){\n\
    \            i++;\n            j++;\n        }\n        else{\n            i++;\n\
    \            j=0;\n        }\n        if(j==m)\n            return true;\n   \
    \ }\n    return false;", "    // Write your code here\n    int n = a.length();\n\
    \    int m = b.length();\n    if(m>n)\n        return false;\n    for(int i=0;i<n;i++){\n\
    \        if(a[i]==b[0]){\n            int j=0;\n            int k=i;\n       \
    \     while(j<m && k<n){\n                if(a[k]==b[j]){\n                  \
    \  j++;\n                    k++;\n                }\n                else\n \
    \                   break;\n            }\n            if(j==m)\n            \
    \    return true;\n            else if(k==n){\n                j=0;\n        \
    \        while(j<m && k<n){\n                    if(a[k]==b[j]){\n           \
    \             j++;\n                        k++;\n                    }\n    \
    \                else\n                        break;\n                }\n   \
    \             if(j==m)\n                    return true;\n            }\n    \
    \    }\n    }\n    return false;", "    if(a.size() < b.size())\n        return\
    \ false;\n    int i = 0;\n    while(i < a.size()) {\n        if(a[i] == b[0])\
    \ {\n            int j = 0;\n            while(j < b.size() && a[(i + j) % a.size()]\
    \ == b[j]) {\n                j++;\n            }\n            if(j == b.size())\n\
    \                return true;\n        }\n        i++;\n    }\n    return false;",
  "    // Write your code here\n    // return true if b is a substring of a\n    //\
    \ return false otherwise\n    if(a.size()<b.size())\n        return false;\n \
    \   int i=0,j=0;\n    while(i<a.size()){\n        if(a[i]==b[j]){\n          \
    \  i++;\n            j++;\n        }\n        else{\n            i=i-j+1;\n  \
    \          j=0;\n        }\n        if(j==b.size())\n            return true;\n\
    \    }\n    return false;", "    int n = a.length();\n    int m = b.length();\n\
    \    if(n < m) return false;\n    std::string s = a + a;\n    for(int i = 0; i\
    \ < n; i++) {\n        std::string t = s.substr(i, m);\n        if(t == b) return\
    \ true;\n    }\n    return false;", "    int i,j,k;\n    int n = a.length();\n\
    \    int m = b.length();\n    for(i=0;i<n;i++){\n        if(a[i]==b[0]){\n   \
    \         for(j=0;j<m;j++){\n                if(a[(i+j)%n]!=b[j]){\n         \
    \           break;\n                }\n            }\n            if(j==m){\n\
    \                return true;\n            }\n        }\n    }\n    return false;",
  "    int n = a.length();\n    int m = b.length();\n    if(n<m)\n        return false;\n\
    \    std::string temp = a+a;\n    if(temp.find(b) != std::string::npos)\n    \
    \    return true;\n    return false;", "    int n = a.length();\n    int m = b.length();\n\
    \    if(m > n)\n        return false;\n    std::string s = a + a;\n    int i =\
    \ 0, j = 0;\n    while(i < n && j < m) {\n        if(s[i] == b[j]) {\n       \
    \     i++;\n            j++;\n        }\n        else {\n            i = i - j\
    \ + 1;\n            j = 0;\n        }\n    }\n    if(j == m)\n        return true;\n\
    \    return false;", "    int n = a.length();\n    int m = b.length();\n    if(m\
    \ > n) return false;\n    std::string s = a + a;\n    for(int i = 0; i < n; i++)\
    \ {\n        if(s.substr(i, m) == b) {\n            return true;\n        }\n\
    \    }\n    return false;", "    int n = a.length();\n    int m = b.length();\n\
    \    if(n<m) return false;\n    a+=a;\n    for(int i=0;i<n;i++){\n        if(a.substr(i,m)==b)\
    \ return true;\n    }\n    return false;", "    std::string temp = b;\n    for(int\
    \ i = 0; i < b.length(); i++) {\n        temp = temp.substr(1, temp.length() -\
    \ 1) + temp[0];\n        if(temp == a) {\n            return true;\n        }\n\
    \    }\n    return false;", "    // Write your code here\n    int n = a.length();\n\
    \    int m = b.length();\n    if(n<m)\n        return false;\n    string temp\
    \ = a+a;\n    int i = 0;\n    int j = 0;\n    while(i<n && j<m){\n        if(temp[i]\
    \ == b[j]){\n            i++;\n            j++;\n        }\n        else{\n  \
    \          i = i-j+1;\n            j = 0;\n        }\n    }\n    if(j == m)\n\
    \        return true;\n    return false;", "    std::string temp = b;\n    for(int\
    \ i = 0; i < b.length(); i++) {\n        if(a.find(temp) != std::string::npos)\
    \ {\n            return true;\n        }\n        std::rotate(temp.begin(), temp.begin()\
    \ + 1, temp.end());\n    }\n    return false;", "    int n = a.length();\n   \
    \ int m = b.length();\n    if(m > n) return false;\n    std::string s = a + a;\n\
    \    for(int i = 0; i < n; i++) {\n        if(s.substr(i, m) == b) return true;\n\
    \    }\n    return false;", "    if(a.length() < b.length())\n        return false;\n\
    \    std::string temp = b;\n    for(int i = 0; i < b.length(); i++) {\n      \
    \  if(a.find(temp) != std::string::npos)\n            return true;\n        char\
    \ c = temp[0];\n        temp.erase(0, 1);\n        temp += c;\n    }\n    return\
    \ false;", "    // Write your code here\n    if(a.size()<b.size())\n        return\
    \ false;\n    int i=0,j=0;\n    while(i<a.size()){\n        if(a[i]==b[j]){\n\
    \            i++;\n            j++;\n        }\n        else{\n            i++;\n\
    \            j=0;\n        }\n        if(j==b.size())\n            return true;\n\
    \    }\n    return false;", "    int n = a.length();\n    int m = b.length();\n\
    \    if(n < m) return false;\n    for(int i = 0; i < n; i++) {\n        if(a[i]\
    \ == b[0]) {\n            int j = 0;\n            for(j = 0; j < m; j++) {\n \
    \               if(a[(i + j) % n] != b[j]) break;\n            }\n           \
    \ if(j == m) return true;\n        }\n    }\n    return false;", "    int n =\
    \ a.length();\n    int m = b.length();\n    if(n < m) return false;\n    for(int\
    \ i = 0; i < n; i++) {\n        int j = 0;\n        while(j < m && a[(i + j) %\
    \ n] == b[j]) j++;\n        if(j == m) return true;\n    }\n    return false;",
  "    if(a.size() < b.size())\n        return false;\n    if(a.size() == b.size())\n\
    \        return a == b;\n    std::string c = b + b;\n    if(c.find(a) != std::string::npos)\n\
    \        return true;\n    return false;", "    if(a.length() < b.length())\n\
    \        return false;\n    int i = 0;\n    while(i < a.length()) {\n        if(a[i]\
    \ == b[0]) {\n            int j = 0;\n            while(j < b.length() && a[(i\
    \ + j) % a.length()] == b[j])\n                j++;\n            if(j == b.length())\n\
    \                return true;\n        }\n        i++;\n    }\n    return false;",
  "    // Write your code here\n    int n = a.length();\n    int m = b.length();\n\
    \    if(m>n)\n        return false;\n    int i,j;\n    for(i=0;i<n;i++){\n   \
    \     if(a[i]==b[0]){\n            for(j=0;j<m;j++){\n                if(a[(i+j)%n]!=b[j])\n\
    \                    break;\n            }\n            if(j==m)\n           \
    \     return true;\n        }\n    }\n    return false;", "    // Write your code\
    \ here\n    int n = a.length();\n    int m = b.length();\n    if(n < m)\n    \
    \    return false;\n    for(int i = 0; i < n; i++){\n        if(a[i] == b[0]){\n\
    \            int j = 0;\n            int k = i;\n            while(j < m && k\
    \ < n && a[k] == b[j]){\n                j++;\n                k++;\n        \
    \    }\n            if(j == m)\n                return true;\n            if(k\
    \ == n && j < m){\n                k = 0;\n                while(j < m && k <\
    \ i && a[k] == b[j]){\n                    j++;\n                    k++;\n  \
    \              }\n                if(j == m)\n                    return true;\n\
    \            }\n        }\n    }\n    return false;", "    if(a.length() < b.length())\n\
    \        return false;\n    std::string s = b + b;\n    if(s.find(a) != std::string::npos)\n\
    \        return true;\n    return false;", "    // Write your code here\n    int\
    \ n = a.length();\n    int m = b.length();\n    if(m>n)\n        return false;\n\
    \    std::string s = a+a;\n    for(int i=0;i<n;i++){\n        if(s.substr(i,m)==b)\n\
    \            return true;\n    }\n    return false;", "    // Write your code\
    \ here\n    int n = a.length();\n    int m = b.length();\n    if(n<m)\n      \
    \  return false;\n    for(int i=0;i<n;i++){\n        if(a[i]==b[0]){\n       \
    \     int j=0;\n            while(j<m && a[(i+j)%n]==b[j]){\n                j++;\n\
    \            }\n            if(j==m)\n                return true;\n        }\n\
    \    }\n    return false;", "    int n = a.length();\n    int m = b.length();\n\
    \    if(m > n)\n        return false;\n    for(int i = 0; i < n; i++) {\n    \
    \    if(a[i] == b[0]) {\n            int j = 0;\n            while(j < m && a[(i\
    \ + j) % n] == b[j])\n                j++;\n            if(j == m)\n         \
    \       return true;\n        }\n    }\n    return false;", "    if(a.length()\
    \ < b.length())\n        return false;\n    int i = 0;\n    while(i < a.length())\
    \ {\n        if(a[i] == b[0]) {\n            int j = 0;\n            while(j <\
    \ b.length() && a[(i + j) % a.length()] == b[j])\n                j++;\n     \
    \       if(j == b.length())\n                return true;\n        }\n       \
    \ i++;\n    }\n    return false;", "    // Write your code here\n    int n = a.length();\n\
    \    int m = b.length();\n    if(n<m)\n        return false;\n    std::string\
    \ s = a + a;\n    for(int i=0;i<n;i++){\n        if(s.substr(i,m) == b)\n    \
    \        return true;\n    }\n    return false;", "    if(a.length() < b.length())\n\
    \        return false;\n    if(a.length() == b.length())\n        return a ==\
    \ b;\n    std::string c = b + b;\n    if(c.find(a) != std::string::npos)\n   \
    \     return true;\n    return false;", "    if(a.length() < b.length())\n   \
    \     return false;\n    std::string temp = b;\n    for(int i = 0; i < b.length();\
    \ i++) {\n        temp = temp.substr(1, b.length() - 1) + temp[0];\n        if(temp\
    \ == a.substr(0, b.length()))\n            return true;\n    }\n    return false;",
  "\t// Write your code here\n\tint n = a.length();\n\tint m = b.length();\n\tif (m\
    \ > n)\n\t\treturn false;\n\tstring s = a + a;\n\tfor (int i = 0; i < n; i++)\
    \ {\n\t\tstring temp = s.substr(i, n);\n\t\tif (temp.find(b) != string::npos)\n\
    \t\t\treturn true;\n\t}\n\treturn false;", "    // Write your code here\n    int\
    \ n = a.length();\n    int m = b.length();\n    if(n<m)\n        return false;\n\
    \    a = a+a;\n    int i=0,j=0;\n    while(i<n && j<m){\n        if(a[i]==b[j]){\n\
    \            i++;\n            j++;\n        }\n        else{\n            i =\
    \ i-j+1;\n            j=0;\n        }\n    }\n    if(j==m)\n        return true;\n\
    \    return false;", "    // Write your code here\n    int n=a.length();\n   \
    \ int m=b.length();\n    if(n<m)\n        return false;\n    if(n==m)\n      \
    \  return a==b;\n    int i=0;\n    while(i<n){\n        if(a[i]==b[0]){\n    \
    \        int j=0;\n            while(j<m && a[(i+j)%n]==b[j])\n              \
    \  j++;\n            if(j==m)\n                return true;\n        }\n     \
    \   i++;\n    }\n    return false;", "    // Write your code here\n    int n =\
    \ a.length();\n    int m = b.length();\n    if(n<m)\n        return false;\n \
    \   for(int i=0;i<n;i++){\n        if(a[i]==b[0]){\n            int j=0;\n   \
    \         while(j<m && a[(i+j)%n]==b[j]){\n                j++;\n            }\n\
    \            if(j==m)\n                return true;\n        }\n    }\n    return\
    \ false;", "    int n = a.length();\n    int m = b.length();\n    if(m > n)\n\
    \        return false;\n    std::string s = a + a;\n    for(int i = 0; i < n;\
    \ i++) {\n        std::string temp = s.substr(i, m);\n        if(temp == b)\n\
    \            return true;\n    }\n    return false;", "\t// Write your code here\n\
    \t// return true if b is a substring of a\n\t// return false otherwise\n\t// You\
    \ can use the inbuilt string functions like find()\n\t// You can also use the\
    \ STL functions like rotate()\n\t// You can also use the STL functions like next_permutation()\n\
    \t// You can also use the STL functions like sort()\n\t// You can also use the\
    \ STL functions like reverse()\n\t// You can also use the STL functions like count()\n\
    \t// You can also use the STL functions like accumulate()\n\t// You can also use\
    \ the STL functions like max_element()\n\t// You can also use the STL functions\
    \ like min_element()\n\t// You can also use the STL functions like distance()\n\
    \t// You can also use the STL functions like lower_bound()\n\t// You can also\
    \ use the STL functions like upper_bound()\n\t// You can also use the STL functions\
    \ like equal_range()\n\t// You can also use the STL functions like binary_search()\n\
    \t// You can also use the STL functions like merge()\n\t// You can also use the\
    \ STL functions like inplace_merge()\n\t// You can also use the STL functions\
    \ like includes()\n\t// You can also use the STL functions like set_union()\n\t\
    // You can also use the STL functions like set_intersection()\n\t// You can also\
    \ use the STL functions like set_difference()\n\t// You can also use the STL functions\
    \ like set_symmetric_difference()\n\t// You can also use the STL functions like\
    \ min()\n\t// You can also use the STL functions like max()\n\t// You can also\
    \ use the STL functions like minmax()\n\t// You can also use the STL functions\
    \ like min_element()\n\t// You can also use the STL functions like max_element()\n\
    \t// You can also use the STL functions like minmax_element()\n\t// You can also\
    \ use the STL functions like next_permutation()\n\t// You can also use the STL\
    \ functions like prev_permutation()\n\t// You can also use the STL functions like\
    \ is_permutation()\n\t// You can also use the STL functions like reverse()\n\t\
    // You can also use the STL functions like reverse_copy()\n\t// You can also use\
    \ the STL functions like rotate()\n\t//", "    if(a.length() < b.length()) return\
    \ false;\n    if(a.length() == b.length()) return a == b;\n    int i = 0, j =\
    \ 0;\n    while(i < a.length() && j < b.length()) {\n        if(a[i] == b[j])\
    \ {\n            i++;\n            j++;\n        } else {\n            i = i -\
    \ j + 1;\n            j = 0;\n        }\n    }\n    if(j == b.length()) return\
    \ true;\n    return false;", "    if(a.length() < b.length())\n        return\
    \ false;\n    int i = 0;\n    while(i < a.length()) {\n        if(a[i] == b[0])\
    \ {\n            int j = 0;\n            while(j < b.length() && a[(i + j) % a.length()]\
    \ == b[j]) {\n                j++;\n            }\n            if(j == b.length())\n\
    \                return true;\n        }\n        i++;\n    }\n    return false;",
  "    std::string c = b;\n    for(int i = 0; i < b.length(); i++) {\n        c =\
    \ c.substr(1) + c[0];\n        if(a.find(c) != std::string::npos) {\n        \
    \    return true;\n        }\n    }\n    return false;", "    if(a.size()!=b.size())\n\
    \        return false;\n    int n=a.size();\n    for(int i=0;i<n;i++){\n     \
    \   std::string s=a.substr(i,n-i)+a.substr(0,i);\n        if(s==b)\n         \
    \   return true;\n    }\n    return false;", "\t// Write your code here\n\t//\
    \ return true or false\n\tif(a.length()<b.length())\n\t\treturn false;\n\tint\
    \ i=0,j=0;\n\twhile(i<a.length()){\n\t\tif(a[i]==b[j]){\n\t\t\ti++;\n\t\t\tj++;\n\
    \t\t}\n\t\telse{\n\t\t\ti++;\n\t\t\tj=0;\n\t\t}\n\t\tif(j==b.length())\n\t\t\t\
    return true;\n\t}\n\treturn false;", "    if(a.length() < b.length())\n      \
    \  return false;\n    std::string c = b + b;\n    if(c.find(a) != std::string::npos)\n\
    \        return true;\n    return false;", "    // Write your code here\n    int\
    \ n = a.length();\n    int m = b.length();\n    if(n<m)\n        return false;\n\
    \    for(int i=0;i<n;i++){\n        if(a[i]==b[0]){\n            int j=0;\n  \
    \          while(j<m && a[(i+j)%n]==b[j]){\n                j++;\n           \
    \ }\n            if(j==m)\n                return true;\n        }\n    }\n  \
    \  return false;", "    int len = a.length();\n    int len2 = b.length();\n  \
    \  if(len2 > len)\n        return false;\n    std::string s = a + a;\n    if(s.find(b)\
    \ != std::string::npos)\n        return true;\n    return false;", "    int n\
    \ = a.length();\n    int m = b.length();\n    if(m > n)\n        return false;\n\
    \    std::string s = a + a;\n    for(int i = 0; i < n; i++) {\n        std::string\
    \ temp = s.substr(i, m);\n        if(temp == b)\n            return true;\n  \
    \  }\n    return false;", "    if(a.length() < b.length())\n        return false;\n\
    \    if(a.length() == b.length())\n        return a == b;\n    std::string temp\
    \ = b;\n    for(int i = 0; i < b.length(); i++) {\n        if(a.find(temp) !=\
    \ std::string::npos)\n            return true;\n        char c = temp[0];\n  \
    \      temp.erase(0, 1);\n        temp += c;\n    }\n    return false;", "   \
    \ int n = a.length();\n    int m = b.length();\n    if(m>n)\n        return false;\n\
    \    std::string s = a+a;\n    for(int i=0;i<n;i++){\n        int j;\n       \
    \ for(j=0;j<m;j++){\n            if(s[i+j]!=b[j])\n                break;\n  \
    \      }\n        if(j==m)\n            return true;\n    }\n    return false;",
  "    // Write your code here\n    int n = a.length();\n    int m = b.length();\n\
    \    if(n<m)\n        return false;\n    for(int i=0;i<n;i++){\n        if(a[i]==b[0]){\n\
    \            int j=0;\n            for(j=0;j<m;j++){\n                if(a[(i+j)%n]!=b[j])\n\
    \                    break;\n            }\n            if(j==m)\n           \
    \     return true;\n        }\n    }\n    return false;", "\t// Write your code\
    \ here\n\t// return true if b is a substring of a\n\t// return false otherwise\n\
    \t// if b is a substring of a, then b is a substring of a+a\n\t// so, we can check\
    \ if b is a substring of a+a\n\t// if b is a substring of a+a, then b is a substring\
    \ of a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a",
  "    // Write your code here\n    int n = a.length();\n    int m = b.length();\n\
    \    if(n < m) return false;\n    if(n == m) return a == b;\n    for(int i = 0;\
    \ i < n; i++){\n        if(a[i] == b[0]){\n            int j = 0;\n          \
    \  while(j < m && a[(i + j) % n] == b[j]) j++;\n            if(j == m) return\
    \ true;\n        }\n    }\n    return false;", "    // Write your code here\n\
    \    int n=a.length();\n    int m=b.length();\n    if(n<m)\n    return false;\n\
    \    if(n==m)\n    {\n        if(a==b)\n        return true;\n        else\n \
    \       return false;\n    }\n    int i=0;\n    int j=0;\n    while(i<n)\n   \
    \ {\n        if(a[i]==b[j])\n        {\n            int k=i;\n            while(j<m)\n\
    \            {\n                if(a[k]!=b[j])\n                break;\n     \
    \           k++;\n                j++;\n                if(k==n)\n           \
    \     k=0;\n            }\n            if(j==m)\n            return true;\n  \
    \          j=0;\n        }\n        i++;\n    }\n    return false;", "    int\
    \ n = a.length();\n    int m = b.length();\n    if(m > n)\n        return false;\n\
    \    std::string s = a + a;\n    for(int i = 0; i < n; i++) {\n        if(s.substr(i,\
    \ m) == b)\n            return true;\n    }\n    return false;", "    // Write\
    \ your code here\n    if(a.length()<b.length())\n    {\n        return false;\n\
    \    }\n    if(a.length()==b.length())\n    {\n        if(a==b)\n        {\n \
    \           return true;\n        }\n        else\n        {\n            return\
    \ false;\n        }\n    }\n    else\n    {\n        std::string temp=b;\n   \
    \     for(int i=0;i<b.length();i++)\n        {\n            char c=temp[0];\n\
    \            temp.erase(temp.begin());\n            temp.push_back(c);\n     \
    \       if(temp==a)\n            {\n                return true;\n           \
    \ }\n        }\n        return false;\n    }"]
stop_tokens:
- "\n}"

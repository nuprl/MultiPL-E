name: HumanEval_141_file_name_check
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function which takes\
  \ a string representing a file's name, and returns\n// 'Yes' if the the file's name\
  \ is valid, and returns 'No' otherwise.\n// A file's name is considered to be valid\
  \ if and only if all the following conditions \n// are met:\n// - There should not\
  \ be more than three digits ('0'-'9') in the file's name.\n// - The file's name\
  \ contains exactly one dot '.'\n// - The substring before the dot should not be\
  \ empty, and it starts with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n\
  // - The substring after the dot should be one of these: ['txt', 'exe', 'dll']\n\
  // Examples:\n// >>> file_name_check((\"example.txt\"))\n// (\"Yes\")\n// >>> file_name_check((\"\
  1example.dll\"))\n// (\"No\")\nstd::string file_name_check(std::string file_name)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = file_name_check;\n    assert(candidate((\"\
  example.txt\")) == (\"Yes\"));\n    assert(candidate((\"1example.dll\")) == (\"\
  No\"));\n    assert(candidate((\"s1sdf3.asd\")) == (\"No\"));\n    assert(candidate((\"\
  K.dll\")) == (\"Yes\"));\n    assert(candidate((\"MY16FILE3.exe\")) == (\"Yes\"\
  ));\n    assert(candidate((\"His12FILE94.exe\")) == (\"No\"));\n    assert(candidate((\"\
  _Y.txt\")) == (\"No\"));\n    assert(candidate((\"?aREYA.exe\")) == (\"No\"));\n\
  \    assert(candidate((\"/this_is_valid.dll\")) == (\"No\"));\n    assert(candidate((\"\
  this_is_valid.wow\")) == (\"No\"));\n    assert(candidate((\"this_is_valid.txt\"\
  )) == (\"Yes\"));\n    assert(candidate((\"this_is_valid.txtexe\")) == (\"No\"));\n\
  \    assert(candidate((\"#this2_i4s_5valid.ten\")) == (\"No\"));\n    assert(candidate((\"\
  @this1_is6_valid.exe\")) == (\"No\"));\n    assert(candidate((\"this_is_12valid.6exe4.txt\"\
  )) == (\"No\"));\n    assert(candidate((\"all.exe.txt\")) == (\"No\"));\n    assert(candidate((\"\
  I563_No.exe\")) == (\"Yes\"));\n    assert(candidate((\"Is3youfault.txt\")) == (\"\
  Yes\"));\n    assert(candidate((\"no_one#knows.dll\")) == (\"Yes\"));\n    assert(candidate((\"\
  1I563_Yes3.exe\")) == (\"No\"));\n    assert(candidate((\"I563_Yes3.txtt\")) ==\
  \ (\"No\"));\n    assert(candidate((\"final..txt\")) == (\"No\"));\n    assert(candidate((\"\
  final132\")) == (\"No\"));\n    assert(candidate((\"_f4indsartal132.\")) == (\"\
  No\"));\n    assert(candidate((\".txt\")) == (\"No\"));\n    assert(candidate((\"\
  s.\")) == (\"No\"));\n}\n"
completions: ["    std::string ext[] = {\"txt\", \"exe\", \"dll\"};\n    int count\
    \ = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9')\
    \ {\n            count++;\n        }\n        if(file_name[i] == '.') {\n    \
    \        dot_count++;\n        }\n    }\n    if(count > 3 || dot_count != 1) {\n\
    \        return \"No\";\n    }\n    std::string file_name_ext = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if(file_name_ext == ext[0] || file_name_ext == ext[1] || file_name_ext\
    \ == ext[2]) {\n        return \"Yes\";\n    }\n    return \"No\";", "    int\
    \ count = 0;\n    int count1 = 0;\n    int count2 = 0;\n    int count3 = 0;\n\
    \    int count4 = 0;\n    int count5 = 0;\n    int count6 = 0;\n    int count7\
    \ = 0;\n    int count8 = 0;\n    int count9 = 0;\n    int count10 = 0;\n    int\
    \ count11 = 0;\n    int count12 = 0;\n    int count13 = 0;\n    int count14 =\
    \ 0;\n    int count15 = 0;\n    int count16 = 0;\n    int count17 = 0;\n    int\
    \ count18 = 0;\n    int count19 = 0;\n    int count20 = 0;\n    int count21 =\
    \ 0;\n    int count22 = 0;\n    int count23 = 0;\n    int count24 = 0;\n    int\
    \ count25 = 0;\n    int count26 = 0;\n    int count27 = 0;\n    int count28 =\
    \ 0;\n    int count29 = 0;\n    int count30 = 0;\n    int count31 = 0;\n    int\
    \ count32 = 0;\n    int count33 = 0;\n    int count34 = 0;\n    int count35 =\
    \ 0;\n    int count36 = 0;\n    int count37 = 0;\n    int count38 = 0;\n    int\
    \ count39 = 0;\n    int count40 = 0;\n    int count41 = 0;\n    int count42 =\
    \ 0;\n    int count43 = 0;\n    int count44 = 0;\n    int count45 = 0;\n    int\
    \ count46 = 0;\n    int count47 = 0;\n    int count48 = 0;\n    int count49 =\
    \ 0;\n    int count50 = 0;\n    int count51 = 0;\n    int count52 = 0;\n    int\
    \ count53 = 0;\n    int count54 = 0;\n    int count55 = 0;\n    int count56 =\
    \ 0;\n    int count57 = 0;\n    int count58 = 0;\n    int count59 = 0;\n    int\
    \ count60 = 0;\n    int count61 = 0;\n    int count62 = 0;\n    int count63 =\
    \ 0;\n", "  int count=0;\n  int dot_count=0;\n  int flag=0;\n  int flag1=0;\n\
    \  int flag2=0;\n  int flag3=0;\n  int flag4=0;\n  int flag5=0;\n  int flag6=0;\n\
    \  int flag7=0;\n  int flag8=0;\n  int flag9=0;\n  int flag10=0;\n  int flag11=0;\n\
    \  int flag12=0;\n  int flag13=0;\n  int flag14=0;\n  int flag15=0;\n  int flag16=0;\n\
    \  int flag17=0;\n  int flag18=0;\n  int flag19=0;\n  int flag20=0;\n  int flag21=0;\n\
    \  int flag22=0;\n  int flag23=0;\n  int flag24=0;\n  int flag25=0;\n  int flag26=0;\n\
    \  int flag27=0;\n  int flag28=0;\n  int flag29=0;\n  int flag30=0;\n  int flag31=0;\n\
    \  int flag32=0;\n  int flag33=0;\n  int flag34=0;\n  int flag35=0;\n  int flag36=0;\n\
    \  int flag37=0;\n  int flag38=0;\n  int flag39=0;\n  int flag40=0;\n  int flag41=0;\n\
    \  int flag42=0;\n  int flag43=0;\n  int flag44=0;\n  int flag45=0;\n  int flag46=0;\n\
    \  int flag47=0;\n  int flag48=0;\n  int flag49=0;\n  int flag50=0;\n  int flag51=0;\n\
    \  int flag52=0;\n  int flag53=0;\n  int flag54=0;\n  int flag55=0;\n  int flag56=0;\n\
    \  int flag57=0;\n  int flag58=0;\n  int flag59=0;\n  int flag60=0;\n  int flag61=0;\n",
  "    int count = 0;\n    int dot = 0;\n    int dot_pos = 0;\n    int count_after_dot\
    \ = 0;\n    int count_before_dot = 0;\n    int count_after_dot_1 = 0;\n    int\
    \ count_after_dot_2 = 0;\n    int count_after_dot_3 = 0;\n    int count_before_dot_1\
    \ = 0;\n    int count_before_dot_2 = 0;\n    int count_before_dot_3 = 0;\n   \
    \ int count_before_dot_4 = 0;\n    int count_before_dot_5 = 0;\n    int count_before_dot_6\
    \ = 0;\n    int count_before_dot_7 = 0;\n    int count_before_dot_8 = 0;\n   \
    \ int count_before_dot_9 = 0;\n    int count_before_dot_10 = 0;\n    int count_before_dot_11\
    \ = 0;\n    int count_before_dot_12 = 0;\n    int count_before_dot_13 = 0;\n \
    \   int count_before_dot_14 = 0;\n    int count_before_dot_15 = 0;\n    int count_before_dot_16\
    \ = 0;\n    int count_before_dot_17 = 0;\n    int count_before_dot_18 = 0;\n \
    \   int count_before_dot_19 = 0;\n    int count_before_dot_20 = 0;\n    int count_before_dot_21\
    \ = 0;\n    int count_before_dot_22 = 0;\n    int count_before_dot_23 = 0;\n \
    \   int count_before_dot_24 = 0;\n    int count_before_dot_25 = 0;\n    int count_before_dot_26\
    \ = 0;\n    for (int i = 0; i < file_name.length(); i++) {\n        if (file_name[i]\
    \ == '.') {\n            dot++;\n            dot_pos = i;\n        }\n       \
    \ if (file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n  \
    \      }\n    }\n    if (", "    int count = 0;\n    int dot = 0;\n    int len\
    \ = file_name.length();\n    for(int i = 0; i < len; i++) {\n        if(file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot++;\n        }\n    }\n    if(count > 3 || dot !=\
    \ 1) {\n        return \"No\";\n    }\n    std::string str = file_name.substr(0,\
    \ file_name.find('.'));\n    if(str.length() == 0) {\n        return \"No\";\n\
    \    }\n    if(str[0] >= 'a' && str[0] <= 'z' || str[0] >= 'A' && str[0] <= 'Z')\
    \ {\n        std::string str1 = file_name.substr(file_name.find('.') + 1, len);\n\
    \        if(str1 == \"txt\" || str1 == \"exe\" || str1 == \"dll\") {\n       \
    \     return \"Yes\";\n        }\n    }\n    return \"No\";", "    int count =\
    \ 0;\n    int dot_count = 0;\n    int dot_index = 0;\n    for(int i = 0; i < file_name.length();\
    \ i++) {\n        if(file_name[i] == '.') {\n            dot_count++;\n      \
    \      dot_index = i;\n        }\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n    }\n    if(count > 3) {\n   \
    \     return \"No\";\n    }\n    if(dot_count != 1) {\n        return \"No\";\n\
    \    }\n    if(file_name[0] < 'a' || file_name[0] > 'z') {\n        return \"\
    No\";\n    }\n    if(file_name.substr(dot_index + 1, file_name.length() - dot_index)\
    \ != \"txt\" && file_name.substr(dot_index + 1, file_name.length() - dot_index)\
    \ != \"exe\" && file_name.substr(dot_index + 1, file_name.length() - dot_index)\
    \ != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";", "    int\
    \ count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n    int count_after_dot\
    \ = 0;\n    for(int i = 0; i < file_name.length(); i++) {\n        if(file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \    }\n    if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n\
    \    for(int i = dot_index + 1; i < file_name.length(); i++) {\n        count_after_dot++;\n\
    \    }\n    if(count_after_dot != 3) {\n        return \"No\";\n    }\n    std::string\
    \ file_extension = file_name.substr(dot_index + 1, 3);\n    if(file_extension\
    \ != \"txt\" && file_extension != \"exe\" && file_extension != \"dll\") {\n  \
    \      return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int\
    \ dot = 0;\n    int flag = 0;\n    int flag2 = 0;\n    int flag3 = 0;\n    for(int\
    \ i = 0; i < file_name.length(); i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot++;\n        }\n        if(file_name[i] >= 'a' && file_name[i]\
    \ <= 'z') {\n            flag = 1;\n        }\n        if(file_name[i] >= 'A'\
    \ && file_name[i] <= 'Z') {\n            flag = 1;\n        }\n        if(file_name[i]\
    \ == '.') {\n            if(file_name[i+1] == 't' && file_name[i+2] == 'x' &&\
    \ file_name[i+3] == 't') {\n                flag2 = 1;\n            }\n      \
    \      if(file_name[i+1] == 'e' && file_name[i+2] == 'x' && file_name[i+3] ==\
    \ 'e') {\n                flag2 = 1;\n            }\n            if(file_name[i+1]\
    \ == 'd' && file_name[i+2] == 'l' && file_name[i+3] == 'l') {\n              \
    \  flag2 = 1;\n            }\n        }\n    }\n    if(count <= 3 && dot == 1\
    \ && flag == 1 && flag2 == 1) {\n        return \"Yes\";\n    }\n    else {\n\
    \        return \"No\";\n    }", "    int count = 0;\n    int dot_count = 0;\n\
    \    int i = 0;\n    int len = file_name.length();\n    for(i = 0; i < len; i++)\
    \ {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \    }\n    }\n    if(count > 3 || dot_count != 1) {\n        return \"No\";\n\
    \    }\n    std::string str1 = file_name.substr(0, file_name.find(\".\"));\n \
    \   std::string str2 = file_name.substr(file_name.find(\".\") + 1);\n    if(str1.length()\
    \ == 0 || (str1[0] < 'a' || str1[0] > 'z') && (str1[0] < 'A' || str1[0] > 'Z'))\
    \ {\n        return \"No\";\n    }\n    if(str2 != \"txt\" && str2 != \"exe\"\
    \ && str2 != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";",
  "    int count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n    int digit_count\
    \ = 0;\n    int digit_index = 0;\n    int alpha_count = 0;\n    int alpha_index\
    \ = 0;\n    int alpha_index_end = 0;\n    int alpha_index_start = 0;\n    int\
    \ alpha_index_end_start = 0;\n    int alpha_index_end_end = 0;\n    int alpha_index_end_end_start\
    \ = 0;\n    int alpha_index_end_end_end = 0;\n    int alpha_index_end_end_end_start\
    \ = 0;\n    int alpha_index_end_end_end_end = 0;\n    int alpha_index_end_end_end_end_start\
    \ = 0;\n    int alpha_index_end_end_end_end_end = 0;\n    int alpha_index_end_end_end_end_end_start\
    \ = 0;\n    int alpha_index_end_end_end_end_end_end = 0;\n    int alpha_index_end_end_end_end_end_end_start\
    \ = 0;\n    int alpha_index_end_end_end_end_end_end_end = 0;\n    int alpha_index_end_end_end_end_end_end_end_start\
    \ = 0;\n    int alpha_index_end_end_end_end_end_end_end_end = 0;\n    int alpha_index_end_end_end_end_end_end_end_end_start\
    \ = 0;\n    int alpha_index_end_end_end_end_end_end_end_end_end = 0;\n    int\
    \ alpha_index_end_end_end_end_end_end_end_end_end_start = 0;\n    int alpha_index_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    int alpha_index_end_end_end_end_end_end_end_end_end_end_start = 0;\n\
    \    int alpha_index_end_end_end_end_end_end_end", "    int count = 0;\n    int\
    \ dot = 0;\n    int dot_pos = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9')\
    \ {\n            count++;\n        }\n        if(file_name[i] == '.') {\n    \
    \        dot++;\n            dot_pos = i;\n        }\n    }\n    if(count > 3\
    \ || dot != 1) {\n        return \"No\";\n    }\n    std::string sub1 = file_name.substr(0,\
    \ dot_pos);\n    std::string sub2 = file_name.substr(dot_pos + 1, len - dot_pos\
    \ - 1);\n    if(sub1.length() == 0 || (sub1[0] < 'a' || sub1[0] > 'z') && (sub1[0]\
    \ < 'A' || sub1[0] > 'Z')) {\n        return \"No\";\n    }\n    if(sub2 != \"\
    txt\" && sub2 != \"exe\" && sub2 != \"dll\") {\n        return \"No\";\n    }\n\
    \    return \"Yes\";", "    int count = 0;\n    int dot = 0;\n    int dot_pos\
    \ = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len; i++) {\n\
    \        if(file_name[i] == '.') {\n            dot++;\n            dot_pos =\
    \ i;\n        }\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n  \
    \          count++;\n        }\n    }\n    if(count > 3) {\n        return \"\
    No\";\n    }\n    if(dot != 1) {\n        return \"No\";\n    }\n    if(dot_pos\
    \ == 0) {\n        return \"No\";\n    }\n    if(file_name[dot_pos + 1] == 't'\
    \ && file_name[dot_pos + 2] == 'x' && file_name[dot_pos + 3] == 't') {\n     \
    \   return \"Yes\";\n    }\n    if(file_name[dot_pos + 1] == 'e' && file_name[dot_pos\
    \ + 2] == 'x' && file_name[dot_pos + 3] == 'e') {\n        return \"Yes\";\n \
    \   }\n    if(file_name[dot_pos + 1] == 'd' && file_name[dot_pos + 2] == 'l' &&\
    \ file_name[dot_pos + 3] == 'l') {\n        return \"Yes\";\n    }\n    return\
    \ \"No\";", "\tint count = 0;\n\tint dot_count = 0;\n\tint dot_pos = 0;\n\tint\
    \ ext_pos = 0;\n\tstd::string ext;\n\tstd::string ext_list[3] = {\"txt\", \"exe\"\
    , \"dll\"};\n\tfor (int i = 0; i < file_name.length(); i++) {\n\t\tif (file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n\t\t\tcount++;\n\t\t}\n\t\tif (file_name[i]\
    \ == '.') {\n\t\t\tdot_count++;\n\t\t\tdot_pos = i;\n\t\t}\n\t}\n\tif (count >\
    \ 3 || dot_count != 1) {\n\t\treturn \"No\";\n\t}\n\text_pos = dot_pos + 1;\n\t\
    ext = file_name.substr(ext_pos, file_name.length() - ext_pos);\n\tfor (int i =\
    \ 0; i < 3; i++) {\n\t\tif (ext == ext_list[i]) {\n\t\t\treturn \"Yes\";\n\t\t\
    }\n\t}\n\treturn \"No\";", "    int count = 0;\n    int dot_count = 0;\n    int\
    \ dot_index = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len;\
    \ i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n         \
    \   count++;\n        }\n        if(file_name[i] == '.') {\n            dot_count++;\n\
    \            dot_index = i;\n        }\n    }\n    if(count > 3 || dot_count !=\
    \ 1) {\n        return \"No\";\n    }\n    std::string before_dot = file_name.substr(0,\
    \ dot_index);\n    std::string after_dot = file_name.substr(dot_index + 1, len\
    \ - dot_index);\n    if(before_dot.length() == 0 || (before_dot[0] < 'a' || before_dot[0]\
    \ > 'z') && (before_dot[0] < 'A' || before_dot[0] > 'Z')) {\n        return \"\
    No\";\n    }\n    if(after_dot != \"txt\" && after_dot != \"exe\" && after_dot\
    \ != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";", "    int\
    \ count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n    int digit_count\
    \ = 0;\n    for(int i = 0; i < file_name.length(); i++) {\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \        if(isdigit(file_name[i])) {\n            digit_count++;\n        }\n\
    \    }\n    if(dot_count != 1) {\n        return \"No\";\n    }\n    if(digit_count\
    \ > 3) {\n        return \"No\";\n    }\n    std::string sub_string_1 = file_name.substr(0,\
    \ dot_index);\n    std::string sub_string_2 = file_name.substr(dot_index + 1,\
    \ file_name.length() - dot_index - 1);\n    if(sub_string_1.length() == 0) {\n\
    \        return \"No\";\n    }\n    if(!isalpha(sub_string_1[0])) {\n        return\
    \ \"No\";\n    }\n    if(sub_string_2 != \"txt\" && sub_string_2 != \"exe\" &&\
    \ sub_string_2 != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\"\
    ;", "    int count = 0;\n    int dot = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot++;\n        }\n    }\n    if(count > 3 || dot != 1) {\n \
    \       return \"No\";\n    }\n    std::string s1 = file_name.substr(0, file_name.find('.'));\n\
    \    std::string s2 = file_name.substr(file_name.find('.') + 1);\n    if(s1.length()\
    \ == 0 || (s1[0] < 'a' || s1[0] > 'z') && (s1[0] < 'A' || s1[0] > 'Z')) {\n  \
    \      return \"No\";\n    }\n    if(s2 != \"txt\" && s2 != \"exe\" && s2 != \"\
    dll\") {\n        return \"No\";\n    }\n    return \"Yes\";", "    int count\
    \ = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9')\
    \ {\n            count++;\n        }\n        if(file_name[i] == '.') {\n    \
    \        dot_count++;\n        }\n    }\n    if(count > 3 || dot_count != 1) {\n\
    \        return \"No\";\n    }\n    std::string sub = file_name.substr(0, file_name.find('.'));\n\
    \    if(sub.length() == 0) {\n        return \"No\";\n    }\n    if(!(sub[0] >=\
    \ 'a' && sub[0] <= 'z') && !(sub[0] >= 'A' && sub[0] <= 'Z')) {\n        return\
    \ \"No\";\n    }\n    sub = file_name.substr(file_name.find('.') + 1);\n    if(sub\
    \ != \"txt\" && sub != \"exe\" && sub != \"dll\") {\n        return \"No\";\n\
    \    }\n    return \"Yes\";", "    int count = 0;\n    int dot_count = 0;\n  \
    \  int dot_pos = 0;\n    int len = file_name.length();\n    for(int i = 0; i <\
    \ len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n    \
    \        count++;\n        }\n        if(file_name[i] == '.') {\n            dot_count++;\n\
    \            dot_pos = i;\n        }\n    }\n    if(count > 3 || dot_count !=\
    \ 1) {\n        return \"No\";\n    }\n    std::string sub1 = file_name.substr(0,\
    \ dot_pos);\n    std::string sub2 = file_name.substr(dot_pos + 1, len - dot_pos\
    \ - 1);\n    if(sub1.length() == 0 || (sub1[0] < 'a' || sub1[0] > 'z') && (sub1[0]\
    \ < 'A' || sub1[0] > 'Z')) {\n        return \"No\";\n    }\n    if(sub2 != \"\
    txt\" && sub2 != \"exe\" && sub2 != \"dll\") {\n        return \"No\";\n    }\n\
    \    return \"Yes\";", "    // Write your code here\n    // To print results to\
    \ the standard output you can use std::cout\n    // Example: std::cout << \"Hello\
    \ world!\";\n    int count = 0;\n    int dot_count = 0;\n    int dot_index = -1;\n\
    \    for(int i = 0; i < file_name.length(); i++){\n        if(file_name[i] ==\
    \ '.'){\n            dot_count++;\n            dot_index = i;\n        }\n   \
    \     if(file_name[i] >= '0' && file_name[i] <= '9'){\n            count++;\n\
    \        }\n    }\n    if(count > 3 || dot_count != 1 || dot_index == 0){\n  \
    \      return \"No\";\n    }\n    std::string str = file_name.substr(dot_index+1);\n\
    \    if(str == \"txt\" || str == \"exe\" || str == \"dll\"){\n        return \"\
    Yes\";\n    }\n    return \"No\";", "    int count = 0;\n    int dot = 0;\n  \
    \  int dot_index = 0;\n    int count_after_dot = 0;\n    for(int i = 0; i < file_name.length();\
    \ i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n         \
    \   count++;\n        }\n        if(file_name[i] == '.') {\n            dot++;\n\
    \            dot_index = i;\n        }\n    }\n    if(count > 3 || dot != 1) {\n\
    \        return \"No\";\n    }\n    if(file_name[0] < 'a' || file_name[0] > 'z')\
    \ {\n        return \"No\";\n    }\n    for(int i = dot_index + 1; i < file_name.length();\
    \ i++) {\n        count_after_dot++;\n    }\n    if(count_after_dot != 3) {\n\
    \        return \"No\";\n    }\n    if(file_name[dot_index + 1] != 't' || file_name[dot_index\
    \ + 2] != 'x' || file_name[dot_index + 3] != 't') {\n        return \"No\";\n\
    \    }\n    return \"Yes\";", "    int dot_index = -1;\n    int count = 0;\n \
    \   for (int i = 0; i < file_name.length(); i++) {\n        if (file_name[i] ==\
    \ '.') {\n            dot_index = i;\n        }\n        if (file_name[i] >= '0'\
    \ && file_name[i] <= '9') {\n            count++;\n        }\n    }\n    if (count\
    \ > 3) {\n        return \"No\";\n    }\n    if (dot_index == -1) {\n        return\
    \ \"No\";\n    }\n    if (dot_index == 0) {\n        return \"No\";\n    }\n \
    \   if (file_name[dot_index - 1] < 'a' || file_name[dot_index - 1] > 'z') {\n\
    \        if (file_name[dot_index - 1] < 'A' || file_name[dot_index - 1] > 'Z')\
    \ {\n            return \"No\";\n        }\n    }\n    std::string extension =\
    \ file_name.substr(dot_index + 1);\n    if (extension == \"txt\" || extension\
    \ == \"exe\" || extension == \"dll\") {\n        return \"Yes\";\n    }\n    return\
    \ \"No\";", "    int count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n\
    \    int i = 0;\n    while(file_name[i] != '\\0') {\n        if(file_name[i] >=\
    \ '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \        i++;\n    }\n    if(count > 3 || dot_count != 1) {\n        return \"\
    No\";\n    }\n    std::string str1 = file_name.substr(0, dot_index);\n    std::string\
    \ str2 = file_name.substr(dot_index + 1, file_name.length() - dot_index - 1);\n\
    \    if(str1.length() == 0 || (str1[0] < 'a' || str1[0] > 'z') && (str1[0] < 'A'\
    \ || str1[0] > 'Z')) {\n        return \"No\";\n    }\n    if(str2 != \"txt\"\
    \ && str2 != \"exe\" && str2 != \"dll\") {\n        return \"No\";\n    }\n  \
    \  return \"Yes\";", "    // Your code here\n    int count = 0;\n    int dot =\
    \ 0;\n    int flag = 0;\n    int flag1 = 0;\n    int flag2 = 0;\n    int flag3\
    \ = 0;\n    int flag4 = 0;\n    int flag5 = 0;\n    int flag6 = 0;\n    int flag7\
    \ = 0;\n    int flag8 = 0;\n    int flag9 = 0;\n    int flag10 = 0;\n    int flag11\
    \ = 0;\n    int flag12 = 0;\n    int flag13 = 0;\n    int flag14 = 0;\n    int\
    \ flag15 = 0;\n    int flag16 = 0;\n    int flag17 = 0;\n    int flag18 = 0;\n\
    \    int flag19 = 0;\n    int flag20 = 0;\n    int flag21 = 0;\n    int flag22\
    \ = 0;\n    int flag23 = 0;\n    int flag24 = 0;\n    int flag25 = 0;\n    int\
    \ flag26 = 0;\n    int flag27 = 0;\n    int flag28 = 0;\n    int flag29 = 0;\n\
    \    int flag30 = 0;\n    int flag31 = 0;\n    int flag32 = 0;\n    int flag33\
    \ = 0;\n    int flag34 = 0;\n    int flag35 = 0;\n    int flag36 = 0;\n    int\
    \ flag37 = 0;\n    int flag38 = 0;\n    int flag39 = 0;\n    int flag40 = 0;\n\
    \    int flag41 = 0;\n    int flag42 = 0;\n    int flag43 = 0;\n    int flag44\
    \ = 0;\n    int flag45 = 0;\n    int flag46 = 0;\n    int flag47 = 0;\n    int\
    \ flag48 = 0;\n    int flag49 = 0;\n    int flag50 = 0;\n    int flag51 = 0;\n\
    \    int flag52 = 0;\n    int flag53 = 0;\n    int flag54 = 0;\n    int flag55\
    \ = 0;\n    int flag56 = 0;\n    int flag57 = 0;\n    int flag58 = 0;\n    int\
    \ flag59 = 0;\n    int flag60 = 0;\n    int flag61", "    // Your code here\n\
    \    int count = 0;\n    int count1 = 0;\n    int count2 = 0;\n    int count3\
    \ = 0;\n    for(int i = 0; i < file_name.length(); i++){\n        if(file_name[i]\
    \ == '.'){\n            count++;\n        }\n        if(file_name[i] == '.' &&\
    \ i == 0){\n            return \"No\";\n        }\n        if(file_name[i] ==\
    \ '.' && i == file_name.length() - 1){\n            return \"No\";\n        }\n\
    \        if(file_name[i] == '.' && file_name[i+1] == '.'){\n            return\
    \ \"No\";\n        }\n        if(file_name[i] == '.' && file_name[i+1] == '.'\
    \ && file_name[i+2] == '.'){\n            return \"No\";\n        }\n        if(file_name[i]\
    \ == '.' && file_name[i+1] == '.' && file_name[i+2] == '.' && file_name[i+3] ==\
    \ '.'){\n            return \"No\";\n        }\n        if(file_name[i] == '.'\
    \ && file_name[i+1] == '.' && file_name[i+2] == '.' && file_name[i+3] == '.' &&\
    \ file_name[i+4] == '.'){\n            return \"No\";\n        }\n        if(file_name[i]\
    \ == '.' && file_name[i+1] == '.' && file_name[i+2] == '.' && file_name[i+3] ==\
    \ '.' && file_name[i+4] == '.' && file_name[i+5] == '.'){\n            return\
    \ \"No\";\n        }\n        if(file_name[i] == '.' && file_name[i+1] == '.'\
    \ && file_name[i+2] == '.' && file_name[i+3] == '.' && file_name[i+4] == '.' &&\
    \ file_name[i+5] == '.' && file_name[", "    int count = 0;\n    int dot_count\
    \ = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len; i++) {\n\
    \        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \    }\n    }\n    if(count > 3 || dot_count != 1) {\n        return \"No\";\n\
    \    }\n    std::string ext = file_name.substr(file_name.find(\".\") + 1);\n \
    \   if(ext == \"txt\" || ext == \"exe\" || ext == \"dll\") {\n        return \"\
    Yes\";\n    }\n    return \"No\";", "  int count = 0;\n  int dot_count = 0;\n\
    \  int dot_pos = 0;\n  for (int i = 0; i < file_name.length(); i++) {\n    if\
    \ (file_name[i] >= '0' && file_name[i] <= '9') {\n      count++;\n    }\n    if\
    \ (file_name[i] == '.') {\n      dot_count++;\n      dot_pos = i;\n    }\n  }\n\
    \  if (count > 3) {\n    return \"No\";\n  }\n  if (dot_count != 1) {\n    return\
    \ \"No\";\n  }\n  if (file_name[0] < 'a' || file_name[0] > 'z') {\n    return\
    \ \"No\";\n  }\n  if (file_name.substr(dot_pos + 1, file_name.length() - dot_pos\
    \ - 1) != \"txt\" &&\n      file_name.substr(dot_pos + 1, file_name.length() -\
    \ dot_pos - 1) != \"exe\" &&\n      file_name.substr(dot_pos + 1, file_name.length()\
    \ - dot_pos - 1) != \"dll\") {\n    return \"No\";\n  }\n  return \"Yes\";", " \
    \   // Your code here\n    int count = 0;\n    int dot = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++)\n    {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9')\n        {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.')\n        {\n            dot++;\n        }\n    }\n    if(count > 3 ||\
    \ dot != 1)\n    {\n        return \"No\";\n    }\n    else\n    {\n        std::string\
    \ s = file_name.substr(0, file_name.find(\".\"));\n        if(s.length() == 0)\n\
    \        {\n            return \"No\";\n        }\n        else\n        {\n \
    \           if(s[0] >= 'a' && s[0] <= 'z' || s[0] >= 'A' && s[0] <= 'Z')\n   \
    \         {\n                std::string s1 = file_name.substr(file_name.find(\"\
    .\") + 1, len);\n                if(s1 == \"txt\" || s1 == \"exe\" || s1 == \"\
    dll\")\n                {\n                    return \"Yes\";\n             \
    \   }\n                else\n                {\n                    return \"\
    No\";\n                }\n            }\n            else\n            {\n   \
    \             return \"No\";\n            }\n        }\n    }", "    int count\
    \ = 0;\n    int count_dot = 0;\n    int count_digit = 0;\n    int count_alpha\
    \ = 0;\n    int count_alpha_upper = 0;\n    int count_alpha_lower = 0;\n    int\
    \ count_alpha_before_dot = 0;\n    int count_alpha_after_dot = 0;\n    int count_alpha_after_dot_upper\
    \ = 0;\n    int count_alpha_after_dot_lower = 0;\n    int count_alpha_before_dot_upper\
    \ = 0;\n    int count_alpha_before_dot_lower = 0;\n    int count_txt = 0;\n  \
    \  int count_exe = 0;\n    int count_dll = 0;\n    for(int i = 0; i < file_name.length();\
    \ i++) {\n        if(file_name[i] == '.') {\n            count_dot++;\n      \
    \  }\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count_digit++;\n\
    \        }\n        if(file_name[i] >= 'a' && file_name[i] <= 'z') {\n       \
    \     count_alpha_lower++;\n        }\n        if(file_name[i] >= 'A' && file_name[i]\
    \ <= 'Z') {\n            count_alpha_upper++;\n        }\n        if(file_name[i]\
    \ >= 'a' && file_name[i] <= 'z' || file_name[i] >= 'A' && file_name[i] <= 'Z')\
    \ {\n            count_alpha++;\n        }\n        if(file_name[i] >= 'a' &&\
    \ file_name[i] <= 'z' || file_name[i] >= 'A' && file_name[i] <= 'Z' && file_name[i]\
    \ != '.') {\n            count_alpha_before_dot++;\n        }\n        if(file_name[i]\
    \ >= 'a' && file_name[i] <= 'z' || file_name[i] >= 'A' && file_name[i] <= 'Z'\
    \ && file_name[i] == '.') {\n           ", "    int count = 0;\n    int dot =\
    \ 0;\n    int dot_pos = 0;\n    int dot_pos_prev = 0;\n    int dot_pos_next =\
    \ 0;\n    int dot_pos_next_next = 0;\n    int dot_pos_next_next_next = 0;\n  \
    \  int dot_pos_next_next_next_next = 0;\n    int dot_pos_next_next_next_next_next\
    \ = 0;\n    int dot_pos_next_next_next_next_next_next = 0;\n    int dot_pos_next_next_next_next_next_next_next\
    \ = 0;\n    int dot_pos_next_next_next_next_next_next_next_next = 0;\n    int\
    \ dot_pos_next_next_next_next_next_next_next_next_next = 0;\n    int dot_pos_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int dot_pos_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int dot_pos_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int dot_pos_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int dot_pos_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int dot_pos_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int dot_pos_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int dot_pos_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int dot_pos_next_next_next_next_next_next_", "    int count = 0;\n\
    \    int dot_count = 0;\n    int len = file_name.length();\n    for(int i = 0;\
    \ i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n\
    \            count++;\n        }\n        if(file_name[i] == '.') {\n        \
    \    dot_count++;\n        }\n    }\n    if(count > 3 || dot_count != 1) {\n \
    \       return \"No\";\n    }\n    std::string ext = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if(ext == \"txt\" || ext == \"exe\" || ext == \"dll\") {\n   \
    \     return \"Yes\";\n    }\n    return \"No\";", "    int count = 0;\n    int\
    \ dot = 0;\n    int dot_pos = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] == '.') {\n            dot++;\n\
    \            dot_pos = i;\n        }\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n    }\n    if(count > 3) {\n   \
    \     return \"No\";\n    }\n    if(dot != 1) {\n        return \"No\";\n    }\n\
    \    if(file_name[0] < 'a' || file_name[0] > 'z') {\n        return \"No\";\n\
    \    }\n    if(file_name[dot_pos + 1] != 't' || file_name[dot_pos + 2] != 'x'\
    \ || file_name[dot_pos + 3] != 't') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";", "    int count = 0;\n    int dot_count = 0;\n    int dot_index =\
    \ 0;\n    int len = file_name.length();\n    for(int i = 0; i < len; i++) {\n\
    \        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \        dot_index = i;\n        }\n    }\n    if(count > 3) {\n        return\
    \ \"No\";\n    }\n    if(dot_count != 1) {\n        return \"No\";\n    }\n  \
    \  if(dot_index == 0 || dot_index == len - 1) {\n        return \"No\";\n    }\n\
    \    std::string sub_str = file_name.substr(dot_index + 1, len - dot_index - 1);\n\
    \    if(sub_str != \"txt\" && sub_str != \"exe\" && sub_str != \"dll\") {\n  \
    \      return \"No\";\n    }\n    if(file_name[0] >= '0' && file_name[0] <= '9')\
    \ {\n        return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n\
    \    int dot = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len;\
    \ i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n         \
    \   count++;\n        }\n        if(file_name[i] == '.') {\n            dot++;\n\
    \        }\n    }\n    if(count > 3 || dot != 1) {\n        return \"No\";\n \
    \   }\n    std::string s1 = file_name.substr(0, file_name.find(\".\"));\n    std::string\
    \ s2 = file_name.substr(file_name.find(\".\") + 1);\n    if(s1.length() == 0 ||\
    \ (s1[0] < 'a' || s1[0] > 'z') && (s1[0] < 'A' || s1[0] > 'Z')) {\n        return\
    \ \"No\";\n    }\n    if(s2 != \"txt\" && s2 != \"exe\" && s2 != \"dll\") {\n\
    \        return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n  \
    \  int dot_count = 0;\n    int len = file_name.length();\n    for(int i = 0; i\
    \ < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n  \
    \          count++;\n        }\n        if(file_name[i] == '.') {\n          \
    \  dot_count++;\n        }\n    }\n    if(count > 3 || dot_count != 1) {\n   \
    \     return \"No\";\n    }\n    std::string sub_str = file_name.substr(0, file_name.find('.'));\n\
    \    if(sub_str.length() == 0) {\n        return \"No\";\n    }\n    if(!(sub_str[0]\
    \ >= 'a' && sub_str[0] <= 'z') && !(sub_str[0] >= 'A' && sub_str[0] <= 'Z')) {\n\
    \        return \"No\";\n    }\n    sub_str = file_name.substr(file_name.find('.')\
    \ + 1, len);\n    if(sub_str != \"txt\" && sub_str != \"exe\" && sub_str != \"\
    dll\") {\n        return \"No\";\n    }\n    return \"Yes\";", "    // Your code\
    \ here\n    std::string result = \"No\";\n    std::string ext = \"\";\n    int\
    \ count = 0;\n    for(int i = 0; i < file_name.length(); i++){\n        if(file_name[i]\
    \ == '.'){\n            ext = file_name.substr(i+1, file_name.length()-i-1);\n\
    \            break;\n        }\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9'){\n            count++;\n        }\n    }\n    if(count <= 3 && ext ==\
    \ \"txt\" || ext == \"exe\" || ext == \"dll\"){\n        result = \"Yes\";\n \
    \   }\n    return result;", "    int dot_count = 0;\n    int digit_count = 0;\n\
    \    int len = file_name.length();\n    for (int i = 0; i < len; i++) {\n    \
    \    if (file_name[i] == '.') {\n            dot_count++;\n        }\n       \
    \ if (file_name[i] >= '0' && file_name[i] <= '9') {\n            digit_count++;\n\
    \        }\n    }\n    if (dot_count != 1 || digit_count > 3) {\n        return\
    \ \"No\";\n    }\n    int dot_index = file_name.find('.');\n    std::string before_dot\
    \ = file_name.substr(0, dot_index);\n    std::string after_dot = file_name.substr(dot_index\
    \ + 1);\n    if (before_dot.length() == 0 || (before_dot[0] < 'a' || before_dot[0]\
    \ > 'z') && (before_dot[0] < 'A' || before_dot[0] > 'Z')) {\n        return \"\
    No\";\n    }\n    if (after_dot != \"txt\" && after_dot != \"exe\" && after_dot\
    \ != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";", "    //\
    \ Your code here\n    int count = 0;\n    int dot = 0;\n    int dot_index = 0;\n\
    \    int len = file_name.length();\n    for(int i = 0; i < len; i++) {\n     \
    \   if(file_name[i] == '.') {\n            dot++;\n            dot_index = i;\n\
    \        }\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n       \
    \     count++;\n        }\n    }\n    if(count > 3) {\n        return \"No\";\n\
    \    }\n    if(dot != 1) {\n        return \"No\";\n    }\n    if(dot_index ==\
    \ 0) {\n        return \"No\";\n    }\n    if(file_name[dot_index + 1] == 't'\
    \ && file_name[dot_index + 2] == 'x' && file_name[dot_index + 3] == 't') {\n \
    \       return \"Yes\";\n    }\n    if(file_name[dot_index + 1] == 'e' && file_name[dot_index\
    \ + 2] == 'x' && file_name[dot_index + 3] == 'e') {\n        return \"Yes\";\n\
    \    }\n    if(file_name[dot_index + 1] == 'd' && file_name[dot_index + 2] ==\
    \ 'l' && file_name[dot_index + 3] == 'l') {\n        return \"Yes\";\n    }\n\
    \    return \"No\";", "    int count = 0;\n    int dot_count = 0;\n    int len\
    \ = file_name.length();\n    int i = 0;\n    while(i < len) {\n        if(file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n        }\n        i++;\n    }\n    if(count\
    \ > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    std::string str\
    \ = file_name.substr(0, file_name.find('.'));\n    if(str.length() == 0) {\n \
    \       return \"No\";\n    }\n    if(str[0] >= 'a' && str[0] <= 'z' || str[0]\
    \ >= 'A' && str[0] <= 'Z') {\n        std::string str1 = file_name.substr(file_name.find('.')\
    \ + 1, file_name.length());\n        if(str1 == \"txt\" || str1 == \"exe\" ||\
    \ str1 == \"dll\") {\n            return \"Yes\";\n        }\n    }\n    return\
    \ \"No\";", "    int count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n\
    \    int digit_count = 0;\n    int digit_index = 0;\n    int alpha_count = 0;\n\
    \    int alpha_index = 0;\n    int alpha_index_2 = 0;\n    int alpha_index_3 =\
    \ 0;\n    int alpha_index_4 = 0;\n    int alpha_index_5 = 0;\n    int alpha_index_6\
    \ = 0;\n    int alpha_index_7 = 0;\n    int alpha_index_8 = 0;\n    int alpha_index_9\
    \ = 0;\n    int alpha_index_10 = 0;\n    int alpha_index_11 = 0;\n    int alpha_index_12\
    \ = 0;\n    int alpha_index_13 = 0;\n    int alpha_index_14 = 0;\n    int alpha_index_15\
    \ = 0;\n    int alpha_index_16 = 0;\n    int alpha_index_17 = 0;\n    int alpha_index_18\
    \ = 0;\n    int alpha_index_19 = 0;\n    int alpha_index_20 = 0;\n    int alpha_index_21\
    \ = 0;\n    int alpha_index_22 = 0;\n    int alpha_index_23 = 0;\n    int alpha_index_24\
    \ = 0;\n    int alpha_index_25 = 0;\n    int alpha_index_26 = 0;\n    int alpha_index_27\
    \ = 0;\n    int alpha_index_28 = 0;\n    int alpha_index_29 = 0;\n    int alpha_index_30\
    \ = 0;\n    int alpha_index_31 = 0;\n    int alpha_index_32 = 0;\n    int alpha_index_33\
    \ = 0;\n    int alpha_index_34 = 0;\n    int alpha_index_35 = 0;\n    int alpha_index_36\
    \ = 0;\n    int alpha_index_37 = 0;\n    int alpha_index_38 = 0;\n    int alpha_index_39\
    \ = 0;\n    int alpha_index_40 = 0;\n    int alpha_index_41 = 0;\n    int alpha_index_42\
    \ = 0;", "    int count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n\
    \    int dot_index_after = 0;\n    int dot_index_before = 0;\n    int dot_index_before_end\
    \ = 0;\n    int dot_index_after_end = 0;\n    int dot_index_before_start = 0;\n\
    \    int dot_index_after_start = 0;\n    for (int i = 0; i < file_name.length();\
    \ i++) {\n        if (file_name[i] == '.') {\n            dot_count++;\n     \
    \       dot_index = i;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n    }\n    if (count > 3) {\n  \
    \      return \"No\";\n    }\n    if (dot_count != 1) {\n        return \"No\"\
    ;\n    }\n    dot_index_before = dot_index;\n    dot_index_after = dot_index;\n\
    \    dot_index_before_end = dot_index_before - 1;\n    dot_index_after_end = dot_index_after\
    \ + 1;\n    dot_index_before_start = dot_index_before - 1;\n    dot_index_after_start\
    \ = dot_index_after + 1;\n    while (file_name[dot_index_before_start] >= 'a'\
    \ && file_name[dot_index_before_start] <= 'z' || file_name[dot_index_before_start]\
    \ >= 'A' && file_name[dot_index_before_start] <= 'Z') {\n        dot_index_before_start--;\n\
    \    }\n    while (file_name[dot_index_after_end] >= 'a' && file_name[dot_index_after_end]\
    \ <= 'z' || file_name[dot_index_after_end] >= 'A' && file_name[dot_index_after_end]\
    \ <= 'Z') {\n        dot_index_after_end++;\n    }\n    if (dot_index_before_start\
    \ != dot_index_before_end)", "    int count = 0;\n    int dot = 0;\n    int dot_index\
    \ = 0;\n    int length = file_name.length();\n    for(int i = 0; i < length; i++)\
    \ {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot++;\n          \
    \  dot_index = i;\n        }\n    }\n    if(count > 3) {\n        return \"No\"\
    ;\n    }\n    if(dot != 1) {\n        return \"No\";\n    }\n    if(file_name[0]\
    \ < 'a' || file_name[0] > 'z') {\n        return \"No\";\n    }\n    if(file_name[dot_index\
    \ + 1] != 't' || file_name[dot_index + 2] != 'x' || file_name[dot_index + 3] !=\
    \ 't') {\n        return \"No\";\n    }\n    return \"Yes\";", "    int count\
    \ = 0;\n    int dot_count = 0;\n    int dot_pos = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n            dot_pos = i;\n        }\n    }\n  \
    \  if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    std::string\
    \ str1 = file_name.substr(0, dot_pos);\n    std::string str2 = file_name.substr(dot_pos\
    \ + 1, len - dot_pos - 1);\n    if(str1.length() == 0 || (str1[0] < 'a' || str1[0]\
    \ > 'z') && (str1[0] < 'A' || str1[0] > 'Z')) {\n        return \"No\";\n    }\n\
    \    if(str2 != \"txt\" && str2 != \"exe\" && str2 != \"dll\") {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int dot_count\
    \ = 0;\n    int dot_index = 0;\n    for(int i = 0; i < file_name.length(); i++)\
    \ {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \        dot_index = i;\n        }\n    }\n    if(count > 3) {\n        return\
    \ \"No\";\n    }\n    if(dot_count != 1) {\n        return \"No\";\n    }\n  \
    \  if(file_name[0] < 'a' || file_name[0] > 'z') {\n        return \"No\";\n  \
    \  }\n    if(file_name.substr(dot_index + 1, file_name.length() - 1) != \"txt\"\
    \ && file_name.substr(dot_index + 1, file_name.length() - 1) != \"exe\" && file_name.substr(dot_index\
    \ + 1, file_name.length() - 1) != \"dll\") {\n        return \"No\";\n    }\n\
    \    return \"Yes\";", "    int count = 0;\n    int dot_count = 0;\n    int len\
    \ = file_name.length();\n    for(int i = 0; i < len; i++) {\n        if(file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n        }\n    }\n    if(count > 3 || dot_count\
    \ != 1) {\n        return \"No\";\n    }\n    std::string sub = file_name.substr(0,\
    \ file_name.find('.'));\n    if(sub.length() == 0) {\n        return \"No\";\n\
    \    }\n    if(sub[0] >= 'a' && sub[0] <= 'z' || sub[0] >= 'A' && sub[0] <= 'Z')\
    \ {\n        std::string ext = file_name.substr(file_name.find('.') + 1);\n  \
    \      if(ext == \"txt\" || ext == \"exe\" || ext == \"dll\") {\n            return\
    \ \"Yes\";\n        }\n    }\n    return \"No\";", "    int count = 0;\n    int\
    \ count_dot = 0;\n    int count_digit = 0;\n    int count_alpha = 0;\n    int\
    \ count_alpha_upper = 0;\n    int count_alpha_lower = 0;\n    int count_txt =\
    \ 0;\n    int count_exe = 0;\n    int count_dll = 0;\n    int count_substring_before_dot\
    \ = 0;\n    int count_substring_after_dot = 0;\n    int count_substring_before_dot_alpha\
    \ = 0;\n    int count_substring_before_dot_digit = 0;\n    int count_substring_after_dot_alpha\
    \ = 0;\n    int count_substring_after_dot_digit = 0;\n    int count_substring_after_dot_alpha_lower\
    \ = 0;\n    int count_substring_after_dot_alpha_upper = 0;\n    int count_substring_after_dot_txt\
    \ = 0;\n    int count_substring_after_dot_exe = 0;\n    int count_substring_after_dot_dll\
    \ = 0;\n    int count_substring_after_dot_txt_alpha = 0;\n    int count_substring_after_dot_exe_alpha\
    \ = 0;\n    int count_substring_after_dot_dll_alpha = 0;\n    int count_substring_after_dot_txt_digit\
    \ = 0;\n    int count_substring_after_dot_exe_digit = 0;\n    int count_substring_after_dot_dll_digit\
    \ = 0;\n    int count_substring_after_dot_txt_alpha_lower = 0;\n    int count_substring_after_dot_exe_alpha_lower\
    \ = 0;\n    int count_substring_after_dot_dll_alpha_lower = 0;\n    int count_substring_after_dot_txt_alpha_upper\
    \ = 0;\n    int count_substring_after_dot_exe_alpha_upper = 0;\n    int count_substring_after_dot_dll_alpha_upper\
    \ = 0;\n    int count_substring_after_dot_txt_alpha_lower_digit = 0;\n    int",
  "    int count = 0;\n    int dot = 0;\n    int dot_index = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot++;\n            dot_index = i;\n        }\n    }\n    if(count\
    \ > 3) {\n        return \"No\";\n    }\n    if(dot != 1) {\n        return \"\
    No\";\n    }\n    if(dot_index == 0) {\n        return \"No\";\n    }\n    if(file_name[dot_index\
    \ + 1] == 't' && file_name[dot_index + 2] == 'x' && file_name[dot_index + 3] ==\
    \ 't') {\n        return \"Yes\";\n    }\n    if(file_name[dot_index + 1] == 'e'\
    \ && file_name[dot_index + 2] == 'x' && file_name[dot_index + 3] == 'e') {\n \
    \       return \"Yes\";\n    }\n    if(file_name[dot_index + 1] == 'd' && file_name[dot_index\
    \ + 2] == 'l' && file_name[dot_index + 3] == 'l') {\n        return \"Yes\";\n\
    \    }\n    return \"No\";", "    int count = 0;\n    int dot = 0;\n    int dot_pos\
    \ = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len; i++) {\n\
    \        if(file_name[i] == '.') {\n            dot++;\n            dot_pos =\
    \ i;\n        }\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n  \
    \          count++;\n        }\n    }\n    if(count > 3) {\n        return \"\
    No\";\n    }\n    if(dot != 1) {\n        return \"No\";\n    }\n    if(file_name[0]\
    \ < 'a' || file_name[0] > 'z') {\n        return \"No\";\n    }\n    if(file_name[dot_pos\
    \ + 1] != 't' || file_name[dot_pos + 2] != 'x' || file_name[dot_pos + 3] != 't')\
    \ {\n        return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n\
    \    int dot_count = 0;\n    int len = file_name.length();\n    for(int i = 0;\
    \ i < len; i++) {\n        if(file_name[i] == '.') {\n            dot_count++;\n\
    \        }\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n       \
    \     count++;\n        }\n    }\n    if(count > 3 || dot_count != 1) {\n    \
    \    return \"No\";\n    }\n    std::string str = file_name.substr(0, file_name.find('.'));\n\
    \    if(str.length() == 0) {\n        return \"No\";\n    }\n    if(str[0] >=\
    \ 'a' && str[0] <= 'z' || str[0] >= 'A' && str[0] <= 'Z') {\n        std::string\
    \ str2 = file_name.substr(file_name.find('.') + 1, len);\n        if(str2 == \"\
    txt\" || str2 == \"exe\" || str2 == \"dll\") {\n            return \"Yes\";\n\
    \        }\n    }\n    return \"No\";", "    int count = 0;\n    int dot_count\
    \ = 0;\n    int dot_index = 0;\n    int digit_count = 0;\n    int digit_index\
    \ = 0;\n    int letter_count = 0;\n    int letter_index = 0;\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int A = 0;\n    int B = 0;\n    int C = 0;\n\
    \    int D = 0;\n    int E = 0;\n    int F = 0;\n    int G = 0;\n    int H = 0;\n\
    \    int I = 0;\n    int J = 0;\n    int K = 0;\n    int L = 0;\n    int M = 0;\n\
    \    int N = 0;\n    int O = 0;\n    int P = 0;\n    int Q = 0;\n    int R = 0;\n\
    \    int S = 0;\n    int T = 0;\n    int U = 0;\n    int V = 0;\n    int W = 0;\n\
    \    int X = 0;\n    int Y = 0;\n    int Z = 0;\n    std::string txt = \"txt\"\
    ;\n    std::string exe = \"exe\";\n    std::string dll = \"dll\";\n    std::string\
    \ substring1;\n    std::string substring2;\n    std::string substring3;\n    std::string\
    \ substring4;\n    std::string substring5;\n    std::string substring6;\n    std::string\
    \ substring7;\n    std::string substring8;\n    std::string substring9;\n    std::string\
    \ substring10;\n    std::string substring11;\n    std::string substring12;\n \
    \  ", "    int count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n  \
    \  for(int i = 0; i < file_name.length(); i++) {\n        if(file_name[i] >= '0'\
    \ && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \    }\n    if(count > 3) {\n        return \"No\";\n    }\n    if(dot_count !=\
    \ 1) {\n        return \"No\";\n    }\n    if(dot_index == 0) {\n        return\
    \ \"No\";\n    }\n    if(file_name[dot_index + 1] == 't' && file_name[dot_index\
    \ + 2] == 'x' && file_name[dot_index + 3] == 't') {\n        return \"Yes\";\n\
    \    }\n    if(file_name[dot_index + 1] == 'e' && file_name[dot_index + 2] ==\
    \ 'x' && file_name[dot_index + 3] == 'e') {\n        return \"Yes\";\n    }\n\
    \    if(file_name[dot_index + 1] == 'd' && file_name[dot_index + 2] == 'l' &&\
    \ file_name[dot_index + 3] == 'l') {\n        return \"Yes\";\n    }\n    return\
    \ \"No\";", "    int count = 0;\n    for(int i = 0; i < file_name.length(); i++)\
    \ {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n    }\n    if(count > 3) {\n        return \"No\";\n    }\n    int\
    \ dot_count = 0;\n    for(int i = 0; i < file_name.length(); i++) {\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n        }\n    }\n    if(dot_count != 1)\
    \ {\n        return \"No\";\n    }\n    int dot_index = 0;\n    for(int i = 0;\
    \ i < file_name.length(); i++) {\n        if(file_name[i] == '.') {\n        \
    \    dot_index = i;\n        }\n    }\n    std::string sub_string_before_dot =\
    \ file_name.substr(0, dot_index);\n    if(sub_string_before_dot.length() == 0)\
    \ {\n        return \"No\";\n    }\n    if(sub_string_before_dot[0] >= 'a' &&\
    \ sub_string_before_dot[0] <= 'z') {\n        return \"Yes\";\n    }\n    if(sub_string_before_dot[0]\
    \ >= 'A' && sub_string_before_dot[0] <= 'Z') {\n        return \"Yes\";\n    }\n\
    \    return \"No\";", "    // your code here\n    int dot_count = 0;\n    int\
    \ num_count = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len;\
    \ i++) {\n        if(file_name[i] == '.') {\n            dot_count++;\n      \
    \  }\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            num_count++;\n\
    \        }\n    }\n    if(dot_count != 1 || num_count > 3) {\n        return \"\
    No\";\n    }\n    std::string ext = file_name.substr(file_name.find(\".\") + 1);\n\
    \    if(ext == \"txt\" || ext == \"exe\" || ext == \"dll\") {\n        return\
    \ \"Yes\";\n    }\n    return \"No\";", "    int count = 0;\n    int dot_count\
    \ = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len; i++) {\n\
    \        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \    }\n    }\n    if(count > 3 || dot_count != 1) {\n        return \"No\";\n\
    \    }\n    std::string ext = file_name.substr(file_name.find('.') + 1);\n   \
    \ if(ext != \"txt\" && ext != \"exe\" && ext != \"dll\") {\n        return \"\
    No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int dot = 0;\n  \
    \  int dot_index = 0;\n    int count_after_dot = 0;\n    int count_before_dot\
    \ = 0;\n    int count_after_dot_txt = 0;\n    int count_after_dot_exe = 0;\n \
    \   int count_after_dot_dll = 0;\n    int count_before_dot_letter = 0;\n    int\
    \ count_before_dot_number = 0;\n    int count_before_dot_letter_upper = 0;\n \
    \   int count_before_dot_letter_lower = 0;\n    int count_before_dot_letter_upper_first\
    \ = 0;\n    int count_before_dot_letter_lower_first = 0;\n    int count_before_dot_letter_upper_second\
    \ = 0;\n    int count_before_dot_letter_lower_second = 0;\n    int count_before_dot_letter_upper_third\
    \ = 0;\n    int count_before_dot_letter_lower_third = 0;\n    int count_before_dot_letter_upper_fourth\
    \ = 0;\n    int count_before_dot_letter_lower_fourth = 0;\n    int count_before_dot_letter_upper_fifth\
    \ = 0;\n    int count_before_dot_letter_lower_fifth = 0;\n    int count_before_dot_letter_upper_sixth\
    \ = 0;\n    int count_before_dot_letter_lower_sixth = 0;\n    int count_before_dot_letter_upper_seventh\
    \ = 0;\n    int count_before_dot_letter_lower_seventh = 0;\n    int count_before_dot_letter_upper_eighth\
    \ = 0;\n    int count_before_dot_letter_lower_eighth = 0;\n    int count_before_dot_letter_upper_ninth\
    \ = 0;\n    int count_before_dot_letter_lower_ninth = 0;\n    int count_before_dot_letter_upper_tenth\
    \ = 0;\n    int count_before_dot_letter_lower_tenth = 0;\n    int count_before_dot_letter_upper_eleventh\
    \ = 0;\n    int count", "    // Your code here\n    int count = 0;\n    int dot_count\
    \ = 0;\n    int len = file_name.length();\n    if(len < 5)\n        return \"\
    No\";\n    for(int i = 0; i < len; i++)\n    {\n        if(file_name[i] == '.')\n\
    \        {\n            dot_count++;\n            if(dot_count > 1)\n        \
    \        return \"No\";\n        }\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9')\n            count++;\n        if(count > 3)\n            return \"\
    No\";\n    }\n    if(count == 0)\n        return \"No\";\n    std::string ext\
    \ = file_name.substr(file_name.find(\".\") + 1);\n    if(ext != \"txt\" && ext\
    \ != \"exe\" && ext != \"dll\")\n        return \"No\";\n    return \"Yes\";",
  "    int count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n    int len\
    \ = file_name.length();\n    for(int i = 0; i < len; i++) {\n        if(file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \    }\n    if(count > 3) {\n        return \"No\";\n    }\n    if(dot_count !=\
    \ 1) {\n        return \"No\";\n    }\n    if(file_name[0] < 'a' || file_name[0]\
    \ > 'z') {\n        return \"No\";\n    }\n    if(file_name[dot_index + 1] !=\
    \ 't' || file_name[dot_index + 2] != 'x' || file_name[dot_index + 3] != 't') {\n\
    \        return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n  \
    \  int dot_count = 0;\n    int len = file_name.length();\n    for(int i = 0; i\
    \ < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n  \
    \          count++;\n        }\n        if(file_name[i] == '.') {\n          \
    \  dot_count++;\n        }\n    }\n    if(count > 3 || dot_count != 1) {\n   \
    \     return \"No\";\n    }\n    std::string sub = file_name.substr(0, file_name.find('.'));\n\
    \    if(sub.length() == 0) {\n        return \"No\";\n    }\n    if(sub[0] >=\
    \ 'a' && sub[0] <= 'z' || sub[0] >= 'A' && sub[0] <= 'Z') {\n        std::string\
    \ sub2 = file_name.substr(file_name.find('.') + 1, file_name.length());\n    \
    \    if(sub2 == \"txt\" || sub2 == \"exe\" || sub2 == \"dll\") {\n           \
    \ return \"Yes\";\n        }\n    }\n    return \"No\";", "    int dot_count =\
    \ 0;\n    int digit_count = 0;\n    int letter_count = 0;\n    int dot_index =\
    \ -1;\n    int letter_index = -1;\n    for (int i = 0; i < file_name.length();\
    \ i++) {\n        if (file_name[i] == '.') {\n            dot_count++;\n     \
    \       dot_index = i;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            digit_count++;\n        }\n        if ((file_name[i]\
    \ >= 'a' && file_name[i] <= 'z') || (file_name[i] >= 'A' && file_name[i] <= 'Z'))\
    \ {\n            letter_count++;\n            letter_index = i;\n        }\n \
    \   }\n    if (dot_count != 1 || digit_count > 3 || letter_count == 0 || letter_index\
    \ > dot_index) {\n        return \"No\";\n    }\n    std::string extension = file_name.substr(dot_index\
    \ + 1);\n    if (extension != \"txt\" && extension != \"exe\" && extension !=\
    \ \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";", "    int count\
    \ = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9')\
    \ {\n            count++;\n        }\n        if(file_name[i] == '.') {\n    \
    \        dot_count++;\n        }\n    }\n    if(count > 3 || dot_count != 1) {\n\
    \        return \"No\";\n    }\n    std::string ext = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if(ext == \"txt\" || ext == \"exe\" || ext == \"dll\") {\n   \
    \     return \"Yes\";\n    }\n    return \"No\";", "    std::string file_name_copy\
    \ = file_name;\n    std::string file_name_copy_2 = file_name;\n    std::string\
    \ file_name_copy_3 = file_name;\n    std::string file_name_copy_4 = file_name;\n\
    \    std::string file_name_copy_5 = file_name;\n    std::string file_name_copy_6\
    \ = file_name;\n    std::string file_name_copy_7 = file_name;\n    std::string\
    \ file_name_copy_8 = file_name;\n    std::string file_name_copy_9 = file_name;\n\
    \    std::string file_name_copy_10 = file_name;\n    std::string file_name_copy_11\
    \ = file_name;\n    std::string file_name_copy_12 = file_name;\n    std::string\
    \ file_name_copy_13 = file_name;\n    std::string file_name_copy_14 = file_name;\n\
    \    std::string file_name_copy_15 = file_name;\n    std::string file_name_copy_16\
    \ = file_name;\n    std::string file_name_copy_17 = file_name;\n    std::string\
    \ file_name_copy_18 = file_name;\n    std::string file_name_copy_19 = file_name;\n\
    \    std::string file_name_copy_20 = file_name;\n    std::string file_name_copy_21\
    \ = file_name;\n    std::string file_name_copy_22 = file_name;\n    std::string\
    \ file_name_copy_23 = file_name;\n    std::string file_name_copy_24 = file_name;\n\
    \    std::string file_name_copy_25 = file_name;\n    std::string file_name_copy_26\
    \ = file_name;\n    std::string file_name_copy_27 = file_name;\n    std::string\
    \ file_name_copy_28 = file_name;\n    std::string file_name_copy_29 = file_name;\n\
    \    std::string file_name_copy_30 = file_name;\n    std::", "    // TODO: implement\
    \ this function\n    int count = 0;\n    int dot_count = 0;\n    int dot_index\
    \ = 0;\n    int dot_index_2 = 0;\n    int dot_index_3 = 0;\n    int dot_index_4\
    \ = 0;\n    int dot_index_5 = 0;\n    int dot_index_6 = 0;\n    int dot_index_7\
    \ = 0;\n    int dot_index_8 = 0;\n    int dot_index_9 = 0;\n    int dot_index_10\
    \ = 0;\n    int dot_index_11 = 0;\n    int dot_index_12 = 0;\n    int dot_index_13\
    \ = 0;\n    int dot_index_14 = 0;\n    int dot_index_15 = 0;\n    int dot_index_16\
    \ = 0;\n    int dot_index_17 = 0;\n    int dot_index_18 = 0;\n    int dot_index_19\
    \ = 0;\n    int dot_index_20 = 0;\n    int dot_index_21 = 0;\n    int dot_index_22\
    \ = 0;\n    int dot_index_23 = 0;\n    int dot_index_24 = 0;\n    int dot_index_25\
    \ = 0;\n    int dot_index_26 = 0;\n    int dot_index_27 = 0;\n    int dot_index_28\
    \ = 0;\n    int dot_index_29 = 0;\n    int dot_index_30 = 0;\n    int dot_index_31\
    \ = 0;\n    int dot_index_32 = 0;\n    int dot_index_33 = 0;\n    int dot_index_34\
    \ = 0;\n    int dot_index_35 = 0;\n    int dot_index_36 = 0;\n    int dot_index_37\
    \ = 0;\n    int dot_index_38 = 0;\n    int dot_index_39 = 0;\n    int dot_index_40\
    \ = 0;\n    int dot_index_41 = 0;\n    int dot_index_42 = 0;\n    int dot_index_43\
    \ = 0;\n    int dot_index_44 = 0;\n    int dot_", "    int count = 0;\n    int\
    \ dot_count = 0;\n    int dot_index = 0;\n    int dot_index_after = 0;\n    int\
    \ dot_index_before = 0;\n    int dot_index_before_end = 0;\n    int dot_index_after_end\
    \ = 0;\n    int dot_index_before_start = 0;\n    int dot_index_after_start = 0;\n\
    \    int dot_index_before_start_end = 0;\n    int dot_index_after_start_end =\
    \ 0;\n    int dot_index_before_start_end_end = 0;\n    int dot_index_after_start_end_end\
    \ = 0;\n    int dot_index_before_start_end_end_end = 0;\n    int dot_index_after_start_end_end_end\
    \ = 0;\n    int dot_index_before_start_end_end_end_end = 0;\n    int dot_index_after_start_end_end_end_end\
    \ = 0;\n    int dot_index_before_start_end_end_end_end_end = 0;\n    int dot_index_after_start_end_end_end_end_end\
    \ = 0;\n    int dot_index_before_start_end_end_end_end_end_end = 0;\n    int dot_index_after_start_end_end_end_end_end_end\
    \ = 0;\n    int dot_index_before_start_end_end_end_end_end_end_end = 0;\n    int\
    \ dot_index_after_start_end_end_end_end_end_end_end = 0;\n    int dot_index_before_start_end_end_end_end_end_end_end_end\
    \ = 0;\n    int dot_index_after_start_end_end_end_end_end_end_end_end = 0;\n \
    \   int dot_index_before_start_end_end_end_end_end_end_end_end_end = 0;\n    int\
    \ dot_index_after_start_end_end_end_end_end_end_end_end_end = 0", "    // Your\
    \ code here\n    int count = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++)\n    {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9')\n        {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.')\n        {\n            dot_count++;\n        }\n    }\n    if(count\
    \ > 3 || dot_count != 1)\n    {\n        return \"No\";\n    }\n    std::string\
    \ str = file_name.substr(0, file_name.find(\".\"));\n    std::string str1 = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if(str.length() == 0 || (str[0] < 'a' || str[0] > 'z') && (str[0]\
    \ < 'A' || str[0] > 'Z'))\n    {\n        return \"No\";\n    }\n    if(str1 !=\
    \ \"txt\" && str1 != \"exe\" && str1 != \"dll\")\n    {\n        return \"No\"\
    ;\n    }\n    return \"Yes\";", "    int count = 0;\n    int dot_count = 0;\n\
    \    int len = file_name.length();\n    int i = 0;\n    while(i < len) {\n   \
    \     if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \    }\n        i++;\n    }\n    if(count > 3 || dot_count != 1) {\n        return\
    \ \"No\";\n    }\n    std::string sub_str = file_name.substr(0, file_name.find(\"\
    .\"));\n    if(sub_str.length() == 0) {\n        return \"No\";\n    }\n    if(sub_str[0]\
    \ >= 'a' && sub_str[0] <= 'z') {\n        return \"Yes\";\n    }\n    if(sub_str[0]\
    \ >= 'A' && sub_str[0] <= 'Z') {\n        return \"Yes\";\n    }\n    return \"\
    No\";", "    // Write your code here\n    int count = 0;\n    int dot_count =\
    \ 0;\n    int len = file_name.length();\n    for(int i = 0; i < len; i++) {\n\
    \        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \    }\n    }\n    if(count > 3 || dot_count != 1) {\n        return \"No\";\n\
    \    }\n    std::string sub1 = file_name.substr(0, file_name.find('.'));\n   \
    \ std::string sub2 = file_name.substr(file_name.find('.') + 1);\n    if(sub1.length()\
    \ == 0 || (sub1[0] < 'a' || sub1[0] > 'z') && (sub1[0] < 'A' || sub1[0] > 'Z'))\
    \ {\n        return \"No\";\n    }\n    if(sub2 != \"txt\" && sub2 != \"exe\"\
    \ && sub2 != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";",
  "    int count = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n        }\n    }\n    if(count > 3 || dot_count\
    \ != 1) {\n        return \"No\";\n    }\n    std::string sub = file_name.substr(0,\
    \ file_name.find('.'));\n    if(sub.length() == 0) {\n        return \"No\";\n\
    \    }\n    if(sub[0] >= 'a' && sub[0] <= 'z' || sub[0] >= 'A' && sub[0] <= 'Z')\
    \ {\n        std::string sub2 = file_name.substr(file_name.find('.') + 1);\n \
    \       if(sub2 == \"txt\" || sub2 == \"exe\" || sub2 == \"dll\") {\n        \
    \    return \"Yes\";\n        }\n    }\n    return \"No\";", "    int dot_count\
    \ = 0;\n    int digit_count = 0;\n    int len = file_name.length();\n    for (int\
    \ i = 0; i < len; i++) {\n        if (file_name[i] == '.') {\n            dot_count++;\n\
    \        }\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n      \
    \      digit_count++;\n        }\n    }\n    if (dot_count != 1 || digit_count\
    \ > 3) {\n        return \"No\";\n    }\n    std::string extension = file_name.substr(file_name.find('.')\
    \ + 1);\n    if (extension == \"txt\" || extension == \"exe\" || extension ==\
    \ \"dll\") {\n        return \"Yes\";\n    }\n    return \"No\";", "    int count\
    \ = 0;\n    int dot = 0;\n    int len = file_name.length();\n    for(int i = 0;\
    \ i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n\
    \            count++;\n        }\n        if(file_name[i] == '.') {\n        \
    \    dot++;\n        }\n    }\n    if(count > 3 || dot != 1) {\n        return\
    \ \"No\";\n    }\n    std::string str = file_name.substr(0, file_name.find(\"\
    .\"));\n    if(str.length() == 0) {\n        return \"No\";\n    }\n    if(str[0]\
    \ >= 'a' && str[0] <= 'z' || str[0] >= 'A' && str[0] <= 'Z') {\n        std::string\
    \ str1 = file_name.substr(file_name.find(\".\") + 1);\n        if(str1 == \"txt\"\
    \ || str1 == \"exe\" || str1 == \"dll\") {\n            return \"Yes\";\n    \
    \    }\n    }\n    return \"No\";", "    int count = 0;\n    int dot_count = 0;\n\
    \    int dot_pos = 0;\n    int len = file_name.length();\n    for(int i = 0; i\
    \ < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n  \
    \          count++;\n        }\n        if(file_name[i] == '.') {\n          \
    \  dot_count++;\n            dot_pos = i;\n        }\n    }\n    if(count > 3\
    \ || dot_count != 1) {\n        return \"No\";\n    }\n    if(file_name[0] < 'a'\
    \ || file_name[0] > 'z') {\n        return \"No\";\n    }\n    if(file_name.substr(dot_pos\
    \ + 1, len - dot_pos - 1) != \"txt\" && file_name.substr(dot_pos + 1, len - dot_pos\
    \ - 1) != \"exe\" && file_name.substr(dot_pos + 1, len - dot_pos - 1) != \"dll\"\
    ) {\n        return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n\
    \    int dot_count = 0;\n    int len = file_name.length();\n    for(int i = 0;\
    \ i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n\
    \            count++;\n        }\n        if(file_name[i] == '.') {\n        \
    \    dot_count++;\n        }\n    }\n    if(count > 3 || dot_count != 1) {\n \
    \       return \"No\";\n    }\n    std::string ext = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if(ext == \"txt\" || ext == \"exe\" || ext == \"dll\") {\n   \
    \     return \"Yes\";\n    }\n    return \"No\";", "    // your code here\n  \
    \  int count = 0;\n    int dot = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++){\n        if(file_name[i] >= '0' && file_name[i] <= '9'){\n\
    \            count++;\n        }\n        if(file_name[i] == '.'){\n         \
    \   dot++;\n        }\n    }\n    if(count > 3 || dot != 1){\n        return \"\
    No\";\n    }\n    std::string sub = file_name.substr(0, file_name.find(\".\"));\n\
    \    if(sub.length() == 0){\n        return \"No\";\n    }\n    if(!((sub[0] >=\
    \ 'a' && sub[0] <= 'z') || (sub[0] >= 'A' && sub[0] <= 'Z'))){\n        return\
    \ \"No\";\n    }\n    std::string sub2 = file_name.substr(file_name.find(\".\"\
    ) + 1, len);\n    if(sub2 != \"txt\" && sub2 != \"exe\" && sub2 != \"dll\"){\n\
    \        return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n  \
    \  int count_dot = 0;\n    int count_letter = 0;\n    int count_digit = 0;\n \
    \   int count_substring = 0;\n    for (int i = 0; i < file_name.length(); i++)\
    \ {\n        if (file_name[i] == '.') {\n            count_dot++;\n        }\n\
    \        if (file_name[i] >= 'a' && file_name[i] <= 'z') {\n            count_letter++;\n\
    \        }\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n      \
    \      count_digit++;\n        }\n        if (file_name[i] == '.') {\n       \
    \     count_substring++;\n        }\n    }\n    if (count_dot == 1 && count_letter\
    \ > 0 && count_digit <= 3 && count_substring == 1) {\n        return \"Yes\";\n\
    \    }\n    else {\n        return \"No\";\n    }", "    int count = 0;\n    int\
    \ dot_count = 0;\n    int dot_index = -1;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n            dot_index = i;\n        }\n    }\n\
    \    if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    std::string\
    \ before_dot = file_name.substr(0, dot_index);\n    std::string after_dot = file_name.substr(dot_index\
    \ + 1, len - dot_index - 1);\n    if(before_dot.length() == 0 || (before_dot[0]\
    \ < 'a' || before_dot[0] > 'z') && (before_dot[0] < 'A' || before_dot[0] > 'Z'))\
    \ {\n        return \"No\";\n    }\n    if(after_dot != \"txt\" && after_dot !=\
    \ \"exe\" && after_dot != \"dll\") {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";", "    int count = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n        }\n    }\n    if(count > 3 || dot_count\
    \ != 1) {\n        return \"No\";\n    }\n    std::string ext = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if(ext == \"txt\" || ext == \"exe\" || ext == \"dll\") {\n   \
    \     return \"Yes\";\n    }\n    return \"No\";", "    // check if there are\
    \ more than 3 digits\n    int count = 0;\n    for (int i = 0; i < file_name.length();\
    \ i++) {\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n        \
    \    count++;\n        }\n    }\n    if (count > 3) {\n        return \"No\";\n\
    \    }\n    // check if there is exactly one dot\n    int dot_count = 0;\n   \
    \ for (int i = 0; i < file_name.length(); i++) {\n        if (file_name[i] ==\
    \ '.') {\n            dot_count++;\n        }\n    }\n    if (dot_count != 1)\
    \ {\n        return \"No\";\n    }\n    // check if the substring before the dot\
    \ is not empty and starts with a letter\n    int dot_index = 0;\n    for (int\
    \ i = 0; i < file_name.length(); i++) {\n        if (file_name[i] == '.') {\n\
    \            dot_index = i;\n        }\n    }\n    if (dot_index == 0) {\n   \
    \     return \"No\";\n    }\n    if (!((file_name[0] >= 'a' && file_name[0] <=\
    \ 'z') || (file_name[0] >= 'A' && file_name[0] <= 'Z'))) {\n        return \"\
    No\";\n    }\n    // check if the substring after the dot is one of the following:\
    \ ['txt', 'exe', 'dll']\n    std::string extension = file_name.substr(dot_index\
    \ + 1, file_name.length() - dot_index - 1);\n    if (extension != \"txt\" && extension\
    \ != \"exe\" && extension != \"dll\") {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";", "    int count = 0;\n    int count_dot = 0;\n    int count_digit\
    \ = 0;\n    int count_letter = 0;\n    int count_letter_after_dot = 0;\n    int\
    \ count_letter_before_dot = 0;\n    int count_letter_after_dot_txt = 0;\n    int\
    \ count_letter_after_dot_exe = 0;\n    int count_letter_after_dot_dll = 0;\n \
    \   int count_letter_before_dot_txt = 0;\n    int count_letter_before_dot_exe\
    \ = 0;\n    int count_letter_before_dot_dll = 0;\n    int count_letter_before_dot_txt_exe_dll\
    \ = 0;\n    int count_letter_after_dot_txt_exe_dll = 0;\n    int count_letter_before_dot_txt_exe_dll_upper\
    \ = 0;\n    int count_letter_after_dot_txt_exe_dll_upper = 0;\n    int count_letter_before_dot_txt_exe_dll_lower\
    \ = 0;\n    int count_letter_after_dot_txt_exe_dll_lower = 0;\n    int count_letter_before_dot_txt_exe_dll_upper_lower\
    \ = 0;\n    int count_letter_after_dot_txt_exe_dll_upper_lower = 0;\n    int count_letter_before_dot_txt_exe_dll_upper_lower_digit\
    \ = 0;\n    int count_letter_after_dot_txt_exe_dll_upper_lower_digit = 0;\n  \
    \  int count_letter_before_dot_txt_exe_dll_upper_lower_digit_dot = 0;\n    int\
    \ count_letter_after_dot_txt_exe_dll_upper_lower_digit_dot = 0;\n    int count_letter_before_dot_txt_exe_dll_upper_lower_digit_dot_txt\
    \ = 0;\n    int count_letter_after_dot_txt_exe_dll_upper_lower_digit_dot_txt =\
    \ 0;\n    int count_letter_before_dot_txt_exe_dll_upper_lower_digit_dot_exe =\
    \ 0;\n    int", "    int count = 0;\n    int dot = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot++;\n        }\n    }\n    if(count > 3 || dot != 1) {\n \
    \       return \"No\";\n    }\n    std::string before_dot = file_name.substr(0,\
    \ file_name.find('.'));\n    std::string after_dot = file_name.substr(file_name.find('.')\
    \ + 1);\n    if(before_dot.length() == 0 || (before_dot[0] < 'a' || before_dot[0]\
    \ > 'z') && (before_dot[0] < 'A' || before_dot[0] > 'Z')) {\n        return \"\
    No\";\n    }\n    if(after_dot != \"txt\" && after_dot != \"exe\" && after_dot\
    \ != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";", "    int\
    \ count = 0;\n    int dot_count = 0;\n    int dot_index = -1;\n    int first_letter_index\
    \ = -1;\n    int last_letter_index = -1;\n    for (int i = 0; i < file_name.length();\
    \ i++) {\n        if (file_name[i] == '.') {\n            dot_count++;\n     \
    \       dot_index = i;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if (file_name[i] >= 'a'\
    \ && file_name[i] <= 'z') {\n            first_letter_index = i;\n        }\n\
    \        if (file_name[i] >= 'A' && file_name[i] <= 'Z') {\n            first_letter_index\
    \ = i;\n        }\n        if (file_name[i] >= 'a' && file_name[i] <= 'z') {\n\
    \            last_letter_index = i;\n        }\n        if (file_name[i] >= 'A'\
    \ && file_name[i] <= 'Z') {\n            last_letter_index = i;\n        }\n \
    \   }\n    if (count > 3) {\n        return \"No\";\n    }\n    if (dot_count\
    \ != 1) {\n        return \"No\";\n    }\n    if (first_letter_index == -1 ||\
    \ first_letter_index > dot_index) {\n        return \"No\";\n    }\n    if (last_letter_index\
    \ == -1 || last_letter_index < dot_index) {\n        return \"No\";\n    }\n \
    \   std::string extension = file_name.substr(dot_index + 1);\n    if (extension\
    \ != \"txt\" && extension != \"exe\" && extension != \"dll\") {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int count1 =\
    \ 0;\n    int count2 = 0;\n    int count3 = 0;\n    int count4 = 0;\n    int count5\
    \ = 0;\n    int count6 = 0;\n    int count7 = 0;\n    int count8 = 0;\n    int\
    \ count9 = 0;\n    int count10 = 0;\n    int count11 = 0;\n    int count12 = 0;\n\
    \    int count13 = 0;\n    int count14 = 0;\n    int count15 = 0;\n    int count16\
    \ = 0;\n    int count17 = 0;\n    int count18 = 0;\n    int count19 = 0;\n   \
    \ int count20 = 0;\n    int count21 = 0;\n    int count22 = 0;\n    int count23\
    \ = 0;\n    int count24 = 0;\n    int count25 = 0;\n    int count26 = 0;\n   \
    \ int count27 = 0;\n    int count28 = 0;\n    int count29 = 0;\n    int count30\
    \ = 0;\n    int count31 = 0;\n    int count32 = 0;\n    int count33 = 0;\n   \
    \ int count34 = 0;\n    int count35 = 0;\n    int count36 = 0;\n    int count37\
    \ = 0;\n    int count38 = 0;\n    int count39 = 0;\n    int count40 = 0;\n   \
    \ int count41 = 0;\n    int count42 = 0;\n    int count43 = 0;\n    int count44\
    \ = 0;\n    int count45 = 0;\n    int count46 = 0;\n    int count47 = 0;\n   \
    \ int count48 = 0;\n    int count49 = 0;\n    int count50 = 0;\n    int count51\
    \ = 0;\n    int count52 = 0;\n    int count53 = 0;\n    int count54 = 0;\n   \
    \ int count55 = 0;\n    int count56 = 0;\n    int count57 = 0;\n    int count58\
    \ = 0;\n    int count59 = 0;\n    int count60 = 0;\n    int count61 = 0;\n   \
    \ int count62 = 0;\n    int count63 = 0;\n", "    // Write your code here\n  \
    \  int count = 0;\n    int dot = 0;\n    int flag = 0;\n    for(int i = 0; i <\
    \ file_name.length(); i++)\n    {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9')\n        {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.')\n        {\n            dot++;\n        }\n        if(file_name[i] ==\
    \ '.' && i == 0)\n        {\n            flag = 1;\n        }\n    }\n    if(count\
    \ > 3 || dot != 1 || flag == 1)\n    {\n        return \"No\";\n    }\n    else\n\
    \    {\n        std::string str = file_name.substr(file_name.find(\".\") + 1);\n\
    \        if(str == \"txt\" || str == \"exe\" || str == \"dll\")\n        {\n \
    \           return \"Yes\";\n        }\n        else\n        {\n            return\
    \ \"No\";\n        }\n    }", "    int count = 0;\n    int dot_count = 0;\n  \
    \  int dot_index = 0;\n    int dot_flag = 0;\n    int ext_flag = 0;\n    int ext_count\
    \ = 0;\n    int ext_index = 0;\n    for(int i = 0; i < file_name.length(); i++)\
    \ {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \        dot_index = i;\n        }\n    }\n    if(count > 3) {\n        return\
    \ \"No\";\n    }\n    if(dot_count != 1) {\n        return \"No\";\n    }\n  \
    \  if(file_name[0] >= 'a' && file_name[0] <= 'z') {\n        dot_flag = 1;\n \
    \   }\n    if(file_name[0] >= 'A' && file_name[0] <= 'Z') {\n        dot_flag\
    \ = 1;\n    }\n    if(dot_flag == 0) {\n        return \"No\";\n    }\n    for(int\
    \ i = dot_index + 1; i < file_name.length(); i++) {\n        ext_count++;\n  \
    \      ext_index = i;\n    }\n    if(ext_count == 3) {\n        if(file_name[ext_index]\
    \ == 't' && file_name[ext_index - 1] == 'x' && file_name[ext_index - 2] == 't')\
    \ {\n            ext_flag = 1;\n        }\n        if(file_name[ext_index] ==\
    \ 'e' && file_name[ext_index - 1] == 'x' && file_name[ext_index - 2] == 'e') {\n\
    \            ext_flag = 1;\n        }\n        if(file_name[ext_index] == 'd'\
    \ && file_name[ext_index - 1] == 'l' && file_name[ext_index - 2] == 'l') {\n \
    \           ext_flag = 1;\n        }\n    }\n   ", "    int dot_count = 0;\n \
    \   int digit_count = 0;\n    std::string extension;\n    for (int i = 0; i <\
    \ file_name.length(); i++) {\n        if (file_name[i] == '.') {\n           \
    \ dot_count++;\n            extension = file_name.substr(i + 1);\n        }\n\
    \        if (isdigit(file_name[i])) {\n            digit_count++;\n        }\n\
    \    }\n    if (dot_count != 1 || digit_count > 3 || !isalpha(file_name[0]) ||\
    \ extension != \"txt\" && extension != \"exe\" && extension != \"dll\") {\n  \
    \      return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int\
    \ dot_count = 0;\n    int dot_index = 0;\n    int dot_index_after = 0;\n    int\
    \ dot_index_before = 0;\n    for(int i = 0; i < file_name.length(); i++) {\n \
    \       if(file_name[i] == '.') {\n            dot_count++;\n            dot_index\
    \ = i;\n        }\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n\
    \            count++;\n        }\n    }\n    if(count > 3) {\n        return \"\
    No\";\n    }\n    if(dot_count != 1) {\n        return \"No\";\n    }\n    dot_index_after\
    \ = dot_index + 1;\n    dot_index_before = dot_index - 1;\n    if(file_name[dot_index_before]\
    \ == '.' || file_name[dot_index_after] == '.') {\n        return \"No\";\n   \
    \ }\n    if(file_name[dot_index_before] == ' ' || file_name[dot_index_after] ==\
    \ ' ') {\n        return \"No\";\n    }\n    if(file_name[dot_index_before] ==\
    \ '\\0' || file_name[dot_index_after] == '\\0') {\n        return \"No\";\n  \
    \  }\n    if(file_name[dot_index_before] == '\\n' || file_name[dot_index_after]\
    \ == '\\n') {\n        return \"No\";\n    }\n    if(file_name[dot_index_before]\
    \ == '\\t' || file_name[dot_index_after] == '\\t') {\n        return \"No\";\n\
    \    }\n    if(file_name[dot_index_before] == '\\r' || file_name[dot_index_after]\
    \ == '\\r') {\n        return \"No\";\n    }\n    if(file_name[dot_index_before]\
    \ == '\\v' || file_name[dot_index_after] == '\\v') {\n        return \"No\";\n\
    \    }\n   ", "    int count = 0;\n    int dot_count = 0;\n    int dot_index =\
    \ -1;\n    int i = 0;\n    while(i < file_name.length()) {\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        i++;\n    }\n    if(count > 3 || dot_count != 1 || dot_index\
    \ == 0 || dot_index == file_name.length() - 1) {\n        return \"No\";\n   \
    \ }\n    std::string before_dot = file_name.substr(0, dot_index);\n    std::string\
    \ after_dot = file_name.substr(dot_index + 1);\n    if(before_dot.length() ==\
    \ 0 || (before_dot[0] < 'a' || before_dot[0] > 'z') && (before_dot[0] < 'A' ||\
    \ before_dot[0] > 'Z')) {\n        return \"No\";\n    }\n    if(after_dot !=\
    \ \"txt\" && after_dot != \"exe\" && after_dot != \"dll\") {\n        return \"\
    No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int dot_count = 0;\n\
    \    int flag = 0;\n    int flag1 = 0;\n    int flag2 = 0;\n    int flag3 = 0;\n\
    \    for(int i = 0; i < file_name.length(); i++) {\n        if(file_name[i] >=\
    \ '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n        }\n        if(file_name[i] >= 'a'\
    \ && file_name[i] <= 'z') {\n            flag = 1;\n        }\n        if(file_name[i]\
    \ >= 'A' && file_name[i] <= 'Z') {\n            flag1 = 1;\n        }\n      \
    \  if(file_name[i] == '.') {\n            if(file_name[i+1] == 't' && file_name[i+2]\
    \ == 'x' && file_name[i+3] == 't') {\n                flag2 = 1;\n           \
    \ }\n            if(file_name[i+1] == 'e' && file_name[i+2] == 'x' && file_name[i+3]\
    \ == 'e') {\n                flag3 = 1;\n            }\n            if(file_name[i+1]\
    \ == 'd' && file_name[i+2] == 'l' && file_name[i+3] == 'l') {\n              \
    \  flag4 = 1;\n            }\n        }\n    }\n    if(count > 3) {\n        return\
    \ \"No\";\n    }\n    if(dot_count != 1) {\n        return \"No\";\n    }\n  \
    \  if(flag == 0 && flag1 == 0) {\n        return \"No\";\n    }\n    if(flag2\
    \ == 0 && flag3 == 0 && flag4 == 0) {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";", "    int count = 0;\n    int dot_count = 0;\n    std::string sub_str1;\n\
    \    std::string sub_str2;\n    for(int i = 0; i < file_name.length(); i++) {\n\
    \        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \        sub_str1 = file_name.substr(0, i);\n            sub_str2 = file_name.substr(i+1,\
    \ file_name.length()-1);\n        }\n    }\n    if(count > 3 || dot_count != 1\
    \ || sub_str1.length() == 0 || \n    (sub_str1[0] < 'a' || sub_str1[0] > 'z')\
    \ && (sub_str1[0] < 'A' || sub_str1[0] > 'Z') || \n    (sub_str2 != \"txt\" &&\
    \ sub_str2 != \"exe\" && sub_str2 != \"dll\")) {\n        return \"No\";\n   \
    \ }\n    return \"Yes\";", "    int dot_count = 0;\n    int digit_count = 0;\n\
    \    for (int i = 0; i < file_name.size(); i++) {\n        if (file_name[i] ==\
    \ '.') {\n            dot_count++;\n        }\n        if (file_name[i] >= '0'\
    \ && file_name[i] <= '9') {\n            digit_count++;\n        }\n    }\n  \
    \  if (dot_count != 1 || digit_count > 3) {\n        return \"No\";\n    }\n \
    \   std::string extension = file_name.substr(file_name.find('.') + 1);\n    if\
    \ (extension != \"txt\" && extension != \"exe\" && extension != \"dll\") {\n \
    \       return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n   \
    \ int dot_count = 0;\n    int dot_pos = 0;\n    for(int i = 0; i < file_name.length();\
    \ i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n         \
    \   count++;\n        }\n        if(file_name[i] == '.') {\n            dot_count++;\n\
    \            dot_pos = i;\n        }\n    }\n    if(count > 3 || dot_count !=\
    \ 1) {\n        return \"No\";\n    }\n    std::string ext = file_name.substr(dot_pos\
    \ + 1);\n    if(ext != \"txt\" && ext != \"exe\" && ext != \"dll\") {\n      \
    \  return \"No\";\n    }\n    std::string name = file_name.substr(0, dot_pos);\n\
    \    if(name.length() == 0) {\n        return \"No\";\n    }\n    if(name[0] >=\
    \ 'a' && name[0] <= 'z') {\n        return \"Yes\";\n    }\n    if(name[0] >=\
    \ 'A' && name[0] <= 'Z') {\n        return \"Yes\";\n    }\n    return \"No\";",
  "    int count = 0;\n    int dot = 0;\n    int dot_pos = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot++;\n            dot_pos = i;\n        }\n    }\n    if(count\
    \ > 3 || dot != 1) {\n        return \"No\";\n    }\n    std::string sub1 = file_name.substr(0,\
    \ dot_pos);\n    std::string sub2 = file_name.substr(dot_pos + 1, len - dot_pos\
    \ - 1);\n    if(sub1.length() == 0 || (sub1[0] < 'a' || sub1[0] > 'z') && (sub1[0]\
    \ < 'A' || sub1[0] > 'Z')) {\n        return \"No\";\n    }\n    if(sub2 != \"\
    txt\" && sub2 != \"exe\" && sub2 != \"dll\") {\n        return \"No\";\n    }\n\
    \    return \"Yes\";", "    int count = 0;\n    int dot = 0;\n    int dot_index\
    \ = 0;\n    int num_count = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] == '.') {\n            dot++;\n\
    \            dot_index = i;\n        }\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            num_count++;\n        }\n    }\n    if(num_count > 3)\
    \ {\n        return \"No\";\n    }\n    if(dot != 1) {\n        return \"No\"\
    ;\n    }\n    if(file_name[0] >= 'a' && file_name[0] <= 'z') {\n        count++;\n\
    \    }\n    if(file_name[0] >= 'A' && file_name[0] <= 'Z') {\n        count++;\n\
    \    }\n    if(count == 0) {\n        return \"No\";\n    }\n    if(file_name.substr(dot_index\
    \ + 1, 3) == \"txt\") {\n        return \"Yes\";\n    }\n    if(file_name.substr(dot_index\
    \ + 1, 3) == \"exe\") {\n        return \"Yes\";\n    }\n    if(file_name.substr(dot_index\
    \ + 1, 3) == \"dll\") {\n        return \"Yes\";\n    }\n    return \"No\";",
  "    int count = 0;\n    int dot = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9')\
    \ {\n            count++;\n        }\n        if(file_name[i] == '.') {\n    \
    \        dot++;\n        }\n    }\n    if(count > 3 || dot != 1) {\n        return\
    \ \"No\";\n    }\n    std::string str = file_name.substr(0, file_name.find('.'));\n\
    \    if(str.length() == 0) {\n        return \"No\";\n    }\n    if(str[0] >=\
    \ 'a' && str[0] <= 'z' || str[0] >= 'A' && str[0] <= 'Z') {\n        std::string\
    \ str1 = file_name.substr(file_name.find('.') + 1, len);\n        if(str1 == \"\
    txt\" || str1 == \"exe\" || str1 == \"dll\") {\n            return \"Yes\";\n\
    \        }\n    }\n    return \"No\";", "    int count = 0;\n    int dot = 0;\n\
    \    int txt = 0;\n    int exe = 0;\n    int dll = 0;\n    for (int i = 0; i <\
    \ file_name.length(); i++) {\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if (file_name[i] == '.')\
    \ {\n            dot++;\n        }\n        if (file_name[i] == 't') {\n     \
    \       txt++;\n        }\n        if (file_name[i] == 'e') {\n            exe++;\n\
    \        }\n        if (file_name[i] == 'd') {\n            dll++;\n        }\n\
    \    }\n    if (count > 3 || dot != 1 || txt != 1 || exe != 1 || dll != 1) {\n\
    \        return \"No\";\n    }\n    return \"Yes\";", "    int dot_count = 0;\n\
    \    int digit_count = 0;\n    int i = 0;\n    while (file_name[i] != '\\0') {\n\
    \        if (file_name[i] == '.') {\n            dot_count++;\n        }\n   \
    \     if (file_name[i] >= '0' && file_name[i] <= '9') {\n            digit_count++;\n\
    \        }\n        i++;\n    }\n    if (dot_count != 1 || digit_count > 3) {\n\
    \        return \"No\";\n    }\n    std::string extension = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if (extension != \"txt\" && extension != \"exe\" && extension\
    \ != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";", "    int\
    \ count = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] == '.') {\n            dot_count++;\n\
    \        }\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n       \
    \     count++;\n        }\n    }\n    if(count > 3 || dot_count != 1) {\n    \
    \    return \"No\";\n    }\n    std::string sub_str = file_name.substr(0, file_name.find(\"\
    .\"));\n    if(sub_str.length() == 0) {\n        return \"No\";\n    }\n    if(sub_str[0]\
    \ >= 'a' && sub_str[0] <= 'z' || sub_str[0] >= 'A' && sub_str[0] <= 'Z') {\n \
    \       std::string sub_str2 = file_name.substr(file_name.find(\".\") + 1);\n\
    \        if(sub_str2 == \"txt\" || sub_str2 == \"exe\" || sub_str2 == \"dll\"\
    ) {\n            return \"Yes\";\n        }\n    }\n    return \"No\";", "   \
    \ int count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n    int len\
    \ = file_name.length();\n    for(int i = 0; i < len; i++) {\n        if(file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \    }\n    if(count > 3) {\n        return \"No\";\n    }\n    if(dot_count !=\
    \ 1) {\n        return \"No\";\n    }\n    if(dot_index == 0) {\n        return\
    \ \"No\";\n    }\n    if(file_name[dot_index + 1] == 't' && file_name[dot_index\
    \ + 2] == 'x' && file_name[dot_index + 3] == 't') {\n        return \"Yes\";\n\
    \    }\n    if(file_name[dot_index + 1] == 'e' && file_name[dot_index + 2] ==\
    \ 'x' && file_name[dot_index + 3] == 'e') {\n        return \"Yes\";\n    }\n\
    \    if(file_name[dot_index + 1] == 'd' && file_name[dot_index + 2] == 'l' &&\
    \ file_name[dot_index + 3] == 'l') {\n        return \"Yes\";\n    }\n    return\
    \ \"No\";", "    int count = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n        }\n    }\n    if(count > 3 || dot_count\
    \ != 1) {\n        return \"No\";\n    }\n    std::string ext = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if(ext == \"txt\" || ext == \"exe\" || ext == \"dll\") {\n   \
    \     return \"Yes\";\n    }\n    return \"No\";", "    int count = 0;\n    int\
    \ dot_count = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len;\
    \ i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n         \
    \   count++;\n        }\n        if(file_name[i] == '.') {\n            dot_count++;\n\
    \        }\n    }\n    if(count > 3 || dot_count != 1) {\n        return \"No\"\
    ;\n    }\n    std::string ext = file_name.substr(file_name.find(\".\") + 1);\n\
    \    if(ext == \"txt\" || ext == \"exe\" || ext == \"dll\") {\n        return\
    \ \"Yes\";\n    }\n    return \"No\";", "    std::string result = \"No\";\n  \
    \  int count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n    for (int\
    \ i = 0; i < file_name.length(); i++) {\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if (file_name[i] == '.')\
    \ {\n            dot_count++;\n            dot_index = i;\n        }\n    }\n\
    \    if (count <= 3 && dot_count == 1) {\n        std::string sub1 = file_name.substr(0,\
    \ dot_index);\n        std::string sub2 = file_name.substr(dot_index + 1, file_name.length()\
    \ - dot_index - 1);\n        if (sub1.length() > 0 && (sub1[0] >= 'a' && sub1[0]\
    \ <= 'z' || sub1[0] >= 'A' && sub1[0] <= 'Z')) {\n            if (sub2 == \"txt\"\
    \ || sub2 == \"exe\" || sub2 == \"dll\") {\n                result = \"Yes\";\n\
    \            }\n        }\n    }\n    return result;", "    int count = 0;\n \
    \   int dot_count = 0;\n    int dot_index = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n            dot_index = i;\n        }\n    }\n\
    \    if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    std::string\
    \ before_dot = file_name.substr(0, dot_index);\n    std::string after_dot = file_name.substr(dot_index\
    \ + 1, len - dot_index - 1);\n    if(before_dot.length() == 0 || (before_dot[0]\
    \ < 'a' || before_dot[0] > 'z') && (before_dot[0] < 'A' || before_dot[0] > 'Z'))\
    \ {\n        return \"No\";\n    }\n    if(after_dot != \"txt\" && after_dot !=\
    \ \"exe\" && after_dot != \"dll\") {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";", "    // Your code here\n    int count = 0;\n    int dot = 0;\n  \
    \  int len = file_name.length();\n    for(int i = 0; i < len; i++)\n    {\n  \
    \      if(file_name[i] >= '0' && file_name[i] <= '9')\n        {\n           \
    \ count++;\n        }\n        if(file_name[i] == '.')\n        {\n          \
    \  dot++;\n        }\n    }\n    if(count > 3 || dot != 1)\n    {\n        return\
    \ \"No\";\n    }\n    std::string s1 = file_name.substr(0, file_name.find('.'));\n\
    \    std::string s2 = file_name.substr(file_name.find('.') + 1);\n    if(s1.length()\
    \ == 0 || (s1[0] < 'a' || s1[0] > 'z') && (s1[0] < 'A' || s1[0] > 'Z'))\n    {\n\
    \        return \"No\";\n    }\n    if(s2 != \"txt\" && s2 != \"exe\" && s2 !=\
    \ \"dll\")\n    {\n        return \"No\";\n    }\n    return \"Yes\";", "    int\
    \ count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n    for(int i =\
    \ 0; i < file_name.length(); i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n            dot_index = i;\n        }\n    }\n\
    \    if(count > 3) {\n        return \"No\";\n    }\n    if(dot_count != 1) {\n\
    \        return \"No\";\n    }\n    if(file_name[0] < 'a' || file_name[0] > 'z')\
    \ {\n        return \"No\";\n    }\n    std::string ext = file_name.substr(dot_index\
    \ + 1);\n    if(ext != \"txt\" && ext != \"exe\" && ext != \"dll\") {\n      \
    \  return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int dot_count\
    \ = 0;\n    int dot_index = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9')\
    \ {\n            count++;\n        }\n        if(file_name[i] == '.') {\n    \
    \        dot_count++;\n            dot_index = i;\n        }\n    }\n    if(count\
    \ > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    std::string before_dot\
    \ = file_name.substr(0, dot_index);\n    std::string after_dot = file_name.substr(dot_index\
    \ + 1, len - dot_index - 1);\n    if(before_dot.length() == 0 || (before_dot[0]\
    \ < 'a' || before_dot[0] > 'z') && (before_dot[0] < 'A' || before_dot[0] > 'Z'))\
    \ {\n        return \"No\";\n    }\n    if(after_dot != \"txt\" && after_dot !=\
    \ \"exe\" && after_dot != \"dll\") {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";", "    int count = 0;\n    int count_dot = 0;\n    int count_letter\
    \ = 0;\n    int count_digit = 0;\n    int count_txt = 0;\n    int count_exe =\
    \ 0;\n    int count_dll = 0;\n    int count_empty = 0;\n    int count_empty_after\
    \ = 0;\n    int count_empty_before = 0;\n    int count_empty_after_dot = 0;\n\
    \    int count_empty_before_dot = 0;\n    int count_empty_after_dot_txt = 0;\n\
    \    int count_empty_before_dot_txt = 0;\n    int count_empty_after_dot_exe =\
    \ 0;\n    int count_empty_before_dot_exe = 0;\n    int count_empty_after_dot_dll\
    \ = 0;\n    int count_empty_before_dot_dll = 0;\n    int count_empty_after_dot_txt_exe\
    \ = 0;\n    int count_empty_before_dot_txt_exe = 0;\n    int count_empty_after_dot_txt_dll\
    \ = 0;\n    int count_empty_before_dot_txt_dll = 0;\n    int count_empty_after_dot_exe_dll\
    \ = 0;\n    int count_empty_before_dot_exe_dll = 0;\n    int count_empty_after_dot_txt_exe_dll\
    \ = 0;\n    int count_empty_before_dot_txt_exe_dll = 0;\n    int count_empty_after_dot_txt_exe_dll_exe\
    \ = 0;\n    int count_empty_before_dot_txt_exe_dll_exe = 0;\n    int count_empty_after_dot_txt_exe_dll_dll\
    \ = 0;\n    int count_empty_before_dot_txt_exe_dll_dll = 0;\n    int count_empty_after_dot_txt_exe_dll_txt\
    \ = 0;\n    int count_empty_before_dot_txt_exe_dll_txt = 0;\n    int count_empty_after_dot_txt_exe_dll_txt_exe\
    \ = 0;\n    int count_empty_before_dot_txt_exe_", "    std::string result = \"\
    Yes\";\n    int count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n \
    \   int length = file_name.length();\n    for (int i = 0; i < length; i++) {\n\
    \        if (file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if (file_name[i] == '.') {\n            dot_count++;\n   \
    \         dot_index = i;\n        }\n    }\n    if (count > 3 || dot_count !=\
    \ 1) {\n        result = \"No\";\n    }\n    else {\n        std::string sub_str\
    \ = file_name.substr(0, dot_index);\n        if (sub_str.length() == 0 || (sub_str[0]\
    \ < 'a' || sub_str[0] > 'z') && (sub_str[0] < 'A' || sub_str[0] > 'Z')) {\n  \
    \          result = \"No\";\n        }\n        else {\n            sub_str =\
    \ file_name.substr(dot_index + 1, length - dot_index - 1);\n            if (sub_str\
    \ != \"txt\" && sub_str != \"exe\" && sub_str != \"dll\") {\n                result\
    \ = \"No\";\n            }\n        }\n    }\n    return result;", "    int count\
    \ = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9')\
    \ {\n            count++;\n        }\n        if(file_name[i] == '.') {\n    \
    \        dot_count++;\n        }\n    }\n    if(count > 3 || dot_count != 1) {\n\
    \        return \"No\";\n    }\n    std::string sub_str = file_name.substr(0,\
    \ file_name.find('.'));\n    if(sub_str.length() == 0) {\n        return \"No\"\
    ;\n    }\n    if(!((sub_str[0] >= 'a' && sub_str[0] <= 'z') || (sub_str[0] >=\
    \ 'A' && sub_str[0] <= 'Z'))) {\n        return \"No\";\n    }\n    sub_str =\
    \ file_name.substr(file_name.find('.') + 1);\n    if(sub_str == \"txt\" || sub_str\
    \ == \"exe\" || sub_str == \"dll\") {\n        return \"Yes\";\n    }\n    return\
    \ \"No\";", "    int count = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n        }\n    }\n    if(count > 3 || dot_count\
    \ != 1) {\n        return \"No\";\n    }\n    std::string sub1 = file_name.substr(0,\
    \ file_name.find(\".\"));\n    std::string sub2 = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if(sub1.length() == 0 || (sub1[0] < 'a' || sub1[0] > 'z') && (sub1[0]\
    \ < 'A' || sub1[0] > 'Z')) {\n        return \"No\";\n    }\n    if(sub2 != \"\
    txt\" && sub2 != \"exe\" && sub2 != \"dll\") {\n        return \"No\";\n    }\n\
    \    return \"Yes\";", "    // Your code here\n    int dot_count = 0;\n    int\
    \ digit_count = 0;\n    int alpha_count = 0;\n    int alpha_count_after_dot =\
    \ 0;\n    int alpha_count_before_dot = 0;\n    int dot_index = -1;\n    int dot_index_after_alpha\
    \ = -1;\n    int dot_index_before_alpha = -1;\n    int alpha_index = -1;\n   \
    \ int alpha_index_after_dot = -1;\n    int alpha_index_before_dot = -1;\n    int\
    \ digit_index = -1;\n    int digit_index_after_dot = -1;\n    int digit_index_before_dot\
    \ = -1;\n    int alpha_count_after_dot_before_dot = 0;\n    int alpha_count_before_dot_after_dot\
    \ = 0;\n    int digit_count_after_dot_before_dot = 0;\n    int digit_count_before_dot_after_dot\
    \ = 0;\n    int alpha_count_after_dot_after_dot = 0;\n    int alpha_count_before_dot_before_dot\
    \ = 0;\n    int digit_count_after_dot_after_dot = 0;\n    int digit_count_before_dot_before_dot\
    \ = 0;\n    int alpha_count_after_dot_before_alpha = 0;\n    int alpha_count_before_dot_after_alpha\
    \ = 0;\n    int digit_count_after_dot_before_alpha = 0;\n    int digit_count_before_dot_after_alpha\
    \ = 0;\n    int alpha_count_after_dot_after_alpha = 0;\n    int alpha_count_before_dot_before_alpha\
    \ = 0;\n    int digit_count_after_dot_after_alpha = 0;\n    int digit_count_before_dot_before_alpha\
    \ = 0;\n    int alpha_count_after_dot_before_digit = 0;\n    int alpha_count_before_dot_after_digit\
    \ = 0;\n    int digit_count_after_dot_before_digit = 0;\n    int digit_count_before_dot_after_digit\
    \ = 0", "    int count = 0;\n    int dot_count = 0;\n    int ext_count = 0;\n\
    \    int ext_len = 0;\n    int dot_pos = 0;\n    for(int i = 0; i < file_name.length();\
    \ i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n         \
    \   count++;\n        }\n        if(file_name[i] == '.') {\n            dot_count++;\n\
    \            dot_pos = i;\n        }\n    }\n    if(count > 3 || dot_count !=\
    \ 1) {\n        return \"No\";\n    }\n    for(int i = dot_pos + 1; i < file_name.length();\
    \ i++) {\n        ext_len++;\n    }\n    if(ext_len != 3) {\n        return \"\
    No\";\n    }\n    if(file_name[0] >= 'a' && file_name[0] <= 'z') {\n        ext_count++;\n\
    \    }\n    if(file_name[0] >= 'A' && file_name[0] <= 'Z') {\n        ext_count++;\n\
    \    }\n    if(ext_count == 0) {\n        return \"No\";\n    }\n    if(file_name[dot_pos\
    \ + 1] == 't' && file_name[dot_pos + 2] == 'x' && file_name[dot_pos + 3] == 't')\
    \ {\n        return \"Yes\";\n    }\n    if(file_name[dot_pos + 1] == 'e' && file_name[dot_pos\
    \ + 2] == 'x' && file_name[dot_pos + 3] == 'e') {\n        return \"Yes\";\n \
    \   }\n    if(file_name[dot_pos + 1] == 'd' && file_name[dot_pos + 2] == 'l' &&\
    \ file_name[dot_pos + 3] == 'l') {\n        return \"Yes\";\n    }\n    return\
    \ \"No\";", "    int count = 0;\n    int dot_count = 0;\n    std::string sub_str1;\n\
    \    std::string sub_str2;\n    for(int i = 0; i < file_name.length(); i++) {\n\
    \        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \    }\n    }\n    if(count > 3 || dot_count != 1) {\n        return \"No\";\n\
    \    }\n    sub_str1 = file_name.substr(0, file_name.find('.'));\n    sub_str2\
    \ = file_name.substr(file_name.find('.') + 1);\n    if(sub_str1.length() == 0\
    \ || (sub_str1[0] < 'a' || sub_str1[0] > 'z') && (sub_str1[0] < 'A' || sub_str1[0]\
    \ > 'Z')) {\n        return \"No\";\n    }\n    if(sub_str2 != \"txt\" && sub_str2\
    \ != \"exe\" && sub_str2 != \"dll\") {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";", "    int count = 0;\n    int dot_count = 0;\n    int dot_index =\
    \ 0;\n    for(int i = 0; i < file_name.length(); i++) {\n        if(file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \    }\n    if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n\
    \    std::string before_dot = file_name.substr(0, dot_index);\n    std::string\
    \ after_dot = file_name.substr(dot_index + 1);\n    if(before_dot.length() ==\
    \ 0 || (before_dot[0] < 'a' || before_dot[0] > 'z') && (before_dot[0] < 'A' ||\
    \ before_dot[0] > 'Z')) {\n        return \"No\";\n    }\n    if(after_dot !=\
    \ \"txt\" && after_dot != \"exe\" && after_dot != \"dll\") {\n        return \"\
    No\";\n    }\n    return \"Yes\";", "    int dot_count = 0;\n    int digit_count\
    \ = 0;\n    int i = 0;\n    bool is_valid = true;\n    std::string extension;\n\
    \    std::string file_name_without_extension;\n    std::string valid_extensions[]\
    \ = {\"txt\", \"exe\", \"dll\"};\n    while (file_name[i] != '\\0') {\n      \
    \  if (file_name[i] == '.') {\n            dot_count++;\n            file_name_without_extension\
    \ = file_name.substr(0, i);\n            extension = file_name.substr(i + 1, file_name.length()\
    \ - i - 1);\n        }\n        if (file_name[i] >= '0' && file_name[i] <= '9')\
    \ {\n            digit_count++;\n        }\n        i++;\n    }\n    if (dot_count\
    \ != 1 || digit_count > 3 || file_name_without_extension.length() == 0 || \n \
    \       (file_name_without_extension[0] < 'a' || file_name_without_extension[0]\
    \ > 'z') &&\n        (file_name_without_extension[0] < 'A' || file_name_without_extension[0]\
    \ > 'Z')) {\n        is_valid = false;\n    }\n    for (int i = 0; i < 3; i++)\
    \ {\n        if (extension == valid_extensions[i]) {\n            is_valid = true;\n\
    \            break;\n        }\n    }\n    if (is_valid) {\n        return \"\
    Yes\";\n    }\n    return \"No\";", "    int count = 0;\n    int dot_count = 0;\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n    int B = 0;\n\
    \    int C = 0;\n    int D = 0;\n    int E = 0;\n    int F = 0;\n    int G = 0;\n\
    \    int H = 0;\n    int I = 0;\n    int J = 0;\n    int K = 0;\n    int L = 0;\n\
    \    int M = 0;\n    int N = 0;\n    int O = 0;\n    int P = 0;\n    int Q = 0;\n\
    \    int R = 0;\n    int S = 0;\n    int T = 0;\n    int U = 0;\n    int V = 0;\n\
    \    int W = 0;\n    int X = 0;\n    int Y = 0;\n    int Z = 0;\n    int zero\
    \ = 0;\n    int one = 0;\n    int two = 0;\n    int three = 0;\n    int four =\
    \ 0;\n    int five = 0;\n    int six = 0;\n    int seven = 0;\n    int eight =\
    \ 0;\n    int nine = 0;\n    int dot = 0;\n    int txt = 0;\n    int exe = 0;\n\
    \    int dll = 0;\n    for (i = 0; i < file_name.length(); i++) {\n        if\
    \ (file_name[i] == '0') {\n            zero++;\n        }\n        if (file_name[i]\
    \ == '1') {\n            one++;\n        }\n        if (file_name[i] == '2') {\n\
    \            two++;\n        }\n       ", "  int count = 0;\n  int dot_count =\
    \ 0;\n  int dot_position = 0;\n  int digit_count = 0;\n  int letter_count = 0;\n\
    \  for (int i = 0; i < file_name.length(); i++) {\n    if (file_name[i] == '.')\
    \ {\n      dot_count++;\n      dot_position = i;\n    }\n    if (file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n      digit_count++;\n    }\n    if ((file_name[i]\
    \ >= 'a' && file_name[i] <= 'z') || (file_name[i] >= 'A' && file_name[i] <= 'Z'))\
    \ {\n      letter_count++;\n    }\n  }\n  if (dot_count == 1 && digit_count <=\
    \ 3 && letter_count > 0) {\n    std::string sub_string = file_name.substr(dot_position\
    \ + 1, file_name.length() - dot_position - 1);\n    if (sub_string == \"txt\"\
    \ || sub_string == \"exe\" || sub_string == \"dll\") {\n      return \"Yes\";\n\
    \    }\n  }\n  return \"No\";", "    int count = 0;\n    int dot = 0;\n    int\
    \ dot_pos = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len;\
    \ i++) {\n        if(file_name[i] == '.') {\n            dot++;\n            dot_pos\
    \ = i;\n        }\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n\
    \            count++;\n        }\n    }\n    if(count > 3) {\n        return \"\
    No\";\n    }\n    if(dot != 1) {\n        return \"No\";\n    }\n    if(dot_pos\
    \ == 0) {\n        return \"No\";\n    }\n    if(file_name[dot_pos + 1] == 't'\
    \ && file_name[dot_pos + 2] == 'x' && file_name[dot_pos + 3] == 't') {\n     \
    \   return \"Yes\";\n    }\n    if(file_name[dot_pos + 1] == 'e' && file_name[dot_pos\
    \ + 2] == 'x' && file_name[dot_pos + 3] == 'e') {\n        return \"Yes\";\n \
    \   }\n    if(file_name[dot_pos + 1] == 'd' && file_name[dot_pos + 2] == 'l' &&\
    \ file_name[dot_pos + 3] == 'l') {\n        return \"Yes\";\n    }\n    return\
    \ \"No\";", "    int count = 0;\n    int dot = 0;\n    int flag = 0;\n    int\
    \ flag1 = 0;\n    int flag2 = 0;\n    int flag3 = 0;\n    int flag4 = 0;\n   \
    \ int flag5 = 0;\n    int flag6 = 0;\n    int flag7 = 0;\n    int flag8 = 0;\n\
    \    int flag9 = 0;\n    int flag10 = 0;\n    int flag11 = 0;\n    int flag12\
    \ = 0;\n    int flag13 = 0;\n    int flag14 = 0;\n    int flag15 = 0;\n    for(int\
    \ i = 0; i < file_name.length(); i++) {\n        if(file_name[i] == '.') {\n \
    \           dot++;\n        }\n        if(file_name[i] == '0' || file_name[i]\
    \ == '1' || file_name[i] == '2' || file_name[i] == '3' || file_name[i] == '4'\
    \ || file_name[i] == '5' || file_name[i] == '6' || file_name[i] == '7' || file_name[i]\
    \ == '8' || file_name[i] == '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == 'a' || file_name[i] == 'b' || file_name[i] == 'c' || file_name[i] == 'd'\
    \ || file_name[i] == 'e' || file_name[i] == 'f' || file_name[i] == 'g' || file_name[i]\
    \ == 'h' || file_name[i] == 'i' || file_name[i] == 'j' || file_name[i] == 'k'\
    \ || file_name[i] == 'l' || file_name[i] == 'm' || file_name[i] == 'n' || file_name[i]\
    \ == 'o' || file_name[i] == 'p' || file_name[i] == 'q' || file_name[i] == 'r'\
    \ || file_name[i]", "    int count = 0;\n    int dot_count = 0;\n    int dot_position\
    \ = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len; i++) {\n\
    \        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \        dot_position = i;\n        }\n    }\n    if(count > 3 || dot_count !=\
    \ 1) {\n        return \"No\";\n    }\n    std::string before_dot = file_name.substr(0,\
    \ dot_position);\n    std::string after_dot = file_name.substr(dot_position +\
    \ 1, len - dot_position - 1);\n    if(before_dot.length() == 0 || (before_dot[0]\
    \ < 'a' || before_dot[0] > 'z') && (before_dot[0] < 'A' || before_dot[0] > 'Z'))\
    \ {\n        return \"No\";\n    }\n    if(after_dot != \"txt\" && after_dot !=\
    \ \"exe\" && after_dot != \"dll\") {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";", "    int count = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n        }\n    }\n    if(count > 3 || dot_count\
    \ != 1) {\n        return \"No\";\n    }\n    std::string str = file_name.substr(0,\
    \ file_name.find(\".\"));\n    if(str.length() == 0) {\n        return \"No\"\
    ;\n    }\n    if(str[0] >= 'a' && str[0] <= 'z' || str[0] >= 'A' && str[0] <=\
    \ 'Z') {\n        std::string str1 = file_name.substr(file_name.find(\".\") +\
    \ 1);\n        if(str1 == \"txt\" || str1 == \"exe\" || str1 == \"dll\") {\n \
    \           return \"Yes\";\n        }\n    }\n    return \"No\";", "    int count\
    \ = 0;\n    int dot_count = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int A = 0;\n    int B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n\
    \    int F = 0;\n    int G = 0;\n    int H = 0;\n    int I = 0;\n    int J = 0;\n\
    \    int K = 0;\n    int L = 0;\n    int M = 0;\n    int N = 0;\n    int O = 0;\n\
    \    int P = 0;\n    int Q = 0;\n    int R = 0;\n    int S = 0;\n    int T = 0;\n\
    \    int U = 0;\n    int V = 0;\n    int W = 0;\n    int X = 0;\n    int Y = 0;\n\
    \    int Z = 0;\n    int zero = 0;\n    int one = 0;\n    int two = 0;\n    int\
    \ three = 0;\n    int four = 0;\n    int five = 0;\n    int six = 0;\n    int\
    \ seven = 0;\n    int eight = 0;\n    int nine = 0;\n    int dot = 0;\n    int\
    \ txt = 0;\n    int exe = 0;\n    int dll = 0;\n    int dot_index = 0;\n    int\
    \ txt_index = 0;\n    int exe_index = 0;\n    int dll_index = 0;\n    int dot_index_1\
    \ = 0;\n    int txt_index_1 = 0;\n    int exe_index_1 = 0;\n    int dll_index_1\
    \ = 0;\n", "\tint count = 0;\n\tint dot_count = 0;\n\tint dot_index = 0;\n\tint\
    \ digit_count = 0;\n\tfor (int i = 0; i < file_name.length(); i++) {\n\t\tif (file_name[i]\
    \ == '.') {\n\t\t\tdot_count++;\n\t\t\tdot_index = i;\n\t\t}\n\t\tif (file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n\t\t\tdigit_count++;\n\t\t}\n\t}\n\tif (dot_count\
    \ == 1 && digit_count <= 3) {\n\t\tstd::string sub_string = file_name.substr(0,\
    \ dot_index);\n\t\tif (sub_string.length() > 0 && (sub_string[0] >= 'a' && sub_string[0]\
    \ <= 'z') || (sub_string[0] >= 'A' && sub_string[0] <= 'Z')) {\n\t\t\tstd::string\
    \ sub_string2 = file_name.substr(dot_index + 1, file_name.length() - 1);\n\t\t\
    \tif (sub_string2 == \"txt\" || sub_string2 == \"exe\" || sub_string2 == \"dll\"\
    ) {\n\t\t\t\treturn \"Yes\";\n\t\t\t}\n\t\t}\n\t}\n\treturn \"No\";", "    int\
    \ count = 0;\n    int dot_count = 0;\n    int dot_pos = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n            dot_pos = i;\n        }\n    }\n  \
    \  if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    std::string\
    \ sub1 = file_name.substr(0, dot_pos);\n    std::string sub2 = file_name.substr(dot_pos\
    \ + 1, len - dot_pos - 1);\n    if(sub1.length() == 0 || (sub1[0] < 'a' || sub1[0]\
    \ > 'z') && (sub1[0] < 'A' || sub1[0] > 'Z')) {\n        return \"No\";\n    }\n\
    \    if(sub2 != \"txt\" && sub2 != \"exe\" && sub2 != \"dll\") {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int dot_count\
    \ = 0;\n    int dot_index = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] == '.') {\n            dot_count++;\n\
    \            dot_index = i;\n        }\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n    }\n    if(count > 3) {\n   \
    \     return \"No\";\n    }\n    if(dot_count != 1) {\n        return \"No\";\n\
    \    }\n    if(dot_index == 0) {\n        return \"No\";\n    }\n    if(file_name[dot_index\
    \ + 1] == 't' && file_name[dot_index + 2] == 'x' && file_name[dot_index + 3] ==\
    \ 't') {\n        return \"Yes\";\n    }\n    if(file_name[dot_index + 1] == 'e'\
    \ && file_name[dot_index + 2] == 'x' && file_name[dot_index + 3] == 'e') {\n \
    \       return \"Yes\";\n    }\n    if(file_name[dot_index + 1] == 'd' && file_name[dot_index\
    \ + 2] == 'l' && file_name[dot_index + 3] == 'l') {\n        return \"Yes\";\n\
    \    }\n    return \"No\";", "    int count = 0;\n    int dot_count = 0;\n   \
    \ int dot_index = -1;\n    for(int i = 0; i < file_name.length(); i++) {\n   \
    \     if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \        dot_index = i;\n        }\n    }\n    if(count > 3 || dot_count != 1)\
    \ {\n        return \"No\";\n    }\n    std::string sub_str = file_name.substr(dot_index\
    \ + 1);\n    if(sub_str != \"txt\" && sub_str != \"exe\" && sub_str != \"dll\"\
    ) {\n        return \"No\";\n    }\n    if(file_name[0] >= 'a' && file_name[0]\
    \ <= 'z' || file_name[0] >= 'A' && file_name[0] <= 'Z') {\n        return \"Yes\"\
    ;\n    }\n    return \"No\";", "    std::regex pattern(\"[a-zA-Z]+[0-9]{0,3}\\\
    \\.(txt|exe|dll)\");\n    return std::regex_match(file_name, pattern) ? \"Yes\"\
    \ : \"No\";", "    int count = 0;\n    int dot = 0;\n    int dot_pos = 0;\n  \
    \  int len = file_name.length();\n    for(int i = 0; i < len; i++) {\n       \
    \ if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n   \
    \     }\n        if(file_name[i] == '.') {\n            dot++;\n            dot_pos\
    \ = i;\n        }\n    }\n    if(count > 3 || dot != 1) {\n        return \"No\"\
    ;\n    }\n    std::string sub1 = file_name.substr(0, dot_pos);\n    std::string\
    \ sub2 = file_name.substr(dot_pos + 1, len - dot_pos);\n    if(sub1.length() ==\
    \ 0 || (sub1[0] < 'a' || sub1[0] > 'z') && (sub1[0] < 'A' || sub1[0] > 'Z')) {\n\
    \        return \"No\";\n    }\n    if(sub2 != \"txt\" && sub2 != \"exe\" && sub2\
    \ != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";", "    int\
    \ count = 0;\n    int dot = 0;\n    int dot_index = 0;\n    int count_before_dot\
    \ = 0;\n    int count_after_dot = 0;\n    int count_after_dot_txt = 0;\n    int\
    \ count_after_dot_exe = 0;\n    int count_after_dot_dll = 0;\n    for (int i =\
    \ 0; i < file_name.length(); i++) {\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if (file_name[i] == '.')\
    \ {\n            dot++;\n            dot_index = i;\n        }\n    }\n    if\
    \ (count > 3) {\n        return \"No\";\n    }\n    if (dot != 1) {\n        return\
    \ \"No\";\n    }\n    for (int i = 0; i < dot_index; i++) {\n        if (file_name[i]\
    \ >= 'a' && file_name[i] <= 'z') {\n            count_before_dot++;\n        }\n\
    \        if (file_name[i] >= 'A' && file_name[i] <= 'Z') {\n            count_before_dot++;\n\
    \        }\n    }\n    if (count_before_dot == 0) {\n        return \"No\";\n\
    \    }\n    for (int i = dot_index + 1; i < file_name.length(); i++) {\n     \
    \   count_after_dot++;\n    }\n    if (count_after_dot == 0) {\n        return\
    \ \"No\";\n    }\n    for (int i = dot_index + 1; i < dot_index + 4; i++) {\n\
    \        if (file_name[i] == 't') {\n            count_after_dot_txt++;\n    \
    \    }\n        if (file_name[i] == 'x') {\n            count_after_dot_exe++;\n\
    \        }\n        if (file_name[i] == 'd') {\n            count_after_dot_dll++;\n\
    \        }\n    }\n    if (count_after_dot_txt == 3 || count_after_dot_exe", " \
    \   int count_digits = 0;\n    int count_dot = 0;\n    int count_letters = 0;\n\
    \    int count_letters_after_dot = 0;\n    int count_letters_before_dot = 0;\n\
    \    int count_letters_after_dot_txt = 0;\n    int count_letters_after_dot_exe\
    \ = 0;\n    int count_letters_after_dot_dll = 0;\n    for (int i = 0; i < file_name.length();\
    \ i++) {\n        if (file_name[i] == '.') {\n            count_dot++;\n     \
    \   }\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n           \
    \ count_digits++;\n        }\n        if ((file_name[i] >= 'a' && file_name[i]\
    \ <= 'z') || (file_name[i] >= 'A' && file_name[i] <= 'Z')) {\n            count_letters++;\n\
    \        }\n        if (file_name[i] == '.') {\n            for (int j = i + 1;\
    \ j < file_name.length(); j++) {\n                if ((file_name[j] >= 'a' &&\
    \ file_name[j] <= 'z') || (file_name[j] >= 'A' && file_name[j] <= 'Z')) {\n  \
    \                  count_letters_after_dot++;\n                }\n           \
    \     if (file_name[j] == 't') {\n                    count_letters_after_dot_txt++;\n\
    \                }\n                if (file_name[j] == 'e') {\n             \
    \       count_letters_after_dot_exe++;\n                }\n                if\
    \ (file_name[j] == 'd') {\n                    count_letters_after_dot_dll++;\n\
    \                }\n            }\n        }\n        if (file_name[i] == '.')\
    \ {\n            for (int j = 0; j < i; j++) {\n                if ((file_name[j]\
    \ >= 'a' && file_name[j] <= 'z') || (file_name[j] >= 'A' && file_name[j] <= 'Z",
  "    // Write your code here\n    int count = 0;\n    int dot_count = 0;\n    int\
    \ dot_index = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len;\
    \ i++){\n        if(file_name[i] == '.'){\n            dot_count++;\n        \
    \    dot_index = i;\n        }\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9'){\n            count++;\n        }\n    }\n    if(count > 3){\n     \
    \   return \"No\";\n    }\n    if(dot_count != 1){\n        return \"No\";\n \
    \   }\n    if(dot_index == 0){\n        return \"No\";\n    }\n    if(file_name[dot_index+1]\
    \ == 't' && file_name[dot_index+2] == 'x' && file_name[dot_index+3] == 't'){\n\
    \        return \"Yes\";\n    }\n    if(file_name[dot_index+1] == 'e' && file_name[dot_index+2]\
    \ == 'x' && file_name[dot_index+3] == 'e'){\n        return \"Yes\";\n    }\n\
    \    if(file_name[dot_index+1] == 'd' && file_name[dot_index+2] == 'l' && file_name[dot_index+3]\
    \ == 'l'){\n        return \"Yes\";\n    }\n    return \"No\";", "    int count\
    \ = 0;\n    int dot = 0;\n    int dot_pos = 0;\n    int flag = 0;\n    int flag1\
    \ = 0;\n    int flag2 = 0;\n    int flag3 = 0;\n    int flag4 = 0;\n    int flag5\
    \ = 0;\n    int flag6 = 0;\n    int flag7 = 0;\n    int flag8 = 0;\n    int flag9\
    \ = 0;\n    int flag10 = 0;\n    int flag11 = 0;\n    int flag12 = 0;\n    int\
    \ flag13 = 0;\n    int flag14 = 0;\n    int flag15 = 0;\n    int flag16 = 0;\n\
    \    int flag17 = 0;\n    int flag18 = 0;\n    int flag19 = 0;\n    int flag20\
    \ = 0;\n    int flag21 = 0;\n    int flag22 = 0;\n    int flag23 = 0;\n    int\
    \ flag24 = 0;\n    int flag25 = 0;\n    int flag26 = 0;\n    int flag27 = 0;\n\
    \    int flag28 = 0;\n    int flag29 = 0;\n    int flag30 = 0;\n    int flag31\
    \ = 0;\n    int flag32 = 0;\n    int flag33 = 0;\n    int flag34 = 0;\n    int\
    \ flag35 = 0;\n    int flag36 = 0;\n    int flag37 = 0;\n    int flag38 = 0;\n\
    \    int flag39 = 0;\n    int flag40 = 0;\n    int flag41 = 0;\n    int flag42\
    \ = 0;\n    int flag43 = 0;\n    int flag44 = 0;\n    int flag45 = 0;\n    int\
    \ flag46 = 0;\n    int flag47 = 0;\n    int flag48 = 0;\n    int flag49 = 0;\n\
    \    int flag50 = 0;\n    int flag51 = 0;\n    int flag52 = 0;\n    int flag53\
    \ = 0;\n    int flag54 = 0;\n    int flag55 = 0;\n    int flag56 = 0;\n    int\
    \ flag57 = 0;\n    int flag58 = 0;\n    int flag59 = 0;\n    int flag60 = 0;\n\
    \   ", "    int count = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n        }\n    }\n    if(count > 3 || dot_count\
    \ != 1) {\n        return \"No\";\n    }\n    std::string ext = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if(ext == \"txt\" || ext == \"exe\" || ext == \"dll\") {\n   \
    \     return \"Yes\";\n    }\n    return \"No\";", "    int count = 0;\n    int\
    \ dot_count = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len;\
    \ i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n         \
    \   count++;\n        }\n        if(file_name[i] == '.') {\n            dot_count++;\n\
    \        }\n    }\n    if(count > 3 || dot_count != 1) {\n        return \"No\"\
    ;\n    }\n    std::string sub1 = file_name.substr(0, file_name.find('.'));\n \
    \   std::string sub2 = file_name.substr(file_name.find('.') + 1);\n    if(sub1.length()\
    \ == 0 || (sub1[0] < 'a' || sub1[0] > 'z') && (sub1[0] < 'A' || sub1[0] > 'Z'))\
    \ {\n        return \"No\";\n    }\n    if(sub2 != \"txt\" && sub2 != \"exe\"\
    \ && sub2 != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";",
  "    int count = 0;\n    int dot = 0;\n    int len = file_name.length();\n    int\
    \ i = 0;\n    while(i < len) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot++;\n        }\n        i++;\n    }\n    if(count > 3 || dot\
    \ != 1) {\n        return \"No\";\n    }\n    std::string file_name_copy = file_name;\n\
    \    std::string extension = file_name_copy.substr(file_name_copy.find(\".\")\
    \ + 1);\n    if(extension == \"txt\" || extension == \"exe\" || extension == \"\
    dll\") {\n        return \"Yes\";\n    }\n    return \"No\";", "    int dot_count\
    \ = 0;\n    int digit_count = 0;\n    int letter_count = 0;\n    int dot_index\
    \ = 0;\n    for (int i = 0; i < file_name.length(); i++) {\n        if (file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \        if (file_name[i] >= '0' && file_name[i] <= '9') {\n            digit_count++;\n\
    \        }\n        if ((file_name[i] >= 'a' && file_name[i] <= 'z') || (file_name[i]\
    \ >= 'A' && file_name[i] <= 'Z')) {\n            letter_count++;\n        }\n\
    \    }\n    if (dot_count != 1 || digit_count > 3 || letter_count == 0) {\n  \
    \      return \"No\";\n    }\n    std::string sub_str = file_name.substr(dot_index\
    \ + 1);\n    if (sub_str == \"txt\" || sub_str == \"exe\" || sub_str == \"dll\"\
    ) {\n        return \"Yes\";\n    }\n    return \"No\";", "    int count = 0;\n\
    \    int dot_count = 0;\n    int dot_index = 0;\n    for(int i = 0; i < file_name.length();\
    \ i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n         \
    \   count++;\n        }\n        if(file_name[i] == '.') {\n            dot_count++;\n\
    \            dot_index = i;\n        }\n    }\n    if(count > 3) {\n        return\
    \ \"No\";\n    }\n    if(dot_count != 1) {\n        return \"No\";\n    }\n  \
    \  if(file_name[0] < 'a' || file_name[0] > 'z') {\n        return \"No\";\n  \
    \  }\n    if(file_name.substr(dot_index + 1, file_name.length() - dot_index -\
    \ 1) != \"txt\" && file_name.substr(dot_index + 1, file_name.length() - dot_index\
    \ - 1) != \"exe\" && file_name.substr(dot_index + 1, file_name.length() - dot_index\
    \ - 1) != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";", " \
    \   int count = 0;\n    int dot = 0;\n    int flag = 0;\n    int flag1 = 0;\n\
    \    int flag2 = 0;\n    int flag3 = 0;\n    int flag4 = 0;\n    int flag5 = 0;\n\
    \    int flag6 = 0;\n    int flag7 = 0;\n    int flag8 = 0;\n    int flag9 = 0;\n\
    \    int flag10 = 0;\n    int flag11 = 0;\n    int flag12 = 0;\n    int flag13\
    \ = 0;\n    int flag14 = 0;\n    int flag15 = 0;\n    int flag16 = 0;\n    int\
    \ flag17 = 0;\n    int flag18 = 0;\n    int flag19 = 0;\n    int flag20 = 0;\n\
    \    int flag21 = 0;\n    int flag22 = 0;\n    int flag23 = 0;\n    int flag24\
    \ = 0;\n    int flag25 = 0;\n    int flag26 = 0;\n    int flag27 = 0;\n    int\
    \ flag28 = 0;\n    int flag29 = 0;\n    int flag30 = 0;\n    int flag31 = 0;\n\
    \    int flag32 = 0;\n    int flag33 = 0;\n    int flag34 = 0;\n    int flag35\
    \ = 0;\n    int flag36 = 0;\n    int flag37 = 0;\n    int flag38 = 0;\n    int\
    \ flag39 = 0;\n    int flag40 = 0;\n    int flag41 = 0;\n    int flag42 = 0;\n\
    \    int flag43 = 0;\n    int flag44 = 0;\n    int flag45 = 0;\n    int flag46\
    \ = 0;\n    int flag47 = 0;\n    int flag48 = 0;\n    int flag49 = 0;\n    int\
    \ flag50 = 0;\n    int flag51 = 0;\n    int flag52 = 0;\n    int flag53 = 0;\n\
    \    int flag54 = 0;\n    int flag55 = 0;\n    int flag56 = 0;\n    int flag57\
    \ = 0;\n    int flag58 = 0;\n    int flag59 = 0;\n    int flag60 = 0;\n    int\
    \ flag61 = 0;\n    int", "    int count = 0;\n    int dot_count = 0;\n    int\
    \ dot_index = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len;\
    \ i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n         \
    \   count++;\n        }\n        if(file_name[i] == '.') {\n            dot_count++;\n\
    \            dot_index = i;\n        }\n    }\n    if(count > 3 || dot_count !=\
    \ 1) {\n        return \"No\";\n    }\n    std::string first_part = file_name.substr(0,\
    \ dot_index);\n    std::string second_part = file_name.substr(dot_index + 1, len\
    \ - dot_index - 1);\n    if(first_part.length() == 0 || (first_part[0] < 'a' ||\
    \ first_part[0] > 'z') && (first_part[0] < 'A' || first_part[0] > 'Z')) {\n  \
    \      return \"No\";\n    }\n    if(second_part != \"txt\" && second_part !=\
    \ \"exe\" && second_part != \"dll\") {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";", "    int dot_count = 0;\n    int digit_count = 0;\n    int i = 0;\n\
    \    while (file_name[i] != '\\0') {\n        if (file_name[i] == '.') {\n   \
    \         dot_count++;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            digit_count++;\n        }\n        i++;\n    }\n    if\
    \ (dot_count != 1 || digit_count > 3) {\n        return \"No\";\n    }\n    int\
    \ dot_index = file_name.find('.');\n    std::string sub_string_before_dot = file_name.substr(0,\
    \ dot_index);\n    std::string sub_string_after_dot = file_name.substr(dot_index\
    \ + 1);\n    if (sub_string_before_dot.empty() || sub_string_before_dot[0] < 'A'\
    \ ||\n        (sub_string_before_dot[0] > 'Z' && sub_string_before_dot[0] < 'a')\
    \ ||\n        sub_string_before_dot[0] > 'z') {\n        return \"No\";\n    }\n\
    \    if (sub_string_after_dot != \"txt\" && sub_string_after_dot != \"exe\" &&\n\
    \        sub_string_after_dot != \"dll\") {\n        return \"No\";\n    }\n \
    \   return \"Yes\";", "    int count = 0;\n    int count_dot = 0;\n    int count_alpha\
    \ = 0;\n    int count_digit = 0;\n    int count_alpha_dot = 0;\n    int count_alpha_digit\
    \ = 0;\n    int count_alpha_digit_dot = 0;\n    int count_alpha_digit_dot_ext\
    \ = 0;\n    int count_alpha_digit_dot_ext_txt = 0;\n    int count_alpha_digit_dot_ext_exe\
    \ = 0;\n    int count_alpha_digit_dot_ext_dll = 0;\n    int count_alpha_digit_dot_ext_txt_exe\
    \ = 0;\n    int count_alpha_digit_dot_ext_txt_dll = 0;\n    int count_alpha_digit_dot_ext_exe_dll\
    \ = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll_\
    \ = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll_ = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll_\
    \ = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll_ = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll_\
    \ = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll_ = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll_\
    \ = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll_ = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll_\
    \ = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll_ = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll_\
    \ = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll_ = 0;\n    int count_alpha_digit_dot_ext_txt_exe_dll_\
    \ = 0;\n    int count_alpha_digit_dot_ext_", "    int count = 0;\n    int dot_count\
    \ = 0;\n    int dot_index = 0;\n    for(int i = 0; i < file_name.length(); i++)\
    \ {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \        dot_index = i;\n        }\n    }\n    if(count > 3) {\n        return\
    \ \"No\";\n    }\n    if(dot_count != 1) {\n        return \"No\";\n    }\n  \
    \  if(dot_index == 0) {\n        return \"No\";\n    }\n    if(file_name[dot_index\
    \ + 1] == 't' && file_name[dot_index + 2] == 'x' && file_name[dot_index + 3] ==\
    \ 't') {\n        return \"Yes\";\n    }\n    if(file_name[dot_index + 1] == 'e'\
    \ && file_name[dot_index + 2] == 'x' && file_name[dot_index + 3] == 'e') {\n \
    \       return \"Yes\";\n    }\n    if(file_name[dot_index + 1] == 'd' && file_name[dot_index\
    \ + 2] == 'l' && file_name[dot_index + 3] == 'l') {\n        return \"Yes\";\n\
    \    }\n    return \"No\";", "    int count = 0;\n    int dot_count = 0;\n   \
    \ int dot_index = 0;\n    for(int i = 0; i < file_name.length(); i++) {\n    \
    \    if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \        dot_index = i;\n        }\n    }\n    if(count > 3) {\n        return\
    \ \"No\";\n    }\n    if(dot_count != 1) {\n        return \"No\";\n    }\n  \
    \  if(file_name[0] < 'a' || file_name[0] > 'z') {\n        return \"No\";\n  \
    \  }\n    if(file_name.substr(dot_index + 1, file_name.length() - dot_index -\
    \ 1) != \"txt\" &&\n       file_name.substr(dot_index + 1, file_name.length()\
    \ - dot_index - 1) != \"exe\" &&\n       file_name.substr(dot_index + 1, file_name.length()\
    \ - dot_index - 1) != \"dll\") {\n        return \"No\";\n    }\n    return \"\
    Yes\";", "    int dot_count = 0;\n    int digit_count = 0;\n    for (int i = 0;\
    \ i < file_name.size(); i++) {\n        if (file_name[i] == '.') {\n         \
    \   dot_count++;\n        }\n        if (file_name[i] >= '0' && file_name[i] <=\
    \ '9') {\n            digit_count++;\n        }\n    }\n    if (dot_count != 1\
    \ || digit_count > 3) {\n        return \"No\";\n    }\n    std::string file_type\
    \ = file_name.substr(file_name.find(\".\") + 1);\n    std::string file_name_without_type\
    \ = file_name.substr(0, file_name.find(\".\"));\n    if (file_name_without_type.empty()\
    \ || (file_name_without_type[0] < 'a' || file_name_without_type[0] > 'z') && (file_name_without_type[0]\
    \ < 'A' || file_name_without_type[0] > 'Z')) {\n        return \"No\";\n    }\n\
    \    if (file_type != \"txt\" && file_type != \"exe\" && file_type != \"dll\"\
    ) {\n        return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n\
    \    int dot_count = 0;\n    int len = file_name.length();\n    for(int i = 0;\
    \ i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n\
    \            count++;\n        }\n        if(file_name[i] == '.') {\n        \
    \    dot_count++;\n        }\n    }\n    if(count > 3 || dot_count != 1) {\n \
    \       return \"No\";\n    }\n    std::string temp = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if(temp == \"txt\" || temp == \"exe\" || temp == \"dll\") {\n\
    \        return \"Yes\";\n    }\n    return \"No\";", "    // your code here\n\
    \    int count = 0;\n    int dot = 0;\n    int dot_pos = 0;\n    for(int i = 0;\
    \ i < file_name.length(); i++){\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9'){\n            count++;\n        }\n        if(file_name[i] == '.'){\n\
    \            dot++;\n            dot_pos = i;\n        }\n    }\n    if(count\
    \ > 3 || dot != 1){\n        return \"No\";\n    }\n    if(file_name[0] >= 'a'\
    \ && file_name[0] <= 'z' || file_name[0] >= 'A' && file_name[0] <= 'Z'){\n   \
    \     if(file_name.substr(dot_pos + 1, 3) == \"txt\" || file_name.substr(dot_pos\
    \ + 1, 3) == \"exe\" || file_name.substr(dot_pos + 1, 3) == \"dll\"){\n      \
    \      return \"Yes\";\n        }\n    }\n    return \"No\";", "    int count\
    \ = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n            dot_index = i;\n        }\n    }\n\
    \    if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    std::string\
    \ sub1 = file_name.substr(0, dot_index);\n    std::string sub2 = file_name.substr(dot_index\
    \ + 1, len - dot_index - 1);\n    if(sub1.length() == 0 || (sub1[0] < 'a' || sub1[0]\
    \ > 'z') && (sub1[0] < 'A' || sub1[0] > 'Z')) {\n        return \"No\";\n    }\n\
    \    if(sub2 != \"txt\" && sub2 != \"exe\" && sub2 != \"dll\") {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int dot_count\
    \ = 0;\n    for(int i = 0; i < file_name.length(); i++) {\n        if(file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n        }\n    }\n    if(count > 3 || dot_count\
    \ != 1) {\n        return \"No\";\n    }\n    std::string before_dot = file_name.substr(0,\
    \ file_name.find('.'));\n    std::string after_dot = file_name.substr(file_name.find('.')\
    \ + 1);\n    if(before_dot.length() == 0 || (before_dot[0] < 'a' || before_dot[0]\
    \ > 'z') && (before_dot[0] < 'A' || before_dot[0] > 'Z')) {\n        return \"\
    No\";\n    }\n    if(after_dot != \"txt\" && after_dot != \"exe\" && after_dot\
    \ != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";", "    int\
    \ count = 0;\n    int count_dot = 0;\n    int count_alpha = 0;\n    int count_alpha_after_dot\
    \ = 0;\n    int count_digit = 0;\n    int count_digit_after_dot = 0;\n    int\
    \ count_alpha_before_dot = 0;\n    int count_digit_before_dot = 0;\n    int count_txt\
    \ = 0;\n    int count_exe = 0;\n    int count_dll = 0;\n    for(int i = 0; i <\
    \ file_name.length(); i++) {\n        if(file_name[i] == '.') {\n            count_dot++;\n\
    \        }\n        if(file_name[i] >= 'a' && file_name[i] <= 'z') {\n       \
    \     count_alpha++;\n        }\n        if(file_name[i] >= 'A' && file_name[i]\
    \ <= 'Z') {\n            count_alpha++;\n        }\n        if(file_name[i] >=\
    \ '0' && file_name[i] <= '9') {\n            count_digit++;\n        }\n     \
    \   if(file_name[i] == '.') {\n            for(int j = i + 1; j < file_name.length();\
    \ j++) {\n                if(file_name[j] >= 'a' && file_name[j] <= 'z') {\n \
    \                   count_alpha_after_dot++;\n                }\n            \
    \    if(file_name[j] >= 'A' && file_name[j] <= 'Z') {\n                    count_alpha_after_dot++;\n\
    \                }\n                if(file_name[j] >= '0' && file_name[j] <=\
    \ '9') {\n                    count_digit_after_dot++;\n                }\n  \
    \          }\n        }\n        if(file_name[i] == '.') {\n            for(int\
    \ j = 0; j < i; j++) {\n                if(file_name[j] >= 'a' && file_name[j]\
    \ <= 'z') {\n                    count_alpha_before_dot++;\n                }\n\
    \                if(file_name[j] >= 'A' && file_name[j", "    int count = 0;\n\
    \    int dot_count = 0;\n    int dot_index = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n            dot_index = i;\n        }\n    }\n\
    \    if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    std::string\
    \ first_part = file_name.substr(0, dot_index);\n    std::string second_part =\
    \ file_name.substr(dot_index + 1, len - dot_index - 1);\n    if(first_part.length()\
    \ == 0 || (first_part[0] < 'a' || first_part[0] > 'z') && (first_part[0] < 'A'\
    \ || first_part[0] > 'Z')) {\n        return \"No\";\n    }\n    if(second_part\
    \ != \"txt\" && second_part != \"exe\" && second_part != \"dll\") {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int dot_count\
    \ = 0;\n    int dot_index = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9')\
    \ {\n            count++;\n        }\n        if(file_name[i] == '.') {\n    \
    \        dot_count++;\n            dot_index = i;\n        }\n    }\n    if(count\
    \ > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    std::string first\
    \ = file_name.substr(0, dot_index);\n    std::string second = file_name.substr(dot_index\
    \ + 1, len - dot_index - 1);\n    if(first.length() == 0 || (first[0] < 'a' ||\
    \ first[0] > 'z') && (first[0] < 'A' || first[0] > 'Z')) {\n        return \"\
    No\";\n    }\n    if(second != \"txt\" && second != \"exe\" && second != \"dll\"\
    ) {\n        return \"No\";\n    }\n    return \"Yes\";", "    int count=0;\n\
    \    int count1=0;\n    int count2=0;\n    int count3=0;\n    int count4=0;\n\
    \    int count5=0;\n    int count6=0;\n    int count7=0;\n    int count8=0;\n\
    \    int count9=0;\n    int count10=0;\n    int count11=0;\n    int count12=0;\n\
    \    int count13=0;\n    int count14=0;\n    int count15=0;\n    int count16=0;\n\
    \    int count17=0;\n    int count18=0;\n    int count19=0;\n    int count20=0;\n\
    \    int count21=0;\n    int count22=0;\n    int count23=0;\n    int count24=0;\n\
    \    int count25=0;\n    int count26=0;\n    int count27=0;\n    int count28=0;\n\
    \    int count29=0;\n    int count30=0;\n    int count31=0;\n    int count32=0;\n\
    \    int count33=0;\n    int count34=0;\n    int count35=0;\n    int count36=0;\n\
    \    int count37=0;\n    int count38=0;\n    int count39=0;\n    int count40=0;\n\
    \    int count41=0;\n    int count42=0;\n    int count43=0;\n    int count44=0;\n\
    \    int count45=0;\n    int count46=0;\n    int count47=0;\n    int count48=0;\n\
    \    int count49=0;\n    int count50=0;\n    int count51=0;\n    int count52=0;\n\
    \    int count53=0;\n    int count54=0;\n    int count55=0;\n    int count56=0;\n\
    \    int count57=0;\n    int count58=0;\n    int count59=0;\n    int count60=0;\n\
    \    int count61=0;\n    int count62=0;\n    int count63=0;\n", "    std::string\
    \ result = \"No\";\n    std::string extension;\n    std::string name;\n    int\
    \ dot_count = 0;\n    int digit_count = 0;\n    for (int i = 0; i < file_name.length();\
    \ i++) {\n        if (file_name[i] == '.') {\n            dot_count++;\n     \
    \       if (dot_count > 1) {\n                return result;\n            }\n\
    \            extension = file_name.substr(i + 1);\n            name = file_name.substr(0,\
    \ i);\n        }\n        if (isdigit(file_name[i])) {\n            digit_count++;\n\
    \            if (digit_count > 3) {\n                return result;\n        \
    \    }\n        }\n    }\n    if (extension == \"txt\" || extension == \"exe\"\
    \ || extension == \"dll\") {\n        if (isalpha(name[0])) {\n            result\
    \ = \"Yes\";\n        }\n    }\n    return result;", "    int count = 0;\n   \
    \ int dot_count = 0;\n    int dot_index = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n            dot_index = i;\n        }\n    }\n\
    \    if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    std::string\
    \ first = file_name.substr(0, dot_index);\n    std::string second = file_name.substr(dot_index\
    \ + 1, len - dot_index - 1);\n    if(first.length() == 0 || (first[0] < 'a' ||\
    \ first[0] > 'z') && (first[0] < 'A' || first[0] > 'Z')) {\n        return \"\
    No\";\n    }\n    if(second != \"txt\" && second != \"exe\" && second != \"dll\"\
    ) {\n        return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n\
    \    int dot_count = 0;\n    int dot_index = -1;\n    for(int i = 0; i < file_name.length();\
    \ i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n         \
    \   count++;\n        }\n        if(file_name[i] == '.') {\n            dot_count++;\n\
    \            dot_index = i;\n        }\n    }\n    if(count > 3 || dot_count !=\
    \ 1) {\n        return \"No\";\n    }\n    std::string sub1 = file_name.substr(0,\
    \ dot_index);\n    std::string sub2 = file_name.substr(dot_index + 1, file_name.length()\
    \ - dot_index - 1);\n    if(sub1.length() == 0 || !((sub1[0] >= 'a' && sub1[0]\
    \ <= 'z') || (sub1[0] >= 'A' && sub1[0] <= 'Z'))) {\n        return \"No\";\n\
    \    }\n    if(sub2 != \"txt\" && sub2 != \"exe\" && sub2 != \"dll\") {\n    \
    \    return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int\
    \ dot_count = 0;\n    int dot_index = 0;\n    int digit_count = 0;\n    int letter_count\
    \ = 0;\n    int letter_index = 0;\n    int extension_count = 0;\n    int extension_index\
    \ = 0;\n    for (int i = 0; i < file_name.length(); i++) {\n        if (file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \        if (file_name[i] >= '0' && file_name[i] <= '9') {\n            digit_count++;\n\
    \        }\n        if ((file_name[i] >= 'a' && file_name[i] <= 'z') || (file_name[i]\
    \ >= 'A' && file_name[i] <= 'Z')) {\n            letter_count++;\n           \
    \ letter_index = i;\n        }\n    }\n    if (dot_count == 1 && digit_count <=\
    \ 3 && letter_count > 0 && letter_index == 0) {\n        for (int i = dot_index\
    \ + 1; i < file_name.length(); i++) {\n            extension_count++;\n      \
    \      extension_index = i;\n        }\n        if (extension_count == 3) {\n\
    \            if (file_name[extension_index] == 't' && file_name[extension_index\
    \ + 1] == 'x' && file_name[extension_index + 2] == 't') {\n                return\
    \ \"Yes\";\n            }\n            else if (file_name[extension_index] ==\
    \ 'e' && file_name[extension_index + 1] == 'x' && file_name[extension_index +\
    \ 2] == 'e') {\n                return \"Yes\";\n            }\n            else\
    \ if (file_name[extension_index] == 'd' && file_name[extension_index + 1] == 'l'\
    \ && file_name[extension_index + 2] == 'l') {\n                return \"Yes\"\
    ;\n            }\n            else {\n                return \"No\";\n       \
    \     }\n        }\n        else {\n            return \"", '    int i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,ii,jj,kk,ll,mm,nn,oo,pp,qq,rr,ss,tt,uu,vv,ww,xx,yy,zz,aaa,bbb,ccc,ddd,eee,fff,ggg,hhh,iii,jjj,kkk,lll,mmm,nnn,ooo,ppp,qqq,rrr,sss,ttt,uuu,vvv,www,xxx,yyy,zzz,aaaa,bbbb,cccc,dddd,eeee,ffff,gggg,hhhh,iiii,jjjj,kkkk,llll,mmmm,nnnn,oooo,pppp,qqqq,rrrr,ssss,tttt,uuuu,vvvv,wwww,xxxx,yyyy,zzzz,aaaaa,bbbbb,ccccc,ddddd,eeeee,fffff,ggggg,hhhhh,iiiii,jjjjj,kkkkk,lllll,mmmmm,nnnnn,ooooo,ppppp,qqqqq,rrrrr,sssss,ttttt,uuuuu,vvvvv,wwwww,xxxxx,yyyyy,zzzzz,aaaaaa,bbbbbb,cccccc,dddddd,eeeeee,ffffff,gggggg,hhhhhh,iiiiii,jjjjjj,kkkkkk,llllll,mmmmmm,nnnnnn,oooooo,pppppp,qqqqqq,rrrrrr,ssssss,tttttt,uuuuuu,vvvvvv,wwwwww,xxxxxx,yyyyyy,zzzzzz,aaaaaaa,bbbbbbb,ccccccc,ddddddd,eeeeeee,fffffff,ggggggg,hhhhhhh,iiiiiii,jjjjjjj,kkkkkkk,lllllll,mmmmmmm,nnnnnnn,ooooooo,ppppppp,qqqqqqq,rrrrrrr,sssssss,ttttttt,',
  "    int count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n    int len\
    \ = file_name.length();\n    for(int i = 0; i < len; i++) {\n        if(file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \    }\n    if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n\
    \    std::string sub1 = file_name.substr(0, dot_index);\n    std::string sub2\
    \ = file_name.substr(dot_index + 1, len - dot_index - 1);\n    if(sub1.length()\
    \ == 0 || (sub1[0] < 'a' || sub1[0] > 'z') && (sub1[0] < 'A' || sub1[0] > 'Z'))\
    \ {\n        return \"No\";\n    }\n    if(sub2 != \"txt\" && sub2 != \"exe\"\
    \ && sub2 != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";",
  "  // your code here\n  int dot_count = 0;\n  int digit_count = 0;\n  int len =\
    \ file_name.length();\n  for(int i = 0; i < len; i++) {\n    if(file_name[i] ==\
    \ '.') {\n      dot_count++;\n    }\n    if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n      digit_count++;\n    }\n  }\n  if(dot_count != 1 || digit_count\
    \ > 3) {\n    return \"No\";\n  }\n  std::string extension = file_name.substr(file_name.find(\"\
    .\") + 1);\n  if(extension == \"txt\" || extension == \"exe\" || extension ==\
    \ \"dll\") {\n    return \"Yes\";\n  }\n  return \"No\";", "    int count = 0;\n\
    \    int dot = 0;\n    int dot_index = 0;\n    int flag = 0;\n    for(int i =\
    \ 0; i < file_name.length(); i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot++;\n            dot_index = i;\n        }\n        if(file_name[i]\
    \ >= 'a' && file_name[i] <= 'z') {\n            flag = 1;\n        }\n       \
    \ if(file_name[i] >= 'A' && file_name[i] <= 'Z') {\n            flag = 1;\n  \
    \      }\n    }\n    if(count > 3) {\n        return \"No\";\n    }\n    if(dot\
    \ != 1) {\n        return \"No\";\n    }\n    if(flag == 0) {\n        return\
    \ \"No\";\n    }\n    if(file_name.substr(dot_index + 1, 3) != \"txt\" && file_name.substr(dot_index\
    \ + 1, 3) != \"exe\" && file_name.substr(dot_index + 1, 3) != \"dll\") {\n   \
    \     return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int\
    \ dot = 0;\n    int dot_index = 0;\n    int count_after_dot = 0;\n    for(int\
    \ i = 0; i < file_name.length(); i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot++;\n            dot_index = i;\n        }\n    }\n    if(count\
    \ > 3 || dot != 1) {\n        return \"No\";\n    }\n    for(int i = dot_index\
    \ + 1; i < file_name.length(); i++) {\n        count_after_dot++;\n    }\n   \
    \ if(count_after_dot != 3) {\n        return \"No\";\n    }\n    if(file_name[0]\
    \ >= 'a' && file_name[0] <= 'z' || file_name[0] >= 'A' && file_name[0] <= 'Z')\
    \ {\n        if(file_name[dot_index + 1] == 't' && file_name[dot_index + 2] ==\
    \ 'x' && file_name[dot_index + 3] == 't') {\n            return \"Yes\";\n   \
    \     }\n        else if(file_name[dot_index + 1] == 'e' && file_name[dot_index\
    \ + 2] == 'x' && file_name[dot_index + 3] == 'e') {\n            return \"Yes\"\
    ;\n        }\n        else if(file_name[dot_index + 1] == 'd' && file_name[dot_index\
    \ + 2] == 'l' && file_name[dot_index + 3] == 'l') {\n            return \"Yes\"\
    ;\n        }\n        else {\n            return \"No\";\n        }\n    }\n \
    \   else {\n        return \"No\";\n    }", "    int count = 0;\n    int dot_count\
    \ = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len; i++) {\n\
    \        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \    }\n    }\n    if(count > 3 || dot_count != 1) {\n        return \"No\";\n\
    \    }\n    std::string temp = file_name.substr(file_name.find(\".\") + 1);\n\
    \    if(temp == \"txt\" || temp == \"exe\" || temp == \"dll\") {\n        return\
    \ \"Yes\";\n    }\n    return \"No\";", "    std::regex file_name_regex(\"^[a-zA-Z]+[0-9]{0,3}\\\
    \\.(txt|exe|dll)$\");\n    return std::regex_match(file_name, file_name_regex)\
    \ ? \"Yes\" : \"No\";", "    int count = 0;\n    int dot_count = 0;\n    int dot_index\
    \ = 0;\n    int digit_count = 0;\n    int letter_count = 0;\n    int letter_index\
    \ = 0;\n    std::string extension;\n    for (int i = 0; i < file_name.length();\
    \ i++) {\n        if (file_name[i] == '.') {\n            dot_count++;\n     \
    \       dot_index = i;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            digit_count++;\n        }\n        if ((file_name[i]\
    \ >= 'a' && file_name[i] <= 'z') || (file_name[i] >= 'A' && file_name[i] <= 'Z'))\
    \ {\n            letter_count++;\n            letter_index = i;\n        }\n \
    \   }\n    if (dot_count == 1 && digit_count <= 3 && letter_count >= 1 && letter_index\
    \ == 0) {\n        for (int i = dot_index + 1; i < file_name.length(); i++) {\n\
    \            extension += file_name[i];\n        }\n        if (extension == \"\
    txt\" || extension == \"exe\" || extension == \"dll\") {\n            return \"\
    Yes\";\n        }\n    }\n    return \"No\";", "    int len = file_name.length();\n\
    \    int count = 0;\n    int dot_index = -1;\n    for(int i = 0; i < len; i++)\
    \ {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_index = i;\n  \
    \      }\n    }\n    if(count > 3) {\n        return \"No\";\n    }\n    if(dot_index\
    \ == -1) {\n        return \"No\";\n    }\n    if(dot_index == 0) {\n        return\
    \ \"No\";\n    }\n    if(file_name[dot_index + 1] == 't' && file_name[dot_index\
    \ + 2] == 'x' && file_name[dot_index + 3] == 't') {\n        return \"Yes\";\n\
    \    }\n    if(file_name[dot_index + 1] == 'e' && file_name[dot_index + 2] ==\
    \ 'x' && file_name[dot_index + 3] == 'e') {\n        return \"Yes\";\n    }\n\
    \    if(file_name[dot_index + 1] == 'd' && file_name[dot_index + 2] == 'l' &&\
    \ file_name[dot_index + 3] == 'l') {\n        return \"Yes\";\n    }\n    return\
    \ \"No\";", "    int count = 0;\n    int dot = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot++;\n        }\n    }\n    if(count > 3 || dot != 1) {\n \
    \       return \"No\";\n    }\n    std::string temp = file_name.substr(0, file_name.find('.'));\n\
    \    if(temp.length() == 0) {\n        return \"No\";\n    }\n    if(temp[0] >=\
    \ 'a' && temp[0] <= 'z' || temp[0] >= 'A' && temp[0] <= 'Z') {\n        std::string\
    \ temp2 = file_name.substr(file_name.find('.') + 1, len);\n        if(temp2 ==\
    \ \"txt\" || temp2 == \"exe\" || temp2 == \"dll\") {\n            return \"Yes\"\
    ;\n        }\n    }\n    return \"No\";", "    int len = file_name.length();\n\
    \    int count = 0;\n    int dot = 0;\n    int dot_pos = 0;\n    int flag = 0;\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot++;\n            dot_pos = i;\n        }\n        if(file_name[i]\
    \ >= 'a' && file_name[i] <= 'z') {\n            flag = 1;\n        }\n       \
    \ if(file_name[i] >= 'A' && file_name[i] <= 'Z') {\n            flag = 1;\n  \
    \      }\n    }\n    if(count > 3) {\n        return \"No\";\n    }\n    if(dot\
    \ != 1) {\n        return \"No\";\n    }\n    if(flag == 0) {\n        return\
    \ \"No\";\n    }\n    if(dot_pos == 0) {\n        return \"No\";\n    }\n    std::string\
    \ ext = file_name.substr(dot_pos + 1, len - dot_pos);\n    if(ext == \"txt\" ||\
    \ ext == \"exe\" || ext == \"dll\") {\n        return \"Yes\";\n    }\n    return\
    \ \"No\";", "    int count = 0;\n    int dot = 0;\n    int ext = 0;\n    if(file_name[0]\
    \ >= 'a' && file_name[0] <= 'z' || file_name[0] >= 'A' && file_name[0] <= 'Z')\
    \ {\n        for(int i = 0; i < file_name.length(); i++) {\n            if(file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n                count++;\n            }\n\
    \            if(file_name[i] == '.') {\n                dot++;\n            }\n\
    \            if(file_name[i] == '.' && file_name[i+1] == 't' && file_name[i+2]\
    \ == 'x' && file_name[i+3] == 't') {\n                ext++;\n            }\n\
    \            if(file_name[i] == '.' && file_name[i+1] == 'e' && file_name[i+2]\
    \ == 'x' && file_name[i+3] == 'e') {\n                ext++;\n            }\n\
    \            if(file_name[i] == '.' && file_name[i+1] == 'd' && file_name[i+2]\
    \ == 'l' && file_name[i+3] == 'l') {\n                ext++;\n            }\n\
    \        }\n        if(count <= 3 && dot == 1 && ext == 1) {\n            return\
    \ \"Yes\";\n        }\n        else {\n            return \"No\";\n        }\n\
    \    }\n    else {\n        return \"No\";\n    }", "    int dot_count = 0;\n\
    \    int digit_count = 0;\n    int length = file_name.length();\n    for (int\
    \ i = 0; i < length; i++) {\n        if (file_name[i] == '.') {\n            dot_count++;\n\
    \        }\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n      \
    \      digit_count++;\n        }\n    }\n    if (dot_count != 1 || digit_count\
    \ > 3) {\n        return \"No\";\n    }\n    std::string extension = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if (extension == \"txt\" || extension == \"exe\" || extension\
    \ == \"dll\") {\n        return \"Yes\";\n    }\n    return \"No\";", "    //\
    \ Your code here\n    int count = 0;\n    int dot_count = 0;\n    int dot_index\
    \ = 0;\n    int dot_index_1 = 0;\n    int dot_index_2 = 0;\n    int dot_index_3\
    \ = 0;\n    for(int i = 0; i < file_name.length(); i++){\n        if(file_name[i]\
    \ >= '0' && file_name[i] <= '9'){\n            count++;\n        }\n        if(file_name[i]\
    \ == '.'){\n            dot_count++;\n            dot_index = i;\n        }\n\
    \    }\n    if(count > 3){\n        return \"No\";\n    }\n    if(dot_count !=\
    \ 1){\n        return \"No\";\n    }\n    if(file_name[0] >= '0' && file_name[0]\
    \ <= '9'){\n        return \"No\";\n    }\n    for(int i = dot_index + 1; i <\
    \ file_name.length(); i++){\n        if(file_name[i] == 't'){\n            dot_index_1\
    \ = i;\n        }\n        if(file_name[i] == 'e'){\n            dot_index_2 =\
    \ i;\n        }\n        if(file_name[i] == 'd'){\n            dot_index_3 = i;\n\
    \        }\n    }\n    if(dot_index_1 == dot_index + 1 && dot_index_2 == dot_index\
    \ + 1 && dot_index_3 == dot_index + 1){\n        return \"Yes\";\n    }\n    if(dot_index_1\
    \ == dot_index + 2 && dot_index_2 == dot_index + 2 && dot_index_3 == dot_index\
    \ + 2){\n        return \"Yes\";\n    }\n    if(dot_index_1 == dot_index + 3 &&\
    \ dot_index_2 == dot_index + 3 && dot_index_3 == dot_index + 3){\n        return\
    \ \"Yes\";\n    }\n    return \"No\";", "    int count = 0;\n    int dot = 0;\n\
    \    int flag = 0;\n    int flag2 = 0;\n    int flag3 = 0;\n    int flag4 = 0;\n\
    \    int flag5 = 0;\n    int flag6 = 0;\n    int flag7 = 0;\n    int flag8 = 0;\n\
    \    int flag9 = 0;\n    int flag10 = 0;\n    int flag11 = 0;\n    int flag12\
    \ = 0;\n    int flag13 = 0;\n    int flag14 = 0;\n    int flag15 = 0;\n    int\
    \ flag16 = 0;\n    int flag17 = 0;\n    int flag18 = 0;\n    int flag19 = 0;\n\
    \    int flag20 = 0;\n    int flag21 = 0;\n    int flag22 = 0;\n    int flag23\
    \ = 0;\n    int flag24 = 0;\n    int flag25 = 0;\n    int flag26 = 0;\n    int\
    \ flag27 = 0;\n    int flag28 = 0;\n    int flag29 = 0;\n    int flag30 = 0;\n\
    \    int flag31 = 0;\n    int flag32 = 0;\n    int flag33 = 0;\n    int flag34\
    \ = 0;\n    int flag35 = 0;\n    int flag36 = 0;\n    int flag37 = 0;\n    int\
    \ flag38 = 0;\n    int flag39 = 0;\n    int flag40 = 0;\n    int flag41 = 0;\n\
    \    int flag42 = 0;\n    int flag43 = 0;\n    int flag44 = 0;\n    int flag45\
    \ = 0;\n    int flag46 = 0;\n    int flag47 = 0;\n    int flag48 = 0;\n    int\
    \ flag49 = 0;\n    int flag50 = 0;\n    int flag51 = 0;\n    int flag52 = 0;\n\
    \    int flag53 = 0;\n    int flag54 = 0;\n    int flag55 = 0;\n    int flag56\
    \ = 0;\n    int flag57 = 0;\n    int flag58 = 0;\n    int flag59 = 0;\n    int\
    \ flag60 = 0;\n    int flag61 = 0;\n    int flag62 = 0;\n    int", "    int count\
    \ = 0;\n    int dot = 0;\n    int ext = 0;\n    for(int i = 0; i < file_name.length();\
    \ i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n         \
    \   count++;\n        }\n        if(file_name[i] == '.') {\n            dot++;\n\
    \        }\n        if(file_name[i] == '.' && file_name[i+1] == 't' && file_name[i+2]\
    \ == 'x' && file_name[i+3] == 't') {\n            ext++;\n        }\n        if(file_name[i]\
    \ == '.' && file_name[i+1] == 'e' && file_name[i+2] == 'x' && file_name[i+3] ==\
    \ 'e') {\n            ext++;\n        }\n        if(file_name[i] == '.' && file_name[i+1]\
    \ == 'd' && file_name[i+2] == 'l' && file_name[i+3] == 'l') {\n            ext++;\n\
    \        }\n    }\n    if(count <= 3 && dot == 1 && ext == 1) {\n        return\
    \ \"Yes\";\n    }\n    else {\n        return \"No\";\n    }", "    std::string\
    \ result = \"No\";\n    int count = 0;\n    int dot_count = 0;\n    int dot_index\
    \ = 0;\n    int dot_index_after = 0;\n    int dot_index_before = 0;\n    for (int\
    \ i = 0; i < file_name.length(); i++) {\n        if (file_name[i] == '.') {\n\
    \            dot_count++;\n            dot_index = i;\n        }\n        if (file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n    }\n \
    \   if (count <= 3 && dot_count == 1) {\n        dot_index_after = dot_index +\
    \ 1;\n        dot_index_before = dot_index - 1;\n        if (file_name[dot_index_after]\
    \ == 't' && file_name[dot_index_after + 1] == 'x' && file_name[dot_index_after\
    \ + 2] == 't') {\n            result = \"Yes\";\n        }\n        if (file_name[dot_index_after]\
    \ == 'e' && file_name[dot_index_after + 1] == 'x' && file_name[dot_index_after\
    \ + 2] == 'e') {\n            result = \"Yes\";\n        }\n        if (file_name[dot_index_after]\
    \ == 'd' && file_name[dot_index_after + 1] == 'l' && file_name[dot_index_after\
    \ + 2] == 'l') {\n            result = \"Yes\";\n        }\n        if (file_name[dot_index_before]\
    \ >= 'a' && file_name[dot_index_before] <= 'z') {\n            result = \"Yes\"\
    ;\n        }\n        if (file_name[dot_index_before] >= 'A' && file_name[dot_index_before]\
    \ <= 'Z') {\n            result = \"Yes\";\n        }\n    }\n    return result;",
  "    int dot_count = 0;\n    int digit_count = 0;\n    for (int i = 0; i < file_name.size();\
    \ i++) {\n        if (file_name[i] == '.') {\n            dot_count++;\n     \
    \   }\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n           \
    \ digit_count++;\n        }\n    }\n    if (dot_count != 1 || digit_count > 3)\
    \ {\n        return \"No\";\n    }\n    std::string extension = file_name.substr(file_name.find('.')\
    \ + 1);\n    if (extension != \"txt\" && extension != \"exe\" && extension !=\
    \ \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";", "    int count\
    \ = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9')\
    \ {\n            count++;\n        }\n        if(file_name[i] == '.') {\n    \
    \        dot_count++;\n        }\n    }\n    if(count > 3 || dot_count != 1) {\n\
    \        return \"No\";\n    }\n    std::string file_name_before_dot = file_name.substr(0,\
    \ file_name.find('.'));\n    std::string file_name_after_dot = file_name.substr(file_name.find('.')\
    \ + 1);\n    if(file_name_before_dot.length() == 0 || !isalpha(file_name_before_dot[0]))\
    \ {\n        return \"No\";\n    }\n    if(file_name_after_dot != \"txt\" && file_name_after_dot\
    \ != \"exe\" && file_name_after_dot != \"dll\") {\n        return \"No\";\n  \
    \  }\n    return \"Yes\";", "    int count = 0;\n    int dot = 0;\n    int dot_pos\
    \ = 0;\n    int dot_pos_end = 0;\n    int dot_pos_start = 0;\n    int dot_pos_start_end\
    \ = 0;\n    int dot_pos_end_end = 0;\n    int dot_pos_end_end_end = 0;\n    int\
    \ dot_pos_end_end_end_end = 0;\n    int dot_pos_end_end_end_end_end = 0;\n   \
    \ int dot_pos_end_end_end_end_end_end = 0;\n    int dot_pos_end_end_end_end_end_end_end\
    \ = 0;\n    int dot_pos_end_end_end_end_end_end_end_end = 0;\n    int dot_pos_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    int dot_pos_end_end_end_end_end_end_end_end_end_end = 0;\n    int\
    \ dot_pos_end_end_end_end_end_end_end_end_end_end_end = 0;\n    int dot_pos_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    int dot_pos_end_end_end_end_end_end_end_end_end_end_end_end_end =\
    \ 0;\n    int dot_pos_end_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    int dot_pos_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    int dot_pos_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    int dot_pos_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    int dot_pos", "    int count = 0;\n    int dot = 0;\n    int dot_pos;\n\
    \    int len = file_name.length();\n    for(int i = 0; i < len; i++) {\n     \
    \   if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n \
    \       }\n        if(file_name[i] == '.') {\n            dot++;\n           \
    \ dot_pos = i;\n        }\n    }\n    if(count > 3 || dot != 1) {\n        return\
    \ \"No\";\n    }\n    std::string sub = file_name.substr(dot_pos + 1, len - dot_pos\
    \ - 1);\n    if(sub == \"txt\" || sub == \"exe\" || sub == \"dll\") {\n      \
    \  return \"Yes\";\n    }\n    return \"No\";", "    int count = 0;\n    int dot_count\
    \ = 0;\n    for(int i = 0; i < file_name.length(); i++) {\n        if(file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n        }\n    }\n    if(count > 3 || dot_count\
    \ != 1) {\n        return \"No\";\n    }\n    std::string ext = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if(ext != \"txt\" && ext != \"exe\" && ext != \"dll\") {\n   \
    \     return \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int\
    \ dot_count = 0;\n    int len = file_name.length();\n    int i = 0;\n    while(i\
    \ < len) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n       \
    \     count++;\n        }\n        if(file_name[i] == '.') {\n            dot_count++;\n\
    \        }\n        i++;\n    }\n    if(count > 3 || dot_count != 1) {\n     \
    \   return \"No\";\n    }\n    std::string sub_str = file_name.substr(0, file_name.find('.'));\n\
    \    if(sub_str.length() == 0) {\n        return \"No\";\n    }\n    if(sub_str[0]\
    \ >= 'a' && sub_str[0] <= 'z') {\n        return \"Yes\";\n    }\n    if(sub_str[0]\
    \ >= 'A' && sub_str[0] <= 'Z') {\n        return \"Yes\";\n    }\n    return \"\
    No\";", "    int count = 0;\n    int dot_count = 0;\n    int dot_pos = 0;\n  \
    \  int len = file_name.length();\n    for(int i = 0; i < len; i++) {\n       \
    \ if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n   \
    \     }\n        if(file_name[i] == '.') {\n            dot_count++;\n       \
    \     dot_pos = i;\n        }\n    }\n    if(count > 3 || dot_count != 1) {\n\
    \        return \"No\";\n    }\n    std::string str1 = file_name.substr(0, dot_pos);\n\
    \    std::string str2 = file_name.substr(dot_pos + 1, len - dot_pos - 1);\n  \
    \  if(str1.length() == 0 || (str1[0] < 'a' || str1[0] > 'z') && (str1[0] < 'A'\
    \ || str1[0] > 'Z')) {\n        return \"No\";\n    }\n    if(str2 != \"txt\"\
    \ && str2 != \"exe\" && str2 != \"dll\") {\n        return \"No\";\n    }\n  \
    \  return \"Yes\";", "    // your code here\n    int count = 0;\n    int dot_count\
    \ = 0;\n    int dot_index = 0;\n    int count_after_dot = 0;\n    std::string\
    \ sub_before_dot;\n    std::string sub_after_dot;\n    for(int i = 0; i < file_name.length();\
    \ i++){\n        if(file_name[i] >= '0' && file_name[i] <= '9'){\n           \
    \ count++;\n        }\n        if(file_name[i] == '.'){\n            dot_count++;\n\
    \            dot_index = i;\n        }\n    }\n    if(count > 3 || dot_count !=\
    \ 1){\n        return \"No\";\n    }\n    sub_before_dot = file_name.substr(0,\
    \ dot_index);\n    sub_after_dot = file_name.substr(dot_index + 1, file_name.length()\
    \ - dot_index - 1);\n    if(sub_before_dot.length() == 0 || !((sub_before_dot[0]\
    \ >= 'a' && sub_before_dot[0] <= 'z') || (sub_before_dot[0] >= 'A' && sub_before_dot[0]\
    \ <= 'Z'))){\n        return \"No\";\n    }\n    if(sub_after_dot != \"txt\" &&\
    \ sub_after_dot != \"exe\" && sub_after_dot != \"dll\"){\n        return \"No\"\
    ;\n    }\n    return \"Yes\";", "    int count = 0;\n    int dot_count = 0;\n\
    \    int len = file_name.length();\n    for(int i = 0; i < len; i++) {\n     \
    \   if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n \
    \       }\n        if(file_name[i] == '.') {\n            dot_count++;\n     \
    \   }\n    }\n    if(count > 3 || dot_count != 1) {\n        return \"No\";\n\
    \    }\n    std::string ext = file_name.substr(file_name.find(\".\") + 1);\n \
    \   if(ext == \"txt\" || ext == \"exe\" || ext == \"dll\") {\n        return \"\
    Yes\";\n    }\n    return \"No\";", "    int count = 0;\n    for(int i = 0; i\
    \ < file_name.length(); i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n    }\n    if(count > 3) {\n   \
    \     return \"No\";\n    }\n    int dot_count = 0;\n    for(int i = 0; i < file_name.length();\
    \ i++) {\n        if(file_name[i] == '.') {\n            dot_count++;\n      \
    \  }\n    }\n    if(dot_count != 1) {\n        return \"No\";\n    }\n    std::string\
    \ sub_string = file_name.substr(0, file_name.find(\".\"));\n    if(sub_string.length()\
    \ == 0) {\n        return \"No\";\n    }\n    if(sub_string[0] >= 'a' && sub_string[0]\
    \ <= 'z') {\n        return \"Yes\";\n    }\n    if(sub_string[0] >= 'A' && sub_string[0]\
    \ <= 'Z') {\n        return \"Yes\";\n    }\n    return \"No\";", "    // your\
    \ code here\n    int count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n\
    \    int digit_count = 0;\n    int letter_count = 0;\n    int letter_index = 0;\n\
    \    int extension_count = 0;\n    int extension_index = 0;\n    int extension_length\
    \ = 0;\n    int extension_check = 0;\n    int extension_check_1 = 0;\n    int\
    \ extension_check_2 = 0;\n    int extension_check_3 = 0;\n    int extension_check_4\
    \ = 0;\n    int extension_check_5 = 0;\n    int extension_check_6 = 0;\n    int\
    \ extension_check_7 = 0;\n    int extension_check_8 = 0;\n    int extension_check_9\
    \ = 0;\n    int extension_check_10 = 0;\n    int extension_check_11 = 0;\n   \
    \ int extension_check_12 = 0;\n    int extension_check_13 = 0;\n    int extension_check_14\
    \ = 0;\n    int extension_check_15 = 0;\n    int extension_check_16 = 0;\n   \
    \ int extension_check_17 = 0;\n    int extension_check_18 = 0;\n    int extension_check_19\
    \ = 0;\n    int extension_check_20 = 0;\n    int extension_check_21 = 0;\n   \
    \ int extension_check_22 = 0;\n    int extension_check_23 = 0;\n    int extension_check_24\
    \ = 0;\n    int extension_check_25 = 0;\n    int extension_check_26 = 0;\n   \
    \ int extension_check_27 = 0;\n    int extension_check_28 = 0;\n    int extension_check_29\
    \ = 0;\n    int extension_check_30 = 0;\n    int extension_check_31 = 0;\n   \
    \ int extension_check_32 = 0;\n    int extension_check_33 = 0;\n    int extension_check_34\
    \ = 0;\n    int extension_check_35 = 0;\n    int extension_check_36 = 0;\n   \
    \ int extension_check_37 = 0;\n    int extension_check_38 = 0;", "    int dot_count\
    \ = 0;\n    int digit_count = 0;\n    int letter_count = 0;\n    int letter_index\
    \ = 0;\n    int dot_index = 0;\n    int digit_index = 0;\n    int extension_index\
    \ = 0;\n    std::string extension;\n    for (int i = 0; i < file_name.length();\
    \ i++) {\n        if (file_name[i] == '.') {\n            dot_count++;\n     \
    \       dot_index = i;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            digit_count++;\n            digit_index = i;\n      \
    \  }\n        if ((file_name[i] >= 'a' && file_name[i] <= 'z') || (file_name[i]\
    \ >= 'A' && file_name[i] <= 'Z')) {\n            letter_count++;\n           \
    \ letter_index = i;\n        }\n    }\n    if (dot_count != 1) {\n        return\
    \ \"No\";\n    }\n    if (digit_count > 3) {\n        return \"No\";\n    }\n\
    \    if (letter_count == 0) {\n        return \"No\";\n    }\n    if (letter_index\
    \ > dot_index) {\n        return \"No\";\n    }\n    if (digit_index < dot_index)\
    \ {\n        return \"No\";\n    }\n    extension_index = dot_index + 1;\n   \
    \ extension = file_name.substr(extension_index, file_name.length() - extension_index);\n\
    \    if (extension != \"txt\" && extension != \"exe\" && extension != \"dll\"\
    ) {\n        return \"No\";\n    }\n    return \"Yes\";", "    // your code here\n\
    \    int count = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++)\n    {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9')\n        {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.')\n        {\n            dot_count++;\n        }\n    }\n    if(count\
    \ > 3 || dot_count != 1)\n    {\n        return \"No\";\n    }\n    std::string\
    \ sub1 = file_name.substr(0, file_name.find('.'));\n    std::string sub2 = file_name.substr(file_name.find('.')\
    \ + 1);\n    if(sub1.length() == 0 || (sub1[0] < 'a' || sub1[0] > 'z') && (sub1[0]\
    \ < 'A' || sub1[0] > 'Z'))\n    {\n        return \"No\";\n    }\n    if(sub2\
    \ != \"txt\" && sub2 != \"exe\" && sub2 != \"dll\")\n    {\n        return \"\
    No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int dot = 0;\n  \
    \  std::string ext;\n    for(int i = 0; i < file_name.length(); i++) {\n     \
    \   if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n \
    \       }\n        if(file_name[i] == '.') {\n            dot++;\n        }\n\
    \    }\n    if(count > 3 || dot != 1) {\n        return \"No\";\n    }\n    ext\
    \ = file_name.substr(file_name.find('.')+1);\n    if(ext == \"txt\" || ext ==\
    \ \"exe\" || ext == \"dll\") {\n        return \"Yes\";\n    }\n    return \"\
    No\";", "\t// write your code here\n\tint count = 0;\n\tint count1 = 0;\n\tint\
    \ count2 = 0;\n\tint count3 = 0;\n\tint count4 = 0;\n\tint count5 = 0;\n\tint\
    \ count6 = 0;\n\tint count7 = 0;\n\tint count8 = 0;\n\tint count9 = 0;\n\tint\
    \ count10 = 0;\n\tint count11 = 0;\n\tint count12 = 0;\n\tint count13 = 0;\n\t\
    int count14 = 0;\n\tint count15 = 0;\n\tint count16 = 0;\n\tint count17 = 0;\n\
    \tint count18 = 0;\n\tint count19 = 0;\n\tint count20 = 0;\n\tint count21 = 0;\n\
    \tint count22 = 0;\n\tint count23 = 0;\n\tint count24 = 0;\n\tint count25 = 0;\n\
    \tint count26 = 0;\n\tint count27 = 0;\n\tint count28 = 0;\n\tint count29 = 0;\n\
    \tint count30 = 0;\n\tint count31 = 0;\n\tint count32 = 0;\n\tint count33 = 0;\n\
    \tint count34 = 0;\n\tint count35 = 0;\n\tint count36 = 0;\n\tint count37 = 0;\n\
    \tint count38 = 0;\n\tint count39 = 0;\n\tint count40 = 0;\n\tint count41 = 0;\n\
    \tint count42 = 0;\n\tint count43 = 0;\n\tint count44 = 0;\n\tint count45 = 0;\n\
    \tint count46 = 0;\n\tint count47 = 0;\n\tint count48 = 0;\n\tint count49 = 0;\n\
    \tint count50 = 0;\n\tint count51 = 0;\n\tint count52 = 0;\n\tint count53 = 0;\n\
    \tint count54 = 0;\n\tint count55 = 0;\n\tint count56 = 0;\n\tint count57 = 0;\n\
    \tint count58 = 0;\n\tint count59 = 0;\n\tint count60 = 0;\n\tint count61 = 0;\n\
    \tint count62 = 0;\n\t", "    // Write your code here\n    int count = 0;\n  \
    \  int dot = 0;\n    int dot_pos = 0;\n    int flag = 0;\n    for(int i = 0; i\
    \ < file_name.length(); i++){\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9'){\n            count++;\n        }\n        if(file_name[i] == '.'){\n\
    \            dot++;\n            dot_pos = i;\n        }\n        if(file_name[i]\
    \ >= 'a' && file_name[i] <= 'z'){\n            flag = 1;\n        }\n        if(file_name[i]\
    \ >= 'A' && file_name[i] <= 'Z'){\n            flag = 1;\n        }\n    }\n \
    \   if(count > 3 || dot != 1 || flag == 0){\n        return \"No\";\n    }\n \
    \   std::string str1 = file_name.substr(dot_pos+1, file_name.length()-1);\n  \
    \  if(str1 == \"txt\" || str1 == \"exe\" || str1 == \"dll\"){\n        return\
    \ \"Yes\";\n    }\n    return \"No\";", "    int count = 0;\n    int dot_count\
    \ = 0;\n    int dot_index = 0;\n    int count_after_dot = 0;\n    for(int i =\
    \ 0; i < file_name.length(); i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n            dot_index = i;\n        }\n    }\n\
    \    if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    for(int\
    \ i = dot_index + 1; i < file_name.length(); i++) {\n        count_after_dot++;\n\
    \    }\n    if(count_after_dot != 3) {\n        return \"No\";\n    }\n    std::string\
    \ sub_str = file_name.substr(dot_index + 1, file_name.length());\n    if(sub_str\
    \ == \"txt\" || sub_str == \"exe\" || sub_str == \"dll\") {\n        return \"\
    Yes\";\n    }\n    return \"No\";", "    // Your code here\n    int count = 0;\n\
    \    int dot = 0;\n    int len = file_name.length();\n    for(int i = 0; i < len;\
    \ i++)\n    {\n        if(file_name[i] >= '0' && file_name[i] <= '9')\n      \
    \  {\n            count++;\n        }\n        if(file_name[i] == '.')\n     \
    \   {\n            dot++;\n        }\n    }\n    if(count > 3 || dot != 1)\n \
    \   {\n        return \"No\";\n    }\n    std::string str = file_name.substr(0,\
    \ file_name.find('.'));\n    if(str.length() == 0)\n    {\n        return \"No\"\
    ;\n    }\n    if(str[0] >= 'a' && str[0] <= 'z' || str[0] >= 'A' && str[0] <=\
    \ 'Z')\n    {\n        std::string str2 = file_name.substr(file_name.find('.')\
    \ + 1, len);\n        if(str2 == \"txt\" || str2 == \"exe\" || str2 == \"dll\"\
    )\n        {\n            return \"Yes\";\n        }\n    }\n    return \"No\"\
    ;", "    int count = 0;\n    int dot_count = 0;\n    int dot_pos = 0;\n    int\
    \ len = file_name.length();\n    for(int i = 0; i < len; i++) {\n        if(file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if(file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_pos = i;\n        }\n \
    \   }\n    if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n\
    \    std::string before_dot = file_name.substr(0, dot_pos);\n    std::string after_dot\
    \ = file_name.substr(dot_pos + 1, len - dot_pos - 1);\n    if(before_dot.length()\
    \ == 0 || (before_dot[0] < 'a' || before_dot[0] > 'z') && (before_dot[0] < 'A'\
    \ || before_dot[0] > 'Z')) {\n        return \"No\";\n    }\n    if(after_dot\
    \ != \"txt\" && after_dot != \"exe\" && after_dot != \"dll\") {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int dot_count\
    \ = 0;\n    int dot_index = 0;\n    int len = file_name.length();\n    for(int\
    \ i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9')\
    \ {\n            count++;\n        }\n        if(file_name[i] == '.') {\n    \
    \        dot_count++;\n            dot_index = i;\n        }\n    }\n    if(count\
    \ > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    std::string sub1\
    \ = file_name.substr(0, dot_index);\n    std::string sub2 = file_name.substr(dot_index\
    \ + 1, len - dot_index - 1);\n    if(sub1.length() == 0 || (sub1[0] < 'a' || sub1[0]\
    \ > 'z') && (sub1[0] < 'A' || sub1[0] > 'Z')) {\n        return \"No\";\n    }\n\
    \    if(sub2 != \"txt\" && sub2 != \"exe\" && sub2 != \"dll\") {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";", "    int count = 0;\n    int dot_count\
    \ = 0;\n    int dot_index = 0;\n    int dot_index_after = 0;\n    int dot_index_before\
    \ = 0;\n    int count_before = 0;\n    int count_after = 0;\n    for(int i = 0;\
    \ i < file_name.length(); i++) {\n        if(file_name[i] == '.') {\n        \
    \    dot_count++;\n            dot_index = i;\n        }\n    }\n    if(dot_count\
    \ != 1) {\n        return \"No\";\n    }\n    for(int i = 0; i < file_name.length();\
    \ i++) {\n        if(file_name[i] == '.') {\n            dot_index_after = i;\n\
    \            break;\n        }\n        count_before++;\n    }\n    for(int i\
    \ = file_name.length() - 1; i >= 0; i--) {\n        if(file_name[i] == '.') {\n\
    \            dot_index_before = i;\n            break;\n        }\n        count_after++;\n\
    \    }\n    if(count_before == 0) {\n        return \"No\";\n    }\n    if(count_after\
    \ == 0) {\n        return \"No\";\n    }\n    if(file_name[0] < 'A' || file_name[0]\
    \ > 'z') {\n        return \"No\";\n    }\n    for(int i = 0; i < file_name.length();\
    \ i++) {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n         \
    \   count++;\n        }\n    }\n    if(count > 3) {\n        return \"No\";\n\
    \    }\n    if(file_name.substr(dot_index_after + 1, count_after) != \"txt\" &&\
    \ file_name.substr(dot_index_after + 1, count_after) != \"exe\" && file_name.substr(dot_index_after\
    \ + 1, count_after) != \"dll\") {\n        return \"No\";\n    }\n    return \"\
    Yes\";", "    int count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n\
    \    int count_after_dot = 0;\n    for(int i = 0; i < file_name.length(); i++)\
    \ {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \        dot_index = i;\n        }\n    }\n    if(count > 3 || dot_count != 1)\
    \ {\n        return \"No\";\n    }\n    if(file_name[0] < 'a' || file_name[0]\
    \ > 'z') {\n        return \"No\";\n    }\n    for(int i = dot_index + 1; i <\
    \ file_name.length(); i++) {\n        count_after_dot++;\n    }\n    if(count_after_dot\
    \ != 3) {\n        return \"No\";\n    }\n    if(file_name[dot_index + 1] != 't'\
    \ || file_name[dot_index + 2] != 'x' || file_name[dot_index + 3] != 't') {\n \
    \       return \"No\";\n    }\n    return \"Yes\";", "    // your code here\n\
    \    std::regex pattern(\"^[a-zA-Z][a-zA-Z0-9]{0,3}\\\\.(txt|exe|dll)$\");\n \
    \   return std::regex_match(file_name, pattern) ? \"Yes\" : \"No\";", "    int\
    \ count = 0;\n    int dot_count = 0;\n    int dot_index = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n            dot_index = i;\n        }\n    }\n\
    \    if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    std::string\
    \ before_dot = file_name.substr(0, dot_index);\n    std::string after_dot = file_name.substr(dot_index\
    \ + 1, len - dot_index - 1);\n    if(before_dot.length() == 0 || (before_dot[0]\
    \ < 'a' || before_dot[0] > 'z') && (before_dot[0] < 'A' || before_dot[0] > 'Z'))\
    \ {\n        return \"No\";\n    }\n    if(after_dot != \"txt\" && after_dot !=\
    \ \"exe\" && after_dot != \"dll\") {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";", "    int count = 0;\n    int dot = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot++;\n        }\n    }\n    if(count > 3 || dot != 1) {\n \
    \       return \"No\";\n    }\n    std::string ext = file_name.substr(file_name.find(\"\
    .\") + 1);\n    if(ext == \"txt\" || ext == \"exe\" || ext == \"dll\") {\n   \
    \     return \"Yes\";\n    }\n    return \"No\";", "    int count = 0;\n    int\
    \ dot_count = 0;\n    int dot_index = 0;\n    int digit_count = 0;\n    int index\
    \ = 0;\n    int index_after_dot = 0;\n    int index_before_dot = 0;\n    int index_after_dot_count\
    \ = 0;\n    int index_before_dot_count = 0;\n    int index_before_dot_count_alpha\
    \ = 0;\n    int index_after_dot_count_alpha = 0;\n    int index_after_dot_count_alpha_txt\
    \ = 0;\n    int index_after_dot_count_alpha_exe = 0;\n    int index_after_dot_count_alpha_dll\
    \ = 0;\n    int index_after_dot_count_alpha_txt_count = 0;\n    int index_after_dot_count_alpha_exe_count\
    \ = 0;\n    int index_after_dot_count_alpha_dll_count = 0;\n    int index_after_dot_count_alpha_txt_count_alpha\
    \ = 0;\n    int index_after_dot_count_alpha_exe_count_alpha = 0;\n    int index_after_dot_count_alpha_dll_count_alpha\
    \ = 0;\n    int index_after_dot_count_alpha_txt_count_alpha_count = 0;\n    int\
    \ index_after_dot_count_alpha_exe_count_alpha_count = 0;\n    int index_after_dot_count_alpha_dll_count_alpha_count\
    \ = 0;\n    int index_after_dot_count_alpha_txt_count_alpha_count_alpha = 0;\n\
    \    int index_after_dot_count_alpha_exe_count_alpha_count_alpha = 0;\n    int\
    \ index_after_dot_count_alpha_dll_count_alpha_count_alpha = 0;\n    int index_after_dot_count_alpha_txt_count_alpha_count_alpha_count\
    \ = 0;\n    int index_after_dot_count_alpha_exe_count_alpha_count_alpha_count\
    \ = 0;\n    int index_after_dot_count_alpha_dll_count_alpha_count_alpha_count",
  "    int dot_count = 0;\n    int digit_count = 0;\n    int letter_count = 0;\n \
    \   int extension_count = 0;\n    int extension_length = 0;\n    for (int i =\
    \ 0; i < file_name.length(); i++) {\n        if (file_name[i] == '.') {\n    \
    \        dot_count++;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            digit_count++;\n        }\n        if ((file_name[i]\
    \ >= 'a' && file_name[i] <= 'z') || (file_name[i] >= 'A' && file_name[i] <= 'Z'))\
    \ {\n            letter_count++;\n        }\n        if (file_name[i] == '.')\
    \ {\n            extension_count++;\n        }\n        if (extension_count ==\
    \ 1) {\n            extension_length++;\n        }\n    }\n    if (dot_count ==\
    \ 1 && digit_count <= 3 && letter_count >= 1 && (extension_length == 3 || extension_length\
    \ == 4)) {\n        return \"Yes\";\n    }\n    else {\n        return \"No\"\
    ;\n    }", "    int count = 0;\n    int dot_count = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n        }\n    }\n    if(count > 3 || dot_count\
    \ != 1) {\n        return \"No\";\n    }\n    std::string sub_str = file_name.substr(0,\
    \ file_name.find('.'));\n    if(sub_str.length() == 0) {\n        return \"No\"\
    ;\n    }\n    if(!((sub_str[0] >= 'a' && sub_str[0] <= 'z') || (sub_str[0] >=\
    \ 'A' && sub_str[0] <= 'Z'))) {\n        return \"No\";\n    }\n    sub_str =\
    \ file_name.substr(file_name.find('.') + 1);\n    if(sub_str != \"txt\" && sub_str\
    \ != \"exe\" && sub_str != \"dll\") {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";", "    int count = 0;\n    int dot_count = 0;\n    int dot_index =\
    \ 0;\n    int length = file_name.length();\n    for(int i = 0; i < length; i++)\
    \ {\n        if(file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if(file_name[i] == '.') {\n            dot_count++;\n    \
    \        dot_index = i;\n        }\n    }\n    if(count > 3) {\n        return\
    \ \"No\";\n    }\n    if(dot_count != 1) {\n        return \"No\";\n    }\n  \
    \  if(dot_index == 0) {\n        return \"No\";\n    }\n    if(file_name[dot_index\
    \ + 1] == 't' && file_name[dot_index + 2] == 'x' && file_name[dot_index + 3] ==\
    \ 't') {\n        return \"Yes\";\n    }\n    if(file_name[dot_index + 1] == 'e'\
    \ && file_name[dot_index + 2] == 'x' && file_name[dot_index + 3] == 'e') {\n \
    \       return \"Yes\";\n    }\n    if(file_name[dot_index + 1] == 'd' && file_name[dot_index\
    \ + 2] == 'l' && file_name[dot_index + 3] == 'l') {\n        return \"Yes\";\n\
    \    }\n    return \"No\";", "    int count = 0;\n    int dot = 0;\n    int dot_index\
    \ = 0;\n    int count_after_dot = 0;\n    int count_before_dot = 0;\n    int count_after_dot_txt\
    \ = 0;\n    int count_after_dot_exe = 0;\n    int count_after_dot_dll = 0;\n \
    \   int count_before_dot_letter = 0;\n    int count_before_dot_number = 0;\n \
    \   int count_before_dot_letter_lower = 0;\n    int count_before_dot_letter_upper\
    \ = 0;\n    int count_before_dot_letter_lower_first = 0;\n    int count_before_dot_letter_upper_first\
    \ = 0;\n    int count_before_dot_letter_lower_first_index = 0;\n    int count_before_dot_letter_upper_first_index\
    \ = 0;\n    int count_before_dot_letter_lower_first_index_after_dot = 0;\n   \
    \ int count_before_dot_letter_upper_first_index_after_dot = 0;\n    int count_before_dot_letter_lower_first_index_after_dot_txt\
    \ = 0;\n    int count_before_dot_letter_upper_first_index_after_dot_txt = 0;\n\
    \    int count_before_dot_letter_lower_first_index_after_dot_exe = 0;\n    int\
    \ count_before_dot_letter_upper_first_index_after_dot_exe = 0;\n    int count_before_dot_letter_lower_first_index_after_dot_dll\
    \ = 0;\n    int count_before_dot_letter_upper_first_index_after_dot_dll = 0;\n\
    \    int count_before_dot_letter_lower_first_index_after_dot_txt_exe_dll = 0;\n\
    \    int count_before_dot_letter_upper_first_index_after_dot_txt_exe_dll = 0;\n\
    \    int count_before_dot_letter_lower_first_index_after_dot_txt_exe_dll_all =\
    \ 0;\n    int count_before_dot_letter_upper_first_", "    int count = 0;\n   \
    \ int dot_count = 0;\n    int dot_index = 0;\n    int len = file_name.length();\n\
    \    for(int i = 0; i < len; i++) {\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if(file_name[i] == '.')\
    \ {\n            dot_count++;\n            dot_index = i;\n        }\n    }\n\
    \    if(count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    std::string\
    \ sub1 = file_name.substr(0, dot_index);\n    std::string sub2 = file_name.substr(dot_index\
    \ + 1, len - dot_index - 1);\n    if(sub1.length() == 0 || (sub1[0] < 'a' || sub1[0]\
    \ > 'z') && (sub1[0] < 'A' || sub1[0] > 'Z')) {\n        return \"No\";\n    }\n\
    \    if(sub2 != \"txt\" && sub2 != \"exe\" && sub2 != \"dll\") {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";"]
stop_tokens:
- "\n}"

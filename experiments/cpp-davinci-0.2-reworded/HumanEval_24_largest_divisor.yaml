name: HumanEval_24_largest_divisor
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n, find\
  \ the largest number that divides n evenly, smaller than n\n// >>> largest_divisor((15))\n\
  // (5)\nlong largest_divisor(long n) {\n"
tests: "}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
  \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
  \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
completions: ["    long largest_divisor = 1;\n    for (long i = 2; i < n; i++) {\n\
    \        if (n % i == 0) {\n            largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;", "    int i;\n    for(i=n-1;i>0;i--)\n    {\n  \
    \      if(n%i==0)\n        {\n            return i;\n        }\n    }\n    return\
    \ 0;", "    assert(n >= 1);\n    for (long i = n - 1; i >= 1; i--) {\n       \
    \ if (n % i == 0) {\n            return i;\n        }\n    }\n    return 1;",
  "    assert(n >= 1);\n    long d = n - 1;\n    while (n % d != 0) {\n        d -=\
    \ 1;\n    }\n    return d;", "    long largest = 0;\n    for (long i = 1; i <\
    \ n; i++) {\n        if (n % i == 0) {\n            largest = i;\n        }\n\
    \    }\n    return largest;", "    // >>> largest_divisor((15))\n    // (5)\n\
    \    // >>> largest_divisor((80))\n    // (40)\n    // >>> largest_divisor((13))\n\
    \    // (1)\n    // >>> largest_divisor((1))\n    // (1)\n    // >>> largest_divisor((1000))\n\
    \    // (500)\n    // >>> largest_divisor((1001))\n    // (1)\n    // >>> largest_divisor((100))\n\
    \    // (50)\n    // >>> largest_divisor((7))\n    // (1)\n    // >>> largest_divisor((70))\n\
    \    // (35)\n    // >>> largest_divisor((1234567890))\n    // (61828394)\n  \
    \  // >>> largest_divisor((12345678901234567890))\n    // (6172839450617283945)\n\
    \    // >>> largest_divisor((9876543210))\n    // (4938271605)\n    // >>> largest_divisor((98765432109876543210))\n\
    \    // (4938271604938271604)\n    // >>> largest_divisor((987654321098765432109876543210))\n\
    \    // (4938271604938271604938271605)\n    // >>> largest_divisor((9876543210987654321098765432109876543210))\n\
    \    // (4938271604938271604938271604938271605)\n    // >>> largest_divisor((98765432109876543210987654321098765432109876543210))\n\
    \    // (4938271604938271604938271604938271604938271605)\n    // >>> largest_divisor((987654321098765432109876543210987654321098765432109876543210))\n\
    \    // (4938271604938271604938271604938271604938271604938271605)\n    // >>>\
    \ largest_divisor((98765432109876543210987654321098765", "    assert(n>0);\n \
    \   long i;\n    for(i=n-1;i>=1;i--)\n    {\n        if(n%i==0)\n        {\n \
    \           return i;\n        }\n    }", "    assert(n > 0);\n    long largest\
    \ = 0;\n    for (long i = 1; i < n; i++) {\n        if (n % i == 0) {\n      \
    \      largest = i;\n        }\n    }\n    return largest;", "    for (long i\
    \ = n - 1; i > 0; i--) {\n        if (n % i == 0) {\n            return i;\n \
    \       }\n    }\n    return 0;", "    assert(n >= 0);\n    long i = n - 1;\n\
    \    while (i > 0) {\n        if (n % i == 0) {\n            return i;\n     \
    \   }\n        i--;\n    }\n    return i;", "    long i;\n    for (i = n - 1;\
    \ i > 0; i--) {\n        if (n % i == 0) {\n            return i;\n        }\n\
    \    }\n    return i;", "    long largest = 0;\n    for (long i = 1; i < n; i++)\
    \ {\n        if (n % i == 0) {\n            largest = i;\n        }\n    }\n \
    \   return largest;", "    // your code here\n    long i;\n    for(i=n-1;i>0;i--)\n\
    \    {\n        if(n%i==0)\n        {\n            return i;\n        }\n    }\n\
    \    return 0;", "    // YOUR CODE HERE\n    long i = n-1;\n    while(i>0){\n\
    \        if(n%i==0){\n            return i;\n        }\n        i--;\n    }\n\
    \    return 0;", "    long i = n - 1;\n    while (i > 0) {\n        if (n % i\
    \ == 0) {\n            return i;\n        }\n        i--;\n    }\n    return i;",
  "    long largest = 1;\n    for (long i = 2; i < n; i++) {\n        if (n % i ==\
    \ 0) {\n            largest = i;\n        }\n    }\n    return largest;", "  \
    \  long i;\n    for (i = n - 1; i > 0; i--) {\n        if (n % i == 0) {\n   \
    \         return i;\n        }\n    }\n    return i;", "    long i;\n    for (i\
    \ = n - 1; i > 0; i--) {\n        if (n % i == 0) {\n            return i;\n \
    \       }\n    }\n    return 0;", "    // your code here\n    int i;\n    for(i=n-1;i>0;i--)\n\
    \    {\n        if(n%i==0)\n        {\n            break;\n        }\n    }\n\
    \    return i;", "    long largest = 0;\n    for (long i = 1; i < n; i++) {\n\
    \        if (n % i == 0) {\n            largest = i;\n        }\n    }\n    return\
    \ largest;"]
stop_tokens:
- "\n}"

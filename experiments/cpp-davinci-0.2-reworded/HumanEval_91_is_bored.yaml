name: HumanEval_91_is_bored
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
  \ of words, and your task is to count the number\n// of boredoms. A boredom is a\
  \ sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
  \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n// >>>\
  \ is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n// (1)\n\
  long is_bored(std::string S) {\n"
tests: "}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
  Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
  \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
  )) == (0));\n    assert(candidate((\"I feel good today. I will be productive. will\
  \ kill It\")) == (2));\n    assert(candidate((\"You and I are going for a walk\"\
  )) == (0));\n}\n"
completions: ["  // your code here\n  long count = 0;\n  std::stringstream ss(S);\n\
    \  std::string word;\n  while(ss >> word){\n    if(word == \"I\"){\n      count++;\n\
    \    }\n  }\n  return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long boredoms\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "  std::stringstream ss(S);\n  std::string word;\n\
    \  long count = 0;\n  while (ss >> word) {\n    if (word == \"I\") {\n      count++;\n\
    \    }\n  }\n  return count;", "  long count = 0;\n  std::stringstream ss(S);\n\
    \  std::string word;\n  while (ss >> word) {\n    if (word == \"I\") {\n     \
    \ count++;\n    }\n  }\n  return count;", "  std::stringstream ss(S);\n  std::string\
    \ word;\n  long boredoms = 0;\n  while (ss >> word) {\n    if (word == \"I\")\
    \ {\n      boredoms++;\n    }\n  }\n  return boredoms;", "    long count = 0;\n\
    \    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long boredoms = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    for(int i = 0; i < S.length();\
    \ i++) {\n        if(S[i] == 'I') {\n            count++;\n        }\n    }\n\
    \    return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "  long count = 0;\n  std::stringstream ss(S);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"I\") {\n      count++;\n  \
    \  }\n  }\n  return count;", "    std::stringstream ss(S);\n    std::string word;\n\
    \    long count = 0;\n    while(ss >> word) {\n        if(word == \"I\") {\n \
    \           count++;\n        }\n    }\n    return count;", "  std::stringstream\
    \ ss(S);\n  std::string word;\n  long count = 0;\n  while (ss >> word) {\n   \
    \ if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;", "  long\
    \ count = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss >>\
    \ word) {\n    if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;",
  "    std::stringstream ss(S);\n    std::string word;\n    long count = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    std::stringstream ss(S);\n    std::string word;\n\
    \    long count = 0;\n    while(ss >> word) {\n        if(word == \"I\") {\n \
    \           count++;\n        }\n    }\n    return count;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_9_rolling_max
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (long i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2nxyqlhv.cpp: In function 'int main()':\n/tmp/tmp2nxyqlhv.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2nxyqlhv.cpp:2:\n/tmp/tmp2nxyqlhv.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp2nxyqlhv.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp2nxyqlhv.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp2nxyqlhv.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2nxyqlhv.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp2nxyqlhv.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp2nxyqlhv.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzxg_0az4.cpp: In function 'int main()':\n/tmp/tmpzxg_0az4.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/tmp/tmpzxg_0az4.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpzxg_0az4.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpzxg_0az4.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpzxg_0az4.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n  \
    \          max = numbers[i];\n        }\n        result.push_back(max);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8nuz55dz.cpp: In function 'int main()':\n/tmp/tmp8nuz55dz.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8nuz55dz.cpp:2:\n/tmp/tmp8nuz55dz.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp8nuz55dz.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp8nuz55dz.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp8nuz55dz.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8nuz55dz.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp8nuz55dz.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp8nuz55dz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (long i = 0; i < numbers.size(); i++) {\n        max_so_far = std::max(max_so_far,\
    \ numbers[i]);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpavl2stql.cpp: In function 'int main()':\n/tmp/tmpavl2stql.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpavl2stql.cpp:2:\n/tmp/tmpavl2stql.cpp:18:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpavl2stql.cpp:19:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpavl2stql.cpp:19:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpavl2stql.cpp:19:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpavl2stql.cpp:19:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpavl2stql.cpp:19:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpavl2stql.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> max_numbers;\n    long max_number = numbers[0];\n\
    \    max_numbers.push_back(max_number);\n    for (int i = 1; i < numbers.size();\
    \ i++) {\n        if (numbers[i] > max_number) {\n            max_number = numbers[i];\n\
    \        }\n        max_numbers.push_back(max_number);\n    }\n    return max_numbers;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmppo96stob.cpp: In function 'int main()':\n/tmp/tmppo96stob.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppo96stob.cpp:2:\n/tmp/tmppo96stob.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmppo96stob.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmppo96stob.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmppo96stob.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmppo96stob.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmppo96stob.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmppo96stob.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_number = numbers[0];\n\
    \    result.push_back(max_number);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_number) {\n            max_number = numbers[i];\n\
    \        }\n        result.push_back(max_number);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpd9liwftd.cpp: In function 'int main()':\n/tmp/tmpd9liwftd.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd9liwftd.cpp:2:\n/tmp/tmpd9liwftd.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpd9liwftd.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpd9liwftd.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpd9liwftd.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpd9liwftd.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpd9liwftd.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpd9liwftd.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (auto number : numbers) {\n        if (number > max) {\n            max = number;\n\
    \        }\n        result.push_back(max);\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk9vxu82r.cpp: In function 'std::vector<long int> rolling_max(std::vector<long\
    \ int>)':\n/tmp/tmpk9vxu82r.cpp:10:15: error: 'number' does not name a type\n\
    \     for (auto number : numbers) {\n               ^\n/tmp/tmpk9vxu82r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpk9vxu82r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpk9vxu82r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpk9vxu82r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpk9vxu82r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpk9vxu82r.cpp: In function 'int main()':\n/tmp/tmpk9vxu82r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpk9vxu82r.cpp:2:\n/tmp/tmpk9vxu82r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpk9vxu82r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpk9vxu82r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpk9vxu82r.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpk9vxu82r.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbal5nr6d.cpp: In function 'int main()':\n/tmp/tmpbal5nr6d.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/tmp/tmpbal5nr6d.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbal5nr6d.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbal5nr6d.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbal5nr6d.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> max_queue;\n\
    \    for (long i = 0; i < numbers.size(); i++) {\n        while (max_queue.size()\
    \ > 0 && numbers[i] >= numbers[max_queue.back()]) {\n            max_queue.pop_back();\n\
    \        }\n        max_queue.push_back(i);\n        if (max_queue.front() <=\
    \ i - numbers.size()) {\n            max_queue.pop_front();\n        }\n     \
    \   result.push_back(numbers[max_queue.front()]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpguasx2uh.cpp: In function 'int main()':\n/tmp/tmpguasx2uh.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpguasx2uh.cpp:2:\n/tmp/tmpguasx2uh.cpp:24:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpguasx2uh.cpp:25:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpguasx2uh.cpp:25:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpguasx2uh.cpp:25:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpguasx2uh.cpp:25:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpguasx2uh.cpp:25:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpguasx2uh.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (long i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxhzamirv.cpp: In function 'int main()':\n/tmp/tmpxhzamirv.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxhzamirv.cpp:2:\n/tmp/tmpxhzamirv.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpxhzamirv.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpxhzamirv.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpxhzamirv.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpxhzamirv.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpxhzamirv.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpxhzamirv.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzxg_0az4.cpp: In function 'int main()':\n/tmp/tmpzxg_0az4.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/tmp/tmpzxg_0az4.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpzxg_0az4.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpzxg_0az4.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpzxg_0az4.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n  \
    \          max = numbers[i];\n        }\n        result.push_back(max);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8nuz55dz.cpp: In function 'int main()':\n/tmp/tmp8nuz55dz.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8nuz55dz.cpp:2:\n/tmp/tmp8nuz55dz.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp8nuz55dz.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp8nuz55dz.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp8nuz55dz.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8nuz55dz.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp8nuz55dz.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp8nuz55dz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzxg_0az4.cpp: In function 'int main()':\n/tmp/tmpzxg_0az4.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/tmp/tmpzxg_0az4.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpzxg_0az4.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpzxg_0az4.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpzxg_0az4.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_val = numbers[0];\n\
    \    result.push_back(max_val);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_val) {\n            max_val = numbers[i];\n\
    \        }\n        result.push_back(max_val);\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0m9c7_3c.cpp: In function 'int main()':\n/tmp/tmp0m9c7_3c.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0m9c7_3c.cpp:2:\n/tmp/tmp0m9c7_3c.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp0m9c7_3c.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp0m9c7_3c.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp0m9c7_3c.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp0m9c7_3c.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp0m9c7_3c.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp0m9c7_3c.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_number = numbers[0];\n\
    \    result.push_back(max_number);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_number) {\n            max_number = numbers[i];\n\
    \        }\n        result.push_back(max_number);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpd9liwftd.cpp: In function 'int main()':\n/tmp/tmpd9liwftd.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd9liwftd.cpp:2:\n/tmp/tmpd9liwftd.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpd9liwftd.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpd9liwftd.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpd9liwftd.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpd9liwftd.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpd9liwftd.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpd9liwftd.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long current_max = numbers[0];\n\
    \    result.push_back(current_max);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > current_max) {\n            current_max = numbers[i];\n\
    \        }\n        result.push_back(current_max);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdi2jymrc.cpp: In function 'int main()':\n/tmp/tmpdi2jymrc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdi2jymrc.cpp:2:\n/tmp/tmpdi2jymrc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpdi2jymrc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpdi2jymrc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpdi2jymrc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpdi2jymrc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpdi2jymrc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpdi2jymrc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> dq;\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        while (!dq.empty() && numbers[i]\
    \ >= numbers[dq.back()]) {\n            dq.pop_back();\n        }\n        dq.push_back(i);\n\
    \        if (i >= 2) {\n            result.push_back(numbers[dq.front()]);\n \
    \           if (dq.front() == i - 2) {\n                dq.pop_front();\n    \
    \        }\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = rolling_max;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3,\
    \ (long)100, (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100,\
    \ (long)100})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg31f2vzv.cpp: In function 'int main()':\n/tmp/tmpg31f2vzv.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg31f2vzv.cpp:2:\n/tmp/tmpg31f2vzv.cpp:26:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpg31f2vzv.cpp:27:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpg31f2vzv.cpp:27:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpg31f2vzv.cpp:27:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpg31f2vzv.cpp:27:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpg31f2vzv.cpp:27:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpg31f2vzv.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = 0;\n    for (long\
    \ number : numbers) {\n        if (number > max) {\n            max = number;\n\
    \        }\n        result.push_back(max);\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwxspxnx_.cpp: In function 'std::vector<long int> rolling_max(std::vector<long\
    \ int>)':\n/tmp/tmpwxspxnx_.cpp:10:24: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long number : numbers) {\n                \
    \        ^\n/tmp/tmpwxspxnx_.cpp: In function 'int main()':\n/tmp/tmpwxspxnx_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwxspxnx_.cpp:2:\n/tmp/tmpwxspxnx_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpwxspxnx_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpwxspxnx_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpwxspxnx_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpwxspxnx_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpwxspxnx_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpwxspxnx_.cpp:2:\n/usr/include/c++/4.8.2/bit"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long current_max = numbers[0];\n\
    \    result.push_back(current_max);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > current_max) {\n            current_max = numbers[i];\n\
    \        }\n        result.push_back(current_max);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdi2jymrc.cpp: In function 'int main()':\n/tmp/tmpdi2jymrc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdi2jymrc.cpp:2:\n/tmp/tmpdi2jymrc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpdi2jymrc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpdi2jymrc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpdi2jymrc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpdi2jymrc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpdi2jymrc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpdi2jymrc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpvub5pg3_.cpp: In function 'int main()':\n/tmp/tmpvub5pg3_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvub5pg3_.cpp:2:\n/tmp/tmpvub5pg3_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpvub5pg3_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpvub5pg3_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpvub5pg3_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpvub5pg3_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpvub5pg3_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpvub5pg3_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzxg_0az4.cpp: In function 'int main()':\n/tmp/tmpzxg_0az4.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/tmp/tmpzxg_0az4.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpzxg_0az4.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpzxg_0az4.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpzxg_0az4.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (int i = 0; i < numbers.size(); i++) {\n        max_so_far = std::max(max_so_far,\
    \ numbers[i]);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0w7o8tv3.cpp: In function 'int main()':\n/tmp/tmp0w7o8tv3.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0w7o8tv3.cpp:2:\n/tmp/tmp0w7o8tv3.cpp:18:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp0w7o8tv3.cpp:19:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp0w7o8tv3.cpp:19:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp0w7o8tv3.cpp:19:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp0w7o8tv3.cpp:19:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp0w7o8tv3.cpp:19:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp0w7o8tv3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzxg_0az4.cpp: In function 'int main()':\n/tmp/tmpzxg_0az4.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/tmp/tmpzxg_0az4.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpzxg_0az4.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpzxg_0az4.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpzxg_0az4.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n  \
    \          max = numbers[i];\n        }\n        result.push_back(max);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8nuz55dz.cpp: In function 'int main()':\n/tmp/tmp8nuz55dz.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8nuz55dz.cpp:2:\n/tmp/tmp8nuz55dz.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp8nuz55dz.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp8nuz55dz.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp8nuz55dz.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8nuz55dz.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp8nuz55dz.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp8nuz55dz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (auto number : numbers) {\n        max_so_far = std::max(max_so_far,\
    \ number);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2i4q8s9x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long current_max = numbers[0];\n\
    \    result.push_back(current_max);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > current_max) {\n            current_max = numbers[i];\n\
    \        }\n        result.push_back(current_max);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdi2jymrc.cpp: In function 'int main()':\n/tmp/tmpdi2jymrc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdi2jymrc.cpp:2:\n/tmp/tmpdi2jymrc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpdi2jymrc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpdi2jymrc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpdi2jymrc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpdi2jymrc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpdi2jymrc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpdi2jymrc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n  \
    \          max = numbers[i];\n        }\n        result.push_back(max);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8nuz55dz.cpp: In function 'int main()':\n/tmp/tmp8nuz55dz.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8nuz55dz.cpp:2:\n/tmp/tmp8nuz55dz.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp8nuz55dz.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp8nuz55dz.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp8nuz55dz.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8nuz55dz.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp8nuz55dz.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp8nuz55dz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n        }\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8w002p5y.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (auto number : numbers) {\n        max_so_far = std::max(max_so_far,\
    \ number);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2i4q8s9x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbal5nr6d.cpp: In function 'int main()':\n/tmp/tmpbal5nr6d.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/tmp/tmpbal5nr6d.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbal5nr6d.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbal5nr6d.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbal5nr6d.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long current_max = numbers[0];\n\
    \    result.push_back(current_max);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > current_max) {\n            current_max = numbers[i];\n\
    \        }\n        result.push_back(current_max);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdi2jymrc.cpp: In function 'int main()':\n/tmp/tmpdi2jymrc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdi2jymrc.cpp:2:\n/tmp/tmpdi2jymrc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpdi2jymrc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpdi2jymrc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpdi2jymrc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpdi2jymrc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpdi2jymrc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpdi2jymrc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (auto i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprtve7dl6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbal5nr6d.cpp: In function 'int main()':\n/tmp/tmpbal5nr6d.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/tmp/tmpbal5nr6d.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbal5nr6d.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbal5nr6d.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbal5nr6d.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_element = numbers[0];\n\
    \    result.push_back(max_element);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_element) {\n            max_element = numbers[i];\n\
    \        }\n        result.push_back(max_element);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7jqzq56o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    if (numbers.size() == 0) {\n\
    \        return result;\n    }\n    result.push_back(numbers[0]);\n    for (int\
    \ i = 1; i < numbers.size(); i++) {\n        result.push_back(std::max(result[i\
    \ - 1], numbers[i]));\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = rolling_max;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3,\
    \ (long)100, (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100,\
    \ (long)100})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkmtuuvmf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::stack<long> stack;\n   \
    \ for (auto i = 0; i < numbers.size(); i++) {\n        while (!stack.empty() &&\
    \ numbers[stack.top()] <= numbers[i]) {\n            stack.pop();\n        }\n\
    \        if (stack.empty()) {\n            result.push_back(numbers[i]);\n   \
    \     } else {\n            result.push_back(numbers[stack.top()]);\n        }\n\
    \        stack.push(i);\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = rolling_max;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3,\
    \ (long)100, (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100,\
    \ (long)100})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2qyphnt5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbal5nr6d.cpp: In function 'int main()':\n/tmp/tmpbal5nr6d.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/tmp/tmpbal5nr6d.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbal5nr6d.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbal5nr6d.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbal5nr6d.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (auto i = 0; i < numbers.size(); i++) {\n        max_so_far = std::max(max_so_far,\
    \ numbers[i]);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7dac8i3l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n        }\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8w002p5y.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (long number : numbers) {\n        max_so_far = std::max(max_so_far,\
    \ number);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpnmuo9bsz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzxg_0az4.cpp: In function 'int main()':\n/tmp/tmpzxg_0az4.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/tmp/tmpzxg_0az4.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpzxg_0az4.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpzxg_0az4.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpzxg_0az4.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbal5nr6d.cpp: In function 'int main()':\n/tmp/tmpbal5nr6d.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/tmp/tmpbal5nr6d.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbal5nr6d.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbal5nr6d.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbal5nr6d.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long number : numbers) {\n        if (number > max) {\n            max = number;\n\
    \        }\n        result.push_back(max);\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphppqldxw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzxg_0az4.cpp: In function 'int main()':\n/tmp/tmpzxg_0az4.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/tmp/tmpzxg_0az4.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpzxg_0az4.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpzxg_0az4.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpzxg_0az4.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzxg_0az4.cpp: In function 'int main()':\n/tmp/tmpzxg_0az4.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/tmp/tmpzxg_0az4.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpzxg_0az4.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpzxg_0az4.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpzxg_0az4.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpzxg_0az4.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpzxg_0az4.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n  \
    \          max = numbers[i];\n        }\n        result.push_back(max);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8nuz55dz.cpp: In function 'int main()':\n/tmp/tmp8nuz55dz.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8nuz55dz.cpp:2:\n/tmp/tmp8nuz55dz.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp8nuz55dz.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp8nuz55dz.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp8nuz55dz.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8nuz55dz.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp8nuz55dz.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp8nuz55dz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long maximum = numbers[0];\n\
    \    result.push_back(maximum);\n    for (long i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > maximum) {\n            maximum = numbers[i];\n\
    \        }\n        result.push_back(maximum);\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3pmrwq2s.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long current_max = numbers[0];\n\
    \    result.push_back(current_max);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > current_max) {\n            current_max = numbers[i];\n\
    \        }\n        result.push_back(current_max);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdi2jymrc.cpp: In function 'int main()':\n/tmp/tmpdi2jymrc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdi2jymrc.cpp:2:\n/tmp/tmpdi2jymrc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpdi2jymrc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpdi2jymrc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpdi2jymrc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpdi2jymrc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpdi2jymrc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpdi2jymrc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahbl0_oy.cpp: In function 'int main()':\n/tmp/tmpahbl0_oy.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/tmp/tmpahbl0_oy.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpahbl0_oy.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpahbl0_oy.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpahbl0_oy.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpahbl0_oy.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpahbl0_oy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        result.push_back(std::max(result[i\
    \ - 1], numbers[i]));\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = rolling_max;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3,\
    \ (long)100, (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100,\
    \ (long)100})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpmljp32nh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbal5nr6d.cpp: In function 'int main()':\n/tmp/tmpbal5nr6d.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/tmp/tmpbal5nr6d.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbal5nr6d.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbal5nr6d.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbal5nr6d.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (size_t i = 1; i < numbers.size();\
    \ i++) {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprd9p50_h.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbal5nr6d.cpp: In function 'int main()':\n/tmp/tmpbal5nr6d.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/tmp/tmpbal5nr6d.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbal5nr6d.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbal5nr6d.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbal5nr6d.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbal5nr6d.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbal5nr6d.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpej3kt9f9.cpp: In function 'int main()':\n/tmp/tmpej3kt9f9.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/tmp/tmpej3kt9f9.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpej3kt9f9.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpej3kt9f9.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpej3kt9f9.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpej3kt9f9.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpej3kt9f9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpvub5pg3_.cpp: In function 'int main()':\n/tmp/tmpvub5pg3_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvub5pg3_.cpp:2:\n/tmp/tmpvub5pg3_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpvub5pg3_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpvub5pg3_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpvub5pg3_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpvub5pg3_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpvub5pg3_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpvub5pg3_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_number = numbers[0];\n\
    \    result.push_back(max_number);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_number) {\n            max_number = numbers[i];\n\
    \        }\n        result.push_back(max_number);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpd9liwftd.cpp: In function 'int main()':\n/tmp/tmpd9liwftd.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd9liwftd.cpp:2:\n/tmp/tmpd9liwftd.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpd9liwftd.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpd9liwftd.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpd9liwftd.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpd9liwftd.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpd9liwftd.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpd9liwftd.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n  \
    \          max = numbers[i];\n        }\n        result.push_back(max);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8nuz55dz.cpp: In function 'int main()':\n/tmp/tmp8nuz55dz.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8nuz55dz.cpp:2:\n/tmp/tmp8nuz55dz.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp8nuz55dz.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp8nuz55dz.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp8nuz55dz.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8nuz55dz.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp8nuz55dz.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp8nuz55dz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (int i = 0; i < numbers.size(); i++) {\n        max_so_far = std::max(max_so_far,\
    \ numbers[i]);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0w7o8tv3.cpp: In function 'int main()':\n/tmp/tmp0w7o8tv3.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0w7o8tv3.cpp:2:\n/tmp/tmp0w7o8tv3.cpp:18:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp0w7o8tv3.cpp:19:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp0w7o8tv3.cpp:19:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp0w7o8tv3.cpp:19:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp0w7o8tv3.cpp:19:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp0w7o8tv3.cpp:19:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp0w7o8tv3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdtmpgx_.cpp: In function 'int main()':\n/tmp/tmpgdtmpgx_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/tmp/tmpgdtmpgx_.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpgdtmpgx_.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpgdtmpgx_.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpgdtmpgx_.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpgdtmpgx_.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpgdtmpgx_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given vector of\
    \ integers, generate a vector of rolling maximum element found until given moment\n\
    // in the sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_number = numbers[0];\n\
    \    result.push_back(max_number);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_number) {\n            max_number = numbers[i];\n\
    \        }\n        result.push_back(max_number);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpd9liwftd.cpp: In function 'int main()':\n/tmp/tmpd9liwftd.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd9liwftd.cpp:2:\n/tmp/tmpd9liwftd.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpd9liwftd.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpd9liwftd.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpd9liwftd.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpd9liwftd.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpd9liwftd.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpd9liwftd.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''

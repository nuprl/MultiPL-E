name: HumanEval_145_order_by_points
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function which sorts\
  \ the given vector of integers\n// in ascending order according to the sum of their\
  \ digits.\n// Note: if there are several items with similar sum of their digits,\n\
  // order them based on their index in original vector.\n// For example:\n// >>>\
  \ order_by_points((std::vector<long>({(long)1, (long)11, (long)-1, (long)-11, (long)-12})))\n\
  // (std::vector<long>({(long)-1, (long)-11, (long)1, (long)-12, (long)11}))\n//\
  \ >>> order_by_points((std::vector<long>()))\n// (std::vector<long>())\nstd::vector<long>\
  \ order_by_points(std::vector<long> nums) {\n"
tests: "}\nint main() {\n    auto candidate = order_by_points;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)11, (long)-1, (long)-11, (long)-12}))) == (std::vector<long>({(long)-1,\
  \ (long)-11, (long)1, (long)-12, (long)11})));\n    assert(candidate((std::vector<long>({(long)1234,\
  \ (long)423, (long)463, (long)145, (long)2, (long)423, (long)423, (long)53, (long)6,\
  \ (long)37, (long)3457, (long)3, (long)56, (long)0, (long)46}))) == (std::vector<long>({(long)0,\
  \ (long)2, (long)3, (long)6, (long)53, (long)423, (long)423, (long)423, (long)1234,\
  \ (long)145, (long)37, (long)46, (long)56, (long)463, (long)3457})));\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)-11, (long)-32, (long)43, (long)54, (long)-98, (long)2, (long)-3}))) ==\
  \ (std::vector<long>({(long)-3, (long)-32, (long)-98, (long)-11, (long)1, (long)2,\
  \ (long)43, (long)54})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)4, (long)5, (long)6, (long)7, (long)8, (long)9, (long)10, (long)11})))\
  \ == (std::vector<long>({(long)1, (long)10, (long)2, (long)11, (long)3, (long)4,\
  \ (long)5, (long)6, (long)7, (long)8, (long)9})));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)6, (long)6, (long)-76, (long)-21, (long)23, (long)4}))) == (std::vector<long>({(long)-76,\
  \ (long)-21, (long)0, (long)4, (long)23, (long)6, (long)6})));\n}\n"
completions: ["    std::vector<long> res;\n    std::map<int, std::vector<long>> mp;\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int\
    \ temp = nums[i];\n        while (temp) {\n            sum += temp % 10;\n   \
    \         temp /= 10;\n        }\n        mp[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = mp.begin(); it != mp.end(); it++) {\n        for (int i =\
    \ 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n     \
    \       num = -num;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n     \
    \       sum += num % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n      \
    \      num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ long> map;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum =\
    \ 0;\n        long num = nums[i];\n        while (num != 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        map[sum] = nums[i];\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        result.push_back(it->second);\n\
    \    }\n    return result;", "  std::vector<long> result;\n  std::map<int, std::vector<long>>\
    \ map;\n  for (int i = 0; i < nums.size(); i++) {\n    int sum = 0;\n    long\
    \ num = nums[i];\n    if (num < 0) {\n      num = num * -1;\n    }\n    while\
    \ (num > 0) {\n      sum += num % 10;\n      num = num / 10;\n    }\n    map[sum].push_back(nums[i]);\n\
    \  }\n  for (auto it = map.begin(); it != map.end(); it++) {\n    std::vector<long>\
    \ temp = it->second;\n    for (int i = 0; i < temp.size(); i++) {\n      result.push_back(temp[i]);\n\
    \    }\n  }\n  return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ temp;\n    std::vector<long> temp2;\n    std::vector<long> temp3;\n    std::vector<long>\
    \ temp4;\n    std::vector<long> temp5;\n    std::vector<long> temp6;\n    std::vector<long>\
    \ temp7;\n    std::vector<long> temp8;\n    std::vector<long> temp9;\n    std::vector<long>\
    \ temp10;\n    std::vector<long> temp11;\n    std::vector<long> temp12;\n    std::vector<long>\
    \ temp13;\n    std::vector<long> temp14;\n    std::vector<long> temp15;\n    std::vector<long>\
    \ temp16;\n    std::vector<long> temp17;\n    std::vector<long> temp18;\n    std::vector<long>\
    \ temp19;\n    std::vector<long> temp20;\n    std::vector<long> temp21;\n    std::vector<long>\
    \ temp22;\n    std::vector<long> temp23;\n    std::vector<long> temp24;\n    std::vector<long>\
    \ temp25;\n    std::vector<long> temp26;\n    std::vector<long> temp27;\n    std::vector<long>\
    \ temp28;\n    std::vector<long> temp29;\n    std::vector<long> temp30;\n    std::vector<long>\
    \ temp31;\n    std::vector<long> temp32;\n    std::vector<long> temp33;\n    std::vector<long>\
    \ temp34;\n    std::vector<long> temp35;\n    std::vector<long> temp36;\n    std::vector<long>\
    \ temp37;\n    std::vector<long> temp38;\n    std::vector<long> temp39;\n    std::vector<long>\
    \ temp40;\n    std::vector<long> temp41;\n    std::vector<long> temp42;\n    std::vector<long>\
    \ temp43;\n    std::vector<long> temp44;\n    std::vector<long> temp45;\n    std::vector<long>",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    for(int i=0;i<nums.size();i++){\n\
    \        long temp=nums[i];\n        long sum_temp=0;\n        while(temp!=0){\n\
    \            sum_temp+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_temp);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        int min=i;\n        for(int\
    \ j=i+1;j<nums.size();j++){\n            if(sum[j]<sum[min]){\n              \
    \  min=j;\n            }\n        }\n        long temp=sum[i];\n        sum[i]=sum[min];\n\
    \        sum[min]=temp;\n        temp=nums[i];\n        nums[i]=nums[min];\n \
    \       nums[min]=temp;\n    }\n    return nums;", "    std::vector<long> result;\n\
    \    std::map<int, std::vector<long>> map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        long num = nums[i];\n        while (num\
    \ != 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n \
    \       map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin(); it\
    \ != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<int> sum;\n    std::vector<int>\
    \ index;\n    int temp;\n    int temp_index;\n    int temp_sum;\n    for(int i=0;i<nums.size();i++){\n\
    \        temp=nums[i];\n        temp_index=i;\n        temp_sum=0;\n        while(temp!=0){\n\
    \            temp_sum+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(temp_sum);\n\
    \        index.push_back(temp_index);\n    }\n    for(int i=0;i<nums.size();i++){\n\
    \        for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n \
    \               temp=sum[i];\n                sum[i]=sum[j];\n               \
    \ sum[j]=temp;\n                temp=index[i];\n                index[i]=index[j];\n\
    \                index[j]=temp;\n            }\n        }\n    }\n    for(int\
    \ i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        if (num < 0) {\n            num = -num;\n \
    \       }\n        while (num > 0) {\n            sum += num % 10;\n         \
    \   num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0; i\
    \ < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = num * -1;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (auto num : nums) {\n        int sum = 0;\n\
    \        int n = num;\n        if (num < 0) {\n            n = -num;\n       \
    \ }\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n\
    \        }\n        map[sum].push_back(num);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        std::sort(it->second.begin(), it->second.end());\n\
    \        for (auto num : it->second) {\n            result.push_back(num);\n \
    \       }\n    }\n    return result;", "    std::vector<long> result;\n    if\
    \ (nums.size() == 0) {\n        return result;\n    }\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        if (num < 0) {\n            num = -num;\n \
    \       }\n        while (num > 0) {\n            sum += num % 10;\n         \
    \   num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0; i\
    \ < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    int temp = 0;\n    for(int i = 0; i < nums.size(); i++){\n       \
    \ temp = 0;\n        while(nums[i] != 0){\n            temp += nums[i] % 10;\n\
    \            nums[i] /= 10;\n        }\n        sum.push_back(temp);\n    }\n\
    \    for(int i = 0; i < nums.size(); i++){\n        int min = sum[i];\n      \
    \  int index = i;\n        for(int j = i; j < nums.size(); j++){\n           \
    \ if(sum[j] < min){\n                min = sum[j];\n                index = j;\n\
    \            }\n        }\n        std::swap(sum[i], sum[index]);\n        std::swap(nums[i],\
    \ nums[index]);\n    }\n    return nums;", "    std::vector<long> result;\n  \
    \  std::map<int, std::vector<long>> map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int num = nums[i];\n        if (num <\
    \ 0) {\n            num = -num;\n        }\n        while (num > 0) {\n      \
    \      sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        while (num != 0) {\n            sum += num % 10;\n       \
    \     num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n   \
    \ for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0;\
    \ i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::map<int, std::vector<long>>\
    \ m;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n    \
    \    long n = nums[i];\n        if (n < 0) {\n            n = -n;\n        }\n\
    \        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n \
    \       }\n        m[sum].push_back(nums[i]);\n    }\n    std::vector<long> res;\n\
    \    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int i = 0;\
    \ i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n \
    \       }\n    }\n    return res;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    std::vector<int> index;\n    int temp = 0;\n    int temp_sum = 0;\n\
    \    for(int i = 0; i < nums.size(); i++){\n        temp = nums[i];\n        temp_sum\
    \ = 0;\n        while(temp != 0){\n            temp_sum += temp % 10;\n      \
    \      temp /= 10;\n        }\n        sum.push_back(temp_sum);\n        index.push_back(i);\n\
    \    }\n    for(int i = 0; i < sum.size(); i++){\n        for(int j = i + 1; j\
    \ < sum.size(); j++){\n            if(sum[i] > sum[j]){\n                std::swap(sum[i],\
    \ sum[j]);\n                std::swap(index[i], index[j]);\n            }\n  \
    \      }\n    }\n    for(int i = 0; i < index.size(); i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (auto num : nums) {\n        long sum = 0;\n\
    \        long temp = num;\n        while (temp != 0) {\n            sum += temp\
    \ % 10;\n            temp /= 10;\n        }\n        map[sum].push_back(num);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (auto num : it->second) {\n            result.push_back(num);\n        }\n \
    \   }\n    return result;", "    // your code here\n    std::vector<long> result;\n\
    \    std::vector<long> sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n\
    \        long temp=nums[i];\n        long sum_temp=0;\n        while(temp!=0){\n\
    \            sum_temp+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n   \
    \     for(int j=0;j<nums.size()-i-1;j++){\n            if(sum[j]>sum[j+1]){\n\
    \                long temp=sum[j];\n                sum[j]=sum[j+1];\n       \
    \         sum[j+1]=temp;\n                temp=index[j];\n                index[j]=index[j+1];\n\
    \                index[j+1]=temp;\n            }\n        }\n    }\n    for(int\
    \ i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n \
    \       long num = nums[i];\n        if (num < 0) {\n            num = -num;\n\
    \        }\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (auto num : nums) {\n        int sum = 0;\n        for (auto c : std::to_string(num))\
    \ {\n            sum += c - '0';\n        }\n        map[sum].push_back(num);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); ++it) {\n        for\
    \ (auto num : it->second) {\n            result.push_back(num);\n        }\n \
    \   }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int n = nums[i];\n        if (n < 0) {\n           \
    \ n = n * -1;\n        }\n        while (n > 0) {\n            sum += n % 10;\n\
    \            n = n / 10;\n        }\n        map[sum].push_back(nums[i]);\n  \
    \  }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "  std::vector<long> result;\n  std::map<long,\
    \ std::vector<long>> map;\n  for (long i = 0; i < nums.size(); i++) {\n    long\
    \ sum = 0;\n    long num = nums[i];\n    while (num != 0) {\n      sum += num\
    \ % 10;\n      num /= 10;\n    }\n    map[sum].push_back(nums[i]);\n  }\n  for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n    for (long i = 0; i < it->second.size();\
    \ i++) {\n      result.push_back(it->second[i]);\n    }\n  }\n  return result;",
  "    std::vector<long> result;\n    std::vector<long> temp;\n    std::vector<long>\
    \ temp2;\n    std::vector<long> temp3;\n    std::vector<long> temp4;\n    std::vector<long>\
    \ temp5;\n    std::vector<long> temp6;\n    std::vector<long> temp7;\n    std::vector<long>\
    \ temp8;\n    std::vector<long> temp9;\n    std::vector<long> temp10;\n    std::vector<long>\
    \ temp11;\n    std::vector<long> temp12;\n    std::vector<long> temp13;\n    std::vector<long>\
    \ temp14;\n    std::vector<long> temp15;\n    std::vector<long> temp16;\n    std::vector<long>\
    \ temp17;\n    std::vector<long> temp18;\n    std::vector<long> temp19;\n    std::vector<long>\
    \ temp20;\n    std::vector<long> temp21;\n    std::vector<long> temp22;\n    std::vector<long>\
    \ temp23;\n    std::vector<long> temp24;\n    std::vector<long> temp25;\n    std::vector<long>\
    \ temp26;\n    std::vector<long> temp27;\n    std::vector<long> temp28;\n    std::vector<long>\
    \ temp29;\n    std::vector<long> temp30;\n    std::vector<long> temp31;\n    std::vector<long>\
    \ temp32;\n    std::vector<long> temp33;\n    std::vector<long> temp34;\n    std::vector<long>\
    \ temp35;\n    std::vector<long> temp36;\n    std::vector<long> temp37;\n    std::vector<long>\
    \ temp38;\n    std::vector<long> temp39;\n    std::vector<long> temp40;\n    std::vector<long>\
    \ temp41;\n    std::vector<long> temp42;\n    std::vector<long> temp43;\n    std::vector<long>\
    \ temp44;\n    std::vector<long> temp45;\n    std::vector<long>", "    std::vector<long>\
    \ result;\n    std::vector<long> sum;\n    int i;\n    for(i=0;i<nums.size();i++)\n\
    \    {\n        long sum_digits=0;\n        long n=nums[i];\n        while(n!=0)\n\
    \        {\n            sum_digits=sum_digits+n%10;\n            n=n/10;\n   \
    \     }\n        sum.push_back(sum_digits);\n    }\n    for(i=0;i<nums.size();i++)\n\
    \    {\n        long min=sum[i];\n        int index=i;\n        for(int j=i+1;j<nums.size();j++)\n\
    \        {\n            if(sum[j]<min)\n            {\n                min=sum[j];\n\
    \                index=j;\n            }\n        }\n        long temp=sum[i];\n\
    \        sum[i]=sum[index];\n        sum[index]=temp;\n        temp=nums[i];\n\
    \        nums[i]=nums[index];\n        nums[index]=temp;\n    }\n    return nums;",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int temp\
    \ = nums[i];\n        if (temp < 0) {\n            temp = temp * -1;\n       \
    \ }\n        while (temp > 0) {\n            sum += temp % 10;\n            temp\
    \ = temp / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        result.insert(result.end(),\
    \ it->second.begin(), it->second.end());\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<int, std::vector<long>> m;\n    for (auto i : nums) {\n\
    \        int sum = 0;\n        int n = i;\n        while (n != 0) {\n        \
    \    sum += n % 10;\n            n /= 10;\n        }\n        m[sum].push_back(i);\n\
    \    }\n    for (auto i : m) {\n        for (auto j : i.second) {\n          \
    \  result.push_back(j);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n  \
    \      while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int x = nums[i];\n        if (x < 0) {\n            x = x * -1;\n     \
    \   }\n        while (x > 0) {\n            sum += x % 10;\n            x = x\
    \ / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto\
    \ it = map.begin(); it != map.end(); it++) {\n        std::vector<long> temp =\
    \ it->second;\n        for (int i = 0; i < temp.size(); i++) {\n            result.push_back(temp[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = num * -1;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    std::vector<long> temp;\n    long s\
    \ = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        temp.push_back(nums[i]);\n\
    \        while(nums[i] != 0) {\n            s += nums[i] % 10;\n            nums[i]\
    \ /= 10;\n        }\n        sum.push_back(s);\n        s = 0;\n    }\n    for(int\
    \ i = 0; i < sum.size(); i++) {\n        index.push_back(i);\n    }\n    for(int\
    \ i = 0; i < sum.size(); i++) {\n        for(int j = i + 1; j < sum.size(); j++)\
    \ {\n            if(sum[i] > sum[j]) {\n                long t = sum[i];\n   \
    \             sum[i] = sum[j];\n                sum[j] = t;\n                t\
    \ = index[i];\n                index[i] = index[j];\n                index[j]\
    \ = t;\n            }\n        }\n    }\n    for(int i = 0; i < index.size();\
    \ i++) {\n        result.push_back(temp[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> temp;\n    std::vector<long>\
    \ temp2;\n    std::vector<long> temp3;\n    std::vector<long> temp4;\n    std::vector<long>\
    \ temp5;\n    std::vector<long> temp6;\n    std::vector<long> temp7;\n    std::vector<long>\
    \ temp8;\n    std::vector<long> temp9;\n    std::vector<long> temp10;\n    std::vector<long>\
    \ temp11;\n    std::vector<long> temp12;\n    std::vector<long> temp13;\n    std::vector<long>\
    \ temp14;\n    std::vector<long> temp15;\n    std::vector<long> temp16;\n    std::vector<long>\
    \ temp17;\n    std::vector<long> temp18;\n    std::vector<long> temp19;\n    std::vector<long>\
    \ temp20;\n    std::vector<long> temp21;\n    std::vector<long> temp22;\n    std::vector<long>\
    \ temp23;\n    std::vector<long> temp24;\n    std::vector<long> temp25;\n    std::vector<long>\
    \ temp26;\n    std::vector<long> temp27;\n    std::vector<long> temp28;\n    std::vector<long>\
    \ temp29;\n    std::vector<long> temp30;\n    std::vector<long> temp31;\n    std::vector<long>\
    \ temp32;\n    std::vector<long> temp33;\n    std::vector<long> temp34;\n    std::vector<long>\
    \ temp35;\n    std::vector<long> temp36;\n    std::vector<long> temp37;\n    std::vector<long>\
    \ temp38;\n    std::vector<long> temp39;\n    std::vector<long> temp40;\n    std::vector<long>\
    \ temp41;\n    std::vector<long> temp42;\n    std::vector<long> temp43;\n    std::vector<long>\
    \ temp44;\n    std::vector<long> temp45;\n    std::vector<long>", "    std::vector<long>\
    \ result;\n    std::map<int, std::vector<long>> mp;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int temp = nums[i];\n        while (temp\
    \ != 0) {\n            sum += temp % 10;\n            temp /= 10;\n        }\n\
    \        mp[sum].push_back(nums[i]);\n    }\n    for (auto it = mp.begin(); it\
    \ != mp.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    int s = 0;\n    int i = 0;\n    for (auto x : nums) {\n        s\
    \ = 0;\n        while (x != 0) {\n            s += x % 10;\n            x /= 10;\n\
    \        }\n        sum.push_back(s);\n        index.push_back(i);\n        i++;\n\
    \    }\n    for (int i = 0; i < nums.size(); i++) {\n        for (int j = i +\
    \ 1; j < nums.size(); j++) {\n            if (sum[i] > sum[j]) {\n           \
    \     std::swap(sum[i], sum[j]);\n                std::swap(nums[i], nums[j]);\n\
    \                std::swap(index[i], index[j]);\n            }\n            else\
    \ if (sum[i] == sum[j]) {\n                if (index[i] > index[j]) {\n      \
    \              std::swap(sum[i], sum[j]);\n                    std::swap(nums[i],\
    \ nums[j]);\n                    std::swap(index[i], index[j]);\n            \
    \    }\n            }\n        }\n    }\n    return nums;", "\tstd::vector<long>\
    \ res;\n\tstd::map<int, std::vector<long>> m;\n\tfor (int i = 0; i < nums.size();\
    \ i++) {\n\t\tint sum = 0;\n\t\tlong num = nums[i];\n\t\tif (num < 0) {\n\t\t\t\
    num = -num;\n\t\t}\n\t\twhile (num) {\n\t\t\tsum += num % 10;\n\t\t\tnum /= 10;\n\
    \t\t}\n\t\tm[sum].push_back(nums[i]);\n\t}\n\tfor (auto it = m.begin(); it !=\
    \ m.end(); it++) {\n\t\tfor (int i = 0; i < it->second.size(); i++) {\n\t\t\t\
    res.push_back(it->second[i]);\n\t\t}\n\t}\n\treturn res;", "    std::vector<long>\
    \ result;\n    std::map<int, std::vector<long>> m;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int num = nums[i];\n        if (num <\
    \ 0) {\n            num = -num;\n        }\n        while (num > 0) {\n      \
    \      sum += num % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ long> map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum =\
    \ 0;\n        long num = nums[i];\n        while (num != 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        map[sum] = nums[i];\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        result.push_back(it->second);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long n = nums[i];\n        if (n < 0) {\n          \
    \  n = n * -1;\n        }\n        while (n > 0) {\n            sum += n % 10;\n\
    \            n = n / 10;\n        }\n        map[sum].push_back(nums[i]);\n  \
    \  }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    std::vector<long> temp;\n    int i =\
    \ 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int\
    \ n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n   \
    \ int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll\
    \ = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n \
    \   int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu\
    \ = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n \
    \   int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd\
    \ = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n \
    \   int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int\
    \ mmm = 0;\n    int nnn = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq\
    \ = 0;\n    int rrr = 0;\n    int sss = 0;\n    int t", "    std::vector<long>\
    \ result;\n    std::map<int, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        int sum = 0;\n        int num = nums[i];\n    \
    \    while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    std::map<int, std::vector<long>>\
    \ m;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n    \
    \    long num = nums[i];\n        while (num != 0) {\n            sum += num %\
    \ 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n\
    \            sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long temp = nums[i];\n        long sum_temp = 0;\n        while(temp!=0){\n\
    \            sum_temp += temp%10;\n            temp /= 10;\n        }\n      \
    \  sum.push_back(sum_temp);\n        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n\
    \        for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n \
    \               long temp = sum[i];\n                sum[i] = sum[j];\n      \
    \          sum[j] = temp;\n                temp = nums[i];\n                nums[i]\
    \ = nums[j];\n                nums[j] = temp;\n                temp = index[i];\n\
    \                index[i] = index[j];\n                index[j] = temp;\n    \
    \        }\n            else if(sum[i]==sum[j]){\n                if(index[i]>index[j]){\n\
    \                    long temp = sum[i];\n                    sum[i] = sum[j];\n\
    \                    sum[j] = temp;\n                    temp = nums[i];\n   \
    \                 nums[i] = nums[j];\n                    nums[j] = temp;\n  \
    \                  temp = index[i];\n                    index[i] = index[j];\n\
    \                    index[j] = temp;\n                }\n            }\n    \
    \    }\n    }\n    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[i]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long temp=nums[i];\n        long sum_temp=0;\n        while(temp!=0){\n\
    \            sum_temp+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n   \
    \     long min=sum[i];\n        int min_index=i;\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[j]<min){\n                min=sum[j];\n                min_index=j;\n\
    \            }\n        }\n        if(min_index!=i){\n            long temp=sum[i];\n\
    \            sum[i]=sum[min_index];\n            sum[min_index]=temp;\n      \
    \      temp=index[i];\n            index[i]=index[min_index];\n            index[min_index]=temp;\n\
    \        }\n    }\n    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long sum_of_digits=0;\n        long temp=nums[i];\n        while(temp!=0){\n\
    \            sum_of_digits+=temp%10;\n            temp/=10;\n        }\n     \
    \   sum.push_back(sum_of_digits);\n        index.push_back(i);\n    }\n    for(int\
    \ i=0;i<nums.size();i++){\n        for(int j=i+1;j<nums.size();j++){\n       \
    \     if(sum[i]>sum[j]){\n                long temp=sum[i];\n                sum[i]=sum[j];\n\
    \                sum[j]=temp;\n                temp=index[i];\n              \
    \  index[i]=index[j];\n                index[j]=temp;\n            }\n       \
    \ }\n    }\n    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long temp = nums[i];\n        while (temp != 0) {\n\
    \            sum += temp % 10;\n            temp /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto i = map.begin(); i != map.end(); i++) {\n        for (auto\
    \ j = i->second.begin(); j != i->second.end(); j++) {\n            result.push_back(*j);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n      \
    \      num = num * -1;\n        }\n        while (num > 0) {\n            sum\
    \ += num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long sum_of_digits = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n        for (int\
    \ j = 0; j < std::to_string(nums[i]).size(); j++) {\n            sum_of_digits\
    \ += std::to_string(nums[i])[j] - '0';\n        }\n        sum.push_back(sum_of_digits);\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        for (int j = i + 1; j < nums.size(); j++) {\n            if (sum[i]\
    \ > sum[j]) {\n                std::swap(sum[i], sum[j]);\n                std::swap(index[i],\
    \ index[j]);\n            }\n        }\n    }\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        while (num != 0) {\n            sum += num % 10;\n       \
    \     num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n   \
    \ for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0;\
    \ i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        int temp=nums[i];\n     \
    \   int sum_temp=0;\n        while(temp!=0){\n            sum_temp+=temp%10;\n\
    \            temp/=10;\n        }\n        sum.push_back(sum_temp);\n    }\n \
    \   std::vector<int> index;\n    for(int i=0;i<nums.size();i++){\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        for(int j=0;j<nums.size()-1;j++){\n\
    \            if(sum[j]>sum[j+1]){\n                int temp=sum[j];\n        \
    \        sum[j]=sum[j+1];\n                sum[j+1]=temp;\n                temp=nums[j];\n\
    \                nums[j]=nums[j+1];\n                nums[j+1]=temp;\n       \
    \         temp=index[j];\n                index[j]=index[j+1];\n             \
    \   index[j+1]=temp;\n            }\n            else if(sum[j]==sum[j+1]){\n\
    \                if(index[j]>index[j+1]){\n                    int temp=sum[j];\n\
    \                    sum[j]=sum[j+1];\n                    sum[j+1]=temp;\n  \
    \                  temp=nums[j];\n                    nums[j]=nums[j+1];\n   \
    \                 nums[j+1]=temp;\n                    temp=index[j];\n      \
    \              index[j]=index[j+1];\n                    index[j+1]=temp;\n  \
    \              }\n            }\n        }\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    std::vector<int> sum;\n    int s = 0;\n    for(int i = 0; i < nums.size();\
    \ i++) {\n        int n = nums[i];\n        if(n < 0) {\n            n = n * -1;\n\
    \        }\n        while(n > 0) {\n            s += n % 10;\n            n =\
    \ n / 10;\n        }\n        sum.push_back(s);\n        s = 0;\n    }\n    for(int\
    \ i = 0; i < nums.size(); i++) {\n        int min = sum[i];\n        int index\
    \ = i;\n        for(int j = i; j < nums.size(); j++) {\n            if(sum[j]\
    \ < min) {\n                min = sum[j];\n                index = j;\n      \
    \      }\n        }\n        int temp = sum[i];\n        sum[i] = sum[index];\n\
    \        sum[index] = temp;\n        temp = nums[i];\n        nums[i] = nums[index];\n\
    \        nums[index] = temp;\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    std::map<int, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        int sum = 0;\n        int num = nums[i];\n    \
    \    if (num < 0) {\n            num = -num;\n        }\n        while (num >\
    \ 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n    \
    \    map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin(); it !=\
    \ map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long temp=nums[i];\n        long sum_temp=0;\n        while(temp!=0){\n\
    \            sum_temp+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n   \
    \     for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n    \
    \            long temp=sum[i];\n                sum[i]=sum[j];\n             \
    \   sum[j]=temp;\n                temp=nums[i];\n                nums[i]=nums[j];\n\
    \                nums[j]=temp;\n                temp=index[i];\n             \
    \   index[i]=index[j];\n                index[j]=temp;\n            }\n      \
    \      else if(sum[i]==sum[j]){\n                if(index[i]>index[j]){\n    \
    \                long temp=sum[i];\n                    sum[i]=sum[j];\n     \
    \               sum[j]=temp;\n                    temp=nums[i];\n            \
    \        nums[i]=nums[j];\n                    nums[j]=temp;\n               \
    \     temp=index[i];\n                    index[i]=index[j];\n               \
    \     index[j]=temp;\n                }\n            }\n        }\n    }\n   \
    \ for(int i=0;i<nums.size();i++){\n        result.push_back(nums[i]);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::vector<int> sums;\n\
    \    std::vector<int> indices;\n    int sum;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        sum = 0;\n        for (int j = 0; j < std::to_string(nums[i]).size();\
    \ j++) {\n            sum += std::to_string(nums[i])[j] - '0';\n        }\n  \
    \      sums.push_back(sum);\n        indices.push_back(i);\n    }\n    for (int\
    \ i = 0; i < sums.size(); i++) {\n        for (int j = 0; j < sums.size() - 1;\
    \ j++) {\n            if (sums[j] > sums[j + 1]) {\n                std::swap(sums[j],\
    \ sums[j + 1]);\n                std::swap(indices[j], indices[j + 1]);\n    \
    \        }\n        }\n    }\n    for (int i = 0; i < indices.size(); i++) {\n\
    \        result.push_back(nums[indices[i]]);\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    int i = 0;\n    for (auto it = nums.begin(); it != nums.end(); it++)\
    \ {\n        int s = 0;\n        int n = *it;\n        while (n != 0) {\n    \
    \        s += n % 10;\n            n /= 10;\n        }\n        sum.push_back(s);\n\
    \    }\n    for (int i = 0; i < nums.size(); i++) {\n        int min = INT_MAX;\n\
    \        int min_index = 0;\n        for (int j = 0; j < nums.size(); j++) {\n\
    \            if (sum[j] < min) {\n                min = sum[j];\n            \
    \    min_index = j;\n            }\n        }\n        result.push_back(nums[min_index]);\n\
    \        sum[min_index] = INT_MAX;\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum_of_digits;\n    std::vector<long> index;\n\
    \    std::vector<long>::iterator it;\n    long sum = 0;\n    long i = 0;\n   \
    \ for (it = nums.begin(); it != nums.end(); it++) {\n        sum = 0;\n      \
    \  while (*it != 0) {\n            sum += *it % 10;\n            *it /= 10;\n\
    \        }\n        sum_of_digits.push_back(sum);\n        index.push_back(i);\n\
    \        i++;\n    }\n    for (int i = 0; i < nums.size(); i++) {\n        for\
    \ (int j = 0; j < nums.size() - i - 1; j++) {\n            if (sum_of_digits[j]\
    \ > sum_of_digits[j + 1]) {\n                std::swap(sum_of_digits[j], sum_of_digits[j\
    \ + 1]);\n                std::swap(index[j], index[j + 1]);\n            }\n\
    \        }\n    }\n    for (int i = 0; i < nums.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ long> map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum =\
    \ 0;\n        long num = nums[i];\n        while (num != 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        map[sum] = nums[i];\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        result.push_back(it->second);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long sum_of_digits = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n        for (int\
    \ j = 0; j < std::to_string(nums[i]).size(); j++) {\n            sum_of_digits\
    \ += std::to_string(nums[i])[j] - '0';\n        }\n        sum.push_back(sum_of_digits);\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        for (int j = i + 1; j < nums.size(); j++) {\n            if (sum[i]\
    \ > sum[j]) {\n                std::swap(sum[i], sum[j]);\n                std::swap(index[i],\
    \ index[j]);\n            }\n        }\n    }\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        if (nums[i] < 0) {\n            nums[i] = -nums[i];\n\
    \        }\n        while (nums[i] > 0) {\n            sum += nums[i] % 10;\n\
    \            nums[i] /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        long s=0;\n        long temp=nums[i];\n\
    \        while(temp!=0){\n            s+=temp%10;\n            temp/=10;\n   \
    \     }\n        sum.push_back(s);\n    }\n    std::vector<long> copy=nums;\n\
    \    std::sort(sum.begin(),sum.end());\n    for(int i=0;i<sum.size();i++){\n \
    \       for(int j=0;j<nums.size();j++){\n            long s=0;\n            long\
    \ temp=nums[j];\n            while(temp!=0){\n                s+=temp%10;\n  \
    \              temp/=10;\n            }\n            if(s==sum[i]){\n        \
    \        result.push_back(nums[j]);\n                nums[j]=0;\n            \
    \    break;\n            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum;\n    std::vector<long> index;\n    long\
    \ sum_of_digits = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum_of_digits\
    \ = 0;\n        while (nums[i] != 0) {\n            sum_of_digits += nums[i] %\
    \ 10;\n            nums[i] /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \        index.push_back(i);\n    }\n    for (long i = 0; i < sum.size(); i++)\
    \ {\n        for (long j = i + 1; j < sum.size(); j++) {\n            if (sum[i]\
    \ > sum[j]) {\n                std::swap(sum[i], sum[j]);\n                std::swap(index[i],\
    \ index[j]);\n            }\n        }\n    }\n    for (long i = 0; i < index.size();\
    \ i++) {\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<int> sum;\n    for(int i=0;i<nums.size();i++){\n\
    \        int temp=nums[i];\n        int sum1=0;\n        while(temp!=0){\n   \
    \         sum1+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum1);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        int min=sum[i];\n       \
    \ int index=i;\n        for(int j=i+1;j<nums.size();j++){\n            if(sum[j]<min){\n\
    \                min=sum[j];\n                index=j;\n            }\n      \
    \  }\n        if(index!=i){\n            int temp=sum[i];\n            sum[i]=sum[index];\n\
    \            sum[index]=temp;\n            temp=nums[i];\n            nums[i]=nums[index];\n\
    \            nums[index]=temp;\n        }\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n\
    \        while (num != 0) {\n            sum += num % 10;\n            num /=\
    \ 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it\
    \ = map.begin(); it != map.end(); it++) {\n        for (long i = 0; i < it->second.size();\
    \ i++) {\n            result.push_back(it->second[i]);\n        }\n    }\n   \
    \ return result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        if (num < 0) {\n            num = num * -1;\n\
    \        }\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n         \
    \   num = -num;\n        }\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long sum_of_digits;\n    for(int i=0;i<nums.size();i++){\n\
    \        sum_of_digits=0;\n        while(nums[i]!=0){\n            sum_of_digits+=nums[i]%10;\n\
    \            nums[i]/=10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<sum.size();i++){\n    \
    \    for(int j=i+1;j<sum.size();j++){\n            if(sum[i]>sum[j]){\n      \
    \          long temp=sum[i];\n                sum[i]=sum[j];\n               \
    \ sum[j]=temp;\n                temp=index[i];\n                index[i]=index[j];\n\
    \                index[j]=temp;\n            }\n        }\n    }\n    for(int\
    \ i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n    }\n\
    \    return result;", "    // your code here\n    std::vector<long> result;\n\
    \    std::vector<long> temp;\n    std::vector<long> temp2;\n    std::vector<long>\
    \ temp3;\n    std::vector<long> temp4;\n    std::vector<long> temp5;\n    std::vector<long>\
    \ temp6;\n    std::vector<long> temp7;\n    std::vector<long> temp8;\n    std::vector<long>\
    \ temp9;\n    std::vector<long> temp10;\n    std::vector<long> temp11;\n    std::vector<long>\
    \ temp12;\n    std::vector<long> temp13;\n    std::vector<long> temp14;\n    std::vector<long>\
    \ temp15;\n    std::vector<long> temp16;\n    std::vector<long> temp17;\n    std::vector<long>\
    \ temp18;\n    std::vector<long> temp19;\n    std::vector<long> temp20;\n    std::vector<long>\
    \ temp21;\n    std::vector<long> temp22;\n    std::vector<long> temp23;\n    std::vector<long>\
    \ temp24;\n    std::vector<long> temp25;\n    std::vector<long> temp26;\n    std::vector<long>\
    \ temp27;\n    std::vector<long> temp28;\n    std::vector<long> temp29;\n    std::vector<long>\
    \ temp30;\n    std::vector<long> temp31;\n    std::vector<long> temp32;\n    std::vector<long>\
    \ temp33;\n    std::vector<long> temp34;\n    std::vector<long> temp35;\n    std::vector<long>\
    \ temp36;\n    std::vector<long> temp37;\n    std::vector<long> temp38;\n    std::vector<long>\
    \ temp39;\n    std::vector<long> temp40;\n    std::vector<long> temp41;\n    std::vector<long>\
    \ temp42;\n    std::vector<long> temp43;\n    std::vector<long> temp44;\n    std::vector<long>\
    \ temp45;\n   ", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ mymap;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n\
    \        int num = nums[i];\n        if (num < 0) {\n            num = num * -1;\n\
    \        }\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num = num / 10;\n        }\n        mymap[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = mymap.begin(); it != mymap.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        if (num < 0) {\n            num = -num;\n        }\n     \
    \   while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long temp=nums[i];\n        long temp_sum=0;\n        while(temp!=0){\n\
    \            temp_sum+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(temp_sum);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n   \
    \     for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n    \
    \            long temp=sum[i];\n                sum[i]=sum[j];\n             \
    \   sum[j]=temp;\n                temp=nums[i];\n                nums[i]=nums[j];\n\
    \                nums[j]=temp;\n                temp=index[i];\n             \
    \   index[i]=index[j];\n                index[j]=temp;\n            }\n      \
    \      else if(sum[i]==sum[j]){\n                if(index[i]>index[j]){\n    \
    \                long temp=sum[i];\n                    sum[i]=sum[j];\n     \
    \               sum[j]=temp;\n                    temp=nums[i];\n            \
    \        nums[i]=nums[j];\n                    nums[j]=temp;\n               \
    \     temp=index[i];\n                    index[i]=index[j];\n               \
    \     index[j]=temp;\n                }\n            }\n        }\n    }\n   \
    \ return nums;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n \
    \       long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = num * -1;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "\tstd::vector<long> result;\n\tstd::map<int,\
    \ std::vector<long>> m;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tint sum\
    \ = 0;\n\t\tint n = nums[i];\n\t\tif (n < 0) {\n\t\t\tn = -n;\n\t\t}\n\t\twhile\
    \ (n > 0) {\n\t\t\tsum += n % 10;\n\t\t\tn /= 10;\n\t\t}\n\t\tm[sum].push_back(nums[i]);\n\
    \t}\n\tfor (auto it = m.begin(); it != m.end(); it++) {\n\t\tfor (int i = 0; i\
    \ < it->second.size(); i++) {\n\t\t\tresult.push_back(it->second[i]);\n\t\t}\n\
    \t}\n\treturn result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    int sum_of_digits = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        int temp = nums[i];\n        if (temp\
    \ < 0) {\n            temp = temp * -1;\n        }\n        while (temp != 0)\
    \ {\n            sum_of_digits += temp % 10;\n            temp = temp / 10;\n\
    \        }\n        sum.push_back(sum_of_digits);\n        sum_of_digits = 0;\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        for (int j = 0; j < nums.size() - 1; j++) {\n            if (sum[j]\
    \ > sum[j + 1]) {\n                std::swap(sum[j], sum[j + 1]);\n          \
    \      std::swap(nums[j], nums[j + 1]);\n                std::swap(index[j], index[j\
    \ + 1]);\n            }\n            else if (sum[j] == sum[j + 1]) {\n      \
    \          if (index[j] > index[j + 1]) {\n                    std::swap(sum[j],\
    \ sum[j + 1]);\n                    std::swap(nums[j], nums[j + 1]);\n       \
    \             std::swap(index[j], index[j + 1]);\n                }\n        \
    \    }\n        }\n    }\n    return nums;", "    std::vector<long> result;\n\
    \    std::map<int, std::vector<long>> map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int num = nums[i];\n        if (num <\
    \ 0) {\n            num = num * -1;\n        }\n        while (num > 0) {\n  \
    \          sum += num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n\
    \            sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        long temp=nums[i];\n    \
    \    long sum_temp=0;\n        while(temp!=0){\n            sum_temp+=temp%10;\n\
    \            temp/=10;\n        }\n        sum.push_back(sum_temp);\n    }\n \
    \   for(int i=0;i<nums.size();i++){\n        int min=i;\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[j]<sum[min]){\n                min=j;\n            }\n   \
    \     }\n        if(min!=i){\n            long temp=sum[i];\n            sum[i]=sum[min];\n\
    \            sum[min]=temp;\n            temp=nums[i];\n            nums[i]=nums[min];\n\
    \            nums[min]=temp;\n        }\n    }\n    return nums;", "    std::vector<long>\
    \ res;\n    std::map<int, std::vector<long>> map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int num = nums[i];\n        if (num <\
    \ 0) {\n            num = -num;\n        }\n        while (num > 0) {\n      \
    \      sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (auto i : nums) {\n        int sum = 0;\n \
    \       int num = i;\n        while (num != 0) {\n            sum += num % 10;\n\
    \            num /= 10;\n        }\n        map[sum].push_back(i);\n    }\n  \
    \  for (auto i : map) {\n        for (auto j : i.second) {\n            result.push_back(j);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = num * -1;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int temp = nums[i];\n        if (temp < 0) {\n     \
    \       temp = temp * -1;\n        }\n        while (temp > 0) {\n           \
    \ sum += temp % 10;\n            temp = temp / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    int temp = 0;\n    int temp2 = 0;\n\
    \    int temp3 = 0;\n    int temp4 = 0;\n    int temp5 = 0;\n    int temp6 = 0;\n\
    \    int temp7 = 0;\n    int temp8 = 0;\n    int temp9 = 0;\n    int temp10 =\
    \ 0;\n    int temp11 = 0;\n    int temp12 = 0;\n    int temp13 = 0;\n    int temp14\
    \ = 0;\n    int temp15 = 0;\n    int temp16 = 0;\n    int temp17 = 0;\n    int\
    \ temp18 = 0;\n    int temp19 = 0;\n    int temp20 = 0;\n    int temp21 = 0;\n\
    \    int temp22 = 0;\n    int temp23 = 0;\n    int temp24 = 0;\n    int temp25\
    \ = 0;\n    int temp26 = 0;\n    int temp27 = 0;\n    int temp28 = 0;\n    int\
    \ temp29 = 0;\n    int temp30 = 0;\n    int temp31 = 0;\n    int temp32 = 0;\n\
    \    int temp33 = 0;\n    int temp34 = 0;\n    int temp35 = 0;\n    int temp36\
    \ = 0;\n    int temp37 = 0;\n    int temp38 = 0;\n    int temp39 = 0;\n    int\
    \ temp40 = 0;\n    int temp41 = 0;\n    int temp42 = 0;\n    int temp43 = 0;\n\
    \    int temp44 = 0;\n    int temp45 = 0;\n    int temp46 = 0;\n    int temp47\
    \ = 0;\n    int temp48 = 0;\n    int temp49 = 0;\n    int temp50 = 0;\n    int\
    \ temp51 = 0;\n    int temp52 = 0;\n    int temp53 = 0;\n    int temp54 = 0;\n\
    \    int temp55 = 0;\n    int temp56 = 0;\n    int temp57 = 0;\n    int temp58\
    \ = 0;\n    int temp59 = 0;\n    int temp60 = 0;\n    int", "    std::vector<long>\
    \ result;\n    std::vector<int> sum;\n    std::vector<int> index;\n    int temp\
    \ = 0;\n    for(int i = 0; i < nums.size(); i++){\n        temp = 0;\n       \
    \ while(nums[i] != 0){\n            temp += nums[i] % 10;\n            nums[i]\
    \ /= 10;\n        }\n        sum.push_back(temp);\n        index.push_back(i);\n\
    \    }\n    for(int i = 0; i < sum.size(); i++){\n        for(int j = i + 1; j\
    \ < sum.size(); j++){\n            if(sum[i] > sum[j]){\n                std::swap(sum[i],\
    \ sum[j]);\n                std::swap(index[i], index[j]);\n            }\n  \
    \      }\n    }\n    for(int i = 0; i < index.size(); i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    int temp;\n    for(int i=0;i<nums.size();i++){\n        temp=0;\n\
    \        while(nums[i]!=0){\n            temp+=nums[i]%10;\n            nums[i]/=10;\n\
    \        }\n        sum.push_back(temp);\n    }\n    for(int i=0;i<nums.size();i++){\n\
    \        int min=sum[i];\n        int index=i;\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[j]<min){\n                min=sum[j];\n                index=j;\n\
    \            }\n        }\n        std::swap(sum[i],sum[index]);\n        std::swap(nums[i],nums[index]);\n\
    \    }\n    return nums;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ temp;\n    std::vector<long> temp2;\n    std::vector<long> temp3;\n    std::vector<long>\
    \ temp4;\n    std::vector<long> temp5;\n    std::vector<long> temp6;\n    std::vector<long>\
    \ temp7;\n    std::vector<long> temp8;\n    std::vector<long> temp9;\n    std::vector<long>\
    \ temp10;\n    std::vector<long> temp11;\n    std::vector<long> temp12;\n    std::vector<long>\
    \ temp13;\n    std::vector<long> temp14;\n    std::vector<long> temp15;\n    std::vector<long>\
    \ temp16;\n    std::vector<long> temp17;\n    std::vector<long> temp18;\n    std::vector<long>\
    \ temp19;\n    std::vector<long> temp20;\n    std::vector<long> temp21;\n    std::vector<long>\
    \ temp22;\n    std::vector<long> temp23;\n    std::vector<long> temp24;\n    std::vector<long>\
    \ temp25;\n    std::vector<long> temp26;\n    std::vector<long> temp27;\n    std::vector<long>\
    \ temp28;\n    std::vector<long> temp29;\n    std::vector<long> temp30;\n    std::vector<long>\
    \ temp31;\n    std::vector<long> temp32;\n    std::vector<long> temp33;\n    std::vector<long>\
    \ temp34;\n    std::vector<long> temp35;\n    std::vector<long> temp36;\n    std::vector<long>\
    \ temp37;\n    std::vector<long> temp38;\n    std::vector<long> temp39;\n    std::vector<long>\
    \ temp40;\n    std::vector<long> temp41;\n    std::vector<long> temp42;\n    std::vector<long>\
    \ temp43;\n    std::vector<long> temp44;\n    std::vector<long> temp45;\n    std::vector<long>",
  "    std::vector<long> result;\n    std::vector<int> sum_of_digits;\n    int sum\
    \ = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum = 0;\n      \
    \  while (nums[i] != 0) {\n            sum += nums[i] % 10;\n            nums[i]\
    \ /= 10;\n        }\n        sum_of_digits.push_back(sum);\n    }\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        int min = sum_of_digits[i];\n      \
    \  int index = i;\n        for (int j = i + 1; j < nums.size(); j++) {\n     \
    \       if (sum_of_digits[j] < min) {\n                min = sum_of_digits[j];\n\
    \                index = j;\n            }\n        }\n        std::swap(sum_of_digits[i],\
    \ sum_of_digits[index]);\n        std::swap(nums[i], nums[index]);\n    }\n  \
    \  return nums;", "    std::vector<long> ans;\n    std::map<int, std::vector<long>>\
    \ mp;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n   \
    \     int num = nums[i];\n        if (num < 0) {\n            num = -num;\n  \
    \      }\n        while (num) {\n            sum += num % 10;\n            num\
    \ /= 10;\n        }\n        mp[sum].push_back(nums[i]);\n    }\n    for (auto\
    \ it = mp.begin(); it != mp.end(); it++) {\n        for (int i = 0; i < it->second.size();\
    \ i++) {\n            ans.push_back(it->second[i]);\n        }\n    }\n    return\
    \ ans;", "    std::vector<long> result;\n    std::vector<int> sum;\n    int sum_of_digits\
    \ = 0;\n    int count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n     \
    \   sum_of_digits = 0;\n        count = 0;\n        while(nums[i] != 0) {\n  \
    \          sum_of_digits += nums[i] % 10;\n            nums[i] /= 10;\n      \
    \      count++;\n        }\n        sum.push_back(sum_of_digits);\n    }\n   \
    \ for(int i = 0; i < sum.size(); i++) {\n        for(int j = 0; j < sum.size()\
    \ - 1; j++) {\n            if(sum[j] > sum[j + 1]) {\n                int temp\
    \ = sum[j];\n                sum[j] = sum[j + 1];\n                sum[j + 1]\
    \ = temp;\n                long temp1 = nums[j];\n                nums[j] = nums[j\
    \ + 1];\n                nums[j + 1] = temp1;\n            }\n        }\n    }\n\
    \    return nums;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        if (num < 0) {\n            num = -num;\n \
    \       }\n        while (num > 0) {\n            sum += num % 10;\n         \
    \   num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::vector<int> sum;\n    for(int i=0;i<nums.size();i++){\n\
    \        int temp=nums[i];\n        int s=0;\n        while(temp!=0){\n      \
    \      s+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(s);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        int min=i;\n        for(int\
    \ j=i+1;j<nums.size();j++){\n            if(sum[j]<sum[min]){\n              \
    \  min=j;\n            }\n        }\n        if(min!=i){\n            int temp=sum[i];\n\
    \            sum[i]=sum[min];\n            sum[min]=temp;\n            temp=nums[i];\n\
    \            nums[i]=nums[min];\n            nums[min]=temp;\n        }\n    }\n\
    \    return nums;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n\
    \        long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    std::map<int,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ int sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n        \
    \    num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n\
    \            sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (long i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<int> sum;\n    for(int i=0;i<nums.size();i++){\n\
    \        int temp = nums[i];\n        int sum_temp = 0;\n        while(temp){\n\
    \            sum_temp += temp%10;\n            temp /= 10;\n        }\n      \
    \  sum.push_back(sum_temp);\n    }\n    for(int i=0;i<nums.size();i++){\n    \
    \    int min = sum[i];\n        int index = i;\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[j] < min){\n                min = sum[j];\n              \
    \  index = j;\n            }\n        }\n        std::swap(sum[i],sum[index]);\n\
    \        std::swap(nums[i],nums[index]);\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n  \
    \      if (num < 0) {\n            num = -num;\n        }\n        while (num\
    \ > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n  \
    \      map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin(); it\
    \ != map.end(); it++) {\n        std::sort(it->second.begin(), it->second.end());\n\
    \        for (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        long s=0;\n        long n=nums[i];\n\
    \        while(n>0){\n            s+=n%10;\n            n/=10;\n        }\n  \
    \      sum.push_back(s);\n    }\n    std::vector<long> sorted_sum=sum;\n    std::sort(sorted_sum.begin(),sorted_sum.end());\n\
    \    for(int i=0;i<sorted_sum.size();i++){\n        for(int j=0;j<sum.size();j++){\n\
    \            if(sorted_sum[i]==sum[j]){\n                result.push_back(nums[j]);\n\
    \                sum[j]=-1;\n                break;\n            }\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n     \
    \       num = num * -1;\n        }\n        while (num > 0) {\n            sum\
    \ += num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::map<long, std::vector<long>>\
    \ m;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n   \
    \     long tmp = nums[i];\n        while (tmp) {\n            sum += tmp % 10;\n\
    \            tmp /= 10;\n        }\n        m[sum].push_back(nums[i]);\n    }\n\
    \    std::vector<long> res;\n    for (auto it = m.begin(); it != m.end(); it++)\
    \ {\n        for (int i = 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n\
    \            sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        long temp=nums[i];\n    \
    \    long sum_of_digits=0;\n        while(temp!=0){\n            sum_of_digits+=temp%10;\n\
    \            temp/=10;\n        }\n        sum.push_back(sum_of_digits);\n   \
    \ }\n    for(int i=0;i<nums.size();i++){\n        int min=i;\n        for(int\
    \ j=i+1;j<nums.size();j++){\n            if(sum[j]<sum[min]){\n              \
    \  min=j;\n            }\n        }\n        long temp=sum[i];\n        sum[i]=sum[min];\n\
    \        sum[min]=temp;\n        temp=nums[i];\n        nums[i]=nums[min];\n \
    \       nums[min]=temp;\n    }\n    return nums;", "    std::vector<long> res;\n\
    \    std::vector<int> sum;\n    for(int i=0;i<nums.size();i++){\n        int s=0;\n\
    \        int n=nums[i];\n        while(n){\n            s+=n%10;\n           \
    \ n/=10;\n        }\n        sum.push_back(s);\n    }\n    for(int i=0;i<nums.size();i++){\n\
    \        int min=sum[i];\n        int index=i;\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[j]<min){\n                min=sum[j];\n                index=j;\n\
    \            }\n        }\n        int temp=sum[i];\n        sum[i]=sum[index];\n\
    \        sum[index]=temp;\n        temp=nums[i];\n        nums[i]=nums[index];\n\
    \        nums[index]=temp;\n    }\n    return nums;", "    std::vector<long> ans;\n\
    \    std::map<int, std::vector<long>> m;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int n = nums[i];\n        if (n < 0) {\n\
    \            n = -n;\n        }\n        while (n > 0) {\n            sum += n\
    \ % 10;\n            n /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            ans.push_back(it->second[i]);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    int i = 0;\n    for (auto x : nums)\
    \ {\n        int temp = 0;\n        while (x != 0) {\n            temp += x %\
    \ 10;\n            x /= 10;\n        }\n        sum.push_back(temp);\n       \
    \ index.push_back(i);\n        i++;\n    }\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        for (int j = i + 1; j < nums.size(); j++) {\n            if\
    \ (sum[i] > sum[j]) {\n                std::swap(sum[i], sum[j]);\n          \
    \      std::swap(index[i], index[j]);\n            }\n        }\n    }\n    for\
    \ (auto x : index) {\n        result.push_back(nums[x]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    long sum_of_digits = 0;\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        sum_of_digits = 0;\n        while (nums[i] != 0) {\n            sum_of_digits\
    \ += nums[i] % 10;\n            nums[i] /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < sum.size(); i++)\
    \ {\n        for (int j = i + 1; j < sum.size(); j++) {\n            if (sum[i]\
    \ > sum[j]) {\n                std::swap(sum[i], sum[j]);\n                std::swap(index[i],\
    \ index[j]);\n            }\n        }\n    }\n    for (int i = 0; i < index.size();\
    \ i++) {\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    // your code here\n    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ mp;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n  \
    \      long num = nums[i];\n        if (num < 0) num *= -1;\n        while (num\
    \ > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n  \
    \      mp[sum].push_back(nums[i]);\n    }\n    for (auto it = mp.begin(); it !=\
    \ mp.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++) {\n \
    \           result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> res;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        while (num != 0) {\n            sum += num % 10;\n       \
    \     num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n   \
    \ for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0;\
    \ i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n \
    \       }\n    }\n    return res;", "\tstd::vector<long> res;\n\tstd::map<int,\
    \ std::vector<long>> mp;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tint sum\
    \ = 0;\n\t\tint temp = nums[i];\n\t\tif (temp < 0) {\n\t\t\ttemp = temp * -1;\n\
    \t\t}\n\t\twhile (temp > 0) {\n\t\t\tsum += temp % 10;\n\t\t\ttemp = temp / 10;\n\
    \t\t}\n\t\tmp[sum].push_back(nums[i]);\n\t}\n\tfor (auto it = mp.begin(); it !=\
    \ mp.end(); it++) {\n\t\tstd::sort(it->second.begin(), it->second.end());\n\t\t\
    for (int i = 0; i < it->second.size(); i++) {\n\t\t\tres.push_back(it->second[i]);\n\
    \t\t}\n\t}\n\treturn res;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n\
    \        long sum=0;\n        long num=nums[i];\n        while(num!=0){\n    \
    \        sum+=num%10;\n            num/=10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n   \
    \     for(int j=i+1;j<nums.size();j++){\n            if(sum_of_digits[i]>sum_of_digits[j]){\n\
    \                long temp=sum_of_digits[i];\n                sum_of_digits[i]=sum_of_digits[j];\n\
    \                sum_of_digits[j]=temp;\n                temp=index[i];\n    \
    \            index[i]=index[j];\n                index[j]=temp;\n            }\n\
    \        }\n    }\n    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        int temp = nums[i];\n   \
    \     int sum_temp = 0;\n        while(temp){\n            sum_temp += temp%10;\n\
    \            temp /= 10;\n        }\n        sum.push_back(sum_temp);\n    }\n\
    \    std::vector<int> index;\n    for(int i=0;i<nums.size();i++){\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                int temp = sum[i];\n        \
    \        sum[i] = sum[j];\n                sum[j] = temp;\n                temp\
    \ = nums[i];\n                nums[i] = nums[j];\n                nums[j] = temp;\n\
    \                temp = index[i];\n                index[i] = index[j];\n    \
    \            index[j] = temp;\n            }\n            else if(sum[i]==sum[j]){\n\
    \                if(index[i]>index[j]){\n                    int temp = sum[i];\n\
    \                    sum[i] = sum[j];\n                    sum[j] = temp;\n  \
    \                  temp = nums[i];\n                    nums[i] = nums[j];\n \
    \                   nums[j] = temp;\n                    temp = index[i];\n  \
    \                  index[i] = index[j];\n                    index[j] = temp;\n\
    \                }\n            }\n        }\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    std::map<int, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        int sum = 0;\n        long num = nums[i];\n   \
    \     while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n    \
    \        num = -num;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = num * -1;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        while (num != 0) {\n            sum += num % 10;\n       \
    \     num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n   \
    \ for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0;\
    \ i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n    \
    \        num = -num;\n        }\n        while (num != 0) {\n            sum +=\
    \ num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n      \
    \      num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> sum_to_nums;\n    for (int i = 0; i < nums.size(); i++) {\n\
    \        long sum = 0;\n        long num = nums[i];\n        while (num != 0)\
    \ {\n            sum += num % 10;\n            num /= 10;\n        }\n       \
    \ sum_to_nums[sum].push_back(nums[i]);\n    }\n    for (auto it = sum_to_nums.begin();\
    \ it != sum_to_nums.end(); it++) {\n        for (int i = 0; i < it->second.size();\
    \ i++) {\n            result.push_back(it->second[i]);\n        }\n    }\n   \
    \ return result;", "    std::vector<long> result;\n    std::vector<int> sums;\n\
    \    std::vector<int> indices;\n    int sum = 0;\n    int index = 0;\n    for\
    \ (long i : nums) {\n        sum = 0;\n        while (i != 0) {\n            sum\
    \ += i % 10;\n            i /= 10;\n        }\n        sums.push_back(sum);\n\
    \        indices.push_back(index);\n        index++;\n    }\n    for (int i =\
    \ 0; i < nums.size(); i++) {\n        for (int j = 0; j < nums.size() - 1; j++)\
    \ {\n            if (sums[j] > sums[j + 1]) {\n                std::swap(sums[j],\
    \ sums[j + 1]);\n                std::swap(indices[j], indices[j + 1]);\n    \
    \        }\n        }\n    }\n    for (int i : indices) {\n        result.push_back(nums[i]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n\
    \            sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    std::vector<long> temp;\n    long sum_of_digits\
    \ = 0;\n    long temp_sum = 0;\n    long temp_index = 0;\n    long temp_num =\
    \ 0;\n    long temp_num2 = 0;\n    long temp_num3 = 0;\n    long temp_num4 = 0;\n\
    \    long temp_num5 = 0;\n    long temp_num6 = 0;\n    long temp_num7 = 0;\n \
    \   long temp_num8 = 0;\n    long temp_num9 = 0;\n    long temp_num10 = 0;\n \
    \   long temp_num11 = 0;\n    long temp_num12 = 0;\n    long temp_num13 = 0;\n\
    \    long temp_num14 = 0;\n    long temp_num15 = 0;\n    long temp_num16 = 0;\n\
    \    long temp_num17 = 0;\n    long temp_num18 = 0;\n    long temp_num19 = 0;\n\
    \    long temp_num20 = 0;\n    long temp_num21 = 0;\n    long temp_num22 = 0;\n\
    \    long temp_num23 = 0;\n    long temp_num24 = 0;\n    long temp_num25 = 0;\n\
    \    long temp_num26 = 0;\n    long temp_num27 = 0;\n    long temp_num28 = 0;\n\
    \    long temp_num29 = 0;\n    long temp_num30 = 0;\n    long temp_num31 = 0;\n\
    \    long temp_num32 = 0;\n    long temp_num33 = 0;\n    long temp_num34 = 0;\n\
    \    long temp_num35 = 0;\n    long temp_num36 = 0;\n    long temp_num37 = 0;\n\
    \    long temp_num38 = 0;\n    long temp_num39 = 0;\n    long temp_num40 = 0;\n\
    \    long temp_num41 = 0;\n    long temp_num42 = 0;\n    long temp_num43 = 0;\n\
    \    long temp_num44 = 0;\n    long", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    std::vector<int> index;\n    int temp = 0;\n    int temp2 = 0;\n \
    \   int temp3 = 0;\n    int temp4 = 0;\n    int temp5 = 0;\n    int temp6 = 0;\n\
    \    int temp7 = 0;\n    int temp8 = 0;\n    int temp9 = 0;\n    int temp10 =\
    \ 0;\n    int temp11 = 0;\n    int temp12 = 0;\n    int temp13 = 0;\n    int temp14\
    \ = 0;\n    int temp15 = 0;\n    int temp16 = 0;\n    int temp17 = 0;\n    int\
    \ temp18 = 0;\n    int temp19 = 0;\n    int temp20 = 0;\n    int temp21 = 0;\n\
    \    int temp22 = 0;\n    int temp23 = 0;\n    int temp24 = 0;\n    int temp25\
    \ = 0;\n    int temp26 = 0;\n    int temp27 = 0;\n    int temp28 = 0;\n    int\
    \ temp29 = 0;\n    int temp30 = 0;\n    int temp31 = 0;\n    int temp32 = 0;\n\
    \    int temp33 = 0;\n    int temp34 = 0;\n    int temp35 = 0;\n    int temp36\
    \ = 0;\n    int temp37 = 0;\n    int temp38 = 0;\n    int temp39 = 0;\n    int\
    \ temp40 = 0;\n    int temp41 = 0;\n    int temp42 = 0;\n    int temp43 = 0;\n\
    \    int temp44 = 0;\n    int temp45 = 0;\n    int temp46 = 0;\n    int temp47\
    \ = 0;\n    int temp48 = 0;\n    int temp49 = 0;\n    int temp50 = 0;\n    int\
    \ temp51 = 0;\n    int temp52 = 0;\n    int temp53 = 0;\n    int temp54 = 0;\n\
    \    int temp55 = 0;\n    int temp56 = 0;\n    int temp57 = 0;\n    int temp58\
    \ = 0;\n    int temp59 = 0;\n    int temp60 = 0;\n    int", "    std::vector<long>\
    \ result;\n    std::vector<long> sum_of_digits;\n    std::vector<long> index;\n\
    \    for(int i=0;i<nums.size();i++){\n        long sum = 0;\n        long num\
    \ = nums[i];\n        while(num!=0){\n            sum += num%10;\n           \
    \ num /= 10;\n        }\n        sum_of_digits.push_back(sum);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum_of_digits[i]>sum_of_digits[j]){\n                long temp\
    \ = sum_of_digits[i];\n                sum_of_digits[i] = sum_of_digits[j];\n\
    \                sum_of_digits[j] = temp;\n                temp = index[i];\n\
    \                index[i] = index[j];\n                index[j] = temp;\n    \
    \        }\n        }\n    }\n    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      int temp = nums[i];\n        int sum_temp = 0;\n        while(temp!=0){\n\
    \            sum_temp += temp%10;\n            temp /= 10;\n        }\n      \
    \  sum.push_back(sum_temp);\n        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n\
    \        for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n \
    \               int temp = sum[i];\n                sum[i] = sum[j];\n       \
    \         sum[j] = temp;\n                temp = index[i];\n                index[i]\
    \ = index[j];\n                index[j] = temp;\n            }\n        }\n  \
    \  }\n    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    int temp = 0;\n    for(int i = 0; i < nums.size(); i++){\n       \
    \ temp = 0;\n        while(nums[i] != 0){\n            temp += nums[i] % 10;\n\
    \            nums[i] /= 10;\n        }\n        sum.push_back(temp);\n    }\n\
    \    for(int i = 0; i < nums.size(); i++){\n        int min = i;\n        for(int\
    \ j = i + 1; j < nums.size(); j++){\n            if(sum[j] < sum[min]){\n    \
    \            min = j;\n            }\n        }\n        if(min != i){\n     \
    \       std::swap(sum[i], sum[min]);\n            std::swap(nums[i], nums[min]);\n\
    \        }\n    }\n    return nums;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    std::vector<long> index_of_digits;\n    for (int i = 0;\
    \ i < nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n\
    \        if (num < 0) {\n            num = -num;\n        }\n        while (num\
    \ > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n  \
    \      sum_of_digits.push_back(sum);\n        index_of_digits.push_back(i);\n\
    \    }\n    for (int i = 0; i < sum_of_digits.size(); i++) {\n        for (int\
    \ j = i + 1; j < sum_of_digits.size(); j++) {\n            if (sum_of_digits[i]\
    \ > sum_of_digits[j]) {\n                long temp = sum_of_digits[i];\n     \
    \           sum_of_digits[i] = sum_of_digits[j];\n                sum_of_digits[j]\
    \ = temp;\n                temp = index_of_digits[i];\n                index_of_digits[i]\
    \ = index_of_digits[j];\n                index_of_digits[j] = temp;\n        \
    \    }\n        }\n    }\n    for (int i = 0; i < index_of_digits.size(); i++)\
    \ {\n        result.push_back(nums[index_of_digits[i]]);\n    }\n    return result;",
  "    std::vector<long> res;\n    std::map<int, std::vector<long>> m;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int tmp = nums[i];\n\
    \        while (tmp) {\n            sum += tmp % 10;\n            tmp /= 10;\n\
    \        }\n        m[sum].push_back(nums[i]);\n    }\n    for (auto it = m.begin();\
    \ it != m.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            res.push_back(it->second[i]);\n        }\n    }\n    return res;",
  "    std::vector<long> result;\n    std::vector<int> sums;\n    int sum = 0;\n \
    \   for (int i = 0; i < nums.size(); i++) {\n        sum = 0;\n        while (nums[i]\
    \ != 0) {\n            sum += nums[i] % 10;\n            nums[i] /= 10;\n    \
    \    }\n        sums.push_back(sum);\n    }\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int min = sums[i];\n        int min_index = i;\n        for\
    \ (int j = i + 1; j < nums.size(); j++) {\n            if (sums[j] < min) {\n\
    \                min = sums[j];\n                min_index = j;\n            }\n\
    \        }\n        std::swap(sums[i], sums[min_index]);\n        std::swap(nums[i],\
    \ nums[min_index]);\n    }\n    return nums;", "    std::vector<long> result;\n\
    \    std::vector<long> sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n\
    \        int temp=nums[i];\n        int sum_=0;\n        while(temp!=0){\n   \
    \         sum_+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n   \
    \     int min=sum[i];\n        int min_index=i;\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[j]<min){\n                min=sum[j];\n                min_index=j;\n\
    \            }\n        }\n        int temp=sum[i];\n        sum[i]=sum[min_index];\n\
    \        sum[min_index]=temp;\n        temp=index[i];\n        index[i]=index[min_index];\n\
    \        index[min_index]=temp;\n    }\n    for(int i=0;i<nums.size();i++){\n\
    \        result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    std::map<int, std::vector<long>> m;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int n = nums[i];\n        if (n < 0) {\n\
    \            n = -n;\n        }\n        while (n) {\n            sum += n % 10;\n\
    \            n /= 10;\n        }\n        m[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int i = 0;\
    \ i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n \
    \       }\n    }\n    return res;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n\
    \            sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (long i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    for(int i=0;i<nums.size();i++){\n\
    \        long temp=nums[i];\n        long sum_temp=0;\n        while(temp!=0){\n\
    \            sum_temp+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_temp);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        long min=sum[i];\n      \
    \  int index=i;\n        for(int j=i+1;j<nums.size();j++){\n            if(sum[j]<min){\n\
    \                min=sum[j];\n                index=j;\n            }\n      \
    \  }\n        long temp=sum[i];\n        sum[i]=sum[index];\n        sum[index]=temp;\n\
    \        temp=nums[i];\n        nums[i]=nums[index];\n        nums[index]=temp;\n\
    \    }\n    return nums;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    int sum1 = 0;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   sum1 = 0;\n        while (nums[i] != 0) {\n            sum1 += nums[i] % 10;\n\
    \            nums[i] /= 10;\n        }\n        sum.push_back(sum1);\n    }\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        int min = i;\n        for\
    \ (int j = i + 1; j < nums.size(); j++) {\n            if (sum[j] < sum[min])\
    \ {\n                min = j;\n            }\n        }\n        if (min != i)\
    \ {\n            std::swap(sum[i], sum[min]);\n            std::swap(nums[i],\
    \ nums[min]);\n        }\n    }\n    return nums;", "    std::vector<long> result;\n\
    \    std::map<int, std::vector<long>> map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int num = nums[i];\n        while (num\
    \ != 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n \
    \       map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin(); it\
    \ != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int temp\
    \ = nums[i];\n        while (temp != 0) {\n            sum += temp % 10;\n   \
    \         temp /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    std::vector<int> index;\n    int temp;\n    for(int i=0;i<nums.size();i++){\n\
    \        temp=0;\n        while(nums[i]!=0){\n            temp+=nums[i]%10;\n\
    \            nums[i]/=10;\n        }\n        sum.push_back(temp);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<sum.size();i++){\n        for(int j=i+1;j<sum.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                std::swap(sum[i],sum[j]);\n \
    \               std::swap(index[i],index[j]);\n            }\n        }\n    }\n\
    \    for(int i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long n = nums[i];\n        while (n != 0) {\n     \
    \       sum += n % 10;\n            n /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum\
    \ = 0;\n        long num = nums[i];\n        while (num != 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \    }\n    std::vector<long> sorted_sum_of_digits = sum_of_digits;\n    std::sort(sorted_sum_of_digits.begin(),\
    \ sorted_sum_of_digits.end());\n    for (long i = 0; i < sorted_sum_of_digits.size();\
    \ i++) {\n        for (long j = 0; j < sum_of_digits.size(); j++) {\n        \
    \    if (sorted_sum_of_digits[i] == sum_of_digits[j]) {\n                result.push_back(nums[j]);\n\
    \                sum_of_digits[j] = -1;\n                break;\n            }\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n\
    \            sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> nums_map;\n    for (int i = 0; i < nums.size(); i++) {\n\
    \        long sum = 0;\n        long num = nums[i];\n        while (num != 0)\
    \ {\n            sum += num % 10;\n            num /= 10;\n        }\n       \
    \ nums_map[sum].push_back(nums[i]);\n    }\n    for (auto it = nums_map.begin();\
    \ it != nums_map.end(); it++) {\n        std::sort(it->second.begin(), it->second.end());\n\
    \        for (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ long> map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum =\
    \ 0;\n        long num = nums[i];\n        while (num != 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        map[sum] = nums[i];\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        result.push_back(it->second);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long temp=0;\n        long temp2=nums[i];\n        while(temp2!=0){\n \
    \           temp+=temp2%10;\n            temp2/=10;\n        }\n        sum.push_back(temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<sum.size();i++){\n    \
    \    for(int j=i+1;j<sum.size();j++){\n            if(sum[i]>sum[j]){\n      \
    \          long temp=sum[i];\n                sum[i]=sum[j];\n               \
    \ sum[j]=temp;\n                temp=index[i];\n                index[i]=index[j];\n\
    \                index[j]=temp;\n            }\n        }\n    }\n    for(int\
    \ i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n\
    \        long num = nums[i];\n        if (num < 0) {\n            num = -num;\n\
    \        }\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (long i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        if (num < 0) {\n            num = num * -1;\n      \
    \  }\n        while (num > 0) {\n            sum += num % 10;\n            num\
    \ = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        for (long i = 0; i\
    \ < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        int temp=0;\n        int\
    \ n=nums[i];\n        if(n<0){\n            n=n*-1;\n        }\n        while(n>0){\n\
    \            temp+=n%10;\n            n=n/10;\n        }\n        sum.push_back(temp);\n\
    \    }\n    std::vector<int> index;\n    for(int i=0;i<nums.size();i++){\n   \
    \     index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n      \
    \  for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n       \
    \         int temp=sum[i];\n                sum[i]=sum[j];\n                sum[j]=temp;\n\
    \                temp=nums[i];\n                nums[i]=nums[j];\n           \
    \     nums[j]=temp;\n                temp=index[i];\n                index[i]=index[j];\n\
    \                index[j]=temp;\n            }\n            else if(sum[i]==sum[j]){\n\
    \                if(index[i]>index[j]){\n                    int temp=sum[i];\n\
    \                    sum[i]=sum[j];\n                    sum[j]=temp;\n      \
    \              temp=nums[i];\n                    nums[i]=nums[j];\n         \
    \           nums[j]=temp;\n                    temp=index[i];\n              \
    \      index[i]=index[j];\n                    index[j]=temp;\n              \
    \  }\n            }\n        }\n    }\n    for(int i=0;i<nums.size();i++){\n \
    \       result.push_back(nums[i]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<long, long> map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        long n = nums[i];\n        while (n !=\
    \ 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        map[sum]\
    \ = nums[i];\n    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n\
    \        result.push_back(it->second);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n  \
    \      while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        long temp=0;\n        long\
    \ n=nums[i];\n        while(n!=0){\n            temp+=n%10;\n            n/=10;\n\
    \        }\n        sum.push_back(temp);\n    }\n    std::vector<long> temp=nums;\n\
    \    std::sort(temp.begin(),temp.end());\n    for(int i=0;i<temp.size();i++){\n\
    \        for(int j=0;j<nums.size();j++){\n            if(temp[i]==nums[j]){\n\
    \                result.push_back(nums[j]);\n                nums[j]=0;\n    \
    \            break;\n            }\n        }\n    }\n    return result;", " \
    \   std::vector<long> result;\n    std::vector<long> sum_of_digits;\n    std::vector<long>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        long sum=0;\n        long\
    \ temp=nums[i];\n        while(temp!=0){\n            sum+=temp%10;\n        \
    \    temp/=10;\n        }\n        sum_of_digits.push_back(sum);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum_of_digits[i]>sum_of_digits[j]){\n                long temp=sum_of_digits[i];\n\
    \                sum_of_digits[i]=sum_of_digits[j];\n                sum_of_digits[j]=temp;\n\
    \                temp=index[i];\n                index[i]=index[j];\n        \
    \        index[j]=temp;\n            }\n        }\n    }\n    for(int i=0;i<nums.size();i++){\n\
    \        result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<int, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        int sum = 0;\n        int num = nums[i];\n    \
    \    while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::map<int, int> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int n = nums[i];\n\
    \        if (n < 0) {\n            n = n * -1;\n        }\n        while (n >\
    \ 0) {\n            sum += n % 10;\n            n = n / 10;\n        }\n     \
    \   map[sum] = nums[i];\n    }\n    for (auto it = map.begin(); it != map.end();\
    \ it++) {\n        result.push_back(it->second);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (auto num : nums) {\n        long sum = 0;\n        if (num < 0) {\n   \
    \         num = -num;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(num);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (auto num : it->second) {\n            result.push_back(num);\n        }\n \
    \   }\n    return result;", "  std::vector<long> result;\n  std::map<int, std::vector<long>>\
    \ m;\n  for (auto i : nums) {\n    int sum = 0;\n    int n = i;\n    if (n < 0)\
    \ {\n      n = -n;\n    }\n    while (n != 0) {\n      sum += n % 10;\n      n\
    \ /= 10;\n    }\n    m[sum].push_back(i);\n  }\n  for (auto i : m) {\n    for\
    \ (auto j : i.second) {\n      result.push_back(j);\n    }\n  }\n  return result;",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        int temp=nums[i];\n   \
    \     int sum_temp=0;\n        while(temp!=0){\n            sum_temp+=temp%10;\n\
    \            temp/=10;\n        }\n        sum.push_back(sum_temp);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                int temp=sum[i];\n          \
    \      sum[i]=sum[j];\n                sum[j]=temp;\n                temp=index[i];\n\
    \                index[i]=index[j];\n                index[j]=temp;\n        \
    \    }\n        }\n    }\n    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long sum_of_digits = 0;\n    long temp\
    \ = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        temp = nums[i];\n\
    \        if(temp < 0) {\n            temp = temp * -1;\n        }\n        while(temp\
    \ > 0) {\n            sum_of_digits = sum_of_digits + temp % 10;\n           \
    \ temp = temp / 10;\n        }\n        sum.push_back(sum_of_digits);\n      \
    \  sum_of_digits = 0;\n    }\n    for(int i = 0; i < nums.size(); i++) {\n   \
    \     index.push_back(i);\n    }\n    for(int i = 0; i < nums.size(); i++) {\n\
    \        for(int j = i + 1; j < nums.size(); j++) {\n            if(sum[i] > sum[j])\
    \ {\n                std::swap(sum[i], sum[j]);\n                std::swap(nums[i],\
    \ nums[j]);\n                std::swap(index[i], index[j]);\n            }\n \
    \           else if(sum[i] == sum[j]) {\n                if(index[i] > index[j])\
    \ {\n                    std::swap(sum[i], sum[j]);\n                    std::swap(nums[i],\
    \ nums[j]);\n                    std::swap(index[i], index[j]);\n            \
    \    }\n            }\n        }\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum;\n    for(int i=0;i<nums.size();i++){\n \
    \       long temp=nums[i];\n        long sum_temp=0;\n        while(temp!=0){\n\
    \            sum_temp+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_temp);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        long min=sum[i];\n      \
    \  int index=i;\n        for(int j=i+1;j<nums.size();j++){\n            if(sum[j]<min){\n\
    \                min=sum[j];\n                index=j;\n            }\n      \
    \  }\n        std::swap(sum[i],sum[index]);\n        std::swap(nums[i],nums[index]);\n\
    \    }\n    return nums;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n\
    \            sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    std::map<int,\
    \ std::vector<long>> mp;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  int sum = 0;\n        long num = nums[i];\n        if (num < 0) num *= -1;\n\
    \        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        mp[sum].push_back(nums[i]);\n    }\n    for (auto it = mp.begin();\
    \ it != mp.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            res.push_back(it->second[i]);\n        }\n    }\n    return res;",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (long num : nums) {\n        int sum = 0;\n        if (num < 0) {\n        \
    \    num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(num);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long num : it->second) {\n            result.push_back(num);\n        }\n \
    \   }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (auto num : nums) {\n        long sum = 0;\n\
    \        if (num < 0) {\n            num = -num;\n        }\n        while (num)\
    \ {\n            sum += num % 10;\n            num /= 10;\n        }\n       \
    \ map[sum].push_back(num);\n    }\n    for (auto it = map.begin(); it != map.end();\
    \ it++) {\n        for (auto num : it->second) {\n            result.push_back(num);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    std::map<int,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ int sum = 0;\n        long n = nums[i];\n        if (n < 0) {\n            n\
    \ = -n;\n        }\n        while (n > 0) {\n            sum += n % 10;\n    \
    \        n /= 10;\n        }\n        m[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = m.begin(); it != m.end(); it++) {\n        for (int i = 0; i < it->second.size();\
    \ i++) {\n            res.push_back(it->second[i]);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> result;\n    std::vector<int> sum_of_digits;\n\
    \    int sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum =\
    \ 0;\n        while (nums[i] != 0) {\n            sum += nums[i] % 10;\n     \
    \       nums[i] /= 10;\n        }\n        sum_of_digits.push_back(sum);\n   \
    \ }\n    std::vector<int> sorted_sum_of_digits = sum_of_digits;\n    std::sort(sorted_sum_of_digits.begin(),\
    \ sorted_sum_of_digits.end());\n    for (int i = 0; i < sorted_sum_of_digits.size();\
    \ i++) {\n        for (int j = 0; j < sum_of_digits.size(); j++) {\n         \
    \   if (sorted_sum_of_digits[i] == sum_of_digits[j]) {\n                result.push_back(nums[j]);\n\
    \                sum_of_digits[j] = -1;\n                break;\n            }\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    int sum_of_digits = 0;\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        sum_of_digits = 0;\n        while (nums[i] != 0) {\n            sum_of_digits\
    \ += nums[i] % 10;\n            nums[i] /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \    }\n    int min = sum[0];\n    int index = 0;\n    for (int i = 0; i < sum.size();\
    \ i++) {\n        min = sum[i];\n        index = i;\n        for (int j = i; j\
    \ < sum.size(); j++) {\n            if (sum[j] < min) {\n                min =\
    \ sum[j];\n                index = j;\n            }\n        }\n        std::swap(sum[i],\
    \ sum[index]);\n        std::swap(nums[i], nums[index]);\n    }\n    return nums;",
  "    std::vector<long> result;\n    std::vector<int> sums;\n    for (int i = 0;\
    \ i < nums.size(); i++) {\n        int sum = 0;\n        int num = nums[i];\n\
    \        while (num != 0) {\n            sum += num % 10;\n            num /=\
    \ 10;\n        }\n        sums.push_back(sum);\n    }\n    std::vector<int> sorted_sums\
    \ = sums;\n    std::sort(sorted_sums.begin(), sorted_sums.end());\n    for (int\
    \ i = 0; i < sorted_sums.size(); i++) {\n        for (int j = 0; j < sums.size();\
    \ j++) {\n            if (sorted_sums[i] == sums[j]) {\n                result.push_back(nums[j]);\n\
    \                sums[j] = -1;\n                break;\n            }\n      \
    \  }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = num * -1;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n         \
    \   num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long temp=nums[i];\n        long sum_temp=0;\n        while(temp!=0){\n\
    \            sum_temp+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n   \
    \     for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n    \
    \            long temp=sum[i];\n                sum[i]=sum[j];\n             \
    \   sum[j]=temp;\n                temp=nums[i];\n                nums[i]=nums[j];\n\
    \                nums[j]=temp;\n                temp=index[i];\n             \
    \   index[i]=index[j];\n                index[j]=temp;\n            }\n      \
    \      else if(sum[i]==sum[j]){\n                if(index[i]>index[j]){\n    \
    \                long temp=sum[i];\n                    sum[i]=sum[j];\n     \
    \               sum[j]=temp;\n                    temp=nums[i];\n            \
    \        nums[i]=nums[j];\n                    nums[j]=temp;\n               \
    \     temp=index[i];\n                    index[i]=index[j];\n               \
    \     index[j]=temp;\n                }\n            }\n        }\n    }\n   \
    \ for(int i=0;i<nums.size();i++){\n        result.push_back(nums[i]);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        if (num < 0) {\n            num = num * -1;\n\
    \        }\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::map<int, std::vector<long>> m;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        if (num < 0) {\n            num = num * -1;\n        }\n \
    \       while (num > 0) {\n            sum += num % 10;\n            num = num\
    \ / 10;\n        }\n        m[sum].push_back(nums[i]);\n    }\n    for (auto itr\
    \ = m.begin(); itr != m.end(); itr++) {\n        for (int i = 0; i < itr->second.size();\
    \ i++) {\n            result.push_back(itr->second[i]);\n        }\n    }\n  \
    \  return result;"]
stop_tokens:
- "\n}"

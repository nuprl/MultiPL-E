name: HumanEval_145_order_by_points
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function which sorts\
  \ the given vector of integers\n// in ascending order according to the sum of their\
  \ digits.\n// Note: if there are several items with similar sum of their digits,\n\
  // order them based on their index in original vector.\n// For example:\n// >>>\
  \ order_by_points((std::vector<long>({(long)1, (long)11, (long)-1, (long)-11, (long)-12})))\n\
  // (std::vector<long>({(long)-1, (long)-11, (long)1, (long)-12, (long)11}))\n//\
  \ >>> order_by_points((std::vector<long>()))\n// (std::vector<long>())\nstd::vector<long>\
  \ order_by_points(std::vector<long> nums) {\n"
tests: "}\nint main() {\n    auto candidate = order_by_points;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)11, (long)-1, (long)-11, (long)-12}))) == (std::vector<long>({(long)-1,\
  \ (long)-11, (long)1, (long)-12, (long)11})));\n    assert(candidate((std::vector<long>({(long)1234,\
  \ (long)423, (long)463, (long)145, (long)2, (long)423, (long)423, (long)53, (long)6,\
  \ (long)37, (long)3457, (long)3, (long)56, (long)0, (long)46}))) == (std::vector<long>({(long)0,\
  \ (long)2, (long)3, (long)6, (long)53, (long)423, (long)423, (long)423, (long)1234,\
  \ (long)145, (long)37, (long)46, (long)56, (long)463, (long)3457})));\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)-11, (long)-32, (long)43, (long)54, (long)-98, (long)2, (long)-3}))) ==\
  \ (std::vector<long>({(long)-3, (long)-32, (long)-98, (long)-11, (long)1, (long)2,\
  \ (long)43, (long)54})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)4, (long)5, (long)6, (long)7, (long)8, (long)9, (long)10, (long)11})))\
  \ == (std::vector<long>({(long)1, (long)10, (long)2, (long)11, (long)3, (long)4,\
  \ (long)5, (long)6, (long)7, (long)8, (long)9})));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)6, (long)6, (long)-76, (long)-21, (long)23, (long)4}))) == (std::vector<long>({(long)-76,\
  \ (long)-21, (long)0, (long)4, (long)23, (long)6, (long)6})));\n}\n"
completions: ["    std::vector<long> res;\n    std::map<int, std::vector<long>> mp;\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int\
    \ temp = nums[i];\n        while (temp) {\n            sum += temp % 10;\n   \
    \         temp /= 10;\n        }\n        mp[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = mp.begin(); it != mp.end(); it++) {\n        for (int i =\
    \ 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n     \
    \       num = -num;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n     \
    \       sum += num % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n      \
    \      num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ long> map;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum =\
    \ 0;\n        long num = nums[i];\n        while (num != 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        map[sum] = nums[i];\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        result.push_back(it->second);\n\
    \    }\n    return result;", "  std::vector<long> result;\n  std::map<int, std::vector<long>>\
    \ map;\n  for (int i = 0; i < nums.size(); i++) {\n    int sum = 0;\n    long\
    \ num = nums[i];\n    if (num < 0) {\n      num = num * -1;\n    }\n    while\
    \ (num > 0) {\n      sum += num % 10;\n      num = num / 10;\n    }\n    map[sum].push_back(nums[i]);\n\
    \  }\n  for (auto it = map.begin(); it != map.end(); it++) {\n    std::vector<long>\
    \ temp = it->second;\n    for (int i = 0; i < temp.size(); i++) {\n      result.push_back(temp[i]);\n\
    \    }\n  }\n  return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ temp;\n    std::vector<long> temp2;\n    std::vector<long> temp3;\n    std::vector<long>\
    \ temp4;\n    std::vector<long> temp5;\n    std::vector<long> temp6;\n    std::vector<long>\
    \ temp7;\n    std::vector<long> temp8;\n    std::vector<long> temp9;\n    std::vector<long>\
    \ temp10;\n    std::vector<long> temp11;\n    std::vector<long> temp12;\n    std::vector<long>\
    \ temp13;\n    std::vector<long> temp14;\n    std::vector<long> temp15;\n    std::vector<long>\
    \ temp16;\n    std::vector<long> temp17;\n    std::vector<long> temp18;\n    std::vector<long>\
    \ temp19;\n    std::vector<long> temp20;\n    std::vector<long> temp21;\n    std::vector<long>\
    \ temp22;\n    std::vector<long> temp23;\n    std::vector<long> temp24;\n    std::vector<long>\
    \ temp25;\n    std::vector<long> temp26;\n    std::vector<long> temp27;\n    std::vector<long>\
    \ temp28;\n    std::vector<long> temp29;\n    std::vector<long> temp30;\n    std::vector<long>\
    \ temp31;\n    std::vector<long> temp32;\n    std::vector<long> temp33;\n    std::vector<long>\
    \ temp34;\n    std::vector<long> temp35;\n    std::vector<long> temp36;\n    std::vector<long>\
    \ temp37;\n    std::vector<long> temp38;\n    std::vector<long> temp39;\n    std::vector<long>\
    \ temp40;\n    std::vector<long> temp41;\n    std::vector<long> temp42;\n    std::vector<long>\
    \ temp43;\n    std::vector<long> temp44;\n    std::vector<long> temp45;\n    std::vector<long>",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    for(int i=0;i<nums.size();i++){\n\
    \        long temp=nums[i];\n        long sum_temp=0;\n        while(temp!=0){\n\
    \            sum_temp+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_temp);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        int min=i;\n        for(int\
    \ j=i+1;j<nums.size();j++){\n            if(sum[j]<sum[min]){\n              \
    \  min=j;\n            }\n        }\n        long temp=sum[i];\n        sum[i]=sum[min];\n\
    \        sum[min]=temp;\n        temp=nums[i];\n        nums[i]=nums[min];\n \
    \       nums[min]=temp;\n    }\n    return nums;", "    std::vector<long> result;\n\
    \    std::map<int, std::vector<long>> map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        long num = nums[i];\n        while (num\
    \ != 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n \
    \       map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin(); it\
    \ != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<int> sum;\n    std::vector<int>\
    \ index;\n    int temp;\n    int temp_index;\n    int temp_sum;\n    for(int i=0;i<nums.size();i++){\n\
    \        temp=nums[i];\n        temp_index=i;\n        temp_sum=0;\n        while(temp!=0){\n\
    \            temp_sum+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(temp_sum);\n\
    \        index.push_back(temp_index);\n    }\n    for(int i=0;i<nums.size();i++){\n\
    \        for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n \
    \               temp=sum[i];\n                sum[i]=sum[j];\n               \
    \ sum[j]=temp;\n                temp=index[i];\n                index[i]=index[j];\n\
    \                index[j]=temp;\n            }\n        }\n    }\n    for(int\
    \ i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        if (num < 0) {\n            num = -num;\n \
    \       }\n        while (num > 0) {\n            sum += num % 10;\n         \
    \   num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0; i\
    \ < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = num * -1;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (auto num : nums) {\n        int sum = 0;\n\
    \        int n = num;\n        if (num < 0) {\n            n = -num;\n       \
    \ }\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n\
    \        }\n        map[sum].push_back(num);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        std::sort(it->second.begin(), it->second.end());\n\
    \        for (auto num : it->second) {\n            result.push_back(num);\n \
    \       }\n    }\n    return result;", "    std::vector<long> result;\n    if\
    \ (nums.size() == 0) {\n        return result;\n    }\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        if (num < 0) {\n            num = -num;\n \
    \       }\n        while (num > 0) {\n            sum += num % 10;\n         \
    \   num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0; i\
    \ < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    int temp = 0;\n    for(int i = 0; i < nums.size(); i++){\n       \
    \ temp = 0;\n        while(nums[i] != 0){\n            temp += nums[i] % 10;\n\
    \            nums[i] /= 10;\n        }\n        sum.push_back(temp);\n    }\n\
    \    for(int i = 0; i < nums.size(); i++){\n        int min = sum[i];\n      \
    \  int index = i;\n        for(int j = i; j < nums.size(); j++){\n           \
    \ if(sum[j] < min){\n                min = sum[j];\n                index = j;\n\
    \            }\n        }\n        std::swap(sum[i], sum[index]);\n        std::swap(nums[i],\
    \ nums[index]);\n    }\n    return nums;", "    std::vector<long> result;\n  \
    \  std::map<int, std::vector<long>> map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int num = nums[i];\n        if (num <\
    \ 0) {\n            num = -num;\n        }\n        while (num > 0) {\n      \
    \      sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        while (num != 0) {\n            sum += num % 10;\n       \
    \     num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n   \
    \ for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0;\
    \ i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;"]
stop_tokens:
- "\n}"

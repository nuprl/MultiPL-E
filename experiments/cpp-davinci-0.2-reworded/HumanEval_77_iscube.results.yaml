language: cpp
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) {\n      \
    \  return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    long b =\
    \ 0;\n    while (b * b * b < a) {\n        b++;\n    }\n    return b * b * b ==\
    \ a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxck7cj9z.cpp: In function 'int main()':\n/tmp/tmpxck7cj9z.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxck7cj9z.cpp:2:\n/tmp/tmpxck7cj9z.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) x++;\n   \
    \ return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5tglo36c.cpp: In function 'int main()':\n/tmp/tmp5tglo36c.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5tglo36c.cpp:2:\n/tmp/tmp5tglo36c.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) x++;\n   \
    \ return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5tglo36c.cpp: In function 'int main()':\n/tmp/tmp5tglo36c.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5tglo36c.cpp:2:\n/tmp/tmp5tglo36c.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n\tlong b = std::cbrt(a);\n\
    \treturn b*b*b == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgqt3b2ix.cpp: In function 'bool iscube(long int)':\n/tmp/tmpgqt3b2ix.cpp:20:11:\
    \ error: 'cbrt' is not a member of 'std'\n  long b = std::cbrt(a);\n         \
    \  ^\n/tmp/tmpgqt3b2ix.cpp:20:11: note: suggested alternative:\nIn file included\
    \ from /usr/include/features.h:375:0,\n                 from /usr/include/assert.h:36,\n\
    \                 from /tmp/tmpgqt3b2ix.cpp:1:\n/usr/include/bits/mathcalls.h:170:1:\
    \ note:   'cbrt'\n __MATHCALL (cbrt,, (_Mdouble_ __x));\n ^\n/tmp/tmpgqt3b2ix.cpp:\
    \ In function 'int main()':\n/tmp/tmpgqt3b2ix.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = iscube;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgqt3b2ix.cpp:2:\n/tmp/tmpgqt3b2ix.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long b =\
    \ 1;\n    while (b * b * b < a) {\n        b++;\n    }\n    return b * b * b ==\
    \ a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjynugpzf.cpp: In function 'int main()':\n/tmp/tmpjynugpzf.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjynugpzf.cpp:2:\n/tmp/tmpjynugpzf.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n  if (a == 0) {\n    return\
    \ true;\n  }\n  if (a < 0) {\n    a = -a;\n  }\n  long i = 1;\n  while (i*i*i\
    \ <= a) {\n    if (i*i*i == a) {\n      return true;\n    }\n    i++;\n  }\n \
    \ return false;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi8y3tylr.cpp: In function 'int main()':\n/tmp/tmpi8y3tylr.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi8y3tylr.cpp:2:\n/tmp/tmpi8y3tylr.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    long x = 0;\n    while (x * x * x < a) {\n        x++;\n\
    \    }\n    return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n\
    \    assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpacwyt_vv.cpp: In function 'int main()':\n/tmp/tmpacwyt_vv.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpacwyt_vv.cpp:2:\n/tmp/tmpacwyt_vv.cpp:31:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) {\n      \
    \  return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8kxyya4n.cpp: In function 'int main()':\n/tmp/tmp8kxyya4n.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8kxyya4n.cpp:2:\n/tmp/tmp8kxyya4n.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n  if (a == 0) return true;\n\
    \  if (a < 0) a = -a;\n  long x = 1;\n  while (x * x * x < a) {\n    x++;\n  }\n\
    \  return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n   \
    \ assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpt37tilww.cpp: In function 'int main()':\n/tmp/tmpt37tilww.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt37tilww.cpp:2:\n/tmp/tmpt37tilww.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    // your code here\n  \
    \  if(a<0)\n        a=-a;\n    if(a==0)\n        return true;\n    long i=1;\n\
    \    while(i*i*i<=a)\n    {\n        if(i*i*i==a)\n            return true;\n\
    \        i++;\n    }\n    return false;\n}\nint main() {\n    auto candidate =\
    \ iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2)) ==\
    \ (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpry3u63i3.cpp: In function 'int main()':\n/tmp/tmpry3u63i3.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpry3u63i3.cpp:2:\n/tmp/tmpry3u63i3.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long i = 1;\n    while (i*i*i <= a) {\n        if\
    \ (i*i*i == a) return true;\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd3vzuywe.cpp: In function 'int main()':\n/tmp/tmpd3vzuywe.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd3vzuywe.cpp:2:\n/tmp/tmpd3vzuywe.cpp:31:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpguy0fsxk.cpp: In function 'int main()':\n/tmp/tmpguy0fsxk.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpguy0fsxk.cpp:2:\n/tmp/tmpguy0fsxk.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long x =\
    \ 1;\n    while (x * x * x < a) {\n        x++;\n    }\n    return x * x * x ==\
    \ a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb9hwz2z9.cpp: In function 'int main()':\n/tmp/tmpb9hwz2z9.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpb9hwz2z9.cpp:2:\n/tmp/tmpb9hwz2z9.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0)\n        a\
    \ = -a;\n    long x = 0;\n    while (x * x * x < a) {\n        x++;\n    }\n \
    \   return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n  \
    \  assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpusndoqhr.cpp: In function 'int main()':\n/tmp/tmpusndoqhr.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpusndoqhr.cpp:2:\n/tmp/tmpusndoqhr.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0)\n        a\
    \ = -a;\n    if (a == 0)\n        return true;\n    long i = 1;\n    while (i\
    \ * i * i <= a) {\n        if (i * i * i == a)\n            return true;\n   \
    \     i++;\n    }\n    return false;\n}\nint main() {\n    auto candidate = iscube;\n\
    \    assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5suru_gr.cpp: In function 'int main()':\n/tmp/tmp5suru_gr.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5suru_gr.cpp:2:\n/tmp/tmp5suru_gr.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) {\n      \
    \  return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8kxyya4n.cpp: In function 'int main()':\n/tmp/tmp8kxyya4n.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8kxyya4n.cpp:2:\n/tmp/tmp8kxyya4n.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0)\n        a\
    \ = -a;\n    if (a == 0)\n        return true;\n    long i = 1;\n    while (i\
    \ * i * i <= a) {\n        if (i * i * i == a)\n            return true;\n   \
    \     i++;\n    }\n    return false;\n}\nint main() {\n    auto candidate = iscube;\n\
    \    assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5suru_gr.cpp: In function 'int main()':\n/tmp/tmp5suru_gr.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5suru_gr.cpp:2:\n/tmp/tmp5suru_gr.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    int i = 1;\n    while (i * i * i <= a) {\n      \
    \  if (i * i * i == a) return true;\n        i++;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n\
    \    assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo1xup51y.cpp: In function 'int main()':\n/tmp/tmpo1xup51y.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpo1xup51y.cpp:2:\n/tmp/tmpo1xup51y.cpp:31:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    // Your code here\n  \
    \  if(a<0)\n        a=-a;\n    if(a==0)\n        return true;\n    long i=1;\n\
    \    while(i*i*i<=a)\n    {\n        if(i*i*i==a)\n            return true;\n\
    \        i++;\n    }\n    return false;\n}\nint main() {\n    auto candidate =\
    \ iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2)) ==\
    \ (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpag1dupj9.cpp: In function 'int main()':\n/tmp/tmpag1dupj9.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpag1dupj9.cpp:2:\n/tmp/tmpag1dupj9.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) x++;\n   \
    \ return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5tglo36c.cpp: In function 'int main()':\n/tmp/tmp5tglo36c.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5tglo36c.cpp:2:\n/tmp/tmp5tglo36c.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) {\n      \
    \  return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8kxyya4n.cpp: In function 'int main()':\n/tmp/tmp8kxyya4n.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8kxyya4n.cpp:2:\n/tmp/tmp8kxyya4n.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long x =\
    \ 1;\n    while (x * x * x < a) {\n        x++;\n    }\n    return x * x * x ==\
    \ a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb9hwz2z9.cpp: In function 'int main()':\n/tmp/tmpb9hwz2z9.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpb9hwz2z9.cpp:2:\n/tmp/tmpb9hwz2z9.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long b = 1;\n    while (b * b * b < a) {\n      \
    \  b++;\n    }\n    return b * b * b == a;\n}\nint main() {\n    auto candidate\
    \ = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7f1t7kkm.cpp: In function 'int main()':\n/tmp/tmp7f1t7kkm.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7f1t7kkm.cpp:2:\n/tmp/tmp7f1t7kkm.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) x++;\n   \
    \ return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5tglo36c.cpp: In function 'int main()':\n/tmp/tmp5tglo36c.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5tglo36c.cpp:2:\n/tmp/tmp5tglo36c.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n\tif (a == 0) return true;\n\
    \tif (a < 0) a = -a;\n\tlong left = 0, right = a;\n\twhile (left <= right) {\n\
    \t\tlong mid = left + (right - left) / 2;\n\t\tif (mid * mid * mid == a) return\
    \ true;\n\t\telse if (mid * mid * mid < a) left = mid + 1;\n\t\telse right = mid\
    \ - 1;\n\t}\n\treturn false;\n}\nint main() {\n    auto candidate = iscube;\n\
    \    assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp7yg6tagi.cpp: In function 'int main()':\n/tmp/tmp7yg6tagi.cpp:32:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7yg6tagi.cpp:2:\n/tmp/tmp7yg6tagi.cpp:33:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n  return a == 0 || (a > 0\
    \ && (long)round(pow(a, 1.0/3)) * (long)round(pow(a, 1.0/3)) * (long)round(pow(a,\
    \ 1.0/3)) == a);\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpndl2wq8k.cpp: In function 'int main()':\n/tmp/tmpndl2wq8k.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpndl2wq8k.cpp:2:\n/tmp/tmpndl2wq8k.cpp:24:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) {\n      \
    \  x++;\n    }\n    return x * x * x == a;\n}\nint main() {\n    auto candidate\
    \ = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvuaaa24w.cpp: In function 'int main()':\n/tmp/tmpvuaaa24w.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvuaaa24w.cpp:2:\n/tmp/tmpvuaaa24w.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpguy0fsxk.cpp: In function 'int main()':\n/tmp/tmpguy0fsxk.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpguy0fsxk.cpp:2:\n/tmp/tmpguy0fsxk.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long x = 0;\n    while\
    \ (x * x * x < a) {\n        x++;\n    }\n    return x * x * x == a;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3m9pibpv.cpp: In function 'int main()':\n/tmp/tmp3m9pibpv.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3m9pibpv.cpp:2:\n/tmp/tmp3m9pibpv.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x*x*x < a) {\n        x++;\n\
    \    }\n    return x*x*x == a;\n}\nint main() {\n    auto candidate = iscube;\n\
    \    assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpu909vr81.cpp: In function 'int main()':\n/tmp/tmpu909vr81.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpu909vr81.cpp:2:\n/tmp/tmpu909vr81.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpguy0fsxk.cpp: In function 'int main()':\n/tmp/tmpguy0fsxk.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpguy0fsxk.cpp:2:\n/tmp/tmpguy0fsxk.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) {\n      \
    \  x++;\n    }\n    return x * x * x == a;\n}\nint main() {\n    auto candidate\
    \ = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvuaaa24w.cpp: In function 'int main()':\n/tmp/tmpvuaaa24w.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvuaaa24w.cpp:2:\n/tmp/tmpvuaaa24w.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) a = -a;\n \
    \   if (a == 0) return true;\n    long i = 1;\n    while (i * i * i <= a) {\n\
    \        if (i * i * i == a) return true;\n        i++;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n\
    \    assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp99s71ofm.cpp: In function 'int main()':\n/tmp/tmp99s71ofm.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp99s71ofm.cpp:2:\n/tmp/tmp99s71ofm.cpp:31:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long b = std::cbrt(a);\n\
    \    return a == b * b * b;\n}\nint main() {\n    auto candidate = iscube;\n \
    \   assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpn4fatkjm.cpp: In function 'bool iscube(long int)':\n/tmp/tmpn4fatkjm.cpp:20:14:\
    \ error: 'cbrt' is not a member of 'std'\n     long b = std::cbrt(a);\n      \
    \        ^\n/tmp/tmpn4fatkjm.cpp:20:14: note: suggested alternative:\nIn file\
    \ included from /usr/include/features.h:375:0,\n                 from /usr/include/assert.h:36,\n\
    \                 from /tmp/tmpn4fatkjm.cpp:1:\n/usr/include/bits/mathcalls.h:170:1:\
    \ note:   'cbrt'\n __MATHCALL (cbrt,, (_Mdouble_ __x));\n ^\n/tmp/tmpn4fatkjm.cpp:\
    \ In function 'int main()':\n/tmp/tmpn4fatkjm.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = iscube;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn4fatkjm.cpp:2:\n/tmp/tmpn4fatkjm.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n  long b = 0;\n  while (b\
    \ * b * b < a) {\n    b++;\n  }\n  return b * b * b == a;\n}\nint main() {\n \
    \   auto candidate = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxw_dpca9.cpp: In function 'int main()':\n/tmp/tmpxw_dpca9.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxw_dpca9.cpp:2:\n/tmp/tmpxw_dpca9.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long x =\
    \ 1;\n    while (x * x * x < a) {\n        x += 1;\n    }\n    return x * x *\
    \ x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr0hbcady.cpp: In function 'int main()':\n/tmp/tmpr0hbcady.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpr0hbcady.cpp:2:\n/tmp/tmpr0hbcady.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n  if (a == 0) {\n    return\
    \ true;\n  }\n  if (a < 0) {\n    a = -a;\n  }\n  long i = 1;\n  while (i * i\
    \ * i <= a) {\n    if (i * i * i == a) {\n      return true;\n    }\n    i++;\n\
    \  }\n  return false;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpred8lbqx.cpp: In function 'int main()':\n/tmp/tmpred8lbqx.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpred8lbqx.cpp:2:\n/tmp/tmpred8lbqx.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long b = std::cbrt(a);\n\
    \    return a == b * b * b;\n}\nint main() {\n    auto candidate = iscube;\n \
    \   assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpn4fatkjm.cpp: In function 'bool iscube(long int)':\n/tmp/tmpn4fatkjm.cpp:20:14:\
    \ error: 'cbrt' is not a member of 'std'\n     long b = std::cbrt(a);\n      \
    \        ^\n/tmp/tmpn4fatkjm.cpp:20:14: note: suggested alternative:\nIn file\
    \ included from /usr/include/features.h:375:0,\n                 from /usr/include/assert.h:36,\n\
    \                 from /tmp/tmpn4fatkjm.cpp:1:\n/usr/include/bits/mathcalls.h:170:1:\
    \ note:   'cbrt'\n __MATHCALL (cbrt,, (_Mdouble_ __x));\n ^\n/tmp/tmpn4fatkjm.cpp:\
    \ In function 'int main()':\n/tmp/tmpn4fatkjm.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = iscube;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn4fatkjm.cpp:2:\n/tmp/tmpn4fatkjm.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n\tif (a == 0) return true;\n\
    \tif (a < 0) a = -a;\n\tlong x = 1;\n\twhile (x * x * x < a) x++;\n\treturn x\
    \ * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa23ho9ta.cpp: In function 'int main()':\n/tmp/tmpa23ho9ta.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpa23ho9ta.cpp:2:\n/tmp/tmpa23ho9ta.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n\treturn (a == 0 || a == 1\
    \ || a == -1 || (a > 0 && (long)cbrt(a) * (long)cbrt(a) * (long)cbrt(a) == a));\n\
    }\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n\
    \    assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpviwhs5nj.cpp: In function 'int main()':\n/tmp/tmpviwhs5nj.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpviwhs5nj.cpp:2:\n/tmp/tmpviwhs5nj.cpp:24:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n  if (a == 0) return true;\n\
    \  if (a < 0) a = -a;\n  long b = 1;\n  while (b*b*b < a) b++;\n  return b*b*b\
    \ == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzjtoex_1.cpp: In function 'int main()':\n/tmp/tmpzjtoex_1.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzjtoex_1.cpp:2:\n/tmp/tmpzjtoex_1.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long i = 1;\n    while (i * i * i < a) i++;\n   \
    \ return i * i * i == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5pa9az2x.cpp: In function 'int main()':\n/tmp/tmp5pa9az2x.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5pa9az2x.cpp:2:\n/tmp/tmp5pa9az2x.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) {\n      \
    \  return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8kxyya4n.cpp: In function 'int main()':\n/tmp/tmp8kxyya4n.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8kxyya4n.cpp:2:\n/tmp/tmp8kxyya4n.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n\tif (a < 0) {\n\t\ta = -a;\n\
    \t}\n\tif (a == 0) {\n\t\treturn true;\n\t}\n\tlong i = 1;\n\twhile (i * i * i\
    \ <= a) {\n\t\tif (i * i * i == a) {\n\t\t\treturn true;\n\t\t}\n\t\ti++;\n\t\
    }\n\treturn false;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwv8dbvgr.cpp: In function 'int main()':\n/tmp/tmpwv8dbvgr.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwv8dbvgr.cpp:2:\n/tmp/tmpwv8dbvgr.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long b = (long)round(pow(a, 1.0/3.0));\n    return\
    \ a == b*b*b;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphijou6_n.cpp: In function 'int main()':\n/tmp/tmphijou6_n.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphijou6_n.cpp:2:\n/tmp/tmphijou6_n.cpp:27:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long x =\
    \ 1;\n    while (x * x * x < a) {\n        x += 1;\n    }\n    return x * x *\
    \ x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr0hbcady.cpp: In function 'int main()':\n/tmp/tmpr0hbcady.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpr0hbcady.cpp:2:\n/tmp/tmpr0hbcady.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long b = (long)pow(a, 1.0/3);\n    return b*b*b ==\
    \ a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8pgxsr4k.cpp: In function 'int main()':\n/tmp/tmp8pgxsr4k.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8pgxsr4k.cpp:2:\n/tmp/tmp8pgxsr4k.cpp:27:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) a = -a;\n \
    \   if (a == 0) return true;\n    long x = 1;\n    while (x * x * x < a) x++;\n\
    \    return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n \
    \   assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzuisqst0.cpp: In function 'int main()':\n/tmp/tmpzuisqst0.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzuisqst0.cpp:2:\n/tmp/tmpzuisqst0.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long i = 1;\n    while (i * i * i < a) i++;\n   \
    \ return i * i * i == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5pa9az2x.cpp: In function 'int main()':\n/tmp/tmp5pa9az2x.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5pa9az2x.cpp:2:\n/tmp/tmp5pa9az2x.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) {\n      \
    \  return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8kxyya4n.cpp: In function 'int main()':\n/tmp/tmp8kxyya4n.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8kxyya4n.cpp:2:\n/tmp/tmp8kxyya4n.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n\tlong b = a;\n\tif (a < 0)\
    \ {\n\t\tb = -a;\n\t}\n\tlong c = 0;\n\twhile (c * c * c < b) {\n\t\tc++;\n\t\
    }\n\treturn c * c * c == b;\n}\nint main() {\n    auto candidate = iscube;\n \
    \   assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp4usj1ebj.cpp: In function 'int main()':\n/tmp/tmp4usj1ebj.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4usj1ebj.cpp:2:\n/tmp/tmp4usj1ebj.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    return a == 0 || (a >\
    \ 0 && (long)cbrt(a) * (long)cbrt(a) * (long)cbrt(a) == a);\n}\nint main() {\n\
    \    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprzinwsgh.cpp: In function 'int main()':\n/tmp/tmprzinwsgh.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprzinwsgh.cpp:2:\n/tmp/tmprzinwsgh.cpp:24:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) x++;\n   \
    \ return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5tglo36c.cpp: In function 'int main()':\n/tmp/tmp5tglo36c.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5tglo36c.cpp:2:\n/tmp/tmp5tglo36c.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) {\n      \
    \  return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8kxyya4n.cpp: In function 'int main()':\n/tmp/tmp8kxyya4n.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8kxyya4n.cpp:2:\n/tmp/tmp8kxyya4n.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) x++;\n   \
    \ return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5tglo36c.cpp: In function 'int main()':\n/tmp/tmp5tglo36c.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5tglo36c.cpp:2:\n/tmp/tmp5tglo36c.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpguy0fsxk.cpp: In function 'int main()':\n/tmp/tmpguy0fsxk.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpguy0fsxk.cpp:2:\n/tmp/tmpguy0fsxk.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpguy0fsxk.cpp: In function 'int main()':\n/tmp/tmpguy0fsxk.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpguy0fsxk.cpp:2:\n/tmp/tmpguy0fsxk.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) {\n      \
    \  x++;\n    }\n    return x * x * x == a;\n}\nint main() {\n    auto candidate\
    \ = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvuaaa24w.cpp: In function 'int main()':\n/tmp/tmpvuaaa24w.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvuaaa24w.cpp:2:\n/tmp/tmpvuaaa24w.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) {\n      \
    \  x++;\n    }\n    return x * x * x == a;\n}\nint main() {\n    auto candidate\
    \ = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvuaaa24w.cpp: In function 'int main()':\n/tmp/tmpvuaaa24w.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvuaaa24w.cpp:2:\n/tmp/tmpvuaaa24w.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long x =\
    \ 1;\n    while (x * x * x < a) {\n        x += 1;\n    }\n    return x * x *\
    \ x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr0hbcady.cpp: In function 'int main()':\n/tmp/tmpr0hbcady.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpr0hbcady.cpp:2:\n/tmp/tmpr0hbcady.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n  long x = 1;\n  while (x\
    \ * x * x < a) {\n    x++;\n  }\n  return x * x * x == a;\n}\nint main() {\n \
    \   auto candidate = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp51vcnw7z.cpp: In function 'int main()':\n/tmp/tmp51vcnw7z.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp51vcnw7z.cpp:2:\n/tmp/tmp51vcnw7z.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long b = std::abs(a);\n\
    \    long c = std::cbrt(b);\n    return b == c * c * c;\n}\nint main() {\n   \
    \ auto candidate = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp77lk66gd.cpp: In function 'bool iscube(long int)':\n/tmp/tmp77lk66gd.cpp:21:14:\
    \ error: 'cbrt' is not a member of 'std'\n     long c = std::cbrt(b);\n      \
    \        ^\n/tmp/tmp77lk66gd.cpp:21:14: note: suggested alternative:\nIn file\
    \ included from /usr/include/features.h:375:0,\n                 from /usr/include/assert.h:36,\n\
    \                 from /tmp/tmp77lk66gd.cpp:1:\n/usr/include/bits/mathcalls.h:170:1:\
    \ note:   'cbrt'\n __MATHCALL (cbrt,, (_Mdouble_ __x));\n ^\n/tmp/tmp77lk66gd.cpp:\
    \ In function 'int main()':\n/tmp/tmp77lk66gd.cpp:25:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = iscube;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp77lk66gd.cpp:2:\n/tmp/tmp77lk66gd.cpp:26:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) x++;\n   \
    \ return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5tglo36c.cpp: In function 'int main()':\n/tmp/tmp5tglo36c.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5tglo36c.cpp:2:\n/tmp/tmp5tglo36c.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) {\n      \
    \  x++;\n    }\n    return x * x * x == a;\n}\nint main() {\n    auto candidate\
    \ = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvuaaa24w.cpp: In function 'int main()':\n/tmp/tmpvuaaa24w.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvuaaa24w.cpp:2:\n/tmp/tmpvuaaa24w.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) {\n      \
    \  x++;\n    }\n    return x * x * x == a;\n}\nint main() {\n    auto candidate\
    \ = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvuaaa24w.cpp: In function 'int main()':\n/tmp/tmpvuaaa24w.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvuaaa24w.cpp:2:\n/tmp/tmpvuaaa24w.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) x++;\n   \
    \ return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5tglo36c.cpp: In function 'int main()':\n/tmp/tmp5tglo36c.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5tglo36c.cpp:2:\n/tmp/tmp5tglo36c.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) {\n      \
    \  return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    long b =\
    \ 1;\n    while (b * b * b < a) {\n        b++;\n    }\n    return b * b * b ==\
    \ a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3ebrnsep.cpp: In function 'int main()':\n/tmp/tmp3ebrnsep.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3ebrnsep.cpp:2:\n/tmp/tmp3ebrnsep.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) x++;\n   \
    \ return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5tglo36c.cpp: In function 'int main()':\n/tmp/tmp5tglo36c.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5tglo36c.cpp:2:\n/tmp/tmp5tglo36c.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n\tif (a == 0) return true;\n\
    \tif (a < 0) a = -a;\n\tlong b = std::cbrt(a);\n\treturn b * b * b == a;\n}\n\
    int main() {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n\
    \    assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp13l3s6cu.cpp: In function 'bool iscube(long int)':\n/tmp/tmp13l3s6cu.cpp:22:11:\
    \ error: 'cbrt' is not a member of 'std'\n  long b = std::cbrt(a);\n         \
    \  ^\n/tmp/tmp13l3s6cu.cpp:22:11: note: suggested alternative:\nIn file included\
    \ from /usr/include/features.h:375:0,\n                 from /usr/include/assert.h:36,\n\
    \                 from /tmp/tmp13l3s6cu.cpp:1:\n/usr/include/bits/mathcalls.h:170:1:\
    \ note:   'cbrt'\n __MATHCALL (cbrt,, (_Mdouble_ __x));\n ^\n/tmp/tmp13l3s6cu.cpp:\
    \ In function 'int main()':\n/tmp/tmp13l3s6cu.cpp:26:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = iscube;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp13l3s6cu.cpp:2:\n/tmp/tmp13l3s6cu.cpp:27:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpguy0fsxk.cpp: In function 'int main()':\n/tmp/tmpguy0fsxk.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpguy0fsxk.cpp:2:\n/tmp/tmpguy0fsxk.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    // your code here\n  \
    \  if(a<0)\n        a=-a;\n    if(a==0)\n        return true;\n    long i=1;\n\
    \    while(i*i*i<=a)\n    {\n        if(i*i*i==a)\n            return true;\n\
    \        i++;\n    }\n    return false;\n}\nint main() {\n    auto candidate =\
    \ iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2)) ==\
    \ (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpry3u63i3.cpp: In function 'int main()':\n/tmp/tmpry3u63i3.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpry3u63i3.cpp:2:\n/tmp/tmpry3u63i3.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long i = 1;\n    while (i * i * i < a) i++;\n   \
    \ return i * i * i == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5pa9az2x.cpp: In function 'int main()':\n/tmp/tmp5pa9az2x.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5pa9az2x.cpp:2:\n/tmp/tmp5pa9az2x.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpguy0fsxk.cpp: In function 'int main()':\n/tmp/tmpguy0fsxk.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpguy0fsxk.cpp:2:\n/tmp/tmpguy0fsxk.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) x++;\n   \
    \ return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5tglo36c.cpp: In function 'int main()':\n/tmp/tmp5tglo36c.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5tglo36c.cpp:2:\n/tmp/tmp5tglo36c.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n\tlong b = std::cbrt(a);\n\
    \treturn (b*b*b == a);\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcl8rv_l7.cpp: In function 'bool iscube(long int)':\n/tmp/tmpcl8rv_l7.cpp:20:11:\
    \ error: 'cbrt' is not a member of 'std'\n  long b = std::cbrt(a);\n         \
    \  ^\n/tmp/tmpcl8rv_l7.cpp:20:11: note: suggested alternative:\nIn file included\
    \ from /usr/include/features.h:375:0,\n                 from /usr/include/assert.h:36,\n\
    \                 from /tmp/tmpcl8rv_l7.cpp:1:\n/usr/include/bits/mathcalls.h:170:1:\
    \ note:   'cbrt'\n __MATHCALL (cbrt,, (_Mdouble_ __x));\n ^\n/tmp/tmpcl8rv_l7.cpp:\
    \ In function 'int main()':\n/tmp/tmpcl8rv_l7.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = iscube;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcl8rv_l7.cpp:2:\n/tmp/tmpcl8rv_l7.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n\tlong b = std::cbrt(a);\n\
    \treturn a == b * b * b;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprt23uy__.cpp: In function 'bool iscube(long int)':\n/tmp/tmprt23uy__.cpp:20:11:\
    \ error: 'cbrt' is not a member of 'std'\n  long b = std::cbrt(a);\n         \
    \  ^\n/tmp/tmprt23uy__.cpp:20:11: note: suggested alternative:\nIn file included\
    \ from /usr/include/features.h:375:0,\n                 from /usr/include/assert.h:36,\n\
    \                 from /tmp/tmprt23uy__.cpp:1:\n/usr/include/bits/mathcalls.h:170:1:\
    \ note:   'cbrt'\n __MATHCALL (cbrt,, (_Mdouble_ __x));\n ^\n/tmp/tmprt23uy__.cpp:\
    \ In function 'int main()':\n/tmp/tmprt23uy__.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = iscube;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprt23uy__.cpp:2:\n/tmp/tmprt23uy__.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long b = std::cbrt(a);\n\
    \    return a == b * b * b;\n}\nint main() {\n    auto candidate = iscube;\n \
    \   assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpn4fatkjm.cpp: In function 'bool iscube(long int)':\n/tmp/tmpn4fatkjm.cpp:20:14:\
    \ error: 'cbrt' is not a member of 'std'\n     long b = std::cbrt(a);\n      \
    \        ^\n/tmp/tmpn4fatkjm.cpp:20:14: note: suggested alternative:\nIn file\
    \ included from /usr/include/features.h:375:0,\n                 from /usr/include/assert.h:36,\n\
    \                 from /tmp/tmpn4fatkjm.cpp:1:\n/usr/include/bits/mathcalls.h:170:1:\
    \ note:   'cbrt'\n __MATHCALL (cbrt,, (_Mdouble_ __x));\n ^\n/tmp/tmpn4fatkjm.cpp:\
    \ In function 'int main()':\n/tmp/tmpn4fatkjm.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = iscube;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn4fatkjm.cpp:2:\n/tmp/tmpn4fatkjm.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long b =\
    \ 1;\n    while (b * b * b < a) {\n        b++;\n    }\n    return b * b * b ==\
    \ a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjynugpzf.cpp: In function 'int main()':\n/tmp/tmpjynugpzf.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjynugpzf.cpp:2:\n/tmp/tmpjynugpzf.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) x++;\n   \
    \ return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5tglo36c.cpp: In function 'int main()':\n/tmp/tmp5tglo36c.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5tglo36c.cpp:2:\n/tmp/tmp5tglo36c.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long x =\
    \ 1;\n    while (x * x * x < a) {\n        x++;\n    }\n    return x * x * x ==\
    \ a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb9hwz2z9.cpp: In function 'int main()':\n/tmp/tmpb9hwz2z9.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpb9hwz2z9.cpp:2:\n/tmp/tmpb9hwz2z9.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    int x = 1;\n    while (x * x * x < a) {\n       \
    \ x++;\n    }\n    return x * x * x == a;\n}\nint main() {\n    auto candidate\
    \ = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0rxj99ak.cpp: In function 'int main()':\n/tmp/tmp0rxj99ak.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0rxj99ak.cpp:2:\n/tmp/tmp0rxj99ak.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long i =\
    \ 0;\n    while (i * i * i < a) {\n        i++;\n    }\n    return i * i * i ==\
    \ a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjpxuv262.cpp: In function 'int main()':\n/tmp/tmpjpxuv262.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjpxuv262.cpp:2:\n/tmp/tmpjpxuv262.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long b = std::abs(a);\n\
    \    long c = std::cbrt(b);\n    return b == c * c * c;\n}\nint main() {\n   \
    \ auto candidate = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp77lk66gd.cpp: In function 'bool iscube(long int)':\n/tmp/tmp77lk66gd.cpp:21:14:\
    \ error: 'cbrt' is not a member of 'std'\n     long c = std::cbrt(b);\n      \
    \        ^\n/tmp/tmp77lk66gd.cpp:21:14: note: suggested alternative:\nIn file\
    \ included from /usr/include/features.h:375:0,\n                 from /usr/include/assert.h:36,\n\
    \                 from /tmp/tmp77lk66gd.cpp:1:\n/usr/include/bits/mathcalls.h:170:1:\
    \ note:   'cbrt'\n __MATHCALL (cbrt,, (_Mdouble_ __x));\n ^\n/tmp/tmp77lk66gd.cpp:\
    \ In function 'int main()':\n/tmp/tmp77lk66gd.cpp:25:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = iscube;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp77lk66gd.cpp:2:\n/tmp/tmp77lk66gd.cpp:26:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long i = 0;\n    while\
    \ (i * i * i < a) {\n        i++;\n    }\n    return i * i * i == a;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy9uuwfyd.cpp: In function 'int main()':\n/tmp/tmpy9uuwfyd.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy9uuwfyd.cpp:2:\n/tmp/tmpy9uuwfyd.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) {\n      \
    \  return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8kxyya4n.cpp: In function 'int main()':\n/tmp/tmp8kxyya4n.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8kxyya4n.cpp:2:\n/tmp/tmp8kxyya4n.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0)\n        a\
    \ = -a;\n    if (a == 0)\n        return true;\n    long i = 1;\n    while (i\
    \ * i * i <= a) {\n        if (i * i * i == a)\n            return true;\n   \
    \     i++;\n    }\n    return false;\n}\nint main() {\n    auto candidate = iscube;\n\
    \    assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5suru_gr.cpp: In function 'int main()':\n/tmp/tmp5suru_gr.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5suru_gr.cpp:2:\n/tmp/tmp5suru_gr.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) {\n      \
    \  return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    int i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo6dobb2h.cpp: In function 'int main()':\n/tmp/tmpo6dobb2h.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpo6dobb2h.cpp:2:\n/tmp/tmpo6dobb2h.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long x = 0;\n    while\
    \ (x * x * x < a) {\n        x++;\n    }\n    return x * x * x == a;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3m9pibpv.cpp: In function 'int main()':\n/tmp/tmp3m9pibpv.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3m9pibpv.cpp:2:\n/tmp/tmp3m9pibpv.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    // your code here\n  \
    \  if(a==0) return true;\n    if(a<0) a=-a;\n    long x=1;\n    while(x*x*x<a)\
    \ x++;\n    return x*x*x==a;\n}\nint main() {\n    auto candidate = iscube;\n\
    \    assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpy76tf_at.cpp: In function 'int main()':\n/tmp/tmpy76tf_at.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy76tf_at.cpp:2:\n/tmp/tmpy76tf_at.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long b =\
    \ 1;\n    while (b * b * b < a) {\n        b++;\n    }\n    return b * b * b ==\
    \ a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjynugpzf.cpp: In function 'int main()':\n/tmp/tmpjynugpzf.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjynugpzf.cpp:2:\n/tmp/tmpjynugpzf.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long i = 0;\n    while\
    \ (i*i*i < a) {\n        i++;\n    }\n    return i*i*i == a;\n}\nint main() {\n\
    \    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcmrobqq0.cpp: In function 'int main()':\n/tmp/tmpcmrobqq0.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcmrobqq0.cpp:2:\n/tmp/tmpcmrobqq0.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n\treturn a == 0 || (a > 0\
    \ && (long)pow(floor(pow(a, 1.0 / 3)), 3) == a);\n}\nint main() {\n    auto candidate\
    \ = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkt8z0vr0.cpp: In function 'int main()':\n/tmp/tmpkt8z0vr0.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkt8z0vr0.cpp:2:\n/tmp/tmpkt8z0vr0.cpp:24:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) {\n      \
    \  return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    long x =\
    \ 1;\n    while (x * x * x < a) {\n        x++;\n    }\n    return x * x * x ==\
    \ a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5wesqxdv.cpp: In function 'int main()':\n/tmp/tmp5wesqxdv.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5wesqxdv.cpp:2:\n/tmp/tmp5wesqxdv.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long x = std::cbrt(a);\n\
    \    return a == x * x * x;\n}\nint main() {\n    auto candidate = iscube;\n \
    \   assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp54gkdxwv.cpp: In function 'bool iscube(long int)':\n/tmp/tmp54gkdxwv.cpp:20:14:\
    \ error: 'cbrt' is not a member of 'std'\n     long x = std::cbrt(a);\n      \
    \        ^\n/tmp/tmp54gkdxwv.cpp:20:14: note: suggested alternative:\nIn file\
    \ included from /usr/include/features.h:375:0,\n                 from /usr/include/assert.h:36,\n\
    \                 from /tmp/tmp54gkdxwv.cpp:1:\n/usr/include/bits/mathcalls.h:170:1:\
    \ note:   'cbrt'\n __MATHCALL (cbrt,, (_Mdouble_ __x));\n ^\n/tmp/tmp54gkdxwv.cpp:\
    \ In function 'int main()':\n/tmp/tmp54gkdxwv.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = iscube;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp54gkdxwv.cpp:2:\n/tmp/tmp54gkdxwv.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n  if (a < 0) {\n    a = -a;\n\
    \  }\n  if (a == 0) {\n    return true;\n  }\n  long i = 1;\n  while (i * i *\
    \ i <= a) {\n    if (i * i * i == a) {\n      return true;\n    }\n    i++;\n\
    \  }\n  return false;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptes0dx08.cpp: In function 'int main()':\n/tmp/tmptes0dx08.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptes0dx08.cpp:2:\n/tmp/tmptes0dx08.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long b =\
    \ 1;\n    while (b * b * b < a) {\n        b++;\n    }\n    return b * b * b ==\
    \ a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjynugpzf.cpp: In function 'int main()':\n/tmp/tmpjynugpzf.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjynugpzf.cpp:2:\n/tmp/tmpjynugpzf.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long b = std::cbrt(a);\n\
    \    return a == b * b * b;\n}\nint main() {\n    auto candidate = iscube;\n \
    \   assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpn4fatkjm.cpp: In function 'bool iscube(long int)':\n/tmp/tmpn4fatkjm.cpp:20:14:\
    \ error: 'cbrt' is not a member of 'std'\n     long b = std::cbrt(a);\n      \
    \        ^\n/tmp/tmpn4fatkjm.cpp:20:14: note: suggested alternative:\nIn file\
    \ included from /usr/include/features.h:375:0,\n                 from /usr/include/assert.h:36,\n\
    \                 from /tmp/tmpn4fatkjm.cpp:1:\n/usr/include/bits/mathcalls.h:170:1:\
    \ note:   'cbrt'\n __MATHCALL (cbrt,, (_Mdouble_ __x));\n ^\n/tmp/tmpn4fatkjm.cpp:\
    \ In function 'int main()':\n/tmp/tmpn4fatkjm.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = iscube;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn4fatkjm.cpp:2:\n/tmp/tmpn4fatkjm.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n\tlong b = std::cbrt(a);\n\
    \treturn a == b * b * b;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprt23uy__.cpp: In function 'bool iscube(long int)':\n/tmp/tmprt23uy__.cpp:20:11:\
    \ error: 'cbrt' is not a member of 'std'\n  long b = std::cbrt(a);\n         \
    \  ^\n/tmp/tmprt23uy__.cpp:20:11: note: suggested alternative:\nIn file included\
    \ from /usr/include/features.h:375:0,\n                 from /usr/include/assert.h:36,\n\
    \                 from /tmp/tmprt23uy__.cpp:1:\n/usr/include/bits/mathcalls.h:170:1:\
    \ note:   'cbrt'\n __MATHCALL (cbrt,, (_Mdouble_ __x));\n ^\n/tmp/tmprt23uy__.cpp:\
    \ In function 'int main()':\n/tmp/tmprt23uy__.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = iscube;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprt23uy__.cpp:2:\n/tmp/tmprt23uy__.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    return a >= 0 && (long)round(pow(a,\
    \ 1.0/3)) * (long)round(pow(a, 1.0/3)) * (long)round(pow(a, 1.0/3)) == a;\n}\n\
    int main() {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n\
    \    assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr56wgv89.cpp: In function 'int main()':\n/tmp/tmpr56wgv89.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpr56wgv89.cpp:2:\n/tmp/tmpr56wgv89.cpp:24:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) x++;\n   \
    \ return x * x * x == a;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5tglo36c.cpp: In function 'int main()':\n/tmp/tmp5tglo36c.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5tglo36c.cpp:2:\n/tmp/tmp5tglo36c.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long x = 1;\n    while (x * x * x < a) {\n      \
    \  x++;\n    }\n    return x * x * x == a;\n}\nint main() {\n    auto candidate\
    \ = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvuaaa24w.cpp: In function 'int main()':\n/tmp/tmpvuaaa24w.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvuaaa24w.cpp:2:\n/tmp/tmpvuaaa24w.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a == 0) return true;\n\
    \    if (a < 0) a = -a;\n    long b = 0;\n    while (b * b * b < a) {\n      \
    \  b++;\n    }\n    return b * b * b == a;\n}\nint main() {\n    auto candidate\
    \ = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwoegqkqb.cpp: In function 'int main()':\n/tmp/tmpwoegqkqb.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwoegqkqb.cpp:2:\n/tmp/tmpwoegqkqb.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long b = std::abs(a);\n\
    \    long c = std::cbrt(b);\n    return b == c * c * c;\n}\nint main() {\n   \
    \ auto candidate = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp77lk66gd.cpp: In function 'bool iscube(long int)':\n/tmp/tmp77lk66gd.cpp:21:14:\
    \ error: 'cbrt' is not a member of 'std'\n     long c = std::cbrt(b);\n      \
    \        ^\n/tmp/tmp77lk66gd.cpp:21:14: note: suggested alternative:\nIn file\
    \ included from /usr/include/features.h:375:0,\n                 from /usr/include/assert.h:36,\n\
    \                 from /tmp/tmp77lk66gd.cpp:1:\n/usr/include/bits/mathcalls.h:170:1:\
    \ note:   'cbrt'\n __MATHCALL (cbrt,, (_Mdouble_ __x));\n ^\n/tmp/tmp77lk66gd.cpp:\
    \ In function 'int main()':\n/tmp/tmp77lk66gd.cpp:25:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = iscube;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp77lk66gd.cpp:2:\n/tmp/tmp77lk66gd.cpp:26:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a < 0) {\n       \
    \ a = -a;\n    }\n    if (a == 0) {\n        return true;\n    }\n    long i =\
    \ 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n          \
    \  return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n   \
    \ assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpguy0fsxk.cpp: In function 'int main()':\n/tmp/tmpguy0fsxk.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpguy0fsxk.cpp:2:\n/tmp/tmpguy0fsxk.cpp:37:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''

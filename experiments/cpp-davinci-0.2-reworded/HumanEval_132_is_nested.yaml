name: HumanEval_132_is_nested
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that takes\
  \ a string as input which contains only square brackets.\n// The function should\
  \ return true if and only if there is a valid subsequence of brackets \n// where\
  \ at least one bracket in the subsequence is nested.\n// >>> is_nested((\"[[]]\"\
  ))\n// (true)\n// >>> is_nested((\"[]]]]]]][[[[[]\"))\n// (false)\n// >>> is_nested((\"\
  [][]\"))\n// (false)\n// >>> is_nested((\"[]\"))\n// (false)\n// >>> is_nested((\"\
  [[][]]\"))\n// (true)\n// >>> is_nested((\"[[]][[\"))\n// (true)\nbool is_nested(std::string\
  \ string) {\n"
tests: "}\nint main() {\n    auto candidate = is_nested;\n    assert(candidate((\"\
  [[]]\")) == (true));\n    assert(candidate((\"[]]]]]]][[[[[]\")) == (false));\n\
  \    assert(candidate((\"[][]\")) == (false));\n    assert(candidate((\"[]\")) ==\
  \ (false));\n    assert(candidate((\"[[[[]]]]\")) == (true));\n    assert(candidate((\"\
  []]]]]]]]]]\")) == (false));\n    assert(candidate((\"[][][[]]\")) == (true));\n\
  \    assert(candidate((\"[[]\")) == (false));\n    assert(candidate((\"[]]\")) ==\
  \ (false));\n    assert(candidate((\"[[]][[\")) == (true));\n    assert(candidate((\"\
  [[][]]\")) == (true));\n    assert(candidate((\"\")) == (false));\n    assert(candidate((\"\
  [[[[[[[[\")) == (false));\n    assert(candidate((\"]]]]]]]]\")) == (false));\n}\n"
completions: ["    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='['){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==']'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            else if(st.top()=='['){\n               \
    \ st.pop();\n            }\n            else{\n                return false;\n\
    \            }\n        }\n    }\n    if(st.empty()){\n        return true;\n\
    \    }\n    else{\n        return false;\n    }", "    std::stack<char> stack;\n\
    \    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == '[')\
    \ {\n            stack.push(string[i]);\n        } else if (string[i] == ']')\
    \ {\n            if (stack.empty()) {\n                return false;\n       \
    \     } else {\n                stack.pop();\n            }\n        }\n    }\n\
    \    return !stack.empty();", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='['){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==']'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else if(s.top()=='['){\n                s.pop();\n\
    \            }\n            else{\n                return false;\n           \
    \ }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='['){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==']'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            else{\n                st.pop();\n      \
    \      }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n\
    \    else{\n        return false;\n    }", "    int count = 0;\n    for (int i\
    \ = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n        \
    \    count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> stack;\n    for (char c : string) {\n        if (c == '[')\
    \ {\n            stack.push(c);\n        } else if (c == ']') {\n            if\
    \ (stack.empty()) {\n                return false;\n            }\n          \
    \  stack.pop();\n        }\n    }\n    return !stack.empty();", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '[') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ']') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return !stack.empty();", "    int count = 0;\n    for (int i = 0;\
    \ i < string.length(); i++) {\n        if (string[i] == '[') {\n            count++;\n\
    \        } else if (string[i] == ']') {\n            count--;\n        }\n   \
    \     if (count < 0) {\n            return false;\n        }\n    }\n    return\
    \ count == 0;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='['){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==']'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> s;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='['){\n            s.push(string[i]);\n\
    \        }\n        else if(string[i]==']'){\n            if(s.empty()){\n   \
    \             return false;\n            }\n            else{\n              \
    \  s.pop();\n            }\n        }\n    }\n    if(s.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n \
    \           s.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else if(s.top()=='['){\n                s.pop();\n            }\n \
    \           else{\n                return false;\n            }\n        }\n \
    \   }\n    if(s.empty()){\n        return true;\n    }\n    else{\n        return\
    \ false;\n    }", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='['){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==']'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else if(s.top()=='['){\n                s.pop();\n\
    \            }\n            else{\n                return false;\n           \
    \ }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    // Your code here\n    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='['){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==']'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            else{\n                st.pop();\n      \
    \      }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n\
    \    else{\n        return false;\n    }", "    int count = 0;\n    for (int i\
    \ = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n        \
    \    count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='['){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==']'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else if(s.top()=='['){\n                s.pop();\n\
    \            }\n            else{\n                return false;\n           \
    \ }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }", "    std::stack<char> stack;\n    for (char c\
    \ : string) {\n        if (c == '[') {\n            stack.push(c);\n        }\
    \ else if (c == ']') {\n            if (stack.empty()) {\n                return\
    \ false;\n            }\n            stack.pop();\n        }\n    }\n    return\
    \ !stack.empty();", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='['){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==']'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> s;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='['){\n            s.push(string[i]);\n\
    \        }\n        else if(string[i]==']'){\n            if(s.empty()){\n   \
    \             return false;\n            }\n            else{\n              \
    \  s.pop();\n            }\n        }\n    }\n    if(s.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n \
    \           s.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    std::stack<char> stack;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            stack.push(string[i]);\n\
    \        } else if (string[i] == ']') {\n            if (stack.empty()) {\n  \
    \              return false;\n            } else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return !stack.empty();", "    std::stack<char>\
    \ st;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n\
    \            st.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(st.empty()){\n                return false;\n            }\n \
    \           else{\n                st.pop();\n            }\n        }\n    }\n\
    \    if(st.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "\tstd::stack<char> s;\n\tfor (int i = 0; i < string.length(); i++) {\n\
    \t\tif (string[i] == '[') {\n\t\t\ts.push(string[i]);\n\t\t}\n\t\telse if (string[i]\
    \ == ']') {\n\t\t\tif (s.empty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\
    \ {\n\t\t\t\ts.pop();\n\t\t\t}\n\t\t}\n\t}\n\tif (s.empty()) {\n\t\treturn true;\n\
    \t}\n\telse {\n\t\treturn false;\n\t}", "    int count = 0;\n    for (int i =\
    \ 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n          \
    \  count++;\n        } else if (string[i] == ']') {\n            count--;\n  \
    \      }\n        if (count < 0) {\n            return false;\n        }\n   \
    \ }\n    return count == 0;", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='['){\n            s.push(string[i]);\n        }\n    \
    \    else if(string[i]==']'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else if(s.top()=='['){\n                s.pop();\n\
    \            }\n            else{\n                return false;\n           \
    \ }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n\
    \            s.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else if(s.top()=='['){\n                s.pop();\n            }\n \
    \           else{\n                return false;\n            }\n        }\n \
    \   }\n    if(s.empty()){\n        return true;\n    }\n    else{\n        return\
    \ false;\n    }", "    std::stack<char> stack;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            stack.push(string[i]);\n\
    \        } else if (string[i] == ']') {\n            if (stack.empty()) {\n  \
    \              return false;\n            } else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return !stack.empty();", "    std::stack<char>\
    \ st;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n\
    \            st.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(st.empty()){\n                return false;\n            }\n \
    \           else{\n                st.pop();\n            }\n        }\n    }\n\
    \    if(st.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n \
    \       if(string[i]=='['){\n            s.push(string[i]);\n        }\n     \
    \   else if(string[i]==']'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> s;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='['){\n            s.push(string[i]);\n\
    \        }\n        else if(string[i]==']'){\n            if(s.empty()){\n   \
    \             return false;\n            }\n            else{\n              \
    \  s.pop();\n            }\n        }\n    }\n    if(s.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "\tstd::stack<char>\
    \ stack;\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i] ==\
    \ '[') {\n\t\t\tstack.push(string[i]);\n\t\t}\n\t\telse if (string[i] == ']')\
    \ {\n\t\t\tif (stack.empty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\
    \t\t\t\tstack.pop();\n\t\t\t}\n\t\t}\n\t}\n\tif (stack.empty()) {\n\t\treturn\
    \ true;\n\t}\n\telse {\n\t\treturn false;\n\t}", "    // Your code here\n    std::stack<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n \
    \           s.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    int count = 0;\n    for (int i = 0; i < string.length(); i++) {\n\
    \        if (string[i] == '[') {\n            count++;\n        } else if (string[i]\
    \ == ']') {\n            count--;\n        }\n        if (count < 0) {\n     \
    \       return false;\n        }\n    }\n    return count == 0;", "    std::stack<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n \
    \           s.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    int count = 0;\n    for (int i = 0; i < string.length(); i++) {\n\
    \        if (string[i] == '[') {\n            count++;\n        } else if (string[i]\
    \ == ']') {\n            count--;\n        }\n        if (count < 0) {\n     \
    \       return false;\n        }\n    }\n    return count == 0;", "    int count\
    \ = 0;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '[') {\n            count++;\n        } else if (string[i] == ']') {\n  \
    \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    std::stack<char> s;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='['){\n            s.push(string[i]);\n\
    \        }\n        else if(string[i]==']'){\n            if(s.empty()){\n   \
    \             return false;\n            }\n            else{\n              \
    \  s.pop();\n            }\n        }\n    }\n    if(s.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n \
    \           s.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='['){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==']'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            else{\n                st.pop();\n      \
    \      }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n\
    \    else{\n        return false;\n    }", "    std::stack<char> stack;\n    for\
    \ (int i = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n \
    \           stack.push(string[i]);\n        } else if (string[i] == ']') {\n \
    \           if (stack.empty()) {\n                return false;\n            }\
    \ else {\n                stack.pop();\n            }\n        }\n    }\n    return\
    \ stack.empty();", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='['){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==']'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            else{\n                st.pop();\n      \
    \      }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n\
    \    else{\n        return false;\n    }", "    std::stack<char> s;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='['){\n            s.push(string[i]);\n\
    \        }\n        else if(string[i]==']'){\n            if(s.empty()){\n   \
    \             return false;\n            }\n            else{\n              \
    \  s.pop();\n            }\n        }\n    }\n    if(s.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    // Your code here\n\
    \    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n\
    \            s.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='['){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==']'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            else{\n                st.pop();\n      \
    \      }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n\
    \    else{\n        return false;\n    }", "    // Your code here\n    int count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++){\n        if(string[i] ==\
    \ '['){\n            count++;\n        }\n        else if(string[i] == ']'){\n\
    \            count--;\n        }\n        if(count < 0){\n            return false;\n\
    \        }\n    }\n    return count == 0;", "    std::stack<char> stack;\n   \
    \ for (char c : string) {\n        if (c == '[') {\n            stack.push(c);\n\
    \        } else if (c == ']') {\n            if (stack.empty()) {\n          \
    \      return false;\n            }\n            if (stack.top() == '[') {\n \
    \               stack.pop();\n            } else {\n                return false;\n\
    \            }\n        }\n    }\n    return stack.empty();", "    int count =\
    \ 0;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] ==\
    \ '[') {\n            count++;\n        } else if (string[i] == ']') {\n     \
    \       count--;\n        }\n        if (count < 0) {\n            return false;\n\
    \        }\n    }\n    return count > 0 ? false : true;", "    std::stack<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n \
    \           s.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n \
    \       if(string[i]=='['){\n            s.push(string[i]);\n        }\n     \
    \   else if(string[i]==']'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    int count = 0;\n    for (int i\
    \ = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n        \
    \    count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    std::stack<char> stack;\n    for (int i =\
    \ 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n          \
    \  stack.push(string[i]);\n        } else if (string[i] == ']') {\n          \
    \  if (stack.empty()) {\n                return false;\n            } else {\n\
    \                stack.pop();\n            }\n        }\n    }\n    return stack.empty();",
  "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n\
    \            s.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n \
    \       if(string[i]=='['){\n            s.push(string[i]);\n        }\n     \
    \   else if(string[i]==']'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    std::stack<char> st;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='['){\n            st.push(string[i]);\n\
    \        }\n        else if(string[i]==']'){\n            if(st.empty()){\n  \
    \              return false;\n            }\n            else{\n             \
    \   st.pop();\n            }\n        }\n    }\n    if(st.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    std::stack<char>\
    \ stack;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ == '[') {\n            stack.push(string[i]);\n        } else if (string[i]\
    \ == ']') {\n            if (stack.empty()) {\n                return false;\n\
    \            } else {\n                stack.pop();\n            }\n        }\n\
    \    }\n    return stack.empty();", "    std::stack<char> stack;\n    for (int\
    \ i = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n      \
    \      stack.push(string[i]);\n        } else if (string[i] == ']') {\n      \
    \      if (stack.empty()) {\n                return false;\n            } else\
    \ {\n                stack.pop();\n            }\n        }\n    }\n    return\
    \ stack.empty();", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n\
    \            s.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    std::stack<char> stack;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            stack.push(string[i]);\n\
    \        } else if (string[i] == ']') {\n            if (stack.empty()) {\n  \
    \              return false;\n            } else {\n                stack.pop();\n\
    \            }\n        }\n    }\n    return stack.empty();", "    std::stack<char>\
    \ st;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n\
    \            st.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(st.empty()){\n                return false;\n            }\n \
    \           else{\n                st.pop();\n            }\n        }\n    }\n\
    \    if(st.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    // Your code here\n    int count = 0;\n    for(int i = 0; i < string.length();\
    \ i++){\n        if(string[i] == '['){\n            count++;\n        }\n    \
    \    else if(string[i] == ']'){\n            count--;\n        }\n        if(count\
    \ < 0){\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n\
    \            s.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n \
    \       if(string[i]=='['){\n            s.push(string[i]);\n        }\n     \
    \   else if(string[i]==']'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else if(s.top()=='['){\n                s.pop();\n\
    \            }\n            else{\n                return false;\n           \
    \ }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }", "    int count = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        } else\
    \ if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ < 0) {\n            return false;\n        }\n    }\n    return count == 0;",
  "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n\
    \            st.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(st.empty()){\n                return false;\n            }\n \
    \           else{\n                st.pop();\n            }\n        }\n    }\n\
    \    if(st.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "\tstd::stack<char> s;\n\tfor (int i = 0; i < string.length(); i++) {\n\
    \t\tif (string[i] == '[') {\n\t\t\ts.push(string[i]);\n\t\t}\n\t\telse if (string[i]\
    \ == ']') {\n\t\t\tif (s.empty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ts.pop();\n\
    \t\t}\n\t}\n\tif (s.empty()) {\n\t\treturn true;\n\t}\n\treturn false;", "   \
    \ std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n\
    \            st.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(st.empty()){\n                return false;\n            }\n \
    \           else{\n                st.pop();\n            }\n        }\n    }\n\
    \    if(st.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    int count = 0;\n    for (int i = 0; i < string.length(); i++) {\n\
    \        if (string[i] == '[') {\n            count++;\n        } else if (string[i]\
    \ == ']') {\n            count--;\n        }\n        if (count < 0) {\n     \
    \       return false;\n        }\n    }\n    return count > 0 ? false : true;",
  "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n\
    \            s.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n \
    \       if(string[i]=='['){\n            s.push(string[i]);\n        }\n     \
    \   else if(string[i]==']'){\n            if(s.empty()){\n                return\
    \ false;\n            }\n            else{\n                s.pop();\n       \
    \     }\n        }\n    }\n    if(s.empty()){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }", "    int count = 0;\n    for (int i\
    \ = 0; i < string.length(); i++) {\n        if (string[i] == '[') {\n        \
    \    count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    std::stack<char> st;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]=='['){\n            st.push(string[i]);\n        }\n   \
    \     else if(string[i]==']'){\n            if(st.empty()){\n                return\
    \ false;\n            }\n            else{\n                st.pop();\n      \
    \      }\n        }\n    }\n    if(st.empty()){\n        return true;\n    }\n\
    \    else{\n        return false;\n    }", "    std::stack<char> s;\n    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]=='['){\n            s.push(string[i]);\n\
    \        }\n        else if(string[i]==']'){\n            if(s.empty()){\n   \
    \             return false;\n            }\n            else if(s.top()=='['){\n\
    \                s.pop();\n            }\n            else{\n                return\
    \ false;\n            }\n        }\n    }\n    if(s.empty()){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }", "    // your code here\n\
    \    std::stack<char> s;\n    for(int i=0;i<string.length();i++){\n        if(string[i]=='['){\n\
    \            s.push(string[i]);\n        }\n        else if(string[i]==']'){\n\
    \            if(s.empty()){\n                return false;\n            }\n  \
    \          else{\n                s.pop();\n            }\n        }\n    }\n\
    \    if(s.empty()){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }"]
stop_tokens:
- "\n}"

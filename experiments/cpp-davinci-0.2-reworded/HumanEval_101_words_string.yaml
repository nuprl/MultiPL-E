name: HumanEval_101_words_string
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
  \ of words separated by commas or spaces. Your task is\n// to split the string into\
  \ words and return a vector of the words.\n// For example:\n// >>> words_string((\"\
  Hi, my name is John\"))\n// (std::vector<std::string>({(std::string)\"Hi\", (std::string)\"\
  my\", (std::string)\"name\", (std::string)\"is\", (std::string)\"John\"}))\n// >>>\
  \ words_string((\"One, two, three, four, five, six\"))\n// (std::vector<std::string>({(std::string)\"\
  One\", (std::string)\"two\", (std::string)\"three\", (std::string)\"four\", (std::string)\"\
  five\", (std::string)\"six\"}))\nstd::vector<std::string> words_string(std::string\
  \ s) {\n"
tests: "}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
  Hi, my name is John\")) == (std::vector<std::string>({(std::string)\"Hi\", (std::string)\"\
  my\", (std::string)\"name\", (std::string)\"is\", (std::string)\"John\"})));\n \
  \   assert(candidate((\"One, two, three, four, five, six\")) == (std::vector<std::string>({(std::string)\"\
  One\", (std::string)\"two\", (std::string)\"three\", (std::string)\"four\", (std::string)\"\
  five\", (std::string)\"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({(std::string)\"\
  Hi\", (std::string)\"my\", (std::string)\"name\"})));\n    assert(candidate((\"\
  One,, two, three, four, five, six,\")) == (std::vector<std::string>({(std::string)\"\
  One\", (std::string)\"two\", (std::string)\"three\", (std::string)\"four\", (std::string)\"\
  five\", (std::string)\"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
  \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({(std::string)\"\
  ahmed\", (std::string)\"gamal\"})));\n}\n"
completions: ["    std::vector<std::string> words;\n    std::string word;\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] == ',') {\n\
    \            words.push_back(word);\n            word = \"\";\n        } else\
    \ {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        words.push_back(word);\n\
    \    }\n    return words;", "\tstd::vector<std::string> words;\n\tstd::string\
    \ word;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (s[i] == ' ' || s[i] ==\
    \ ',') {\n\t\t\twords.push_back(word);\n\t\t\tword = \"\";\n\t\t}\n\t\telse {\n\
    \t\t\tword += s[i];\n\t\t}\n\t}\n\twords.push_back(word);\n\treturn words;", " \
    \ std::vector<std::string> v;\n  std::stringstream ss(s);\n  std::string word;\n\
    \  while (ss >> word) {\n    v.push_back(word);\n  }\n  return v;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n  \
    \      if (s[i] == ' ' || s[i] == ',') {\n            words.push_back(word);\n\
    \            word = \"\";\n        } else {\n            word += s[i];\n     \
    \   }\n    }\n    words.push_back(word);\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (s[i] == ' ' || s[i] == ',') {\n      words.push_back(word);\n      word = \"\
    \";\n    } else {\n      word += s[i];\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] ==\
    \ ',') {\n            words.push_back(word);\n            word = \"\";\n     \
    \   } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' ||\
    \ s[i] == ',') {\n            words.push_back(word);\n            word = \"\"\
    ;\n        } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "  std::vector<std::string> v;\n  std::stringstream ss(s);\n\
    \  std::string word;\n  while (ss >> word) {\n    v.push_back(word);\n  }\n  return\
    \ v;", "    std::vector<std::string> result;\n    std::stringstream ss(s);\n \
    \   std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' ||\
    \ s[i] == ',') {\n            words.push_back(word);\n            word = \"\"\
    ;\n        } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    for (auto c : s) {\n        if (c == ' ' || c == ',') {\n            if (!word.empty())\
    \ {\n                words.push_back(word);\n                word.clear();\n \
    \           }\n        } else {\n            word += c;\n        }\n    }\n  \
    \  if (!word.empty()) {\n        words.push_back(word);\n    }\n    return words;",
  "    std::vector<std::string> result;\n    std::string word;\n    for (int i = 0;\
    \ i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] == ',') {\n          \
    \  result.push_back(word);\n            word = \"\";\n        } else {\n     \
    \       word += s[i];\n        }\n    }\n    result.push_back(word);\n    return\
    \ result;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n \
    \   std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n \
    \   }\n    return v;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> v;\n  std::stringstream\
    \ ss(s);\n  std::string word;\n  while (ss >> word) {\n    v.push_back(word);\n\
    \  }\n  return v;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "  std::vector<std::string> v;\n  std::stringstream ss(s);\n\
    \  std::string word;\n  while (std::getline(ss, word, ' ')) {\n    v.push_back(word);\n\
    \  }\n  return v;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] ==\
    \ ',') {\n            words.push_back(word);\n            word = \"\";\n     \
    \   } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> res;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while(getline(ss, temp, ' ')) {\n       \
    \ res.push_back(temp);\n    }\n    return res;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n  \
    \      if (s[i] == ' ' || s[i] == ',') {\n            words.push_back(word);\n\
    \            word = \"\";\n        } else {\n            word += s[i];\n     \
    \   }\n    }\n    words.push_back(word);\n    return words;", "    std::stringstream\
    \ ss(s);\n    std::vector<std::string> v;\n    std::string word;\n    while(ss\
    \ >> word) {\n        v.push_back(word);\n    }\n    return v;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (s[i] == ' ' || s[i] == ',') {\n      words.push_back(word);\n      word = \"\
    \";\n    } else {\n      word += s[i];\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "  std::vector<std::string> v;\n  std::stringstream ss(s);\n\
    \  std::string word;\n  while (ss >> word) {\n    v.push_back(word);\n  }\n  return\
    \ v;", "    std::vector<std::string> words;\n    std::string word;\n    for (int\
    \ i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] == ',') {\n   \
    \         words.push_back(word);\n            word = \"\";\n        } else {\n\
    \            word += s[i];\n        }\n    }\n    words.push_back(word);\n   \
    \ return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] ==\
    \ ',') {\n            words.push_back(word);\n            word = \"\";\n     \
    \   } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> v;\n    std::string\
    \ word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ' ||\
    \ s[i] == ',') {\n            v.push_back(word);\n            word = \"\";\n \
    \       } else {\n            word += s[i];\n        }\n    }\n    v.push_back(word);\n\
    \    return v;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (ss >> word) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(getline(ss, word, ' ')) {\n       \
    \ v.push_back(word);\n    }\n    return v;", "    std::vector<std::string> result;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        result.push_back(word);\n    }\n    return result;", "    std::stringstream\
    \ ss(s);\n    std::vector<std::string> words;\n    std::string word;\n    while\
    \ (ss >> word) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    for (int i = 0;\
    \ i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] == ',') {\n          \
    \  words.push_back(word);\n            word = \"\";\n        } else {\n      \
    \      word += s[i];\n        }\n    }\n    words.push_back(word);\n    return\
    \ words;", "    std::vector<std::string> words;\n    std::string word;\n    for\
    \ (auto c : s) {\n        if (c == ' ' || c == ',') {\n            if (!word.empty())\
    \ {\n                words.push_back(word);\n                word.clear();\n \
    \           }\n        } else {\n            word += c;\n        }\n    }\n  \
    \  if (!word.empty()) {\n        words.push_back(word);\n    }\n    return words;",
  "    std::vector<std::string> v;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        v.push_back(word);\n    }\n    return\
    \ v;", "  std::vector<std::string> words;\n  std::string word;\n  std::stringstream\
    \ ss(s);\n  while (ss >> word) {\n    words.push_back(word);\n  }\n  return words;",
  "    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n  \
    \  return result;", "  std::vector<std::string> words;\n  std::stringstream ss(s);\n\
    \  std::string word;\n  while (ss >> word) {\n    words.push_back(word);\n  }\n\
    \  return words;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "  std::vector<std::string> v;\n  std::stringstream ss(s);\n\
    \  std::string word;\n  while (ss >> word) {\n    v.push_back(word);\n  }\n  return\
    \ v;", "  std::vector<std::string> v;\n  std::stringstream ss(s);\n  std::string\
    \ word;\n  while (ss >> word) {\n    v.push_back(word);\n  }\n  return v;", " \
    \ std::vector<std::string> words;\n  std::string word;\n  for (int i = 0; i <\
    \ s.size(); i++) {\n    if (s[i] == ' ' || s[i] == ',') {\n      words.push_back(word);\n\
    \      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "  std::vector<std::string> words;\n  std::string word = \"\
    \";\n  for (char c : s) {\n    if (c == ' ' || c == ',') {\n      words.push_back(word);\n\
    \      word = \"\";\n    } else {\n      word += c;\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (std::getline(ss, word, ' ')) {\n \
    \       words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ v;\n  std::stringstream ss(s);\n  std::string word;\n  while (ss >> word) {\n\
    \    v.push_back(word);\n  }\n  return v;", "    std::vector<std::string> words;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ v;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word)\n\
    \        v.push_back(word);\n    return v;", "  std::vector<std::string> words;\n\
    \  std::string word;\n  for (auto c : s) {\n    if (c == ' ' || c == ',') {\n\
    \      if (!word.empty()) {\n        words.push_back(word);\n        word.clear();\n\
    \      }\n    } else {\n      word += c;\n    }\n  }\n  if (!word.empty()) {\n\
    \    words.push_back(word);\n  }\n  return words;", "    std::vector<std::string>\
    \ words;\n    std::stringstream ss(s);\n    std::string word;\n    while (std::getline(ss,\
    \ word, ' ')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \ std::vector<std::string> v;\n  std::stringstream ss(s);\n  std::string word;\n\
    \  while (ss >> word) {\n    v.push_back(word);\n  }\n  return v;", "    std::vector<std::string>\
    \ words;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >>\
    \ word) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss\
    \ >> word) {\n        result.push_back(word);\n    }\n    return result;", " \
    \ std::stringstream ss(s);\n  std::vector<std::string> words;\n  std::string word;\n\
    \  while (ss >> word) {\n    words.push_back(word);\n  }\n  return words;", " \
    \   std::vector<std::string> v;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(getline(ss, word, ' ')) {\n        v.push_back(word);\n   \
    \ }\n    return v;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] ==\
    \ ',') {\n            words.push_back(word);\n            word = \"\";\n     \
    \   } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (std::getline(ss, word, ' ')) {\n \
    \       words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ v;\n  std::stringstream ss(s);\n  std::string word;\n  while (ss >> word) {\n\
    \    v.push_back(word);\n  }\n  return v;", "    std::vector<std::string> v;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        v.push_back(word);\n    }\n    return v;", "    std::vector<std::string>\
    \ words;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >>\
    \ word) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >>\
    \ word) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ v;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word)\
    \ {\n        v.push_back(word);\n    }\n    return v;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (s[i] == ' ' || s[i] == ',') {\n      words.push_back(word);\n      word = \"\
    \";\n    } else {\n      word += s[i];\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (std::getline(ss, word, ' ')) {\n \
    \       result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n  \
    \      if (s[i] == ' ' || s[i] == ',') {\n            words.push_back(word);\n\
    \            word = \"\";\n        } else {\n            word += s[i];\n     \
    \   }\n    }\n    words.push_back(word);\n    return words;", "  std::vector<std::string>\
    \ v;\n  std::stringstream ss(s);\n  std::string temp;\n  while(getline(ss, temp,\
    \ ' ')) {\n    v.push_back(temp);\n  }\n  return v;", "    std::vector<std::string>\
    \ v;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word)\
    \ {\n        v.push_back(word);\n    }\n    return v;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (ss >>\
    \ word) {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ v;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word)\
    \ {\n        v.push_back(word);\n    }\n    return v;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n  \
    \      if (s[i] == ' ' || s[i] == ',') {\n            words.push_back(word);\n\
    \            word = \"\";\n        } else {\n            word += s[i];\n     \
    \   }\n    }\n    words.push_back(word);\n    return words;", "  std::vector<std::string>\
    \ result;\n  std::stringstream ss(s);\n  std::string word;\n  while (ss >> word)\
    \ {\n    result.push_back(word);\n  }\n  return result;", "    std::vector<std::string>\
    \ v;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word)\
    \ {\n        v.push_back(word);\n    }\n    return v;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    for (char c : s) {\n        if (c == ' '\
    \ || c == ',') {\n            if (!word.empty()) {\n                words.push_back(word);\n\
    \                word.clear();\n            }\n        } else {\n            word\
    \ += c;\n        }\n    }\n    if (!word.empty()) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::stringstream ss(s);\n  std::vector<std::string>\
    \ result;\n  std::string word;\n  while (ss >> word) {\n    result.push_back(word);\n\
    \  }\n  return result;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == ' ' || s[i] ==\
    \ ',') {\n      words.push_back(word);\n      word = \"\";\n    } else {\n   \
    \   word += s[i];\n    }\n  }\n  words.push_back(word);\n  return words;", " \
    \   std::vector<std::string> v;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        v.push_back(word);\n    }\n    return\
    \ v;", "    std::vector<std::string> words;\n    std::string word;\n    for (int\
    \ i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] == ',') {\n   \
    \         words.push_back(word);\n            word = \"\";\n        } else {\n\
    \            word += s[i];\n        }\n    }\n    words.push_back(word);\n   \
    \ return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] ==\
    \ ',') {\n            words.push_back(word);\n            word = \"\";\n     \
    \   } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "  std::vector<std::string> v;\n  std::stringstream ss(s);\n\
    \  std::string word;\n  while (ss >> word) {\n    v.push_back(word);\n  }\n  return\
    \ v;", "  std::vector<std::string> result;\n  std::stringstream ss(s);\n  std::string\
    \ word;\n  while (ss >> word) {\n    result.push_back(word);\n  }\n  return result;",
  "  std::vector<std::string> words;\n  std::string word;\n  for (int i = 0; i < s.size();\
    \ i++) {\n    if (s[i] == ' ' || s[i] == ',') {\n      words.push_back(word);\n\
    \      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' ||\
    \ s[i] == ',') {\n            words.push_back(word);\n            word = \"\"\
    ;\n        } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "  std::vector<std::string> result;\n  std::stringstream\
    \ ss(s);\n  std::string temp;\n  while(std::getline(ss, temp, ' ')) {\n    result.push_back(temp);\n\
    \  }\n  return result;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' ||\
    \ s[i] == ',') {\n            result.push_back(word);\n            word = \"\"\
    ;\n        } else {\n            word += s[i];\n        }\n    }\n    result.push_back(word);\n\
    \    return result;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word)\n        v.push_back(word);\n\
    \    return v;", "    std::stringstream ss(s);\n    std::string word;\n    std::vector<std::string>\
    \ words;\n    while (ss >> word) {\n        words.push_back(word);\n    }\n  \
    \  return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' ||\
    \ s[i] == ',') {\n            words.push_back(word);\n            word = \"\"\
    ;\n        } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (auto c : s) {\n        if (c == ' ' || c == ',') {\n       \
    \     if (!word.empty()) {\n                words.push_back(word);\n         \
    \       word.clear();\n            }\n        } else {\n            word += c;\n\
    \        }\n    }\n    if (!word.empty()) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == ' ' || s[i] ==\
    \ ',') {\n      words.push_back(word);\n      word = \"\";\n    } else {\n   \
    \   word += s[i];\n    }\n  }\n  words.push_back(word);\n  return words;", " \
    \   std::vector<std::string> v;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        v.push_back(word);\n    }\n    return\
    \ v;", "  std::vector<std::string> result;\n  std::stringstream ss(s);\n  std::string\
    \ word;\n  while (ss >> word) {\n    result.push_back(word);\n  }\n  return result;",
  "    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (std::getline(ss, word, ' ')) {\n        result.push_back(word);\n\
    \    }\n    return result;", "  std::vector<std::string> v;\n  std::stringstream\
    \ ss(s);\n  std::string word;\n  while (ss >> word) {\n    v.push_back(word);\n\
    \  }\n  return v;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "  std::vector<std::string> words;\n  std::string word;\n\
    \  std::stringstream ss(s);\n  while (ss >> word) {\n    words.push_back(word);\n\
    \  }\n  return words;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while(getline(ss, temp, ' '))\n        v.push_back(temp);\n\
    \    return v;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] ==\
    \ ',') {\n            words.push_back(word);\n            word = \"\";\n     \
    \   } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == ' ' || s[i] ==\
    \ ',') {\n      words.push_back(word);\n      word = \"\";\n    } else {\n   \
    \   word += s[i];\n    }\n  }\n  words.push_back(word);\n  return words;", " \
    \ std::vector<std::string> result;\n  std::stringstream ss(s);\n  std::string\
    \ word;\n  while (ss >> word) {\n    result.push_back(word);\n  }\n  return result;",
  "  std::vector<std::string> v;\n  std::stringstream ss(s);\n  std::string word;\n\
    \  while (ss >> word) {\n    v.push_back(word);\n  }\n  return v;", "    std::vector<std::string>\
    \ v;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word)\
    \ {\n        v.push_back(word);\n    }\n    return v;", "    std::vector<std::string>\
    \ words;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >>\
    \ word) {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ v;\n  std::stringstream ss(s);\n  std::string word;\n  while (ss >> word) {\n\
    \    v.push_back(word);\n  }\n  return v;", "    std::vector<std::string> words;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while (std::getline(ss,\
    \ word, ' ')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> v;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        v.push_back(word);\n    }\n    return\
    \ v;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        v.push_back(word);\n    }\n    return\
    \ v;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        v.push_back(word);\n    }\n    return\
    \ v;", "  std::vector<std::string> words;\n  std::string word;\n  for (int i =\
    \ 0; i < s.size(); i++) {\n    if (s[i] == ' ' || s[i] == ',') {\n      words.push_back(word);\n\
    \      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "  std::vector<std::string> result;\n  std::stringstream\
    \ ss(s);\n  std::string word;\n  while (ss >> word) {\n    result.push_back(word);\n\
    \  }\n  return result;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (auto c : s) {\n        if (c == ' ' || c == ',') {\n       \
    \     if (!word.empty()) {\n                words.push_back(word);\n         \
    \       word.clear();\n            }\n        } else {\n            word += c;\n\
    \        }\n    }\n    if (!word.empty()) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' ||\
    \ s[i] == ',') {\n            words.push_back(word);\n            word = \"\"\
    ;\n        } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(getline(ss, word, ' ')) {\n        v.push_back(word);\n\
    \    }\n    return v;", "  std::vector<std::string> v;\n  std::stringstream ss(s);\n\
    \  std::string word;\n  while (ss >> word) {\n    v.push_back(word);\n  }\n  return\
    \ v;", "    std::vector<std::string> words;\n    std::string word;\n    for (int\
    \ i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] == ',') {\n   \
    \         words.push_back(word);\n            word = \"\";\n        } else {\n\
    \            word += s[i];\n        }\n    }\n    words.push_back(word);\n   \
    \ return words;", "  std::vector<std::string> words;\n  std::string word;\n  for\
    \ (char c : s) {\n    if (c == ' ' || c == ',') {\n      if (!word.empty()) {\n\
    \        words.push_back(word);\n        word.clear();\n      }\n    } else {\n\
    \      word += c;\n    }\n  }\n  if (!word.empty()) {\n    words.push_back(word);\n\
    \  }\n  return words;", "  std::stringstream ss(s);\n  std::vector<std::string>\
    \ words;\n  std::string word;\n  while (ss >> word) {\n    words.push_back(word);\n\
    \  }\n  return words;", "  std::vector<std::string> result;\n  std::stringstream\
    \ ss(s);\n  std::string word;\n  while (std::getline(ss, word, ' ')) {\n    result.push_back(word);\n\
    \  }\n  return result;", "    std::stringstream ss(s);\n    std::vector<std::string>\
    \ words;\n    std::string word;\n    while (ss >> word) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  for (char c : s) {\n    if (c == ' ' || c == ',') {\n      if (!word.empty())\
    \ {\n        words.push_back(word);\n        word.clear();\n      }\n    } else\
    \ {\n      word += c;\n    }\n  }\n  if (!word.empty()) {\n    words.push_back(word);\n\
    \  }\n  return words;", "\tstd::vector<std::string> result;\n\tstd::stringstream\
    \ ss(s);\n\tstd::string word;\n\twhile (ss >> word) {\n\t\tresult.push_back(word);\n\
    \t}\n\treturn result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' ||\
    \ s[i] == ',') {\n            words.push_back(word);\n            word = \"\"\
    ;\n        } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "  std::vector<std::string> v;\n  std::stringstream ss(s);\n\
    \  std::string word;\n  while (ss >> word) {\n    v.push_back(word);\n  }\n  return\
    \ v;", "    std::vector<std::string> words;\n    std::string word;\n    for (auto\
    \ c : s) {\n        if (c == ' ' || c == ',') {\n            if (!word.empty())\
    \ {\n                words.push_back(word);\n                word.clear();\n \
    \           }\n        } else {\n            word += c;\n        }\n    }\n  \
    \  if (!word.empty()) {\n        words.push_back(word);\n    }\n    return words;",
  "    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n  \
    \  return result;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (getline(ss, word, ' ')) {\n\
    \        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss\
    \ >> word) {\n        result.push_back(word);\n    }\n    return result;", " \
    \   std::vector<std::string> v;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        v.push_back(word);\n    }\n    return\
    \ v;", "    std::vector<std::string> result;\n    std::stringstream ss(s);\n \
    \   std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == ' ' || s[i] ==\
    \ ',') {\n      words.push_back(word);\n      word = \"\";\n    } else {\n   \
    \   word += s[i];\n    }\n  }\n  words.push_back(word);\n  return words;", " \
    \ std::vector<std::string> v;\n  std::stringstream ss(s);\n  std::string word;\n\
    \  while (ss >> word) {\n    v.push_back(word);\n  }\n  return v;", "    std::stringstream\
    \ ss(s);\n    std::string word;\n    std::vector<std::string> words;\n    while\
    \ (ss >> word) {\n        words.push_back(word);\n    }\n    return words;", " \
    \ std::vector<std::string> result;\n  std::stringstream ss(s);\n  std::string\
    \ word;\n  while (std::getline(ss, word, ' ')) {\n    result.push_back(word);\n\
    \  }\n  return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' ||\
    \ s[i] == ',') {\n            words.push_back(word);\n            word = \"\"\
    ;\n        } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (std::getline(ss, word, ' ')) {\n \
    \       words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  std::stringstream ss(s);\n  while (std::getline(ss,\
    \ word, ' ')) {\n    words.push_back(word);\n  }\n  return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n  \
    \      if (s[i] == ' ' || s[i] == ',') {\n            words.push_back(word);\n\
    \            word = \"\";\n        } else {\n            word += s[i];\n     \
    \   }\n    }\n    words.push_back(word);\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    for (auto c : s) {\n        if (c == ' '\
    \ || c == ',') {\n            if (!word.empty()) {\n                words.push_back(word);\n\
    \                word.clear();\n            }\n        } else {\n            word\
    \ += c;\n        }\n    }\n    if (!word.empty()) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "  std::vector<std::string> v;\n  std::stringstream ss(s);\n\
    \  std::string word;\n  while (std::getline(ss, word, ' ')) {\n    v.push_back(word);\n\
    \  }\n  return v;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "  std::vector<std::string> words;\n  std::string word;\n\
    \  for (auto c : s) {\n    if (c == ' ' || c == ',') {\n      if (!word.empty())\
    \ {\n        words.push_back(word);\n        word.clear();\n      }\n    } else\
    \ {\n      word += c;\n    }\n  }\n  if (!word.empty()) {\n    words.push_back(word);\n\
    \  }\n  return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    int i = 0;\n    while (i < s.length()) {\n        if (s[i] == ' '\
    \ || s[i] == ',') {\n            if (word.length() > 0) {\n                words.push_back(word);\n\
    \                word = \"\";\n            }\n        } else {\n            word\
    \ += s[i];\n        }\n        i++;\n    }\n    if (word.length() > 0) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n  \
    \      if (s[i] == ' ' || s[i] == ',') {\n            words.push_back(word);\n\
    \            word = \"\";\n        } else {\n            word += s[i];\n     \
    \   }\n    }\n    words.push_back(word);\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::stringstream ss(s);\n    std::string word;\n    while (std::getline(ss,\
    \ word, ' ')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n  \
    \  return result;", "\tstd::vector<std::string> words;\n\tstd::string word;\n\t\
    for (int i = 0; i < s.size(); i++) {\n\t\tif (s[i] == ' ' || s[i] == ',') {\n\t\
    \t\twords.push_back(word);\n\t\t\tword = \"\";\n\t\t}\n\t\telse {\n\t\t\tword\
    \ += s[i];\n\t\t}\n\t}\n\twords.push_back(word);\n\treturn words;", "    std::vector<std::string>\
    \ result;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss\
    \ >> word) {\n        result.push_back(word);\n    }\n    return result;", " \
    \ std::vector<std::string> words;\n  std::stringstream ss(s);\n  std::string word;\n\
    \  while (std::getline(ss, word, ' ')) {\n    words.push_back(word);\n  }\n  return\
    \ words;", "    std::vector<std::string> words;\n    std::string word;\n    for\
    \ (auto c : s) {\n        if (c == ' ' || c == ',') {\n            if (!word.empty())\
    \ {\n                words.push_back(word);\n                word.clear();\n \
    \           }\n        } else {\n            word += c;\n        }\n    }\n  \
    \  if (!word.empty()) {\n        words.push_back(word);\n    }\n    return words;",
  "    std::vector<std::string> v;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        v.push_back(word);\n    }\n    return\
    \ v;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        v.push_back(word);\n    }\n    return\
    \ v;", "    std::vector<std::string> words;\n    std::string word;\n    for (int\
    \ i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] == ',') {\n   \
    \         words.push_back(word);\n            word = \"\";\n        } else {\n\
    \            word += s[i];\n        }\n    }\n    words.push_back(word);\n   \
    \ return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (char c : s) {\n        if (c == ' ' || c == ',') {\n       \
    \     if (!word.empty()) {\n                words.push_back(word);\n         \
    \       word.clear();\n            }\n        } else {\n            word += c;\n\
    \        }\n    }\n    if (!word.empty()) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (std::getline(ss, word, ' ')) {\n \
    \       words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ v;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word)\
    \ {\n        v.push_back(word);\n    }\n    return v;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n  \
    \      if (s[i] == ' ' || s[i] == ',') {\n            words.push_back(word);\n\
    \            word = \"\";\n        } else {\n            word += s[i];\n     \
    \   }\n    }\n    words.push_back(word);\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (char c : s) {\n    if (c == ' ' || c ==\
    \ ',') {\n      if (!word.empty()) {\n        words.push_back(word);\n       \
    \ word.clear();\n      }\n    } else {\n      word += c;\n    }\n  }\n  if (!word.empty())\
    \ {\n    words.push_back(word);\n  }\n  return words;", "    std::vector<std::string>\
    \ v;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word)\
    \ {\n        v.push_back(word);\n    }\n    return v;", "  std::vector<std::string>\
    \ result;\n  std::stringstream ss(s);\n  std::string word;\n  while (ss >> word)\
    \ {\n    result.push_back(word);\n  }\n  return result;", "    std::vector<std::string>\
    \ v;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word)\
    \ {\n        v.push_back(word);\n    }\n    return v;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    for (char c : s) {\n        if (c == ' '\
    \ || c == ',') {\n            if (!word.empty()) {\n                words.push_back(word);\n\
    \                word.clear();\n            }\n        } else {\n            word\
    \ += c;\n        }\n    }\n    if (!word.empty()) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (char c : s) {\n        if (c == ' ' || c == ',') {\n       \
    \     if (!word.empty()) {\n                words.push_back(word);\n         \
    \       word.clear();\n            }\n        } else {\n            word += c;\n\
    \        }\n    }\n    if (!word.empty()) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> v;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' ||\
    \ s[i] == ',') {\n            words.push_back(word);\n            word = \"\"\
    ;\n        } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ' || s[i] ==\
    \ ',') {\n            words.push_back(word);\n            word = \"\";\n     \
    \   } else {\n            word += s[i];\n        }\n    }\n    words.push_back(word);\n\
    \    return words;", "    std::vector<std::string> v;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        v.push_back(word);\n\
    \    }\n    return v;"]
stop_tokens:
- "\n}"

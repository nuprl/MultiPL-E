name: HumanEval_39_prime_fib
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// prime_fib returns n-th number\
  \ that is a Fibonacci number and it's also prime.\n// >>> prime_fib((1))\n// (2)\n\
  // >>> prime_fib((2))\n// (3)\n// >>> prime_fib((3))\n// (5)\n// >>> prime_fib((4))\n\
  // (13)\n// >>> prime_fib((5))\n// (89)\nlong prime_fib(long n) {\n"
tests: "}\nint main() {\n    auto candidate = prime_fib;\n    assert(candidate((1))\
  \ == (2));\n    assert(candidate((2)) == (3));\n    assert(candidate((3)) == (5));\n\
  \    assert(candidate((4)) == (13));\n    assert(candidate((5)) == (89));\n    assert(candidate((6))\
  \ == (233));\n    assert(candidate((7)) == (1597));\n    assert(candidate((8)) ==\
  \ (28657));\n    assert(candidate((9)) == (514229));\n    assert(candidate((10))\
  \ == (433494437));\n}\n"
completions: ["    long a = 1, b = 1, c = 2, count = 2;\n    while (count < n) {\n\
    \        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            count++;\n        }\n    }\n    return c;", "    long a = 1,\
    \ b = 1, c = 2, i = 3;\n    while (i <= n) {\n        c = a + b;\n        a =\
    \ b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n        }\n\
    \    }\n    return c;", "    // your code here\n    long a=1,b=1,c=0;\n    long\
    \ count=0;\n    while(count<n)\n    {\n        c=a+b;\n        a=b;\n        b=c;\n\
    \        if(isPrime(c))\n        {\n            count++;\n        }\n    }\n \
    \   return c;", "  long a = 1;\n  long b = 1;\n  long c = 2;\n  long i = 2;\n\
    \  while (i < n) {\n    c = a + b;\n    a = b;\n    b = c;\n    if (c % 2 == 0)\
    \ {\n      i++;\n    }\n  }\n  return c;", "    long a = 1, b = 1, c = 2, i =\
    \ 2;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n\
    \        i++;\n        while (c % 2 == 0) {\n            c = a + b;\n        \
    \    a = b;\n            b = c;\n            i++;\n        }\n    }\n    return\
    \ c;", "    long a = 1, b = 1, c = 2, i = 3;\n    while (i < n) {\n        a =\
    \ b;\n        b = c;\n        c = a + b;\n        if (c % 2 == 0) {\n        \
    \    c += 1;\n        }\n        while (!is_prime(c)) {\n            c += 2;\n\
    \        }\n        i += 1;\n    }\n    return c;", "    long a = 1, b = 1, c\
    \ = 1;\n    long i = 1;\n    while (i < n) {\n        c = a + b;\n        a =\
    \ b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n        }\n\
    \    }\n    return c;", "    long a = 2, b = 3, c = 5, i = 5;\n    while (i <\
    \ n) {\n        a = b;\n        b = c;\n        c = a + b;\n        if (c % 2\
    \ != 0 && c % 3 != 0 && c % 5 != 0 && c % 7 != 0 && c % 11 != 0 && c % 13 != 0)\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long a = 2, b =\
    \ 3, c = 5, i = 3;\n    while (i < n) {\n        a = b;\n        b = c;\n    \
    \    c = a + b;\n        if (c % 2 != 0) {\n            long j = 3;\n        \
    \    while (j * j <= c) {\n                if (c % j == 0)\n                 \
    \   break;\n                j += 2;\n            }\n            if (j * j > c)\n\
    \                i += 1;\n        }\n    }\n    return c;", "    long a = 2, b\
    \ = 3, c = 5, i = 3;\n    while (i < n) {\n        a = b;\n        b = c;\n  \
    \      c = a + b;\n        if (c % 2 != 0) {\n            i++;\n        }\n  \
    \  }\n    return c;", "    long a = 1, b = 1, c = 2, i = 3;\n    while (i <= n)\
    \ {\n        c = a + b;\n        a = b;\n        b = c;\n        if (is_prime(c))\
    \ {\n            i++;\n        }\n    }\n    return c;", "    long f1 = 2, f2\
    \ = 3, f3 = 5;\n    if (n == 1) return f1;\n    if (n == 2) return f2;\n    if\
    \ (n == 3) return f3;\n    for (long i = 4; i <= n; i++) {\n        long f4 =\
    \ f1 + f2 + f3;\n        f1 = f2;\n        f2 = f3;\n        f3 = f4;\n    }\n\
    \    return f3;", "\tlong a = 1, b = 1, c = 2, i = 1;\n\twhile (i < n) {\n\t\t\
    c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\tif (is_prime(c)) {\n\t\t\ti++;\n\t\t}\n\
    \t}\n\treturn c;", "    long a = 1, b = 1, c = 2, d = 0;\n    while (n > 0) {\n\
    \        if (c % 2 == 0) {\n            a = a + b;\n            b = a + b;\n \
    \           c = c + 2;\n        } else {\n            if (is_prime(a)) {\n   \
    \             n--;\n                d = a;\n            }\n            if (is_prime(b))\
    \ {\n                n--;\n                d = b;\n            }\n           \
    \ a = a + b;\n            b = a + b;\n            c = c + 2;\n        }\n    }\n\
    \    return d;", "    long a = 2, b = 3, c = 5, i = 3;\n    while (i < n) {\n\
    \        a = b;\n        b = c;\n        c = a + b;\n        if (c % 2 == 0)\n\
    \            continue;\n        bool isPrime = true;\n        for (long j = 3;\
    \ j * j <= c; j += 2) {\n            if (c % j == 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n        }\n        if (isPrime)\n\
    \            i++;\n    }\n    return c;", "    long a = 2, b = 3, c = 5, i = 5;\n\
    \    while (i < n) {\n        a = b;\n        b = c;\n        c = a + b;\n   \
    \     if (c % 2 != 0 && c % 3 != 0 && c % 5 != 0 && c % 7 != 0 && c % 11 != 0\
    \ && c % 13 != 0) {\n            i++;\n        }\n    }\n    return c;", "   \
    \ long a = 2, b = 3, c = 5, i = 3;\n    while (i < n) {\n        a = b;\n    \
    \    b = c;\n        c = a + b;\n        if (c % 2 != 0) {\n            bool flag\
    \ = true;\n            for (long j = 3; j < sqrt(c); j += 2) {\n             \
    \   if (c % j == 0) {\n                    flag = false;\n                   \
    \ break;\n                }\n            }\n            if (flag) {\n        \
    \        i++;\n            }\n        }\n    }\n    return c;", "    long a =\
    \ 1, b = 1, c = 2, i = 3;\n    while (i <= n) {\n        c = a + b;\n        a\
    \ = b;\n        b = c;\n        if (c % 2 == 0) {\n            i++;\n        }\n\
    \    }\n    return c;", "    long a = 1, b = 1, c = 2, i = 1;\n    while (i <\
    \ n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if (c % 2\
    \ != 0) {\n            i++;\n        }\n    }\n    return c;", "    long i = 1;\n\
    \    long j = 2;\n    long k = 3;\n    long count = 2;\n    while (count < n)\
    \ {\n        k = i + j;\n        i = j;\n        j = k;\n        if (is_prime(k))\
    \ {\n            count += 1;\n        }\n    }\n    return k;"]
stop_tokens:
- "\n}"

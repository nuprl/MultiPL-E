name: HumanEval_16_count_distinct_characters
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
  \ how many distinct characters (regardless of case) does it consist of\n// >>> count_distinct_characters((\"\
  xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"Jerry\"))\n// (4)\nlong\
  \ count_distinct_characters(std::string string) {\n"
tests: "}\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
  \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
  abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
  \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
completions: ["    // your code goes here\n    int count = 0;\n    std::set<char>\
    \ s;\n    for(int i = 0; i < string.length(); i++){\n        s.insert(tolower(string[i]));\n\
    \    }\n    return s.size();", "    std::set<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        s.insert(string[i]);\n    }\n    return s.size();", "    std::set<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        s.insert(string[i]);\n\
    \    }\n    return s.size();", "\t// your code goes here\n\tstd::set<char> s;\n\
    \tfor (int i = 0; i < string.length(); i++) {\n\t\ts.insert(tolower(string[i]));\n\
    \t}\n\treturn s.size();", "    long count = 0;\n    std::set<char> s;\n    for(int\
    \ i = 0; i < string.length(); i++) {\n        s.insert(tolower(string[i]));\n\
    \    }\n    return s.size();", "    std::set<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        s.insert(string[i]);\n    }\n    return s.size();", "\tlong count = 0;\n\
    \tstd::string temp = \"\";\n\tfor (int i = 0; i < string.length(); i++) {\n\t\t\
    if (temp.find(tolower(string[i])) == std::string::npos) {\n\t\t\ttemp += tolower(string[i]);\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "    std::set<char> s;\n    for(int\
    \ i=0;i<string.length();i++){\n        s.insert(string[i]);\n    }\n    return\
    \ s.size();", "    // Your code here\n    std::set<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        s.insert(string[i]);\n    }\n    return s.size();", "    std::set<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        s.insert(tolower(string[i]));\n\
    \    }\n    return s.size();", "    std::set<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        s.insert(string[i]);\n    }\n    return s.size();", "    int count =\
    \ 0;\n    std::set<char> s;\n    for(int i = 0; i < string.length(); i++){\n \
    \       s.insert(tolower(string[i]));\n    }\n    return s.size();", "    std::set<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        s.insert(string[i]);\n\
    \    }\n    return s.size();", "    long count = 0;\n    std::set<char> s;\n \
    \   for(int i = 0; i < string.length(); i++) {\n        s.insert(tolower(string[i]));\n\
    \    }\n    return s.size();", "    std::set<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        s.insert(string[i]);\n    }\n    return s.size();", "    std::set<char>\
    \ s;\n    for(int i=0;i<string.length();i++){\n        s.insert(string[i]);\n\
    \    }\n    return s.size();", "    std::set<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        s.insert(string[i]);\n    }\n    return s.size();", "    std::transform(string.begin(),\
    \ string.end(), string.begin(), ::tolower);\n    std::set<char> s;\n    for (int\
    \ i = 0; i < string.length(); i++) {\n        s.insert(string[i]);\n    }\n  \
    \  return s.size();", "    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++){\n        if(string[i] != ' '){\n            count++;\n            for(int\
    \ j = i+1; j < string.length(); j++){\n                if(string[i] == string[j]){\n\
    \                    string[j] = ' ';\n                }\n            }\n    \
    \    }\n    }\n    return count;", "    std::set<char> s;\n    for(int i=0;i<string.length();i++){\n\
    \        s.insert(string[i]);\n    }\n    return s.size();"]
stop_tokens:
- "\n}"

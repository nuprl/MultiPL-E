name: HumanEval_67_fruit_distribution
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will be\
  \ given a string that represents a number of apples and oranges \n// that are distributed\
  \ in a basket of fruit this basket contains \n// apples, oranges, and mango fruits.\
  \ Given the string that represents the total number of \n// the oranges and apples\
  \ and an integer that represent the total number of the fruits \n// in the basket\
  \ return the number of the mango fruits in the basket.\n// for examble:\n// >>>\
  \ fruit_distribution((\"5 apples and 6 oranges\"), (19))\n// (8)\n// >>> fruit_distribution((\"\
  0 apples and 1 oranges\"), (3))\n// (2)\n// >>> fruit_distribution((\"2 apples and\
  \ 3 oranges\"), (100))\n// (95)\n// >>> fruit_distribution((\"100 apples and 1 oranges\"\
  ), (120))\n// (19)\nlong fruit_distribution(std::string s, long n) {\n"
tests: "}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
  5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
  \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
  ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
  \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
  2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and 100\
  \ oranges\"), (120)) == (19));\n}\n"
completions: ["    // your code here\n    int a,o;\n    sscanf(s.c_str(),\"%d apples\
    \ and %d oranges\",&a,&o);\n    return n-a-o;", "    int a, o;\n    sscanf(s.c_str(),\
    \ \"%d apples and %d oranges\", &a, &o);\n    return n - a - o;", "    int i =\
    \ 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int\
    \ o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n   \
    \ int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii =\
    \ 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n   \
    \ int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int tt =\
    \ 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n   \
    \ int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc =\
    \ 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n   \
    \ int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll\
    \ = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n\
    \    int rrr = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int\
    \ www = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n    int aaaa\
    \ = 0;\n    int bbbb = 0;\n    int cccc = 0;\n    int dddd = 0", "    // your\
    \ code here\n    long apple, orange;\n    std::stringstream ss(s);\n    ss >>\
    \ apple >> s >> orange;\n    return n - apple - orange;", "    // your code here\n\
    \    std::stringstream ss(s);\n    std::string word;\n    long apples = 0;\n \
    \   long oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\"\
    ) {\n            ss >> word;\n            apples = std::stol(word);\n        }\n\
    \        else if(word == \"oranges\") {\n            ss >> word;\n           \
    \ oranges = std::stol(word);\n        }\n    }\n    return n - apples - oranges;",
  "    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n\
    \    int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int\
    \ t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n\
    \    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int\
    \ e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n\
    \    int kk=0;\n    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n \
    \   int qq=0;\n    int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n  \
    \  int ww=0;\n    int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n   \
    \ int bb=0;\n    int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int\
    \ gg=0;\n    int hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int\
    \ lll=0;\n    int mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n   \
    \ int rrr=0;\n    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n\
    \    int xxx=0;\n    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n\
    \    int cccc=0;\n   ", "    // your code here\n    int i=0;\n    int count=0;\n\
    \    while(s[i]!=' '){\n        count++;\n        i++;\n    }\n    int apples=0;\n\
    \    int oranges=0;\n    int j=0;\n    while(j<count){\n        apples=apples*10+(s[j]-'0');\n\
    \        j++;\n    }\n    i=i+6;\n    count=0;\n    while(s[i]!=' '){\n      \
    \  count++;\n        i++;\n    }\n    j=i+1;\n    while(j<i+count+1){\n      \
    \  oranges=oranges*10+(s[j]-'0');\n        j++;\n    }\n    return n-(apples+oranges);",
  "    // your code here\n    long count = 0;\n    long apples = 0;\n    long oranges\
    \ = 0;\n    long mango = 0;\n    for(int i = 0; i < s.length(); i++){\n      \
    \  if(s[i] == 'a'){\n            apples++;\n        }\n        if(s[i] == 'o'){\n\
    \            oranges++;\n        }\n    }\n    mango = n - apples - oranges;\n\
    \    return mango;", "    // your code here\n    long a,o;\n    std::stringstream\
    \ ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;", "    // your code here\n    long\
    \ apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while(std::getline(ss, temp, ' ')){\n   \
    \     if(temp == \"apples\"){\n            apples = std::stol(std::getline(ss,\
    \ temp, ' '));\n        }\n        else if(temp == \"oranges\"){\n           \
    \ oranges = std::stol(std::getline(ss, temp, ' '));\n        }\n    }\n    mangoes\
    \ = n - apples - oranges;\n    return mangoes;", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int apples = 0;\n    int oranges = 0;\n \
    \   while(ss >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n\
    \            apples = std::stoi(word);\n        }\n        else if(word == \"\
    oranges\") {\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - (apples + oranges);", "    // your code here\n\
    \    std::stringstream ss(s);\n    std::string temp;\n    int apples = 0;\n  \
    \  int oranges = 0;\n    while(std::getline(ss, temp, ' ')){\n        if(temp\
    \ == \"apples\"){\n            std::getline(ss, temp, ' ');\n            apples\
    \ = std::stoi(temp);\n        }\n        else if(temp == \"oranges\"){\n     \
    \       std::getline(ss, temp, ' ');\n            oranges = std::stoi(temp);\n\
    \        }\n    }\n    return n - (apples + oranges);", "    // your code here\n\
    \    std::stringstream ss(s);\n    std::string word;\n    long apple = 0;\n  \
    \  long orange = 0;\n    while(ss >> word){\n        if(word == \"apples\"){\n\
    \            ss >> word;\n            apple = std::stol(word);\n        }\n  \
    \      else if(word == \"oranges\"){\n            ss >> word;\n            orange\
    \ = std::stol(word);\n        }\n    }\n    return n - apple - orange;", "   \
    \ long apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    long i =\
    \ 0;\n    while(s[i] != ' '){\n        apples = apples * 10 + (s[i] - '0');\n\
    \        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n        oranges =\
    \ oranges * 10 + (s[i] - '0');\n        i++;\n    }\n    mangoes = n - apples\
    \ - oranges;\n    return mangoes;", "    // your code here\n    int apple = 0,\
    \ orange = 0;\n    int i = 0;\n    while(s[i] != ' ')\n    {\n        apple =\
    \ apple * 10 + (s[i] - '0');\n        i++;\n    }\n    i += 5;\n    while(s[i]\
    \ != ' ')\n    {\n        orange = orange * 10 + (s[i] - '0');\n        i++;\n\
    \    }\n    return n - (apple + orange);", "    long apples = 0;\n    long oranges\
    \ = 0;\n    std::stringstream ss(s);\n    ss >> apples >> s >> oranges;\n    return\
    \ n - apples - oranges;", "    long apples = 0;\n    long oranges = 0;\n    long\
    \ mangoes = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(ss\
    \ >> temp) {\n        if(temp == \"apples\") {\n            ss >> apples;\n  \
    \      }\n        else if(temp == \"oranges\") {\n            ss >> oranges;\n\
    \        }\n    }\n    mangoes = n - (apples + oranges);\n    return mangoes;",
  "    // your code here\n    int a,o;\n    sscanf(s.c_str(),\"%d apples and %d oranges\"\
    ,&a,&o);\n    return n-a-o;", "    // your code here\n    int i=0;\n    int j=0;\n\
    \    std::string str;\n    while(s[i]!=' ')\n    {\n        str+=s[i];\n     \
    \   i++;\n    }\n    int a=std::stoi(str);\n    str=\"\";\n    i+=6;\n    while(s[i]!='\
    \ ')\n    {\n        str+=s[i];\n        i++;\n    }\n    int b=std::stoi(str);\n\
    \    return n-(a+b);", "    // your code here\n    long a,o;\n    std::stringstream\
    \ ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;"]
stop_tokens:
- "\n}"

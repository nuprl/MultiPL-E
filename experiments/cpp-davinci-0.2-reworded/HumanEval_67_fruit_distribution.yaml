name: HumanEval_67_fruit_distribution
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will be\
  \ given a string that represents a number of apples and oranges \n// that are distributed\
  \ in a basket of fruit this basket contains \n// apples, oranges, and mango fruits.\
  \ Given the string that represents the total number of \n// the oranges and apples\
  \ and an integer that represent the total number of the fruits \n// in the basket\
  \ return the number of the mango fruits in the basket.\n// for examble:\n// >>>\
  \ fruit_distribution((\"5 apples and 6 oranges\"), (19))\n// (8)\n// >>> fruit_distribution((\"\
  0 apples and 1 oranges\"), (3))\n// (2)\n// >>> fruit_distribution((\"2 apples and\
  \ 3 oranges\"), (100))\n// (95)\n// >>> fruit_distribution((\"100 apples and 1 oranges\"\
  ), (120))\n// (19)\nlong fruit_distribution(std::string s, long n) {\n"
tests: "}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
  5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
  \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
  ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
  \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
  2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and 100\
  \ oranges\"), (120)) == (19));\n}\n"
completions: ["    // your code here\n    int a,o;\n    sscanf(s.c_str(),\"%d apples\
    \ and %d oranges\",&a,&o);\n    return n-a-o;", "    int a, o;\n    sscanf(s.c_str(),\
    \ \"%d apples and %d oranges\", &a, &o);\n    return n - a - o;", "    int i =\
    \ 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int\
    \ o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n   \
    \ int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii =\
    \ 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n   \
    \ int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int tt =\
    \ 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n   \
    \ int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc =\
    \ 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n   \
    \ int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll\
    \ = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n\
    \    int rrr = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int\
    \ www = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n    int aaaa\
    \ = 0;\n    int bbbb = 0;\n    int cccc = 0;\n    int dddd = 0", "    // your\
    \ code here\n    long apple, orange;\n    std::stringstream ss(s);\n    ss >>\
    \ apple >> s >> orange;\n    return n - apple - orange;", "    // your code here\n\
    \    std::stringstream ss(s);\n    std::string word;\n    long apples = 0;\n \
    \   long oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\"\
    ) {\n            ss >> word;\n            apples = std::stol(word);\n        }\n\
    \        else if(word == \"oranges\") {\n            ss >> word;\n           \
    \ oranges = std::stol(word);\n        }\n    }\n    return n - apples - oranges;",
  "    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n\
    \    int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int\
    \ t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n\
    \    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int\
    \ e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n\
    \    int kk=0;\n    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n \
    \   int qq=0;\n    int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n  \
    \  int ww=0;\n    int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n   \
    \ int bb=0;\n    int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int\
    \ gg=0;\n    int hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int\
    \ lll=0;\n    int mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n   \
    \ int rrr=0;\n    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n\
    \    int xxx=0;\n    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n\
    \    int cccc=0;\n   ", "    // your code here\n    int i=0;\n    int count=0;\n\
    \    while(s[i]!=' '){\n        count++;\n        i++;\n    }\n    int apples=0;\n\
    \    int oranges=0;\n    int j=0;\n    while(j<count){\n        apples=apples*10+(s[j]-'0');\n\
    \        j++;\n    }\n    i=i+6;\n    count=0;\n    while(s[i]!=' '){\n      \
    \  count++;\n        i++;\n    }\n    j=i+1;\n    while(j<i+count+1){\n      \
    \  oranges=oranges*10+(s[j]-'0');\n        j++;\n    }\n    return n-(apples+oranges);",
  "    // your code here\n    long count = 0;\n    long apples = 0;\n    long oranges\
    \ = 0;\n    long mango = 0;\n    for(int i = 0; i < s.length(); i++){\n      \
    \  if(s[i] == 'a'){\n            apples++;\n        }\n        if(s[i] == 'o'){\n\
    \            oranges++;\n        }\n    }\n    mango = n - apples - oranges;\n\
    \    return mango;", "    // your code here\n    long a,o;\n    std::stringstream\
    \ ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;", "    // your code here\n    long\
    \ apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while(std::getline(ss, temp, ' ')){\n   \
    \     if(temp == \"apples\"){\n            apples = std::stol(std::getline(ss,\
    \ temp, ' '));\n        }\n        else if(temp == \"oranges\"){\n           \
    \ oranges = std::stol(std::getline(ss, temp, ' '));\n        }\n    }\n    mangoes\
    \ = n - apples - oranges;\n    return mangoes;", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int apples = 0;\n    int oranges = 0;\n \
    \   while(ss >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n\
    \            apples = std::stoi(word);\n        }\n        else if(word == \"\
    oranges\") {\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - (apples + oranges);", "    // your code here\n\
    \    std::stringstream ss(s);\n    std::string temp;\n    int apples = 0;\n  \
    \  int oranges = 0;\n    while(std::getline(ss, temp, ' ')){\n        if(temp\
    \ == \"apples\"){\n            std::getline(ss, temp, ' ');\n            apples\
    \ = std::stoi(temp);\n        }\n        else if(temp == \"oranges\"){\n     \
    \       std::getline(ss, temp, ' ');\n            oranges = std::stoi(temp);\n\
    \        }\n    }\n    return n - (apples + oranges);", "    // your code here\n\
    \    std::stringstream ss(s);\n    std::string word;\n    long apple = 0;\n  \
    \  long orange = 0;\n    while(ss >> word){\n        if(word == \"apples\"){\n\
    \            ss >> word;\n            apple = std::stol(word);\n        }\n  \
    \      else if(word == \"oranges\"){\n            ss >> word;\n            orange\
    \ = std::stol(word);\n        }\n    }\n    return n - apple - orange;", "   \
    \ long apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    long i =\
    \ 0;\n    while(s[i] != ' '){\n        apples = apples * 10 + (s[i] - '0');\n\
    \        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n        oranges =\
    \ oranges * 10 + (s[i] - '0');\n        i++;\n    }\n    mangoes = n - apples\
    \ - oranges;\n    return mangoes;", "    // your code here\n    int apple = 0,\
    \ orange = 0;\n    int i = 0;\n    while(s[i] != ' ')\n    {\n        apple =\
    \ apple * 10 + (s[i] - '0');\n        i++;\n    }\n    i += 5;\n    while(s[i]\
    \ != ' ')\n    {\n        orange = orange * 10 + (s[i] - '0');\n        i++;\n\
    \    }\n    return n - (apple + orange);", "    long apples = 0;\n    long oranges\
    \ = 0;\n    std::stringstream ss(s);\n    ss >> apples >> s >> oranges;\n    return\
    \ n - apples - oranges;", "    long apples = 0;\n    long oranges = 0;\n    long\
    \ mangoes = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(ss\
    \ >> temp) {\n        if(temp == \"apples\") {\n            ss >> apples;\n  \
    \      }\n        else if(temp == \"oranges\") {\n            ss >> oranges;\n\
    \        }\n    }\n    mangoes = n - (apples + oranges);\n    return mangoes;",
  "    // your code here\n    int a,o;\n    sscanf(s.c_str(),\"%d apples and %d oranges\"\
    ,&a,&o);\n    return n-a-o;", "    // your code here\n    int i=0;\n    int j=0;\n\
    \    std::string str;\n    while(s[i]!=' ')\n    {\n        str+=s[i];\n     \
    \   i++;\n    }\n    int a=std::stoi(str);\n    str=\"\";\n    i+=6;\n    while(s[i]!='\
    \ ')\n    {\n        str+=s[i];\n        i++;\n    }\n    int b=std::stoi(str);\n\
    \    return n-(a+b);", "    // your code here\n    long a,o;\n    std::stringstream\
    \ ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    int apples = 0;\n    int oranges = 0;\n \
    \   while(std::getline(ss, temp, ' ')){\n        if(temp == \"apples\"){\n   \
    \         apples = std::stoi(temp);\n        }\n        else if(temp == \"oranges\"\
    ){\n            oranges = std::stoi(temp);\n        }\n    }\n    return n - (apples\
    \ + oranges);", "    // your code here\n    long num_apples = 0;\n    long num_oranges\
    \ = 0;\n    long num_mangoes = 0;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"apples\") {\n         \
    \   ss >> word;\n            num_apples = std::stol(word);\n        }\n      \
    \  else if(word == \"oranges\") {\n            ss >> word;\n            num_oranges\
    \ = std::stol(word);\n        }\n    }\n    num_mangoes = n - num_apples - num_oranges;\n\
    \    return num_mangoes;", "    // your code here\n    long a,o;\n    std::stringstream\
    \ ss;\n    ss<<s;\n    ss>>a>>s>>o;\n    return n-a-o;", "    long apples = 0;\n\
    \    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    while(getline(ss, temp, ' ')){\n        if(temp ==\
    \ \"apples\"){\n            apples = std::stol(temp);\n        }\n        else\
    \ if(temp == \"oranges\"){\n            oranges = std::stol(temp);\n        }\n\
    \    }\n    mangoes = n - (apples + oranges);\n    return mangoes;", "    // Write\
    \ your code here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    long apples, oranges;\n \
    \   std::stringstream ss(s);\n    ss >> apples >> s >> oranges;\n    return n\
    \ - apples - oranges;", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n    \
    \        apples = std::stoi(word);\n        }\n        else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            oranges = std::stoi(word);\n       \
    \ }\n    }\n    return n - (apples + oranges);", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    std::vector<std::string> result;\n    while(ss\
    \ >> temp)\n        result.push_back(temp);\n    int apples = std::stoi(result[0]);\n\
    \    int oranges = std::stoi(result[2]);\n    return n - apples - oranges;", " \
    \   // your code here\n    long a,o;\n    std::stringstream ss(s);\n    ss>>a>>s>>o;\n\
    \    return n-a-o;", "    std::stringstream ss(s);\n    long a, o;\n    ss >>\
    \ a >> s >> o >> s;\n    return n - a - o;", "    int apples = 0, oranges = 0;\n\
    \    int i = 0;\n    while(s[i] != ' ') {\n        apples = apples * 10 + (s[i]\
    \ - '0');\n        i++;\n    }\n    i += 6;\n    while(s[i] != ' ') {\n      \
    \  oranges = oranges * 10 + (s[i] - '0');\n        i++;\n    }\n    return n -\
    \ (apples + oranges);", "    // your code here\n    long apples = 0;\n    long\
    \ oranges = 0;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n    \
    \        apples = std::stol(word);\n        } else if(word == \"oranges\") {\n\
    \            ss >> word;\n            oranges = std::stol(word);\n        }\n\
    \    }\n    return n - apples - oranges;", "    std::stringstream ss(s);\n   \
    \ std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while (ss\
    \ >> word) {\n        if (word == \"apples\") {\n            ss >> word;\n   \
    \         apples = std::stoi(word);\n        }\n        if (word == \"oranges\"\
    ) {\n            ss >> word;\n            oranges = std::stoi(word);\n       \
    \ }\n    }\n    return n - (apples + oranges);", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string token;\n    std::vector<std::string> tokens;\n    while(std::getline(ss,\
    \ token, ' ')) {\n        tokens.push_back(token);\n    }\n    int apples = std::stoi(tokens[0]);\n\
    \    int oranges = std::stoi(tokens[3]);\n    return n - apples - oranges;", " \
    \   std::stringstream ss(s);\n    std::string word;\n    std::vector<std::string>\
    \ words;\n    while (ss >> word) {\n        words.push_back(word);\n    }\n  \
    \  int apples = std::stoi(words[0]);\n    int oranges = std::stoi(words[3]);\n\
    \    return n - apples - oranges;", "    // your code here\n    long apples =\
    \ 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    std::vector<std::string> words;\n    while(ss >> word)\n\
    \        words.push_back(word);\n    for(int i = 0; i < words.size(); i++){\n\
    \        if(words[i] == \"apples\"){\n            apples = std::stol(words[i-1]);\n\
    \        }\n        if(words[i] == \"oranges\"){\n            oranges = std::stol(words[i-1]);\n\
    \        }\n    }\n    mangoes = n - (apples + oranges);\n    return mangoes;",
  "    // your code here\n    long num_apples = 0;\n    long num_oranges = 0;\n  \
    \  long num_mangoes = 0;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while(ss >> word) {\n        if(word == \"apples\") {\n            ss >>\
    \ word;\n            num_apples = std::stol(word);\n        }\n        else if(word\
    \ == \"oranges\") {\n            ss >> word;\n            num_oranges = std::stol(word);\n\
    \        }\n    }\n    num_mangoes = n - num_apples - num_oranges;\n    return\
    \ num_mangoes;", "    // Your code here\n    long a,o;\n    sscanf(s.c_str(),\"\
    %ld apples and %ld oranges\",&a,&o);\n    return n-a-o;", "    // your code here\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int count = 0;\n    while(s[i]\
    \ != ' '){\n        i++;\n    }\n    while(s[j] != ' '){\n        j++;\n    }\n\
    \    while(s[k] != ' '){\n        k++;\n    }\n    count = n - (stoi(s.substr(0,\
    \ i)) + stoi(s.substr(j, k)));\n    return count;", "    // your code here\n \
    \   int a,o;\n    sscanf(s.c_str(),\"%d apples and %d oranges\",&a,&o);\n    return\
    \ n-a-o;", "    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            ss >>\
    \ word;\n            apples = std::stoi(word);\n        }\n        else if(word\
    \ == \"oranges\") {\n            ss >> word;\n            ss >> word;\n      \
    \      oranges = std::stoi(word);\n        }\n    }\n    return n - (apples +\
    \ oranges);", "    // your code here\n    long a, o;\n    std::stringstream ss(s);\n\
    \    ss >> a >> s >> o;\n    return n - a - o;", "    long apples = 0;\n    long\
    \ oranges = 0;\n    std::stringstream ss(s);\n    std::string token;\n    while\
    \ (std::getline(ss, token, ' ')) {\n        if (token == \"apples\") {\n     \
    \       apples = std::stol(std::getline(ss, token, ' '));\n        } else if (token\
    \ == \"oranges\") {\n            oranges = std::stol(std::getline(ss, token, '\
    \ '));\n        }\n    }\n    return n - (apples + oranges);", "    // your code\
    \ here\n    std::stringstream ss(s);\n    std::string word;\n    std::vector<std::string>\
    \ v;\n    while(ss >> word)\n        v.push_back(word);\n    int apples = std::stoi(v[0]);\n\
    \    int oranges = std::stoi(v[3]);\n    return n - (apples + oranges);", "  \
    \  // your code here\n    // std::cout << s << std::endl;\n    // std::cout <<\
    \ n << std::endl;\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string token;\n    std::string\
    \ delimiter = \" \";\n    size_t pos = 0;\n    while ((pos = s.find(delimiter))\
    \ != std::string::npos) {\n        token = s.substr(0, pos);\n        // std::cout\
    \ << token << std::endl;\n        if (token == \"apples\") {\n            apples\
    \ = std::stol(s.substr(0, pos-1));\n        }\n        if (token == \"oranges\"\
    ) {\n            oranges = std::stol(s.substr(0, pos-1));\n        }\n       \
    \ s.erase(0, pos + delimiter.length());\n    }\n    mangoes = n - (apples + oranges);\n\
    \    return mangoes;", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    std::vector<std::string> tokens;\n    while(std::getline(ss,\
    \ temp, ' ')){\n        tokens.push_back(temp);\n    }\n    long apple = std::stol(tokens[0]);\n\
    \    long orange = std::stol(tokens[3]);\n    return n - (apple + orange);", " \
    \   // your code here\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    long i = 0;\n    while(s[i] != ' '){\n        apples = apples * 10\
    \ + s[i] - '0';\n        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n \
    \       oranges = oranges * 10 + s[i] - '0';\n        i++;\n    }\n    mangoes\
    \ = n - apples - oranges;\n    return mangoes;", "    long apples = 0;\n    long\
    \ oranges = 0;\n    std::stringstream ss(s);\n    ss >> apples >> s >> oranges;\n\
    \    return n - apples - oranges;", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    long apple = 0;\n    long orange = 0;\n \
    \   while(ss >> word){\n        if(word == \"apples\"){\n            ss >> word;\n\
    \            apple = std::stol(word);\n        }\n        else if(word == \"oranges\"\
    ){\n            ss >> word;\n            orange = std::stol(word);\n        }\n\
    \    }\n    return n - apple - orange;", "    // your code here\n    long apples\
    \ = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    while(ss >> temp) {\n        if(temp == \"apples\"\
    ) {\n            ss >> apples;\n        }\n        else if(temp == \"oranges\"\
    ) {\n            ss >> oranges;\n        }\n    }\n    mangoes = n - (apples +\
    \ oranges);\n    return mangoes;", "    // your code here\n    int i=0;\n    int\
    \ j=0;\n    int k=0;\n    int count=0;\n    int count1=0;\n    int count2=0;\n\
    \    int count3=0;\n    int count4=0;\n    int count5=0;\n    int count6=0;\n\
    \    int count7=0;\n    int count8=0;\n    int count9=0;\n    int count10=0;\n\
    \    int count11=0;\n    int count12=0;\n    int count13=0;\n    int count14=0;\n\
    \    int count15=0;\n    int count16=0;\n    int count17=0;\n    int count18=0;\n\
    \    int count19=0;\n    int count20=0;\n    int count21=0;\n    int count22=0;\n\
    \    int count23=0;\n    int count24=0;\n    int count25=0;\n    int count26=0;\n\
    \    int count27=0;\n    int count28=0;\n    int count29=0;\n    int count30=0;\n\
    \    int count31=0;\n    int count32=0;\n    int count33=0;\n    int count34=0;\n\
    \    int count35=0;\n    int count36=0;\n    int count37=0;\n    int count38=0;\n\
    \    int count39=0;\n    int count40=0;\n    int count41=0;\n    int count42=0;\n\
    \    int count43=0;\n    int count44=0;\n    int count45=0;\n    int count46=0;\n\
    \    int count47=0;\n    int count48=0;\n    int count49=0;\n    int count50=0;\n\
    \    int count51=0;\n    int count52=0;\n    int count53=0;\n    int count54=0;\n\
    \    int count55=0;\n    int count56=0;\n    int count57=0;\n    int count58=0;\n\
    \    int count59=0;\n    int count60=", "    int apples = 0, oranges = 0;\n  \
    \  std::stringstream ss(s);\n    std::string temp;\n    ss >> temp;\n    apples\
    \ = std::stoi(temp);\n    ss >> temp;\n    ss >> temp;\n    oranges = std::stoi(temp);\n\
    \    return n - apples - oranges;", "    long apples = 0;\n    long oranges =\
    \ 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (word == \"apples\") {\n            ss >>\
    \ word;\n            apples = std::stol(word);\n        } else if (word == \"\
    oranges\") {\n            ss >> word;\n            oranges = std::stol(word);\n\
    \        }\n    }\n    mangoes = n - (apples + oranges);\n    return mangoes;",
  "    // your code here\n    std::stringstream ss(s);\n    std::string word;\n  \
    \  int apple = 0;\n    int orange = 0;\n    while(ss >> word){\n        if(word\
    \ == \"apples\"){\n            ss >> word;\n            apple = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\"){\n            ss >> word;\n \
    \           orange = std::stoi(word);\n        }\n    }\n    return n - apple\
    \ - orange;", "    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n\
    \    int count=0;\n    int count1=0;\n    int count2=0;\n    int count3=0;\n \
    \   int count4=0;\n    int count5=0;\n    int count6=0;\n    int count7=0;\n \
    \   int count8=0;\n    int count9=0;\n    int count10=0;\n    int count11=0;\n\
    \    int count12=0;\n    int count13=0;\n    int count14=0;\n    int count15=0;\n\
    \    int count16=0;\n    int count17=0;\n    int count18=0;\n    int count19=0;\n\
    \    int count20=0;\n    int count21=0;\n    int count22=0;\n    int count23=0;\n\
    \    int count24=0;\n    int count25=0;\n    int count26=0;\n    int count27=0;\n\
    \    int count28=0;\n    int count29=0;\n    int count30=0;\n    int count31=0;\n\
    \    int count32=0;\n    int count33=0;\n    int count34=0;\n    int count35=0;\n\
    \    int count36=0;\n    int count37=0;\n    int count38=0;\n    int count39=0;\n\
    \    int count40=0;\n    int count41=0;\n    int count42=0;\n    int count43=0;\n\
    \    int count44=0;\n    int count45=0;\n    int count46=0;\n    int count47=0;\n\
    \    int count48=0;\n    int count49=0;\n    int count50=0;\n    int count51=0;\n\
    \    int count52=0;\n    int count53=0;\n    int count54=0;\n    int count55=0;\n\
    \    int count56=0;\n    int count57=0;\n    int count58=0;\n    int count59=0;\n\
    \    int count60=", "    // your code here\n    int apples = 0;\n    int oranges\
    \ = 0;\n    int mangoes = 0;\n    std::stringstream ss(s);\n    std::string temp;\n\
    \    while(ss >> temp) {\n        if(temp == \"apples\") {\n            ss >>\
    \ temp;\n            apples = std::stoi(temp);\n        }\n        else if(temp\
    \ == \"oranges\") {\n            ss >> temp;\n            oranges = std::stoi(temp);\n\
    \        }\n    }\n    mangoes = n - (apples + oranges);\n    return mangoes;",
  "    // your code here\n    long a, o;\n    std::stringstream ss(s);\n    ss >>\
    \ a >> s >> o;\n    return n - a - o;", "    // your code here\n    long num_apples\
    \ = 0;\n    long num_oranges = 0;\n    long num_mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    apples\") {\n            ss >> word;\n            num_apples = std::stol(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            num_oranges = std::stol(word);\n        }\n    }\n    num_mangoes\
    \ = n - num_apples - num_oranges;\n    return num_mangoes;", "    // your code\
    \ here\n    std::stringstream ss(s);\n    std::string word;\n    int apples =\
    \ 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\"\
    ) {\n            ss >> word;\n            apples = std::stoi(word);\n        }\n\
    \        else if(word == \"oranges\") {\n            ss >> word;\n           \
    \ oranges = std::stoi(word);\n        }\n    }\n    return n - (apples + oranges);",
  "    // your code here\n    int a,o;\n    sscanf(s.c_str(),\"%d apples and %d oranges\"\
    ,&a,&o);\n    return n-a-o;", "    std::stringstream ss(s);\n    std::string word;\n\
    \    int apples = 0;\n    int oranges = 0;\n    while (ss >> word) {\n       \
    \ if (word == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        if (word == \"oranges\") {\n            ss >> word;\n    \
    \        oranges = std::stoi(word);\n        }\n    }\n    return n - apples -\
    \ oranges;", "    long apples = 0;\n    long oranges = 0;\n    long mangoes =\
    \ 0;\n    std::stringstream ss(s);\n    std::string token;\n    while (std::getline(ss,\
    \ token, ' ')) {\n        if (token == \"apples\") {\n            apples = std::stol(std::getline(ss,\
    \ token, ' '));\n        } else if (token == \"oranges\") {\n            oranges\
    \ = std::stol(std::getline(ss, token, ' '));\n        }\n    }\n    mangoes =\
    \ n - (apples + oranges);\n    return mangoes;", "    long a, o;\n    sscanf(s.c_str(),\
    \ \"%ld apples and %ld oranges\", &a, &o);\n    return n - a - o;", "    // your\
    \ code here\n    int i=0;\n    int j=0;\n    int k=0;\n    while(s[i]!=' '){\n\
    \        i++;\n    }\n    while(s[j]!='a'){\n        j++;\n    }\n    while(s[k]!='o'){\n\
    \        k++;\n    }\n    int apple=0;\n    int orange=0;\n    for(int l=0;l<i;l++){\n\
    \        apple=apple*10+(s[l]-'0');\n    }\n    for(int l=j-1;l<k-1;l++){\n  \
    \      orange=orange*10+(s[l]-'0');\n    }\n    return n-apple-orange;", "   \
    \ // your code here\n    int i = 0;\n    int j = 0;\n    while(s[i] != ' ')\n\
    \        i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i]\
    \ != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n\
    \    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n    \
    \    i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i]\
    \ != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n\
    \    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n    \
    \    i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i]\
    \ != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n\
    \    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n    \
    \    i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i]\
    \ != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n\
    \    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n    \
    \    i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i]\
    \ != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n\
    \    while(s[i] != ' ')", "    // your code here\n    int count = 0;\n    for(int\
    \ i = 0; i < s.length(); i++){\n        if(s[i] == 'a'){\n            count++;\n\
    \        }\n        else if(s[i] == 'o'){\n            count++;\n        }\n \
    \   }\n    return n - count;", "    // your code here\n    int a,o;\n    std::stringstream\
    \ ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;", "    // your code here\n    int\
    \ i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n    int a=0;\n\
    \    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n    int\
    \ g=0;\n    int h=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n\
    \    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int\
    \ z=0;\n    int a1=0;\n    int b1=0;\n    int c1=0;\n    int d1=0;\n    int e1=0;\n\
    \    int f1=0;\n    int g1=0;\n    int h1=0;\n    int p1=0;\n    int q1=0;\n \
    \   int r1=0;\n    int t1=0;\n    int u1=0;\n    int v1=0;\n    int w1=0;\n  \
    \  int x1=0;\n    int y1=0;\n    int z1=0;\n    int a2=0;\n    int b2=0;\n   \
    \ int c2=0;\n    int d2=0;\n    int e2=0;\n    int f2=0;\n    int g2=0;\n    int\
    \ h2=0;\n    int p2=0;\n    int q2=0;\n    int r2=0;\n    int t2=0;\n    int u2=0;\n\
    \    int v2=0;\n    int w2=0;\n    int x2=0;\n    int y2=0;\n    int z2=0;\n \
    \   int a3=0;\n    int b3=0;\n    int c3=0;\n    int d3=0;\n    int e3=0;\n  \
    \  int f3=0;\n    int g3=0;\n", "    long apples = 0;\n    long oranges = 0;\n\
    \    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (word == \"apples\") {\n            ss >>\
    \ word;\n            apples = std::stol(word);\n        } else if (word == \"\
    oranges\") {\n            ss >> word;\n            oranges = std::stol(word);\n\
    \        }\n    }\n    mangoes = n - (apples + oranges);\n    return mangoes;",
  "    // your code here\n    long apple = 0, orange = 0;\n    for(int i = 0; i <\
    \ s.size(); i++){\n        if(s[i] == 'a'){\n            apple++;\n        }\n\
    \        else if(s[i] == 'o'){\n            orange++;\n        }\n    }\n    return\
    \ n - (apple + orange);", "    long a=0,o=0;\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]=='a'){\n            a++;\n        }\n        else if(s[i]=='o'){\n\
    \            o++;\n        }\n    }\n    return n-(a+o);", "    // your code here\n\
    \    int i=0;\n    std::string a,b;\n    while(s[i]!=' '){\n        a+=s[i];\n\
    \        i++;\n    }\n    i+=6;\n    while(s[i]!=' '){\n        b+=s[i];\n   \
    \     i++;\n    }\n    int x=std::stoi(a);\n    int y=std::stoi(b);\n    return\
    \ n-(x+y);", "    int i = 0;\n    int j = 0;\n    while(s[i] != ' ') {\n     \
    \   i++;\n    }\n    while(s[j] != ' ') {\n        j++;\n    }\n    std::string\
    \ a = s.substr(0, i);\n    std::string b = s.substr(j+1, s.length()-1);\n    int\
    \ x = std::stoi(a);\n    int y = std::stoi(b);\n    return n - x - y;", "    //\
    \ your code here\n    int a,o;\n    std::stringstream ss(s);\n    ss>>a>>s>>o;\n\
    \    return n-a-o;", "    // your code here\n    std::stringstream ss(s);\n  \
    \  std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n    \
    \        apples = std::stoi(word);\n        }\n        else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            oranges = std::stoi(word);\n       \
    \ }\n    }\n    return n - apples - oranges;", "    // your code here\n    long\
    \ apples, oranges;\n    std::stringstream ss(s);\n    ss >> apples >> oranges;\n\
    \    return n - apples - oranges;", "    // your code here\n    int i = 0;\n \
    \   int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj =\
    \ 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int oo = 0;\n   \
    \ int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int tt = 0;\n    int uu =\
    \ 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n   \
    \ int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd =\
    \ 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n   \
    \ int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int\
    \ mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr\
    \ = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n\
    \    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n    int aaaa = 0;\n   \
    \ int bbbb = 0;\n    int cccc = 0;\n   ", "    // your code here\n    long num_of_apples\
    \ = 0;\n    long num_of_oranges = 0;\n    long num_of_mangoes = 0;\n    std::string\
    \ temp = \"\";\n    for(int i = 0; i < s.length(); i++){\n        if(s[i] == '\
    \ '){\n            if(temp == \"apples\"){\n                num_of_apples = std::stol(s.substr(0,\
    \ i));\n                s = s.substr(i+1, s.length()-i-1);\n                i\
    \ = 0;\n                temp = \"\";\n            }\n            else if(temp\
    \ == \"oranges\"){\n                num_of_oranges = std::stol(s.substr(0, i));\n\
    \                s = s.substr(i+1, s.length()-i-1);\n                i = 0;\n\
    \                temp = \"\";\n            }\n        }\n        else{\n     \
    \       temp += s[i];\n        }\n    }\n    num_of_mangoes = n - num_of_apples\
    \ - num_of_oranges;\n    return num_of_mangoes;", "    // your code here\n   \
    \ std::stringstream ss(s);\n    std::string temp;\n    int apples = 0;\n    int\
    \ oranges = 0;\n    while(getline(ss, temp, ' ')){\n        if(temp == \"apples\"\
    ){\n            apples = std::stoi(temp);\n        }\n        else if(temp ==\
    \ \"oranges\"){\n            oranges = std::stoi(temp);\n        }\n    }\n  \
    \  return n - apples - oranges;", "    int a, o;\n    sscanf(s.c_str(), \"%d apples\
    \ and %d oranges\", &a, &o);\n    return n - a - o;", "    // your code here\n\
    \    long n1,n2;\n    std::stringstream ss(s);\n    ss>>n1>>n2;\n    return n-n1-n2;",
  "    // your code here\n    int a,o;\n    std::stringstream ss(s);\n    ss>>a>>s>>o;\n\
    \    return n-a-o;", "    // your code here\n    int a, o;\n    std::stringstream\
    \ ss(s);\n    ss >> a >> s >> o;\n    return n - a - o;", "    // your code here\n\
    \    int i = 0;\n    std::string temp = \"\";\n    int apple = 0;\n    int orange\
    \ = 0;\n    while(s[i] != ' '){\n        temp += s[i];\n        i++;\n    }\n\
    \    apple = std::stoi(temp);\n    temp = \"\";\n    i += 5;\n    while(s[i] !=\
    \ ' '){\n        temp += s[i];\n        i++;\n    }\n    orange = std::stoi(temp);\n\
    \    return n - apple - orange;", "    long a, o;\n    std::stringstream ss(s);\n\
    \    ss >> a >> s >> o >> s;\n    return n - a - o;", "    std::stringstream ss(s);\n\
    \    std::string word;\n    long apples = 0;\n    long oranges = 0;\n    while\
    \ (ss >> word) {\n        if (word == \"apples\") {\n            ss >> word;\n\
    \            apples = std::stol(word);\n        } else if (word == \"oranges\"\
    ) {\n            ss >> word;\n            oranges = std::stol(word);\n       \
    \ }\n    }\n    return n - apples - oranges;", "    // your code here\n    int\
    \ count=0;\n    int i=0;\n    while(s[i]!=' '){\n        count++;\n        i++;\n\
    \    }\n    std::string s1=s.substr(0,count);\n    std::string s2=s.substr(count+5,s.length()-count-5);\n\
    \    int x=std::stoi(s1);\n    int y=std::stoi(s2);\n    return n-(x+y);", " \
    \   // your code here\n    long num_apples = 0;\n    long num_oranges = 0;\n \
    \   std::stringstream ss(s);\n    std::string token;\n    std::vector<std::string>\
    \ tokens;\n    while(std::getline(ss, token, ' ')) {\n        tokens.push_back(token);\n\
    \    }\n    num_apples = std::stol(tokens[0]);\n    num_oranges = std::stol(tokens[3]);\n\
    \    return n - (num_apples + num_oranges);", "    long apples = 0;\n    long\
    \ oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"apples\") {\n       \
    \     ss >> word;\n            apples = std::stol(word);\n        }\n        else\
    \ if (word == \"oranges\") {\n            ss >> word;\n            oranges = std::stol(word);\n\
    \        }\n    }\n    mangoes = n - apples - oranges;\n    return mangoes;",
  "    // your code here\n    std::stringstream ss(s);\n    std::string word;\n  \
    \  std::vector<std::string> words;\n    while(ss >> word)\n        words.push_back(word);\n\
    \    int apples = std::stoi(words[0]);\n    int oranges = std::stoi(words[3]);\n\
    \    return n - apples - oranges;", "    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples, oranges;\n    ss >> apples >> word >> word >> oranges;\n\
    \    return n - apples - oranges;", "    // your code here\n    int apples = 0;\n\
    \    int oranges = 0;\n    int i = 0;\n    while(s[i] != ' '){\n        apples\
    \ = apples * 10 + (s[i] - '0');\n        i++;\n    }\n    i += 6;\n    while(s[i]\
    \ != ' '){\n        oranges = oranges * 10 + (s[i] - '0');\n        i++;\n   \
    \ }\n    return n - apples - oranges;", "    // your code here\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj =\
    \ 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int oo = 0;\n   \
    \ int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int tt = 0;\n    int uu =\
    \ 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n   \
    \ int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd =\
    \ 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n   \
    \ int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int\
    \ mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr\
    \ = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n\
    \    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n    int aaaa = 0;\n   \
    \ int bbbb = 0;\n    int cccc = 0;\n   ", "    std::stringstream ss(s);\n    std::string\
    \ word;\n    std::vector<std::string> words;\n    while (ss >> word) {\n     \
    \   words.push_back(word);\n    }\n    long apples = std::stol(words[0]);\n  \
    \  long oranges = std::stol(words[3]);\n    return n - apples - oranges;", " \
    \   // your code here\n    long apples = 0;\n    long oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while(std::getline(ss, temp, ' ')) {\n  \
    \      if(temp == \"apples\") {\n            apples = std::stol(temp);\n     \
    \   } else if(temp == \"oranges\") {\n            oranges = std::stol(temp);\n\
    \        }\n    }\n    return n - apples - oranges;", "    // your code here\n\
    \    long apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string token;\n    std::vector<std::string> tokens;\n    while(std::getline(ss,\
    \ token, ' ')) {\n        tokens.push_back(token);\n    }\n    apples = std::stol(tokens[0]);\n\
    \    oranges = std::stol(tokens[3]);\n    mangoes = n - apples - oranges;\n  \
    \  return mangoes;", "    // your code here\n    long num_apples = 0;\n    long\
    \ num_oranges = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    std::vector<std::string>\
    \ tokens;\n    while(std::getline(ss, temp, ' ')) {\n        tokens.push_back(temp);\n\
    \    }\n    num_apples = std::stol(tokens[0]);\n    num_oranges = std::stol(tokens[3]);\n\
    \    return n - num_apples - num_oranges;", "    // your code here\n    long sum\
    \ = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(getline(ss,\
    \ temp, ' ')){\n        if(temp == \"apples\"){\n            getline(ss, temp,\
    \ ' ');\n            sum += std::stol(temp);\n        }\n        else if(temp\
    \ == \"oranges\"){\n            getline(ss, temp, ' ');\n            sum += std::stol(temp);\n\
    \        }\n    }\n    return n - sum;", "    // your code here\n    int i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z;\n\
    \    int a,b,c,d,e,f,g,h;\n    int A,B,C,D,E,F,G,H;\n    int aa,bb,cc,dd,ee,ff,gg,hh;\n\
    \    int aaa,bbb,ccc,ddd,eee,fff,ggg,hhh;\n    int aaaa,bbbb,cccc,dddd,eeee,ffff,gggg,hhhh;\n\
    \    int aaaaa,bbbbb,ccccc,ddddd,eeeee,fffff,ggggg,hhhhh;\n    int aaaaaa,bbbbbb,cccccc,dddddd,eeeeee,ffffff,gggggg,hhhhhh;\n\
    \    int aaaaaaa,bbbbbbb,ccccccc,ddddddd,eeeeeee,fffffff,ggggggg,hhhhhhh;\n  \
    \  int aaaaaaaa,bbbbbbbb,cccccccc,dddddddd,eeeeeeee,ffffffff,gggggggg,hhhhhhhh;\n\
    \    int aaaaaaaaa,bbbbbbbbb,ccccccccc,ddddddddd,eeeeeeeee,fffffffff,ggggggggg,hhhhhhhhh;\n\
    \    int aaaaaaaaaa,bbbbbbbbbb,cccccccccc,dddddddddd,eeeeeeeeee,ffffffffff,gggggggggg,hhhhhhhhhh;\n\
    \    int aaaaaaaaaaa,bbbbbbbbbbb,ccccccccccc,ddddddddddd,eeeeeeeeeee,fffffffffff,ggggggggggg,hhhhhhhhhhh;\n\
    \    int aaaaaaaaaaaa,bbbbbbbbbbbb,cccccccccccc,dddddddddddd,eeeeeeeeeeee,ffffffffffff,gggggggggggg,hhhhhhhhhhhh;\n\
    \    int aaaaaaaaaaaaa,bbbbbbbbbbbbb,ccccccccccccc,ddddddddddddd,eeeeeeeeeeeee,ffffffffffff",
  "    std::stringstream ss(s);\n    std::string word;\n    int apples = 0;\n    int\
    \ oranges = 0;\n    while (ss >> word) {\n        if (word == \"apples\") {\n\
    \            ss >> word;\n            apples = std::stoi(word);\n        }\n \
    \       if (word == \"oranges\") {\n            ss >> word;\n            oranges\
    \ = std::stoi(word);\n        }\n    }\n    return n - (apples + oranges);", " \
    \   // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n\
    \    int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int\
    \ t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n\
    \    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int\
    \ e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n\
    \    int kk=0;\n    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n \
    \   int qq=0;\n    int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n  \
    \  int ww=0;\n    int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n   \
    \ int bb=0;\n    int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int\
    \ gg=0;\n    int hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int\
    \ lll=0;\n    int mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n   \
    \ int rrr=0;\n    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n\
    \    int xxx=0;\n    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n\
    \    int cccc=0;\n   ", "    // your code here\n    long apples, oranges;\n  \
    \  std::stringstream ss(s);\n    ss >> apples >> oranges;\n    return n - apples\
    \ - oranges;", "    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stoi(word);\n        }\n    }\n\
    \    return n - (apples + oranges);", "    // your code here\n    long apple,\
    \ orange;\n    sscanf(s.c_str(), \"%ld apples and %ld oranges\", &apple, &orange);\n\
    \    return n - apple - orange;", "    // your code here\n    int a,o;\n    sscanf(s.c_str(),\"\
    %d apples and %d oranges\",&a,&o);\n    return n-(a+o);", "    // your code here\n\
    \    long a,o;\n    std::stringstream ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;",
  "    // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    int i\
    \ = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int\
    \ o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n   \
    \ int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii =\
    \ 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n   \
    \ int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int tt =\
    \ 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n   \
    \ int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc =\
    \ 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n   \
    \ int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll\
    \ = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n\
    \    int rrr = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int\
    \ www = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int", "    // your code here\n\
    \    long apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    long\
    \ i = 0;\n    while(s[i] != ' '){\n        apples = apples * 10 + (s[i] - '0');\n\
    \        i++;\n    }\n    i = i + 6;\n    while(s[i] != ' '){\n        oranges\
    \ = oranges * 10 + (s[i] - '0');\n        i++;\n    }\n    mangoes = n - apples\
    \ - oranges;\n    return mangoes;", "    // your code here\n    long num_of_apples\
    \ = 0;\n    long num_of_oranges = 0;\n    long num_of_mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string token;\n    std::vector<std::string> tokens;\n    while(std::getline(ss,\
    \ token, ' ')) {\n        tokens.push_back(token);\n    }\n    num_of_apples =\
    \ std::stol(tokens[0]);\n    num_of_oranges = std::stol(tokens[3]);\n    num_of_mangoes\
    \ = n - (num_of_apples + num_of_oranges);\n    return num_of_mangoes;", "    //\
    \ your code here\n    std::stringstream ss(s);\n    std::string word;\n    int\
    \ apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            ss >> word;\n       \
    \     apples = std::stoi(word);\n        }\n        else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - (apples + oranges);", "    long apples = 0;\n\
    \    long oranges = 0;\n    long mangoes = 0;\n    std::string temp = \"\";\n\
    \    for(int i = 0; i < s.length(); i++){\n        if(s[i] != ' '){\n        \
    \    temp += s[i];\n        }\n        else{\n            if(temp == \"apples\"\
    ){\n                apples = std::stol(s.substr(0, i));\n                s = s.substr(i+1,\
    \ s.length()-i);\n                break;\n            }\n            temp = \"\
    \";\n        }\n    }\n    for(int i = 0; i < s.length(); i++){\n        if(s[i]\
    \ != ' '){\n            temp += s[i];\n        }\n        else{\n            if(temp\
    \ == \"oranges\"){\n                oranges = std::stol(s.substr(0, i));\n   \
    \             s = s.substr(i+1, s.length()-i);\n                break;\n     \
    \       }\n            temp = \"\";\n        }\n    }\n    mangoes = n - (apples\
    \ + oranges);\n    return mangoes;", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int apple = 0;\n    int orange = 0;\n   \
    \ while(ss >> word){\n        if(word == \"apples\"){\n            ss >> word;\n\
    \            ss >> word;\n            apple = std::stoi(word);\n        }\n  \
    \      else if(word == \"oranges\"){\n            ss >> word;\n            ss\
    \ >> word;\n            orange = std::stoi(word);\n        }\n    }\n    return\
    \ n - (apple + orange);", "    // your code here\n    long apples = 0;\n    long\
    \ oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    while(std::getline(ss, temp, ' ')){\n        if(temp == \"apples\"\
    ){\n            apples = std::stol(std::getline(ss, temp, ' '));\n        }\n\
    \        else if(temp == \"oranges\"){\n            oranges = std::stol(std::getline(ss,\
    \ temp, ' '));\n        }\n    }\n    mangoes = n - apples - oranges;\n    return\
    \ mangoes;", "    int apples = 0, oranges = 0;\n    std::stringstream ss(s);\n\
    \    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        if\
    \ (token == \"apples\") {\n            apples = std::stoi(std::getline(ss, token,\
    \ ' '));\n        } else if (token == \"oranges\") {\n            oranges = std::stoi(std::getline(ss,\
    \ token, ' '));\n        }\n    }\n    return n - apples - oranges;", "    //\
    \ your code here\n    long a,o;\n    std::stringstream ss(s);\n    ss>>a>>s>>o;\n\
    \    return n-a-o;", "    int i = 0;\n    int apples = 0;\n    int oranges = 0;\n\
    \    while(s[i] != ' ') {\n        apples = apples * 10 + (s[i] - '0');\n    \
    \    i++;\n    }\n    i += 6;\n    while(s[i] != ' ') {\n        oranges = oranges\
    \ * 10 + (s[i] - '0');\n        i++;\n    }\n    return n - (apples + oranges);",
  "    // your code here\n    std::stringstream ss(s);\n    std::string word;\n  \
    \  int count = 0;\n    int apple = 0;\n    int orange = 0;\n    while(ss >> word)\
    \ {\n        if(word == \"apples\") {\n            ss >> word;\n            ss\
    \ >> word;\n            apple = std::stoi(word);\n        }\n        else if(word\
    \ == \"oranges\") {\n            ss >> word;\n            orange = std::stoi(word);\n\
    \        }\n    }\n    return n - apple - orange;", "    // your code here\n \
    \   int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n    int\
    \ o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int u=0;\n\
    \    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int\
    \ aa=0;\n    int bb=0;\n    int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n\
    \    int gg=0;\n    int hh=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n \
    \   int ll=0;\n    int mm=0;\n    int nn=0;\n    int oo=0;\n    int pp=0;\n  \
    \  int qq=0;\n    int rr=0;\n    int ss=0;\n    int tt=0;\n    int uu=0;\n   \
    \ int vv=0;\n    int ww=0;\n    int xx=0;\n    int yy=0;\n    int zz=0;\n    int\
    \ aaa=0;\n    int bbb=0;\n    int ccc=0;\n    int ddd=0;\n    int eee=0;\n   \
    \ int fff=0;\n    int ggg=0;\n    int hhh=0;\n    int iii=0;\n    int jjj=0;\n\
    \    int kkk=0;\n    int lll=0;\n    int mmm=0;\n    int nnn=0;\n    int ooo=0;\n\
    \    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n    int sss=0;\n    int ttt=0;\n\
    \    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n    int yyy",
  "    // your code here\n    std::stringstream ss(s);\n    std::string word;\n  \
    \  int count = 0;\n    int apple = 0;\n    int orange = 0;\n    while(ss >> word)\
    \ {\n        if(word == \"apples\") {\n            ss >> word;\n            ss\
    \ >> word;\n            ss >> word;\n            apple = std::stoi(word);\n  \
    \      }\n        else if(word == \"oranges\") {\n            ss >> word;\n  \
    \          ss >> word;\n            ss >> word;\n            orange = std::stoi(word);\n\
    \        }\n    }\n    return n - (apple + orange);", "    int a, o;\n    sscanf(s.c_str(),\
    \ \"%d apples and %d oranges\", &a, &o);\n    return n - a - o;", "    // your\
    \ code here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n\
    \    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int\
    \ u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n\
    \    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int\
    \ f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n\
    \    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n    int qq=0;\n \
    \   int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n  \
    \  int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n   \
    \ int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int\
    \ hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int\
    \ mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n   \
    \ int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n\
    \    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n    int cccc=0;\n\
    \   ", "    int apples = 0, oranges = 0;\n    int i = 0;\n    while(s[i] != '\
    \ ') {\n        apples = apples * 10 + (s[i] - '0');\n        i++;\n    }\n  \
    \  i += 5;\n    while(s[i] != ' ') {\n        oranges = oranges * 10 + (s[i] -\
    \ '0');\n        i++;\n    }\n    return n - apples - oranges;", "    // your\
    \ code here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n\
    \    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int\
    \ u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n\
    \    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int\
    \ f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n\
    \    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n    int qq=0;\n \
    \   int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n  \
    \  int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n   \
    \ int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int\
    \ hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int\
    \ mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n   \
    \ int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n\
    \    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n    int cccc=0;\n\
    \   ", "    // your code here\n    long apples, oranges;\n    std::stringstream\
    \ ss(s);\n    ss >> apples >> s >> oranges;\n    return n - apples - oranges;",
  "    // Your code here\n    long num_apples = 0;\n    long num_oranges = 0;\n  \
    \  long num_mangoes = 0;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while(ss >> word) {\n        if(word == \"apples\") {\n            ss >>\
    \ word;\n            num_apples = std::stol(word);\n        }\n        else if(word\
    \ == \"oranges\") {\n            ss >> word;\n            num_oranges = std::stol(word);\n\
    \        }\n    }\n    num_mangoes = n - num_apples - num_oranges;\n    return\
    \ num_mangoes;", "    std::stringstream ss(s);\n    std::string word;\n    int\
    \ apples = 0;\n    int oranges = 0;\n    while (ss >> word) {\n        if (word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        if (word == \"oranges\") {\n            ss >> word;\n    \
    \        oranges = std::stoi(word);\n        }\n    }\n    return n - apples -\
    \ oranges;", "    // your code here\n    long a,o;\n    std::stringstream ss(s);\n\
    \    ss>>a>>s>>o;\n    return n-a-o;", "    // your code here\n    long num_apples\
    \ = 0;\n    long num_oranges = 0;\n    long num_mangoes = 0;\n    std::string\
    \ temp = \"\";\n    for(int i = 0; i < s.length(); i++){\n        if(s[i] == '\
    \ '){\n            if(temp == \"apples\"){\n                num_apples = std::stol(s.substr(0,\
    \ i));\n                s = s.substr(i+1, s.length()-i);\n                break;\n\
    \            }\n            else if(temp == \"oranges\"){\n                num_oranges\
    \ = std::stol(s.substr(0, i));\n                s = s.substr(i+1, s.length()-i);\n\
    \                break;\n            }\n        }\n        else{\n           \
    \ temp += s[i];\n        }\n    }\n    num_mangoes = n - (num_apples + num_oranges);\n\
    \    return num_mangoes;", "    // your code here\n    // return the number of\
    \ mango fruits in the basket\n    int i=0;\n    int j=0;\n    int k=0;\n    int\
    \ l=0;\n    int m=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n\
    \    int e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int p=0;\n    int\
    \ q=0;\n    int r=0;\n    int t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n\
    \    int x=0;\n    int y=0;\n    int z=0;\n    int o=0;\n    int o1=0;\n    int\
    \ o2=0;\n    int o3=0;\n    int o4=0;\n    int o5=0;\n    int o6=0;\n    int o7=0;\n\
    \    int o8=0;\n    int o9=0;\n    int o10=0;\n    int o11=0;\n    int o12=0;\n\
    \    int o13=0;\n    int o14=0;\n    int o15=0;\n    int o16=0;\n    int o17=0;\n\
    \    int o18=0;\n    int o19=0;\n    int o20=0;\n    int o21=0;\n    int o22=0;\n\
    \    int o23=0;\n    int o24=0;\n    int o25=0;\n    int o26=0;\n    int o27=0;\n\
    \    int o28=0;\n    int o29=0;\n    int o30=0;\n    int o31=0;\n    int o32=0;\n\
    \    int o33=0;\n    int o34=0;\n    int o35=0;\n    int o36=0;\n    int o37=0;\n\
    \    int o38=0;\n    int o39=0;\n    int o40=0;\n    int o41=", "    // your code\
    \ here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n\
    \    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int\
    \ u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n\
    \    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int\
    \ f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n\
    \    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n    int qq=0;\n \
    \   int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n  \
    \  int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n   \
    \ int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int\
    \ hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int\
    \ mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n   \
    \ int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n\
    \    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n    int cccc=0;\n\
    \   ", "    // your code here\n    std::stringstream ss(s);\n    std::string word;\n\
    \    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stoi(word);\n        }\n    }\n    return n - (apples\
    \ + oranges);", "    std::stringstream ss(s);\n    std::string word;\n    int\
    \ apples = 0;\n    int oranges = 0;\n    while (ss >> word) {\n        if (word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        if (word == \"oranges\") {\n            ss >> word;\n    \
    \        oranges = std::stoi(word);\n        }\n    }\n    return n - (apples\
    \ + oranges);", "    std::stringstream ss(s);\n    std::string word;\n    std::vector<std::string>\
    \ words;\n    while (ss >> word)\n        words.push_back(word);\n    assert(words.size()\
    \ == 4);\n    long apples = std::stol(words[0]);\n    long oranges = std::stol(words[2]);\n\
    \    return n - apples - oranges;", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int count = 0;\n    int apples = 0;\n   \
    \ int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\") {\n\
    \            ss >> word;\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            ss >> word;\n            oranges = std::stoi(word);\n        }\n\
    \    }\n    return n - (apples + oranges);", "    // your code here\n    long\
    \ count = 0;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss\
    \ >> word){\n        if(word == \"apples\"){\n            ss >> word;\n      \
    \      count += std::stol(word);\n        }\n        else if(word == \"oranges\"\
    ){\n            ss >> word;\n            count += std::stol(word);\n        }\n\
    \    }\n    return n - count;", "    int i = 0;\n    int j = 0;\n    while(s[i]\
    \ != ' '){\n        i++;\n    }\n    std::string str1 = s.substr(0, i);\n    std::string\
    \ str2 = s.substr(i+5, s.length()-1);\n    int a = std::stoi(str1);\n    int b\
    \ = std::stoi(str2);\n    return n - (a + b);", "    // your code here\n    int\
    \ i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n    int o=0;\n\
    \    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int u=0;\n    int\
    \ v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int a=0;\n\
    \    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n    int\
    \ g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n    int ll=0;\n\
    \    int mm=0;\n    int oo=0;\n    int pp=0;\n    int qq=0;\n    int rr=0;\n \
    \   int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n    int xx=0;\n  \
    \  int yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n    int cc=0;\n   \
    \ int dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int hh=0;\n    int\
    \ iii=0;\n    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int mmm=0;\n   \
    \ int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n    int ttt=0;\n\
    \    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n    int yyy=0;\n\
    \    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n    int cccc=0;\n   ", "  \
    \  std::stringstream ss(s);\n    std::string word;\n    int apples = 0;\n    int\
    \ oranges = 0;\n    while (ss >> word) {\n        if (word == \"apples\") {\n\
    \            ss >> word;\n            apples = std::stoi(word);\n        }\n \
    \       if (word == \"oranges\") {\n            ss >> word;\n            oranges\
    \ = std::stoi(word);\n        }\n    }\n    return n - (apples + oranges);", " \
    \   int apples = 0, oranges = 0;\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    ss >> temp;\n    apples = std::stoi(temp);\n    ss >> temp;\n   \
    \ ss >> temp;\n    oranges = std::stoi(temp);\n    return n - apples - oranges;",
  "    std::stringstream ss(s);\n    std::string word;\n    int apples = 0;\n    int\
    \ oranges = 0;\n    while (ss >> word) {\n        if (word == \"apples\") {\n\
    \            ss >> word;\n            apples = std::stoi(word);\n        }\n \
    \       if (word == \"oranges\") {\n            ss >> word;\n            oranges\
    \ = std::stoi(word);\n        }\n    }\n    return n - (apples + oranges);", " \
    \   // Your code here\n    std::stringstream ss(s);\n    std::string word;\n \
    \   int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            ss >> word;\n       \
    \     apples = std::stoi(word);\n        }\n        else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - (apples + oranges);", "    long apples, oranges;\n\
    \    std::stringstream ss(s);\n    ss >> apples >> s >> oranges;\n    return n\
    \ - apples - oranges;", "    // your code here\n    long num_apples = 0;\n   \
    \ long num_oranges = 0;\n    long num_mangoes = 0;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"apples\"\
    ) {\n            ss >> word;\n            num_apples = std::stol(word);\n    \
    \    }\n        else if(word == \"oranges\") {\n            ss >> word;\n    \
    \        num_oranges = std::stol(word);\n        }\n    }\n    num_mangoes = n\
    \ - num_apples - num_oranges;\n    return num_mangoes;", "    // your code here\n\
    \    long apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string token;\n    std::vector<std::string> tokens;\n    while(std::getline(ss,\
    \ token, ' ')) {\n        tokens.push_back(token);\n    }\n    apples = std::stol(tokens[0]);\n\
    \    oranges = std::stol(tokens[3]);\n    mangoes = n - (apples + oranges);\n\
    \    return mangoes;", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string token;\n    std::vector<std::string> tokens;\n    while(std::getline(ss,\
    \ token, ' ')) {\n        tokens.push_back(token);\n    }\n    long num_apples\
    \ = std::stol(tokens[0]);\n    long num_oranges = std::stol(tokens[3]);\n    long\
    \ num_mangoes = n - num_apples - num_oranges;\n    return num_mangoes;", "   \
    \ // your code here\n    std::stringstream ss(s);\n    std::string temp;\n   \
    \ int apples = 0;\n    int oranges = 0;\n    while (ss >> temp) {\n        if\
    \ (temp == \"apples\") {\n            ss >> apples;\n        } else if (temp ==\
    \ \"oranges\") {\n            ss >> oranges;\n        }\n    }\n    return n -\
    \ apples - oranges;", "    // your code here\n    std::stringstream ss(s);\n \
    \   int a, o;\n    ss >> a >> ss >> ss >> o;\n    return n - a - o;", "    //\
    \ your code here\n    long num_of_apples = 0;\n    long num_of_oranges = 0;\n\
    \    long num_of_mangoes = 0;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while(ss >> word){\n        if(word == \"apples\"){\n            ss >> word;\n\
    \            num_of_apples = std::stol(word);\n        }\n        else if(word\
    \ == \"oranges\"){\n            ss >> word;\n            num_of_oranges = std::stol(word);\n\
    \        }\n    }\n    num_of_mangoes = n - num_of_apples - num_of_oranges;\n\
    \    return num_of_mangoes;", "    // your code here\n    long a,o;\n    std::stringstream\
    \ ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;", "    long apples, oranges;\n \
    \   sscanf(s.c_str(), \"%ld apples and %ld oranges\", &apples, &oranges);\n  \
    \  return n - apples - oranges;", "    long apples = 0;\n    long oranges = 0;\n\
    \    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string temp;\n\
    \    ss >> temp;\n    apples = std::stol(temp);\n    ss >> temp;\n    ss >> temp;\n\
    \    oranges = std::stol(temp);\n    mangoes = n - (apples + oranges);\n    return\
    \ mangoes;", "    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int\
    \ m=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int u=0;\n\
    \    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int\
    \ a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n\
    \    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n   \
    \ int ll=0;\n    int mm=0;\n    int nn=0;\n    int oo=0;\n    int pp=0;\n    int\
    \ qq=0;\n    int rr=0;\n    int ss=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n\
    \    int ww=0;\n    int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n \
    \   int bb=0;\n    int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n  \
    \  int gg=0;\n    int hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n\
    \    int lll=0;\n    int mmm=0;\n    int nnn=0;\n    int ooo=0;\n    int ppp=0;\n\
    \    int qqq=0;\n    int rrr=0;\n    int sss=0;\n    int ttt=0;\n    int uuu=0;\n\
    \    int vvv=0;\n    int www=0;\n    int xxx=0;\n    int yyy=0;\n    int zzz=0;\n\
    \    int aaaa=0;\n   ", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string word;\n    int apple = 0;\n    int orange = 0;\n    while(ss\
    \ >> word){\n        if(word == \"apples\"){\n            ss >> word;\n      \
    \      apple = std::stoi(word);\n        }\n        else if(word == \"oranges\"\
    ){\n            ss >> word;\n            orange = std::stoi(word);\n        }\n\
    \    }\n    return n - (apple + orange);", "    int apples, oranges;\n    sscanf(s.c_str(),\
    \ \"%d apples and %d oranges\", &apples, &oranges);\n    return n - apples - oranges;",
  "    // your code here\n    int a,o;\n    sscanf(s.c_str(),\"%d apples and %d oranges\"\
    ,&a,&o);\n    return n-a-o;", "    long apples = 0;\n    long oranges = 0;\n \
    \   long mangoes = 0;\n    std::stringstream ss(s);\n    std::string word;\n \
    \   while (ss >> word) {\n        if (word == \"apples\") {\n            ss >>\
    \ word;\n            apples = std::stol(word);\n        }\n        else if (word\
    \ == \"oranges\") {\n            ss >> word;\n            oranges = std::stol(word);\n\
    \        }\n    }\n    mangoes = n - (apples + oranges);\n    return mangoes;",
  "    long apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"apples\") {\n            ss >> word;\n            apples = std::stol(word);\n\
    \        }\n        else if (word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stol(word);\n        }\n    }\n    mangoes = n - (apples\
    \ + oranges);\n    return mangoes;", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    long apple = 0;\n    long orange = 0;\n \
    \   while(ss >> word){\n        if(word == \"apples\"){\n            ss >> word;\n\
    \            apple = std::stol(word);\n        }\n        else if(word == \"oranges\"\
    ){\n            ss >> word;\n            orange = std::stol(word);\n        }\n\
    \    }\n    return n - (apple + orange);", "    // your code here\n    std::stringstream\
    \ ss(s);\n    long apple, orange;\n    ss >> apple >> s >> orange;\n    return\
    \ n - apple - orange;", "    // Your code here\n    long apples = 0;\n    long\
    \ oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word){\n        if(word == \"apples\"){\n           \
    \ ss >> word;\n            apples = std::stol(word);\n        }\n        else\
    \ if(word == \"oranges\"){\n            ss >> word;\n            oranges = std::stol(word);\n\
    \        }\n    }\n    mangoes = n - (apples + oranges);\n    return mangoes;",
  "    // your code here\n    std::stringstream ss;\n    ss << s;\n    std::string\
    \ temp;\n    int apples = 0;\n    int oranges = 0;\n    while(!ss.eof()) {\n \
    \       ss >> temp;\n        if(temp == \"apples\") {\n            ss >> temp;\n\
    \            apples = std::stoi(temp);\n        }\n        else if(temp == \"\
    oranges\") {\n            ss >> temp;\n            oranges = std::stoi(temp);\n\
    \        }\n    }\n    return n - (apples + oranges);", "    // your code here\n\
    \    int a,o;\n    sscanf(s.c_str(),\"%d apples and %d oranges\",&a,&o);\n   \
    \ return n-a-o;", "    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            ss >>\
    \ word;\n            apples = std::stoi(word);\n        } else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - apples - oranges;", "    // your code here\n\
    \    long num_apples = 0;\n    long num_oranges = 0;\n    long num_mangoes = 0;\n\
    \    std::string temp = \"\";\n    for(int i = 0; i < s.length(); i++){\n    \
    \    if(s[i] == ' '){\n            if(temp == \"apples\"){\n                num_apples\
    \ = std::stol(s.substr(0, i));\n                temp = \"\";\n            }\n\
    \            else if(temp == \"oranges\"){\n                num_oranges = std::stol(s.substr(i\
    \ + 1, s.length() - 1));\n                temp = \"\";\n            }\n      \
    \  }\n        else{\n            temp += s[i];\n        }\n    }\n    num_mangoes\
    \ = n - (num_apples + num_oranges);\n    return num_mangoes;", "    // your code\
    \ here\n    int a,o;\n    sscanf(s.c_str(),\"%d apples and %d oranges\",&a,&o);\n\
    \    return n-a-o;", "    // your code here\n    std::stringstream ss(s);\n  \
    \  std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n    \
    \        ss >> word;\n            apples = std::stoi(word);\n        }\n     \
    \   else if(word == \"oranges\") {\n            ss >> word;\n            ss >>\
    \ word;\n            oranges = std::stoi(word);\n        }\n    }\n    return\
    \ n - (apples + oranges);", "    // your code here\n    long a,o;\n    sscanf(s.c_str(),\"\
    %ld apples and %ld oranges\",&a,&o);\n    return n-a-o;", "    long apples = 0;\n\
    \    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"apples\"\
    ) {\n            ss >> word;\n            apples = std::stol(word);\n        }\
    \ else if (word == \"oranges\") {\n            ss >> word;\n            oranges\
    \ = std::stol(word);\n        }\n    }\n    mangoes = n - (apples + oranges);\n\
    \    return mangoes;", "    long apples = 0;\n    long oranges = 0;\n    long\
    \ mangoes = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    ss >>\
    \ temp;\n    apples = std::stol(temp);\n    ss >> temp;\n    ss >> temp;\n   \
    \ oranges = std::stol(temp);\n    mangoes = n - (apples + oranges);\n    return\
    \ mangoes;", "    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n \
    \   int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx\
    \ = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n \
    \   int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg\
    \ = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n\
    \    int lll = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int\
    \ qqq = 0;\n    int rrr = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv\
    \ = 0;\n    int www = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n\
    \    int aaaa = 0;\n    int bbbb = 0;\n    int cccc = 0;\n    int dddd = 0", " \
    \   // your code here\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int\
    \ l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n   \
    \ int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll\
    \ = 0;\n    int mm = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n \
    \   int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff\
    \ = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n\
    \    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int\
    \ ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt = 0;\n    int uuu\
    \ = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx = 0;\n    int yyy = 0;\n\
    \    int zzz = 0;\n    int aaaa = 0;\n    int bbbb = 0;\n    int cccc = 0;\n \
    \  ", "    // your code here\n    long a, o;\n    std::stringstream ss(s);\n \
    \   ss >> a >> s >> o;\n    return n - a - o;", "    // your code here\n    long\
    \ apple = 0;\n    long orange = 0;\n    long mango = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while(std::getline(ss, temp, ' ')){\n   \
    \     if(temp == \"apples\"){\n            apple = std::stol(std::getline(ss,\
    \ temp, ' '));\n        }\n        else if(temp == \"oranges\"){\n           \
    \ orange = std::stol(std::getline(ss, temp, ' '));\n        }\n    }\n    mango\
    \ = n - (apple + orange);\n    return mango;", "    // your code here\n    long\
    \ a,o;\n    std::stringstream ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;", " \
    \   // your code here\n    long apples=0,oranges=0;\n    for(int i=0;i<s.length();i++){\n\
    \        if(s[i]=='a'){\n            apples++;\n        }\n        else if(s[i]=='o'){\n\
    \            oranges++;\n        }\n    }\n    return n-(apples+oranges);", " \
    \   // your code here\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    std::vector<std::string>\
    \ tokens;\n    while(std::getline(ss, temp, ' ')) {\n        tokens.push_back(temp);\n\
    \    }\n    apples = std::stol(tokens[0]);\n    oranges = std::stol(tokens[3]);\n\
    \    mangoes = n - (apples + oranges);\n    return mangoes;", "    // your code\
    \ here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n\
    \    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int\
    \ u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n\
    \    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int\
    \ f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n\
    \    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n    int qq=0;\n \
    \   int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n  \
    \  int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n   \
    \ int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int\
    \ hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int\
    \ mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n   \
    \ int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n\
    \    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n    int cccc=0;\n\
    \   ", "    // Write your code here\n    // To print results to the standard output\
    \ you can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    std::vector<std::string> words;\n    while(ss\
    \ >> word)\n        words.push_back(word);\n    long num_apples = std::stol(words[0]);\n\
    \    long num_oranges = std::stol(words[3]);\n    return n - num_apples - num_oranges;",
  "    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n\
    \    int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int\
    \ t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n\
    \    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int\
    \ e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n\
    \    int kk=0;\n    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n \
    \   int qq=0;\n    int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n  \
    \  int ww=0;\n    int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n   \
    \ int bb=0;\n    int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int\
    \ gg=0;\n    int hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int\
    \ lll=0;\n    int mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n   \
    \ int rrr=0;\n    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n\
    \    int xxx=0;\n    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n\
    \    int cccc=0;\n   ", "    // your code here\n    int apples, oranges;\n   \
    \ std::stringstream ss(s);\n    ss >> apples >> oranges;\n    return n - apples\
    \ - oranges;", "    // your code here\n    long apples = 0;\n    long oranges\
    \ = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string temp;\n\
    \    while(ss >> temp) {\n        if(temp == \"apples\") {\n            ss >>\
    \ apples;\n        }\n        else if(temp == \"oranges\") {\n            ss >>\
    \ oranges;\n        }\n    }\n    mangoes = n - (apples + oranges);\n    return\
    \ mangoes;", "    // your code here\n    int i = 0;\n    int j = 0;\n    int k\
    \ = 0;\n    int l = 0;\n    int m = 0;\n    int a = 0;\n    int b = 0;\n    int\
    \ c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n   \
    \ int h = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int q = 0;\n\
    \    int w = 0;\n    int t = 0;\n    int r = 0;\n    int u = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int v = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc\
    \ = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n \
    \   int hh = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int qq\
    \ = 0;\n    int ww = 0;\n    int tt = 0;\n    int rr = 0;\n    int uu = 0;\n \
    \   int oo = 0;\n    int pp = 0;\n    int vv = 0;\n    int aaa = 0;\n    int bbb\
    \ = 0;\n    int ccc = 0;\n    int ddd = 0;\n    int eee = 0;\n    int fff = 0;\n\
    \    int ggg = 0;\n    int hhh = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int\
    \ zzz = 0;\n    int qqq = 0;\n    int www = 0;\n    int ttt = 0;\n    int rrr\
    \ = 0;\n    int uuu = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int vvv = 0;\n\
    \    int aaaa = 0;\n    int bbbb = 0;\n    int cccc = 0;\n    int dddd = 0;\n\
    \    int eee", "    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int count = 0;\n    int a = 0;\n    int o = 0;\n    while(ss >> word)\
    \ {\n        if(word == \"apples\") {\n            ss >> word;\n            ss\
    \ >> word;\n            a = std::stoi(word);\n        }\n        else if(word\
    \ == \"oranges\") {\n            ss >> word;\n            ss >> word;\n      \
    \      o = std::stoi(word);\n        }\n    }\n    return n - (a + o);", "   \
    \ // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n    int count=0;\n\
    \    while(s[i]!=' ')\n    {\n        count++;\n        i++;\n    }\n    char\
    \ *a=(char*)malloc(sizeof(char)*count);\n    while(s[j]!=' ')\n    {\n       \
    \ a[k]=s[j];\n        j++;\n        k++;\n    }\n    a[k]='\\0';\n    int x=atoi(a);\n\
    \    int y=n-x;\n    int z=0;\n    int l=0;\n    int m=0;\n    int count1=0;\n\
    \    while(s[i]!=' ')\n    {\n        i++;\n    }\n    i=i+3;\n    while(s[i]!='\
    \ ')\n    {\n        count1++;\n        i++;\n    }\n    char *b=(char*)malloc(sizeof(char)*count1);\n\
    \    while(s[j]!=' ')\n    {\n        j++;\n    }\n    j=j+3;\n    while(s[j]!='\
    \ ')\n    {\n        b[l]=s[j];\n        j++;\n        l++;\n    }\n    b[l]='\\\
    0';\n    int x1=atoi(b);\n    int y1=y-x1;\n    return y1;", "    // your code\
    \ here\n    long num_apples = 0;\n    long num_oranges = 0;\n    long num_mangoes\
    \ = 0;\n    std::string temp = \"\";\n    for(int i = 0; i < s.length(); i++){\n\
    \        if(s[i] == ' '){\n            if(temp == \"apples\"){\n             \
    \   num_apples = std::stol(s.substr(0, i));\n                temp = \"\";\n  \
    \          }\n            else if(temp == \"oranges\"){\n                num_oranges\
    \ = std::stol(s.substr(i+1, s.length()-1));\n                temp = \"\";\n  \
    \          }\n        }\n        else{\n            temp += s[i];\n        }\n\
    \    }\n    num_mangoes = n - (num_apples + num_oranges);\n    return num_mangoes;",
  "    int apples = 0, oranges = 0;\n    for (int i = 0; i < s.size(); i++) {\n  \
    \      if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o')\
    \ {\n            oranges++;\n        }\n    }\n    return n - apples - oranges;",
  "    // your code here\n    std::stringstream ss(s);\n    std::string word;\n  \
    \  int apple = 0;\n    int orange = 0;\n    while(ss >> word){\n        if(word\
    \ == \"apples\"){\n            ss >> word;\n            apple = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\"){\n            ss >> word;\n \
    \           orange = std::stoi(word);\n        }\n    }\n    return n - apple\
    \ - orange;", "    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            ss >>\
    \ word;\n            apples = std::stoi(word);\n        }\n        else if(word\
    \ == \"oranges\") {\n            ss >> word;\n            ss >> word;\n      \
    \      oranges = std::stoi(word);\n        }\n    }\n    return n - (apples +\
    \ oranges);", "    std::stringstream ss(s);\n    std::string word;\n    int apples\
    \ = 0;\n    int oranges = 0;\n    while (ss >> word) {\n        if (word == \"\
    apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        if (word == \"oranges\") {\n            ss >> word;\n    \
    \        oranges = std::stoi(word);\n        }\n    }\n    return n - apples -\
    \ oranges;", "\t// your code here\n\tint apples = 0, oranges = 0;\n\tfor (int\
    \ i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a') {\n\t\t\tapples = apples\
    \ * 10 + (s[i + 1] - '0');\n\t\t}\n\t\telse if (s[i] == 'o') {\n\t\t\toranges\
    \ = oranges * 10 + (s[i + 1] - '0');\n\t\t}\n\t}\n\treturn n - (apples + oranges);",
  "    std::stringstream ss(s);\n    std::string word;\n    int a = 0, o = 0;\n  \
    \  while (ss >> word) {\n        if (word == \"apples\") {\n            ss >>\
    \ word;\n            a = std::stoi(word);\n        }\n        else if (word ==\
    \ \"oranges\") {\n            ss >> word;\n            o = std::stoi(word);\n\
    \        }\n    }\n    return n - a - o;", "    // your code here\n    long num_apples\
    \ = 0;\n    long num_oranges = 0;\n    long num_mangoes = 0;\n    long i = 0;\n\
    \    while(s[i] != ' '){\n        num_apples = num_apples * 10 + (s[i] - '0');\n\
    \        i++;\n    }\n    i += 5;\n    while(s[i] != ' '){\n        num_oranges\
    \ = num_oranges * 10 + (s[i] - '0');\n        i++;\n    }\n    num_mangoes = n\
    \ - num_apples - num_oranges;\n    return num_mangoes;", "    long apples = 0;\n\
    \    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss;\n   \
    \ ss << s;\n    ss >> apples >> oranges;\n    mangoes = n - apples - oranges;\n\
    \    return mangoes;", "    // your code here\n    long apples = 0;\n    long\
    \ oranges = 0;\n    long mangoes = 0;\n    long i = 0;\n    while(s[i] != ' '){\n\
    \        apples = apples * 10 + (s[i] - '0');\n        i++;\n    }\n    i += 6;\n\
    \    while(s[i] != ' '){\n        oranges = oranges * 10 + (s[i] - '0');\n   \
    \     i++;\n    }\n    mangoes = n - (apples + oranges);\n    return mangoes;",
  "    // your code here\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(std::getline(ss,\
    \ temp, ' ')){\n        if(temp == \"apples\"){\n            apples = std::stol(std::getline(ss,\
    \ temp, ' '));\n        }\n        else if(temp == \"oranges\"){\n           \
    \ oranges = std::stol(std::getline(ss, temp, ' '));\n        }\n    }\n    mangoes\
    \ = n - apples - oranges;\n    return mangoes;", "    // your code here\n    int\
    \ i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n    int o=0;\n\
    \    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int u=0;\n    int\
    \ v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int a=0;\n\
    \    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n    int\
    \ g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n    int ll=0;\n\
    \    int mm=0;\n    int oo=0;\n    int pp=0;\n    int qq=0;\n    int rr=0;\n \
    \   int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n    int xx=0;\n  \
    \  int yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n    int cc=0;\n   \
    \ int dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int hh=0;\n    int\
    \ iii=0;\n    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int mmm=0;\n   \
    \ int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n    int ttt=0;\n\
    \    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n    int yyy=0;\n\
    \    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n    int cccc=0;\n   ", "  \
    \  long apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n\
    \        } else if (s[i] == 'o') {\n            oranges++;\n        }\n    }\n\
    \    mangoes = n - (apples + oranges);\n    return mangoes;", "    long apples\
    \ = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"apples\"\
    ) {\n            ss >> apples;\n        } else if (temp == \"oranges\") {\n  \
    \          ss >> oranges;\n        }\n    }\n    mangoes = n - (apples + oranges);\n\
    \    return mangoes;", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    std::vector<std::string> tokens;\n    while(std::getline(ss,\
    \ temp, ' ')) {\n        tokens.push_back(temp);\n    }\n    int apples = std::stoi(tokens[0]);\n\
    \    int oranges = std::stoi(tokens[3]);\n    return n - (apples + oranges);",
  "    // your code here\n    long a,o;\n    std::stringstream ss(s);\n    ss>>a>>s>>o;\n\
    \    return n-a-o;", "    std::stringstream ss(s);\n    std::string word;\n  \
    \  int apples = 0;\n    int oranges = 0;\n    while (ss >> word) {\n        if\
    \ (word == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        if (word == \"oranges\") {\n            ss >> word;\n    \
    \        oranges = std::stoi(word);\n        }\n    }\n    return n - apples -\
    \ oranges;"]
stop_tokens:
- "\n}"

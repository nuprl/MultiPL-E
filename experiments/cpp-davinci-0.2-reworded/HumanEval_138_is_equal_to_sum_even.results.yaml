language: cpp
name: HumanEval_138_is_equal_to_sum_even
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp1y9c5dot: /tmp/tmp1y9c5dot.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n<8)\n        return false;\n    if(n%2!=0)\n        return false;\n   \
    \ return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4!=0)\n        return\
    \ false;\n    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpvokxzi7l: /tmp/tmpvokxzi7l.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    else\n        return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp25u3cl7n: /tmp/tmp25u3cl7n.cpp:21: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n   \
    \ if(n<=8)\n        return false;\n    return is_equal_to_sum_even(n-8);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpmqaipp_7: /tmp/tmpmqaipp_7.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    if(n<0)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpllfhh3m6: /tmp/tmpllfhh3m6.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  int count = 0;\n    for(int i = 2; i <= n; i += 2) {\n        if(n % i == 0)\
    \ {\n            count++;\n        }\n    }\n    if(count == 4) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpsh4_r_ay: /tmp/tmpsh4_r_ay.cpp:30: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpm24qxfjd: /tmp/tmpm24qxfjd.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4!=0)\n        return\
    \ false;\n    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpvokxzi7l: /tmp/tmpvokxzi7l.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4!=0)\n        return\
    \ false;\n    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpvokxzi7l: /tmp/tmpvokxzi7l.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1) return false;\n    if(n<8) return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  int count = 0;\n    for(int i = 2; i <= n; i+=2) {\n        if(n%i == 0) {\n\
    \            count++;\n        }\n    }\n    if(count == 4) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmprvjb0ltm: /tmp/tmprvjb0ltm.cpp:30: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpm24qxfjd: /tmp/tmpm24qxfjd.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==8)\n        return true;\n\
    \    return is_equal_to_sum_even(n-8);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp5du6iwyl: /tmp/tmp5du6iwyl.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    if (n == 2) {\n        return false;\n    }\n\
    \    return is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmporw9edyx: /tmp/tmporw9edyx.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1) return false;\n    if(n%4==0) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp4wmsphmg: /tmp/tmp4wmsphmg.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1) return false;\n    if(n==0) return true;\n    if(n<0) return\
    \ false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp2_ppwpw9: /tmp/tmp2_ppwpw9.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1) return false;\n    if(n%4==0) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp4wmsphmg: /tmp/tmp4wmsphmg.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n  // your code here\n  if(n%2!=0)\n  return false;\n  else\n  {\n    int\
    \ count=0;\n    for(int i=2;i<=n;i+=2)\n    {\n      if(n%i==0)\n      count++;\n\
    \    }\n    if(count==4)\n    return true;\n    else\n    return false;\n  }\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpb_9nnn48: /tmp/tmpb_9nnn48.cpp:33: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 8) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    if(n<0)\n        return false;\n    return is_equal_to_sum_even(n-2);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpllfhh3m6: /tmp/tmpllfhh3m6.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    if (n == 4) {\n        return false;\n    }\n\
    \    return is_equal_to_sum_even(n - 4);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmphdd91cfm: /tmp/tmphdd91cfm.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4!=0)\n        return\
    \ false;\n    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpvokxzi7l: /tmp/tmpvokxzi7l.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    return\
    \ is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpeviquf1g: /tmp/tmpeviquf1g.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n==8)\n        return true;\n   \
    \ if(n<8)\n        return false;\n    return is_equal_to_sum_even(n-8);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp6w7si0at: /tmp/tmp6w7si0at.cpp:28: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmphdd91cfm: /tmp/tmphdd91cfm.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp5du6iwyl: /tmp/tmp5du6iwyl.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp5du6iwyl: /tmp/tmp5du6iwyl.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    if\
    \ (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5j69h_ww: /tmp/tmp5j69h_ww.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056917
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  int count = 0;\n    int i = 2;\n    while(n>0)\n    {\n        if(n%2==0)\n\
    \        {\n            count++;\n            n = n-i;\n        }\n        i+=2;\n\
    \    }\n    if(count==4)\n        return true;\n    else\n        return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp00c7vv0c: /tmp/tmp00c7vv0c.cpp:35: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2==1)\n        return false;\n    if(n%4==0)\n        return true;\n \
    \   return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp7cn1vfg8: /tmp/tmp7cn1vfg8.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpku31_dbu: /tmp/tmpku31_dbu.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp52vswu2h: /tmp/tmp52vswu2h.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    if (n == 2) {\n        return false;\n    }\n\
    \    return is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpx2klxns_: /tmp/tmpx2klxns_.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    if\
    \ (n == 2) return false;\n    if (n == 4) return true;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpajkytrta: /tmp/tmpajkytrta.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmppbygzwot: /tmp/tmppbygzwot.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056917
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n   \
    \ if(n<8)\n        return false;\n    return is_equal_to_sum_even(n-8);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp40jw15uk: /tmp/tmp40jw15uk.cpp:28: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056917
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example: print \"Hello world!\"\n    if(n%2!=0)\n\
    \        return false;\n    if(n%4==0)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp0a_33po8: /tmp/tmp0a_33po8.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp5du6iwyl: /tmp/tmp5du6iwyl.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpm24qxfjd: /tmp/tmpm24qxfjd.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    if (n < 0) {\n        return false;\n    }\n\
    \    return is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpu47tu_i1: /tmp/tmpu47tu_i1.cpp:25: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056917
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n\tif (n % 2 != 0) {\n\t\treturn false;\n\t}\n\tif (n == 0) {\n\t\treturn\
    \ true;\n\t}\n\tif (n == 2) {\n\t\treturn false;\n\t}\n\treturn is_equal_to_sum_even(n\
    \ - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_dorpyp8: /tmp/tmp_dorpyp8.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzzmdv_jz: /tmp/tmpzzmdv_jz.cpp:24: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpm24qxfjd: /tmp/tmpm24qxfjd.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpm24qxfjd: /tmp/tmpm24qxfjd.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  int i,j,k,l;\n    for(i=2;i<=n/4;i+=2)\n    {\n        for(j=2;j<=n/4;j+=2)\n\
    \        {\n            for(k=2;k<=n/4;k+=2)\n            {\n                for(l=2;l<=n/4;l+=2)\n\
    \                {\n                    if(i+j+k+l==n)\n                    {\n\
    \                        return true;\n                    }\n               \
    \ }\n            }\n        }\n    }\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmps2ixhg2m: /tmp/tmps2ixhg2m.cpp:39: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    return\
    \ is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpeviquf1g: /tmp/tmpeviquf1g.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4!=0)\n        return\
    \ false;\n    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpvokxzi7l: /tmp/tmpvokxzi7l.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1)\n        return false;\n    else\n        return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp71mhuex1: /tmp/tmp71mhuex1.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    return\
    \ is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpeviquf1g: /tmp/tmpeviquf1g.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp1y9c5dot: /tmp/tmp1y9c5dot.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1) return false;\n    if(n%4==0) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp4wmsphmg: /tmp/tmp4wmsphmg.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n    {\n        return false;\n    }\n    if(n<8)\n    {\n     \
    \   return false;\n    }\n    if(n==8)\n    {\n        return true;\n    }\n \
    \   if(n>8)\n    {\n        return true;\n    }\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n < 8) return false;\n    if (n % 2 != 0) return false;\n    if\
    \ (n % 4 == 0) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpt272w6yw: /tmp/tmpt272w6yw.cpp:22: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n==8)\n        return true;\n   \
    \ if(n<8)\n        return false;\n    return is_equal_to_sum_even(n-8);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp6w7si0at: /tmp/tmp6w7si0at.cpp:28: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n   \
    \ if(n==2)\n        return false;\n    if(n==4)\n        return true;\n    if(n==6)\n\
    \        return false;\n    if(n==8)\n        return true;\n    if(n==10)\n  \
    \      return false;\n    if(n==12)\n        return true;\n    if(n==14)\n   \
    \     return false;\n    if(n==16)\n        return true;\n    if(n==18)\n    \
    \    return false;\n    if(n==20)\n        return true;\n    if(n==22)\n     \
    \   return false;\n    if(n==24)\n        return true;\n    if(n==26)\n      \
    \  return false;\n    if(n==28)\n        return true;\n    if(n==30)\n       \
    \ return false;\n    if(n==32)\n        return true;\n    if(n==34)\n        return\
    \ false;\n    if(n==36)\n        return true;\n    if(n==38)\n        return false;\n\
    \    if(n==40)\n        return true;\n    if(n==42)\n        return false;\n \
    \   if(n==44)\n        return true;\n    if(n==46)\n        return false;\n  \
    \  if(n==48)\n        return true;\n    if(n==50)\n        return false;\n   \
    \ if(n==52)\n        return true;\n    if(n==54)\n        return false;\n    if(n==56)\n\
    \        return true;\n    if(n==58)\n        return false;\n    if(n==60)\n \
    \       return true;\n    if(n==62)\n        return false;\n    if(n==64)\n  \
    \      return true;\n    if(n==66)\n        return false;\n    if(n==68)\n   \
    \     return true;\n    if(\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpvec22xa2.cpp: In function \u2018bool is_equal_to_sum_even(long\
    \ int)\u2019:\n/tmp/tmpvec22xa2.cpp:88:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n   88 | }\n      | ^\n/tmp/tmpvec22xa2.cpp:87:8: error:\
    \ expected \u2018)\u2019 before \u2018}\u2019 token\n   87 |     if(\n      |\
    \       ~^\n      |        )\n   88 | }\n      | ~       \n/tmp/tmpvec22xa2.cpp:88:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   88 | }\n \
    \     | ^\n/tmp/tmpvec22xa2.cpp:88:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   88 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660056917
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n \
    \   return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpmuixcwt3: /tmp/tmpmuixcwt3.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzzmdv_jz: /tmp/tmpzzmdv_jz.cpp:24: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp1y9c5dot: /tmp/tmp1y9c5dot.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmphdd91cfm: /tmp/tmphdd91cfm.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) return false;\n    if (n == 0) return true;\n    if\
    \ (n == 2) return false;\n    if (n == 4) return true;\n    return is_equal_to_sum_even(n\
    \ - 4);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp8qdi6dg5: /tmp/tmp8qdi6dg5.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    if (n == 2) {\n        return false;\n    }\n\
    \    return is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmporw9edyx: /tmp/tmporw9edyx.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp52vswu2h: /tmp/tmp52vswu2h.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // your code here\n    if(n%2==1)\n        return false;\n    if(n%4==0)\n\
    \        return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp334snqnq: /tmp/tmp334snqnq.cpp:21: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp5du6iwyl: /tmp/tmp5du6iwyl.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmphdd91cfm: /tmp/tmphdd91cfm.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 8) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 4);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    if\
    \ (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5j69h_ww: /tmp/tmp5j69h_ww.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056917
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    if\
    \ (n == 2) return false;\n    if (n == 4) return true;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpajkytrta: /tmp/tmpajkytrta.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    if\
    \ (n < 0) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp43i3vp1a: /tmp/tmp43i3vp1a.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpm24qxfjd: /tmp/tmpm24qxfjd.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2==1)\n        return false;\n    if(n%4!=0)\n        return false;\n\
    \    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpo2p76arj: /tmp/tmpo2p76arj.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    return\
    \ is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpeviquf1g: /tmp/tmpeviquf1g.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n   \
    \ return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp7tv4zckh: /tmp/tmp7tv4zckh.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 8) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n==8)\n        return true;\n   \
    \ if(n<8)\n        return false;\n    return is_equal_to_sum_even(n-8);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp6w7si0at: /tmp/tmp6w7si0at.cpp:28: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpm24qxfjd: /tmp/tmpm24qxfjd.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  int i,j,k,l;\n    for(i=2;i<n;i+=2)\n    {\n        for(j=2;j<n;j+=2)\n   \
    \     {\n            for(k=2;k<n;k+=2)\n            {\n                for(l=2;l<n;l+=2)\n\
    \                {\n                    if(i+j+k+l==n)\n                    {\n\
    \                        return true;\n                    }\n               \
    \ }\n            }\n        }\n    }\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    return\
    \ is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpeviquf1g: /tmp/tmpeviquf1g.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpku31_dbu: /tmp/tmpku31_dbu.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n \
    \   return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpmuixcwt3: /tmp/tmpmuixcwt3.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    return\
    \ is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpeviquf1g: /tmp/tmpeviquf1g.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp5du6iwyl: /tmp/tmp5du6iwyl.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    return\
    \ is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpeviquf1g: /tmp/tmpeviquf1g.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp52vswu2h: /tmp/tmp52vswu2h.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 8) return true;\n    if\
    \ (n < 8) return false;\n    return is_equal_to_sum_even(n - 8);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpw8_fc5eg: /tmp/tmpw8_fc5eg.cpp:22: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    if\
    \ (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5j69h_ww: /tmp/tmp5j69h_ww.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056917
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n   \
    \ if(n<=8)\n        return false;\n    return is_equal_to_sum_even(n-8);\n}\n\
    int main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpmqaipp_7: /tmp/tmpmqaipp_7.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpku31_dbu: /tmp/tmpku31_dbu.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmphdd91cfm: /tmp/tmphdd91cfm.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1) return false;\n    if(n==0) return true;\n    if(n<0) return\
    \ false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp2_ppwpw9: /tmp/tmp2_ppwpw9.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example: print \"Hello world!\"\n    if(n%2==1) return\
    \ false;\n    else if(n%2==0) return true;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpwagjuz2s: /tmp/tmpwagjuz2s.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    if (n == 2) {\n        return false;\n    }\n\
    \    return is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmporw9edyx: /tmp/tmporw9edyx.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpku31_dbu: /tmp/tmpku31_dbu.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    if (n == 2) {\n        return false;\n    }\n\
    \    return is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmporw9edyx: /tmp/tmporw9edyx.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  int count = 0;\n    for(int i = 2; i <= n; i += 2) {\n        if(n % i == 0)\
    \ {\n            count++;\n        }\n    }\n    if(count == 4) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpsh4_r_ay: /tmp/tmpsh4_r_ay.cpp:30: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4!=0)\n        return\
    \ false;\n    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpvokxzi7l: /tmp/tmpvokxzi7l.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpku31_dbu: /tmp/tmpku31_dbu.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    if\
    \ (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5j69h_ww: /tmp/tmp5j69h_ww.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056917
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp52vswu2h: /tmp/tmp52vswu2h.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2 != 0)\n        return false;\n    if(n%4 == 0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmplgdrj8zw: /tmp/tmplgdrj8zw.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n%4!=0)\n        return false;\n\
    \    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmphwdv2w5l: /tmp/tmphwdv2w5l.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    for (int i =\
    \ 0; i < n; i += 2) {\n        for (int j = 0; j < n; j += 2) {\n            for\
    \ (int k = 0; k < n; k += 2) {\n                for (int l = 0; l < n; l += 2)\
    \ {\n                    if (i + j + k + l == n) {\n                        return\
    \ true;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp_n5awlq5: /tmp/tmp_n5awlq5.cpp:30: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 8) return true;\n    return\
    \ is_equal_to_sum_even(n - 8);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056919
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1) return false;\n    if(n<8) return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    else\n        return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp25u3cl7n: /tmp/tmp25u3cl7n.cpp:21: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    if (n == 2) {\n        return false;\n    }\n\
    \    return is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmporw9edyx: /tmp/tmporw9edyx.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1)\n        return false;\n    else\n        return true;\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp71mhuex1: /tmp/tmp71mhuex1.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 8) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 8);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056919
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 8) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1) return false;\n    if(n==0) return true;\n    if(n<0) return\
    \ false;\n    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp2_ppwpw9: /tmp/tmp2_ppwpw9.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==8)\n        return true;\n\
    \    return is_equal_to_sum_even(n-8);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpku31_dbu: /tmp/tmpku31_dbu.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2 != 0) return false;\n    if(n == 8) return true;\n    if(n\
    \ < 8) return false;\n    return is_equal_to_sum_even(n-8);\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpfgqo7rw0: /tmp/tmpfgqo7rw0.cpp:22: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n    {\n        return false;\n    }\n    else\n    {\n\
    \        return true;\n    }\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpq59jggob: /tmp/tmpq59jggob.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp5du6iwyl: /tmp/tmp5du6iwyl.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 8) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 4);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp5du6iwyl: /tmp/tmp5du6iwyl.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // write your code here\n    if(n%2 != 0)\n        return false;\n\
    \    if(n%4 == 0)\n        return true;\n    return false;\n}\nint main() {\n\
    \    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpoufwpp6j: /tmp/tmpoufwpp6j.cpp:21: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp52vswu2h: /tmp/tmp52vswu2h.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1) return false;\n    if(n%4==0) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp4wmsphmg: /tmp/tmp4wmsphmg.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n \
    \   return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpmuixcwt3: /tmp/tmpmuixcwt3.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp5du6iwyl: /tmp/tmp5du6iwyl.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  int i,j,k,l;\n    for(i=0;i<=n;i+=2)\n    {\n        for(j=0;j<=n;j+=2)\n \
    \       {\n            for(k=0;k<=n;k+=2)\n            {\n                for(l=0;l<=n;l+=2)\n\
    \                {\n                    if(i+j+k+l==n)\n                    {\n\
    \                        return true;\n                    }\n               \
    \ }\n            }\n        }\n    }\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpmhuh7wyw: /tmp/tmpmhuh7wyw.cpp:36: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    if (n == 2) {\n        return false;\n    }\n\
    \    return is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmporw9edyx: /tmp/tmporw9edyx.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp52vswu2h: /tmp/tmp52vswu2h.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n<8)\n        return false;\n    else\n    {\n        int count=0;\n   \
    \     for(int i=2;i<=n/2;i+=2)\n        {\n            if(n%i==0)\n          \
    \      count++;\n        }\n        if(count>=4)\n            return true;\n \
    \       else\n            return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpktrc2kuz: /tmp/tmpktrc2kuz.cpp:35: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpku31_dbu: /tmp/tmpku31_dbu.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp52vswu2h: /tmp/tmp52vswu2h.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    if (n < 0) {\n        return false;\n    }\n\
    \    return is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpu47tu_i1: /tmp/tmpu47tu_i1.cpp:25: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056917
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n%8==0)\n        return true;\n \
    \   else\n        return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp9t4q6udf: /tmp/tmp9t4q6udf.cpp:27: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp5du6iwyl: /tmp/tmp5du6iwyl.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2 != 0)\n        return false;\n    if(n%4 == 0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpea18vccv: /tmp/tmpea18vccv.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // TODO: Implement this function\n    // Hint: You can use the modulo\
    \ operator (%) to check whether a number is even or not.\n    // Hint: You can\
    \ use the division operator (/) to divide a number by 2.\n    // Hint: You can\
    \ use the subtraction operator (-) to subtract a number from another number.\n\
    \    // Hint: You can use the addition operator (+) to add a number to another\
    \ number.\n    // Hint: You can use the multiplication operator (*) to multiply\
    \ a number by another number.\n    // Hint: You can use the less than operator\
    \ (<) to check whether a number is less than another number.\n    // Hint: You\
    \ can use the equal to operator (==) to check whether a number is equal to another\
    \ number.\n    // Hint: You can use the greater than operator (>) to check whether\
    \ a number is greater than another number.\n    // Hint: You can use the not equal\
    \ to operator (!=) to check whether a number is not equal to another number.\n\
    \    // Hint: You can use the logical and operator (&&) to check whether two conditions\
    \ are true at the same time.\n    // Hint: You can use the logical or operator\
    \ (||) to check whether at least one of two conditions is true.\n    // Hint:\
    \ You can use the logical not operator (!) to negate a condition.\n    // Hint:\
    \ You can use the ternary operator (?:) to select one of two values based on a\
    \ condition.\n    // Hint: You can use the comma operator (,) to combine two expressions\
    \ into one.\n    // Hint: You can use the assignment operator (=) to assign a\
    \ value to a variable.\n    // Hint: You can use the if statement to execute a\
    \ block of code if a condition is true.\n    // Hint: You can use the else statement\
    \ to execute a block of code if a condition is false.\n    // Hint: You can use\
    \ the while statement to execute a block of code repeatedly while a condition\
    \ is true.\n    // Hint: You can use the do while statement to execute a block\
    \ of code repeatedly while a condition is true.\n    // Hint: You can use the\
    \ for statement to execute a block of code repeatedly while a condition is true.\n\
    \    // Hint: You can use the break statement\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpl6hy0kp1: /tmp/tmpl6hy0kp1.cpp:37: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1) return false;\n    if(n%4==0) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp4wmsphmg: /tmp/tmp4wmsphmg.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0){\n        return false;\n    }\n    if(n==0){\n       \
    \ return true;\n    }\n    if(n==2){\n        return false;\n    }\n    return\
    \ is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp35yxv19e: /tmp/tmp35yxv19e.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // TODO: Implement\n    if (n % 2 != 0) {\n        return false;\n\
    \    }\n    if (n == 0) {\n        return true;\n    }\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpt6v4hov5: /tmp/tmpt6v4hov5.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1) return false;\n    if(n%4==0) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp4wmsphmg: /tmp/tmp4wmsphmg.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmphdd91cfm: /tmp/tmphdd91cfm.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2==1)\n        return false;\n    if(n==0)\n        return true;\n\
    \    if(n==2)\n        return false;\n    return is_equal_to_sum_even(n-2);\n\
    }\nint main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpaaf3r62z: /tmp/tmpaaf3r62z.cpp:24: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  int i,j,k,l;\n    for(i=2;i<=n/4;i+=2)\n    {\n        for(j=2;j<=n/4;j+=2)\n\
    \        {\n            for(k=2;k<=n/4;k+=2)\n            {\n                for(l=2;l<=n/4;l+=2)\n\
    \                {\n                    if(i+j+k+l==n)\n                    {\n\
    \                        return true;\n                    }\n               \
    \ }\n            }\n        }\n    }\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmps2ixhg2m: /tmp/tmps2ixhg2m.cpp:39: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n \
    \   return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpmuixcwt3: /tmp/tmpmuixcwt3.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpm24qxfjd: /tmp/tmpm24qxfjd.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 == 1) return false;\n    if (n == 0) return true;\n    for\
    \ (int i = 2; i <= n / 2; i += 2) {\n        if (is_equal_to_sum_even(n - i))\
    \ return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp7bzdnkqg: /tmp/tmp7bzdnkqg.cpp:23: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n==8)\n        return true;\n   \
    \ if(n<8)\n        return false;\n    return is_equal_to_sum_even(n-8);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp6w7si0at: /tmp/tmp6w7si0at.cpp:28: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpm24qxfjd: /tmp/tmpm24qxfjd.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpnanzvqob: /tmp/tmpnanzvqob.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n % 4 ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpm24qxfjd: /tmp/tmpm24qxfjd.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2==1)\n        return false;\n    if(n%4!=0)\n        return false;\n\
    \    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpo2p76arj: /tmp/tmpo2p76arj.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    if\
    \ (n < 0) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp43i3vp1a: /tmp/tmp43i3vp1a.cpp:19: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n % 4 == 0) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp52vswu2h: /tmp/tmp52vswu2h.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    if(n%2==1)\n        return false;\n \
    \   if(n%4==0)\n        return true;\n    return false;\n}\nint main() {\n   \
    \ auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (true));\n    assert(candidate((11)) == (false));\n\
    \    assert(candidate((12)) == (true));\n    assert(candidate((13)) == (false));\n\
    \    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpcbvigc1b: /tmp/tmpcbvigc1b.cpp:21: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return true;\n\
    \    return is_equal_to_sum_even(n-2);\n}\nint main() {\n    auto candidate =\
    \ is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp5du6iwyl: /tmp/tmp5du6iwyl.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    if\
    \ (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5j69h_ww: /tmp/tmp5j69h_ww.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056917
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if(n % 2 != 0)\n        return false;\n    if(n == 0)\n        return\
    \ true;\n    return is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp7nh815ph: /tmp/tmp7nh815ph.cpp:20: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056920
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    return\
    \ is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpeviquf1g: /tmp/tmpeviquf1g.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    return\
    \ is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpeviquf1g: /tmp/tmpeviquf1g.cpp:18: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    if\
    \ (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5j69h_ww: /tmp/tmp5j69h_ww.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056917
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // TODO: Implement this function\n    if(n%2==1)\n        return false;\n\
    \    else\n    {\n        long sum=0;\n        for(int i=2;i<=n;i+=2)\n      \
    \  {\n            sum+=i;\n            if(sum==n)\n                return true;\n\
    \        }\n        return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpotr_jxnp: /tmp/tmpotr_jxnp.cpp:30: int main(): Assertion `candidate((6))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056920
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n==8)\n        return true;\n   \
    \ if(n<8)\n        return false;\n    return is_equal_to_sum_even(n-8);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp6w7si0at: /tmp/tmp6w7si0at.cpp:28: int main(): Assertion `candidate((10))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n    if\
    \ (n == 2) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nint main()\
    \ {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4)) ==\
    \ (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp5j69h_ww: /tmp/tmp5j69h_ww.cpp:21: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056917
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n%4==0)\n        return true;\n \
    \   return false;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpmuixcwt3: /tmp/tmpmuixcwt3.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    return is_equal_to_sum_even(n - 2);\n}\nint\
    \ main() {\n    auto candidate = is_equal_to_sum_even;\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((6)) == (false));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (true));\n    assert(candidate((11))\
    \ == (false));\n    assert(candidate((12)) == (true));\n    assert(candidate((13))\
    \ == (false));\n    assert(candidate((16)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3iurk9_q: /tmp/tmp3iurk9_q.cpp:22: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    if (n % 2 != 0) {\n        return false;\n    }\n    if (n == 0) {\n\
    \        return true;\n    }\n    if (n == 2) {\n        return false;\n    }\n\
    \    return is_equal_to_sum_even(n - 2);\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmporw9edyx: /tmp/tmporw9edyx.cpp:27: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660056916
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n%4!=0)\n        return false;\n\
    \    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmphwdv2w5l: /tmp/tmphwdv2w5l.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n        return false;\n    if(n%4!=0)\n        return false;\n\
    \    return true;\n}\nint main() {\n    auto candidate = is_equal_to_sum_even;\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (true));\n\
    \    assert(candidate((11)) == (false));\n    assert(candidate((12)) == (true));\n\
    \    assert(candidate((13)) == (false));\n    assert(candidate((16)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmphwdv2w5l: /tmp/tmphwdv2w5l.cpp:23: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056919
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n// Example\n\
    // >>> is_equal_to_sum_even((4))\n// (false)\n// >>> is_equal_to_sum_even((6))\n\
    // (false)\n// >>> is_equal_to_sum_even((8))\n// (true)\nbool is_equal_to_sum_even(long\
    \ n) {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n  \
    \  if(n%2!=0)\n    {\n        return false;\n    }\n    else\n    {\n        if(n%4==0)\n\
    \        {\n            return true;\n        }\n        else\n        {\n   \
    \         return false;\n        }\n    }\n}\nint main() {\n    auto candidate\
    \ = is_equal_to_sum_even;\n    assert(candidate((4)) == (false));\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (true));\n    assert(candidate((11)) == (false));\n    assert(candidate((12))\
    \ == (true));\n    assert(candidate((13)) == (false));\n    assert(candidate((16))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpq9q2r3kl: /tmp/tmpq9q2r3kl.cpp:33: int main(): Assertion `candidate((4))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660056920

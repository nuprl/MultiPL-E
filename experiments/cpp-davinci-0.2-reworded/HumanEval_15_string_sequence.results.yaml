language: cpp
name: HumanEval_15_string_sequence
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n\tstd::stringstream ss;\n\tfor (int i = 0; i <= n; i++) {\n\t\tss << i\
    \ << \" \";\n\t}\n\treturn ss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmplblkdc5k: /tmp/tmplblkdc5k.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n\tstd::stringstream ss;\n\tfor (long i = 0; i <= n; i++) {\n\t\tss <<\
    \ i << \" \";\n\t}\n\treturn ss.str();\n}\nint main() {\n    auto candidate =\
    \ string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpbaonpyiy: /tmp/tmpbaonpyiy.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream s;\n    for (int i = 0; i <= n; i++) {\n       \
    \ s << i << \" \";\n    }\n    return s.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpvfbbuh5g: /tmp/tmpvfbbuh5g.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n  std::stringstream ss;\n  for (int i = 0; i <= n; i++) {\n    ss << i\
    \ << \" \";\n  }\n  std::string s = ss.str();\n  return s.substr(0, s.size() -\
    \ 1);\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string result = ss.str();\n    result.pop_back();\n\
    \    return result;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n  std::stringstream ss;\n  for (long i = 0; i <= n; i++) {\n    ss <<\
    \ i << \" \";\n  }\n  return ss.str();\n}\nint main() {\n    auto candidate =\
    \ string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpqobfmevj: /tmp/tmpqobfmevj.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n  std::stringstream ss;\n  for (long i = 0; i <= n; i++) {\n    ss <<\
    \ i << \" \";\n  }\n  return ss.str();\n}\nint main() {\n    auto candidate =\
    \ string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpqobfmevj: /tmp/tmpqobfmevj.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n  std::stringstream ss;\n  for (int i = 0; i <= n; i++) {\n    ss << i\
    \ << \" \";\n  }\n  return ss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpg00b5bmk: /tmp/tmpg00b5bmk.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n  std::stringstream ss;\n  for (long i = 0; i <= n; i++) {\n    ss <<\
    \ i << \" \";\n  }\n  std::string s = ss.str();\n  return s.substr(0, s.size()\
    \ - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n  std::stringstream ss;\n  for (long i = 0; i <= n; i++) {\n    ss <<\
    \ i << \" \";\n  }\n  std::string s = ss.str();\n  return s.substr(0, s.size()\
    \ - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n\tstd::stringstream ss;\n\tfor (long i = 0; i <= n; i++) {\n\t\tss <<\
    \ i << \" \";\n\t}\n\treturn ss.str();\n}\nint main() {\n    auto candidate =\
    \ string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpbaonpyiy: /tmp/tmpbaonpyiy.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n\tstd::stringstream ss;\n\tfor (int i = 0; i <= n; i++) {\n\t\tss << i\
    \ << \" \";\n\t}\n\treturn ss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmplblkdc5k: /tmp/tmplblkdc5k.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n  std::stringstream ss;\n  for (long i = 0; i <= n; i++) {\n    ss <<\
    \ i << \" \";\n  }\n  return ss.str();\n}\nint main() {\n    auto candidate =\
    \ string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpqobfmevj: /tmp/tmpqobfmevj.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i <= n; i++) {\n      \
    \  ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpudw3to25: /tmp/tmpudw3to25.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n\tstd::stringstream ss;\n\tfor (long i = 0; i <= n; i++) {\n\t\tss <<\
    \ i << \" \";\n\t}\n\treturn ss.str();\n}\nint main() {\n    auto candidate =\
    \ string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpbaonpyiy: /tmp/tmpbaonpyiy.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpd2lg76ri: /tmp/tmpd2lg76ri.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    return s.substr(0,\
    \ s.size() - 1);\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    std::string s = ss.str();\n    s.pop_back();\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660057709

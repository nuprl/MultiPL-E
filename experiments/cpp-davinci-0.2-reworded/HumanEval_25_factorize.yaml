name: HumanEval_25_factorize
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime factors\
  \ of given integer in the order from smallest to largest.\n// Each of the factors\
  \ should be vectored number of times corresponding to how many times it appeares\
  \ in factorization.\n// Input number should be equal to the product of all factors\n\
  // >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2, (long)2}))\n// >>>\
  \ factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n// >>> factorize((70))\n\
  // (std::vector<long>({(long)2, (long)5, (long)7}))\nstd::vector<long> factorize(long\
  \ n) {\n"
tests: "}\nint main() {\n    auto candidate = factorize;\n    assert(candidate((2))\
  \ == (std::vector<long>({(long)2})));\n    assert(candidate((4)) == (std::vector<long>({(long)2,\
  \ (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2, (long)2,\
  \ (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3, (long)19})));\n\
  \    assert(candidate((3249)) == (std::vector<long>({(long)3, (long)3, (long)19,\
  \ (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
  \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
  \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
  \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
completions: ["    std::vector<long> result;\n    for (long i = 2; i * i <= n; i++)\
    \ {\n        while (n % i == 0) {\n            result.push_back(i);\n        \
    \    n /= i;\n        }\n    }\n    if (n > 1) {\n        result.push_back(n);\n\
    \    }\n    return result;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "\tstd::vector<long> factors;\n\tfor (long\
    \ i = 2; i <= n; i++) {\n\t\twhile (n % i == 0) {\n\t\t\tfactors.push_back(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;", "    std::vector<long> factors;\n\
    \    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n    }\n    return factors;",
  "    std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> result;\n    for (long i = 2; i * i <= n; i++) {\n     \
    \   while (n % i == 0) {\n            result.push_back(i);\n            n /= i;\n\
    \        }\n    }\n    if (n > 1) {\n        result.push_back(n);\n    }\n   \
    \ return result;", "    std::vector<long> result;\n    for (long i = 2; i * i\
    \ <= n; i++) {\n        while (n % i == 0) {\n            result.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        result.push_back(n);\n\
    \    }\n    return result;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long d = 2; d * d <= n; d++) {\n    \
    \    while (n % d == 0) {\n            factors.push_back(d);\n            n /=\
    \ d;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    for (long i = 2; i\
    \ <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i *\
    \ i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long d = 2;\n    while (n > 1) {\n        while (n % d == 0) {\n\
    \            factors.push_back(d);\n            n /= d;\n        }\n        d\
    \ += 1;\n    }\n    return factors;", "    std::vector<long> factors;\n    for\
    \ (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0)\
    \ {\n            factors.push_back(i);\n            n /= i;\n        }\n    }\n\
    \    if (n > 1)\n        factors.push_back(n);\n    return factors;", "    std::vector<long>\
    \ result;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0)\
    \ {\n            result.push_back(i);\n            n /= i;\n        }\n    }\n\
    \    if (n > 1) {\n        result.push_back(n);\n    }\n    return result;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    for\
    \ (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    assert(n > 0);\n    std::vector<long> factors;\n   \
    \ for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0)\
    \ {\n            factors.push_back(i);\n            n /= i;\n        }\n    }\n\
    \    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i * i <= n; i++) {\n    \
    \    while (n % i == 0) {\n            factors.push_back(i);\n            n /=\
    \ i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    for (long i = 2; i\
    \ * i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long d = 2;\n\
    \    while (n > 1) {\n        while (n % d == 0) {\n            factors.push_back(d);\n\
    \            n /= d;\n        }\n        d = d + 1;\n        if (d * d > n) {\n\
    \            if (n > 1) {\n                factors.push_back(n);\n           \
    \ }\n            break;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    for\
    \ (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ result;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0)\
    \ {\n            result.push_back(i);\n            n /= i;\n        }\n    }\n\
    \    if (n > 1) {\n        result.push_back(n);\n    }\n    return result;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    for\
    \ (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1)\n        factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    for (long i = 2; i\
    \ <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    long d = 2;\n    while\
    \ (n > 1) {\n        while (n % d == 0) {\n            factors.push_back(d);\n\
    \            n /= d;\n        }\n        d += 1;\n    }\n    return factors;",
  "    std::vector<long> result;\n    long i = 2;\n    while (n > 1) {\n        while\
    \ (n % i == 0) {\n            result.push_back(i);\n            n /= i;\n    \
    \    }\n        i++;\n    }\n    return result;", "    std::vector<long> res;\n\
    \    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n     \
    \       res.push_back(i);\n            n /= i;\n        }\n    }\n    if (n >\
    \ 1) {\n        res.push_back(n);\n    }\n    return res;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    assert(n > 0);\n    std::vector<long> factors;\n   \
    \ for (long d = 2; d * d <= n; d++) {\n        while (n % d == 0) {\n        \
    \    factors.push_back(d);\n            n /= d;\n        }\n    }\n    if (n >\
    \ 1) {\n        factors.push_back(n);\n    }\n    return factors;", "    assert(n\
    \ > 0);\n    std::vector<long> factors;\n    for (long i = 2; i * i <= n; i++)\
    \ {\n        while (n % i == 0) {\n            factors.push_back(i);\n       \
    \     n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    assert(n > 0);\n    std::vector<long> factors;\n\
    \    for (long d = 2; d * d <= n; d++) {\n        while (n % d == 0) {\n     \
    \       factors.push_back(d);\n            n /= d;\n        }\n    }\n    if (n\
    \ > 1) {\n        factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "\tstd::vector<long>\
    \ factors;\n\tfor (long i = 2; i <= n; i++) {\n\t\twhile (n % i == 0) {\n\t\t\t\
    factors.push_back(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    assert(n >\
    \ 0);\n    std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n \
    \       while (n % i == 0) {\n            factors.push_back(i);\n            n\
    \ /= i;\n        }\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n    }\n    return factors;",
  "    std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   assert(n > 0);\n    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; ++i) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    long d = 2;\n    while\
    \ (n > 1) {\n        while (n % d == 0) {\n            factors.push_back(d);\n\
    \            n /= d;\n        }\n        d += 1;\n    }\n    return factors;",
  "    std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> res;\n    for (long\
    \ i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n            res.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        res.push_back(n);\n\
    \    }\n    return res;", "    std::vector<long> factors;\n    for (long i = 2;\
    \ i <= n; ++i) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long d = 2; d *\
    \ d <= n; d++) {\n        while (n % d == 0) {\n            factors.push_back(d);\n\
    \            n /= d;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; ++i) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> res;\n    for (long i = 2; i * i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            res.push_back(i);\n            n /= i;\n       \
    \ }\n    }\n    if (n > 1) {\n        res.push_back(n);\n    }\n    return res;",
  "    std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    long\
    \ d = 2;\n    while (n > 1) {\n        while (n % d == 0) {\n            factors.push_back(d);\n\
    \            n /= d;\n        }\n        d = d + 1;\n        if (d * d > n) {\n\
    \            if (n > 1) factors.push_back(n);\n            break;\n        }\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    assert(n > 0);\n    std::vector<long> res;\n    for\
    \ (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n            res.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        res.push_back(n);\n\
    \    }\n    return res;", "    std::vector<long> result;\n    for (long i = 2;\
    \ i * i <= n; i++) {\n        while (n % i == 0) {\n            result.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        result.push_back(n);\n\
    \    }\n    return result;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ res;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n\
    \            res.push_back(i);\n            n /= i;\n        }\n    }\n    if\
    \ (n > 1) {\n        res.push_back(n);\n    }\n    return res;", "    std::vector<long>\
    \ factors;\n    long d = 2;\n    while (n > 1) {\n        while (n % d == 0) {\n\
    \            factors.push_back(d);\n            n /= d;\n        }\n        d\
    \ = d + 1;\n        if (d * d > n) {\n            if (n > 1) factors.push_back(n);\n\
    \            break;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> res;\n    for (long i = 2; i * i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            res.push_back(i);\n   \
    \         n /= i;\n        }\n    }\n    if (n > 1) {\n        res.push_back(n);\n\
    \    }\n    return res;", "    std::vector<long> factors;\n    for (long i = 2;\
    \ i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> result;\n    for (long i\
    \ = 2; i <= n; ++i) {\n        while (n % i == 0) {\n            result.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n\
    \            res.push_back(i);\n            n /= i;\n        }\n    }\n    if\
    \ (n > 1) {\n        res.push_back(n);\n    }\n    return res;", "    assert(n\
    \ > 0);\n    std::vector<long> factors;\n    for (long i = 2; i * i <= n; i++)\
    \ {\n        while (n % i == 0) {\n            factors.push_back(i);\n       \
    \     n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ res;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n\
    \            res.push_back(i);\n            n /= i;\n        }\n    }\n    if\
    \ (n > 1) {\n        res.push_back(n);\n    }\n    return res;", "    std::vector<long>\
    \ factors;\n    if (n == 1) {\n        factors.push_back(1);\n        return factors;\n\
    \    }\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n  \
    \          factors.push_back(i);\n            n /= i;\n        }\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    for (long divisor = 2; divisor\
    \ <= n; divisor++) {\n        while (n % divisor == 0) {\n            factors.push_back(divisor);\n\
    \            n /= divisor;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ res;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n\
    \            res.push_back(i);\n            n /= i;\n        }\n    }\n    if\
    \ (n > 1) {\n        res.push_back(n);\n    }\n    return res;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0)\
    \ {\n            factors.push_back(i);\n            n /= i;\n        }\n    }\n\
    \    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (n > 1) {\n        if\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     } else {\n            i++;\n        }\n    }\n    return factors;", "  \
    \  std::vector<long> factors;\n    for (long i = 2; i * i <= n; i++) {\n     \
    \   while (n % i == 0) {\n            factors.push_back(i);\n            n /=\
    \ i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    for\
    \ (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ res;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n\
    \            res.push_back(i);\n            n /= i;\n        }\n    }\n    if\
    \ (n > 1)\n        res.push_back(n);\n    return res;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> res;\n    for (long i = 2; i * i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            res.push_back(i);\n            n /= i;\n       \
    \ }\n    }\n    if (n > 1) {\n        res.push_back(n);\n    }\n    return res;",
  "    std::vector<long> result;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            result.push_back(i);\n            n /= i;\n    \
    \    }\n    }\n    return result;", "    std::vector<long> factors;\n    for (long\
    \ i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "\tstd::vector<long>\
    \ factors;\n\tfor (long i = 2; i <= n; i++) {\n\t\twhile (n % i == 0) {\n\t\t\t\
    factors.push_back(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ result;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0)\
    \ {\n            result.push_back(i);\n            n /= i;\n        }\n    }\n\
    \    if (n > 1) {\n        result.push_back(n);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    for (long i = 2; i * i <= n; i++) {\n     \
    \   while (n % i == 0) {\n            result.push_back(i);\n            n /= i;\n\
    \        }\n    }\n    if (n > 1) {\n        result.push_back(n);\n    }\n   \
    \ return result;", "    std::vector<long> factors;\n    while (n % 2 == 0) {\n\
    \        factors.push_back(2);\n        n = n / 2;\n    }\n    for (long i = 3;\
    \ i <= sqrt(n); i = i + 2) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n = n / i;\n        }\n    }\n    if (n > 2)\n        factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    for (long i = 2; i\
    \ <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    assert(n > 0);\n    std::vector<long>\
    \ result;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0)\
    \ {\n            result.push_back(i);\n            n /= i;\n        }\n    }\n\
    \    if (n > 1) {\n        result.push_back(n);\n    }\n    return result;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    for\
    \ (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ res;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n\
    \            res.push_back(i);\n            n /= i;\n        }\n    }\n    if\
    \ (n > 1) {\n        res.push_back(n);\n    }\n    return res;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long divisor = 2;\n    while (n > 1) {\n \
    \       while (n % divisor == 0) {\n            factors.push_back(divisor);\n\
    \            n /= divisor;\n        }\n        divisor++;\n    }\n    return factors;",
  "    std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    for\
    \ (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i *\
    \ i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1)\n        factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> result;\n    for (long i = 2; i\
    \ * i <= n; i++) {\n        while (n % i == 0) {\n            result.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        result.push_back(n);\n\
    \    }\n    return result;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    assert(n > 0);\n    std::vector<long> factors;\n\
    \    for (long d = 2; d * d <= n; d++) {\n        while (n % d == 0) {\n     \
    \       factors.push_back(d);\n            n /= d;\n        }\n    }\n    if (n\
    \ > 1) {\n        factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    if (n == 1) {\n        factors.push_back(1);\n        return factors;\n\
    \    }\n    while (n % 2 == 0) {\n        factors.push_back(2);\n        n /=\
    \ 2;\n    }\n    for (long i = 3; i <= sqrt(n); i += 2) {\n        while (n %\
    \ i == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \    }\n    if (n > 2) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    if (n == 1) {\n        factors.push_back(1);\n\
    \        return factors;\n    }\n    long i = 2;\n    while (n > 1) {\n      \
    \  while (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n\
    \        }\n        i++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0)\
    \ {\n            factors.push_back(i);\n            n /= i;\n        }\n    }\n\
    \    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    for\
    \ (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ res;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n\
    \            res.push_back(i);\n            n /= i;\n        }\n    }\n    if\
    \ (n > 1) {\n        res.push_back(n);\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n\
    \            res.push_back(i);\n            n /= i;\n        }\n    }\n    if\
    \ (n > 1) {\n        res.push_back(n);\n    }\n    return res;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1)\n        factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    for (long i = 2; i\
    \ <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long d = 2;\n    while (n > 1) {\n        while (n % d == 0) {\n\
    \            factors.push_back(d);\n            n /= d;\n        }\n        d\
    \ += 1;\n    }\n    return factors;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long i = 2;\n    while (n > 1) {\n       \
    \ while (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n\
    \        }\n        i++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    long d = 2;\n    while\
    \ (n > 1) {\n        while (n % d == 0) {\n            factors.push_back(d);\n\
    \            n /= d;\n        }\n        d = d + 1;\n        if (d * d > n) {\n\
    \            if (n > 1) {\n                factors.push_back(n);\n           \
    \ }\n            break;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0)\
    \ {\n            factors.push_back(i);\n            n /= i;\n        }\n    }\n\
    \    if (n > 1)\n        factors.push_back(n);\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ res;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n\
    \            res.push_back(i);\n            n /= i;\n        }\n    }\n    if\
    \ (n > 1) {\n        res.push_back(n);\n    }\n    return res;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i * i <= n; i++) {\n        while (n % i == 0)\
    \ {\n            factors.push_back(i);\n            n /= i;\n        }\n    }\n\
    \    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    for (long d = 2; d * d <= n; d++) {\n     \
    \   while (n % d == 0) {\n            factors.push_back(d);\n            n /=\
    \ d;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    return factors;", "    std::vector<long> factors;\n    for\
    \ (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long divisor = 2;\n    while (n > 1) {\n        while (n % divisor\
    \ == 0) {\n            factors.push_back(divisor);\n            n /= divisor;\n\
    \        }\n        divisor += 1;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;", "    std::vector<long> result;\n    for (long i = 2; i *\
    \ i <= n; i++) {\n        while (n % i == 0) {\n            result.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        result.push_back(n);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    for (long i = 2;\
    \ i * i <= n; i++) {\n        while (n % i == 0) {\n            res.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        res.push_back(n);\n\
    \    }\n    return res;", "    std::vector<long> factors;\n    for (long i = 2;\
    \ i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    assert(n >\
    \ 0);\n    std::vector<long> factors;\n    for (long i = 2; i * i <= n; i++) {\n\
    \        while (n % i == 0) {\n            factors.push_back(i);\n           \
    \ n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  return factors;"]
stop_tokens:
- "\n}"

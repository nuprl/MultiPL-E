language: cpp
name: HumanEval_22_filter_integers
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpx2a9clvf: /tmp/tmpx2a9clvf.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpje0_tr1p: /tmp/tmpje0_tr1p.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpx2a9clvf: /tmp/tmpx2a9clvf.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto &i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvhy9zfw5: /tmp/tmpvhy9zfw5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto v : values) {\n        if (v.type() == typeid(long)) {\n\
    \            ret.push_back(std::any_cast<long>(v));\n        }\n    }\n    return\
    \ ret;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpbrgw7vzf: /tmp/tmpbrgw7vzf.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // pass\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpu5hkayv6: /tmp/tmpu5hkayv6.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp4af1k7sh: /tmp/tmp4af1k7sh.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto &val : values) {\n        try {\n            res.push_back(std::any_cast<long>(val));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp166gxkpc: /tmp/tmp166gxkpc.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto &i : values) {\n        if (i.type() == typeid(long)) {\n\
    \            ret.push_back(std::any_cast<long>(i));\n        }\n    }\n    return\
    \ ret;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmppzx6wzcj: /tmp/tmppzx6wzcj.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp4whxuv2s: /tmp/tmp4whxuv2s.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwof0f356: /tmp/tmpwof0f356.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto &i : values) {\n        try {\n            ret.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpkvn1w1e6: /tmp/tmpkvn1w1e6.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwof0f356: /tmp/tmpwof0f356.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp9c3rsps1: /tmp/tmp9c3rsps1.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto& v : values) {\n        try {\n            res.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpka97b_44: /tmp/tmpka97b_44.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpplzncgrt: /tmp/tmpplzncgrt.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // pass\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpu5hkayv6: /tmp/tmpu5hkayv6.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp4whxuv2s: /tmp/tmp4whxuv2s.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7yn2mtb: /tmp/tmps7yn2mtb.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwof0f356: /tmp/tmpwof0f356.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp4whxuv2s: /tmp/tmp4whxuv2s.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  for (auto value : values) {\n    try {\n      result.push_back(std::any_cast<long>(value));\n\
    \    } catch (std::bad_any_cast& e) {\n      continue;\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpcg_q_c15: /tmp/tmpcg_q_c15.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpisss3wph: /tmp/tmpisss3wph.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpje0_tr1p: /tmp/tmpje0_tr1p.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpdxsi_rq9: /tmp/tmpdxsi_rq9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7yn2mtb: /tmp/tmps7yn2mtb.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpx2a9clvf: /tmp/tmpx2a9clvf.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ut6xpvj: /tmp/tmp2ut6xpvj.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp1jl3f44r: /tmp/tmp1jl3f44r.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7yn2mtb: /tmp/tmps7yn2mtb.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp1jl3f44r: /tmp/tmp1jl3f44r.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpjoll8n6a: /tmp/tmpjoll8n6a.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto &i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvhy9zfw5: /tmp/tmpvhy9zfw5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwgshw47y: /tmp/tmpwgshw47y.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphij0mmwj: /tmp/tmphij0mmwj.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto &i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvhy9zfw5: /tmp/tmpvhy9zfw5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto const& value : values) {\n        try {\n           \
    \ result.push_back(std::any_cast<long>(value));\n        } catch (std::bad_any_cast\
    \ const&) {\n            // ignore\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpqkjl62da: /tmp/tmpqkjl62da.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpje0_tr1p: /tmp/tmpje0_tr1p.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpdxsi_rq9: /tmp/tmpdxsi_rq9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast& e) {\n            continue;\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpsw61bsy3: /tmp/tmpsw61bsy3.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (const std::bad_any_cast &e) {\n            continue;\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp_hm1oq1c: /tmp/tmp_hm1oq1c.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphij0mmwj: /tmp/tmphij0mmwj.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // Do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpfq219o4t: /tmp/tmpfq219o4t.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        if (v.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphh7kbana: /tmp/tmphh7kbana.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp0yusqfsf: /tmp/tmp0yusqfsf.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ut6xpvj: /tmp/tmp2ut6xpvj.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpje0_tr1p: /tmp/tmpje0_tr1p.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast) {\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmptcx6k9qm: /tmp/tmptcx6k9qm.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzqewv88o: /tmp/tmpzqewv88o.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n     \
    \   try {\n            res.push_back(std::any_cast<long>(*it));\n        } catch\
    \ (std::bad_any_cast& e) {\n            continue;\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp5mrigidw: /tmp/tmp5mrigidw.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto i : values) {\n        if (i.type() == typeid(long)) {\n\
    \            res.push_back(std::any_cast<long>(i));\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpfrnc4pbb: /tmp/tmpfrnc4pbb.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpd2xwhfio: /tmp/tmpd2xwhfio.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n     \
    \   try {\n            res.push_back(std::any_cast<long>(*it));\n        } catch\
    \ (std::bad_any_cast& e) {\n            continue;\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp5mrigidw: /tmp/tmp5mrigidw.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzqewv88o: /tmp/tmpzqewv88o.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto& v : values) {\n        try {\n            res.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpka97b_44: /tmp/tmpka97b_44.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp1jl3f44r: /tmp/tmp1jl3f44r.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7yn2mtb: /tmp/tmps7yn2mtb.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n     \
    \   try {\n            res.push_back(std::any_cast<long>(*it));\n        } catch\
    \ (std::bad_any_cast &e) {\n            continue;\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp2pjt5660: /tmp/tmp2pjt5660.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp9c3rsps1: /tmp/tmp9c3rsps1.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwof0f356: /tmp/tmpwof0f356.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // ignore\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpo9l5mxou: /tmp/tmpo9l5mxou.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwof0f356: /tmp/tmpwof0f356.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast &e) {\n            continue;\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp6sgbsp5s: /tmp/tmp6sgbsp5s.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzqewv88o: /tmp/tmpzqewv88o.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpplzncgrt: /tmp/tmpplzncgrt.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpby_w0f3t: /tmp/tmpby_w0f3t.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp4whxuv2s: /tmp/tmp4whxuv2s.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphmimq0so: /tmp/tmphmimq0so.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto& val : values) {\n        try {\n            res.push_back(std::any_cast<long>(val));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpj37ts1xk: /tmp/tmpj37ts1xk.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp9c3rsps1: /tmp/tmp9c3rsps1.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto i : values) {\n        try {\n            ret.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpsfhcsm88: /tmp/tmpsfhcsm88.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108108
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphij0mmwj: /tmp/tmphij0mmwj.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto& v : values) {\n        try {\n            ret.push_back(std::any_cast<long>(v));\n\
    \        } catch (const std::bad_any_cast& e) {\n            continue;\n     \
    \   }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpfivhnjzd: /tmp/tmpfivhnjzd.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp86uemmf9: /tmp/tmp86uemmf9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n     \
    \   try {\n            res.push_back(std::any_cast<long>(*it));\n        } catch\
    \ (std::bad_any_cast& e) {\n            continue;\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp5mrigidw: /tmp/tmp5mrigidw.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (const std::bad_any_cast &) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp48febvzj: /tmp/tmp48febvzj.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108110
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7yn2mtb: /tmp/tmps7yn2mtb.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto &x : values) {\n        try {\n            res.push_back(std::any_cast<long>(x));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp4v7etmr0: /tmp/tmp4v7etmr0.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108110
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ut6xpvj: /tmp/tmp2ut6xpvj.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7yn2mtb: /tmp/tmps7yn2mtb.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto value : values) {\n        try {\n            ret.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpa3jmldn5: /tmp/tmpa3jmldn5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108110
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp1jl3f44r: /tmp/tmp1jl3f44r.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto &v : values) {\n        try {\n            ret.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            // do nothing\n       \
    \ }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmppc7i1c7c: /tmp/tmppc7i1c7c.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp127bpcjw: /tmp/tmp127bpcjw.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto& v : values) {\n        try {\n            res.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpka97b_44: /tmp/tmpka97b_44.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpplzncgrt: /tmp/tmpplzncgrt.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpby_w0f3t: /tmp/tmpby_w0f3t.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto& v : values) {\n        try {\n            res.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpuckkm9vl: /tmp/tmpuckkm9vl.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpby_w0f3t: /tmp/tmpby_w0f3t.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto & value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast & e) {\n            // ignore\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp_mzhd6zu: /tmp/tmp_mzhd6zu.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp1jl3f44r: /tmp/tmp1jl3f44r.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp4whxuv2s: /tmp/tmp4whxuv2s.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto v : values) {\n        if (v.type() == typeid(long)) {\n\
    \            res.push_back(std::any_cast<long>(v));\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpxpq69sew: /tmp/tmpxpq69sew.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpjoll8n6a: /tmp/tmpjoll8n6a.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzqewv88o: /tmp/tmpzqewv88o.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n     \
    \   try {\n            res.push_back(std::any_cast<long>(*it));\n        } catch\
    \ (std::bad_any_cast&) {\n            continue;\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpfzbf19hn: /tmp/tmpfzbf19hn.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        if (v.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpw1xevqq8: /tmp/tmpw1xevqq8.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ans;\n    for(auto i:values){\n        try{\n            ans.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(...){\n            continue;\n        }\n    }\n   \
    \ return ans;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp2dr003tw: /tmp/tmp2dr003tw.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast& e) {\n            continue;\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpsw61bsy3: /tmp/tmpsw61bsy3.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        if (v.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpw1xevqq8: /tmp/tmpw1xevqq8.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto &v : values) {\n        try {\n            ret.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp38s57n4w: /tmp/tmp38s57n4w.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108110
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzqewv88o: /tmp/tmpzqewv88o.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto& v : values) {\n        try {\n            res.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpuckkm9vl: /tmp/tmpuckkm9vl.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto i : values) {\n        try {\n            ret.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpi38vofqe: /tmp/tmpi38vofqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7yn2mtb: /tmp/tmps7yn2mtb.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpdxsi_rq9: /tmp/tmpdxsi_rq9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto v : values) {\n        try {\n            ret.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvm2iz6ff: /tmp/tmpvm2iz6ff.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7yn2mtb: /tmp/tmps7yn2mtb.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzqewv88o: /tmp/tmpzqewv88o.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  for (auto value : values) {\n    try {\n      result.push_back(std::any_cast<long>(value));\n\
    \    } catch (std::bad_any_cast& e) {\n      // do nothing\n    }\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpq7yfq_y1: /tmp/tmpq7yfq_y1.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphij0mmwj: /tmp/tmphij0mmwj.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n     \
    \   try {\n            ret.push_back(std::any_cast<long>(*it));\n        } catch\
    \ (const std::bad_any_cast& e) {\n            continue;\n        }\n    }\n  \
    \  return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpa3yerv1x: /tmp/tmpa3yerv1x.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        if (v.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphh7kbana: /tmp/tmphh7kbana.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp86uemmf9: /tmp/tmp86uemmf9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &x : values) {\n        try {\n            result.push_back(std::any_cast<long>(x));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpheu3mwwt: /tmp/tmpheu3mwwt.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto& v : values) {\n        try {\n            res.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpuckkm9vl: /tmp/tmpuckkm9vl.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto i : values) {\n        if (i.type() == typeid(long)) {\n\
    \            res.push_back(std::any_cast<long>(i));\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpfrnc4pbb: /tmp/tmpfrnc4pbb.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast &) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpiu0yczc4: /tmp/tmpiu0yczc4.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7yn2mtb: /tmp/tmps7yn2mtb.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwgshw47y: /tmp/tmpwgshw47y.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            // Do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpupg2giuo: /tmp/tmpupg2giuo.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto v : values) {\n        try {\n            res.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpx1hlenp9: /tmp/tmpx1hlenp9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpby_w0f3t: /tmp/tmpby_w0f3t.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphmimq0so: /tmp/tmphmimq0so.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphij0mmwj: /tmp/tmphij0mmwj.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast &e) {\n            continue;\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp6sgbsp5s: /tmp/tmp6sgbsp5s.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto &v : values) {\n        try {\n            ret.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            // do nothing\n       \
    \ }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmppc7i1c7c: /tmp/tmppc7i1c7c.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp9c3rsps1: /tmp/tmp9c3rsps1.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto &i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvhy9zfw5: /tmp/tmpvhy9zfw5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmps7yn2mtb: /tmp/tmps7yn2mtb.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast& e) {\n            continue;\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpirwkl31c: /tmp/tmpirwkl31c.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto val : values) {\n        if (val.type() == typeid(long))\
    \ {\n            res.push_back(std::any_cast<long>(val));\n        }\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpqu0hg2mb: /tmp/tmpqu0hg2mb.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108110
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto &i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvhy9zfw5: /tmp/tmpvhy9zfw5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto& v : values) {\n        try {\n            ret.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            // do nothing\n       \
    \ }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpve6060vl: /tmp/tmpve6060vl.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpje0_tr1p: /tmp/tmpje0_tr1p.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzqewv88o: /tmp/tmpzqewv88o.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n  \
    \      try {\n            result.push_back(std::any_cast<long>(*it));\n      \
    \  } catch (std::bad_any_cast &e) {\n            continue;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yy3fajj: /tmp/tmp2yy3fajj.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2yer1qqe: /tmp/tmp2yer1qqe.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzqewv88o: /tmp/tmpzqewv88o.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzqewv88o: /tmp/tmpzqewv88o.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ec8wb6k: /tmp/tmp2ec8wb6k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto &val : values) {\n        try {\n            ret.push_back(std::any_cast<long>(val));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpa_q7p8r3: /tmp/tmpa_q7p8r3.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ut6xpvj: /tmp/tmp2ut6xpvj.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (std::any value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpb67sd_8j: /tmp/tmpb67sd_8j.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111

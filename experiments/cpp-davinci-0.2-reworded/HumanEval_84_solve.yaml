name: HumanEval_84_solve
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
  \ N, return the total sum of its digits in binary.\n// Example\n// >>> solve((1000))\n\
  // (\"1\")\n// >>> solve((150))\n// (\"110\")\n// >>> solve((147))\n// (\"1100\"\
  )\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n\
  // a string of binary number\nstd::string solve(long N) {\n"
tests: "}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
  \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
  \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
  \ == (\"10010\"));\n}\n"
completions: ["    std::string s = \"\";\n    while(N > 0) {\n        s += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n    std::string\
    \ s = ss.str();\n    std::string result = \"\";\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == '1') {\n            result += s[i];\n        }\n\
    \    }\n    return result;", "    std::string result;\n    while (N > 0) {\n \
    \       result += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string result;\n    while (N\
    \ > 0) {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n\
    \    }\n    return result;", "    std::stringstream ss;\n    while (N > 0) {\n\
    \        ss << N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n\
    \    std::reverse(s.begin(), s.end());\n    return s;", "    std::string binary\
    \ = \"\";\n    while (N > 0) {\n        binary = std::to_string(N % 2) + binary;\n\
    \        N /= 2;\n    }\n    return binary;", "    std::stringstream ss;\n   \
    \ ss << std::bitset<32>(N);\n    std::string s = ss.str();\n    int i = 0;\n \
    \   while(s[i] == '0') {\n        i++;\n    }\n    return s.substr(i);", "   \
    \ std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n        N\
    \ /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    std::string result;\n    while (N > 0) {\n        result\
    \ += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string binary = \"\";\n    while\
    \ (N > 0) {\n        binary = std::to_string(N % 2) + binary;\n        N /= 2;\n\
    \    }\n    return binary;", "    std::stringstream ss;\n    while (N > 0) {\n\
    \        ss << N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n\
    \    std::reverse(s.begin(), s.end());\n    return s;", "  std::stringstream ss;\n\
    \  while (N > 0) {\n    ss << N % 2;\n    N /= 2;\n  }\n  std::string s = ss.str();\n\
    \  std::reverse(s.begin(), s.end());\n  return s;", "    std::string result;\n\
    \    while (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;",
  "    std::string res = \"\";\n    while(N > 0) {\n        res = std::to_string(N\
    \ % 2) + res;\n        N /= 2;\n    }\n    return res;", "    std::stringstream\
    \ ss;\n    while (N) {\n        ss << N % 2;\n        N /= 2;\n    }\n    std::string\
    \ s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::stringstream\
    \ ss;\n    std::string s;\n    ss << std::bitset<32>(N);\n    ss >> s;\n    int\
    \ i = 0;\n    while(s[i] == '0') {\n        i++;\n    }\n    return s.substr(i);",
  "    std::string binary = \"\";\n    while (N > 0) {\n        binary = std::to_string(N\
    \ % 2) + binary;\n        N /= 2;\n    }\n    return binary;", "    std::string\
    \ result;\n    while (N) {\n        result += (N & 1) ? '1' : '0';\n        N\
    \ >>= 1;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;",
  "    std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n        N\
    \ /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n \
    \   return ss.str();", "    std::string binary = \"\";\n    while (N > 0) {\n\
    \        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string result;\n    while (N\
    \ > 0) {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n\
    \    }\n    return result;", "    std::stringstream ss;\n    while (N > 0) {\n\
    \        ss << N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n\
    \    std::reverse(s.begin(), s.end());\n    return s;", "    std::stringstream\
    \ ss;\n    ss << std::bitset<32>(N);\n    std::string s = ss.str();\n    std::string\
    \ result;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == '1')\
    \ {\n            result += s[i];\n        }\n    }\n    return result;", "   \
    \ std::string s = \"\";\n    while(N > 0) {\n        s += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;",
  "    std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n        N\
    \ /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    std::string binary = \"\";\n    int rem, i = 1, sum = 0;\n\
    \    while (N != 0) {\n        rem = N % 2;\n        N /= 2;\n        binary +=\
    \ std::to_string(rem);\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    std::stringstream ss;\n    while (N > 0) {\n      \
    \  ss << N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string binary = \"\";\n    while (N > 0)\
    \ {\n        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string result;\n    while (N\
    \ > 0) {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n\
    \    }\n    return result;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string str = ss.str();\n    return str;", "    std::string result;\n\
    \    while (N) {\n        result.push_back(N % 2 + '0');\n        N /= 2;\n  \
    \  }\n    std::reverse(result.begin(), result.end());\n    return result;", " \
    \   std::string binary = \"\";\n    while (N > 0) {\n        binary = std::to_string(N\
    \ % 2) + binary;\n        N /= 2;\n    }\n    return binary;", "    std::stringstream\
    \ ss;\n    while (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n   \
    \ std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    std::string result;\n    while (N > 0) {\n        result += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string s = \"\";\n    while(N > 0) {\n       \
    \ s += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string binary = \"\";\n    while (N > 0)\
    \ {\n        binary = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n\
    \    return binary;", "    // your code here\n    std::string binary = \"\";\n\
    \    while(N>0){\n        binary += std::to_string(N%2);\n        N /= 2;\n  \
    \  }\n    std::reverse(binary.begin(), binary.end());\n    return binary;", " \
    \   std::string s = \"\";\n    while(N>0){\n        s += std::to_string(N%2);\n\
    \        N /= 2;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;",
  "    // your code here\n    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    std::string ans;\n    for(int i = 0; i < s.size();\
    \ i++){\n        if(s[i] == '1'){\n            ans += s[i];\n        }\n    }\n\
    \    return ans;", "    std::string binary = \"\";\n    while (N > 0) {\n    \
    \    binary = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n    return\
    \ binary;", "    std::string result;\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ result;\n    while (N > 0) {\n        result += std::to_string(N % 2);\n   \
    \     N /= 2;\n    }\n    std::reverse(result.begin(), result.end());\n    return\
    \ result;", "    std::stringstream ss;\n    while (N > 0) {\n        ss << N %\
    \ 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string result;\n    while (N > 0) {\n \
    \       result = (N % 2 == 0 ? \"0\" : \"1\") + result;\n        N /= 2;\n   \
    \ }\n    return result;", "    std::string result;\n    while (N > 0) {\n    \
    \    result += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string result;\n    while (N\
    \ > 0) {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n\
    \    }\n    return result;", "    // your code here\n    std::string s;\n    while(N>0){\n\
    \        s.push_back(N%2+'0');\n        N/=2;\n    }\n    std::reverse(s.begin(),s.end());\n\
    \    return s;", "    std::string s;\n    while(N>0){\n        s.push_back(N%2+'0');\n\
    \        N/=2;\n    }\n    std::reverse(s.begin(),s.end());\n    return s;", " \
    \   std::string result;\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    std::stringstream\
    \ ss;\n    ss << std::bitset<32>(N);\n    std::string s = ss.str();\n    std::string\
    \ result = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == '1') {\n            result += s[i];\n        }\n    }\n    return result;",
  "    std::string binary = \"\";\n    while (N > 0) {\n        binary += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    std::stringstream ss;\n    while (N > 0) {\n      \
    \  ss << N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    return s;", "    std::stringstream ss;\n \
    \   ss << std::bitset<32>(N);\n    std::string s = ss.str();\n    std::string\
    \ result = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == '1') {\n            result += s[i];\n        }\n    }\n    return result;",
  "    // your code here\n    std::string binary = \"\";\n    std::string result =\
    \ \"\";\n    int sum = 0;\n    while(N > 0)\n    {\n        binary += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    for(int i = 0; i < binary.length(); i++)\n\
    \    {\n        sum += binary[i] - '0';\n    }\n    while(sum > 0)\n    {\n  \
    \      result += std::to_string(sum % 2);\n        sum /= 2;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    s.erase(0, s.find_first_not_of('0'));\n  \
    \  return s;", "    std::string binary = \"\";\n    while (N > 0) {\n        binary\
    \ += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    int i = 0;\n    while(s[i] == '0'){\n    \
    \    i++;\n    }\n    return s.substr(i);", "    std::string result;\n    while\
    \ (N > 0) {\n        result += (N % 2 == 0 ? '0' : '1');\n        N /= 2;\n  \
    \  }\n    std::reverse(result.begin(), result.end());\n    return result;", " \
    \   std::string result = \"\";\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    std::stringstream\
    \ ss;\n    ss << std::bitset<32>(N);\n    std::string s = ss.str();\n    s.erase(0,\
    \ s.find_first_not_of('0'));\n    return s;", "  std::string result;\n  while\
    \ (N > 0) {\n    result += std::to_string(N % 2);\n    N /= 2;\n  }\n  std::reverse(result.begin(),\
    \ result.end());\n  return result;", "    std::string result = \"\";\n    while\
    \ (N > 0) {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n\
    \    }\n    return result;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    std::string result = \"\";\n    for (int i\
    \ = 0; i < s.length(); i++) {\n        if (s[i] == '1') {\n            result\
    \ += s[i];\n        }\n    }\n    return result;", "    std::string result = \"\
    \";\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n \
    \       N /= 2;\n    }\n    return result;", "    std::string result;\n    while\
    \ (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n    }\n\
    \    std::reverse(result.begin(), result.end());\n    return result;", "    std::string\
    \ binary = \"\";\n    while (N > 0) {\n        binary = std::to_string(N % 2)\
    \ + binary;\n        N /= 2;\n    }\n    return binary;", "    std::string binary\
    \ = \"\";\n    while (N > 0) {\n        binary = std::to_string(N % 2) + binary;\n\
    \        N /= 2;\n    }\n    return binary;", "    std::stringstream ss;\n   \
    \ while (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n    std::string\
    \ s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::stringstream\
    \ ss;\n    ss << std::bitset<32>(N);\n    std::string str = ss.str();\n    return\
    \ str;", "    std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n\
    \        N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    return s;", "    std::stringstream ss;\n \
    \   while (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n    std::string\
    \ s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::stringstream\
    \ ss;\n    ss << std::bitset<32>(N);\n    std::string s = ss.str();\n    int i\
    \ = 0;\n    while(s[i] == '0')\n        i++;\n    return s.substr(i);", "    std::stringstream\
    \ ss;\n    while (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n   \
    \ std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n    std::string\
    \ s = ss.str();\n    std::string s2 = s.substr(s.find(\"1\"));\n    return s2;",
  "    std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n        N\
    \ /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    // your code here\n    std::string s;\n    while(N>0){\n\
    \        s.push_back(N%2+'0');\n        N/=2;\n    }\n    std::reverse(s.begin(),s.end());\n\
    \    return s;", "    // your code here\n    std::string s = \"\";\n    while(N>0){\n\
    \        s = std::to_string(N%2) + s;\n        N/=2;\n    }\n    return s;", " \
    \   std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n       \
    \ N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n \
    \   std::string s = ss.str();\n    std::string result = \"\";\n    for (int i\
    \ = 0; i < s.length(); i++) {\n        if (s[i] == '1') {\n            result\
    \ += \"1\";\n        }\n    }\n    return result;", "\tstd::string result = \"\
    \";\n\twhile (N > 0) {\n\t\tresult = std::to_string(N % 2) + result;\n\t\tN /=\
    \ 2;\n\t}\n\treturn result;", "    std::stringstream ss;\n    while (N > 0) {\n\
    \        ss << N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n\
    \    std::reverse(s.begin(), s.end());\n    return s;", "    std::string binary\
    \ = \"\";\n    while (N > 0) {\n        binary = std::to_string(N % 2) + binary;\n\
    \        N /= 2;\n    }\n    return binary;", "    std::stringstream ss;\n   \
    \ while (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n    std::string\
    \ s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::stringstream\
    \ ss;\n    ss << std::bitset<32>(N);\n    std::string s = ss.str();\n    std::string\
    \ result = s.substr(s.find(\"1\"));\n    return result;", "    std::string result;\n\
    \    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n     \
    \   N /= 2;\n    }\n    return result;", "    std::string result = \"\";\n   \
    \ while (N > 0) {\n        result = std::to_string(N % 2) + result;\n        N\
    \ /= 2;\n    }\n    return result;", "    std::string s = \"\";\n    while(N !=\
    \ 0) {\n        s += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::stringstream ss;\n    while (N > 0) {\n\
    \        ss << N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n\
    \    std::reverse(s.begin(), s.end());\n    return s;", "    std::string result\
    \ = \"\";\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n\
    \        N /= 2;\n    }\n    return result;", "    std::string bin = \"\";\n \
    \   while(N > 0) {\n        bin += std::to_string(N % 2);\n        N /= 2;\n \
    \   }\n    std::reverse(bin.begin(), bin.end());\n    return bin;", "    std::string\
    \ result;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n\
    \        N /= 2;\n    }\n    return result;", "    std::string s = \"\";\n   \
    \ while(N) {\n        s += std::to_string(N%2);\n        N /= 2;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::stringstream ss;\n    while (N > 0) {\n\
    \        ss << N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n\
    \    std::reverse(s.begin(), s.end());\n    return s;", "    std::string result;\n\
    \    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n     \
    \   N /= 2;\n    }\n    return result;", "    std::string result;\n    while (N\
    \ > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n    }\n \
    \   std::reverse(result.begin(), result.end());\n    return result;", "    std::stringstream\
    \ ss;\n    ss << std::bitset<32>(N);\n    std::string s = ss.str();\n    std::string\
    \ result;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == '1')\
    \ {\n            result += s[i];\n        }\n    }\n    return result;", "   \
    \ std::stringstream ss;\n    std::string s;\n    while(N>0){\n        ss<<N%2;\n\
    \        N/=2;\n    }\n    s=ss.str();\n    std::reverse(s.begin(),s.end());\n\
    \    return s;", "    std::stringstream ss;\n    while (N) {\n        ss << N\
    \ % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::stringstream ss;\n    while (N) {\n   \
    \     ss << N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n  \
    \  std::reverse(s.begin(), s.end());\n    return s;", "    std::stringstream ss;\n\
    \    while (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n    std::string\
    \ s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::string\
    \ result;\n    while (N > 0) {\n        result += std::to_string(N % 2);\n   \
    \     N /= 2;\n    }\n    std::reverse(result.begin(), result.end());\n    return\
    \ result;", "    std::string s = \"\";\n    while(N>0){\n        s = std::to_string(N%2)\
    \ + s;\n        N = N/2;\n    }\n    return s;", "    std::stringstream ss;\n\
    \    while (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n    std::string\
    \ s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return s;", "  std::string\
    \ result = \"\";\n  while (N > 0) {\n    result = std::to_string(N % 2) + result;\n\
    \    N /= 2;\n  }\n  return result;", "    std::string result = \"\";\n    while\
    \ (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n    }\n\
    \    std::reverse(result.begin(), result.end());\n    return result;", "    std::stringstream\
    \ ss;\n    while (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n   \
    \ std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    std::string binary = \"\";\n    while (N > 0) {\n        binary =\
    \ std::to_string(N % 2) + binary;\n        N = N / 2;\n    }\n    return binary;",
  "    std::string s = \"\";\n    while(N > 0) {\n        s = std::to_string(N % 2)\
    \ + s;\n        N /= 2;\n    }\n    return s;", "    std::string result;\n   \
    \ while (N > 0) {\n        result = std::to_string(N % 2) + result;\n        N\
    \ /= 2;\n    }\n    return result;", "    std::string result = \"\";\n    while\
    \ (N > 0) {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n\
    \    }\n    return result;", "    std::string s = \"\";\n    while(N > 0) {\n\
    \        s += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string s = \"\";\n    while(N > 0) {\n\
    \        s += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    // your code here\n    std::stringstream ss;\n\
    \    ss << std::bitset<32>(N);\n    std::string s = ss.str();\n    std::string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++){\n        if(s[i] ==\
    \ '1'){\n            result += s[i];\n        }\n    }\n    return result;", " \
    \   std::string binary = \"\";\n    while (N > 0) {\n        binary += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    s.erase(0, s.find_first_not_of('0'));\n  \
    \  return s;", "    std::string binary = \"\";\n    while (N > 0) {\n        binary\
    \ = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n    return binary;",
  "  std::stringstream ss;\n  ss << std::bitset<32>(N);\n  std::string s = ss.str();\n\
    \  std::string result = \"\";\n  for (int i = 0; i < s.length(); i++) {\n    if\
    \ (s[i] == '1') {\n      result += s[i];\n    }\n  }\n  return result;", "   \
    \ std::string s = \"\";\n    while(N > 0) {\n        s += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;",
  "    std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n        N\
    \ /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    std::stringstream ss;\n    while (N > 0) {\n        ss <<\
    \ N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    std::string result = \"\";\n    for (int i\
    \ = 0; i < s.length(); i++) {\n        if (s[i] == '1') {\n            result\
    \ += s[i];\n        }\n    }\n    return result;", "\tstd::string result;\n\t\
    while (N > 0) {\n\t\tresult = std::to_string(N % 2) + result;\n\t\tN /= 2;\n\t\
    }\n\treturn result;", "    std::string result;\n    while (N > 0) {\n        result\
    \ += (N % 2 == 0 ? '0' : '1');\n        N /= 2;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    std::string result;\n    for (int i = 0; i\
    \ < s.length(); i++) {\n        if (s[i] == '1') {\n            result += s[i];\n\
    \        }\n    }\n    return result;", "    std::string binary = \"\";\n    while\
    \ (N > 0) {\n        binary = std::to_string(N % 2) + binary;\n        N /= 2;\n\
    \    }\n    return binary;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    int i = 0;\n    while(s[i] == '0'){\n    \
    \    i++;\n    }\n    return s.substr(i);", "    std::stringstream ss;\n    while\
    \ (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n    std::string s =\
    \ ss.str();\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::string\
    \ result = \"\";\n    while (N > 0) {\n        result = std::to_string(N % 2)\
    \ + result;\n        N /= 2;\n    }\n    return result;", "    std::stringstream\
    \ ss;\n    while (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n   \
    \ std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    std::string result;\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ binary = \"\";\n    while (N > 0) {\n        binary += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;", "    std::string binary = \"\";\n    while (N > 0) {\n    \
    \    binary = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n    return\
    \ binary;", "    std::string binary = \"\";\n    while (N > 0) {\n        binary\
    \ = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n    return binary;",
  "    std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n        N\
    \ /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    std::string result;\n    while (N) {\n        result.push_back('0'\
    \ + (N & 1));\n        N >>= 1;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string result = \"\";\n    while (N > 0) {\n \
    \       result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n   \
    \ return result;", "    std::stringstream ss;\n    while (N > 0) {\n        ss\
    \ << N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string result;\n    while (N > 0) {\n \
    \       result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n   \
    \ return result;", "  // Your code here\n  std::string binary = \"\";\n  while\
    \ (N > 0) {\n    binary = std::to_string(N % 2) + binary;\n    N /= 2;\n  }\n\
    \  return binary;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    s.erase(0, s.find_first_not_of('0'));\n  \
    \  return s;", "    std::string binary = \"\";\n    while (N > 0) {\n        binary\
    \ = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n    return binary;",
  "    std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n        N\
    \ /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    // Write your code here\n    std::stringstream ss;\n   \
    \ while(N)\n    {\n        ss<<N%2;\n        N/=2;\n    }\n    std::string s=ss.str();\n\
    \    std::reverse(s.begin(),s.end());\n    return s;", "    std::string s = \"\
    \";\n    while(N > 0) {\n        s += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::stringstream\
    \ ss;\n    while (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n   \
    \ std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n\
    \        N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::stringstream ss;\n    while (N > 0) {\n\
    \        ss << N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n\
    \    std::reverse(s.begin(), s.end());\n    return s;", "    std::string binary\
    \ = \"\";\n    while (N > 0) {\n        binary = std::to_string(N % 2) + binary;\n\
    \        N /= 2;\n    }\n    return binary;", "    std::string binary = \"\";\n\
    \    while (N > 0) {\n        binary = std::to_string(N % 2) + binary;\n     \
    \   N /= 2;\n    }\n    return binary;", "    std::stringstream ss;\n    ss <<\
    \ std::bitset<32>(N);\n    std::string s = ss.str();\n    int i = 0;\n    while(s[i]\
    \ == '0'){\n        i++;\n    }\n    return s.substr(i);", "    std::stringstream\
    \ ss;\n    while (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n   \
    \ std::string result = ss.str();\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    std::string result = \"\";\n    for (int i\
    \ = 0; i < s.length(); i++) {\n        if (s[i] == '1') {\n            result\
    \ += s[i];\n        }\n    }\n    return result;", "    std::string result = \"\
    \";\n    while (N != 0) {\n        result += std::to_string(N % 2);\n        N\
    \ /= 2;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;",
  "    std::string s = \"\";\n    while(N > 0) {\n        s += std::to_string(N %\
    \ 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "\tstd::string s = \"\";\n\twhile (N > 0) {\n\t\ts += std::to_string(N\
    \ % 2);\n\t\tN /= 2;\n\t}\n\tstd::reverse(s.begin(), s.end());\n\treturn s;",
  "    std::string s = \"\";\n    while(N > 0) {\n        s += std::to_string(N %\
    \ 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n\
    \        N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "  std::string binary = \"\";\n  while (N > 0) {\n\
    \    binary = std::to_string(N % 2) + binary;\n    N /= 2;\n  }\n  return binary;",
  "    std::string s = \"\";\n    while(N>0){\n        s = std::to_string(N%2) + s;\n\
    \        N /= 2;\n    }\n    return s;", "  std::stringstream ss;\n  while (N\
    \ > 0) {\n    ss << N % 2;\n    N /= 2;\n  }\n  std::string s = ss.str();\n  std::reverse(s.begin(),\
    \ s.end());\n  return s;", "    std::string result = \"\";\n    while (N > 0)\
    \ {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n\
    \    return result;", "    std::string binary = \"\";\n    while (N > 0) {\n \
    \       binary = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n   \
    \ return binary;", "    std::string result;\n    while (N) {\n        result +=\
    \ (N % 2) + '0';\n        N /= 2;\n    }\n    reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string s = \"\";\n    while(N != 0) {\n      \
    \  s += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string result;\n    while (N > 0) {\n \
    \       result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n   \
    \ return result;", "    std::string result;\n    while (N > 0) {\n        result\
    \ = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n    return result;",
  "  std::string result = \"\";\n  while (N > 0) {\n    result = std::to_string(N\
    \ % 2) + result;\n    N /= 2;\n  }\n  return result;", "    std::stringstream\
    \ ss;\n    ss << std::bitset<32>(N);\n    std::string s = ss.str();\n    return\
    \ s;", "    std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n\
    \        N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    std::string result;\n    for (int i = 0; i\
    \ < s.length(); i++) {\n        if (s[i] == '1') {\n            result += s[i];\n\
    \        }\n    }\n    return result;", "    std::stringstream ss;\n    while\
    \ (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n    return ss.str();",
  "    std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n        N\
    \ /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    // your code here\n    std::string binary = \"\";\n    while(N\
    \ > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n \
    \   std::reverse(binary.begin(), binary.end());\n    return binary;", "    std::stringstream\
    \ ss;\n    while (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n   \
    \ std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n    std::string\
    \ s = ss.str();\n    s.erase(0, s.find_first_not_of('0'));\n    return s;", " \
    \   std::string s = \"\";\n    while(N > 0) {\n        s = std::to_string(N %\
    \ 2) + s;\n        N /= 2;\n    }\n    return s;", "    std::string result;\n\
    \    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n     \
    \   N /= 2;\n    }\n    return result;", "    std::stringstream ss;\n    while\
    \ (N) {\n        ss << N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n\
    \    std::reverse(s.begin(), s.end());\n    return s;", "    std::stringstream\
    \ ss;\n    while (N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n   \
    \ std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    std::stringstream ss;\n    while (N > 0) {\n        ss << N % 2;\n\
    \        N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string s = \"\";\n    while(N > 0) {\n\
    \        s = std::to_string(N % 2) + s;\n        N /= 2;\n    }\n    return s;",
  "    std::string result;\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ binary = \"\";\n    while (N > 0) {\n        int rem = N % 2;\n        binary\
    \ = std::to_string(rem) + binary;\n        N /= 2;\n    }\n    return binary;",
  "    std::stringstream ss;\n    ss << std::bitset<32>(N);\n    std::string s = ss.str();\n\
    \    int i = 0;\n    while(s[i] == '0') {\n        i++;\n    }\n    return s.substr(i);",
  "    // your code here\n    std::stringstream ss;\n    ss << std::bitset<32>(N);\n\
    \    std::string s = ss.str();\n    std::string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++){\n        if(s[i] == '1'){\n            result +=\
    \ s[i];\n        }\n    }\n    return result;", "    std::string binary = \"\"\
    ;\n    while (N > 0) {\n        binary = std::to_string(N % 2) + binary;\n   \
    \     N /= 2;\n    }\n    return binary;", "    std::string binary = \"\";\n \
    \   while (N > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;",
  "    // Write your code here\n    std::string s = \"\";\n    while(N>0){\n     \
    \   s += std::to_string(N%2);\n        N /= 2;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string s = \"\";\n    while(N > 0) {\n\
    \        s += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string binary = \"\";\n    while (N > 0)\
    \ {\n        binary = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n\
    \    return binary;", "    std::string binary = \"\";\n    while (N > 0) {\n \
    \       binary += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string s = \"\";\n    while(N\
    \ > 0) {\n        s += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string result = \"\";\n    while (N > 0)\
    \ {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n\
    \    return result;", "    std::string binary = \"\";\n    while (N > 0) {\n \
    \       binary = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n   \
    \ return binary;", "    std::stringstream ss;\n    while (N > 0) {\n        ss\
    \ << N % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string result = \"\";\n    while (N > 0)\
    \ {\n        result += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::stringstream ss;\n    std::string\
    \ s;\n    ss << std::bitset<32>(N);\n    ss >> s;\n    s = s.substr(s.find(\"\
    1\"));\n    return s;"]
stop_tokens:
- "\n}"

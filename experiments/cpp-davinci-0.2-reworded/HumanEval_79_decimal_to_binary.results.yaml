language: cpp
name: HumanEval_79_decimal_to_binary
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary.push_back(decimal % 2\
    \ + '0');\n    decimal /= 2;\n  }\n  binary.push_back('d');\n  binary.push_back('b');\n\
    \  std::reverse(binary.begin() + 2, binary.end() - 2);\n  return binary;\n}\n\
    int main() {\n    auto candidate = decimal_to_binary;\n    assert(candidate((0))\
    \ == (\"db0db\"));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn2f80q1s.cpp: In function 'int main()':\n/tmp/tmpn2f80q1s.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn2f80q1s.cpp:2:\n/tmp/tmpn2f80q1s.cpp:26:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary;\n  while (decimal > 0) {\n    binary.push_back((decimal % 2) + '0');\n\
    \    decimal /= 2;\n  }\n  std::reverse(binary.begin(), binary.end());\n  binary.insert(0,\
    \ \"db\");\n  binary.push_back('d');\n  binary.push_back('b');\n  return binary;\n\
    }\nint main() {\n    auto candidate = decimal_to_binary;\n    assert(candidate((0))\
    \ == (\"db0db\"));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5w0kurzs.cpp: In function 'int main()':\n/tmp/tmp5w0kurzs.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5w0kurzs.cpp:2:\n/tmp/tmp5w0kurzs.cpp:27:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary.push_back(decimal % 2\
    \ + '0');\n    decimal /= 2;\n  }\n  binary.push_back('d');\n  binary.push_back('b');\n\
    \  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx8z42egk.cpp: In function 'int main()':\n/tmp/tmpx8z42egk.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpx8z42egk.cpp:2:\n/tmp/tmpx8z42egk.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    if (decimal == 0) {\n        binary += \"0\";\n    }\n\
    \    while (decimal > 0) {\n        binary += std::to_string(decimal % 2);\n \
    \       decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprptynumj.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmprptynumj.cpp:19:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmprptynumj.cpp:\
    \ In function 'int main()':\n/tmp/tmprptynumj.cpp:27:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprptynumj.cpp:2:\n/tmp/tmprptynumj.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiytw5iqp.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpiytw5iqp.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpiytw5iqp.cpp:\
    \ In function 'int main()':\n/tmp/tmpiytw5iqp.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiytw5iqp.cpp:2:\n/tmp/tmpiytw5iqp.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary;\n  while (decimal > 0) {\n    binary = (decimal % 2 == 0 ? \"0\" : \"\
    1\") + binary;\n    decimal /= 2;\n  }\n  return \"db\" + binary + \"db\";\n}\n\
    int main() {\n    auto candidate = decimal_to_binary;\n    assert(candidate((0))\
    \ == (\"db0db\"));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzija4cp0.cpp: In function 'int main()':\n/tmp/tmpzija4cp0.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzija4cp0.cpp:2:\n/tmp/tmpzija4cp0.cpp:23:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary;\n  binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 ==\
    \ 0) {\n      binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n\
    \    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n \
    \ binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeayd14_a.cpp: In function 'int main()':\n/tmp/tmpeayd14_a.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpeayd14_a.cpp:2:\n/tmp/tmpeayd14_a.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    if (decimal == 0) {\n        binary += \"0\";\n    }\n\
    \    while (decimal > 0) {\n        binary += std::to_string(decimal % 2);\n \
    \       decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprptynumj.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmprptynumj.cpp:19:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmprptynumj.cpp:\
    \ In function 'int main()':\n/tmp/tmprptynumj.cpp:27:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprptynumj.cpp:2:\n/tmp/tmprptynumj.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiytw5iqp.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpiytw5iqp.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpiytw5iqp.cpp:\
    \ In function 'int main()':\n/tmp/tmpiytw5iqp.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiytw5iqp.cpp:2:\n/tmp/tmpiytw5iqp.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiytw5iqp.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpiytw5iqp.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpiytw5iqp.cpp:\
    \ In function 'int main()':\n/tmp/tmpiytw5iqp.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiytw5iqp.cpp:2:\n/tmp/tmpiytw5iqp.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal != 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_hr6bnj1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  if (decimal == 0) {\n    binary += \"0\";\n  }\n  while\
    \ (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /=\
    \ 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"db\"\
    ;\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptu6fwrnq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal != 0) {\n        if (decimal % 2 == 0)\
    \ {\n            binary += \"0\";\n        } else {\n            binary += \"\
    1\";\n        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin()\
    \ + 2, binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main()\
    \ {\n    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"\
    db0db\"));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5eyi9spy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    binary += \"db\";\n    std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvqyt52_y.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  if (decimal == 0) {\n    binary += \"0\";\n  }\n  while\
    \ (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /=\
    \ 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"db\"\
    ;\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptu6fwrnq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ result = \"db\";\n  while (decimal > 0) {\n    result += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(result.begin() + 2, result.end());\n\
    \  result += \"db\";\n  return result;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp63zk2nhy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ result = \"db\";\n  while (decimal > 0) {\n    result.push_back(decimal % 2\
    \ + '0');\n    decimal /= 2;\n  }\n  result.push_back('d');\n  result.push_back('b');\n\
    \  std::reverse(result.begin() + 2, result.end() - 2);\n  return result;\n}\n\
    int main() {\n    auto candidate = decimal_to_binary;\n    assert(candidate((0))\
    \ == (\"db0db\"));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp07gixjfk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    if (decimal % 2 == 0) {\n  \
    \    binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2eb1bt4w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal) {\n    binary += (decimal % 2) ? \"1\" :\
    \ \"0\";\n    decimal /= 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin()\
    \ + 2, binary.end() - 2);\n  return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0pxbqxid.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ result = \"db\";\n  while (decimal > 0) {\n    result += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(result.begin() + 2, result.end());\n\
    \  result += \"db\";\n  return result;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp63zk2nhy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiytw5iqp.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpiytw5iqp.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpiytw5iqp.cpp:\
    \ In function 'int main()':\n/tmp/tmpiytw5iqp.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiytw5iqp.cpp:2:\n/tmp/tmpiytw5iqp.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiytw5iqp.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpiytw5iqp.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpiytw5iqp.cpp:\
    \ In function 'int main()':\n/tmp/tmpiytw5iqp.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiytw5iqp.cpp:2:\n/tmp/tmpiytw5iqp.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary;\n    while (decimal) {\n        binary += (decimal % 2) ? '1' : '0';\n\
    \        decimal /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return \"db\" + binary + \"db\";\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8oxx9yv2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiytw5iqp.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpiytw5iqp.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpiytw5iqp.cpp:\
    \ In function 'int main()':\n/tmp/tmpiytw5iqp.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiytw5iqp.cpp:2:\n/tmp/tmpiytw5iqp.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    if (decimal % 2 == 0) {\n  \
    \    binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2eb1bt4w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal != 0) {\n        if (decimal % 2 == 0)\
    \ {\n            binary += \"0\";\n        } else {\n            binary += \"\
    1\";\n        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin()\
    \ + 2, binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main()\
    \ {\n    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"\
    db0db\"));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5eyi9spy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    if (decimal % 2 == 0) {\n  \
    \    binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2eb1bt4w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ result = \"db\";\n    while (decimal > 0) {\n        result += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(result.begin() + 2, result.end());\n\
    \    result += \"db\";\n    return result;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmput1x3l53.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n\tstd::string\
    \ binary = \"db\";\n\twhile (decimal > 0) {\n\t\tif (decimal % 2 == 0) {\n\t\t\
    \tbinary += \"0\";\n\t\t}\n\t\telse {\n\t\t\tbinary += \"1\";\n\t\t}\n\t\tdecimal\
    \ /= 2;\n\t}\n\tstd::reverse(binary.begin() + 2, binary.end());\n\tbinary += \"\
    db\";\n\treturn binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpupde0epd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiytw5iqp.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpiytw5iqp.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpiytw5iqp.cpp:\
    \ In function 'int main()':\n/tmp/tmpiytw5iqp.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiytw5iqp.cpp:2:\n/tmp/tmpiytw5iqp.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary;\n    while (decimal > 0) {\n        binary.push_back(decimal % 2 + '0');\n\
    \        decimal /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return \"db\" + binary + \"db\";\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpmccm4nf1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal != 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_hr6bnj1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal != 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_hr6bnj1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ result = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   result = \"0\" + result;\n    } else {\n      result = \"1\" + result;\n \
    \   }\n    decimal /= 2;\n  }\n  result += \"db\";\n  return result;\n}\nint main()\
    \ {\n    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"\
    db0db\"));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzx1vyokf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary.push_back((decimal\
    \ % 2) + '0');\n        decimal /= 2;\n    }\n    std::reverse(binary.begin()\
    \ + 2, binary.end());\n    binary.push_back('d');\n    binary.push_back('b');\n\
    \    return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcmrnyjzt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659748423
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9trkfdsg.cpp: In function 'int main()':\n/tmp/tmp9trkfdsg.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9trkfdsg.cpp:2:\n/tmp/tmp9trkfdsg.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno3kaps3.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpno3kaps3.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpno3kaps3.cpp:\
    \ In function 'int main()':\n/tmp/tmpno3kaps3.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpno3kaps3.cpp:2:\n/tmp/tmpno3kaps3.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiytw5iqp.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpiytw5iqp.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpiytw5iqp.cpp:\
    \ In function 'int main()':\n/tmp/tmpiytw5iqp.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiytw5iqp.cpp:2:\n/tmp/tmpiytw5iqp.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowyngryy.cpp: In function 'int main()':\n/tmp/tmpowyngryy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpowyngryy.cpp:2:\n/tmp/tmpowyngryy.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr9riad.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp9pr9riad.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmp9pr9riad.cpp:\
    \ In function 'int main()':\n/tmp/tmp9pr9riad.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pr9riad.cpp:2:\n/tmp/tmp9pr9riad.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''

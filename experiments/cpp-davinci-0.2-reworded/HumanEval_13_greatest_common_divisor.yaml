name: HumanEval_13_greatest_common_divisor
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
  \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n//\
  \ (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
  \ a, long b) {\n"
tests: "}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
  \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
  \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
completions: ["    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n  \
    \      return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    assert(a\
    \ >= 0 && b >= 0);\n    if (a == 0) {\n        return b;\n    }\n    if (b ==\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    // TODO:\
    \ implement this function\n    if(a==0)\n        return b;\n    if(b==0)\n   \
    \     return a;\n    if(a==b)\n        return a;\n    if(a>b)\n        return\
    \ greatest_common_divisor(a-b,b);\n    return greatest_common_divisor(a,b-a);",
  "    long t;\n    while (b != 0) {\n        t = b;\n        b = a % b;\n       \
    \ a = t;\n    }\n    return a;", "    long c;\n    while (a != 0) {\n        c\
    \ = a; a = b%a;  b = c;\n    }\n    return b;", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a == b) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);", "    assert(a\
    \ >= 0 && b >= 0);\n    if (a == 0) {\n        return b;\n    }\n    if (b ==\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ < b) {\n        std::swap(a, b);\n    }\n    while (b != 0) {\n        long\
    \ r = a % b;\n        a = b;\n        b = r;\n    }\n    return a;", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  }\n    return greatest_common_divisor(a, b % a);", "    // TODO: implement\
    \ this function\n    // Hint: use Euclidean algorithm\n    // https://en.wikipedia.org/wiki/Euclidean_algorithm\n\
    \    // https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/the-euclidean-algorithm\n\
    \    // https://www.youtube.com/watch?v=JUzYl1TYMcU\n    // https://www.youtube.com/watch?v=ZM4VZR0px8E\n\
    \    // https://www.youtube.com/watch?v=8lHSzT6yKmg\n    // https://www.youtube.com/watch?v=Q9HjeFD62Uk\n\
    \    // https://www.youtube.com/watch?v=HtSuA80QTyo\n    // https://www.youtube.com/watch?v=j0o-pQFk8u8\n\
    \    // https://www.youtube.com/watch?v=VU4KWyblIA4\n    // https://www.youtube.com/watch?v=j0o-pQFk8u8\n\
    \    // https://www.youtube.com/watch?v=VU4KWyblIA4\n    // https://www.youtube.com/watch?v=j0o-pQFk8u8\n\
    \    // https://www.youtube.com/watch?v=VU4KWyblIA4\n    // https://www.youtube.com/watch?v=j0o-pQFk8u8\n\
    \    // https://www.youtube.com/watch?v=VU4KWyblIA4\n    // https://www.youtube.com/watch?v=j0o-pQFk8u8\n\
    \    // https://www.youtube.com/watch?v=VU4KWyblIA4\n    // https://www.youtube.com/watch?v=j0o-pQFk8u8\n\
    \    // https://www.youtube.com/watch?v=VU4KWyblIA4\n    // https://www.youtube.com/watch?v",
  "    // YOUR CODE HERE\n    if(a==0)\n        return b;\n    return greatest_common_divisor(b%a,a);",
  "    long c;\n    while (a != 0) {\n        c = a; a = b%a;  b = c;\n    }\n   \
    \ return b;", "    if (a < b) {\n        long tmp = a;\n        a = b;\n     \
    \   b = tmp;\n    }\n    while (b != 0) {\n        long tmp = a % b;\n       \
    \ a = b;\n        b = tmp;\n    }\n    return a;", "    assert(a >= 0 && b >=\
    \ 0);\n    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n      \
    \  return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    assert(a\
    \ > 0);\n    assert(b > 0);\n    long c = a % b;\n    while (c != 0) {\n     \
    \   a = b;\n        b = c;\n        c = a % b;\n    }\n    return b;", "    if\
    \ (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if (b ==\
    \ 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);",
  "    assert(a > 0 && b > 0);\n    if (a < b) {\n        std::swap(a, b);\n    }\n\
    \    while (b != 0) {\n        long r = a % b;\n        a = b;\n        b = r;\n\
    \    }\n    return a;", "    // TODO: implement this function\n    // Hint: use\
    \ Euclidean algorithm\n    // https://en.wikipedia.org/wiki/Euclidean_algorithm\n\
    \    // https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/the-euclidean-algorithm\n\
    \    // https://www.youtube.com/watch?v=JUzYl1TYMcU\n    // https://www.youtube.com/watch?v=ZM4VZR0px8E\n\
    \    // https://www.youtube.com/watch?v=HtSuA80QTyo\n    // https://www.youtube.com/watch?v=j9YpkSX7uCY\n\
    \    // https://www.youtube.com/watch?v=3qxOV2s8hJE\n    // https://www.youtube.com/watch?v=JUzYl1TYMcU\n\
    \    // https://www.youtube.com/watch?v=ZM4VZR0px8E\n    // https://www.youtube.com/watch?v=HtSuA80QTyo\n\
    \    // https://www.youtube.com/watch?v=j9YpkSX7uCY\n    // https://www.youtube.com/watch?v=3qxOV2s8hJE\n\
    \    // https://www.youtube.com/watch?v=JUzYl1TYMcU\n    // https://www.youtube.com/watch?v=ZM4VZR0px8E\n\
    \    // https://www.youtube.com/watch?v=HtSuA80QTyo\n    // https://www.youtube.com/watch?v=j9YpkSX7uCY\n\
    \    // https://www.youtube.com/watch?v=3qxOV2s8hJE\n    // https://www.youtube.com/watch?v=JUzYl1TYMcU\n\
    \    // https://www.youtube.com/watch?v=ZM4VZR0px8E\n    // https://www.youtube.com/watch?v",
  "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
    \ (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  }\n    return greatest_common_divisor(a, b % a);", "    if (a == 0) {\n   \
    \     return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a % b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b % a);", "    long c;\n    while (a != 0) {\n  \
    \      c = a;\n        a = b % a;\n        b = c;\n    }\n    return b;", "  \
    \  // YOUR CODE HERE\n    if(a==0)\n        return b;\n    if(b==0)\n        return\
    \ a;\n    if(a==b)\n        return a;\n    if(a>b)\n        return greatest_common_divisor(a-b,b);\n\
    \    return greatest_common_divisor(a,b-a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a == b) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);", "    if (a\
    \ == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a > b)\n\
    \        return greatest_common_divisor(a % b, b);\n    else\n        return greatest_common_divisor(a,\
    \ b % a);", "    assert(a >= 0 && b >= 0);\n    if (a == 0 || b == 0) {\n    \
    \    return a + b;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    if (a < b) {\n        return\
    \ greatest_common_divisor(a, b - a);\n    }", "    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n\
    \    if (a > b)\n        return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);", "    assert(a > 0 && b > 0);\n    long\
    \ c;\n    while (a != 0) {\n        c = a; a = b%a;  b = c;\n    }\n    return\
    \ b;", "    // TODO: implement this function\n    long c;\n    while (a != 0)\
    \ {\n        c = a;\n        a = b % a;\n        b = c;\n    }\n    return b;",
  "    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b % a);", "    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    long c;\n    while (a != 0) {\n        c = a;\n        a = b\
    \ % a;\n        b = c;\n    }\n    return b;", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    long c;\n    while (a != 0) {\n        c = a;\n        a = b\
    \ % a;\n        b = c;\n    }\n    return b;", "    long c;\n    while (a != 0)\
    \ {\n        c = a;\n        a = b % a;\n        b = c;\n    }\n    return b;",
  "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    }\n    return greatest_common_divisor(a, b % a);", "    assert(a >= 0 &&\
    \ b >= 0);\n    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n \
    \       return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    assert(a > 0 && b > 0);\n    // YOUR CODE HERE\n    long gcd = 1;\n\
    \    for (long i = 1; i <= a && i <= b; i++) {\n        if (a % i == 0 && b %\
    \ i == 0) {\n            gcd = i;\n        }\n    }\n    return gcd;", "    if\
    \ (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a ==\
    \ b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b % a);", "    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a > b)\n        return greatest_common_divisor(a % b, b);\n    else\n\
    \        return greatest_common_divisor(a, b % a);", "    // TODO: implement me\n\
    \    long gcd = 1;\n    for (long i = 1; i <= a && i <= b; i++) {\n        if\
    \ (a % i == 0 && b % i == 0) {\n            gcd = i;\n        }\n    }\n    return\
    \ gcd;", "    assert(a >= 0 && b >= 0);\n    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    assert(a >= 0 && b >= 0);\n    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    // TODO: implement this function\n    long gcd = 1;\n    long\
    \ min = std::min(a, b);\n    for (long i = 2; i <= min; i++) {\n        if (a\
    \ % i == 0 && b % i == 0) {\n            gcd = i;\n        }\n    }\n    return\
    \ gcd;", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n   \
    \     return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  }\n    return greatest_common_divisor(a, b % a);", "    assert(a > 0);\n  \
    \  assert(b > 0);\n    while (b != 0) {\n        long t = b;\n        b = a %\
    \ b;\n        a = t;\n    }\n    return a;", "    assert(a >= 0 && b >= 0);\n\
    \    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    }\n    return greatest_common_divisor(a, b % a);", "    long c;\n    while\
    \ (a != 0) {\n        c = a;\n        a = b % a;\n        b = c;\n    }\n    return\
    \ b;", "    assert(a >= 0);\n    assert(b >= 0);\n    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  }\n    return greatest_common_divisor(a, b % a);", "    if (a == 0) {\n   \
    \     return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a % b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b % a);", "    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "  if (a == 0) {\n    return b;\n  }\n  if (b == 0) {\n    return\
    \ a;\n  }\n  if (a > b) {\n    return greatest_common_divisor(a % b, b);\n  }\n\
    \  return greatest_common_divisor(a, b % a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a > b)\n        return greatest_common_divisor(a % b, b);\n    return\
    \ greatest_common_divisor(a, b % a);", "    assert(a >= 0 && b >= 0);\n    if\
    \ (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n\
    \    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    }\n    return greatest_common_divisor(a, b % a);", "    if (a == 0) {\n \
    \       return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b % a);", "    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ == 0)\n        return b;\n    return greatest_common_divisor(b % a, a);", " \
    \   assert(a > 0 && b > 0);\n    while (a != b) {\n        if (a > b) {\n    \
    \        a = a - b;\n        } else {\n            b = b - a;\n        }\n   \
    \ }\n    return a;", "    long c;\n    while (a != 0) {\n        c = a;\n    \
    \    a = b % a;\n        b = c;\n    }\n    return b;", "    if (a == 0)\n   \
    \     return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n       \
    \ return a;\n    if (a > b)\n        return greatest_common_divisor(a - b, b);\n\
    \    return greatest_common_divisor(a, b - a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    if (a < b) {\n        std::swap(a, b);\n    }\n    while (b !=\
    \ 0) {\n        long r = a % b;\n        a = b;\n        b = r;\n    }\n    return\
    \ a;", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    assert(a >= 0);\n\
    \    assert(b >= 0);\n    if (a == 0) {\n        return b;\n    }\n    if (b ==\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "  if (a ==\
    \ 0) {\n    return b;\n  }\n  if (b == 0) {\n    return a;\n  }\n  if (a > b)\
    \ {\n    return greatest_common_divisor(a % b, b);\n  }\n  return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    long c;\n   \
    \ while (a != 0) {\n        c = a;\n        a = b % a;\n        b = c;\n    }\n\
    \    return b;", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    assert(a\
    \ >= 0 && b >= 0);\n    if (a == 0) {\n        return b;\n    }\n    if (b ==\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    long c;\n\
    \    while ( a != 0 ) {\n        c = a; a = b%a;  b = c;\n    }\n    return b;",
  "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    }\n    return greatest_common_divisor(a, b % a);", "    if (a == 0) {\n \
    \       return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b % a);", "    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    assert(a\
    \ > 0);\n    assert(b > 0);\n    while (a != b) {\n        if (a > b) {\n    \
    \        a = a - b;\n        } else {\n            b = b - a;\n        }\n   \
    \ }\n    return a;", "\tif (a == 0) {\n\t\treturn b;\n\t}\n\tif (b == 0) {\n\t\
    \treturn a;\n\t}\n\tif (a > b) {\n\t\treturn greatest_common_divisor(a % b, b);\n\
    \t}\n\treturn greatest_common_divisor(a, b % a);", "    if (a == 0 || b == 0)\
    \ {\n        return 0;\n    }\n    if (a == b) {\n        return a;\n    }\n \
    \   if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n \
    \   return greatest_common_divisor(a, b - a);", "    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n\
    \    if (a > b)\n        return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);", "    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    // TODO:\
    \ Implement this function\n    // Hint: Use Euclidean Algorithm\n    if(a<b){\n\
    \        long temp = a;\n        a = b;\n        b = temp;\n    }\n    while(b!=0){\n\
    \        long temp = a%b;\n        a = b;\n        b = temp;\n    }\n    return\
    \ a;", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n     \
    \   return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    long c;\n\
    \    while (a != 0) {\n        c = a;\n        a = b % a;\n        b = c;\n  \
    \  }\n    return b;", "    assert(a >= 0);\n    assert(b >= 0);\n    if (a ==\
    \ 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n    }\n\
    \    return greatest_common_divisor(a, b % a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  }\n    return greatest_common_divisor(a, b % a);", "    if (a < b) {\n    \
    \    return greatest_common_divisor(b, a);\n    }\n    if (b == 0) {\n       \
    \ return a;\n    }\n    return greatest_common_divisor(b, a % b);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  }\n    return greatest_common_divisor(a, b % a);", "    if (a == 0 || b ==\
    \ 0) {\n        return 0;\n    }\n    if (a == b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);", "    assert(a >= 0 && b >= 0);\n\
    \    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    }\n    return greatest_common_divisor(a, b % a);", "    if (a == 0) {\n \
    \       return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b % a);", "    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    }\n    else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  }\n    return greatest_common_divisor(a, b % a);", "    if (a == 0)\n     \
    \   return b;\n    if (b == 0)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a % b, b);\n    else\n        return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if (b == 0)\
    \ {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);",
  "    // TODO: implement this function\n    if(a==0)\n        return b;\n    if(b==0)\n\
    \        return a;\n    if(a==b)\n        return a;\n    if(a>b)\n        return\
    \ greatest_common_divisor(a-b,b);\n    return greatest_common_divisor(a,b-a);",
  "    // TODO: implement this function\n    long gcd = 1;\n    for (long i = 1; i\
    \ <= a && i <= b; i++) {\n        if (a % i == 0 && b % i == 0) {\n          \
    \  gcd = i;\n        }\n    }\n    return gcd;", "    // TODO: Implement me\n\
    \    return 0;", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0)\
    \ {\n        return a;\n    }\n    if (a == b) {\n        return a;\n    }\n \
    \   if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n \
    \   if (a < b) {\n        return greatest_common_divisor(a, b - a);\n    }", " \
    \   assert(a >= 0 && b >= 0);\n    if (a == 0) {\n        return b;\n    }\n \
    \   if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  }\n    return greatest_common_divisor(a, b % a);", "    long c;\n    while\
    \ (a != 0) {\n        c = a;\n        a = b % a;\n        b = c;\n    }\n    return\
    \ b;", "    assert(a >= 0 && b >= 0);\n    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    assert(a\
    \ >= 0 && b >= 0);\n    if (a == 0) {\n        return b;\n    }\n    if (b ==\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    assert(a\
    \ >= 0);\n    assert(b >= 0);\n    while (b != 0) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;", "    long c;\n    while\
    \ (a != 0) {\n        c = a;\n        a = b % a;\n        b = c;\n    }\n    return\
    \ b;", "    assert(a >= 0 && b >= 0);\n    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    assert(a > 0 && b > 0);\n    if (a < b) {\n        std::swap(a,\
    \ b);\n    }\n    while (b != 0) {\n        long r = a % b;\n        a = b;\n\
    \        b = r;\n    }\n    return a;", "    if (a == 0)\n        return b;\n\
    \    if (b == 0)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ % b, b);\n    else\n        return greatest_common_divisor(a, b % a);", "  \
    \  if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    }\n    return greatest_common_divisor(a, b % a);", "    if (a == 0) {\n \
    \       return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b % a);", "    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    // TODO: Implement me\n    if(a==0)\n        return b;\n    if(b==0)\n\
    \        return a;\n    if(a==b)\n        return a;\n    if(a>b)\n        return\
    \ greatest_common_divisor(a-b,b);\n    return greatest_common_divisor(a,b-a);",
  "    assert(a > 0);\n    assert(b > 0);\n    // TODO: implement this function\n\
    \    long gcd = 1;\n    for (long i = 1; i <= a && i <= b; i++) {\n        if\
    \ (a % i == 0 && b % i == 0) {\n            gcd = i;\n        }\n    }\n    return\
    \ gcd;", "    long c;\n    while (a != 0) {\n        c = a; a = b%a;  b = c;\n\
    \    }\n    return b;", "    if (a < b) {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);", "    if (a < b) {\n        std::swap(a, b);\n    }\n    while (b !=\
    \ 0) {\n        long r = a % b;\n        a = b;\n        b = r;\n    }\n    return\
    \ a;", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n     \
    \   return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if(a==0)\n\
    \        return b;\n    if(b==0)\n        return a;\n    if(a==b)\n        return\
    \ a;\n    if(a>b)\n        return greatest_common_divisor(a-b,b);\n    return\
    \ greatest_common_divisor(a,b-a);", "    if (a == 0)\n        return b;\n    if\
    \ (b == 0)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ % b, b);\n    else\n        return greatest_common_divisor(a, b % a);", "  \
    \  long c;\n    while (a != 0) {\n        c = a;\n        a = b % a;\n       \
    \ b = c;\n    }\n    return b;", "    if (a == 0) {\n        return b;\n    }\n\
    \    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    // TODO: implement this function\n    if(a==0)\n    {\n     \
    \   return b;\n    }\n    else if(b==0)\n    {\n        return a;\n    }\n   \
    \ else if(a>b)\n    {\n        return greatest_common_divisor(a%b,b);\n    }\n\
    \    else\n    {\n        return greatest_common_divisor(a,b%a);\n    }", "  \
    \  if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    }\n    return greatest_common_divisor(a, b % a);", "    if (a == 0) {\n \
    \       return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b % a);", "\tif (a < b) {\n\t\tlong tmp = a;\n\t\t\
    a = b;\n\t\tb = tmp;\n\t}\n\twhile (b != 0) {\n\t\tlong tmp = a % b;\n\t\ta =\
    \ b;\n\t\tb = tmp;\n\t}\n\treturn a;", "    if (a < b) {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  }\n    return greatest_common_divisor(a, b % a);", "    if (a == 0) {\n   \
    \     return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a % b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b % a);", "    assert(a > 0 && b > 0);\n    if (a\
    \ < b) {\n        std::swap(a, b);\n    }\n    while (b != 0) {\n        long\
    \ r = a % b;\n        a = b;\n        b = r;\n    }\n    return a;", "    // YOUR\
    \ CODE HERE\n    if(a==0)\n        return b;\n    if(b==0)\n        return a;\n\
    \    if(a==b)\n        return a;\n    if(a>b)\n        return greatest_common_divisor(a-b,b);\n\
    \    return greatest_common_divisor(a,b-a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    // TODO: implement this function\n    if(a==0)\n        return\
    \ b;\n    return greatest_common_divisor(b%a,a);", "    if (a == 0) {\n      \
    \  return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a >\
    \ b) {\n        return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    // TODO: implement this function\n    if(a==0)\n        return\
    \ b;\n    if(b==0)\n        return a;\n    if(a==b)\n        return a;\n    if(a>b)\n\
    \        return greatest_common_divisor(a-b,b);\n    return greatest_common_divisor(a,b-a);",
  "    if (a < b) {\n        long tmp = a;\n        a = b;\n        b = tmp;\n   \
    \ }\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n  \
    \  }\n    return greatest_common_divisor(a, b % a);", "    // TODO: implement\
    \ this function\n    if(a==0)\n        return b;\n    if(b==0)\n        return\
    \ a;\n    if(a==b)\n        return a;\n    if(a>b)\n        return greatest_common_divisor(a-b,b);\n\
    \    return greatest_common_divisor(a,b-a);", "    if (a == 0) {\n        return\
    \ b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    long c;\n    while (a != 0) {\n        c = a;\n        a = b\
    \ % a;\n        b = c;\n    }\n    return b;", "    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n\
    \    if (a > b)\n        return greatest_common_divisor(a - b, b);\n    return\
    \ greatest_common_divisor(a, b - a);", "    // TODO: implement this function\n\
    \    long c;\n    while (a != 0) {\n        c = a;\n        a = b % a;\n     \
    \   b = c;\n    }\n    return b;", "    // YOUR CODE HERE\n    if(a==0)\n    \
    \    return b;\n    if(b==0)\n        return a;\n    if(a==b)\n        return\
    \ a;\n    if(a>b)\n        return greatest_common_divisor(a-b,b);\n    return\
    \ greatest_common_divisor(a,b-a);", "    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    while (b != 0) {\n        long tmp\
    \ = a % b;\n        a = b;\n        b = tmp;\n    }\n    return a;", "    assert(a\
    \ > 0);\n    assert(b > 0);\n    long c;\n    while ( a != 0 ) {\n        c =\
    \ a; a = b%a;  b = c;\n    }\n    return b;", "    assert(a >= 0);\n    assert(b\
    \ >= 0);\n    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n   \
    \     return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "\tif (a ==\
    \ 0)\n\t\treturn b;\n\tif (b == 0)\n\t\treturn a;\n\tif (a > b)\n\t\treturn greatest_common_divisor(a\
    \ % b, b);\n\telse\n\t\treturn greatest_common_divisor(a, b % a);", "    assert(a\
    \ >= 0);\n    assert(b >= 0);\n    if (a == 0) return b;\n    if (b == 0) return\
    \ a;\n    if (a > b) return greatest_common_divisor(a % b, b);\n    else return\
    \ greatest_common_divisor(a, b % a);", "    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "    long c;\n    while (a != 0) {\n        c = a;\n        a = b\
    \ % a;\n        b = c;\n    }\n    return b;", "    // TODO: implement this function\n\
    \    if(a == 0)\n        return b;\n    return greatest_common_divisor(b%a, a);",
  "    if(a == 0)\n        return b;\n    if(b == 0)\n        return a;\n    if(a\
    \ == b)\n        return a;\n    if(a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);", "    assert(a >= 0 && b >=\
    \ 0);\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a % b, b);\n    else return greatest_common_divisor(a,\
    \ b % a);", "    if (a < b) {\n        return greatest_common_divisor(b, a);\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);", "    assert(a >= 0);\n    assert(b >= 0);\n    if (a == 0) {\n   \
    \     return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a % b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b % a);", "    if (a == 0) {\n        return b;\n\
    \    }\n    if (b == 0) {\n        return a;\n    }\n    if (a > b) {\n      \
    \  return greatest_common_divisor(a % b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b % a);", "  if (a == 0) {\n    return b;\n  }\n  if (b == 0) {\n    return\
    \ a;\n  }\n  if (a > b) {\n    return greatest_common_divisor(a % b, b);\n  }\n\
    \  return greatest_common_divisor(a, b % a);", "    assert(a >= 0);\n    assert(b\
    \ >= 0);\n    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n   \
    \     return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    assert(a\
    \ > 0 && b > 0);\n    if (a < b) {\n        std::swap(a, b);\n    }\n    while\
    \ (b > 0) {\n        long r = a % b;\n        a = b;\n        b = r;\n    }\n\
    \    return a;", "    // TODO: implement this function\n    if(a==0)\n       \
    \ return b;\n    if(b==0)\n        return a;\n    if(a==b)\n        return a;\n\
    \    if(a>b)\n        return greatest_common_divisor(a-b,b);\n    return greatest_common_divisor(a,b-a);",
  "\tif (a < b) {\n\t\tlong temp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\tif (b ==\
    \ 0) {\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b, a % b);", "  \
    \  if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    }\n    return greatest_common_divisor(a, b % a);", "    assert(a >= 0 &&\
    \ b >= 0);\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a >\
    \ b) return greatest_common_divisor(a % b, b);\n    else return greatest_common_divisor(a,\
    \ b % a);", "    long c;\n    while (a != 0) {\n        c = a;\n        a = b\
    \ % a;\n        b = c;\n    }\n    return b;", "    long c;\n    while (a != 0)\
    \ {\n        c = a;\n        a = b % a;\n        b = c;\n    }\n    return b;",
  "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    }\n    return greatest_common_divisor(a, b % a);", "    long c;\n    while\
    \ ( a != 0 ) {\n        c = a; a = b%a;  b = c;\n    }\n    return b;", "    if\
    \ (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n\
    \    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    }\n    return greatest_common_divisor(a, b % a);", "    assert(a >= 0);\n\
    \    assert(b >= 0);\n    if (a == 0) {\n        return b;\n    }\n    if (b ==\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    long c;\n    while ( a != 0 ) {\n        c = a; a = b%a;  b = c;\n\
    \    }\n    return b;", "  if (a == 0) {\n    return b;\n  }\n  if (b == 0) {\n\
    \    return a;\n  }\n  if (a > b) {\n    return greatest_common_divisor(a % b,\
    \ b);\n  }\n  return greatest_common_divisor(a, b % a);", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b % a);", "    if (a == 0 || b == 0) {\n        return\
    \ 0;\n    }\n    if (a == b) {\n        return a;\n    }\n    if (a > b) {\n \
    \       return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);", "    // TODO: implement\
    \ this function\n    long gcd = 1;\n    for (long i = 1; i <= a && i <= b; i++)\
    \ {\n        if (a % i == 0 && b % i == 0) {\n            gcd = i;\n        }\n\
    \    }\n    return gcd;", "    if (a == 0) {\n        return b;\n    }\n    if\
    \ (b == 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    return greatest_common_divisor(a, b % a);", "    if (a\
    \ == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a > b)\n\
    \        return greatest_common_divisor(a % b, b);\n    else\n        return greatest_common_divisor(a,\
    \ b % a);"]
stop_tokens:
- "\n}"
